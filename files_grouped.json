{
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_complete.php": ["<?php","/** PATH: /public_html/maintenance/wo_complete.php"," * PURPOSE:"," *  - Complete/close a Work Order."," *  - If linked to an interval, roll the interval (last_completed_on, next_due_date)."," * SECURITY: maintenance.wo.manage"," * NOTE: Uses status='completed' to match schema/enum."," */","declare(strict_types=1);","","$ROOT = dirname(__DIR__);","require_once $ROOT . '/includes/auth.php';","require_once $ROOT . '/includes/db.php';","require_once $ROOT . '/includes/rbac.php';","","require_login();","require_permission('maintenance.wo.manage');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$woId = (int)($_GET['id'] ?? $_POST['id'] ?? 0);","if ($woId <= 0) { http_response_code(400); exit('Invalid WO id'); }","","function next_due_from(string $freq, int $count, int $customDays, DateTimeImmutable $base): string {","  $count = max(1, $count);","  return match ($freq) {","    'daily'       => $base->modify(\"+{$count} day\")->format('Y-m-d'),","    'weekly'      => $base->modify(\"+{$count} week\")->format('Y-m-d'),","    'monthly'     => $base->modify(\"+{$count} month\")->format('Y-m-d'),","    'quarterly'   => $base->modify(\"+\".(3 * $count).\" month\")->format('Y-m-d'),","    'semiannual'  => $base->modify(\"+\".(6 * $count).\" month\")->format('Y-m-d'),","    'annual'      => $base->modify(\"+{$count} year\")->format('Y-m-d'),","    'custom'      => $base->modify(\"+\".max(1, $customDays).\" day\")->format('Y-m-d'),","    default       => $base->modify(\"+{$count} month\")->format('Y-m-d'),","  };","}","","try {","  // Load WO","  $st = $pdo->prepare(\"","    SELECT id, wo_code, machine_id, interval_id, status, due_date, down_from, up_at","      FROM maintenance_work_orders","     WHERE id = ?\");","  $st->execute([$woId]);","  $wo = $st->fetch(PDO::FETCH_ASSOC);","  if (!$wo) { http_response_code(404); exit('Work Order not found'); }","","  $today = new DateTimeImmutable('today');","","  $pdo->beginTransaction();","","  // If tied to an interval \u2192 roll it forward","  if (!empty($wo['interval_id'])) {","    $stIv = $pdo->prepare(\"","      SELECT id, program_id, title, frequency, interval_count, custom_days","        FROM maintenance_intervals","       WHERE id = ?\");","    $stIv->execute([(int)$wo['interval_id']]);","    if ($iv = $stIv->fetch(PDO::FETCH_ASSOC)) {","      $next = next_due_from(","        (string)$iv['frequency'],","        (int)($iv['interval_count'] ?? 1),","        (int)($iv['custom_days'] ?? 0),","        $today","      );","      $pdo->prepare(\"","        UPDATE maintenance_intervals","           SET last_completed_on = ?, next_due_date = ?, updated_at = NOW()","         WHERE id = ?","      \")->execute([$today->format('Y-m-d'), $next, (int)$iv['id']]);","    }","  }","","  // Mark WO completed (enum-safe)","  $pdo->prepare(\"","    UPDATE maintenance_work_orders","       SET status='completed',","           up_at = COALESCE(up_at, NOW())","     WHERE id = ?","  \")->execute([$woId]);","","  // Best-effort maintenance log (ignore failure)","  try {","    $pdo->prepare(\"","      INSERT INTO maintenance_logs (machine_id, wo_id, performed_on, meter_value, remarks, created_by, created_at) VALUES (?, ?, NOW(), NULL, ?, ?, NOW()))","    \")->execute([","      (int)$wo['machine_id'],","      $today->format('Y-m-d'),","      'WO completed: ' . (string)($wo['wo_code'] ?? $woId),","      (int)current_user_id()","    ]);","  } catch (Throwable $e) { /* non-blocking */ }","","  $pdo->commit();","  header('Location: /maintenance/wo_view.php?id=' . $woId . '&ok=1');","  exit;","","} catch (Throwable $e) {","  if ($pdo->inTransaction()) $pdo->rollBack();","  http_response_code(500);","  echo \"Complete failed: \" . $e->getMessage();","  exit;","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_task_toggle.php": ["<?php","/** PATH: /public_html/maintenance/wo_task_toggle.php"," * PURPOSE: Toggle one task status between 'todo' and 'done'"," * PERMS: maintenance.wo.manage"," */","declare(strict_types=1);","","$ROOT = dirname(__DIR__);","require_once $ROOT . '/includes/auth.php';","require_once $ROOT . '/includes/db.php';","require_once $ROOT . '/includes/rbac.php';","require_once $ROOT . '/includes/csrf.php';","","require_login();","require_permission('maintenance.wo.manage');","","$pdo = db();","csrf_require_token();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$id   = (int)($_POST['id'] ?? 0);","$woId = (int)($_POST['wo_id'] ?? 0);","$to   = (string)($_POST['to'] ?? '');","","if ($id <= 0 || $woId <= 0 || !in_array($to, ['todo','done'], true)) {","  http_response_code(400); exit('Invalid params');","}","","$st = $pdo->prepare(\"UPDATE maintenance_wo_tasks SET status=? WHERE id=? AND wo_id=?\");","$st->execute([$to, $id, $woId]);","","header('Location: /maintenance/wo_view.php?id=' . $woId);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_form.php": ["<?php","/** PATH: /public_html/maintenance/wo_form.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/machines_helpers.php';","","require_login();","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$id = (int)($_GET['id'] ?? 0);","$is_edit = $id > 0;","if ($is_edit) require_permission('maintenance.wo.view'); else require_permission('maintenance.wo.manage');","","function allocate_wo_code(PDO $pdo): string {","  $year = date('Y');","  $lock = \"wo_code_$year\";","  $pdo->query(\"SELECT GET_LOCK('$lock', 10)\");","  try {","    $st = $pdo->prepare(\"SELECT MAX(CAST(SUBSTRING(wo_code, 10) AS UNSIGNED)) FROM maintenance_work_orders WHERE wo_code LIKE ?\");","    $st->execute([\"WO-$year-%\"]);","    $next = ((int)$st->fetchColumn()) + 1;","    return sprintf(\"WO-%s-%04d\", $year, $next);","  } finally {","    $pdo->query(\"SELECT RELEASE_LOCK('$lock')\");","  }","}","function sum_array_amount(array $arr, string $key): float { $t=0.0; foreach($arr as $r){ $t+=(float)($r[$key]??0);} return $t; }","","$machines = $pdo->query(\"SELECT id, CONCAT(machine_id,' - ',name) AS label FROM machines ORDER BY machine_id\")->fetchAll(PDO::FETCH_KEY_PAIR);","$mtypes   = $pdo->query(\"SELECT id, CONCAT(code,' - ',name) AS label FROM maintenance_types ORDER BY code\")->fetchAll(PDO::FETCH_KEY_PAIR);","","$wo = [","  'wo_code'=>'','machine_id'=> (int)($_GET['machine_id'] ?? 0),'interval_id'=>null,","  'title'=> (string)($_GET['title'] ?? ''),'description'=>null,'maintenance_type_id'=>null,'priority'=>'medium',","  'status'=>'open','due_date'=>null,'reported_by'=>null,'down_from'=>null,'up_at'=>null,","  'parts_cost'=>0,'labour_cost_internal'=>0,'labour_cost_vendor'=>0,'misc_cost'=>0,'total_cost'=>0","];","$tasks=[]; $parts=[]; $labour=[];","$interval_id = (int)($_GET['interval_id'] ?? 0);","if (!$is_edit && $interval_id) {","  $st = $pdo->prepare(\"SELECT mi.*, mp.machine_id FROM maintenance_intervals mi JOIN maintenance_programs mp ON mp.id=mi.program_id WHERE mi.id=?\");","  $st->execute([$interval_id]);","  if ($ir=$st->fetch(PDO::FETCH_ASSOC)) {","    $wo['machine_id']=(int)$ir['machine_id']; $wo['interval_id']=(int)$ir['id']; $wo['title']=(string)$ir['title']; $wo['maintenance_type_id']=(int)$ir['maintenance_type_id']; $wo['due_date']=$ir['next_due_date'];","    if (!empty($ir['checklist_json'])) { $chk=json_decode((string)$ir['checklist_json'], true); if (is_array($chk)) foreach($chk as $c) $tasks[]=['task'=>(string)($c['task']??(is_string($c)?$c:'')),'status'=>'pending']; }","    if (!empty($ir['parts_json'])) { $pj=json_decode((string)$ir['parts_json'], true); if (is_array($pj)) foreach($pj as $p) $parts[]=['item_id'=>(int)($p['item_id']??0)?:null,'description'=>(string)($p['description']??''),'qty'=>(float)($p['qty']??0),'uom_id'=>(int)($p['uom_id']??0)?:null,'rate'=>(float)($p['rate']??0),'amount'=>(float)($p['amount']??0)]; }","  }","}","if ($is_edit) {","  $st=$pdo->prepare(\"SELECT * FROM maintenance_work_orders WHERE id=?\"); $st->execute([$id]); $wo=$st->fetch(PDO::FETCH_ASSOC) ?: $wo;","  $tasks=$pdo->query(\"SELECT * FROM maintenance_wo_tasks WHERE wo_id=$id ORDER BY id\")->fetchAll(PDO::FETCH_ASSOC);","  $parts=$pdo->query(\"SELECT * FROM maintenance_wo_parts WHERE wo_id=$id ORDER BY id\")->fetchAll(PDO::FETCH_ASSOC);","  $labour=$pdo->query(\"SELECT * FROM maintenance_wo_labour WHERE wo_id=$id ORDER BY id\")->fetchAll(PDO::FETCH_ASSOC);","}","$errors=[]; $ok='';","if ($_SERVER['REQUEST_METHOD']==='POST') {","  csrf_require_token();","  $wo['machine_id']=(int)($_POST['machine_id'] ?? 0);","  $wo['interval_id']=($_POST['interval_id'] ?? '')!==''?(int)$_POST['interval_id']:null;","  $wo['title']=trim((string)($_POST['title'] ?? ''));","  $wo['description']=trim((string)($_POST['description'] ?? '')) ?: null;","  $wo['maintenance_type_id']=($_POST['maintenance_type_id'] ?? '')!==''?(int)$_POST['maintenance_type_id']:null;","  $wo['priority']=(string)($_POST['priority'] ?? 'medium');","  $wo['status']=(string)($_POST['status'] ?? 'open');","  $wo['due_date']=($_POST['due_date'] ?? '') ?: null;","  $wo['down_from']=($_POST['down_from'] ?? '') ?: null;","  $wo['up_at']=($_POST['up_at'] ?? '') ?: null;","","  $tasks = array_values((array)($_POST['tasks'] ?? []));","  $parts = array_values((array)($_POST['parts'] ?? []));","  $labour= array_values((array)($_POST['labour'] ?? []));","","  $parts_total = sum_array_amount($parts, 'amount');","  $lab_int=0.0; $lab_vend=0.0;","  foreach ($labour as $l){ $amt=(float)($l['amount']??0); if((string)($l['role_name']??'')==='vendor') $lab_vend+=$amt; else $lab_int+=$amt; }","  $misc=(float)($_POST['misc_cost'] ?? 0);","  $wo['parts_cost']=$parts_total; $wo['labour_cost_internal']=$lab_int; $wo['labour_cost_vendor']=$lab_vend; $wo['misc_cost']=$misc; $wo['total_cost']=$parts_total+$lab_int+$lab_vend+$misc;","","  if ($wo['machine_id']<=0) $errors[]='Machine is required';","  if ($wo['title']==='')    $errors[]='Title is required';","","  if (!$errors) {","    $pdo->beginTransaction();","    try {","      if ($is_edit) {","        $sql=\"UPDATE maintenance_work_orders SET title=?, description=?, maintenance_type_id=?, priority=?, status=?, due_date=?, interval_id=?, down_from=?, up_at=?, parts_cost=?, labour_cost_internal=?, labour_cost_vendor=?, misc_cost=?, total_cost=?, updated_at=NOW() WHERE id=?\";","        $pdo->prepare($sql)->execute([$wo['title'],$wo['description'],$wo['maintenance_type_id'],$wo['priority'],$wo['status'],$wo['due_date'],$wo['interval_id'],$wo['down_from'],$wo['up_at'],$wo['parts_cost'],$wo['labour_cost_internal'],$wo['labour_cost_vendor'],$wo['misc_cost'],$wo['total_cost'],$id]);","      } else {","        $wo_code = allocate_wo_code($pdo);","        $sql=\"INSERT INTO maintenance_work_orders (wo_code,machine_id,interval_id,title,description,maintenance_type_id,priority,status,due_date,reported_by,reported_at,down_from,up_at,parts_cost,labour_cost_internal,labour_cost_vendor,misc_cost,total_cost,created_by,created_at) VALUES (?,?,?,?,?,?,?,?,?, ?, NOW(), ?, ?, ?, ?, ?, ?, ?, ?, NOW())\";","        $pdo->prepare($sql)->execute([$wo_code,$wo['machine_id'],$wo['interval_id'],$wo['title'],$wo['description'],$wo['maintenance_type_id'],$wo['priority'],$wo['status'],$wo['due_date'],current_user_id(),$wo['down_from'],$wo['up_at'],$wo['parts_cost'],$wo['labour_cost_internal'],$wo['labour_cost_vendor'],$wo['misc_cost'],$wo['total_cost'],current_user_id()]);","        $id=(int)$pdo->lastInsertId(); $is_edit=true;","      }","      $pdo->prepare(\"DELETE FROM maintenance_wo_tasks WHERE wo_id=?\")->execute([$id]);","      if ($tasks) { $ins=$pdo->prepare(\"INSERT INTO maintenance_wo_tasks (wo_id,task,status) VALUES (?,?,?)\"); foreach($tasks as $t){ $task=trim((string)($t['task']??'')); if($task==='') continue; $status=in_array(($t['status']??'pending'),['pending','done'],true)?$t['status']:'pending'; $ins->execute([$id,$task,$status]); } }","      $pdo->prepare(\"DELETE FROM maintenance_wo_parts WHERE wo_id=?\")->execute([$id]);","      if ($parts) { $ins=$pdo->prepare(\"INSERT INTO maintenance_wo_parts (wo_id,item_id,description,qty,uom_id,rate,amount,source_doc) VALUES (?,?,?,?,?,?,?,?)\");","        foreach($parts as $p){ $desc=trim((string)($p['description']??'')); $qty=(float)($p['qty']??0); if($desc==='' && $qty<=0) continue;","          $ins->execute([$id, ($p['item_id']??'')!==''?(int)$p['item_id']:null, $desc, $qty, ($p['uom_id']??'')!==''?(int)$p['uom_id']:null, ($p['rate']??'')!==''?(float)$p['rate']:null, ($p['amount']??'')!==''?(float)$p['amount']:null, trim((string)($p['source_doc']??''))?:null]); } }","      $pdo->prepare(\"DELETE FROM maintenance_wo_labour WHERE wo_id=?\")->execute([$id]);","      if ($labour) { $ins=$pdo->prepare(\"INSERT INTO maintenance_wo_labour (wo_id,staff_id,role_name,entry_date,hours,rate,amount,shift,notes) VALUES (?,?,?,?,?,?,?,?,?)\");","        foreach($labour as $l){ $entry_date=(string)($l['entry_date']??''); if($entry_date==='') continue;","          $ins->execute([$id, ($l['staff_id']??'')!==''?(int)$l['staff_id']:null, trim((string)($l['role_name']??''))?:null, $entry_date, (float)($l['hours']??0), (float)($l['rate']??0), (float)($l['amount']??0), in_array(($l['shift']??null),['A','B','C'],true)?$l['shift']:null, trim((string)($l['notes']??''))?:null]); } }","      $pdo->commit();","      $ok='Saved.';","      $st=$pdo->prepare(\"SELECT * FROM maintenance_work_orders WHERE id=?\"); $st->execute([$id]); $wo=$st->fetch(PDO::FETCH_ASSOC) ?: $wo;","    } catch(Throwable $e){ $pdo->rollBack(); $errors[]='Save failed: '.$e->getMessage(); }","  }","}","","$holder = (int)$wo['machine_id']>0 ? machine_current_holder($pdo, (int)$wo['machine_id']) : null;","","$PAGE_TITLE = $is_edit ? \"Work Order \".($wo['wo_code'] ?? '') : \"New Work Order\";","$ACTIVE_MENU = 'machines.list';","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h5 mb-0\"><?=$PAGE_TITLE?></h1>","  <div class=\"d-flex gap-2\">","    <?php if ($holder): ?>","      <span class=\"badge bg-warning text-dark align-self-center\">Held by <?=htmlspecialchars($holder['contractor_code'].' \u2014 '.$holder['contractor_name'])?></span>","    <?php endif; ?>","    <div class=\"btn-group btn-group-sm\">","      <?php if ((int)$wo['machine_id']>0): ?>","        <a class=\"btn btn-outline-secondary\" href=\"/maintenance/programs_list.php?machine_id=<?=$wo['machine_id']?>\">Programs</a>","        <a class=\"btn btn-outline-dark\" href=\"/maintenance/wo_list.php?machine_id=<?=$wo['machine_id']?>\">WO List</a>","        <a class=\"btn btn-outline-danger\" href=\"/maintenance/breakdown_quick_create.php?machine_id=<?=$wo['machine_id']?>&symptom=Breakdown%20reported&severity=high\">+ Breakdown</a>","        <?php if ($holder): ?>","          <a class=\"btn btn-success\" href=\"/maintenance_alloc/allocations_return.php?id=<?=$holder['alloc_id']?>\">Return</a>","        <?php else: ?>","          <a class=\"btn btn-success\" href=\"/maintenance_alloc/allocations_form.php?machine_id=<?=$wo['machine_id']?>\">Issue</a>","        <?php endif; ?>","      <?php endif; ?>","    </div>","    <a class=\"btn btn-light btn-sm\" href=\"/maintenance/wo_list.php?machine_id=<?=(int)$wo['machine_id']?>\">Back</a>","    <?php if (!$is_edit && has_permission('maintenance.wo.manage')): ?>","      <button form=\"woForm\" class=\"btn btn-primary btn-sm\">Create</button>","    <?php elseif (has_permission('maintenance.wo.manage')): ?>","      <button form=\"woForm\" class=\"btn btn-primary btn-sm\">Save</button>","    <?php endif; ?>","  </div>","</div>","","<?php if ($errors): ?><div class=\"alert alert-danger\"><ul class=\"mb-0\"><?php foreach($errors as $e) echo '<li>'.htmlspecialchars($e).'</li>'; ?></ul></div>","<?php elseif ($ok): ?><div class=\"alert alert-success\"><?=$ok?></div><?php endif; ?>","","<form id=\"woForm\" method=\"post\" class=\"row g-3\">","  <?= csrf_hidden_input() ?>","  <div class=\"col-md-4\">","    <label class=\"form-label\">Machine</label>","    <select name=\"machine_id\" class=\"form-select\" required>","      <option value=\"\">\u2014 choose \u2014</option>","      <?php foreach ($machines as $mid=>$label): ?>","        <option value=\"<?=$mid?>\" <?= (int)$wo['machine_id']===$mid?'selected':'' ?>><?=htmlspecialchars((string)$label)?></option>","      <?php endforeach; ?>","    </select>","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Maintenance Type</label>","    <select name=\"maintenance_type_id\" class=\"form-select\">","      <option value=\"\">\u2014</option>","      <?php foreach ($mtypes as $tid=>$label): ?>","        <option value=\"<?=$tid?>\" <?= (int)($wo['maintenance_type_id'] ?? 0)===$tid?'selected':'' ?>><?=htmlspecialchars($label)?></option>","      <?php endforeach; ?>","    </select>","  </div>","  <div class=\"col-md-2\">","    <label class=\"form-label\">Priority</label>","    <select name=\"priority\" class=\"form-select\">","      <?php foreach (['low','medium','high'] as $p): ?>","        <option value=\"<?=$p?>\" <?= ($wo['priority'] ?? 'medium')===$p?'selected':'' ?>><?=ucfirst($p)?></option>","      <?php endforeach; ?>","    </select>","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Status</label>","    <select name=\"status\" class=\"form-select\">","      <?php foreach (['open','in_progress','waiting_parts','completed','cancelled'] as $s): ?>","        <option value=\"<?=$s?>\" <?= ($wo['status'] ?? 'open')===$s?'selected':'' ?>><?=ucwords(str_replace('_',' ',$s))?></option>","      <?php endforeach; ?>","    </select>","  </div>","","  <div class=\"col-md-8\">","    <label class=\"form-label\">Title</label>","    <input name=\"title\" class=\"form-control\" required value=\"<?=htmlspecialchars((string)$wo['title'])?>\">","  </div>","  <div class=\"col-md-4\">","    <label class=\"form-label\">Due Date</label>","    <input type=\"date\" name=\"due_date\" class=\"form-control\" value=\"<?=htmlspecialchars((string)$wo['due_date'] ?? '')?>\">","  </div>","","  <div class=\"col-12\">","    <label class=\"form-label\">Description</label>","    <textarea name=\"description\" class=\"form-control\" rows=\"3\"><?=htmlspecialchars((string)($wo['description'] ?? ''))?></textarea>","  </div>","","  <div class=\"col-md-3\">","    <label class=\"form-label\">Linked Interval</label>","    <input name=\"interval_id\" class=\"form-control\" value=\"<?=htmlspecialchars((string)($wo['interval_id'] ?? ''))?>\">","    <div class=\"form-text\">Optional: link to a planned interval ID.</div>","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Down From</label>","    <input type=\"datetime-local\" name=\"down_from\" class=\"form-control\" value=\"<?= $wo['down_from'] ? date('Y-m-d\\TH:i', strtotime((string)$wo['down_from'])) : '' ?>\">","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Up At</label>","    <input type=\"datetime-local\" name=\"up_at\" class=\"form-control\" value=\"<?= $wo['up_at'] ? date('Y-m-d\\TH:i', strtotime((string)$wo['up_at'])) : '' ?>\">","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Misc Cost (\u20b9)</label>","    <input type=\"number\" step=\"0.01\" name=\"misc_cost\" class=\"form-control\" value=\"<?=htmlspecialchars((string)$wo['misc_cost'])?>\">","  </div>","","  <hr class=\"mt-4\">","","  <h6>Tasks</h6>","  <div id=\"tasksWrap\" class=\"mb-2\">","    <?php foreach ($tasks ?: [['task'=>'','status'=>'pending']] as $i=>$t): ?>","      <div class=\"row g-2 mb-2\">","        <div class=\"col-md-8\"><input class=\"form-control\" name=\"tasks[<?=$i?>][task]\" placeholder=\"Task\u2026\" value=\"<?=htmlspecialchars((string)($t['task'] ?? ''))?>\"></div>","        <div class=\"col-md-3\">","          <select class=\"form-select\" name=\"tasks[<?=$i?>][status]\">","            <?php foreach (['pending','done'] as $ts): ?>","              <option value=\"<?=$ts?>\" <?= (($t['status'] ?? 'pending')===$ts)?'selected':'' ?>><?=ucfirst($ts)?></option>","            <?php endforeach; ?>","          </select>","        </div>","        <div class=\"col-md-1 text-end\">","          <button type=\"button\" class=\"btn btn-outline-danger btn-sm\" onclick=\"this.closest('.row').remove()\">\u00d7</button>","        </div>","      </div>","    <?php endforeach; ?>","  </div>","  <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" onclick=\"addTask()\">+ Add Task</button>","","  <h6 class=\"mt-4\">Parts</h6>","  <div id=\"partsWrap\" class=\"mb-2\">","    <?php foreach ($parts ?: [['description'=>'','qty'=>'','uom_id'=>'','rate'=>'','amount'=>'']] as $i=>$p): ?>","      <div class=\"row g-2 mb-2\">","        <div class=\"col-md-5\"><input class=\"form-control\" name=\"parts[<?=$i?>][description]\" placeholder=\"Description\" value=\"<?=htmlspecialchars((string)($p['description'] ?? ''))?>\"></div>","        <div class=\"col-md-2\"><input type=\"number\" step=\"0.001\" class=\"form-control\" name=\"parts[<?=$i?>][qty]\" placeholder=\"Qty\" value=\"<?=htmlspecialchars((string)($p['qty'] ?? ''))?>\"></div>","        <div class=\"col-md-2\"><input class=\"form-control\" name=\"parts[<?=$i?>][uom_id]\" placeholder=\"UOM ID\" value=\"<?=htmlspecialchars((string)($p['uom_id'] ?? ''))?>\"></div>","        <div class=\"col-md-1\"><input type=\"number\" step=\"0.01\" class=\"form-control\" name=\"parts[<?=$i?>][rate]\" placeholder=\"Rate\" value=\"<?=htmlspecialchars((string)($p['rate'] ?? ''))?>\"></div>","        <div class=\"col-md-1\"><input type=\"number\" step=\"0.01\" class=\"form-control\" name=\"parts[<?=$i?>][amount]\" placeholder=\"Amt\" value=\"<?=htmlspecialchars((string)($p['amount'] ?? ''))?>\"></div>","        <div class=\"col-md-1 text-end\"><button type=\"button\" class=\"btn btn-outline-danger btn-sm\" onclick=\"this.closest('.row').remove()\">\u00d7</button></div>","      </div>","    <?php endforeach; ?>","  </div>","  <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" onclick=\"addPart()\">+ Add Part</button>","","  <h6 class=\"mt-4\">Labour</h6>","  <div id=\"labourWrap\" class=\"mb-2\">","    <?php foreach ($labour ?: [['entry_date'=>date('Y-m-d'),'hours'=>'','rate'=>'','amount'=>'','role_name'=>'']] as $i=>$l): ?>","      <div class=\"row g-2 mb-2\">","        <div class=\"col-md-2\"><input type=\"date\" class=\"form-control\" name=\"labour[<?=$i?>][entry_date]\" value=\"<?=htmlspecialchars((string)($l['entry_date'] ?? date('Y-m-d')))?>\"></div>","        <div class=\"col-md-2\"><input class=\"form-control\" name=\"labour[<?=$i?>][role_name]\" placeholder=\"Role/vendor\" value=\"<?=htmlspecialchars((string)($l['role_name'] ?? ''))?>\"></div>","        <div class=\"col-md-2\"><input type=\"number\" step=\"0.01\" class=\"form-control\" name=\"labour[<?=$i?>][hours]\" placeholder=\"Hours\" value=\"<?=htmlspecialchars((string)($l['hours'] ?? ''))?>\"></div>","        <div class=\"col-md-2\"><input type=\"number\" step=\"0.01\" class=\"form-control\" name=\"labour[<?=$i?>][rate]\" placeholder=\"Rate\" value=\"<?=htmlspecialchars((string)($l['rate'] ?? ''))?>\"></div>","        <div class=\"col-md-2\"><input type=\"number\" step=\"0.01\" class=\"form-control\" name=\"labour[<?=$i?>][amount]\" placeholder=\"Amount\" value=\"<?=htmlspecialchars((string)($l['amount'] ?? ''))?>\"></div>","        <div class=\"col-md-1\">","          <select class=\"form-select\" name=\"labour[<?=$i?>][shift]\"><option value=\"\">-</option><option<?=($l['shift']??'')==='A'?' selected':''?>>A</option><option<?=($l['shift']??'')==='B'?' selected':''?>>B</option><option<?=($l['shift']??'')==='C'?' selected':''?>>C</option></select>","        </div>","        <div class=\"col-md-1 text-end\"><button type=\"button\" class=\"btn btn-outline-danger btn-sm\" onclick=\"this.closest('.row').remove()\">\u00d7</button></div>","      </div>","    <?php endforeach; ?>","  </div>","  <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" onclick=\"addLabour()\">+ Add Labour</button>","","  <div class=\"col-12 text-end\">","    <button class=\"btn btn-primary\"><?= $is_edit ? 'Save' : 'Create' ?></button>","  </div>","</form>","","<script>","function addTask(){ const w=document.getElementById('tasksWrap'); const i=w.querySelectorAll('.row').length;","  w.insertAdjacentHTML('beforeend', `<div class=\"row g-2 mb-2\">","    <div class=\"col-md-8\"><input class=\"form-control\" name=\"tasks[${i}][task]\" placeholder=\"Task\u2026\"></div>","    <div class=\"col-md-3\"><select class=\"form-select\" name=\"tasks[${i}][status]\"><option value=\"pending\">Pending</option><option value=\"done\">Done</option></select></div>","    <div class=\"col-md-1 text-end\"><button type=\"button\" class=\"btn btn-outline-danger btn-sm\" onclick=\"this.closest('.row').remove()\">\u00d7</button></div>","  </div>`); }","function addPart(){ const w=document.getElementById('partsWrap'); const i=w.querySelectorAll('.row').length;","  w.insertAdjacentHTML('beforeend', `<div class=\"row g-2 mb-2\">","    <div class=\"col-md-5\"><input class=\"form-control\" name=\"parts[${i}][description]\" placeholder=\"Description\"></div>","    <div class=\"col-md-2\"><input type=\"number\" step=\"0.001\" class=\"form-control\" name=\"parts[${i}][qty]\" placeholder=\"Qty\"></div>","    <div class=\"col-md-2\"><input class=\"form-control\" name=\"parts[${i}][uom_id]\" placeholder=\"UOM ID\"></div>","    <div class=\"col-md-1\"><input type=\"number\" step=\"0.01\" class=\"form-control\" name=\"parts[${i}][rate]\" placeholder=\"Rate\"></div>","    <div class=\"col-md-1\"><input type=\"number\" step=\"0.01\" class=\"form-control\" name=\"parts[${i}][amount]\" placeholder=\"Amt\"></div>","    <div class=\"col-md-1 text-end\"><button type=\"button\" class=\"btn btn-outline-danger btn-sm\" onclick=\"this.closest('.row').remove()\">\u00d7</button></div>","  </div>`); }","function addLabour(){ const w=document.getElementById('labourWrap'); const i=w.querySelectorAll('.row').length;","  const today = new Date().toISOString().slice(0,10);","  w.insertAdjacentHTML('beforeend', `<div class=\"row g-2 mb-2\">","    <div class=\"col-md-2\"><input type=\"date\" class=\"form-control\" name=\"labour[${i}][entry_date]\" value=\"${today}\"></div>","    <div class=\"col-md-2\"><input class=\"form-control\" name=\"labour[${i}][role_name]\" placeholder=\"Role/vendor\"></div>","    <div class=\"col-md-2\"><input type=\"number\" step=\"0.01\" class=\"form-control\" name=\"labour[${i}][hours]\" placeholder=\"Hours\"></div>","    <div class=\"col-md-2\"><input type=\"number\" step=\"0.01\" class=\"form-control\" name=\"labour[${i}][rate]\" placeholder=\"Rate\"></div>","    <div class=\"col-md-2\"><input type=\"number\" step=\"0.01\" class=\"form-control\" name=\"labour[${i}][amount]\" placeholder=\"Amount\"></div>","    <div class=\"col-md-1\"><select class=\"form-select\" name=\"labour[${i}][shift]\"><option value=\"\">-</option><option>A</option><option>B</option><option>C</option></select></div>","    <div class=\"col-md-1 text-end\"><button type=\"button\" class=\"btn btn-outline-danger btn-sm\" onclick=\"this.closest('.row').remove()\">\u00d7</button></div>","  </div>`); }","</script>","<?php include __DIR__ . '/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/x_machine_type.php": ["<?php","/** PATH: /public_html/maintenance/x_machine_type.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_login();","require_permission('machines.manage');","","$pdo = db();","$machine_id = (int)($_GET['machine_id'] ?? 0);","if(!$machine_id){ echo json_encode(['ok'=>false,'msg'=>'machine_id required']); exit; }","","$st = $pdo->prepare(\"SELECT type_id FROM machines WHERE id=?\");","$st->execute([$machine_id]); // FK exists (machines\u2192machine_types). :contentReference[oaicite:8]{index=8}","$type_id = $st->fetchColumn();","","header('Content-Type: application/json');","echo json_encode(['ok'=>(bool)$type_id,'type_id'=>(int)$type_id]);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/programs_form.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/maintenance/programs_form.php */","$ROOT = dirname(__DIR__);","require_once $ROOT . '/includes/auth.php';","require_once $ROOT . '/includes/db.php';","require_once $ROOT . '/includes/rbac.php';","require_once $ROOT . '/includes/csrf.php';","","require_login();","// If you already have a 'maintenance.manage' permission, switch to that:","require_permission('machines.manage');","","$pdo = db();","","$id = (int)($_GET['id'] ?? 0);","$machine_id = (int)($_GET['machine_id'] ?? 0);","$editing = $id > 0;","","$row = [","  'machine_id'   => $machine_id ?: 0,","  'anchor_date'  => null,","  'default_team' => null,","  'notes'        => null,","];","","// Load program when editing","if ($editing) {","  $st = $pdo->prepare(\"SELECT * FROM maintenance_programs WHERE id = ?\");","  $st->execute([$id]);","  if ($db = $st->fetch(PDO::FETCH_ASSOC)) {","    $row = array_merge($row, $db);","  } else {","    http_response_code(404);","    exit('Program not found');","  }","}","","// Machines for dropdown","$machines = $pdo->query(\"SELECT id, CONCAT(machine_id,' - ',name) AS label FROM machines ORDER BY machine_id\")->fetchAll(PDO::FETCH_KEY_PAIR);","","$errors = [];","$okMsg  = '';","","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  csrf_require_token();","  $row['machine_id']   = (int)($_POST['machine_id'] ?? 0);","  $row['anchor_date']  = $_POST['anchor_date'] ?? null;","  $row['default_team'] = trim((string)($_POST['default_team'] ?? '')) ?: null;","  $row['notes']        = trim((string)($_POST['notes'] ?? '')) ?: null;","","  if ($row['machine_id'] <= 0) $errors[] = 'Machine is required.';","","  // Enforce one program per machine (schema has UNIQUE uq_mp_machine)","  if (!$errors) {","    $u = $pdo->prepare(\"SELECT id FROM maintenance_programs WHERE machine_id = ? \" . ($editing ? \"AND id <> ?\" : \"\"));","    $u->execute($editing ? [$row['machine_id'], $id] : [$row['machine_id']]);","    if ($u->fetch()) $errors[] = 'This machine already has a maintenance program.';","  }","","  if (!$errors) {","    try {","      if ($editing) {","        $sql = \"UPDATE maintenance_programs","                   SET machine_id=?, anchor_date=?, default_team=?, notes=?, updated_at=NOW()","                 WHERE id=?\";","        $pdo->prepare($sql)->execute([","          $row['machine_id'], $row['anchor_date'], $row['default_team'], $row['notes'], $id","        ]);","        $okMsg = 'Program updated.';","      } else {","        $sql = \"INSERT INTO maintenance_programs","                  (machine_id, anchor_date, default_team, notes, created_at, updated_at)","                VALUES (?,?,?,?,NOW(),NOW())\";","        $pdo->prepare($sql)->execute([","          $row['machine_id'], $row['anchor_date'], $row['default_team'], $row['notes']","        ]);","        $id = (int)$pdo->lastInsertId();","        $editing = true;","        $okMsg = 'Program created.';","      }","      // After save, stay on the same page so you can add intervals","      header(\"Location: programs_form.php?id=\".$id.\"&ok=1\");","      exit;","    } catch (Throwable $e) {","      $errors[] = 'Save failed: '.$e->getMessage();","    }","  }","}","","// UI","$PAGE_TITLE = $editing ? 'Edit Maintenance Program' : 'Add Maintenance Program';","include $ROOT . '/ui/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h5 mb-0\"><?= htmlspecialchars($PAGE_TITLE) ?></h1>","  <div class=\"d-flex gap-2\">","    <?php if ($editing): ?>","      <a class=\"btn btn-outline-primary btn-sm\" href=\"/maintenance/intervals_list.php?program_id=<?= (int)$id ?>\">+ Manage Intervals</a>","    <?php endif; ?>","    <a class=\"btn btn-light btn-sm\" href=\"/maintenance/programs_list.php\">Back</a>","  </div>","</div>","","<?php if (!empty($_GET['ok']) && !$errors): ?>","  <div class=\"alert alert-success\">Saved successfully.</div>","<?php endif; ?>","","<?php if ($errors): ?>","  <div class=\"alert alert-danger\">","    <ul class=\"mb-0\"><?php foreach ($errors as $e): ?><li><?= htmlspecialchars($e) ?></li><?php endforeach; ?></ul>","  </div>","<?php endif; ?>","","<form method=\"post\" class=\"row g-3\">","  <?= csrf_hidden_input() ?>","  <div class=\"col-md-6\">","    <label class=\"form-label\">Machine</label>","    <select name=\"machine_id\" class=\"form-select\" required>","      <option value=\"\">-- choose --</option>","      <?php foreach ($machines as $mid => $label): ?>","        <option value=\"<?= (int)$mid ?>\" <?= ((int)$row['machine_id']===(int)$mid)?'selected':'' ?>>","          <?= htmlspecialchars($label) ?>","        </option>","      <?php endforeach; ?>","    </select>","    <div class=\"form-text\">One program per machine (enforced by DB unique key).</div>","  </div>","","  <div class=\"col-md-3\">","    <label class=\"form-label\">Anchor Date</label>","    <input type=\"date\" name=\"anchor_date\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($row['anchor_date'] ?? '')) ?>\">","    <div class=\"form-text\">Used as base for interval scheduling.</div>","  </div>","","  <div class=\"col-md-3\">","    <label class=\"form-label\">Default Team</label>","    <input name=\"default_team\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($row['default_team'] ?? '')) ?>\">","  </div>","","  <div class=\"col-12\">","    <label class=\"form-label\">Notes</label>","    <textarea name=\"notes\" class=\"form-control\" rows=\"2\"><?= htmlspecialchars((string)($row['notes'] ?? '')) ?></textarea>","  </div>","","  <div class=\"col-12 d-flex gap-2\">","    <button class=\"btn btn-primary\">Save</button>","    <?php if ($editing): ?>","      <a class=\"btn btn-outline-secondary\" href=\"/maintenance/intervals_list.php?program_id=<?= (int)$id ?>\">Manage Intervals</a>","    <?php endif; ?>","  </div>","</form>","","<?php include $ROOT . '/ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/intervals_form.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/maintenance/intervals_form.php */","$ROOT = dirname(__DIR__);","require_once $ROOT . '/includes/auth.php';","require_once $ROOT . '/includes/db.php';","require_once $ROOT . '/includes/rbac.php';","require_once $ROOT . '/includes/csrf.php';","","require_login();","require_permission('maintenance.manage');","","$pdo = db();","","$program_id = (int)($_GET['program_id'] ?? 0);","$id         = (int)($_GET['id'] ?? 0);","$editing    = $id > 0;","","// Fallback: if program_id missing but id is present, look it up","if ($program_id <= 0 && $editing) {","  $st = $pdo->prepare(\"SELECT program_id FROM maintenance_intervals WHERE id = ?\");","  $st->execute([$id]);","  $program_id = (int)$st->fetchColumn();","}","","// Still missing? hard-stop with a clear message","if ($program_id <= 0) { http_response_code(400); exit('program_id required'); }","// load program header (for context/breadcrumb) \u2014 NOTE: no p.title in schema","$ph = $pdo->prepare(\"","  SELECT p.id, p.machine_id AS machine_fk, m.machine_id, m.name AS machine_name","  FROM maintenance_programs p","  LEFT JOIN machines m ON m.id = p.machine_id","  WHERE p.id = ?","\");","$ph->execute([$program_id]);","$program = $ph->fetch(PDO::FETCH_ASSOC);","if (!$program) { http_response_code(404); exit('Program not found'); }","","// dropdown: maintenance types","$mtypes = $pdo->query(\"SELECT id, name FROM maintenance_types ORDER BY name\")->fetchAll(PDO::FETCH_KEY_PAIR);","","// default row","$row = [","  'program_id'           => $program_id,","  'maintenance_type_id'  => null,","  'title'                => '',","  'frequency'            => 'monthly',     // enum in your DB: daily/weekly/monthly/quarterly/semiannual/annual/custom_days","  'interval_count'       => 1,","  'custom_days'          => null,","  'notify_before_days'   => null,","  'grace_days'           => null,","  'requires_shutdown'    => 0,","  'priority'             => 0,","  'active'               => 1,","  'last_completed_on'    => null,","  'next_due_date'        => null,","];","","// load existing when editing","if ($editing) {","  $st = $pdo->prepare(\"SELECT * FROM maintenance_intervals WHERE id=? AND program_id=?\");","  $st->execute([$id,$program_id]);","  $db = $st->fetch(PDO::FETCH_ASSOC);","  if (!$db) { http_response_code(404); exit('Interval not found'); }","  $row = array_merge($row, $db);","}","","$errors = [];","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  csrf_require_token();","  $row['program_id']          = $program_id; // lock to current program","  $row['maintenance_type_id'] = (int)($_POST['maintenance_type_id'] ?? 0) ?: null;","  $row['title']               = trim((string)($_POST['title'] ?? '')) ?: null;","  $row['frequency']           = (string)($_POST['frequency'] ?? 'monthly');","  $row['interval_count']      = (int)($_POST['interval_count'] ?? 1);","  $row['custom_days']         = ($_POST['custom_days'] === '' ? null : (int)$_POST['custom_days']);","  $row['notify_before_days']  = ($_POST['notify_before_days'] === '' ? null : (int)$_POST['notify_before_days']);","  $row['grace_days']          = ($_POST['grace_days'] === '' ? null : (int)$_POST['grace_days']);","  $row['requires_shutdown']   = isset($_POST['requires_shutdown']) ? 1 : 0;","  $row['priority']            = (int)($_POST['priority'] ?? 0);","  $row['active']              = isset($_POST['active']) ? 1 : 0;","  $row['last_completed_on']   = $_POST['last_completed_on'] ?: null;","  $row['next_due_date']       = $_POST['next_due_date'] ?: null;","","  if (!$row['maintenance_type_id']) $errors[] = 'Maintenance Type is required.';","  if (!$row['title'])               $errors[] = 'Title is required.';","  if (!in_array($row['frequency'], ['daily','weekly','monthly','quarterly','semiannual','annual','custom_days'], true))","    $errors[] = 'Invalid frequency.';","  if ($row['interval_count'] <= 0) $errors[] = 'Interval count must be positive.';","  if ($row['frequency'] === 'custom_days' && !$row['custom_days'])","    $errors[] = 'Custom days required for frequency = custom_days.';","","  if (!$errors) {","    try {","      if ($editing) {","        $sql = \"UPDATE maintenance_intervals SET","                  maintenance_type_id=?, title=?, frequency=?, interval_count=?, custom_days=?,","                  notify_before_days=?, grace_days=?, requires_shutdown=?, priority=?, active=?,","                  last_completed_on=?, next_due_date=?","                WHERE id=? AND program_id=?\";","        $pdo->prepare($sql)->execute([","          $row['maintenance_type_id'], $row['title'], $row['frequency'], $row['interval_count'], $row['custom_days'],","          $row['notify_before_days'], $row['grace_days'], $row['requires_shutdown'], $row['priority'], $row['active'],","          $row['last_completed_on'], $row['next_due_date'], $id, $program_id","        ]);","      } else {","        $sql = \"INSERT INTO maintenance_intervals","                  (program_id, maintenance_type_id, title, frequency, interval_count, custom_days,","                   notify_before_days, grace_days, requires_shutdown, priority, active,","                   last_completed_on, next_due_date)","                VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)\";","        $pdo->prepare($sql)->execute([","          $program_id, $row['maintenance_type_id'], $row['title'], $row['frequency'], $row['interval_count'], $row['custom_days'],","          $row['notify_before_days'], $row['grace_days'], $row['requires_shutdown'], $row['priority'], $row['active'],","          $row['last_completed_on'], $row['next_due_date']","        ]);","        $id = (int)$pdo->lastInsertId();","      }","      header(\"Location: /maintenance/intervals_list.php?program_id=\".$program_id);","      exit;","    } catch (Throwable $e) {","      $errors[] = 'Save failed: '.$e->getMessage();","    }","  }","}","","// UI","$UI = $ROOT.'/ui';","$PAGE_TITLE = $editing ? 'Edit Interval' : 'Add Interval';","require_once $UI.'/init.php';","require_once $UI.'/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <div>","    <h1 class=\"h5 mb-0\"><?= htmlspecialchars($PAGE_TITLE) ?></h1>","    <div class=\"small text-muted\">","      Program #<?= (int)$program['id'] ?> \u00b7 Machine:","      <strong><?= htmlspecialchars(($program['machine_id'] ?? '') . ($program['machine_name'] ? ' \u2014 '.$program['machine_name'] : '')) ?></strong>","    </div>","  </div>","  <div class=\"d-flex gap-2\">","    <a class=\"btn btn-light btn-sm\" href=\"/maintenance/intervals_list.php?program_id=<?= (int)$program_id ?>\">Back</a>","  </div>","</div>","","<?php if ($errors): ?>","  <div class=\"alert alert-danger\"><ul class=\"mb-0\"><?php foreach ($errors as $e): ?><li><?= htmlspecialchars($e) ?></li><?php endforeach; ?></ul></div>","<?php endif; ?>","","<form method=\"post\" class=\"row g-3\">","  <?= csrf_hidden_input() ?>","  <div class=\"col-md-6\">","    <label class=\"form-label\">Interval Title</label>","    <input name=\"title\" class=\"form-control\" required value=\"<?= htmlspecialchars((string)($row['title'] ?? '')) ?>\" placeholder=\"e.g., Weekly Inspection\">","  </div>","","  <div class=\"col-md-6\">","    <label class=\"form-label\">Maintenance Type</label>","    <select name=\"maintenance_type_id\" class=\"form-select\" required>","      <option value=\"\">\u2014 choose \u2014</option>","      <?php foreach ($mtypes as $tid => $name): ?>","        <option value=\"<?= (int)$tid ?>\" <?= ((int)($row['maintenance_type_id'] ?? 0) === (int)$tid ? 'selected' : '') ?>>","          <?= htmlspecialchars($name) ?>","        </option>","      <?php endforeach; ?>","    </select>","  </div>","","  <div class=\"col-md-6\">","    <label class=\"form-label\">Frequency</label>","    <div class=\"input-group\">","      <select name=\"frequency\" id=\"frequency\" class=\"form-select\">","        <?php foreach (['daily','weekly','monthly','quarterly','semiannual','annual','custom_days'] as $f): ?>","          <option value=\"<?=$f?>\" <?= (($row['frequency'] ?? '')===$f?'selected':'') ?>><?= ucwords(str_replace('_',' ',$f)) ?></option>","        <?php endforeach; ?>","      </select>","      <input type=\"number\" min=\"1\" name=\"interval_count\" class=\"form-control\" value=\"<?= (int)($row['interval_count'] ?? 1) ?>\">","      <span class=\"input-group-text\">count</span>","    </div>","    <div class=\"form-text\">For \u201ccustom days\u201d, also set Custom Days below.</div>","  </div>","","  <div class=\"col-md-2\">","    <label class=\"form-label\">Custom Days</label>","    <input type=\"number\" min=\"1\" name=\"custom_days\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($row['custom_days'] ?? '')) ?>\">","  </div>","  <div class=\"col-md-2\">","    <label class=\"form-label\">Notify Before (days)</label>","    <input type=\"number\" min=\"0\" name=\"notify_before_days\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($row['notify_before_days'] ?? '')) ?>\">","  </div>","  <div class=\"col-md-2\">","    <label class=\"form-label\">Grace Days</label>","    <input type=\"number\" min=\"0\" name=\"grace_days\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($row['grace_days'] ?? '')) ?>\">","  </div>","","  <div class=\"col-md-3\">","    <label class=\"form-label\">Priority</label>","    <input type=\"number\" name=\"priority\" class=\"form-control\" value=\"<?= (int)($row['priority'] ?? 0) ?>\">","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label d-block\">Requires Shutdown</label>","    <input class=\"form-check-input\" type=\"checkbox\" name=\"requires_shutdown\" <?= !empty($row['requires_shutdown'])?'checked':'' ?>>","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label d-block\">Active</label>","    <input class=\"form-check-input\" type=\"checkbox\" name=\"active\" <?= !empty($row['active'])?'checked':'' ?>>","  </div>","","  <div class=\"col-md-3\">","    <label class=\"form-label\">Next Due Date</label>","    <input type=\"date\" name=\"next_due_date\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($row['next_due_date'] ?? '')) ?>\">","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Last Completed On</label>","    <input type=\"date\" name=\"last_completed_on\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($row['last_completed_on'] ?? '')) ?>\">","  </div>","","  <div class=\"col-12 d-flex gap-2\">","    <button class=\"btn btn-primary\">Save</button>","    <?php if ($editing): ?>","      <a class=\"btn btn-outline-danger\" href=\"?program_id=<?= (int)$program_id ?>&id=<?= (int)$id ?>&delete=1\" onclick=\"return confirm('Delete this interval?')\">Delete</a>","    <?php endif; ?>","  </div>","</form>","","<script>","(function(){","  function toggleCustom(){","    var f = document.getElementById('frequency').value;","    var cd = document.querySelector('input[name=\"custom_days\"]');","    cd.disabled = (f !== 'custom_days');","  }","  document.getElementById('frequency').addEventListener('change', toggleCustom);","  toggleCustom();","})();","</script>","","<?php require_once $UI.'/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_list.php": ["<?php","/** PATH: /public_html/maintenance/wo_list.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('maintenance.wo.view');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$machine_id = (int)($_GET['machine_id'] ?? 0);","$status     = (string)($_GET['status'] ?? '');","$q          = trim((string)($_GET['q'] ?? ''));","","// filters","$machines = $pdo->query(\"SELECT id, CONCAT(machine_id,' - ',name) AS label FROM machines ORDER BY machine_id\")->fetchAll(PDO::FETCH_KEY_PAIR);","","$where = [];","$params = [];","if ($machine_id) { $where[] = \"wo.machine_id = ?\"; $params[] = $machine_id; }","if ($status !== '') { $where[] = \"wo.status = CAST(? AS CHAR) COLLATE utf8mb4_general_ci\"; $params[] = $status; }","if ($q !== '') {","  $where[] = \"(wo.wo_code LIKE CONCAT('%', ?, '%') OR wo.title LIKE CONCAT('%', ?, '%') OR m.machine_id LIKE CONCAT('%', ?, '%'))\";","  array_push($params, $q, $q, $q);","}","","$sql = \"SELECT wo.*, m.machine_id, m.name AS machine_name","        FROM maintenance_work_orders wo","        JOIN machines m ON m.id = wo.machine_id","        \" . ($where ? \"WHERE \".implode(\" AND \", $where) : \"\") . \"","        ORDER BY wo.created_at DESC LIMIT 200\";","$st = $pdo->prepare($sql); $st->execute($params); $rows = $st->fetchAll(PDO::FETCH_ASSOC);","","// ui","$PAGE_TITLE = 'Work Orders';","$ACTIVE_MENU = 'machines.list';","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h5 mb-0\">Work Orders</h1>","  <div class=\"d-flex gap-2\">","    <?php if ($machine_id): ?>","      <a class=\"btn btn-outline-secondary btn-sm\" href=\"/machines/machines_list.php?id=<?=$machine_id?>\">Back to Machine</a>","    <?php endif; ?>","    <?php if (has_permission('maintenance.wo.manage')): ?>","      <a class=\"btn btn-primary btn-sm\" href=\"/maintenance/wo_form.php?machine_id=<?=$machine_id?>\">+ Work Order</a>","    <?php endif; ?>","  </div>","</div>","","<form class=\"row g-2 mb-3\">","  <div class=\"col-md-4\">","    <select name=\"machine_id\" class=\"form-select\">","      <option value=\"0\">\u2014 All machines \u2014</option>","      <?php foreach ($machines as $id=>$label): ?>","        <option value=\"<?=$id?>\" <?= $machine_id===$id?'selected':'' ?>><?=htmlspecialchars($label)?></option>","      <?php endforeach; ?>","    </select>","  </div>","  <div class=\"col-md-3\">","    <select name=\"status\" class=\"form-select\">","      <?php foreach (['','open','in_progress','waiting_parts','completed','cancelled'] as $s): ?>","        <option value=\"<?=$s?>\" <?= $status===$s?'selected':'' ?>><?= $s===''?'\u2014 Any status \u2014':ucwords(str_replace('_',' ',$s)) ?></option>","      <?php endforeach; ?>","    </select>","  </div>","  <div class=\"col-md-3\">","    <input class=\"form-control\" name=\"q\" placeholder=\"WO code / title / machine\u2026\" value=\"<?=htmlspecialchars($q)?>\">","  </div>","  <div class=\"col-md-2\">","    <button class=\"btn btn-outline-secondary w-100\">Search</button>","  </div>","</form>","","<div class=\"table-responsive\">","  <table class=\"table table-striped table-hover align-middle\">","    <thead class=\"table-light\">","      <tr>","        <th>WO Code</th><th>Machine</th><th>Title</th><th>Type</th><th>Priority</th><th>Status</th><th>Due</th><th class=\"text-end\">Total \u20b9</th><th style=\"width:120px;\"></th>","      </tr>","    </thead>","    <tbody>","    <?php foreach ($rows as $r): ?>","      <tr>","        <td><code><?=htmlspecialchars((string)$r['wo_code'])?></code></td>","        <td><?=htmlspecialchars((string)$r['machine_id'].' \u2014 '.$r['machine_name'])?></td>","        <td><?=htmlspecialchars((string)$r['title'])?></td>","        <td><?= (int)$r['maintenance_type_id'] ?: '\u2014' ?></td>","        <td><span class=\"badge bg-secondary\"><?=htmlspecialchars((string)$r['priority'])?></span></td>","        <td><span class=\"badge bg-<?= $r['status']==='completed'?'success':($r['status']==='open'?'warning text-dark':'secondary') ?>\"><?=htmlspecialchars((string)$r['status'])?></span></td>","        <td><?=htmlspecialchars((string)$r['due_date'] ?? '')?></td>","        <td class=\"text-end\"><?= number_format((float)$r['total_cost'], 2) ?></td>","        <td class=\"text-end\">","          <a class=\"btn btn-sm btn-outline-primary\" href=\"/maintenance/wo_form.php?id=<?=$r['id']?>\">Open</a>","        </td>","      </tr>","    <?php endforeach; if (!$rows): ?>","      <tr><td colspan=\"9\" class=\"text-muted text-center py-4\">No work orders.</td></tr>","    <?php endif; ?>","    </tbody>","  </table>","</div>","","<?php include __DIR__ . '/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/programs_list.php": ["<?php","/** PATH: /public_html/maintenance/programs_list.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/machines_helpers.php';","","require_login();","require_permission('maintenance.plan.view');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$machine_id = (int)($_GET['machine_id'] ?? 0);","$q = trim((string)($_GET['q'] ?? ''));","","// machine (header)","$machine = null;","if ($machine_id) {","  $st = $pdo->prepare(\"SELECT id, machine_id, name, make, model FROM machines WHERE id=?\");","  $st->execute([$machine_id]);","  $machine = $st->fetch(PDO::FETCH_ASSOC);","}","$holder = $machine ? machine_current_holder($pdo, (int)$machine['id']) : null;","","// list programs","$where = []; $params = [];","if ($machine_id) { $where[]=\"p.machine_id=?\"; $params[]=$machine_id; }","if ($q!=='') { $where[]=\"(p.notes LIKE CONCAT('%', ?, '%') OR COALESCE(p.default_team,'') LIKE CONCAT('%', ?, '%'))\"; array_push($params,$q,$q); }","$sql = \"SELECT p.*, (SELECT COUNT(*) FROM maintenance_intervals mi WHERE mi.program_id=p.id AND mi.active=1) as intervals_count","        FROM maintenance_programs p \".($where?\"WHERE \".implode(\" AND \",$where):\"\").\" ORDER BY p.id DESC\";","$rows = $pdo->prepare($sql); $rows->execute($params); $rows = $rows->fetchAll(PDO::FETCH_ASSOC);","","$PAGE_TITLE = 'Maintenance Programs';","$ACTIVE_MENU = 'machines.list';","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <div>","    <h1 class=\"h5 mb-0\">Maintenance Programs</h1>","    <?php if ($machine): ?>","      <div class=\"text-muted small\">Machine: <strong><?=htmlspecialchars((string)$machine['machine_id'])?></strong> \u2014 <?=htmlspecialchars((string)$machine['name'])?> (<?=htmlspecialchars((string)$machine['make'].' '.$machine['model'])?>)</div>","    <?php endif; ?>","  </div>","  <div class=\"d-flex align-items-center gap-2\">","    <?php if ($holder): ?>","      <span class=\"badge bg-warning text-dark\">Held by <?=htmlspecialchars($holder['contractor_code'].' \u2014 '.$holder['contractor_name'])?></span>","    <?php endif; ?>","    <div class=\"btn-group btn-group-sm\">","      <a class=\"btn btn-outline-dark\" href=\"/maintenance/wo_list.php?machine_id=<?=$machine_id?>\">WO List</a>","      <a class=\"btn btn-outline-primary\" href=\"/maintenance/wo_form.php?machine_id=<?=$machine_id?>\">+ WO</a>","      <a class=\"btn btn-outline-danger\" href=\"/maintenance/breakdown_quick_create.php?machine_id=<?=$machine_id?>&symptom=Breakdown%20reported&severity=high\">+ Breakdown</a>","    </div>","    <a class=\"btn btn-light btn-sm\" href=\"/machines/machines_list.php\">Back to Machines</a>","    <a class=\"btn btn-primary btn-sm\" href=\"/maintenance/programs_form.php?machine_id=<?=$machine_id?>\">+ Program</a>","  </div>","</div>","","<form class=\"row g-2 mb-3\">","  <input type=\"hidden\" name=\"machine_id\" value=\"<?=$machine_id?>\">","  <div class=\"col-md-6\">","    <input class=\"form-control\" name=\"q\" placeholder=\"Search team / notes\u2026\" value=\"<?=htmlspecialchars($q)?>\">","  </div>","  <div class=\"col-md-2\">","    <button class=\"btn btn-outline-secondary w-100\">Search</button>","  </div>","</form>","","<div class=\"table-responsive\">","  <table class=\"table table-striped table-hover align-middle\">","    <thead class=\"table-light\">","      <tr>","        <th>#</th><th>Intervals (active)</th><th>Anchor Date</th><th>Default Team</th><th>Notes</th><th style=\"width:220px;\"></th>","      </tr>","    </thead>","    <tbody>","    <?php foreach ($rows as $r): ?>","      <tr>","        <td><?= (int)$r['id'] ?></td>","        <td><span class=\"badge bg-secondary\"><?= (int)$r['intervals_count'] ?></span></td>","        <td><?= htmlspecialchars((string)$r['anchor_date'] ?? '') ?></td>","        <td><?= htmlspecialchars((string)$r['default_team'] ?? '') ?></td>","        <td><?= htmlspecialchars((string)$r['notes'] ?? '') ?></td>","        <td class=\"text-end\">","          <a class=\"btn btn-sm btn-outline-primary\" href=\"/maintenance/programs_form.php?id=<?=$r['id']?>\">Edit</a>","          <a class=\"btn btn-sm btn-outline-success\" href=\"/maintenance/intervals_generate.php?program_id=<?=$r['id']?>\">Generate Due</a>","          <a class=\"btn btn-sm btn-outline-dark\" href=\"/maintenance/wo_list.php?machine_id=<?=$machine_id?>\">Work Orders</a>","        </td>","      </tr>","    <?php endforeach; if (!$rows): ?>","      <tr><td colspan=\"6\" class=\"text-muted text-center py-4\">No programs yet.</td></tr>","    <?php endif; ?>","    </tbody>","  </table>","</div>","","<?php include __DIR__ . '/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/intervals_list.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/maintenance/intervals_list.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('maintenance.manage');","","$pdo = db();","","// Filters","$programId = isset($_GET['program_id']) ? (int)$_GET['program_id'] : 0;","$q = trim((string)($_GET['q'] ?? ''));","","// WHERE","$w = [];","$p = [];","if ($programId > 0) { $w[] = 'mi.program_id=?'; $p[] = $programId; }","if ($q !== '') {","  $w[] = '('","      .\"mi.title LIKE CONCAT('%', ?, '%')\"","      .\" OR mt.name LIKE CONCAT('%', ?, '%')\"","      .\" OR m.machine_id LIKE CONCAT('%', ?, '%')\"","      .\" OR COALESCE(mp.notes,'') LIKE CONCAT('%', ?, '%')\"","      .\" OR COALESCE(mp.default_team,'') LIKE CONCAT('%', ?, '%')\"","      .')';","  array_push($p, $q, $q, $q, $q, $q);","}","$whereSql = $w ? 'WHERE '.implode(' AND ', $w) : '';","","// Query (matches your schema)","$sql = \"","SELECT","  mi.id, mi.program_id, mi.maintenance_type_id, mi.title,","  mi.frequency, mi.interval_count, mi.custom_days,","  mi.notify_before_days, mi.grace_days, mi.requires_shutdown,","  mi.priority, mi.active, mi.last_completed_on, mi.next_due_date,","  mt.name AS mtype_name,","  m.machine_id, m.name AS machine_name,","  mp.notes, mp.default_team","FROM maintenance_intervals mi","LEFT JOIN maintenance_types    mt ON mt.id = mi.maintenance_type_id","LEFT JOIN maintenance_programs mp ON mp.id = mi.program_id","LEFT JOIN machines             m  ON m.id  = mp.machine_id","$whereSql","ORDER BY m.machine_id, mi.priority DESC, mi.next_due_date IS NULL, mi.next_due_date ASC, mi.id DESC","\";","$st = $pdo->prepare($sql);","$st->execute($p);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","// Program dropdown (label from machine + notes/team)","$progStmt = $pdo->query(\"","  SELECT mp.id, m.machine_id, m.name AS machine_name, mp.notes, mp.default_team","  FROM maintenance_programs mp","  LEFT JOIN machines m ON m.id = mp.machine_id","  ORDER BY m.machine_id, mp.id","\");","$programs = $progStmt->fetchAll(PDO::FETCH_ASSOC);","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h5 mb-0\">Maintenance Intervals</h1>","  <div class=\"d-flex gap-2\">","    <a href=\"intervals_form.php<?= $programId>0 ? ('?program_id='.$programId) : '' ?>\" class=\"btn btn-primary btn-sm\">Add Interval</a>","    <a href=\"programs_list.php\" class=\"btn btn-outline-secondary btn-sm\">Programs</a>","  </div>","</div>","","<form class=\"row g-2 mb-3\" method=\"get\">","  <div class=\"col-md-4\">","    <label class=\"form-label\">Program</label>","    <select name=\"program_id\" class=\"form-select\" onchange=\"this.form.submit()\">","      <option value=\"0\">\u2014 All Programs \u2014</option>","      <?php foreach ($programs as $pgr):","        $bits  = array_filter([$pgr['machine_id'] ?? '', $pgr['machine_name'] ?? '']);","        $suff  = trim(implode(' \u2022 ', array_filter([$pgr['notes'] ?? '', $pgr['default_team'] ?? ''])));","        $label = trim(implode(' \u2014 ', array_filter([implode(' \u2022 ', $bits), $suff])));","        if ($label === '') $label = 'Program #'.$pgr['id'];","      ?>","        <option value=\"<?=$pgr['id']?>\" <?=$programId===(int)$pgr['id']?'selected':''?>><?=htmlspecialchars($label)?></option>","      <?php endforeach; ?>","    </select>","  </div>","  <div class=\"col-md-4\">","    <label class=\"form-label\">Search</label>","    <input name=\"q\" class=\"form-control\" value=\"<?=htmlspecialchars($q)?>\" placeholder=\"Title / Type / Machine / Notes / Team\">","  </div>","  <div class=\"col-md-2 d-grid align-items-end\">","    <button class=\"btn btn-outline-secondary mt-4\">Filter</button>","  </div>","</form>","","<div class=\"table-responsive\">","  <table class=\"table table-hover align-middle\">","    <thead class=\"table-light\">","      <tr>","        <th style=\"width:160px;\">Machine</th>","        <th>Program</th>","        <th>Interval</th>","        <th>Type</th>","        <th>Notify</th>","        <th>Grace</th>","        <th>Shutdown</th>","        <th>Priority</th>","        <th>Last Done</th>","        <th>Next Due</th>","        <th class=\"text-end\" style=\"width:160px;\">Actions</th>","      </tr>","    </thead>","    <tbody>","      <?php foreach ($rows as $r):","        $freq  = (string)$r['frequency'];","        $count = (int)$r['interval_count'];","        $intervalText = '';","        switch ($freq) {","          case 'daily': case 'weekly': case 'monthly': case 'quarterly': case 'semiannual': case 'annual':","            $unit = ['daily'=>'day','weekly'=>'week','monthly'=>'month','quarterly'=>'quarter','semiannual'=>'half-year','annual'=>'year'][$freq];","            $intervalText = 'Every '.($count>1?$count.' ':'').$unit.($count>1?'s':'');","            break;","          case 'custom_days':","            $days = (int)$r['custom_days']; $intervalText = $days>0 ? ('Every '.$days.' days') : 'Custom (days)'; break;","          default: $intervalText = ucfirst($freq);","        }","        $progBits = array_filter([$r['machine_id'] ?? '', $r['machine_name'] ?? '']);","        $progSuff = trim(implode(' \u2022 ', array_filter([$r['notes'] ?? '', $r['default_team'] ?? ''])));","        $progLbl  = trim(implode(' \u2014 ', array_filter([implode(' \u2022 ', $progBits), $progSuff])));","        if ($progLbl === '') $progLbl = 'Program #'.$r['program_id'];","","        $notify = (int)$r['notify_before_days'];","        $grace  = (int)$r['grace_days'];","        $sdBadge = !empty($r['requires_shutdown']) ? '<span class=\"badge text-bg-danger\">Yes</span>' : '<span class=\"badge text-bg-secondary\">No</span>';","        $prio = htmlspecialchars((string)$r['priority']);","        $actBadge = !empty($r['active']) ? '<span class=\"badge text-bg-success\">Active</span>' : '<span class=\"badge text-bg-secondary\">Inactive</span>';","      ?>","      <tr>","        <td class=\"text-nowrap\">","          <div class=\"fw-semibold\"><?=htmlspecialchars((string)$r['machine_id'])?></div>","          <div class=\"small text-muted\"><?=htmlspecialchars((string)$r['machine_name'])?></div>","        </td>","        <td><?=htmlspecialchars($progLbl)?></td>","        <td>","          <div class=\"fw-semibold\"><?=htmlspecialchars((string)$r['title'])?></div>","          <div class=\"small text-muted\"><?=$intervalText?> <?=$actBadge?></div>","        </td>","        <td><?=htmlspecialchars((string)($r['mtype_name'] ?: '-'))?></td>","        <td><?=$notify ? $notify.' d' : '\u2014'?></td>","        <td><?=$grace ? $grace.' d' : '\u2014'?></td>","        <td><?=$sdBadge?></td>","        <td><?= $prio ?></td>","        <td><?=htmlspecialchars($r['last_completed_on'] ?? '\u2014')?></td>","        <td>","          <?php if (!empty($r['next_due_date'])):","            $due = new DateTime((string)$r['next_due_date']);","            $today = new DateTime('today');","            $badge = $due < $today ? 'text-bg-danger' : ($due == $today ? 'text-bg-warning' : 'text-bg-success'); ?>","            <span class=\"badge <?=$badge?>\"><?=htmlspecialchars($r['next_due_date'])?></span>","          <?php else: ?>\u2014<?php endif; ?>","        </td>","        <td class=\"text-end\">","          <a href=\"intervals_form.php?id=<?=$r['id']?>\" class=\"btn btn-sm btn-outline-secondary\">Edit</a>","          <a href=\"intervals_generate.php?id=<?=$r['id']?>\" class=\"btn btn-sm btn-outline-primary\">Generate WO</a>","        </td>","      </tr>","      <?php endforeach; ?>","      <?php if (!$rows): ?>","        <tr><td colspan=\"11\" class=\"text-center text-muted py-4\">No intervals found.</td></tr>","      <?php endif; ?>","    </tbody>","  </table>","</div>","","<?php include __DIR__ . '/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/intervals_generate.php": ["<?php","/** PATH: /public_html/maintenance/intervals_generate.php"," * PURPOSE:"," *   - Generate WO(s) from maintenance intervals."," *   - Works for a single interval (?id=123) or all due in a program (?program_id=45)."," *"," * PHP: 8.4"," */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('maintenance.wo.manage');","","$pdo = db();","// Keep session consistent with rest of app.","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$id         = (int)($_GET['id'] ?? 0);          // maintenance_intervals.id","$program_id = (int)($_GET['program_id'] ?? 0);  // maintenance_programs.id","","if ($id <= 0 && $program_id <= 0) {","  http_response_code(400);","  echo \"Usage: intervals_generate.php?id={interval_id} OR ?program_id={program_id}\";","  exit;","}","","/** Safe, concurrent WO number allocator (same approach as wo_form.php) */","function allocate_wo_code(PDO $pdo): string {","  $year = date('Y');","  $lock = \"wo_code_$year\";","  $pdo->query(\"SELECT GET_LOCK('$lock', 10)\");","  try {","    $st = $pdo->prepare(\"SELECT MAX(CAST(SUBSTRING(wo_code, 10) AS UNSIGNED)) FROM maintenance_work_orders WHERE wo_code LIKE ?\");","    $st->execute([\"WO-$year-%\"]);","    $next = ((int)$st->fetchColumn()) + 1;","    return sprintf(\"WO-%s-%04d\", $year, $next);","  } finally {","    $pdo->query(\"SELECT RELEASE_LOCK('$lock')\");","  }","}","","/** Build one WO for a given interval row (joined with program for machine_id). Returns new WO id or null if skipped. */","function create_wo_for_interval(PDO $pdo, array $iv): ?int {","  // Skip if there is already an open/in-progress WO for this interval","  $chk = $pdo->prepare(\"SELECT id FROM maintenance_work_orders WHERE interval_id=? AND status NOT IN ('closed','cancelled') ORDER BY id DESC LIMIT 1\");","  $chk->execute([(int)$iv['id']]);","  if ($chk->fetchColumn()) return null;","","  $wo_code = allocate_wo_code($pdo);","","  $title   = (string)($iv['title'] ?? 'Scheduled Maintenance');","  $desc    = (string)($iv['description'] ?? null);","  $due     = $iv['next_due_date'] ?? null; // may be null","  $dueStr  = $due ? (string)$due : date('Y-m-d');","","  $ins = $pdo->prepare(\"","    INSERT INTO maintenance_work_orders","      (wo_code, machine_id, interval_id, title, description, maintenance_type_id, priority, status, due_date,","       reported_by, reported_at, down_from, up_at, parts_cost, labour_cost_internal, labour_cost_vendor, misc_cost, total_cost,","       created_by, created_at)","    VALUES","      (?,?,?,?,?,?,?,?,?,","       ?, NOW(), ?, ?, 0, 0, 0, 0, 0,","       ?, NOW())","  \");","","  $ins->execute([","    $wo_code,","    (int)$iv['machine_id'],","    (int)$iv['id'],","    $title,","    $desc ?: null,","    (int)($iv['maintenance_type_id'] ?? 0) ?: null,","    'medium',              // default","    'open',                // new WO starts open","    $dueStr,","    current_user_id(),","    null,                  // down_from","    null,                  // up_at","    current_user_id()","  ]);","","  $wo_id = (int)$pdo->lastInsertId();","","  // Seed tasks: prefer checklist_json if present, else ensure at least one task line = title","  $added = false;","  if (!empty($iv['checklist_json'])) {","    $chk = json_decode((string)$iv['checklist_json'], true);","    if (is_array($chk) && $chk) {","      $insT = $pdo->prepare(\"INSERT INTO maintenance_wo_tasks (wo_id, task, status) VALUES (?,?, 'todo')\");","      foreach ($chk as $t) {","        $task = (string)($t['task'] ?? '');","        if ($task !== '') { $insT->execute([$wo_id, $task]); $added = true; }","      }","    }","  }","  if (!$added) {","    $pdo->prepare(\"INSERT INTO maintenance_wo_tasks (wo_id, task, status) VALUES (?,?, 'todo')\")","        ->execute([$wo_id, $title]);","  }","","  return $wo_id;","}","","// Single interval mode:","if ($id > 0) {","  $st = $pdo->prepare(\"SELECT mi.*, mp.machine_id","                         FROM maintenance_intervals mi","                         JOIN maintenance_programs mp ON mp.id = mi.program_id","                        WHERE mi.id=?\");","  $st->execute([$id]);","  $iv = $st->fetch(PDO::FETCH_ASSOC);","  if (!$iv) { http_response_code(404); echo \"Interval not found\"; exit; }","","  $pdo->beginTransaction();","  try {","    $wo_id = create_wo_for_interval($pdo, $iv);","    $pdo->commit();","    if ($wo_id) {","      header(\"Location: /maintenance/wo_view.php?id=\" . $wo_id);","    } else {","      header(\"Location: /maintenance/intervals_list.php?program_id=\" . (int)$iv['program_id'] . \"&info=exists\");","    }","    exit;","  } catch (Throwable $e) {","    if ($pdo->inTransaction()) $pdo->rollBack();","    http_response_code(500);","    echo \"Generate failed: \" . $e->getMessage();","    exit;","  }","}","","// Program batch mode: create WOs for all intervals due today or earlier","$st = $pdo->prepare(\"SELECT mi.*, mp.machine_id","                       FROM maintenance_intervals mi","                       JOIN maintenance_programs mp ON mp.id = mi.program_id","                      WHERE mi.program_id=? AND mi.next_due_date IS NOT NULL AND mi.next_due_date <= CURDATE()","                      ORDER BY mi.next_due_date, mi.id\");","$st->execute([$program_id]);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","$made = 0;","$pdo->beginTransaction();","try {","  foreach ($rows as $iv) {","    $wo_id = create_wo_for_interval($pdo, $iv);","    if ($wo_id) $made++;","  }","  $pdo->commit();","  header(\"Location: /maintenance/intervals_list.php?program_id=\".$program_id.\"&generated=\".$made);","  exit;","} catch (Throwable $e) {","  if ($pdo->inTransaction()) $pdo->rollBack();","  $msg = urlencode('Generate failed: '.$e->getMessage());","  header(\"Location: /maintenance/intervals_list.php?program_id=\".$program_id.\"&error=\".$msg);","  exit;","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/schedule.php": ["<?php","/** PATH: /public_html/maintenance/schedule.php"," * PURPOSE: Show maintenance person a \"today\" view:"," *  - Due plan items (intervals with next_due_date <= today)"," *  - My open Work Orders due today"," * ACTIONS:"," *  - Generate WO (links to intervals_generate.php)"," *  - Quick Complete (POST to interval_quick_complete.php)"," *"," * PHP 8.4, Bootstrap 5 UI"," */","declare(strict_types=1);","","$ROOT = dirname(__DIR__);","require_once $ROOT . '/includes/auth.php';","require_once $ROOT . '/includes/db.php';","require_once $ROOT . '/includes/rbac.php';","require_once $ROOT . '/includes/csrf.php';","","require_login();","","// Create DB connection BEFORE any queries","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","// KPI badges (non-blocking)","$counts = [","  'overdue_intervals'   => 0,","  'due_today_intervals' => 0,","  'due_week_intervals'  => 0,","  'wo_due_today'        => 0,","  'wo_due_week'         => 0,","];","","try {","  // Overdue / Due Intervals","  $st = $pdo->prepare(\"","    SELECT","      SUM(CASE WHEN mi.next_due_date IS NOT NULL AND mi.next_due_date < CURDATE() THEN 1 ELSE 0 END) AS overdue_intervals,","      SUM(CASE WHEN mi.next_due_date = CURDATE() THEN 1 ELSE 0 END) AS due_today_intervals,","      SUM(CASE WHEN mi.next_due_date > CURDATE() AND mi.next_due_date <= DATE_ADD(CURDATE(), INTERVAL 7 DAY) THEN 1 ELSE 0 END) AS due_week_intervals","    FROM maintenance_intervals mi","    JOIN maintenance_programs mp ON mp.id = mi.program_id","  \");","  $st->execute();","  $counts = array_merge($counts, $st->fetch(PDO::FETCH_ASSOC) ?: []);","","  // Work Orders due","  $st2 = $pdo->prepare(\"","    SELECT","      SUM(CASE WHEN due_date = CURDATE() AND status IN ('open','in_progress','waiting_parts') THEN 1 ELSE 0 END) AS wo_due_today,","      SUM(CASE WHEN due_date > CURDATE() AND due_date <= DATE_ADD(CURDATE(), INTERVAL 7 DAY)","               AND status IN ('open','in_progress','waiting_parts') THEN 1 ELSE 0 END) AS wo_due_week","    FROM maintenance_work_orders","  \");","  $st2->execute();","  $counts = array_merge($counts, $st2->fetch(PDO::FETCH_ASSOC) ?: []);","} catch (Throwable $e) {","  // kpi non-blocking","}","","// Permissions: view schedule; manage allows quick-complete","$canView   = has_permission('maintenance.plan.view') || has_permission('maintenance.wo.view') || is_admin();","$canManage = has_permission('maintenance.plan.manage') || has_permission('maintenance.wo.manage') || is_admin();","if (!$canView) { http_response_code(403); exit('Access denied'); }","","// Filters","$team  = trim((string)($_GET['team'] ?? ''));        // optional program.default_team","$q     = trim((string)($_GET['q'] ?? ''));           // search by machine code/name or interval title","$mine  = (int)($_GET['mine'] ?? 0);                  // reserved for future responsible_user_id","","// Today","$today = (new DateTimeImmutable('today'))->format('Y-m-d');","","// --- Query: Due intervals (next_due_date <= today), active only ---","$where  = [\"mi.active = 1\", \"(mi.next_due_date IS NOT NULL AND mi.next_due_date <= ?)\"];","$params = [$today];","","if ($team !== '') {","  $where[]  = \"mp.default_team = ?\";","  $params[] = $team;","}","if ($q !== '') {","  $like = '%'.$q.'%';","  $where[] = \"(m.machine_id COLLATE utf8mb4_general_ci LIKE ? OR m.name COLLATE utf8mb4_general_ci LIKE ? OR mi.title COLLATE utf8mb4_general_ci LIKE ?)\";","  array_push($params, $like, $like, $like);","}","","$sql_due = \"","SELECT mi.id AS interval_id, mi.title, mi.frequency, mi.interval_count, mi.custom_days,","       mi.next_due_date, mi.requires_shutdown, mi.priority,","       mi.maintenance_type_id, mt.name AS maintenance_type_name,","       mp.id AS program_id, mp.default_team,","       m.id AS machine_id, m.machine_id AS machine_code, m.name AS machine_name","  FROM maintenance_intervals mi","  JOIN maintenance_programs mp ON mp.id = mi.program_id","  JOIN machines m ON m.id = mp.machine_id","  LEFT JOIN maintenance_types mt ON mt.id = mi.maintenance_type_id"," WHERE \" . implode(' AND ', $where) . \""," ORDER BY mi.next_due_date ASC, mi.priority DESC, mi.id ASC"," LIMIT 200\";","$st = $pdo->prepare($sql_due);","$st->execute($params);","$due_rows = $st->fetchAll(PDO::FETCH_ASSOC);","","// --- Query: Open WOs due today (or overdue) ---","$sql_wo = \"","SELECT wo.id, wo.wo_code, wo.title, wo.status, wo.due_date,","       m.machine_id AS machine_code, m.name AS machine_name","  FROM maintenance_work_orders wo","  JOIN machines m ON m.id = wo.machine_id"," WHERE wo.status IN ('open','in_progress') AND wo.due_date IS NOT NULL AND wo.due_date <= ?"," ORDER BY wo.due_date ASC, wo.id DESC"," LIMIT 200\";","$st2 = $pdo->prepare($sql_wo);","$st2->execute([$today]);","$wo_rows = $st2->fetchAll(PDO::FETCH_ASSOC);","","// UI shell","$UI          = $ROOT . '/ui';","$PAGE_TITLE  = 'Maintenance \u2014 Daily Schedule';","$ACTIVE_MENU = 'maintenance.schedule';","require_once $UI . '/init.php';","require_once $UI . '/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 mb-0\">Daily Maintenance Schedule</h1>","  <div data-kpi-badges class=\"d-flex gap-2\">","    <span class=\"badge bg-danger\">Overdue: <?= (int)($counts['overdue_intervals'] ?? 0) ?></span>","    <span class=\"badge bg-warning text-dark\">Due Today: <?= (int)($counts['due_today_intervals'] ?? 0) ?></span>","    <span class=\"badge bg-info text-dark\">Due Week: <?= (int)($counts['due_week_intervals'] ?? 0) ?></span>","    <span class=\"badge bg-primary\">WO Today: <?= (int)($counts['wo_due_today'] ?? 0) ?></span>","    <span class=\"badge bg-secondary\">WO Week: <?= (int)($counts['wo_due_week'] ?? 0) ?></span>","  </div>","</div>","","<form method=\"get\" class=\"row g-2 mb-3\">","  <div class=\"col-md-3\">","    <input name=\"q\" class=\"form-control\" placeholder=\"Search machine/interval\" value=\"<?= htmlspecialchars($q) ?>\">","  </div>","  <div class=\"col-md-3\">","    <input name=\"team\" class=\"form-control\" placeholder=\"Team (e.g., Mechanical)\" value=\"<?= htmlspecialchars($team) ?>\">","  </div>","  <div class=\"col-md-auto\">","    <button class=\"btn btn-outline-secondary\">Filter</button>","    <a class=\"btn btn-outline-secondary\" href=\"/maintenance/schedule.php\">Reset</a>","  </div>","</form>","","<ul class=\"nav nav-tabs mb-3\" role=\"tablist\">","  <li class=\"nav-item\" role=\"presentation\">","    <button class=\"nav-link active\" data-bs-toggle=\"tab\" data-bs-target=\"#tab-due\" type=\"button\" role=\"tab\">Plan Due (<?= count($due_rows) ?>)</button>","  </li>","  <li class=\"nav-item\" role=\"presentation\">","    <button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#tab-wo\" type=\"button\" role=\"tab\">My Open WOs (<?= count($wo_rows) ?>)</button>","  </li>","</ul>","","<div class=\"tab-content\">","  <div class=\"tab-pane fade show active\" id=\"tab-due\" role=\"tabpanel\">","    <?php if (!$due_rows): ?>","      <div class=\"alert alert-success\">No intervals due today\u2014great job!</div>","    <?php else: ?>","      <div class=\"row row-cols-1 row-cols-lg-2 g-3\">","        <?php foreach ($due_rows as $r): ?>","          <div class=\"col\">","            <div class=\"card shadow-sm\">","              <div class=\"card-body\">","                <div class=\"d-flex justify-content-between align-items-start\">","                  <div>","                    <div class=\"small text-muted\"><?= htmlspecialchars((string)($r['maintenance_type_name'] ?? '')) ?></div>","                    <h5 class=\"card-title mb-1\"><?= htmlspecialchars((string)($r['title'] ?: 'Scheduled Maintenance')) ?></h5>","                    <div class=\"small\">","                      <strong><?= htmlspecialchars((string)$r['machine_code']) ?></strong> \u2014 <?= htmlspecialchars((string)$r['machine_name']) ?>","                    </div>","                  </div>","                  <div class=\"text-end\">","                    <?php","                      $pri = (string)($r['priority'] ?? 'medium');","                      $priClass = ($pri === 'high' ? 'danger' : ($pri === 'medium' ? 'warning text-dark' : 'secondary'));","                    ?>","                    <span class=\"badge bg-<?= $priClass ?>\"><?= htmlspecialchars($pri) ?></span>","                    <div class=\"small text-muted mt-1\">","                      Due: <strong><?= htmlspecialchars((string)$r['next_due_date']) ?></strong>","                    </div>","                  </div>","                </div>","","                <div class=\"mt-3 d-flex gap-2\">","                  <a class=\"btn btn-sm btn-primary\" href=\"/maintenance/intervals_generate.php?id=<?= (int)$r['interval_id'] ?>\">","                    <i class=\"bi bi-gear-wide-connected me-1\"></i> Generate WO","                  </a>","","                  <?php if ($canManage): ?>","                    <form method=\"post\" action=\"/maintenance/interval_quick_complete.php\" class=\"d-inline\">","                      <?= csrf_hidden_input() ?>","                      <input type=\"hidden\" name=\"id\" value=\"<?= (int)$r['interval_id'] ?>\">","                      <input type=\"hidden\" name=\"from\" value=\"schedule\">","                      <button class=\"btn btn-sm btn-success\" onclick=\"return confirm('Mark this interval as completed for today and roll next due date?');\">","                        <i class=\"bi bi-check2-circle me-1\"></i> Quick Complete","                      </button>","                    </form>","                  <?php endif; ?>","","                  <a class=\"btn btn-sm btn-outline-secondary\" href=\"/maintenance/intervals_list.php?program_id=<?= (int)$r['program_id'] ?>\">Program</a>","                </div>","","                <div class=\"mt-2 small text-muted\">","                  Freq:","                  <?php","                  $f  = (string)$r['frequency'];","                  $c  = (int)$r['interval_count'];","                  $cd = (int)($r['custom_days'] ?? 0);","                  echo htmlspecialchars($f . ($c ? \"\u00d7$c\" : '') . ($f === 'custom' && $cd ? \" ($cd days)\" : ''));","                  ?>","                  <?php if ((int)$r['requires_shutdown'] === 1): ?>","                    &nbsp;\u2022&nbsp;<span class=\"text-danger\">Requires shutdown</span>","                  <?php endif; ?>","                  <?php if (!empty($r['default_team'])): ?>","                    &nbsp;\u2022&nbsp;Team: <?= htmlspecialchars((string)$r['default_team']) ?>","                  <?php endif; ?>","                </div>","              </div>","            </div>","          </div>","        <?php endforeach; ?>","      </div>","    <?php endif; ?>","  </div>","","  <div class=\"tab-pane fade\" id=\"tab-wo\" role=\"tabpanel\">","    <?php if (!$wo_rows): ?>","      <div class=\"alert alert-info\">No open work orders due today.</div>","    <?php else: ?>","      <div class=\"table-responsive\">","        <table class=\"table table-sm align-middle\">","          <thead class=\"table-light\">","            <tr>","              <th>WO</th>","              <th>Title</th>","              <th>Machine</th>","              <th>Due</th>","              <th>Status</th>","              <th></th>","            </tr>","          </thead>","          <tbody>","          <?php foreach ($wo_rows as $w): ?>","            <tr>","              <td><code><?= htmlspecialchars((string)$w['wo_code']) ?></code></td>","              <td><?= htmlspecialchars((string)$w['title']) ?></td>","              <td><strong><?= htmlspecialchars((string)$w['machine_code']) ?></strong> \u2014 <?= htmlspecialchars((string)$w['machine_name']) ?></td>","              <td><?= htmlspecialchars((string)$w['due_date']) ?></td>","              <td><span class=\"badge bg-secondary\"><?= htmlspecialchars((string)$w['status']) ?></span></td>","              <td class=\"text-end\">","                <a class=\"btn btn-sm btn-outline-primary\" href=\"/maintenance/wo_view.php?id=<?= (int)$w['id'] ?>\">Open</a>","              </td>","            </tr>","          <?php endforeach; ?>","          </tbody>","        </table>","      </div>","    <?php endif; ?>","  </div>","</div>","","<?php","require_once $UI . '/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/breakdown_view.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/maintenance/breakdown_view.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('maintenance.wo.view'); // or 'maintenance.breakdown.view'","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$id = (int)($_GET['id'] ?? 0);","$ok = isset($_GET['ok']);","","$st = $pdo->prepare(\"SELECT b.*, m.machine_id AS machine_code, m.name AS machine_name","                       FROM breakdown_tickets b","                       JOIN machines m ON m.id=b.machine_id","                      WHERE b.id=?\");","$st->execute([$id]);","$B = $st->fetch(PDO::FETCH_ASSOC);","if (!$B) { http_response_code(404); exit('Not found'); }","","$PAGE_TITLE = \"Breakdown #\".$id;","$ACTIVE_MENU = 'machines.list';","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h5 mb-0\"><?=htmlspecialchars($PAGE_TITLE)?></h1>","  <div class=\"d-flex gap-2\">","    <a class=\"btn btn-light btn-sm\" href=\"/machines/machines_list.php\">Machines</a>","    <a class=\"btn btn-outline-primary btn-sm\" href=\"/maintenance/wo_form.php?machine_id=<?=$B['machine_id']?>&title=Breakdown%20WO%20for%20<?=urlencode($B['machine_code'])?>\">Create WO</a>","  </div>","</div>","","<?php if ($ok): ?><div class=\"alert alert-success\">Breakdown recorded.</div><?php endif; ?>","","<div class=\"card shadow-sm\">","  <div class=\"card-body\">","    <dl class=\"row mb-0\">","      <dt class=\"col-4\">Machine</dt><dd class=\"col-8\"><?=htmlspecialchars($B['machine_code'].' \u2014 '.$B['machine_name'])?></dd>","      <dt class=\"col-4\">Reported At</dt><dd class=\"col-8\"><?=htmlspecialchars((string)$B['reported_at'])?></dd>","      <dt class=\"col-4\">Symptom</dt><dd class=\"col-8\"><?=htmlspecialchars((string)$B['symptom'])?></dd>","      <dt class=\"col-4\">Severity</dt><dd class=\"col-8\"><span class=\"badge bg-danger\"><?=htmlspecialchars((string)$B['severity'])?></span></dd>","      <dt class=\"col-4\">Status</dt><dd class=\"col-8\"><span class=\"badge bg-secondary\"><?=htmlspecialchars((string)$B['status'])?></span></dd>","    </dl>","  </div>","</div>","<?php include __DIR__ . '/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/interval_quick_complete.php": ["<?php","/** PATH: /public_html/maintenance/interval_quick_complete.php"," * PURPOSE: One-click completion of a maintenance interval (no WO)."," *  - Sets last_completed_on = today"," *  - Advances next_due_date using frequency + interval_count/custom_days"," *  - Optionally writes a maintenance log (best-effort)"," *"," * SECURITY: requires maintenance.plan.manage"," */","declare(strict_types=1);","","$ROOT = dirname(__DIR__);","require_once $ROOT . '/includes/auth.php';","require_once $ROOT . '/includes/db.php';","require_once $ROOT . '/includes/rbac.php';","","require_login();","require_permission('maintenance.plan.manage');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$id   = (int)($_POST['id'] ?? 0);","$from = (string)($_POST['from'] ?? '');","if ($id <= 0) { http_response_code(400); exit('Interval id required'); }","","$today = new DateTimeImmutable('today');","","function compute_next_due(string $freq, int $count, int $customDays, DateTimeImmutable $base): string {","  $count = max(1, $count);","  return match ($freq) {","    'daily'       => $base->modify(\"+{$count} day\")->format('Y-m-d'),","    'weekly'      => $base->modify(\"+{$count} week\")->format('Y-m-d'),","    'monthly'     => $base->modify(\"+{$count} month\")->format('Y-m-d'),","    'quarterly'   => $base->modify(\"+\".(3 * $count).\" month\")->format('Y-m-d'),","    'semiannual'  => $base->modify(\"+\".(6 * $count).\" month\")->format('Y-m-d'),","    'annual'      => $base->modify(\"+{$count} year\")->format('Y-m-d'),","    'custom'      => $base->modify(\"+\".max(1, $customDays).\" day\")->format('Y-m-d'),","    default       => $base->modify(\"+{$count} month\")->format('Y-m-d'),","  };","}","","try {","  // Load interval + program/machine","  $st = $pdo->prepare(\"","    SELECT mi.*, mp.machine_id","      FROM maintenance_intervals mi","      JOIN maintenance_programs mp ON mp.id = mi.program_id","     WHERE mi.id = ?\");","  $st->execute([$id]);","  $iv = $st->fetch(PDO::FETCH_ASSOC);","  if (!$iv) { http_response_code(404); exit('Interval not found'); }","","  $freq  = (string)$iv['frequency'];","  $cnt   = (int)($iv['interval_count'] ?? 1);","  $cdays = (int)($iv['custom_days'] ?? 0);","","  $next = compute_next_due($freq, $cnt, $cdays, $today);","","  $pdo->beginTransaction();","","  // Update interval dates","  $upd = $pdo->prepare(\"UPDATE maintenance_intervals","                           SET last_completed_on = ?, next_due_date = ?, updated_at = NOW()","                         WHERE id = ?\");","  $upd->execute([$today->format('Y-m-d'), $next, $id]);","","  // Best-effort maintenance log (schema variations tolerated)","  try {","    // Try the common schema first","    $insLog = $pdo->prepare(\"","      INSERT INTO maintenance_logs (machine_id, wo_id, performed_on, meter_value, remarks, created_by, created_at) VALUES (?, NULL, NOW(), NULL, ?, ?, NOW()))","    \");","    $note = 'Quick-completed: ' . ((string)$iv['title'] ?: 'Scheduled Maintenance');","    $insLog->execute([(int)$iv['machine_id'], $today->format('Y-m-d'), $note, (int)current_user_id()]);","  } catch (Throwable $e) {","    // If table or columns differ, ignore silently to avoid blocking completion.","  }","","  $pdo->commit();","","  // Redirect back","  if ($from === 'schedule') {","    header('Location: /maintenance/schedule.php?ok=1');","  } else {","    header('Location: /maintenance/intervals_list.php?program_id='.(int)$iv['program_id'].'&ok=1');","  }","  exit;","","} catch (Throwable $e) {","  if ($pdo->inTransaction()) $pdo->rollBack();","  http_response_code(500);","  echo \"Quick-complete failed: \" . $e->getMessage();","  exit;","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/reports/contractor_costs.php": ["<?php","/** PATH: /public_html/maintenance/reports/contractor_costs.php"," * PURPOSE: Summarize maintenance cost per contractor during their machine allocation windows."," * RULE: Attribute each WO to the contractor who had the machine allocated on the WO's"," *       as-of date: COALESCE(wo.due_date, DATE(wo.created_at))."," * NOTE: Uses generated column machine_allocations.effective_end_date."," * PERMS: maintenance.report.view OR admin"," * PHP: 8.4"," */","declare(strict_types=1);","","$ROOT = dirname(__DIR__, 2);","require_once $ROOT . '/includes/auth.php';","require_once $ROOT . '/includes/db.php';","require_once $ROOT . '/includes/rbac.php';","","require_login();","if (!(has_permission('maintenance.report.view') || is_admin())) {","  http_response_code(403); exit('Access denied');","}","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$from = trim((string)($_GET['from'] ?? ''));","$to   = trim((string)($_GET['to']   ?? ''));","if ($from === '' || $to === '') {","  $from = (new DateTimeImmutable('first day of this month'))->format('Y-m-d');","  $to   = (new DateTimeImmutable('last day of this month'))->format('Y-m-d');","}","","// Optional filters","$machineId    = (int)($_GET['machine_id'] ?? 0);","$contractorId = (int)($_GET['contractor_id'] ?? 0);","$statusFilter = trim((string)($_GET['wo_status'] ?? 'completed')); // completed | open | all","","$asOf = \"COALESCE(wo.due_date, DATE(wo.created_at))\";","","// Build WHERE","$params = [$from, $to];","$where  = [\"$asOf BETWEEN ? AND ?\"];","","// WO status filter","if ($statusFilter === 'completed') {","  $where[] = \"wo.status = 'completed'\";","} elseif ($statusFilter === 'open') {","  $where[] = \"wo.status IN ('open','in_progress')\";","} // else 'all' = no status filter","","if ($machineId > 0)    { $where[] = \"wo.machine_id = ?\"; $params[] = $machineId; }","if ($contractorId > 0) { $where[] = \"ma.contractor_id = ?\"; $params[] = $contractorId; }","","// MAIN rollup","$sql = \"","SELECT","  p.id   AS contractor_id,","  p.name AS contractor_name,","  COUNT(DISTINCT wo.id)                        AS wo_count,","  COALESCE(SUM(wo.parts_cost),0)               AS parts_cost,","  COALESCE(SUM(wo.labour_cost_internal),0)     AS labour_internal,","  COALESCE(SUM(wo.labour_cost_vendor),0)       AS labour_vendor,","  COALESCE(SUM(wo.misc_cost),0)                AS misc_cost,","  COALESCE(SUM(wo.total_cost),0)               AS total_cost","FROM maintenance_work_orders wo","JOIN machines m ON m.id = wo.machine_id","JOIN machine_allocations ma","  ON ma.machine_id = wo.machine_id"," AND $asOf BETWEEN ma.alloc_date AND COALESCE(ma.effective_end_date, '9999-12-31')","JOIN parties p ON p.id = ma.contractor_id","WHERE \" . implode(' AND ', $where) . \"","GROUP BY p.id, p.name","ORDER BY total_cost DESC, wo_count DESC","\";","","$st = $pdo->prepare($sql);","$st->execute($params);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","// DETAIL query (per contractor)","$sqlDetail = \"","SELECT","  wo.id, wo.wo_code, wo.title, wo.status, wo.due_date,","  wo.parts_cost, wo.labour_cost_internal, wo.labour_cost_vendor, wo.misc_cost, wo.total_cost,","  m.machine_id AS machine_code, m.name AS machine_name","FROM maintenance_work_orders wo","JOIN machines m ON m.id = wo.machine_id","JOIN machine_allocations ma","  ON ma.machine_id = wo.machine_id"," AND $asOf BETWEEN ma.alloc_date AND COALESCE(ma.effective_end_date, '9999-12-31')","WHERE \" . implode(' AND ', $where) . \"","  AND ma.contractor_id = ?","ORDER BY wo.due_date, wo.id DESC","\";","","$UI = $ROOT . '/ui';","$PAGE_TITLE  = 'Maintenance Cost by Contractor';","$ACTIVE_MENU = 'maintenance.reports.contractor_costs';","require_once $UI . '/init.php';","require_once $UI . '/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 mb-0\">Maintenance Cost by Contractor</h1>","</div>","","<form class=\"row g-2 mb-3\" method=\"get\">","  <div class=\"col-auto\">","    <label class=\"form-label\">From</label>","    <input type=\"date\" class=\"form-control\" name=\"from\" value=\"<?= htmlspecialchars($from) ?>\">","  </div>","  <div class=\"col-auto\">","    <label class=\"form-label\">To</label>","    <input type=\"date\" class=\"form-control\" name=\"to\" value=\"<?= htmlspecialchars($to) ?>\">","  </div>","  <div class=\"col-auto\">","    <label class=\"form-label\">WO Status</label>","    <select class=\"form-select\" name=\"wo_status\">","      <option value=\"completed\" <?= $statusFilter==='completed'?'selected':'' ?>>Completed</option>","      <option value=\"open\" <?= $statusFilter==='open'?'selected':'' ?>>Open/In Progress</option>","      <option value=\"all\" <?= $statusFilter==='all'?'selected':'' ?>>All</option>","    </select>","  </div>","  <div class=\"col-auto\">","    <label class=\"form-label\">Machine ID (opt)</label>","    <input type=\"number\" class=\"form-control\" name=\"machine_id\" value=\"<?= (int)$machineId ?>\">","  </div>","  <div class=\"col-auto\">","    <label class=\"form-label\">Contractor ID (opt)</label>","    <input type=\"number\" class=\"form-control\" name=\"contractor_id\" value=\"<?= (int)$contractorId ?>\">","  </div>","  <div class=\"col-auto align-self-end\">","    <button class=\"btn btn-primary\">Apply</button>","    <a class=\"btn btn-outline-secondary\" href=\"/maintenance/reports/contractor_costs.php\">Reset</a>","  </div>","</form>","","<?php if (!$rows): ?>","  <div class=\"alert alert-info\">No matching work orders in the selected window.</div>","<?php else: ?>","  <div class=\"table-responsive\">","    <table class=\"table table-sm align-middle\">","      <thead class=\"table-light\">","        <tr>","          <th>Contractor</th>","          <th class=\"text-end\">WO Count</th>","          <th class=\"text-end\">Parts</th>","          <th class=\"text-end\">Labour (Int)</th>","          <th class=\"text-end\">Labour (Vendor)</th>","          <th class=\"text-end\">Misc</th>","          <th class=\"text-end\">Total</th>","          <th></th>","        </tr>","      </thead>","      <tbody>","      <?php foreach ($rows as $r): ?>","        <tr>","          <td><?= htmlspecialchars((string)$r['contractor_name']) ?> <span class=\"text-muted\">(#<?= (int)$r['contractor_id'] ?>)</span></td>","          <td class=\"text-end\"><?= (int)$r['wo_count'] ?></td>","          <td class=\"text-end\"><?= number_format((float)$r['parts_cost'], 2) ?></td>","          <td class=\"text-end\"><?= number_format((float)$r['labour_internal'], 2) ?></td>","          <td class=\"text-end\"><?= number_format((float)$r['labour_vendor'], 2) ?></td>","          <td class=\"text-end\"><?= number_format((float)$r['misc_cost'], 2) ?></td>","          <td class=\"text-end\"><strong><?= number_format((float)$r['total_cost'], 2) ?></strong></td>","          <td class=\"text-end\">","            <button class=\"btn btn-sm btn-outline-primary\" type=\"button\"","              data-bs-toggle=\"collapse\" data-bs-target=\"#detail<?= (int)$r['contractor_id'] ?>\">Details</button>","          </td>","        </tr>","        <tr class=\"collapse\" id=\"detail<?= (int)$r['contractor_id'] ?>\">","          <td colspan=\"8\">","            <?php","              $stD = $pdo->prepare($sqlDetail);","              $paramsD = array_merge($params, [(int)$r['contractor_id']]);","              $stD->execute($paramsD);","              $detail = $stD->fetchAll(PDO::FETCH_ASSOC);","            ?>","            <?php if (!$detail): ?>","              <div class=\"text-muted\">No WOs.</div>","            <?php else: ?>","              <div class=\"table-responsive\">","                <table class=\"table table-sm\">","                  <thead>","                    <tr>","                      <th>WO</th><th>Title</th><th>Machine</th><th>Due</th>","                      <th class=\"text-end\">Parts</th>","                      <th class=\"text-end\">Lab (Int)</th>","                      <th class=\"text-end\">Lab (Vendor)</th>","                      <th class=\"text-end\">Misc</th>","                      <th class=\"text-end\">Total</th>","                      <th></th>","                    </tr>","                  </thead>","                  <tbody>","                  <?php foreach ($detail as $d): ?>","                    <tr>","                      <td><code><?= htmlspecialchars((string)$d['wo_code']) ?></code></td>","                      <td><?= htmlspecialchars((string)$d['title']) ?></td>","                      <td><strong><?= htmlspecialchars((string)$d['machine_code']) ?></strong> \u2014 <?= htmlspecialchars((string)$d['machine_name']) ?></td>","                      <td><?= htmlspecialchars((string)($d['due_date'] ?? '')) ?></td>","                      <td class=\"text-end\"><?= number_format((float)$d['parts_cost'], 2) ?></td>","                      <td class=\"text-end\"><?= number_format((float)$d['labour_cost_internal'], 2) ?></td>","                      <td class=\"text-end\"><?= number_format((float)$d['labour_cost_vendor'], 2) ?></td>","                      <td class=\"text-end\"><?= number_format((float)$d['misc_cost'], 2) ?></td>","                      <td class=\"text-end\"><strong><?= number_format((float)$d['total_cost'], 2) ?></strong></td>","                      <td class=\"text-end\"><a class=\"btn btn-sm btn-outline-secondary\" href=\"/maintenance/wo_view.php?id=<?= (int)$d['id'] ?>\">Open</a></td>","                    </tr>","                  <?php endforeach; ?>","                  </tbody>","                </table>","              </div>","            <?php endif; ?>","          </td>","        </tr>","      <?php endforeach; ?>","      </tbody>","    </table>","  </div>","<?php endif; ?>","","<?php require_once $UI . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/x_templates_for_type.php": ["<?php","/** PATH: /public_html/maintenance/x_templates_for_type.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_login();","require_permission('machines.manage');","","$pdo = db();","$type_id = (int)($_GET['type_id'] ?? 0);","$maintenance_type_id = (int)($_GET['maintenance_type_id'] ?? 0);","","$st = $pdo->prepare(\"SELECT id, title FROM maintenance_program_templates","                      WHERE type_id=? AND maintenance_type_id=?","                      ORDER BY title\");","$st->execute([$type_id, $maintenance_type_id]); // FKs on both columns. :contentReference[oaicite:9]{index=9}","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","header('Content-Type: application/json');","echo json_encode(['ok'=>true,'rows'=>$rows]);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_view.php": ["<?php","/** PATH: /public_html/maintenance/wo_view.php"," * PURPOSE: View a Work Order with tickable tasks + allocation & costing context."," * PERMS: view => maintenance.wo.view (or admin), manage => maintenance.wo.manage"," * PHP: 8.4"," */","declare(strict_types=1);","","$ROOT = dirname(__DIR__);","require_once $ROOT . '/includes/auth.php';","require_once $ROOT . '/includes/db.php';","require_once $ROOT . '/includes/rbac.php';","","require_login();","","$canView   = has_permission('maintenance.wo.view')   || is_admin();","$canManage = has_permission('maintenance.wo.manage') || is_admin();","if (!$canView) { http_response_code(403); exit('Access denied'); }","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$woId = (int)($_GET['id'] ?? 0);","if ($woId <= 0) { http_response_code(400); exit('Invalid WO id'); }","","/** Load WO header + machine */","$st = $pdo->prepare(\"","  SELECT wo.*,","         m.machine_id AS machine_code, m.name AS machine_name","    FROM maintenance_work_orders wo","    JOIN machines m ON m.id = wo.machine_id","   WHERE wo.id = ?","\");","$st->execute([$woId]);","$wo = $st->fetch(PDO::FETCH_ASSOC);","if (!$wo) { http_response_code(404); exit('Work Order not found'); }","","/** If linked to interval, load minimal interval (title + program link) */","$interval = null;","if (!empty($wo['interval_id'])) {","  $sti = $pdo->prepare(\"SELECT mi.id, mi.title, mi.program_id FROM maintenance_intervals mi WHERE mi.id=?\");","  $sti->execute([(int)$wo['interval_id']]);","  $interval = $sti->fetch(PDO::FETCH_ASSOC) ?: null;","}","","/** Determine 'as-of' date for allocation attribution */","$asOf = null;","if (!empty($wo['due_date'])) {","  $asOf = (string)$wo['due_date'];","} else {","  // Fallback to created_at if present; else today","  $asOf = !empty($wo['created_at']) ? date('Y-m-d', strtotime((string)$wo['created_at'])) : date('Y-m-d');","}","","/**"," * Load allocation record as of $asOf."," * Window: alloc_date .. COALESCE(return_date, expected_return, '9999-12-31')"," * Prefer active status 'issued'; but allow a returned record if asOf sits within window historically."," */","$alloc = null;","try {","  $stmt = $pdo->prepare(\"","  SELECT ma.*, p.name AS contractor_name","    FROM machine_allocations ma","    JOIN parties p ON p.id = ma.contractor_id","   WHERE ma.machine_id = ?","     AND ? BETWEEN ma.alloc_date AND COALESCE(ma.effective_end_date, '9999-12-31')","   ORDER BY ma.status = 'issued' DESC, ma.id DESC","   LIMIT 1","\");","","  $stmt->execute([(int)$wo['machine_id'], $asOf]);","  $alloc = $stmt->fetch(PDO::FETCH_ASSOC) ?: null;","} catch (Throwable $e) {","  $alloc = null; // Never block the page on allocation lookup","}","","/** Load tasks */","$st2 = $pdo->prepare(\"","  SELECT id, task, status","    FROM maintenance_wo_tasks","   WHERE wo_id = ?","   ORDER BY id ASC","\");","$st2->execute([$woId]);","$tasks = $st2->fetchAll(PDO::FETCH_ASSOC);","","/** UI shell */","$UI = $ROOT . '/ui';","$PAGE_TITLE  = 'WO ' . htmlspecialchars((string)$wo['wo_code']);","$ACTIVE_MENU = 'maintenance.wo';","require_once $UI . '/init.php';","require_once $UI . '/layout_start.php';","","$ok = (int)($_GET['ok'] ?? 0);","?>","<?php if ($ok): ?>","  <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">","    Work Order marked <strong>completed</strong>.","    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>","  </div>","<?php endif; ?>","","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 mb-0\">Work Order <code><?= htmlspecialchars((string)$wo['wo_code']) ?></code></h1>","  <div class=\"d-flex gap-2\">","    <a class=\"btn btn-outline-secondary\" href=\"/maintenance/wo_list.php\">Back to list</a>","  </div>","</div>","","<div class=\"row g-3\">","  <!-- HEADER + ALLOCATION + COSTING -->","  <div class=\"col-lg-6\">","    <div class=\"card shadow-sm\">","      <div class=\"card-body\">","        <h5 class=\"card-title mb-3\">Header</h5>","        <div class=\"row\">","          <div class=\"col-sm-6 mb-2\">","            <strong>Machine</strong><br>","            <span class=\"text-muted\"><?= htmlspecialchars((string)$wo['machine_code']) ?></span> \u2014 <?= htmlspecialchars((string)$wo['machine_name']) ?>","          </div>","          <div class=\"col-sm-6 mb-2\">","            <strong>Status</strong><br>","            <span class=\"badge bg-secondary\"><?= htmlspecialchars((string)$wo['status']) ?></span>","          </div>","          <div class=\"col-sm-6 mb-2\">","            <strong>Title</strong><br><?= htmlspecialchars((string)$wo['title']) ?>","          </div>","          <div class=\"col-sm-6 mb-2\">","            <strong>Due Date</strong><br><?= htmlspecialchars((string)($wo['due_date'] ?? '')) ?>","          </div>","","          <?php if ($interval): ?>","          <div class=\"col-sm-12 mb-2\">","            <strong>Source Interval</strong><br>","            <div class=\"small\">","              <?= htmlspecialchars((string)($interval['title'] ?: 'Scheduled Maintenance')) ?>","              &nbsp;\u00b7&nbsp;","              <a href=\"/maintenance/intervals_list.php?program_id=<?= (int)$interval['program_id'] ?>\">View program</a>","            </div>","          </div>","          <?php endif; ?>","","          <?php if (!empty($wo['description'])): ?>","          <div class=\"col-sm-12 mb-2\">","            <strong>Description</strong><br><?= nl2br(htmlspecialchars((string)$wo['description'])) ?>","          </div>","          <?php endif; ?>","","          <?php if ($alloc): ?>","          <div class=\"col-sm-12 mb-2\">","            <strong>Allocation (as of <?= htmlspecialchars($asOf) ?>)</strong><br>","            <div class=\"small\">","              Contractor: <strong><?= htmlspecialchars((string)$alloc['contractor_name']) ?></strong>","              &nbsp;\u2022&nbsp; Code: <code><?= htmlspecialchars((string)$alloc['alloc_code']) ?></code>","              <br>","              From <strong><?= htmlspecialchars((string)$alloc['alloc_date']) ?></strong>","              to <strong><?= htmlspecialchars((string)($alloc['return_date'] ?? $alloc['expected_return'] ?? 'open')) ?></strong>","              &nbsp;\u2022&nbsp; Status: <span class=\"badge bg-<?= ($alloc['status']==='issued'?'warning text-dark':'secondary') ?>\">","                <?= htmlspecialchars((string)$alloc['status']) ?>","              </span>","              <?php if (!is_null($alloc['meter_issue'])): ?>","                <br><span class=\"text-muted\">Meter @ issue:</span> <?= number_format((float)$alloc['meter_issue'], 2) ?>","              <?php endif; ?>","              <?php if (!is_null($alloc['meter_return'])): ?>","                &nbsp;|&nbsp;<span class=\"text-muted\">Meter @ return:</span> <?= number_format((float)$alloc['meter_return'], 2) ?>","              <?php endif; ?>","              <?php if (!empty($alloc['remarks'])): ?>","                <div class=\"mt-1 text-muted\">Remarks: <?= htmlspecialchars((string)$alloc['remarks']) ?></div>","              <?php endif; ?>","            </div>","          </div>","          <?php endif; ?>","","          <!-- Costing block -->","          <div class=\"col-sm-12 mt-2\">","            <h6 class=\"mt-3\">Costing</h6>","            <div class=\"row g-2 small\">","              <div class=\"col-6\"><span class=\"text-muted\">Parts</span><br><strong><?= number_format((float)($wo['parts_cost'] ?? 0), 2) ?></strong></div>","              <div class=\"col-6\"><span class=\"text-muted\">Labour (Internal)</span><br><strong><?= number_format((float)($wo['labour_cost_internal'] ?? 0), 2) ?></strong></div>","              <div class=\"col-6\"><span class=\"text-muted\">Labour (Vendor)</span><br><strong><?= number_format((float)($wo['labour_cost_vendor'] ?? 0), 2) ?></strong></div>","              <div class=\"col-6\"><span class=\"text-muted\">Misc</span><br><strong><?= number_format((float)($wo['misc_cost'] ?? 0), 2) ?></strong></div>","              <div class=\"col-12\"><hr class=\"my-2\"></div>","              <div class=\"col-12\"><span class=\"text-muted\">Total</span><br><strong><?= number_format((float)($wo['total_cost'] ?? 0), 2) ?></strong></div>","            </div>","          </div>","","        </div>","      </div>","    </div>","  </div>","","  <!-- TASKS -->","  <div class=\"col-lg-6\">","    <div class=\"card shadow-sm\">","      <div class=\"card-body\">","        <div class=\"d-flex align-items-center justify-content-between\">","          <h5 class=\"card-title mb-0\">Tasks</h5>","          <?php if ($canManage): ?>","          <form class=\"d-flex gap-2\" method=\"post\" action=\"/maintenance/wo_task_add.php\">","            <input type=\"hidden\" name=\"wo_id\" value=\"<?= (int)$woId ?>\">","            <input class=\"form-control form-control-sm\" name=\"task\" placeholder=\"New task...\" required>","            <button class=\"btn btn-sm btn-primary\">Add</button>","          </form>","          <?php endif; ?>","        </div>","","        <div class=\"mt-3\">","          <?php if (!$tasks): ?>","            <div class=\"text-muted\">No tasks yet.</div>","          <?php else: ?>","            <ul class=\"list-group list-group-flush\">","              <?php foreach ($tasks as $t): $done = (string)$t['status'] === 'done'; ?>","                <li class=\"list-group-item\">","                  <?php if ($canManage): ?>","                  <form method=\"post\" action=\"/maintenance/wo_task_toggle.php\" class=\"m-0\">","                    <input type=\"hidden\" name=\"id\" value=\"<?= (int)$t['id'] ?>\">","                    <input type=\"hidden\" name=\"wo_id\" value=\"<?= (int)$woId ?>\">","                    <input type=\"hidden\" name=\"to\" value=\"<?= $done ? 'todo' : 'done' ?>\">","                    <div class=\"form-check\">","                      <input class=\"form-check-input\" type=\"checkbox\" id=\"task<?= (int)$t['id'] ?>\"","                             <?= $done ? 'checked' : '' ?>","                             onchange=\"this.form.submit()\">","                      <label class=\"form-check-label <?= $done ? 'text-decoration-line-through text-muted' : '' ?>\"","                             for=\"task<?= (int)$t['id'] ?>\">","                        <?= htmlspecialchars((string)$t['task']) ?>","                      </label>","                    </div>","                  </form>","                  <?php else: ?>","                  <div class=\"form-check\">","                    <input class=\"form-check-input\" type=\"checkbox\" disabled <?= $done ? 'checked' : '' ?>>","                    <label class=\"form-check-label <?= $done ? 'text-decoration-line-through text-muted' : '' ?>\">","                      <?= htmlspecialchars((string)$t['task']) ?>","                    </label>","                  </div>","                  <?php endif; ?>","                </li>","              <?php endforeach; ?>","            </ul>","          <?php endif; ?>","        </div>","","        <?php if ($canManage): ?>","        <div class=\"mt-3 d-flex gap-2\">","          <a class=\"btn btn-success\" href=\"/maintenance/wo_complete.php?id=<?= (int)$woId ?>\"","             onclick=\"return confirm('Mark this WO as completed? Intervals (if linked) will roll to next due.');\">","             Complete WO","          </a>","          <a class=\"btn btn-outline-secondary\" href=\"/maintenance/wo_edit.php?id=<?= (int)$woId ?>\">Edit</a>","        </div>","        <?php endif; ?>","      </div>","    </div>","  </div>","</div>","","<?php require_once $UI . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_task_add.php": ["<?php","/** PATH: /public_html/maintenance/wo_task_add.php"," * PURPOSE: Add a new task line to a WO with status 'todo'"," * PERMS: maintenance.wo.manage"," */","declare(strict_types=1);","","$ROOT = dirname(__DIR__);","require_once $ROOT . '/includes/auth.php';","require_once $ROOT . '/includes/db.php';","require_once $ROOT . '/includes/rbac.php';","require_once $ROOT . '/includes/csrf.php';","","require_login();","require_permission('maintenance.wo.manage');","","$pdo = db();","csrf_require_token();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$woId = (int)($_POST['wo_id'] ?? 0);","$task = trim((string)($_POST['task'] ?? ''));","","if ($woId <= 0 || $task === '') { http_response_code(400); exit('Invalid params'); }","","$st = $pdo->prepare(\"INSERT INTO maintenance_wo_tasks (wo_id, task, status) VALUES (?, ?, 'todo')\");","$st->execute([$woId, $task]);","","header('Location: /maintenance/wo_view.php?id=' . $woId);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/_backups/modules__demo__hello.php.20250924_224202.json": ["{","    \"rel_path\": \"modules\\/demo\\/hello.php\",","    \"size\": 630,","    \"saved_at\": \"2025-09-24 22:42:02\"","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/_backups/modules__demo__hello.php.20250924_224202.bak": ["<?php","declare(strict_types=1);","$title = \"Items\";","$items = [\"apple\",\"banana\",\"cherry\"];","?>","<!doctype html>","<html lang=\"en\">","<head>","  <meta charset=\"utf-8\">","  <title><?= htmlspecialchars($title) ?></title>","  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","</head>","<body class=\"p-3\">","  <div class=\"container\">","    <h1 class=\"h4\"><?= htmlspecialchars($title) ?></h1>","    <ul>","      <?php foreach ($items as $it): ?>","        <li><?= htmlspecialchars($it) ?></li>","      <?php endforeach; ?>","    </ul>","    <button class=\"btn btn-secondary\">Click me</button>","  </div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/parties/party_gst_lookup.php": ["<?php","/** PATH: /public_html/parties/party_gst_lookup.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","","header('Content-Type: application/json');","try {","  require_login();","","  $gstin = strtoupper(trim((string)($_GET['gstin'] ?? '')));","  if ($gstin === '') {","    echo json_encode(['ok'=>false,'message'=>'GSTIN is required']); exit;","  }","","  // Format: 2 digit state + 10 PAN-like + 1 entity + 'Z' + 1 checksum","  $isValid = (bool)preg_match('/^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z][1-9A-Z]Z[0-9A-Z]$/', $gstin);","  $pan = $isValid ? substr($gstin, 2, 10) : null;","  $stateCode = $isValid ? substr($gstin, 0, 2) : null;","","  // NOTE: We do not call the NIC/GSTN API here. legal_name is unknown without an external API.","  echo json_encode([","    'ok'         => $isValid,","    'message'    => $isValid ? 'GSTIN format looks valid' : 'Invalid GSTIN format',","    'gstin'      => $gstin,","    'pan'        => $pan,","    'state_code' => $stateCode,","    'legal_name' => null","  ]);","} catch (Throwable $e) {","  http_response_code(500);","  echo json_encode(['ok'=>false,'message'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/parties/parties_form.php": ["<?php","/** PATH: /public_html/parties/parties_form.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/audit.php';","","require_login();","require_permission('parties.manage');","","$pdo = db();","","$id = (int)($_GET['id'] ?? 0);","$isEdit = $id > 0;","","$types = ['client','supplier','contractor','other'];","","$errors = [];","$party = [","  'code' => '',","  'name' => '',","  'legal_name' => '',","  'type' => 'supplier',","  'contact_name' => '',","  'email' => '',","  'phone' => '',","  'gst_number' => '',","  'gst_state_code' => '',","  'gst_registration_type' => null,","  'pan_number' => '',","  'msme_udyam' => '',","  'address_line1' => '',","  'address_line2' => '',","  'city' => '',","  'state' => '',","  'country' => 'India',","  'pincode' => '',","  'status' => 1,","];","","$commercial = [","  'payment_terms_days' => 30,","  'credit_limit' => '0.00',","  'tds_section' => '',","  'tds_rate' => null,","  'tcs_applicable' => 0,","  'e_invoice_required' => 0,","  'reverse_charge_applicable' => 0,","  'default_place_of_supply' => '',","];","","$banks = [];","$contacts = [];","","// Load existing","if ($isEdit) {","  $st = $pdo->prepare(\"SELECT * FROM parties WHERE id=? LIMIT 1\");","  $st->execute([$id]);","  $row = $st->fetch(PDO::FETCH_ASSOC);","  if (!$row) { http_response_code(404); echo \"Party not found\"; exit; }","  $party = array_merge($party, $row);","","  // commercial","  $st = $pdo->prepare(\"SELECT * FROM party_commercials WHERE party_id=? LIMIT 1\");","  $st->execute([$id]);","  if ($c = $st->fetch(PDO::FETCH_ASSOC)) $commercial = array_merge($commercial, $c);","","  // banks","  $st = $pdo->prepare(\"SELECT * FROM party_bank_accounts WHERE party_id=? ORDER BY is_primary DESC, id ASC\");","  $st->execute([$id]);","  $banks = $st->fetchAll(PDO::FETCH_ASSOC);","","  // contacts","  $st = $pdo->prepare(\"SELECT * FROM party_contacts WHERE party_id=? ORDER BY is_primary DESC, id ASC\");","  $st->execute([$id]);","  $contacts = $st->fetchAll(PDO::FETCH_ASSOC);","}","","// Handle POST","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  verify_csrf_or_die();","","  // Party fields","  foreach ($party as $k => $_) {","    if ($k === 'status') continue;","    $party[$k] = trim((string)($_POST[$k] ?? ''));","  }","  $party['status'] = isset($_POST['status']) ? 1 : 0;","","  // Validate","  if ($party['name'] === '') $errors['name'] = 'Name is required';","  if (!in_array($party['type'], $types, true)) $errors['type'] = 'Invalid type';","  if ($party['email'] !== '' && !filter_var($party['email'], FILTER_VALIDATE_EMAIL)) $errors['email'] = 'Invalid email';","  if ($party['gst_number'] !== '' && !preg_match('/^[0-9A-Z]{15}$/', $party['gst_number'])) $errors['gst_number'] = 'Invalid GSTIN (15 alphanumerics)';","","  // Commercials","  $commercial['payment_terms_days'] = (int)($_POST['payment_terms_days'] ?? 30);","  $commercial['credit_limit'] = (string)($_POST['credit_limit'] ?? '0.00');","  $commercial['tds_section'] = trim((string)($_POST['tds_section'] ?? ''));","  $commercial['tds_rate'] = ($_POST['tds_rate'] ?? '') === '' ? null : (string)$_POST['tds_rate'];","  $commercial['tcs_applicable'] = isset($_POST['tcs_applicable']) ? 1 : 0;","  $commercial['e_invoice_required'] = isset($_POST['e_invoice_required']) ? 1 : 0;","  $commercial['reverse_charge_applicable'] = isset($_POST['reverse_charge_applicable']) ? 1 : 0;","  $commercial['default_place_of_supply'] = trim((string)($_POST['default_place_of_supply'] ?? ''));","","  // Bank arrays","  $bank_ids        = $_POST['bank_id'] ?? [];","  $beneficiary_name= $_POST['beneficiary_name'] ?? [];","  $bank_name       = $_POST['bank_name'] ?? [];","  $branch          = $_POST['branch'] ?? [];","  $account_number  = $_POST['account_number'] ?? [];","  $ifsc            = $_POST['ifsc'] ?? [];","  $account_type    = $_POST['account_type'] ?? [];","  $bank_is_primary = $_POST['bank_is_primary'] ?? []; // holds indices marked primary (single key)","","  // Contact arrays","  $contact_ids         = $_POST['contact_id'] ?? [];","  $contact_name        = $_POST['contact_name'] ?? [];","  $contact_email       = $_POST['contact_email'] ?? [];","  $contact_phone       = $_POST['contact_phone'] ?? [];","  $contact_role_title  = $_POST['contact_role_title'] ?? [];","  $contact_is_primary  = $_POST['contact_is_primary'] ?? []; // holds indices marked primary (single key)","","  try {","    if (!$errors) {","      $pdo->beginTransaction();","","      // INSERT code generation if needed","      if (!$isEdit && $party['code'] === '') {","        $st = $pdo->prepare(\"SELECT code_prefix FROM party_type_meta WHERE type=?\");","        $st->execute([$party['type']]);","        $prefix = (string)($st->fetchColumn() ?: '');","        if ($prefix === '') {","          $map = ['client'=>'CL','supplier'=>'SP','contractor'=>'CT','other'=>'OT'];","          $prefix = $map[$party['type']] ?? 'PT';","        }","        $scope = 'party:' . $prefix;","        $row = $pdo->prepare(\"SELECT id, current_value FROM party_sequences WHERE scope=? FOR UPDATE\");","        $row->execute([$scope]);","        $seq = $row->fetch(PDO::FETCH_ASSOC);","        if (!$seq) {","          $pdo->prepare(\"INSERT INTO party_sequences(scope, current_value) VALUES(?, 0)\")->execute([$scope]);","          $row->execute([$scope]);","          $seq = $row->fetch(PDO::FETCH_ASSOC);","        }","        $next = (int)$seq['current_value'] + 1;","        $pdo->prepare(\"UPDATE party_sequences SET current_value=? WHERE id=?\")->execute([$next, (int)$seq['id']]);","","        $cst = $pdo->prepare(\"SELECT code FROM parties WHERE code LIKE ? ORDER BY id DESC LIMIT 1\");","        $cst->execute([$prefix.'%']);","        $lastCode = (string)($cst->fetchColumn() ?: '');","        $hyphen = $lastCode ? (strpos($lastCode, '-') !== false) : ($party['type']==='client');","        $party['code'] = $prefix . ($hyphen?'-':'') . str_pad((string)$next, 4, '0', STR_PAD_LEFT);","      }","","      // upsert party","      if ($isEdit) {","        $sql = \"UPDATE parties SET code=?, name=?, legal_name=?, type=?, contact_name=?, email=?, phone=?, ","                gst_number=?, gst_state_code=?, gst_registration_type=?, pan_number=?, msme_udyam=?,","                address_line1=?, address_line2=?, city=?, state=?, country=?, pincode=?, status=? ","                WHERE id=?\";","        $pdo->prepare($sql)->execute([","          $party['code'],$party['name'],$party['legal_name'],$party['type'],$party['contact_name'],$party['email'],$party['phone'],","          $party['gst_number'],$party['gst_state_code'],$party['gst_registration_type'],$party['pan_number'],$party['msme_udyam'],","          $party['address_line1'],$party['address_line2'],$party['city'],$party['state'],$party['country'],$party['pincode'],$party['status'],","          $id","        ]);","      } else {","        $sql = \"INSERT INTO parties(code,name,legal_name,type,contact_name,email,phone,gst_number,gst_state_code,gst_registration_type,pan_number,msme_udyam,address_line1,address_line2,city,state,country,pincode,status)","                VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\";","        $pdo->prepare($sql)->execute([","          $party['code'],$party['name'],$party['legal_name'],$party['type'],$party['contact_name'],$party['email'],$party['phone'],","          $party['gst_number'],$party['gst_state_code'],$party['gst_registration_type'],$party['pan_number'],$party['msme_udyam'],","          $party['address_line1'],$party['address_line2'],$party['city'],$party['state'],$party['country'],$party['pincode'],$party['status']","        ]);","        $id = (int)$pdo->lastInsertId();","        $isEdit = true;","      }","","      // upsert party_commercials (PK party_id)","      $st = $pdo->prepare(\"SELECT party_id FROM party_commercials WHERE party_id=?\");","      $st->execute([$id]);","      if ($st->fetchColumn()) {","        $sql = \"UPDATE party_commercials SET payment_terms_days=?, credit_limit=?, tds_section=?, tds_rate=?, ","                tcs_applicable=?, e_invoice_required=?, reverse_charge_applicable=?, default_place_of_supply=?","                WHERE party_id=?\";","        $pdo->prepare($sql)->execute([","          $commercial['payment_terms_days'], $commercial['credit_limit'], $commercial['tds_section'], $commercial['tds_rate'],","          $commercial['tcs_applicable'], $commercial['e_invoice_required'], $commercial['reverse_charge_applicable'],","          $commercial['default_place_of_supply'], $id","        ]);","      } else {","        $sql = \"INSERT INTO party_commercials(party_id,payment_terms_days,credit_limit,tds_section,tds_rate,tcs_applicable,e_invoice_required,reverse_charge_applicable,default_place_of_supply)","                VALUES (?,?,?,?,?,?,?,?,?)\";","        $pdo->prepare($sql)->execute([","          $id, $commercial['payment_terms_days'], $commercial['credit_limit'], $commercial['tds_section'], $commercial['tds_rate'],","          $commercial['tcs_applicable'], $commercial['e_invoice_required'], $commercial['reverse_charge_applicable'],","          $commercial['default_place_of_supply']","        ]);","      }","","      // existing banks for cleanup","      $st = $pdo->prepare(\"SELECT id FROM party_bank_accounts WHERE party_id=?\");","      $st->execute([$id]);","      $existingBankIds = array_map('intval', array_column($st->fetchAll(PDO::FETCH_ASSOC), 'id'));","","      $keptBankIds = [];","      $primaryBankIndex = is_array($bank_is_primary) && count($bank_is_primary) ? (int)array_keys($bank_is_primary)[0] : -1;","","      foreach ((array)$beneficiary_name as $i => $bn) {","        $rowHasData = trim((string)$bn) !== '' || trim((string)($bank_name[$i] ?? '')) !== '' || trim((string)($account_number[$i] ?? '')) !== '';","        if (!$rowHasData) continue;","","        $b = [","          'id' => (int)($bank_ids[$i] ?? 0),","          'beneficiary_name' => trim((string)$bn),","          'bank_name' => trim((string)($bank_name[$i] ?? '')),","          'branch' => trim((string)($branch[$i] ?? '')),","          'account_number' => trim((string)($account_number[$i] ?? '')),","          'ifsc' => trim((string)($ifsc[$i] ?? '')),","          'account_type' => (string)($account_type[$i] ?? 'current'),","          'is_primary' => ($i === $primaryBankIndex) ? 1 : 0,","        ];","","        if ($b['id'] > 0) {","          $sql = \"UPDATE party_bank_accounts SET beneficiary_name=?, bank_name=?, branch=?, account_number=?, ifsc=?, account_type=?, is_primary=? ","                  WHERE id=? AND party_id=?\";","          $pdo->prepare($sql)->execute([","            $b['beneficiary_name'],$b['bank_name'],$b['branch'],$b['account_number'],$b['ifsc'],$b['account_type'],$b['is_primary'],","            $b['id'],$id","          ]);","          $keptBankIds[] = $b['id'];","        } else {","          $sql = \"INSERT INTO party_bank_accounts(party_id,beneficiary_name,bank_name,branch,account_number,ifsc,account_type,is_primary)","                  VALUES (?,?,?,?,?,?,?,?)\";","          $pdo->prepare($sql)->execute([","            $id,$b['beneficiary_name'],$b['bank_name'],$b['branch'],$b['account_number'],$b['ifsc'],$b['account_type'],$b['is_primary']","          ]);","          $keptBankIds[] = (int)$pdo->lastInsertId();","        }","      }","","      // delete removed banks","      $toDelete = array_diff($existingBankIds, $keptBankIds);","      if ($toDelete) {","        $in = implode(',', array_fill(0, count($toDelete), '?'));","        $sql = \"DELETE FROM party_bank_accounts WHERE party_id=? AND id IN ($in)\";","        $params = array_merge([$id], array_values($toDelete));","        $pdo->prepare($sql)->execute($params);","      }","","      // existing contacts for cleanup","      $st = $pdo->prepare(\"SELECT id FROM party_contacts WHERE party_id=?\");","      $st->execute([$id]);","      $existingContactIds = array_map('intval', array_column($st->fetchAll(PDO::FETCH_ASSOC), 'id'));","","      $keptContactIds = [];","      $primaryContactIndex = is_array($contact_is_primary) && count($contact_is_primary) ? (int)array_keys($contact_is_primary)[0] : -1;","","      foreach ((array)$contact_name as $i => $cn) {","        $rowHasData = trim((string)$cn) !== '' || trim((string)($contact_phone[$i] ?? '')) !== '' || trim((string)($contact_email[$i] ?? '')) !== '';","        if (!$rowHasData) continue;","","        $c = [","          'id' => (int)($contact_ids[$i] ?? 0),","          'name' => trim((string)$cn),","          'email' => trim((string)($contact_email[$i] ?? '')),","          'phone' => trim((string)($contact_phone[$i] ?? '')),","          'role_title' => trim((string)($contact_role_title[$i] ?? '')),","          'is_primary' => ($i === $primaryContactIndex) ? 1 : 0,","        ];","","        if ($c['id'] > 0) {","          $sql = \"UPDATE party_contacts SET name=?, email=?, phone=?, role_title=?, is_primary=? WHERE id=? AND party_id=?\";","          $pdo->prepare($sql)->execute([","            $c['name'],$c['email'],$c['phone'],$c['role_title'],$c['is_primary'], $c['id'],$id","          ]);","          $keptContactIds[] = $c['id'];","        } else {","          $sql = \"INSERT INTO party_contacts(party_id,name,email,phone,role_title,is_primary) VALUES (?,?,?,?,?,?)\";","          $pdo->prepare($sql)->execute([$id,$c['name'],$c['email'],$c['phone'],$c['role_title'],$c['is_primary']]);","          $keptContactIds[] = (int)$pdo->lastInsertId();","        }","      }","","      // delete removed contacts","      $toDeleteC = array_diff($existingContactIds, $keptContactIds);","      if ($toDeleteC) {","        $in = implode(',', array_fill(0, count($toDeleteC), '?'));","        $sql = \"DELETE FROM party_contacts WHERE party_id=? AND id IN ($in)\";","        $params = array_merge([$id], array_values($toDeleteC));","        $pdo->prepare($sql)->execute($params);","      }","","      // audit (kernel signature: audit_log(PDO $pdo, string $entity, string $action, ?int $row_id, $payload))","      audit_log($pdo, 'parties', $isEdit ? 'update' : 'create', $id, ['party'=>$party,'commercial'=>$commercial]);","","      $pdo->commit();","      set_flash('success', 'Saved successfully.');","      header(\"Location: parties_list.php?saved=1\");","      exit;","    }","  } catch (Throwable $e) {","    if ($pdo->inTransaction()) $pdo->rollBack();","    $errors['db'] = $e->getMessage();","  }","}","","$pageTitle = $isEdit ? ('Edit Party: '.h($party['code'] ?: $party['name'])) : 'New Party';","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container-fluid py-3\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <h1 class=\"h4 mb-0\"><?= h($pageTitle) ?></h1>","    <div>","      <a href=\"parties_list.php\" class=\"btn btn-sm btn-outline-secondary\"><i class=\"bi bi-arrow-left\"></i> Back</a>","    </div>","  </div>","","  <?php if ($errors): ?>","    <div class=\"alert alert-danger\">","      <div class=\"fw-semibold mb-1\">Please fix the errors below:</div>","      <ul class=\"mb-0\">","        <?php foreach ($errors as $msg): ?>","          <li><?= h($msg) ?></li>","        <?php endforeach; ?>","      </ul>","    </div>","  <?php endif; ?>","","  <form method=\"post\" action=\"\" novalidate>","    <?= csrf_field() ?>","","    <ul class=\"nav nav-tabs\" role=\"tablist\">","      <li class=\"nav-item\"><button class=\"nav-link active\" data-bs-toggle=\"tab\" data-bs-target=\"#tab-basic\" type=\"button\">Basic</button></li>","      <li class=\"nav-item\"><button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#tab-commercial\" type=\"button\">Commercials</button></li>","      <li class=\"nav-item\"><button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#tab-banks\" type=\"button\">Bank Details</button></li>","      <li class=\"nav-item\"><button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#tab-contacts\" type=\"button\">Contacts</button></li>","      <?php if ($isEdit): ?>","        <li class=\"nav-item\"><button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#tab-attachments\" type=\"button\">Attachments</button></li>","      <?php endif; ?>","    </ul>","","    <div class=\"tab-content border border-top-0 p-3 rounded-bottom shadow-sm\">","      <!-- BASIC -->","      <div class=\"tab-pane fade show active\" id=\"tab-basic\">","        <div class=\"row g-3\">","          <div class=\"col-sm-4\">","            <label class=\"form-label\">Type</label>","            <select name=\"type\" class=\"form-select\" required>","              <?php foreach ($types as $t): ?>","                <option value=\"<?= h($t) ?>\" <?= $party['type']===$t?'selected':'' ?>><?= ucfirst($t) ?></option>","              <?php endforeach; ?>","            </select>","          </div>","          <div class=\"col-sm-4\">","            <label class=\"form-label\">Code</label>","            <div class=\"input-group\">","              <input type=\"text\" name=\"code\" class=\"form-control\" value=\"<?= h($party['code']) ?>\" placeholder=\"Auto\" readonly>","              <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"btnGen\">Auto</button>","            </div>","            <div class=\"form-text\">Generated on save. Use Auto to preview.</div>","          </div>","          <div class=\"col-sm-8\">","            <label class=\"form-label\">Name <span class=\"text-danger\">*</span></label>","            <input type=\"text\" name=\"name\" class=\"form-control\" value=\"<?= h($party['name']) ?>\" required>","          </div>","","          <div class=\"col-sm-8\">","            <label class=\"form-label\">Legal Name</label>","            <input type=\"text\" name=\"legal_name\" class=\"form-control\" value=\"<?= h($party['legal_name']) ?>\">","          </div>","          <div class=\"col-sm-4\">","            <label class=\"form-label\">Contact Person</label>","            <input type=\"text\" name=\"contact_name\" class=\"form-control\" value=\"<?= h($party['contact_name']) ?>\">","          </div>","","          <div class=\"col-sm-4\">","            <label class=\"form-label\">Email</label>","            <input type=\"email\" name=\"email\" class=\"form-control\" value=\"<?= h($party['email']) ?>\">","          </div>","          <div class=\"col-sm-4\">","            <label class=\"form-label\">Phone</label>","            <input type=\"text\" name=\"phone\" class=\"form-control\" value=\"<?= h($party['phone']) ?>\">","          </div>","","          <div class=\"col-sm-4\">","            <label class=\"form-label\">GSTIN</label>","            <div class=\"input-group\">","              <input type=\"text\" name=\"gst_number\" id=\"gstin\" class=\"form-control\" value=\"<?= h($party['gst_number']) ?>\" maxlength=\"15\" placeholder=\"27ABCDE1234F1Z5\">","              <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"btnGST\">Verify</button>","            </div>","          </div>","          <div class=\"col-sm-4\">","            <label class=\"form-label\">GST State Code</label>","            <input type=\"text\" name=\"gst_state_code\" class=\"form-control\" value=\"<?= h($party['gst_state_code']) ?>\" maxlength=\"2\">","          </div>","          <div class=\"col-sm-4\">","            <label class=\"form-label\">GST Registration</label>","            <select name=\"gst_registration_type\" class=\"form-select\">","              <option value=\"\">\u2014</option>","              <?php foreach (['regular','composition','unregistered','consumer','sez'] as $opt): ?>","                <option value=\"<?= h($opt) ?>\" <?= ($party['gst_registration_type']===$opt)?'selected':'' ?>><?= ucfirst($opt) ?></option>","              <?php endforeach; ?>","            </select>","          </div>","","          <div class=\"col-sm-4\">","            <label class=\"form-label\">PAN</label>","            <input type=\"text\" name=\"pan_number\" class=\"form-control\" value=\"<?= h($party['pan_number']) ?>\" maxlength=\"20\">","          </div>","          <div class=\"col-sm-4\">","            <label class=\"form-label\">MSME Udyam</label>","            <input type=\"text\" name=\"msme_udyam\" class=\"form-control\" value=\"<?= h($party['msme_udyam']) ?>\">","          </div>","","          <div class=\"col-12\"><hr></div>","","          <div class=\"col-sm-8\">","            <label class=\"form-label\">Address Line 1</label>","            <input type=\"text\" name=\"address_line1\" class=\"form-control\" value=\"<?= h($party['address_line1']) ?>\">","          </div>","          <div class=\"col-sm-8\">","            <label class=\"form-label\">Address Line 2</label>","            <input type=\"text\" name=\"address_line2\" class=\"form-control\" value=\"<?= h($party['address_line2']) ?>\">","          </div>","          <div class=\"col-sm-4\">","            <label class=\"form-label\">City</label>","            <input type=\"text\" name=\"city\" class=\"form-control\" value=\"<?= h($party['city']) ?>\">","          </div>","          <div class=\"col-sm-4\">","            <label class=\"form-label\">State</label>","            <input type=\"text\" name=\"state\" class=\"form-control\" value=\"<?= h($party['state']) ?>\">","          </div>","          <div class=\"col-sm-4\">","            <label class=\"form-label\">Country</label>","            <input type=\"text\" name=\"country\" class=\"form-control\" value=\"<?= h($party['country']) ?>\">","          </div>","          <div class=\"col-sm-4\">","            <label class=\"form-label\">PIN</label>","            <input type=\"text\" name=\"pincode\" class=\"form-control\" value=\"<?= h($party['pincode']) ?>\">","          </div>","","          <div class=\"col-sm-4 form-check mt-4\">","            <input type=\"checkbox\" class=\"form-check-input\" id=\"status\" name=\"status\" value=\"1\" <?= ((int)$party['status']===1)?'checked':'' ?>>","            <label class=\"form-check-label\" for=\"status\">Active</label>","          </div>","        </div>","      </div>","","      <!-- COMMERCIALS -->","      <div class=\"tab-pane fade\" id=\"tab-commercial\">","        <div class=\"row g-3\">","          <div class=\"col-sm-3\">","            <label class=\"form-label\">Payment Terms (days)</label>","            <input type=\"number\" name=\"payment_terms_days\" class=\"form-control\" value=\"<?= h((string)$commercial['payment_terms_days']) ?>\">","          </div>","          <div class=\"col-sm-3\">","            <label class=\"form-label\">Credit Limit</label>","            <input type=\"text\" name=\"credit_limit\" class=\"form-control\" value=\"<?= h((string)$commercial['credit_limit']) ?>\">","          </div>","          <div class=\"col-sm-3\">","            <label class=\"form-label\">TDS Section</label>","            <input type=\"text\" name=\"tds_section\" class=\"form-control\" value=\"<?= h((string)$commercial['tds_section']) ?>\" placeholder=\"194C\">","          </div>","          <div class=\"col-sm-3\">","            <label class=\"form-label\">TDS Rate (%)</label>","            <input type=\"text\" name=\"tds_rate\" class=\"form-control\" value=\"<?= h((string)$commercial['tds_rate']) ?>\">","          </div>","","          <div class=\"col-sm-3 form-check mt-4\">","            <input type=\"checkbox\" class=\"form-check-input\" id=\"tcs_applicable\" name=\"tcs_applicable\" value=\"1\" <?= $commercial['tcs_applicable']? 'checked':'' ?>>","            <label class=\"form-check-label\" for=\"tcs_applicable\">TCS Applicable</label>","          </div>","          <div class=\"col-sm-3 form-check mt-4\">","            <input type=\"checkbox\" class=\"form-check-input\" id=\"e_invoice_required\" name=\"e_invoice_required\" value=\"1\" <?= $commercial['e_invoice_required']? 'checked':'' ?>>","            <label class=\"form-check-label\" for=\"e_invoice_required\">E-Invoice Required</label>","          </div>","          <div class=\"col-sm-3 form-check mt-4\">","            <input type=\"checkbox\" class=\"form-check-input\" id=\"reverse_charge_applicable\" name=\"reverse_charge_applicable\" value=\"1\" <?= $commercial['reverse_charge_applicable']? 'checked':'' ?>>","            <label class=\"form-check-label\" for=\"reverse_charge_applicable\">Reverse Charge</label>","          </div>","","          <div class=\"col-sm-6\">","            <label class=\"form-label\">Default Place of Supply</label>","            <input type=\"text\" name=\"default_place_of_supply\" class=\"form-control\" value=\"<?= h((string)$commercial['default_place_of_supply']) ?>\">","          </div>","        </div>","      </div>","","      <!-- BANKS -->","      <div class=\"tab-pane fade\" id=\"tab-banks\">","        <div class=\"d-flex justify-content-between align-items-center mb-2\">","          <strong>Bank Accounts</strong>","          <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" id=\"addBank\"><i class=\"bi bi-plus\"></i> Add</button>","        </div>","        <div class=\"table-responsive\">","          <table class=\"table table-sm align-middle\" id=\"bankTable\">","            <thead class=\"table-light\">","              <tr>","                <th>Beneficiary</th>","                <th>Bank</th>","                <th>Branch</th>","                <th>Account #</th>","                <th>IFSC</th>","                <th>Type</th>","                <th>Primary</th>","                <th style=\"width:48px;\"></th>","              </tr>","            </thead>","            <tbody>","              <?php $i=0; if ($banks): foreach ($banks as $b): ?>","                <tr>","                  <td>","                    <input type=\"hidden\" name=\"bank_id[]\" value=\"<?= (int)$b['id'] ?>\">","                    <input type=\"text\" name=\"beneficiary_name[]\" class=\"form-control form-control-sm\" value=\"<?= h((string)$b['beneficiary_name']) ?>\">","                  </td>","                  <td><input type=\"text\" name=\"bank_name[]\" class=\"form-control form-control-sm\" value=\"<?= h((string)$b['bank_name']) ?>\"></td>","                  <td><input type=\"text\" name=\"branch[]\" class=\"form-control form-control-sm\" value=\"<?= h((string)$b['branch']) ?>\"></td>","                  <td><input type=\"text\" name=\"account_number[]\" class=\"form-control form-control-sm\" value=\"<?= h((string)$b['account_number']) ?>\"></td>","                  <td><input type=\"text\" name=\"ifsc[]\" class=\"form-control form-control-sm\" value=\"<?= h((string)$b['ifsc']) ?>\"></td>","                  <td>","                    <select name=\"account_type[]\" class=\"form-select form-select-sm\">","                      <?php foreach (['current','savings','overdraft','other'] as $opt): ?>","                        <option value=\"<?= $opt ?>\" <?= ((string)$b['account_type']===$opt?'selected':'') ?>><?= ucfirst($opt) ?></option>","                      <?php endforeach; ?>","                    </select>","                  </td>","                  <td class=\"text-center\">","                    <input type=\"radio\" name=\"bank_is_primary[<?= $i ?>]\" class=\"form-check-input\" <?= ((int)$b['is_primary']===1?'checked':'') ?>>","                  </td>","                  <td><button type=\"button\" class=\"btn btn-sm btn-outline-danger delRow\">&times;</button></td>","                </tr>","              <?php $i++; endforeach; endif; ?>","              <!-- empty rows via JS -->","            </tbody>","          </table>","        </div>","      </div>","","      <!-- CONTACTS -->","      <div class=\"tab-pane fade\" id=\"tab-contacts\">","        <div class=\"d-flex justify-content-between align-items-center mb-2\">","          <strong>Contacts</strong>","          <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" id=\"addContact\"><i class=\"bi bi-plus\"></i> Add</button>","        </div>","        <div class=\"table-responsive\">","          <table class=\"table table-sm align-middle\" id=\"contactTable\">","            <thead class=\"table-light\">","              <tr>","                <th>Name</th>","                <th>Email</th>","                <th>Phone</th>","                <th>Role</th>","                <th>Primary</th>","                <th style=\"width:48px;\"></th>","              </tr>","            </thead>","            <tbody>","              <?php $j=0; if ($contacts): foreach ($contacts as $c): ?>","                <tr>","                  <td>","                    <input type=\"hidden\" name=\"contact_id[]\" value=\"<?= (int)$c['id'] ?>\">","                    <input type=\"text\" name=\"contact_name[]\" class=\"form-control form-control-sm\" value=\"<?= h((string)$c['name']) ?>\">","                  </td>","                  <td><input type=\"email\" name=\"contact_email[]\" class=\"form-control form-control-sm\" value=\"<?= h((string)$c['email']) ?>\"></td>","                  <td><input type=\"text\" name=\"contact_phone[]\" class=\"form-control form-control-sm\" value=\"<?= h((string)$c['phone']) ?>\"></td>","                  <td><input type=\"text\" name=\"contact_role_title[]\" class=\"form-control form-control-sm\" value=\"<?= h((string)$c['role_title']) ?>\"></td>","                  <td class=\"text-center\">","                    <input type=\"radio\" name=\"contact_is_primary[<?= $j ?>]\" class=\"form-check-input\" <?= ((int)$c['is_primary']===1?'checked':'') ?>>","                  </td>","                  <td><button type=\"button\" class=\"btn btn-sm btn-outline-danger delRow\">&times;</button></td>","                </tr>","              <?php $j++; endforeach; endif; ?>","            </tbody>","          </table>","        </div>","      </div>","","      <!-- ATTACHMENTS -->","      <?php if ($isEdit): ?>","      <div class=\"tab-pane fade\" id=\"tab-attachments\">","        <div class=\"card shadow-sm\">","          <div class=\"card-body\">","            <?php @include __DIR__ . '/../attachments/panel.php'; ?>","          </div>","        </div>","      </div>","      <?php endif; ?>","    </div>","","    <div class=\"d-grid gap-2 d-sm-flex justify-content-end mt-3\">","      <button class=\"btn btn-primary\"><i class=\"bi bi-save\"></i> Save</button>","      <a class=\"btn btn-outline-secondary\" href=\"parties_list.php\">Cancel</a>","    </div>","  </form>","</div>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>","","<script>","/** Auto-code preview */","document.getElementById('btnGen')?.addEventListener('click', async function(){","  const typeSel = document.querySelector('select[name=\"type\"]');","  const type = typeSel ? typeSel.value : '';","  try {","    const res = await fetch('party_next_code.php?type=' + encodeURIComponent(type));","    const js = await res.json();","    if (js.ok) document.querySelector('input[name=\"code\"]').value = js.code;","    else alert(js.message || 'Failed to generate');","  } catch (e) { alert('Network error'); }","});","","/** GST helper */","document.getElementById('btnGST')?.addEventListener('click', async function(){","  const gstin = (document.getElementById('gstin')?.value || '').trim().toUpperCase();","  if (!gstin) { alert('Enter GSTIN'); return; }","  try {","    const res = await fetch('party_gst_lookup.php?gstin=' + encodeURIComponent(gstin));","    const js = await res.json();","    if (js.ok) {","      if (js.state_code) document.querySelector('input[name=\"gst_state_code\"]').value = js.state_code;","      if (js.legal_name)  document.querySelector('input[name=\"legal_name\"]').value  = js.legal_name;","    } else alert(js.message || 'GST lookup failed');","  } catch (e) { alert('Network error'); }","});","","/** Dynamic rows: Banks */","(function(){","  const tbody = document.querySelector('#bankTable tbody');","  const addBtn = document.getElementById('addBank');","  addBtn?.addEventListener('click', () => {","    const idx = Date.now();","    const tr = document.createElement('tr');","    tr.innerHTML = `","      <td><input type=\"hidden\" name=\"bank_id[]\" value=\"0\">","          <input type=\"text\" name=\"beneficiary_name[]\" class=\"form-control form-control-sm\"></td>","      <td><input type=\"text\" name=\"bank_name[]\" class=\"form-control form-control-sm\"></td>","      <td><input type=\"text\" name=\"branch[]\" class=\"form-control form-control-sm\"></td>","      <td><input type=\"text\" name=\"account_number[]\" class=\"form-control form-control-sm\"></td>","      <td><input type=\"text\" name=\"ifsc[]\" class=\"form-control form-control-sm\"></td>","      <td>","        <select name=\"account_type[]\" class=\"form-select form-select-sm\">","          <option value=\"current\">Current</option>","          <option value=\"savings\">Savings</option>","          <option value=\"overdraft\">Overdraft</option>","          <option value=\"other\">Other</option>","        </select>","      </td>","      <td class=\"text-center\"><input type=\"radio\" name=\"bank_is_primary[${idx}]\" class=\"form-check-input\"></td>","      <td><button type=\"button\" class=\"btn btn-sm btn-outline-danger delRow\">&times;</button></td>","    `;","    tbody.appendChild(tr);","  });","  tbody?.addEventListener('click', (e) => {","    if (e.target.closest('.delRow')) e.target.closest('tr').remove();","  });","})();","","/** Dynamic rows: Contacts */","(function(){","  const tbody = document.querySelector('#contactTable tbody');","  const addBtn = document.getElementById('addContact');","  addBtn?.addEventListener('click', () => {","    const idx = Date.now();","    const tr = document.createElement('tr');","    tr.innerHTML = `","      <td><input type=\"hidden\" name=\"contact_id[]\" value=\"0\">","          <input type=\"text\" name=\"contact_name[]\" class=\"form-control form-control-sm\"></td>","      <td><input type=\"email\" name=\"contact_email[]\" class=\"form-control form-control-sm\"></td>","      <td><input type=\"text\" name=\"contact_phone[]\" class=\"form-control form-control-sm\"></td>","      <td><input type=\"text\" name=\"contact_role_title[]\" class=\"form-control form-control-sm\"></td>","      <td class=\"text-center\"><input type=\"radio\" name=\"contact_is_primary[${idx}]\" class=\"form-check-input\"></td>","      <td><button type=\"button\" class=\"btn btn-sm btn-outline-danger delRow\">&times;</button></td>","    `;","    tbody.appendChild(tr);","  });","  tbody?.addEventListener('click', (e) => {","    if (e.target.closest('.delRow')) e.target.closest('tr').remove();","  });","})();","</script>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/parties/party_next_code.php": ["<?php","/** PATH: /public_html/parties/party_next_code.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","","header('Content-Type: application/json');","","try {","  require_login();","","  $type = strtolower(trim((string)($_GET['type'] ?? 'supplier')));","  $valid = ['client','supplier','contractor','other'];","  if (!in_array($type, $valid, true)) { throw new RuntimeException('Invalid type'); }","","  $pdo = db();","","  // Prefix from meta (fallback map)","  $st = $pdo->prepare(\"SELECT code_prefix FROM party_type_meta WHERE type=?\");","  $st->execute([$type]);","  $prefix = (string)($st->fetchColumn() ?: '');","  if ($prefix === '') {","    $map = ['client'=>'CL','supplier'=>'SP','contractor'=>'CT','other'=>'OT'];","    $prefix = $map[$type] ?? 'PT';","  }","","  // Peek next (NO INCREMENT here)","  $scope = 'party:' . $prefix;","  $row = $pdo->prepare(\"SELECT current_value FROM party_sequences WHERE scope=?\");","  $row->execute([$scope]);","  $cur = (int)($row->fetchColumn() ?: 0);","  $next = $cur + 1;","","  // Preserve historical hyphen style per prefix (e.g., CL-0001 vs SP0023)","  $cst = $pdo->prepare(\"SELECT code FROM parties WHERE code LIKE ? ORDER BY id DESC LIMIT 1\");","  $cst->execute([$prefix . '%']);","  $last = (string)($cst->fetchColumn() ?: '');","  $hyphen = $last && strpos($last, '-') !== false;","  if (!$last && $type === 'client') $hyphen = true;","","  $code = $prefix . ($hyphen?'-':'') . str_pad((string)$next, 4, '0', STR_PAD_LEFT);","","  echo json_encode(['ok'=>true,'code'=>$code]);","} catch (Throwable $e) {","  echo json_encode(['ok'=>false,'message'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/parties/parties_list.php": ["<?php","/** PATH: /public_html/parties/parties_list.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('parties.view');","","$pdo = db();","","$q = trim($_GET['q'] ?? '');","$type = trim($_GET['type'] ?? '');","$types = ['client','supplier','contractor','other'];","if ($type !== '' && !in_array($type, $types, true)) $type = '';","","// Build WHERE dynamically (avoid collation issues)","$where = [];","$params = [];","if ($q !== '') {","  $where[] = \"(name LIKE ? OR code LIKE ? OR phone LIKE ? OR gst_number LIKE ? OR city LIKE ? OR state LIKE ?)\";","  $like = '%'.$q.'%';","  array_push($params, $like,$like,$like,$like,$like,$like);","}","if ($type !== '') { $where[] = \"type = ?\"; $params[] = $type; }","","$sql = \"SELECT id, code, name, type, phone, gst_number, city, state, status","        FROM parties\"","      . (count($where) ? \" WHERE \".implode(\" AND \", $where) : \"\")","      . \" ORDER BY id DESC LIMIT 200\";","","$st = $pdo->prepare($sql);","$st->execute($params);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","$pageTitle = 'Parties';","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container-fluid py-3\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <h1 class=\"h4 mb-0\"><?= h($pageTitle) ?></h1>","    <div class=\"d-flex gap-2\">","      <?php if (has_permission('parties.manage')): ?>","        <a href=\"parties_form.php\" class=\"btn btn-primary btn-sm\"><i class=\"bi bi-plus-circle\"></i> New Party</a>","      <?php endif; ?>","    </div>","  </div>","","  <form class=\"row g-2 mb-3\" method=\"get\" action=\"\">","    <div class=\"col-sm-5 col-md-4 col-lg-3\">","      <input type=\"text\" class=\"form-control\" name=\"q\" value=\"<?= h($q) ?>\" placeholder=\"Search name, code, phone, GST, city, state\">","    </div>","    <div class=\"col-sm-4 col-md-3 col-lg-2\">","      <select name=\"type\" class=\"form-select\">","        <option value=\"\">All types</option>","        <?php foreach ($types as $t): ?>","          <option value=\"<?= h($t) ?>\" <?= $type===$t?'selected':'' ?>><?= ucfirst($t) ?></option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-auto\">","      <button class=\"btn btn-outline-secondary\"><i class=\"bi bi-search\"></i> Filter</button>","    </div>","  </form>","","  <?php if (empty($rows)): ?>","    <div class=\"alert alert-warning\">No parties found.</div>","  <?php else: ?>","    <div class=\"table-responsive\">","      <table class=\"table table-sm align-middle\">","        <thead class=\"table-light\">","          <tr>","            <th style=\"width:120px\">Code</th>","            <th>Name</th>","            <th style=\"width:120px\">Type</th>","            <th style=\"width:140px\">Phone</th>","            <th style=\"width:160px\">GST</th>","            <th style=\"width:180px\">Location</th>","            <th style=\"width:90px\">Status</th>","            <th style=\"width:140px\">Actions</th>","          </tr>","        </thead>","        <tbody>","          <?php foreach ($rows as $r): ?>","            <tr>","              <td><span class=\"badge bg-secondary-subtle border text-body\"><?= h($r['code']) ?></span></td>","              <td><?= h($r['name']) ?></td>","              <td><?= ucfirst(h($r['type'])) ?></td>","              <td><?= h($r['phone'] ?? '') ?></td>","              <td><?= h($r['gst_number'] ?? '') ?></td>","              <td><?= h(trim(($r['city'] ?? '') . ', ' . ($r['state'] ?? ''), ', ')) ?></td>","              <td>","                <?php if ((int)$r['status'] === 1): ?>","                  <span class=\"badge bg-success-subtle border text-success-emphasis\">Active</span>","                <?php else: ?>","                  <span class=\"badge bg-secondary-subtle border text-body\">Inactive</span>","                <?php endif; ?>","              </td>","              <td>","                <div class=\"btn-group btn-group-sm\">","                  <?php if (has_permission('parties.manage')): ?>","                    <a class=\"btn btn-outline-secondary\" href=\"parties_form.php?id=<?= (int)$r['id'] ?>\" title=\"Edit\">","                      <i class=\"bi bi-pencil-square\"></i> Edit","                    </a>","                  <?php endif; ?>","                </div>","              </td>","            </tr>","          <?php endforeach; ?>","        </tbody>","      </table>","    </div>","  <?php endif; ?>","</div>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/file_report.php": ["<?php","declare(strict_types=1);","// file_report.php","// Usage: place in the folder you want to scan and open in browser.","// Options (GET):","//  - path=/absolute/or/relative/path  (default: current directory)","//  - format=html|csv|json              (default: html)","//  - max_depth=N                       (default: 0 = unlimited)","//  - hide_dotfiles=1                   (hide files/dirs starting with .)","//  - follow_symlinks=1                 (follow symlinks; default no)","//  - download=1                        (force download for csv/json)","// Example: file_report.php?format=csv&hide_dotfiles=1","","set_time_limit(0);","ini_set('memory_limit', '-1');","","$root = (string)($_GET['path'] ?? getcwd());","$format = (string)($_GET['format'] ?? 'html');","$maxDepth = isset($_GET['max_depth']) ? (int)$_GET['max_depth'] : 0;","$hideDot = isset($_GET['hide_dotfiles']) && in_array($_GET['hide_dotfiles'], ['1','true','on'], true);","$followLinks = isset($_GET['follow_symlinks']) && in_array($_GET['follow_symlinks'], ['1','true','on'], true);","","// Validate path","if (!is_dir($root)) {","    http_response_code(400);","    echo \"Path not found or not a directory: \" . htmlspecialchars($root);","    exit;","}","","// Helper: human readable size","function hrsize(float $bytes): string {","    $units = ['B','KB','MB','GB','TB'];","    $i = 0;","    while ($bytes >= 1024 && $i < count($units)-1) { $bytes /= 1024; $i++; }","    return round($bytes, ($i ? 2 : 0)) . ' ' . $units[$i];","}","","// Recursively walk directory","function scan_dir(string $root, bool $hideDot, int $maxDepth, bool $followLinks): array {","    $results = [];","    // Iterator flags","    $flags = \\FilesystemIterator::SKIP_DOTS;","    if ($followLinks) $flags |= \\FilesystemIterator::FOLLOW_SYMLINKS;","    $directory = new \\RecursiveDirectoryIterator($root, $flags);","","    if ($maxDepth > 0) {","        $iter = new \\RecursiveIteratorIterator($directory, \\RecursiveIteratorIterator::SELF_FIRST);","        $iter->setMaxDepth($maxDepth);","    } else {","        $iter = new \\RecursiveIteratorIterator($directory, \\RecursiveIteratorIterator::SELF_FIRST);","    }","","    foreach ($iter as $fileinfo) {","        /** @var SplFileInfo $fileinfo */","        $path = $fileinfo->getPathname();","        $basename = $fileinfo->getBasename();","        if ($hideDot && strlen($basename) > 0 && $basename[0] === '.') continue;","","        // Skip broken symlinks if followLinks is false (RecursiveDirectoryIterator will already handle)","        if ($fileinfo->isLink() && !$followLinks) {","            // treat as file entry with link info","            $results[] = [","                'type' => 'link',","                'path' => $path,","                'name' => $basename,","                'size' => 0,","                'modified' => date('c', $fileinfo->getMTime() ?: time()),","                'perms' => substr(sprintf('%o', $fileinfo->getPerms()), -4),","                'is_dir' => $fileinfo->isDir(),","            ];","            continue;","        }","","        $isDir = $fileinfo->isDir();","        $size = $isDir ? 0.0 : (float)$fileinfo->getSize();","        $results[] = [","            'type' => $isDir ? 'dir' : 'file',","            'path' => $path,","            'name' => $basename,","            'size' => $size,","            'modified' => date('c', $fileinfo->getMTime()),","            'perms' => substr(sprintf('%o', $fileinfo->getPerms()), -4),","            'is_dir' => $isDir,","        ];","    }","","    return $results;","}","","// Collect results","$items = scan_dir($root, $hideDot, $maxDepth, $followLinks);","$totalFiles = 0;","$totalDirs = 0;","$totalBytes = 0.0;","foreach ($items as $it) {","    if ($it['type'] === 'dir') $totalDirs++;","    else $totalFiles++;","    $totalBytes += $it['size'];","}","","// Output in requested format","if ($format === 'csv' || $format === 'json') {","    $download = isset($_GET['download']) && in_array($_GET['download'], ['1','true','on'], true);","    if ($format === 'csv') {","        if ($download) {","            header('Content-Type: text/csv; charset=utf-8');","            header('Content-Disposition: attachment; filename=\"file_report.csv\"');","        } else {","            header('Content-Type: text/csv; charset=utf-8');","        }","        $out = fopen('php://output', 'w');","        fputcsv($out, ['type','path','name','size_bytes','size_readable','modified','perms','is_dir']);","        foreach ($items as $r) {","            fputcsv($out, [","                $r['type'],","                $r['path'],","                $r['name'],","                (string)$r['size'],","                hrsize($r['size']),","                $r['modified'],","                $r['perms'],","                $r['is_dir'] ? '1':'0'","            ]);","        }","        fclose($out);","        exit;","    } else { // json","        if ($download) {","            header('Content-Type: application/json; charset=utf-8');","            header('Content-Disposition: attachment; filename=\"file_report.json\"');","        } else {","            header('Content-Type: application/json; charset=utf-8');","        }","        echo json_encode([","            'scanned_at' => date('c'),","            'root' => $root,","            'summary' => [","                'files' => $totalFiles,","                'directories' => $totalDirs,","                'total_bytes' => $totalBytes,","                'total_readable' => hrsize($totalBytes)","            ],","            'items' => $items","        ], JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES);","        exit;","    }","}","","// Default: HTML output (Bootstrap 5)","?><!doctype html>","<html lang=\"en\">","<head>","  <meta charset=\"utf-8\">","  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">","  <title>File report \u2014 <?= htmlspecialchars($root) ?></title>","  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","  <style>","    body { padding: 18px; }","    pre.small { font-size: .85rem; white-space: pre-wrap; }","    .mono { font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, \"Roboto Mono\", monospace; font-size:.9rem; }","    td.path { max-width: 520px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }","  </style>","</head>","<body>","<div class=\"container-fluid\">","  <div class=\"d-flex align-items-center mb-3\">","    <h3 class=\"me-auto\">File report</h3>","    <div class=\"text-muted\">Scanned: <strong><?= date('Y-m-d H:i:s') ?></strong></div>","  </div>","","  <div class=\"card mb-3\">","    <div class=\"card-body\">","      <form class=\"row g-2\" method=\"get\">","        <div class=\"col-md-6\">","          <label class=\"form-label\">Path to scan</label>","          <input name=\"path\" class=\"form-control mono\" value=\"<?= htmlspecialchars($root) ?>\">","          <div class=\"form-text\">Absolute or relative path. Default is current directory (where script lives).</div>","        </div>","","        <div class=\"col-md-2\">","          <label class=\"form-label\">Format</label>","          <select name=\"format\" class=\"form-select\">","            <option value=\"html\" <?= $format==='html'?'selected':'' ?>>HTML</option>","            <option value=\"csv\" <?= $format==='csv'?'selected':'' ?>>CSV</option>","            <option value=\"json\" <?= $format==='json'?'selected':'' ?>>JSON</option>","          </select>","        </div>","","        <div class=\"col-md-1\">","          <label class=\"form-label\">Max depth</label>","          <input name=\"max_depth\" type=\"number\" min=\"0\" class=\"form-control\" value=\"<?= $maxDepth ?>\">","        </div>","","        <div class=\"col-md-1\">","          <label class=\"form-label\">Hide dotfiles</label>","          <select name=\"hide_dotfiles\" class=\"form-select\">","            <option value=\"0\" <?= !$hideDot?'selected':'' ?>>No</option>","            <option value=\"1\" <?= $hideDot?'selected':'' ?>>Yes</option>","          </select>","        </div>","","        <div class=\"col-md-2 d-flex align-items-end gap-2\">","          <button class=\"btn btn-primary\">Scan</button>","          <a class=\"btn btn-outline-secondary\" href=\"?<?= http_build_query(array_merge($_GET, ['format'=>'csv','download'=>'1'])) ?>\">Download CSV</a>","          <a class=\"btn btn-outline-secondary\" href=\"?<?= http_build_query(array_merge($_GET, ['format'=>'json','download'=>'1'])) ?>\">Download JSON</a>","        </div>","      </form>","    </div>","  </div>","","  <div class=\"row mb-3\">","    <div class=\"col\">","      <div class=\"card\">","        <div class=\"card-body\">","          <h5 class=\"card-title\">Summary</h5>","          <div class=\"row\">","            <div class=\"col-sm-3\"><strong>Root</strong><div class=\"mono small\"><?= htmlspecialchars($root) ?></div></div>","            <div class=\"col-sm-2\"><strong>Files</strong><div><?= number_format($totalFiles) ?></div></div>","            <div class=\"col-sm-2\"><strong>Directories</strong><div><?= number_format($totalDirs) ?></div></div>","            <div class=\"col-sm-2\"><strong>Total size</strong><div><?= hrsize($totalBytes) ?></div></div>","            <div class=\"col-sm-3\"><strong>Options</strong>","              <div class=\"small\">Max depth: <?= $maxDepth ?: 'unlimited' ?><br>Hide dotfiles: <?= $hideDot ? 'yes' : 'no' ?></div>","            </div>","          </div>","        </div>","      </div>","    </div>","  </div>","","  <div class=\"table-responsive\" style=\"max-height:60vh; overflow:auto;\">","    <table class=\"table table-sm table-hover align-middle\">","      <thead class=\"table-light sticky-top\">","        <tr>","          <th>Type</th>","          <th>Path</th>","          <th>Name</th>","          <th class=\"text-end\">Size</th>","          <th>Modified</th>","          <th>Perms</th>","        </tr>","      </thead>","      <tbody>","        <?php foreach ($items as $r): ?>","          <tr>","            <td class=\"align-middle\">","              <?php if ($r['type'] === 'dir'): ?>","                <span class=\"badge bg-primary\">DIR</span>","              <?php elseif ($r['type'] === 'link'): ?>","                <span class=\"badge bg-warning text-dark\">LINK</span>","              <?php else: ?>","                <span class=\"badge bg-secondary\">FILE</span>","              <?php endif; ?>","            </td>","            <td class=\"path mono\" title=\"<?= htmlspecialchars($r['path']) ?>\"><?= htmlspecialchars($r['path']) ?></td>","            <td><?= htmlspecialchars($r['name']) ?></td>","            <td class=\"text-end\"><?= $r['is_dir'] ? '-' : hrsize($r['size']) ?></td>","            <td><?= htmlspecialchars($r['modified']) ?></td>","            <td><?= htmlspecialchars($r['perms']) ?></td>","          </tr>","        <?php endforeach; ?>","      </tbody>","    </table>","  </div>","","  <footer class=\"text-muted small mt-3\">","    Run locally. Scan can be slow for very large trees. If you want, I can add filters (extensions only), grouping by folder, or a CSV scheduled export.","  </footer>","</div>","","<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/diag_min.php": ["<?php","// PATH: /public_html/_diag_min.php","header('Content-Type: text/plain; charset=utf-8');","echo \"PHP works\\n\";"],
"/home/u989675055/domains/emsinfra.co.in/public_html/ui/partials/notifications_bell.php": ["<?php","declare(strict_types=1);","/**"," * Pure UI notifications bell. No DB calls here."," * If $unread_count and $unread_items are set by the page, we render them."," * Otherwise, show a graceful empty state."," */","$unread_count = isset($unread_count) && is_numeric($unread_count) ? (int)$unread_count : 0;","$items = isset($unread_items) && is_array($unread_items) ? $unread_items : [];","?>","<div class=\"dropdown\">","  <a class=\"btn btn-outline-secondary btn-sm position-relative\" href=\"#\" id=\"notifDropdown\"","     role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" title=\"Notifications\">","    <i class=\"bi bi-bell\"></i>","    <?php if ($unread_count > 0): ?>","      <span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">","        <?= (int)$unread_count ?>","      </span>","    <?php endif; ?>","  </a>","  <div class=\"dropdown-menu dropdown-menu-end p-0 shadow\" aria-labelledby=\"notifDropdown\" style=\"min-width: 360px;\">","    <div class=\"list-group list-group-flush\">","      <?php if (!$unread_count || empty($items)): ?>","        <div class=\"p-3 text-muted\">No new notifications.</div>","      <?php else: ?>","        <?php foreach ($items as $n): ?>","          <div class=\"list-group-item\">","            <div class=\"d-flex justify-content-between align-items-start\">","              <div class=\"me-2\">","                <div class=\"fw-semibold\"><?= htmlspecialchars((string)($n['title'] ?? 'Notification'), ENT_QUOTES, 'UTF-8') ?></div>","                <small class=\"text-muted\"><?= htmlspecialchars((string)($n['time'] ?? ''), ENT_QUOTES, 'UTF-8') ?></small>","              </div>","              <?php if (!empty($n['link'])): ?>","                <a class=\"btn btn-sm btn-primary\" href=\"<?= htmlspecialchars((string)$n['link'], ENT_QUOTES, 'UTF-8') ?>\">Open</a>","              <?php endif; ?>","            </div>","          </div>","        <?php endforeach; ?>","      <?php endif; ?>","    </div>","    <div class=\"p-2 text-end\">","      <a class=\"btn btn-light btn-sm\" href=\"/notifications/center.php\"><i class=\"bi bi-bell-fill me-1\"></i> Notification Center</a>","    </div>","  </div>","</div>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/ui/layout_end.php": ["<?php /** UI Layout End (no logic) */ ?>","      </div> <!-- /.container-fluid -->","    </main>","  </div> <!-- /.app-shell -->","","  <!-- Mobile Offcanvas Sidebar -->","  <div class=\"offcanvas offcanvas-start offcanvas-sidebar\" tabindex=\"-1\" id=\"offcanvasSidebar\" aria-labelledby=\"offcanvasSidebarLabel\">","    <div class=\"offcanvas-header\">","      <h5 class=\"offcanvas-title\" id=\"offcanvasSidebarLabel\">Navigation</h5>","      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>","    </div>","    <div class=\"offcanvas-body p-0\">","      <?php @include __DIR__ . '/sidebar.php'; ?>","    </div>","  </div>","","  <!-- Bootstrap JS (bundle includes Popper) -->","  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/ui/sidebar.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/ui/sidebar.php"," * Sidebar navigation (Bootstrap 5) \u2014 compact with collapsible groups."," * Groups: Core, Masters, Purchase, Stores, Production & Planning, Machinery, Maintenance, Quality, Accounts, Audit, Reports"," * Note: Pure UI; no RBAC checks (keep kernel untouched)."," */","","$REQ_URI = $_SERVER['REQUEST_URI'] ?? '';","","if (!function_exists('nav_is_active')) {","  /** Return 'active' if any of $needles appear in current URI */","  function nav_is_active(array $needles, string $haystack): string {","    foreach ($needles as $n) { if ($n !== '' && str_contains($haystack, $n)) return 'active'; }","    return '';","  }","}","if (!function_exists('collapse_show')) {","  /** Return 'show' if any of $needles appear in current URI (auto-expand a group) */","  function collapse_show(array $needles, string $haystack): string {","    foreach ($needles as $n) { if ($n !== '' && str_contains($haystack, $n)) return 'show'; }","    return '';","  }","}","?>","<nav class=\"px-2 py-3\">","  <ul class=\"nav nav-pills flex-column gap-1 w-100\">","","    <!-- Core -->","    <li class=\"nav-item text-uppercase small text-muted px-2 mt-1\">Core</li>","    <li class=\"nav-item\">","      <a class=\"nav-link d-flex align-items-center <?= nav_is_active(['/dashboard.php'], $REQ_URI) ?>\" href=\"/dashboard.php\">","        <i class=\"bi bi-speedometer2 me-2\"></i> Dashboard","      </a>","    </li>","    <li class=\"nav-item\">","      <a class=\"nav-link d-flex align-items-center <?= nav_is_active(['/notifications/'], $REQ_URI) ?>\" href=\"/notifications/center.php\">","        <i class=\"bi bi-bell me-2\"></i> Notifications","      </a>","    </li>","","    <!-- Masters (collapsible) -->","    <?php $masters_needles = ['/identity/', '/uom/', '/material/', '/items/', '/parties/', '/locations/', '/projects/']; ?>","    <li class=\"nav-item text-uppercase small text-muted px-2 mt-3\">Masters</li>","    <li class=\"nav-item\">","      <button class=\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($masters_needles, $REQ_URI) ?>\"","              data-bs-toggle=\"collapse\" data-bs-target=\"#navMasters\" aria-expanded=\"<?= collapse_show($masters_needles,$REQ_URI)?'true':'false' ?>\">","        <i class=\"bi bi-sliders me-2\"></i> Masters","        <i class=\"bi bi-caret-down ms-auto\"></i>","      </button>","      <div id=\"navMasters\" class=\"collapse <?= collapse_show($masters_needles, $REQ_URI) ?>\">","        <ul class=\"nav flex-column ms-3 mt-1\">","          <li><a class=\"nav-link <?= nav_is_active(['/identity/'], $REQ_URI) ?>\" href=\"/identity/users_list.php\"><i class=\"bi bi-people me-2\"></i> Users & Roles</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/uom/uom_list.php'], $REQ_URI) ?>\" href=\"/uom/uom_list.php\"><i class=\"bi bi-rulers me-2\"></i> UOM</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/uom/uom_conversions_list.php'], $REQ_URI) ?>\" href=\"/uom/uom_conversions_list.php\"><i class=\"bi bi-shuffle me-2\"></i> UOM Conversions</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/material/'], $REQ_URI) ?>\" href=\"/material/index.php\"><i class=\"bi bi-diagram-2 me-2\"></i> Material Taxonomy</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/items/'], $REQ_URI) ?>\" href=\"/items/items_list.php\"><i class=\"bi bi-box-seam me-2\"></i> Items</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/parties/'], $REQ_URI) ?>\" href=\"/parties/parties_list.php\"><i class=\"bi bi-building me-2\"></i> Parties</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/locations/'], $REQ_URI) ?>\" href=\"/locations/warehouses_list.php\"><i class=\"bi bi-geo-alt me-2\"></i> Locations/Warehouses</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/projects/'], $REQ_URI) ?>\" href=\"/projects/projects_list.php\"><i class=\"bi bi-kanban me-2\"></i> Projects</a></li>","        </ul>","      </div>","    </li>","","    <!-- Operations -->","    <li class=\"nav-item text-uppercase small text-muted px-2 mt-3\">Operations</li>","","    <!-- Purchase (collapsible) -->","    <?php $purchase_needles = ['/purchase/']; ?>","    <li class=\"nav-item\">","      <button class=\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($purchase_needles, $REQ_URI) ?>\"","              data-bs-toggle=\"collapse\" data-bs-target=\"#navPurchase\" aria-expanded=\"<?= collapse_show($purchase_needles,$REQ_URI)?'true':'false' ?>\">","        <i class=\"bi bi-bag-check me-2\"></i> Purchase","        <i class=\"bi bi-caret-down ms-auto\"></i>","      </button>","      <div id=\"navPurchase\" class=\"collapse <?= collapse_show($purchase_needles, $REQ_URI) ?>\">","        <ul class=\"nav flex-column ms-3 mt-1\">","          <li><a class=\"nav-link <?= nav_is_active(['/purchase/indents_'], $REQ_URI) ?>\" href=\"/purchase/indents_list.php\"><i class=\"bi bi-card-list me-2\"></i> Indents</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/purchase/rfq_'], $REQ_URI) ?>\" href=\"/purchase/rfq_list.php\"><i class=\"bi bi-envelope-paper me-2\"></i> RFQ</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/purchase/quotes_','/purchase/quote'], $REQ_URI) ?>\" href=\"/purchase/quotes_list.php\"><i class=\"bi bi-currency-rupee me-2\"></i> Quotes</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/purchase/po_'], $REQ_URI) ?>\" href=\"/purchase/po_list.php\"><i class=\"bi bi-receipt me-2\"></i> Purchase Orders</a></li>","        </ul>","      </div>","    </li>","","    <!-- Stores (collapsible) -->","    <?php $stores_needles = ['/stores/']; ?>","    <li class=\"nav-item\">","      <button class=\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($stores_needles, $REQ_URI) ?>\"","              data-bs-toggle=\"collapse\" data-bs-target=\"#navStores\" aria-expanded=\"<?= collapse_show($stores_needles,$REQ_URI)?'true':'false' ?>\">","        <i class=\"bi bi-boxes me-2\"></i> Stores","        <i class=\"bi bi-caret-down ms-auto\"></i>","      </button>","      <div id=\"navStores\" class=\"collapse <?= collapse_show($stores_needles, $REQ_URI) ?>\">","        <ul class=\"nav flex-column ms-3 mt-1\">","          <li><a class=\"nav-link <?= nav_is_active(['/stores/grn_'], $REQ_URI) ?>\" href=\"/stores/grn_list.php\"><i class=\"bi bi-box-arrow-in-down-left me-2\"></i> GRN (Receipts)</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/stores/issue_'], $REQ_URI) ?>\" href=\"/stores/issues_list.php\"><i class=\"bi bi-box-arrow-up-right me-2\"></i> Issues/Returns</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/stores/transfer_'], $REQ_URI) ?>\" href=\"/stores/transfer_list.php\"><i class=\"bi bi-arrow-left-right me-2\"></i> Stock Transfer</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/stores/minmax_report.php'], $REQ_URI) ?>\" href=\"/stores/minmax_report.php\"><i class=\"bi bi-graph-down-arrow me-2\"></i> Min/Max Report</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/stores/purchase_advice_list.php'], $REQ_URI) ?>\" href=\"/stores/purchase_advice_list.php\"><i class=\"bi bi-clipboard2-plus me-2\"></i> Purchase Advice</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/stores/stock_adjust_form.php'], $REQ_URI) ?>\" href=\"/stores/stock_adjust_form.php\"><i class=\"bi bi-sliders2 me-2\"></i> Stock Adjust</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/stores/gatepass_list.php'], $REQ_URI) ?>\" href=\"/stores/gatepass_list.php\"><i class=\"bi bi-card-heading me-2\"></i> Gate Pass</a></li>","        </ul>","      </div>","    </li>","","    <!-- Production & Planning (collapsible) -->","    <?php $pp_needles = ['/purchase/bom_list.php','/workorders/','/processes/','/workcenters/']; ?>","    <li class=\"nav-item\">","      <button class=\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($pp_needles, $REQ_URI) ?>\"","              data-bs-toggle=\"collapse\" data-bs-target=\"#navProdPlan\" aria-expanded=\"<?= collapse_show($pp_needles,$REQ_URI)?'true':'false' ?>\">","        <i class=\"bi bi-diagram-3 me-2\"></i> Production &amp; Planning","        <i class=\"bi bi-caret-down ms-auto\"></i>","      </button>","      <div id=\"navProdPlan\" class=\"collapse <?= collapse_show($pp_needles, $REQ_URI) ?>\">","        <ul class=\"nav flex-column ms-3 mt-1\">","          <!-- Corrected BOM link (as requested) -->","          <li><a class=\"nav-link <?= nav_is_active(['/purchase/bom_list.php'], $REQ_URI) ?>\" href=\"/purchase/bom_list.php\"><i class=\"bi bi-diagram-3 me-2\"></i> BOMs</a></li>","          <!-- Removed routing links per instruction -->","          <li><a class=\"nav-link <?= nav_is_active(['/workorders/pwo_list.php'], $REQ_URI) ?>\" href=\"/workorders/pwo_list.php\"><i class=\"bi bi-gear me-2\"></i> Work Orders (PWO)</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/processes/processes_list.php'], $REQ_URI) ?>\" href=\"/processes/processes_list.php\"><i class=\"bi bi-diagram-2 me-2\"></i> Processes</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/workcenters/workcenters_list.php'], $REQ_URI) ?>\" href=\"/workcenters/workcenters_list.php\"><i class=\"bi bi-hdd-stack me-2\"></i> Work Centers</a></li>","        </ul>","      </div>","    </li>","","    <!-- Machinery (collapsible) -->","    <?php $mach_needles = ['/machines/','/maintenance_alloc/']; ?>","    <li class=\"nav-item\">","      <button class=\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($mach_needles, $REQ_URI) ?>\"","              data-bs-toggle=\"collapse\" data-bs-target=\"#navMachinery\" aria-expanded=\"<?= collapse_show($mach_needles,$REQ_URI)?'true':'false' ?>\">","        <i class=\"bi bi-wrench-adjustable-circle me-2\"></i> Machinery","        <i class=\"bi bi-caret-down ms-auto\"></i>","      </button>","      <div id=\"navMachinery\" class=\"collapse <?= collapse_show($mach_needles, $REQ_URI) ?>\">","        <ul class=\"nav flex-column ms-3 mt-1\">","          <li><a class=\"nav-link <?= nav_is_active(['/machines/machines_list.php'], $REQ_URI) ?>\" href=\"/machines/machines_list.php\"><i class=\"bi bi-hdd-network me-2\"></i> Machines</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/machines/categories_list.php'], $REQ_URI) ?>\" href=\"/machines/categories_list.php\"><i class=\"bi bi-ui-checks-grid me-2\"></i> Machine Categories</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/maintenance_alloc/allocations_list.php'], $REQ_URI) ?>\" href=\"/maintenance_alloc/allocations_list.php\"><i class=\"bi bi-people-gear me-2\"></i> Allocations</a></li>","        </ul>","      </div>","    </li>","","    <!-- Maintenance (collapsible) -->","    <?php $maint_needles = ['/maintenance/wo_list.php','/maintenance/schedule.php','/maintenance/reports/contractor_costs.php']; ?>","    <li class=\"nav-item\">","      <button class=\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($maint_needles, $REQ_URI) ?>\"","              data-bs-toggle=\"collapse\" data-bs-target=\"#navMaintenance\" aria-expanded=\"<?= collapse_show($maint_needles,$REQ_URI)?'true':'false' ?>\">","        <i class=\"bi bi-tools me-2\"></i> Maintenance","        <i class=\"bi bi-caret-down ms-auto\"></i>","      </button>","      <div id=\"navMaintenance\" class=\"collapse <?= collapse_show($maint_needles, $REQ_URI) ?>\">","        <ul class=\"nav flex-column ms-3 mt-1\">","          <li><a class=\"nav-link <?= nav_is_active(['/maintenance/wo_list.php'], $REQ_URI) ?>\" href=\"/maintenance/wo_list.php\"><i class=\"bi bi-clipboard2-check me-2\"></i> Work Orders</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/maintenance/schedule.php'], $REQ_URI) ?>\" href=\"/maintenance/schedule.php\"><i class=\"bi bi-calendar2-check me-2\"></i> Schedule</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/maintenance/reports/contractor_costs.php'], $REQ_URI) ?>\" href=\"/maintenance/reports/contractor_costs.php\"><i class=\"bi bi-currency-rupee me-2\"></i> Contractor Costs</a></li>","        </ul>","      </div>","    </li>","","    <!-- Quality (collapsible kept for future; remove if not needed) -->","    <?php $qc_needles = ['/qc/']; ?>","    <li class=\"nav-item\">","      <button class=\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($qc_needles, $REQ_URI) ?>\"","              data-bs-toggle=\"collapse\" data-bs-target=\"#navQuality\" aria-expanded=\"<?= collapse_show($qc_needles,$REQ_URI)?'true':'false' ?>\">","        <i class=\"bi bi-shield-check me-2\"></i> Quality / ITP","        <i class=\"bi bi-caret-down ms-auto\"></i>","      </button>","      <div id=\"navQuality\" class=\"collapse <?= collapse_show($qc_needles, $REQ_URI) ?>\">","        <ul class=\"nav flex-column ms-3 mt-1\">","          <li><a class=\"nav-link <?= nav_is_active(['/qc/inspections_'], $REQ_URI) ?>\" href=\"/qc/inspections_list.php\"><i class=\"bi bi-clipboard-check me-2\"></i> Inspections</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/qc/dossier_'], $REQ_URI) ?>\" href=\"/qc/dossier_list.php\"><i class=\"bi bi-folder2-open me-2\"></i> Dossiers</a></li>","        </ul>","      </div>","    </li>","","    <!-- Accounts (collapsible) -->","    <?php $acct_needles = ['/accounts/journals_list.php','/accounts/ledger.php']; ?>","    <li class=\"nav-item text-uppercase small text-muted px-2 mt-3\">Finance</li>","    <li class=\"nav-item\">","      <button class=\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($acct_needles, $REQ_URI) ?>\"","              data-bs-toggle=\"collapse\" data-bs-target=\"#navAccounts\" aria-expanded=\"<?= collapse_show($acct_needles,$REQ_URI)?'true':'false' ?>\">","        <i class=\"bi bi-cash-coin me-2\"></i> Accounts","        <i class=\"bi bi-caret-down ms-auto\"></i>","      </button>","      <div id=\"navAccounts\" class=\"collapse <?= collapse_show($acct_needles, $REQ_URI) ?>\">","        <ul class=\"nav flex-column ms-3 mt-1\">","          <li><a class=\"nav-link <?= nav_is_active(['/accounts/journals_list.php'], $REQ_URI) ?>\" href=\"/accounts/journals_list.php\"><i class=\"bi bi-journal-text me-2\"></i> Journals</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/accounts/ledger.php'], $REQ_URI) ?>\" href=\"/accounts/ledger.php\"><i class=\"bi bi-journal-richtext me-2\"></i> Ledger</a></li>","        </ul>","      </div>","    </li>","","    <!-- Audit -->","    <li class=\"nav-item\">","      <a class=\"nav-link d-flex align-items-center <?= nav_is_active(['/audit/'], $REQ_URI) ?>\" href=\"/audit/log_list.php\">","        <i class=\"bi bi-activity me-2\"></i> Audit Log","      </a>","    </li>","","    <!-- Reports (collapsible) -->","    <?php $reports_needles = ['/reports/']; ?>","    <li class=\"nav-item text-uppercase small text-muted px-2 mt-3\">Reports</li>","    <li class=\"nav-item\">","      <button class=\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($reports_needles, $REQ_URI) ?>\"","              data-bs-toggle=\"collapse\" data-bs-target=\"#navReports\" aria-expanded=\"<?= collapse_show($reports_needles,$REQ_URI)?'true':'false' ?>\">","        <i class=\"bi bi-graph-up me-2\"></i> Reports","        <i class=\"bi bi-caret-down ms-auto\"></i>","      </button>","      <div id=\"navReports\" class=\"collapse <?= collapse_show($reports_needles,$REQ_URI) ?>\">","        <ul class=\"nav flex-column ms-3 mt-1\">","          <li><a class=\"nav-link <?= nav_is_active(['/reports/inventory/stock_summary.php'], $REQ_URI) ?>\" href=\"/reports/inventory/stock_summary.php\"><i class=\"bi bi-clipboard-data me-2\"></i> Inventory Summary</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/reports/inventory/stock_ledger.php'], $REQ_URI) ?>\" href=\"/reports/inventory/stock_ledger.php\"><i class=\"bi bi-journal-check me-2\"></i> Stock Ledger</a></li>","          <li><a class=\"nav-link <?= nav_is_active(['/reports/purchase/indent_register.php'], $REQ_URI) ?>\" href=\"/reports/purchase/indent_register.php\"><i class=\"bi bi-receipt me-2\"></i> Purchase Register</a></li>","        </ul>","      </div>","    </li>","","  </ul>","</nav>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/ui/init.php": ["<?php","declare(strict_types=1);","/** Minimal UI init for per-page title, etc. */","# Example usage in a page:","# $page_title = 'Items';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/ui/components.php": ["<?php","// --- Action buttons for list rows (view/edit/delete etc.) ---","function ui_row_actions(array $opts): string {","  // $opts = ['view'=>url|null, 'edit'=>url|null, 'delete'=>url|null, 'extra'=>[['icon'=>'download','label'=>'Download','href'=>'/x']]]","  $html = '<div class=\"btn-group btn-group-sm\" role=\"group\">';","  if (!empty($opts['view']))   $html .= '<a class=\"btn btn-light\" href=\"'.htmlspecialchars($opts['view']).'\" title=\"View\"><i class=\"bi bi-eye\"></i></a>';","  if (!empty($opts['edit']))   $html .= '<a class=\"btn btn-light\" href=\"'.htmlspecialchars($opts['edit']).'\" title=\"Edit\"><i class=\"bi bi-pencil-square\"></i></a>';","  if (!empty($opts['delete'])) $html .= '<a class=\"btn btn-light\" href=\"'.htmlspecialchars($opts['delete']).'\" title=\"Delete\" onclick=\"return confirm(\\'Delete this record?\\')\"><i class=\"bi bi-trash\"></i></a>';","  if (!empty($opts['extra']) && is_array($opts['extra'])) {","    foreach ($opts['extra'] as $x) {","      $icon  = htmlspecialchars($x['icon']  ?? 'link-45deg');","      $label = htmlspecialchars($x['label'] ?? 'Action');","      $href  = htmlspecialchars($x['href']  ?? '#');","      $html .= '<a class=\"btn btn-light\" href=\"'.$href.'\" title=\"'.$label.'\"><i class=\"bi bi-'.$icon.'\"></i></a>';","    }","  }","  $html .= '</div>';","  return $html;","}","","// --- Status pill (badge) ---","function ui_status(string $status): string {","  $s = strtolower(trim($status));","  $map = [","    'active'   => 'bg-success-subtle text-success-emphasis border',","    'enabled'  => 'bg-success-subtle text-success-emphasis border',","    'draft'    => 'bg-secondary-subtle text-secondary-emphasis border',","    'pending'  => 'bg-warning-subtle text-warning-emphasis border',","    'paused'   => 'bg-warning-subtle text-warning-emphasis border',","    'rejected' => 'bg-danger-subtle text-danger-emphasis border',","    'disabled' => 'bg-dark-subtle text-dark-emphasis border',","  ];","  $cls = $map[$s] ?? 'bg-primary-subtle text-primary-emphasis border';","  return '<span class=\"badge '.$cls.'\">'.htmlspecialchars(ucfirst($s)).'</span>';","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/ui/layout_start.php": ["<?php","declare(strict_types=1);","/** UI Layout Start (Bootstrap 5.3) \u2014 UI only, no business logic */","","if (session_status() !== PHP_SESSION_ACTIVE) {","  session_start();","}","","/** HTML escape */","if (!function_exists('h')) {","  function h(?string $v): string { return htmlspecialchars((string)$v, ENT_QUOTES, 'UTF-8'); }","}","","/**"," * Flash helper (fallback)."," * - If already defined elsewhere, we won't redeclare."," * - Usage:"," *    flash('success','Saved')  // queue"," *    foreach (flash() as $f) { ... }  // fetch & clear"," */","if (!function_exists('flash')) {","  function flash(?string $type = null, ?string $msg = null): array {","    if ($type !== null && $msg !== null) {","      $_SESSION['_flash'][] = ['type' => $type, 'msg' => $msg];","      return [];","    }","    $out = $_SESSION['_flash'] ?? [];","    if (!is_array($out)) $out = [];","    unset($_SESSION['_flash']); // clear after reading","    return $out;","  }","}","","/** Soft-depend on components; don't fatal if missing */","@include __DIR__ . '/components.php';","","/** Title/Brand fallbacks */","$app_name   = $app_name   ?? ($_ENV['APP_NAME'] ?? 'EMS Infra ERP');","$page_title = $page_title ?? ($PAGE_TITLE ?? $app_name);","$currentPath = $_SERVER['SCRIPT_NAME'] ?? '';","?>","<!doctype html>","<html lang=\"en\" data-bs-theme=\"light\">","<head>","  <meta charset=\"utf-8\">","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <title><?= h($page_title) ?></title>","","  <!-- Bootstrap & Icons -->","  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\">","  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css\">","","  <!-- Optional site styles (served from public_html root if present) -->","  <link rel=\"stylesheet\" href=\"/styles.css\">","","  <style>","    :root { --sidebar-width: 260px; }","    html, body { height: 100%; }","    body { min-height: 100vh; }","    .app-shell { display: flex; min-height: calc(100vh - 56px); }","    .app-sidebar { width: var(--sidebar-width); border-right: 1px solid #eef0f2; background: #fff; }","    @media (max-width: 991.98px) { .app-sidebar { display: none; } }","    .app-content { flex: 1; }","    .brand { font-weight: 600; letter-spacing: .2px; }","    .navbar-brand img { height: 32px; width: auto; }","    .nav-link.active { background: #f1f5f9; font-weight: 600; }","    .offcanvas-sidebar { width: var(--sidebar-width); }","    .card-tile { transition: transform .15s ease; }","    .card-tile:hover { transform: translateY(-2px); }","  </style>","</head>","<body>","","  <?php foreach (flash() as $f): ?>","    <div class=\"alert alert-<?= h($f['type'] ?? 'info') ?> m-2\">","      <?= h($f['msg'] ?? '') ?>","    </div>","  <?php endforeach; ?>","","  <!-- Header -->","  <nav class=\"navbar navbar-expand-lg bg-body-tertiary border-bottom sticky-top\">","    <div class=\"container-fluid\">","      <button class=\"btn btn-outline-primary d-lg-none me-2\" type=\"button\"","              data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasSidebar\" aria-controls=\"offcanvasSidebar\"","              aria-label=\"Open menu\">","        <i class=\"bi bi-list\"></i>","      </button>","","      <a class=\"navbar-brand d-flex align-items-center\" href=\"/dashboard.php\">","        <img src=\"/assets/logo.jpg\" alt=\"EMS Infra ERP Logo\" class=\"me-2\">","        <span class=\"brand\"><?= h($app_name) ?></span>","      </a>","","      <div class=\"ms-auto d-flex align-items-center gap-2\">","        <?php @include __DIR__ . '/partials/notifications_bell.php'; ?>","","        <div class=\"dropdown\">","          <a href=\"#\" class=\"btn btn-outline-secondary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">","            <i class=\"bi bi-person-circle me-1\"></i><?= h($_SESSION['user_name'] ?? 'User') ?>","          </a>","          <ul class=\"dropdown-menu dropdown-menu-end\">","            <li><a class=\"dropdown-item\" href=\"/identity/profile.php\"><i class=\"bi bi-gear me-2\"></i> Profile</a></li>","            <li><hr class=\"dropdown-divider\"></li>","            <li><a class=\"dropdown-item\" href=\"/logout.php\"><i class=\"bi bi-box-arrow-right me-2\"></i> Logout</a></li>","          </ul>","        </div>","      </div>","    </div>","  </nav>","","  <!-- App shell -->","  <div class=\"app-shell\">","    <!-- Desktop sidebar -->","    <aside class=\"app-sidebar\">","      <?php @include __DIR__ . '/sidebar.php'; ?>","    </aside>","","    <!-- Main content -->","    <main class=\"app-content\">","      <div class=\"container-fluid py-3\">"],
"/home/u989675055/domains/emsinfra.co.in/public_html/sales_orders/create_project.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/numbering.php';","require_once __DIR__ . '/../includes/audit.php';","","require_login();","require_permission('project.core.create');","require_permission('sales.order.view');","","$pdo = db();","","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  verify_csrf_or_die();","  $orderId = (int)($_POST['order_id'] ?? 0);","  $row = $pdo->prepare(\"SELECT * FROM sales_orders WHERE id=? AND (deleted_at IS NULL) LIMIT 1\");","  $row->execute([$orderId]);","  $so = $row->fetch(PDO::FETCH_ASSOC);","  if (!$so) { set_flash('danger','Order not found'); header('Location: sales_orders_list.php'); exit; }","","  $proj = [","    'code'              => next_no('PRJ'),","    'sales_order_id'    => $orderId,","    'client_account_id' => (int)$so['account_id'],","    'client_contact_id' => $so['contact_id'] ? (int)$so['contact_id'] : null,","    'name'              => 'Project for '.$so['code'],","    'status'            => 'Planned',","    'start_date'        => date('Y-m-d'),","    'end_date'          => null,","    'notes'             => 'Created from Sales Order '.$so['code'],","  ];","  $st = $pdo->prepare(\"INSERT INTO projects","    (`code`,`sales_order_id`,`client_account_id`,`client_contact_id`,`name`,`status`,`start_date`,`end_date`,`notes`)","    VALUES (:code,:sales_order_id,:client_account_id,:client_contact_id,:name,:status,:start_date,:end_date,:notes)\");","  $st->execute($proj);","  $pid = (int)$pdo->lastInsertId();","  audit_log($pdo, 'projects', 'create', $pid, $proj);","","  set_flash('success', 'Project '.$proj['code'].' created with same party/contact.');","  header('Location: ../projects/projects_form.php?id='.$pid);","  exit;","}","","require_once __DIR__ . '/../ui/layout_start.php';","?>","<form method=\"post\">","  <?= csrf_field() ?>","  <input type=\"hidden\" name=\"order_id\" value=\"<?= (int)($_GET['order_id'] ?? 0) ?>\">","  <p>Create a Project for this Sales Order using the same Account & Contact?</p>","  <button class=\"btn btn-primary\">Create Project</button>","</form>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/quote_pdf.php": ["<?php","/** PATH: /public_html/sales_quotes/quote_pdf.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login();","require_permission('sales.quote.view');","","$id = (int)($_GET['id'] ?? 0);","if ($id<=0) { http_response_code(400); echo \"Invalid id\"; exit; }","","// optional template variant: standard | compact | with-photos (kept for future)","$tpl = preg_replace('/[^a-z\\-]/','', (string)($_GET['tpl'] ?? 'standard'));","if (!in_array($tpl, ['standard','compact','with-photos'], true)) $tpl = 'standard';","","$pdo = db();","$qh = $pdo->prepare(\"","    SELECT q.*, p.name AS party_name, p.gstin AS party_gstin, p.address AS party_address","      FROM sales_quotes q","      LEFT JOIN parties p ON p.id = q.party_id","     WHERE q.id=:id AND q.deleted_at IS NULL","\");","$qh->execute([':id'=>$id]);","$quote = $qh->fetch(PDO::FETCH_ASSOC);","if (!$quote) { http_response_code(404); echo \"Quote not found\"; exit; }","","// ITEMS MAPPED TO YOUR SCHEMA","$qi = $pdo->prepare(\"","    SELECT sl_no, item_code, item_name, qty, uom, rate, discount_pct, tax_pct, line_total","      FROM sales_quote_items","     WHERE quote_id=:id","  ORDER BY sl_no","\");","$qi->execute([':id'=>$id]);","$items = $qi->fetchAll(PDO::FETCH_ASSOC);","","$org = function_exists('org_profile') ? org_profile() : ['name'=>'Company', 'address'=>'', 'gstin'=>'', 'logo_url'=>''];","","ob_start();","?>","<!doctype html>","<html>","<head>","<meta charset=\"utf-8\">","<style>","body { font-family: DejaVu Sans, sans-serif; font-size: 12px; }","table { width: 100%; border-collapse: collapse; }","th, td { border: 1px solid #999; padding: 6px; }","th { background: #eee; }",".text-right { text-align: right; }",".small { font-size: 11px; color: #555; }","<?php if ($tpl==='compact'): ?> th, td { padding:4px; font-size:11px; } <?php endif; ?>","</style>","</head>","<body>","  <table style=\"border:none\">","    <tr>","      <td style=\"border:none\">","        <h2><?=h($org['name'] ?? 'Organization')?></h2>","        <div class=\"small\"><?=nl2br(h($org['address'] ?? ''))?></div>","        <div class=\"small\">GSTIN: <?=h($org['gstin'] ?? '-')?></div>","      </td>","      <td style=\"border:none; text-align:right\">","        <?php if (!empty($org['logo_url'])): ?>","          <img src=\"<?=h($org['logo_url'])?>\" alt=\"Logo\" style=\"max-height:70px\">","        <?php endif; ?>","      </td>","    </tr>","  </table>","","  <h3 style=\"margin-top:0\">Quotation: <?=h($quote['code'])?></h3>","  <table>","    <tr><th>Quote Date</th><td><?=h($quote['quote_date'])?></td><th>Client</th><td><?=h($quote['party_name'])?></td></tr>","    <tr><th>Client GSTIN</th><td><?=h($quote['party_gstin'] ?? '-')?></td><th>Title</th><td><?=h($quote['title'] ?? '')?></td></tr>","  </table>","","  <br>","  <table>","    <thead>","      <tr>","        <th>Sl</th>","        <th>Item</th>","        <th class=\"text-right\">Qty</th>","        <th>UOM</th>","        <th class=\"text-right\">Rate</th>","        <th class=\"text-right\">Disc %</th>","        <th class=\"text-right\">Tax %</th>","        <th class=\"text-right\">Amount</th>","      </tr>","    </thead>","    <tbody>","      <?php foreach ($items as $it): ?>","      <tr>","        <td><?= (int)$it['sl_no'] ?></td>","        <td><?= h(($it['item_code'] ? $it['item_code'].' - ' : '').$it['item_name']) ?></td>","        <td class=\"text-right\"><?= h($it['qty']) ?></td>","        <td><?= h($it['uom']) ?></td>","        <td class=\"text-right\"><?= number_format((float)$it['rate'], 2) ?></td>","        <td class=\"text-right\"><?= number_format((float)($it['discount_pct'] ?? 0), 2) ?></td>","        <td class=\"text-right\"><?= number_format((float)($it['tax_pct'] ?? 0), 2) ?></td>","        <td class=\"text-right\"><?= number_format((float)$it['line_total'], 2) ?></td>","      </tr>","      <?php endforeach; ?>","      <tr><td colspan=\"7\" class=\"text-right\"><b>Subtotal</b></td><td class=\"text-right\"><?=number_format((float)$quote['subtotal'],2)?></td></tr>","      <tr><td colspan=\"7\" class=\"text-right\"><b>Discount</b></td><td class=\"text-right\"><?=number_format((float)$quote['discount_total'],2)?></td></tr>","      <tr><td colspan=\"7\" class=\"text-right\"><b>Tax</b></td><td class=\"text-right\"><?=number_format((float)$quote['tax_total'],2)?></td></tr>","      <tr><td colspan=\"7\" class=\"text-right\"><b>Grand Total</b></td><td class=\"text-right\"><?=number_format((float)$quote['grand_total'],2)?></td></tr>","    </tbody>","  </table>","","  <?php if (!empty($quote['terms'])): ?>","    <h4>Terms & Conditions</h4>","    <div class=\"small\"><?=nl2br(h($quote['terms']))?></div>","  <?php endif; ?>","</body>","</html>","<?php","$html = ob_get_clean();","","$pdfFileName = 'Quote-' . preg_replace('/[^A-Za-z0-9\\-]/','', (string)$quote['code']) . '.pdf';","","if (class_exists('\\\\Mpdf\\\\Mpdf')) {","    $mpdf = new \\Mpdf\\Mpdf(['tempDir' => sys_get_temp_dir()]);","    $mpdf->WriteHTML($html);","    $mpdf->Output($pdfFileName, 'I');","    exit;","} elseif (class_exists('\\\\Dompdf\\\\Dompdf')) {","    $dompdf = new \\Dompdf\\Dompdf();","    $dompdf->loadHtml($html);","    $dompdf->setPaper('A4');","    $dompdf->render();","    $dompdf->stream($pdfFileName, ['Attachment' => false]);","    exit;","} else {","    header('Content-Type: text/html; charset=utf-8');","    echo \"<p><b>PDF library not found.</b> Showing HTML instead.</p>\";","    echo $html;","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/sales_quotes_list.php": ["<?php","/** PATH: /public_html/sales_quotes/sales_quotes_list.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login();","require_permission('sales.quote.view');","","$pdo = db();","","// GET filters","$status   = trim((string)($_GET['status'] ?? ''));","$client   = trim((string)($_GET['client'] ?? ''));","$q        = trim((string)($_GET['q'] ?? ''));","$from     = trim((string)($_GET['from'] ?? ''));","$to       = trim((string)($_GET['to'] ?? ''));","$minAmt   = (float)($_GET['min'] ?? 0);","$maxAmt   = (float)($_GET['max'] ?? 0);","","$where = [\"q.deleted_at IS NULL\"];","$params = [];","","if ($status !== '') { $where[] = \"q.status = :status\"; $params[':status'] = $status; }","if ($client !== '') { ","    // allow numeric id or name search","    if (ctype_digit($client)) { $where[] = \"q.party_id = :party_id\"; $params[':party_id'] = (int)$client; }","    else { $where[] = \"p.name LIKE :pname\"; $params[':pname'] = \"%{$client}%\"; }","}","if ($from !== '')   { $where[] = \"q.quote_date >= :from\"; $params[':from'] = $from; }","if ($to !== '')     { $where[] = \"q.quote_date <= :to\";   $params[':to']   = $to; }","if ($minAmt > 0)    { $where[] = \"q.grand_total >= :minamt\"; $params[':minamt'] = $minAmt; }","if ($maxAmt > 0)    { $where[] = \"q.grand_total <= :maxamt\"; $params[':maxamt'] = $maxAmt; }","if ($q !== '') {","    $where[] = \"(q.code LIKE :kw OR q.title LIKE :kw OR p.name LIKE :kw)\";","    $params[':kw'] = \"%{$q}%\";","}","","$sql = \"","SELECT q.id, q.code, q.title, q.quote_date, q.status, q.grand_total, p.name AS party_name","FROM sales_quotes q","LEFT JOIN parties p ON p.id = q.party_id","WHERE \" . implode(' AND ', $where) . \"","ORDER BY q.quote_date DESC, q.id DESC","LIMIT 500\";","","$stmt = $pdo->prepare($sql);","$stmt->execute($params);","$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);","","function status_badge(string $s): string {","    $map = [","        'Draft'     => 'secondary',","        'Pending'   => 'info',","        'Sent'      => 'primary',","        'Accepted'  => 'success',","        'Lost'      => 'danger',","        'Converted' => 'warning',","    ];","    $cls = $map[$s] ?? 'light';","    return '<span class=\"badge bg-' . $cls . '\">' . h($s) . '</span>';","}","","$canCreate = rbac_can('sales.quote.create');","$canEdit   = rbac_can('sales.quote.edit');","$canDelete = rbac_can('sales.quote.delete');","","$UI_PATH     = dirname(__DIR__) . '/ui';","$PAGE_TITLE  = 'Sales Quotes';","$ACTIVE_MENU = 'sales.quotes';","","require_once $UI_PATH . '/init.php';","require_once $UI_PATH . '/layout_start.php';","?>","","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h3 class=\"mb-0\">Sales Quotes</h3>","  <?php if ($canCreate): ?>","    <a class=\"btn btn-sm btn-primary\" href=\"/sales_quotes/sales_quotes_edit.php\">New Quote</a>","  <?php endif; ?>","</div>","","<form class=\"row g-2 mb-3\" method=\"get\">","  <div class=\"col-auto\">","    <input name=\"q\" class=\"form-control\" placeholder=\"Search code/title/client\" value=\"<?=h($q)?>\">","  </div>","  <div class=\"col-auto\">","    <select name=\"status\" class=\"form-select\">","      <option value=\"\">All Status</option>","      <?php foreach (['Draft','Pending','Sent','Accepted','Lost','Converted'] as $s): ?>","        <option value=\"<?=$s?>\" <?=$status===$s?'selected':''?>><?=$s?></option>","      <?php endforeach; ?>","    </select>","  </div>","  <div class=\"col-auto\"><input name=\"client\" class=\"form-control\" placeholder=\"Client name or ID\" value=\"<?=h($client)?>\"></div>","  <div class=\"col-auto\"><input type=\"date\" name=\"from\" class=\"form-control\" value=\"<?=h($from)?>\"></div>","  <div class=\"col-auto\"><input type=\"date\" name=\"to\" class=\"form-control\" value=\"<?=h($to)?>\"></div>","  <div class=\"col-auto\"><input type=\"number\" name=\"min\" step=\"0.01\" class=\"form-control\" placeholder=\"Min \u20b9\" value=\"<?=h((string)$minAmt)?>\"></div>","  <div class=\"col-auto\"><input type=\"number\" name=\"max\" step=\"0.01\" class=\"form-control\" placeholder=\"Max \u20b9\" value=\"<?=h((string)$maxAmt)?>\"></div>","  <div class=\"col-auto\"><button class=\"btn btn-outline-secondary\">Filter</button></div>","</form>","","<table class=\"table table-sm table-striped align-middle\">","  <thead>","    <tr>","      <th>Code</th><th>Date</th><th>Client</th><th>Title</th><th class=\"text-end\">Amount</th><th>Status</th><th>Actions</th>","    </tr>","  </thead>","  <tbody>","  <?php foreach ($rows as $r): ?>","    <tr>","      <td><a href=\"/sales_quotes/sales_quotes_view.php?id=<?=$r['id']?>\"><?=h($r['code'])?></a></td>","      <td><?=h($r['quote_date'])?></td>","      <td><?=h($r['party_name'] ?? '')?></td>","      <td><?=h($r['title'] ?? '')?></td>","      <td class=\"text-end\"><?=number_format((float)$r['grand_total'], 2)?></td>","      <td><?=status_badge($r['status'] ?? 'Draft')?></td>","      <td>","        <?php if ($canEdit): ?>","          <a class=\"btn btn-sm btn-outline-primary\" href=\"/sales_quotes/sales_quotes_edit.php?id=<?=$r['id']?>\">Edit</a>","        <?php endif; ?>","        <?php if ($canDelete): ?>","          <form action=\"/sales_quotes/sales_quotes_delete.php\" method=\"post\" class=\"d-inline\" onsubmit=\"return confirm('Soft-delete this quote?');\">","            <?=csrf_hidden_input()?>","            <input type=\"hidden\" name=\"id\" value=\"<?=$r['id']?>\">","            <button class=\"btn btn-sm btn-outline-danger\">Delete</button>","          </form>","        <?php endif; ?>","      </td>","    </tr>","  <?php endforeach; ?>","  </tbody>","</table>","","<?php require_once $UI_PATH . '/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/send_quote.php": ["<?php","/** PATH: /public_html/sales_quotes/send_quote.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login();","require_permission('sales.quote.edit');","csrf_require_token();","","$quoteId = (int)($_POST['id'] ?? 0);","$toEmail = trim((string)($_POST['to'] ?? ''));","$subject = trim((string)($_POST['subject'] ?? ''));","$body    = (string)($_POST['body'] ?? '');","","if ($quoteId<=0 || $toEmail==='') {","    flash('To email and quote id are required', 'danger');","    redirect('/sales_quotes/sales_quotes_view.php?id=' . max(1, $quoteId));","}","","$pdo = db();","","// Enforce approvals gate: only Approved can be sent","$st = $pdo->prepare(\"SELECT approval_status FROM sales_quotes WHERE id=:id\");","$st->execute([':id'=>$quoteId]);","$approval = (string)$st->fetchColumn();","if ($approval !== 'Approved') {","    flash('Cannot send: quote not approved yet.', 'danger');","    redirect('/sales_quotes/sales_quotes_view.php?id='.$quoteId);","}","","// Load header","$qh = $pdo->prepare(\"","    SELECT q.*, p.name AS party_name, p.gstin AS party_gstin, p.address AS party_address","      FROM sales_quotes q","      LEFT JOIN parties p ON p.id=q.party_id","     WHERE q.id=:id AND q.deleted_at IS NULL","\");","$qh->execute([':id'=>$quoteId]);","$quote = $qh->fetch(PDO::FETCH_ASSOC);","if (!$quote) { flash('Quote not found', 'danger'); redirect('/sales_quotes/sales_quotes_list.php'); }","","// Load items (YOUR SCHEMA)","$qi = $pdo->prepare(\"","    SELECT sl_no, item_code, item_name, qty, uom, rate, discount_pct, tax_pct, line_total","      FROM sales_quote_items","     WHERE quote_id=:id","  ORDER BY sl_no","\");","$qi->execute([':id'=>$quoteId]);","$items = $qi->fetchAll(PDO::FETCH_ASSOC);","","// Build HTML (same look as quote_pdf.php)","$org = function_exists('org_profile') ? org_profile() : ['name'=>'Company','address'=>'','gstin'=>'','logo_url'=>''];","","ob_start(); ?>","<!doctype html>","<html>","<head>","<meta charset=\"utf-8\">","<style>","body { font-family: DejaVu Sans, sans-serif; font-size: 12px; }","table { width:100%; border-collapse: collapse; }","th, td { border:1px solid #999; padding:6px; }","th { background:#eee; }",".text-right { text-align:right; }",".small { font-size:11px; color:#555; }","</style>","</head>","<body>","  <table style=\"border:none\">","    <tr>","      <td style=\"border:none\">","        <h2><?=h($org['name'] ?? 'Organization')?></h2>","        <div class=\"small\"><?=nl2br(h($org['address'] ?? ''))?></div>","        <div class=\"small\">GSTIN: <?=h($org['gstin'] ?? '-')?></div>","      </td>","      <td style=\"border:none; text-align:right\">","        <?php if (!empty($org['logo_url'])): ?>","          <img src=\"<?=h($org['logo_url'])?>\" alt=\"Logo\" style=\"max-height:70px\">","        <?php endif; ?>","      </td>","    </tr>","  </table>","","  <h3 style=\"margin-top:0\">Quotation: <?=h($quote['code'])?></h3>","  <table>","    <tr><th>Quote Date</th><td><?=h($quote['quote_date'])?></td><th>Client</th><td><?=h($quote['party_name'])?></td></tr>","    <tr><th>Client GSTIN</th><td><?=h($quote['party_gstin'] ?? '-')?></td><th>Title</th><td><?=h($quote['title'] ?? '')?></td></tr>","  </table>","","  <br>","  <table>","    <thead>","      <tr>","        <th>Sl</th><th>Item</th><th class=\"text-right\">Qty</th><th>UOM</th>","        <th class=\"text-right\">Rate</th><th class=\"text-right\">Disc %</th>","        <th class=\"text-right\">Tax %</th><th class=\"text-right\">Amount</th>","      </tr>","    </thead>","    <tbody>","      <?php foreach ($items as $it): ?>","      <tr>","        <td><?= (int)$it['sl_no'] ?></td>","        <td><?= h(($it['item_code'] ? $it['item_code'].' - ' : '').$it['item_name']) ?></td>","        <td class=\"text-right\"><?= h($it['qty']) ?></td>","        <td><?= h($it['uom']) ?></td>","        <td class=\"text-right\"><?= number_format((float)$it['rate'],2) ?></td>","        <td class=\"text-right\"><?= number_format((float)($it['discount_pct'] ?? 0),2) ?></td>","        <td class=\"text-right\"><?= number_format((float)($it['tax_pct'] ?? 0),2) ?></td>","        <td class=\"text-right\"><?= number_format((float)$it['line_total'],2) ?></td>","      </tr>","      <?php endforeach; ?>","      <tr><td colspan=\"7\" class=\"text-right\"><b>Subtotal</b></td><td class=\"text-right\"><?=number_format((float)$quote['subtotal'],2)?></td></tr>","      <tr><td colspan=\"7\" class=\"text-right\"><b>Discount</b></td><td class=\"text-right\"><?=number_format((float)$quote['discount_total'],2)?></td></tr>","      <tr><td colspan=\"7\" class=\"text-right\"><b>Tax</b></td><td class=\"text-right\"><?=number_format((float)$quote['tax_total'],2)?></td></tr>","      <tr><td colspan=\"7\" class=\"text-right\"><b>Grand Total</b></td><td class=\"text-right\"><?=number_format((float)$quote['grand_total'],2)?></td></tr>","    </tbody>","  </table>","","  <?php if (!empty($quote['terms'])): ?>","    <h4>Terms & Conditions</h4>","    <div class=\"small\"><?=nl2br(h($quote['terms']))?></div>","  <?php endif; ?>","</body>","</html>","<?php","$html = ob_get_clean();","","// Write PDF to temp","$tmpDir = sys_get_temp_dir();","$pdfPath = $tmpDir . '/Quote-' . preg_replace('/[^A-Za-z0-9\\-]/', '', (string)$quote['code']) . '.pdf';","","if (class_exists('\\\\Mpdf\\\\Mpdf')) {","    $mpdf = new \\Mpdf\\Mpdf(['tempDir' => $tmpDir]);","    $mpdf->WriteHTML($html);","    $mpdf->Output($pdfPath, 'F');","} elseif (class_exists('\\\\Dompdf\\\\Dompdf')) {","    $dompdf = new \\Dompdf\\Dompdf();","    $dompdf->loadHtml($html);","    $dompdf->setPaper('A4');","    $dompdf->render();","    file_put_contents($pdfPath, $dompdf->output());","} else {","    // fallback: attach HTML","    $pdfPath = $tmpDir . '/Quote-' . preg_replace('/[^A-Za-z0-9\\-]/','', (string)$quote['code']) . '.html';","    file_put_contents($pdfPath, $html);","}","","// Subject/body defaults","if ($subject==='') $subject = 'Quotation ' . $quote['code'];","if ($body==='') {","    $body = \"Dear Customer,\\n\\nPlease find attached quotation {$quote['code']}.\\n\\nRegards,\\n\" . ($org['name'] ?? 'Sales Team');","}","","// Send","$sent = false;","if (function_exists('send_mail')) {","    $sent = send_mail($toEmail, $subject, nl2br(h($body)), [$pdfPath]);","} else {","    // basic fallback (no attachment)","    $headers = \"From: no-reply@\" . ($_SERVER['SERVER_NAME'] ?? 'localhost') . \"\\r\\n\";","    $sent = mail($toEmail, $subject, $body, $headers);","}","","if ($sent) {","    $pdo->prepare(\"UPDATE sales_quotes SET status='Sent', updated_at=NOW() WHERE id=:id\")->execute([':id'=>$quoteId]);","    $pdo->prepare(\"INSERT INTO sales_quote_sents (quote_id, sent_to, subject, created_at) VALUES (:qid,:to,:sub,NOW())\")","        ->execute([':qid'=>$quoteId, ':to'=>$toEmail, ':sub'=>$subject]);","    flash('Quote emailed successfully.', 'success');","} else {","    flash('Failed to send email. Please check mail configuration.', 'danger');","}","","redirect('/sales_quotes/sales_quotes_view.php?id='.$quoteId);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/analytics.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","require_login(); require_permission('sales.quote.view');","","$pdo=db();","","// Win/Loss by month","$wl = $pdo->query(\"","SELECT DATE_FORMAT(quote_date,'%Y-%m') AS ym,","SUM(CASE WHEN status IN ('Accepted','Converted') THEN 1 ELSE 0 END) win,","SUM(CASE WHEN status='Lost' THEN 1 ELSE 0 END) loss,","COUNT(*) total","FROM sales_quotes WHERE deleted_at IS NULL","GROUP BY ym ORDER BY ym DESC LIMIT 12\")->fetchAll(PDO::FETCH_ASSOC);","","// Cycle time (lead->quote->order)","$ct = $pdo->query(\"","SELECT DATE_FORMAT(q.quote_date,'%Y-%m') ym,","AVG(TIMESTAMPDIFF(DAY, l.created_at, q.quote_date)) AS lead_to_quote_days","FROM sales_quotes q","LEFT JOIN crm_leads l ON l.id=q.lead_id","GROUP BY ym ORDER BY ym DESC LIMIT 12\")->fetchAll(PDO::FETCH_ASSOC);","","$UI_PATH= dirname(__DIR__).'/ui';","$PAGE_TITLE='Sales Analytics';","$ACTIVE_MENU='sales.analytics';","require_once $UI_PATH.'/init.php';","require_once $UI_PATH.'/layout_start.php';","?>","<h3>Sales Analytics</h3>","<h5>Win/Loss (last 12 months)</h5>","<table class=\"table table-sm table-striped\">","  <thead><tr><th>Month</th><th class=\"text-end\">Wins</th><th class=\"text-end\">Losses</th><th class=\"text-end\">Total</th></tr></thead>","  <tbody>","  <?php foreach($wl as $r): ?>","    <tr><td><?=$r['ym']?></td><td class=\"text-end\"><?=$r['win']?></td><td class=\"text-end\"><?=$r['loss']?></td><td class=\"text-end\"><?=$r['total']?></td></tr>","  <?php endforeach; ?>","  </tbody>","</table>","","<h5>Avg Lead \u2192 Quote days</h5>","<table class=\"table table-sm table-striped\">","  <thead><tr><th>Month</th><th class=\"text-end\">Days</th></tr></thead>","  <tbody>","  <?php foreach($ct as $r): ?>","    <tr><td><?=$r['ym']?></td><td class=\"text-end\"><?=number_format((float)$r['lead_to_quote_days'],1)?></td></tr>","  <?php endforeach; ?>","  </tbody>","</table>","<?php require_once $UI_PATH.'/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/revisions_list.php": ["<?php","/** PATH: /public_html/sales_quotes/revisions_list.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login(); require_permission('sales.quote.view');","","$qid = (int)($_GET['quote_id'] ?? 0);","if ($qid<=0) { flash('Invalid quote id','danger'); redirect('/sales_quotes/sales_quotes_list.php'); }","","$pdo = db();","$qh = $pdo->prepare(\"SELECT id, code, title FROM sales_quotes WHERE id=:id\");","$qh->execute([':id'=>$qid]);","$q = $qh->fetch(PDO::FETCH_ASSOC);","if (!$q) { flash('Quote not found','danger'); redirect('/sales_quotes/sales_quotes_list.php'); }","","$revs = $pdo->prepare(\"SELECT id, rev_no, created_by, created_at FROM sales_quote_revisions WHERE quote_id=:id ORDER BY rev_no DESC\");","$revs->execute([':id'=>$qid]);","$rows = $revs->fetchAll(PDO::FETCH_ASSOC);","","$UI_PATH = dirname(__DIR__).'/ui';","$PAGE_TITLE = 'Revisions - '.$q['code'];","$ACTIVE_MENU = 'sales.quotes';","require_once $UI_PATH.'/init.php';","require_once $UI_PATH.'/layout_start.php';","?>","<h3 class=\"mb-3\">Revisions for <?=h($q['code'])?> - <?=h($q['title']??'')?></h3>","","<form class=\"row g-2 mb-3\" method=\"get\" action=\"/sales_quotes/revisions_compare.php\">","  <input type=\"hidden\" name=\"quote_id\" value=\"<?=$qid?>\">","  <div class=\"col-auto\">","    <select name=\"a\" class=\"form-select\" required>","      <option value=\"\">Select Rev A</option>","      <?php foreach ($rows as $r): ?>","        <option value=\"<?=$r['rev_no']?>\">R<?=$r['rev_no']?> (<?=$r['created_at']?>)</option>","      <?php endforeach; ?>","    </select>","  </div>","  <div class=\"col-auto\">","    <select name=\"b\" class=\"form-select\" required>","      <option value=\"\">Select Rev B</option>","      <?php foreach ($rows as $r): ?>","        <option value=\"<?=$r['rev_no']?>\">R<?=$r['rev_no']?> (<?=$r['created_at']?>)</option>","      <?php endforeach; ?>","    </select>","  </div>","  <div class=\"col-auto\">","    <button class=\"btn btn-outline-primary\">Compare</button>","  </div>","</form>","","<table class=\"table table-sm table-striped\">","  <thead><tr><th>Rev</th><th>Created</th><th>By</th><th class=\"text-end\">Actions</th></tr></thead>","  <tbody>","    <?php foreach ($rows as $r): ?>","      <tr>","        <td>R<?=$r['rev_no']?></td>","        <td><?=h($r['created_at'])?></td>","        <td>#<?=h($r['created_by'])?></td>","        <td class=\"text-end\">","          <?php if (rbac_can('sales.quote.edit')): ?>","          <form action=\"/sales_quotes/revision_restore.php\" method=\"post\" class=\"d-inline\" onsubmit=\"return confirm('Restore this revision into the live quote?');\">","            <?=csrf_hidden_input()?>","            <input type=\"hidden\" name=\"quote_id\" value=\"<?=$qid?>\">","            <input type=\"hidden\" name=\"rev_no\" value=\"<?=$r['rev_no']?>\">","            <button class=\"btn btn-sm btn-outline-warning\">Restore</button>","          </form>","          <?php endif; ?>","          <a class=\"btn btn-sm btn-outline-secondary\" href=\"/sales_quotes/revisions_compare.php?quote_id=<?=$qid?>&a=<?=$r['rev_no']?>&b=<?=$r['rev_no']?>\">View</a>","        </td>","      </tr>","    <?php endforeach; ?>","  </tbody>","</table>","<?php require_once $UI_PATH.'/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/convert_to_order.php": ["<?php","/** PATH: /public_html/sales_quotes/convert_to_order.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login();","require_permission('sales.order.create');","csrf_require_token();","","$quoteId    = (int)($_POST['quote_id'] ?? $_GET['quote_id'] ?? 0);","$setLeadWon = (int)($_POST['set_lead_won'] ?? $_GET['set_lead_won'] ?? 0);","","if ($quoteId <= 0) {","    flash('Invalid quote id', 'danger');","    redirect('/sales_quotes/sales_quotes_list.php');","}","","$pdo = db();","$pdo->beginTransaction();","","try {","    // Lock quote","    $q = $pdo->prepare(\"","        SELECT q.*, p.name AS party_name","          FROM sales_quotes q","          LEFT JOIN parties p ON p.id = q.party_id","         WHERE q.id = :id AND q.deleted_at IS NULL","         FOR UPDATE","    \");","    $q->execute([':id' => $quoteId]);","    $quote = $q->fetch(PDO::FETCH_ASSOC);","    if (!$quote) {","        throw new RuntimeException('Quote not found or deleted.');","    }","","    // Already converted?","    $chk = $pdo->prepare(\"SELECT id FROM sales_orders WHERE quote_id = :qid LIMIT 1\");","    $chk->execute([':qid' => $quoteId]);","    if ($chk->fetchColumn()) {","        throw new RuntimeException('This quote is already converted to a Sales Order.');","    }","","    // Fetch quote items (MAPPED TO YOUR SCHEMA)","    $qi = $pdo->prepare(\"","        SELECT sl_no, item_code, item_name, qty, uom, rate, discount_pct, tax_pct, line_total","          FROM sales_quote_items","         WHERE quote_id = :qid","         ORDER BY sl_no","    \");","    $qi->execute([':qid' => $quoteId]);","    $items = $qi->fetchAll(PDO::FETCH_ASSOC);","","    // Create SO header (adjust fields as per your sales_orders table)","    $soNo = next_no('SO');","    $insSO = $pdo->prepare(\"","        INSERT INTO sales_orders","            (code, quote_id, party_id, contact_id, site_id, title, order_date, currency, fx_rate,","             subtotal, discount_total, tax_total, grand_total, status, created_by, created_at)","        VALUES","            (:code, :quote_id, :party_id, :contact_id, :site_id, :title, CURRENT_DATE, :currency, :fx_rate,","             :subtotal, :discount_total, :tax_total, :grand_total, 'Draft', :uid, NOW())","    \");","    $insSO->execute([","        ':code'           => $soNo,","        ':quote_id'       => $quote['id'],","        ':party_id'       => $quote['party_id'],","        ':contact_id'     => $quote['contact_id'],","        ':site_id'        => $quote['site_id'],","        ':title'          => $quote['title'] ?: ('Order for ' . ($quote['party_name'] ?? '')),","        ':currency'       => $quote['currency'] ?? 'INR',","        ':fx_rate'        => $quote['fx_rate'] ?? 1.0,","        ':subtotal'       => $quote['subtotal'] ?? 0,","        ':discount_total' => $quote['discount_total'] ?? 0,","        ':tax_total'      => $quote['tax_total'] ?? 0,","        ':grand_total'    => $quote['grand_total'] ?? 0,","        ':uid'            => (int)current_user_id(),","    ]);","    $soId = (int)$pdo->lastInsertId();","","    // Copy items into sales_order_items (assumes same-named columns exist there)","    if ($items) {","        $insItem = $pdo->prepare(\"","            INSERT INTO sales_order_items","                (order_id, sl_no, item_code, item_name, qty, uom, rate, discount_pct, tax_pct, line_total)","            VALUES","                (:order_id, :sl_no, :item_code, :item_name, :qty, :uom, :rate, :discount_pct, :tax_pct, :line_total)","        \");","        foreach ($items as $it) {","            $insItem->execute([","                ':order_id'     => $soId,","                ':sl_no'        => (int)$it['sl_no'],","                ':item_code'    => (string)($it['item_code'] ?? ''),","                ':item_name'    => (string)$it['item_name'],","                ':qty'          => (float)$it['qty'],","                ':uom'          => (string)$it['uom'],","                ':rate'         => (float)$it['rate'],","                ':discount_pct' => (float)($it['discount_pct'] ?? 0),","                ':tax_pct'      => (float)($it['tax_pct'] ?? 0),","                ':line_total'   => (float)$it['line_total'],","            ]);","        }","    }","","    // Optional: mark related lead Won","    if ($setLeadWon && (int)$quote['lead_id'] > 0) {","        $pdo->prepare(\"UPDATE crm_leads SET stage='Won', updated_at=NOW() WHERE id=:lid\")","            ->execute([':lid' => (int)$quote['lead_id']]);","    }","","    // Mark quote as converted","    $pdo->prepare(\"UPDATE sales_quotes SET status='Converted', updated_at=NOW() WHERE id=:qid\")","        ->execute([':qid' => $quoteId]);","","    $pdo->commit();","","    flash(\"Sales Order #{$soNo} created from Quote #{$quote['code']}.\", 'success');","    redirect('/sales_orders/sales_order_view.php?id=' . $soId);","","} catch (Throwable $e) {","    if ($pdo->inTransaction()) $pdo->rollBack();","    // Helpful guidance if sales_order_items schema differs","    $msg = $e->getMessage();","    if (stripos($msg, 'Unknown column') !== false) {","        $msg .= ' \u2014 Adjust the INSERT column list in sales_order_items to your schema.';","    }","    flash('Conversion failed: ' . h($msg), 'danger');","    redirect('/sales_quotes/sales_quotes_view.php?id=' . $quoteId);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/revision_new.php": ["<?php","/** PATH: /public_html/sales_quotes/revision_new.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login(); require_permission('sales.quote.edit'); csrf_require_token();","","$qid = (int)($_POST['quote_id'] ?? 0);","if ($qid<=0) { flash('Invalid quote id','danger'); redirect('/sales_quotes/sales_quotes_list.php'); }","","$pdo = db();","","$h = $pdo->prepare(\"SELECT * FROM sales_quotes WHERE id=:id AND deleted_at IS NULL\");","$h->execute([':id'=>$qid]);","$header = $h->fetch(PDO::FETCH_ASSOC);","if (!$header) { flash('Quote not found','danger'); redirect('/sales_quotes/sales_quotes_list.php'); }","","$i = $pdo->prepare(\"SELECT * FROM sales_quote_items WHERE quote_id=:id ORDER BY sl\");","$i->execute([':id'=>$qid]);","$items = $i->fetchAll(PDO::FETCH_ASSOC);","","$revNo = (int)$pdo->query(\"SELECT COALESCE(MAX(rev_no),0)+1 AS n FROM sales_quote_revisions WHERE quote_id={$qid}\")->fetchColumn();","$payload = json_encode(['header'=>$header,'items'=>$items], JSON_UNESCAPED_UNICODE);","","$s = $pdo->prepare(\"INSERT INTO sales_quote_revisions(quote_id,rev_no,snapshot,created_by,created_at) VALUES(?,?,?,?,NOW())\");","$s->execute([$qid,$revNo,$payload,(int)current_user_id()]);","","flash(\"Revision R{$revNo} saved.\", 'success');","redirect('/sales_quotes/revisions_list.php?quote_id='.$qid);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/revision_restore.php": ["<?php","/** PATH: /public_html/sales_quotes/revision_restore.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login();","require_permission('sales.quote.edit');","csrf_require_token();","","$qid = (int)($_POST['quote_id'] ?? 0);","$rev = (int)($_POST['rev_no'] ?? 0);","if ($qid<=0 || $rev<=0) { flash('Invalid request','danger'); redirect('/sales_quotes/sales_quotes_list.php'); }","","$pdo = db();","$stm = $pdo->prepare(\"SELECT snapshot FROM sales_quote_revisions WHERE quote_id=:qid AND rev_no=:r\");","$stm->execute([':qid'=>$qid, ':r'=>$rev]);","$row = $stm->fetch(PDO::FETCH_ASSOC);","if (!$row) { flash('Revision not found','danger'); redirect('/sales_quotes/sales_quotes_view.php?id='.$qid); }","","$data  = json_decode($row['snapshot'], true);","$h     = $data['header'] ?? null;","$items = $data['items'] ?? [];","","if (!$h) { flash('Invalid snapshot','danger'); redirect('/sales_quotes/sales_quotes_view.php?id='.$qid); }","","$pdo->beginTransaction();","try {","    // Update header (keep id/created*)","    $fields = ['title','quote_date','party_id','contact_id','site_id','currency','fx_rate','subtotal','discount_total','tax_total','grand_total','terms','status'];","    $set = []; $params = [':id'=>$qid];","    foreach ($fields as $f) { $set[] = \"$f=:$f\"; $params[\":$f\"] = $h[$f] ?? null; }","    $pdo->prepare(\"UPDATE sales_quotes SET \".implode(',', $set).\", updated_at=NOW() WHERE id=:id\")->execute($params);","","    // Replace items (MAPPED TO YOUR SCHEMA)","    $pdo->prepare(\"DELETE FROM sales_quote_items WHERE quote_id=:id\")->execute([':id'=>$qid]);","","    $ins = $pdo->prepare(\"","        INSERT INTO sales_quote_items","            (quote_id, sl_no, item_code, item_name, qty, uom, rate, discount_pct, tax_pct, line_total)","        VALUES","            (:qid, :sl_no, :item_code, :item_name, :qty, :uom, :rate, :discount_pct, :tax_pct, :line_total)","    \");","","    $fallbackSl = 1;","    foreach ($items as $it){","        $ins->execute([","            ':qid'          => $qid,","            ':sl_no'        => (int)($it['sl_no'] ?? $fallbackSl++),","            ':item_code'    => (string)($it['item_code'] ?? ''),","            ':item_name'    => (string)($it['item_name'] ?? ($it['name'] ?? '')),","            ':qty'          => (float)($it['qty'] ?? 0),","            ':uom'          => (string)($it['uom'] ?? ''),","            ':rate'         => (float)($it['rate'] ?? ($it['price'] ?? 0)),","            ':discount_pct' => (float)($it['discount_pct'] ?? 0),","            ':tax_pct'      => (float)($it['tax_pct'] ?? ($it['tax_rate'] ?? 0)),","            ':line_total'   => (float)($it['line_total'] ?? 0),","        ]);","    }","","    $pdo->commit();","    flash(\"Revision R{$rev} restored into the live quote.\", 'success');","","} catch (Throwable $e) {","    if ($pdo->inTransaction()) $pdo->rollBack();","    flash('Restore failed: '.h($e->getMessage()), 'danger');","}","redirect('/sales_quotes/sales_quotes_view.php?id='.$qid);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/sales_quotes_delete.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_login(); require_permission('sales.quote.delete'); csrf_require_token();","$id = (int)($_POST['id'] ?? 0);","if ($id>0){","  $pdo = db();","  $stm = $pdo->prepare(\"UPDATE sales_quotes SET deleted_at=NOW() WHERE id=:id AND status<>'Converted'\");","  $stm->execute([':id'=>$id]);","  if ($stm->rowCount()===0) flash('Cannot delete (maybe already converted?)','warning');","  else flash('Quote deleted (soft).','success');","}","redirect('/sales_quotes/sales_quotes_list.php');"],
"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/revisions_compare.php": ["<?php","/** PATH: /public_html/sales_quotes/revisions_compare.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login();","require_permission('sales.quote.view');","","$qid = (int)($_GET['quote_id'] ?? 0);","$A   = (int)($_GET['a'] ?? 0);","$B   = (int)($_GET['b'] ?? 0);","if ($qid<=0 || $A<=0 || $B<=0) { http_response_code(400); echo 'Bad request'; exit; }","","$pdo = db();","$load = $pdo->prepare(\"","    SELECT rev_no, snapshot, created_at","      FROM sales_quote_revisions","     WHERE quote_id=:qid AND rev_no IN (:a,:b)","     ORDER BY rev_no","\");","$load->execute([':qid'=>$qid, ':a'=>$A, ':b'=>$B]);","$revs = $load->fetchAll(PDO::FETCH_ASSOC);","","$pick = function(array $rows, int $revNo) {","    foreach ($rows as $r) if ((int)$r['rev_no'] === $revNo) return json_decode($r['snapshot'] ?? '{}', true);","    return [];","};","$rA = $pick($revs, $A);","$rB = $pick($revs, $B);","","function diff_cell($av, $bv){","    if ($av === $bv) return '<td colspan=\"2\">'.h((string)$av).'</td>';","    return '<td><del>'.h((string)$av).'</del></td><td><ins>'.h((string)$bv).'</ins></td>';","}","","$UI_PATH = dirname(__DIR__).'/ui';","$PAGE_TITLE = \"Compare R{$A} vs R{$B}\";","$ACTIVE_MENU = 'sales.quotes';","require_once $UI_PATH.'/init.php';","require_once $UI_PATH.'/layout_start.php';","?>","<h3>Compare Revisions R<?=$A?> \u2194 R<?=$B?></h3>","","<h5 class=\"mt-3\">Header</h5>","<table class=\"table table-sm\">","  <thead><tr><th>Field</th><th>Rev <?=$A?></th><th>Rev <?=$B?></th></tr></thead>","  <tbody>","  <?php","  $fields = ['title','quote_date','party_id','contact_id','subtotal','discount_total','tax_total','grand_total','terms','status'];","  foreach ($fields as $f) {","    $av = $rA['header'][$f] ?? '';","    $bv = $rB['header'][$f] ?? '';","    echo '<tr><th>'.h($f).'</th>'.diff_cell($av,$bv).'</tr>';","  }","  ?>","  </tbody>","</table>","","<h5 class=\"mt-3\">Lines</h5>","<table class=\"table table-sm\">","  <thead>","    <tr>","      <th>Sl</th><th>Item Code</th><th>Item Name</th>","      <th class=\"text-end\">Qty</th><th>UOM</th>","      <th class=\"text-end\">Rate</th><th class=\"text-end\">Disc %</th>","      <th class=\"text-end\">Tax %</th><th class=\"text-end\">Amount</th>","    </tr>","  </thead>","  <tbody>","  <?php","  $la = $rA['items'] ?? [];","  $lb = $rB['items'] ?? [];","  $max = max(count($la), count($lb));","  for ($i=0;$i<$max;$i++){","    $a = $la[$i] ?? [];","    $b = $lb[$i] ?? [];","    $slA = $a['sl_no'] ?? ($i+1);","    $slB = $b['sl_no'] ?? ($i+1);","    $chg = ($a != $b) ? 'table-warning' : '';","    echo \"<tr class='{$chg}'>\";","    echo \"<td>\".h($slA).\" \u2192 \".h($slB).\"</td>\";","    echo \"<td>\".h($a['item_code'] ?? '').\" \u2192 \".h($b['item_code'] ?? '').\"</td>\";","    echo \"<td>\".h($a['item_name'] ?? ($a['name'] ?? '')).\"</td>\";","    echo \"<td class='text-end'>\".h($a['qty'] ?? '').\" \u2192 \".h($b['qty'] ?? '').\"</td>\";","    echo \"<td>\".h($a['uom'] ?? '').\" \u2192 \".h($b['uom'] ?? '').\"</td>\";","    echo \"<td class='text-end'>\".h($a['rate'] ?? ($a['price'] ?? '')).\" \u2192 \".h($b['rate'] ?? ($b['price'] ?? '')).\"</td>\";","    echo \"<td class='text-end'>\".h($a['discount_pct'] ?? '').\" \u2192 \".h($b['discount_pct'] ?? '').\"</td>\";","    echo \"<td class='text-end'>\".h($a['tax_pct'] ?? ($a['tax_rate'] ?? '')).\" \u2192 \".h($b['tax_pct'] ?? ($b['tax_rate'] ?? '')).\"</td>\";","    echo \"<td class='text-end'>\".h($a['line_total'] ?? '').\" \u2192 \".h($b['line_total'] ?? '').\"</td>\";","    echo \"</tr>\";","  }","  ?>","  </tbody>","</table>","<?php require_once $UI_PATH.'/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/sales_quotes_form.php": ["<?php","/** PATH: /public_html/sales_quotes/sales_quotes_form.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login();","$id = (int)($_GET['id'] ?? 0);","$isEdit = $id > 0;","require_permission($isEdit ? 'sales.quote.edit' : 'sales.quote.create');","","$pdo = db();","","/** ---------- helpers (table detection) ---------- */","function table_exists(PDO $pdo, string $name): bool {","  static $cache = [];","  if (array_key_exists($name, $cache)) return $cache[$name];","  $st = $pdo->prepare(\"SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = ?\");","  $st->execute([$name]);","  return $cache[$name] = ((int)$st->fetchColumn() > 0);","}","function fetch_quote_items(PDO $pdo, int $quoteId): array {","  if ($quoteId <= 0) return [];","  // 1) sales_quote_items.quote_id","  if (table_exists($pdo, 'sales_quote_items')) {","    try {","      $st = $pdo->prepare(\"SELECT * FROM sales_quote_items WHERE quote_id=? ORDER BY sl_no, id\");","      $st->execute([$quoteId]);","      $rows = $st->fetchAll(PDO::FETCH_ASSOC);","      if ($rows) return $rows;","      // try sales_quote_id column (fallback)","      $st = $pdo->prepare(\"SELECT * FROM sales_quote_items WHERE sales_quote_id=? ORDER BY sl_no, id\");","      $st->execute([$quoteId]);","      $rows = $st->fetchAll(PDO::FETCH_ASSOC);","      if ($rows) return $rows;","    } catch (Throwable $e) {}","  }","  // 2) sales_quotes_items.quote_id (plural table)","  if (table_exists($pdo, 'sales_quotes_items')) {","    try {","      $st = $pdo->prepare(\"SELECT * FROM sales_quotes_items WHERE quote_id=? ORDER BY sl_no, id\");","      $st->execute([$quoteId]);","      $rows = $st->fetchAll(PDO::FETCH_ASSOC);","      if ($rows) return $rows;","      $st = $pdo->prepare(\"SELECT * FROM sales_quotes_items WHERE sales_quote_id=? ORDER BY sl_no, id\");","      $st->execute([$quoteId]);","      $rows = $st->fetchAll(PDO::FETCH_ASSOC);","      if ($rows) return $rows;","    } catch (Throwable $e) {}","  }","  return [];","}","","/** ---------- header defaults ---------- */","$row = [","  'code' => '',","  'quote_date' => date('Y-m-d'),","  'valid_till' => null,","  'status' => 'Draft',","  'party_id' => null,","  'party_contact_id' => null,","  'lead_id' => isset($_GET['lead_id']) ? (int)$_GET['lead_id'] : null,","  'currency' => 'INR',","  'notes' => '',","  'terms' => '',","  'subtotal' => '0.00',","  'discount_amount' => '0.00',","  'tax_amount' => '0.00',","  'round_off' => '0.00',","  'grand_total' => '0.00',","  // site address fields","  'site_name' => '',","  'site_address_line1' => '',","  'site_address_line2' => '',","  'site_city' => '',","  'site_state' => '',","  'site_pincode' => '',","  'site_gst_number' => '',","  // toggle","  'use_site_as_bill_to' => 0,","];","","/** ---------- load existing header ---------- */","if ($isEdit) {","  $st = $pdo->prepare(\"SELECT * FROM sales_quotes WHERE id=? LIMIT 1\");","  $st->execute([$id]);","  if ($dbrow = $st->fetch(PDO::FETCH_ASSOC)) $row = array_merge($row, $dbrow);","}","","/** ---------- prefill from lead ---------- */","if (!$isEdit && !empty($row['lead_id'])) {","  $st = $pdo->prepare(\"SELECT party_id, party_contact_id, title FROM crm_leads WHERE id=?\");","  $st->execute([(int)$row['lead_id']]);","  if ($lead = $st->fetch(PDO::FETCH_ASSOC)) {","    if (!empty($lead['party_id'])) $row['party_id'] = (int)$lead['party_id'];","    if (!empty($lead['party_contact_id'])) $row['party_contact_id'] = (int)$lead['party_contact_id'];","    if (empty($row['notes']) && !empty($lead['title'])) $row['notes'] = 'Ref: Lead - '.$lead['title'];","  }","}","","/** ---------- clients & contacts ---------- */","$clients = $pdo->query(\"SELECT id, code, name FROM parties","  WHERE (status=1 OR status IS NULL) AND (type='client' OR type IS NULL)","  ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","","$contacts = [];","if (!empty($row['party_id'])) {","  $st = $pdo->prepare(\"SELECT id, name, phone FROM party_contacts WHERE party_id=? ORDER BY is_primary DESC, name\");","  $st->execute([(int)$row['party_id']]);","  $contacts = $st->fetchAll(PDO::FETCH_ASSOC);","}","","/** ---------- UOM (active) ---------- */","$uoms = $pdo->query(\"SELECT code, name FROM uom WHERE status='active' ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","$uomOptionsHtml = '';","foreach ($uoms as $u) {","  $code = (string)$u['code'];","  $label = trim($u['code'].' - '.$u['name']);","  $uomOptionsHtml .= '<option value=\"'.h($code).'\">'.h($label).'</option>';","}","","/** ---------- Quote Items master (for dropdown) ---------- */","$qItems = $pdo->query(\"SELECT code, name, hsn_sac, uom, rate_default, tax_pct_default","                       FROM quote_items","                       WHERE deleted_at IS NULL AND is_active=1","                       ORDER BY name LIMIT 500\")->fetchAll(PDO::FETCH_ASSOC);","$QI_OPTIONS_HTML = '<option value=\"\">-- Pick Item --</option>';","$QI_MAP = [];","foreach ($qItems as $qi) {","  $code = (string)$qi['code'];","  $text = ($qi['code'] ? $qi['code'].' \u00b7 ' : '').$qi['name'];","  $QI_OPTIONS_HTML .= '<option value=\"'.h($code).'\">'.h($text).'</option>';","  $QI_MAP[$code] = [","    'name' => (string)$qi['name'],","    'hsn'  => (string)($qi['hsn_sac'] ?? ''),","    'uom'  => (string)($qi['uom'] ?? ''),","    'rate' => (string)number_format((float)($qi['rate_default'] ?? 0), 2, '.', ''),","    'tax'  => (string)number_format((float)($qi['tax_pct_default'] ?? 0), 2, '.', ''),","  ];","}","","/** ---------- items for this quote (robust) ---------- */","$items = $isEdit ? fetch_quote_items($pdo, $id) : [];","","include __DIR__ . '/../ui/layout_start.php';","render_flash();","?>","<style>",".item-suggest{position:absolute;z-index:1000;display:none;max-height:260px;overflow-y:auto;background:#fff;border:1px solid rgba(0,0,0,.15);border-radius:.5rem;box-shadow:0 .5rem 1rem rgba(0,0,0,.15)}",".item-cell{position:relative}","</style>","","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h4 mb-0\"><?= $isEdit ? 'Edit Quotation' : 'New Quotation' ?></h1>","  <div class=\"d-flex gap-2\">","    <?php if ($isEdit): ?>","      <a class=\"btn btn-outline-secondary\" target=\"_blank\" href=\"<?= h('../prints/quote_print.php?id='.$id) ?>\">Print</a>","      <?php if (has_permission('sales.order.create')): ?>","        <a class=\"btn btn-outline-primary\" href=\"<?= h('convert_to_order.php?quote_id='.$id) ?>\">Convert \u2192 Order</a>","      <?php endif; ?>","    <?php endif; ?>","    <a href=\"<?= h('sales_quotes_list.php') ?>\" class=\"btn btn-outline-secondary\">Back</a>","  </div>","</div>","","<form method=\"post\" action=\"<?= h('sales_quotes_save.php') ?>\" id=\"quoteForm\">","  <?= csrf_field() ?>","  <input type=\"hidden\" name=\"id\" value=\"<?= (int)$id ?>\">","","  <div class=\"row g-3\">","    <div class=\"col-md-3\">","      <label class=\"form-label\">Quote No</label>","      <input class=\"form-control\" name=\"code\" value=\"<?= h((string)$row['code']) ?>\" placeholder=\"Auto on save (QO)\">","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Quote Date</label>","      <input type=\"date\" name=\"quote_date\" class=\"form-control\" value=\"<?= h((string)$row['quote_date']) ?>\">","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Valid Till</label>","      <input type=\"date\" name=\"valid_till\" class=\"form-control\" value=\"<?= h((string)$row['valid_till']) ?>\">","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Status</label>","      <select name=\"status\" class=\"form-select\">","        <?php foreach (['Draft','Sent','Accepted','Lost','Expired','Canceled'] as $s): ?>","          <option value=\"<?= h($s) ?>\" <?= ($row['status']===$s?'selected':'') ?>><?= h($s) ?></option>","        <?php endforeach; ?>","      </select>","    </div>","","    <div class=\"col-md-6\">","      <label class=\"form-label\">Client (Party)</label>","      <select name=\"party_id\" id=\"party_id\" class=\"form-select\">","        <option value=\"\">-- Select Client --</option>","        <?php foreach ($clients as $c): ?>","          <option value=\"<?= (int)$c['id'] ?>\" <?= ((int)$row['party_id']===(int)$c['id']?'selected':'') ?>>","            <?= h($c['name'].($c['code']?' ('.$c['code'].')':'')) ?>","          </option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-md-6\">","      <label class=\"form-label\">Contact</label>","      <select name=\"party_contact_id\" id=\"party_contact_id\" class=\"form-select\" <?= $row['party_id']?'':'disabled' ?>>","        <option value=\"\">-- Select Contact --</option>","        <?php foreach ($contacts as $c): ?>","          <option value=\"<?= (int)$c['id'] ?>\" <?= ((int)$row['party_contact_id']===(int)$c['id']?'selected':'') ?>>","            <?= h($c['name'].($c['phone']?' \u00b7 '.$c['phone']:'')) ?>","          </option>","        <?php endforeach; ?>","      </select>","    </div>","","    <div class=\"col-md-2\">","      <label class=\"form-label\">Currency</label>","      <input class=\"form-control\" name=\"currency\" value=\"<?= h((string)$row['currency']) ?>\">","    </div>","    <div class=\"col-md-10\">","      <label class=\"form-label\">Notes (internal)</label>","      <input class=\"form-control\" name=\"notes\" value=\"<?= h((string)$row['notes']) ?>\">","    </div>","    <div class=\"col-12\">","      <label class=\"form-label\">Terms (customer-visible)</label>","      <textarea class=\"form-control\" name=\"terms\" rows=\"3\"><?= h((string)$row['terms']) ?></textarea>","    </div>","  </div>","","  <hr class=\"my-3\">","  <!-- Site Address Block (unchanged) -->","  <div class=\"card mb-3\">","    <div class=\"card-header d-flex justify-content-between align-items-center flex-wrap gap-2\">","      <span>Site Address</span>","      <div class=\"d-flex align-items-center gap-2\">","        <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" id=\"copyClientAddr\">Copy from Client</button>","        <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" id=\"clearSiteAddr\">Clear</button>","        <div class=\"form-check form-switch ms-2\">","          <input class=\"form-check-input\" type=\"checkbox\" id=\"use_site_as_bill_to\" name=\"use_site_as_bill_to\" <?= ((int)$row['use_site_as_bill_to'] ? 'checked' : '') ?>>","          <label class=\"form-check-label\" for=\"use_site_as_bill_to\">Use Site as Bill To (for print & GST)</label>","        </div>","      </div>","    </div>","    <div class=\"card-body\">","      <div class=\"row g-3\">","        <div class=\"col-md-6\"><label class=\"form-label\">Site / Attention</label><input class=\"form-control\" name=\"site_name\" id=\"site_name\" value=\"<?= h((string)$row['site_name']) ?>\"></div>","        <div class=\"col-md-6\"><label class=\"form-label\">Site GSTIN (if any)</label><input class=\"form-control\" name=\"site_gst_number\" id=\"site_gst_number\" value=\"<?= h((string)$row['site_gst_number']) ?>\"></div>","        <div class=\"col-md-6\"><label class=\"form-label\">Address Line 1</label><input class=\"form-control\" name=\"site_address_line1\" id=\"site_address_line1\" value=\"<?= h((string)$row['site_address_line1']) ?>\"></div>","        <div class=\"col-md-6\"><label class=\"form-label\">Address Line 2</label><input class=\"form-control\" name=\"site_address_line2\" id=\"site_address_line2\" value=\"<?= h((string)$row['site_address_line2']) ?>\"></div>","        <div class=\"col-md-4\"><label class=\"form-label\">City</label><input class=\"form-control\" name=\"site_city\" id=\"site_city\" value=\"<?= h((string)$row['site_city']) ?>\"></div>","        <div class=\"col-md-4\"><label class=\"form-label\">State</label><input class=\"form-control\" name=\"site_state\" id=\"site_state\" value=\"<?= h((string)$row['site_state']) ?>\"></div>","        <div class=\"col-md-4\"><label class=\"form-label\">PIN Code</label><input class=\"form-control\" name=\"site_pincode\" id=\"site_pincode\" value=\"<?= h((string)$row['site_pincode']) ?>\"></div>","      </div>","    </div>","  </div>","","  <div class=\"d-flex justify-content-between align-items-center\">","    <h2 class=\"h6 mb-0\">Items</h2>","    <button class=\"btn btn-sm btn-outline-primary\" type=\"button\" id=\"addRow\">+ Add Row</button>","  </div>","","  <div class=\"table-responsive mt-2\">","    <table class=\"table table-sm align-middle\" id=\"itemsTable\">","      <thead class=\"table-light\">","        <tr>","          <th style=\"width:60px;\">SL</th>","          <th style=\"min-width:320px\">Item (dropdown) &amp; Description</th>","          <th style=\"width:120px;\">HSN/SAC</th>","          <th style=\"width:120px;\">Qty</th>","          <th style=\"width:140px;\">UOM</th>","          <th style=\"width:140px;\">Rate</th>","          <th style=\"width:120px;\">Disc %</th>","          <th style=\"width:120px;\">Tax %</th>","          <th style=\"width:140px;\">Line Total</th>","          <th style=\"width:48px;\"></th>","        </tr>","      </thead>","      <tbody>","        <?php if ($items): foreach ($items as $it):","          $uomSel = (string)($it['uom'] ?? 'Nos');","          $uomHtml = $uomOptionsHtml;","          if ($uomSel && !array_filter($uoms, fn($u)=>$u['code']===$uomSel)) {","            $uomHtml = '<option value=\"'.h($uomSel).'\">'.h($uomSel).'</option>'.$uomHtml;","          }","        ?>","          <tr>","            <td><input type=\"hidden\" name=\"item_id[]\" value=\"<?= (int)$it['id'] ?>\"><input type=\"number\" class=\"form-control form-control-sm sl\" name=\"sl_no[]\" value=\"<?= (int)($it['sl_no'] ?? 1) ?>\"></td>","            <td>","              <select class=\"form-select form-select-sm qi_select\"><?= $QI_OPTIONS_HTML ?></select>","              <input type=\"hidden\" name=\"item_code[]\" class=\"qi_code\" value=\"<?= h((string)($it['item_code'] ?? '')) ?>\">","              <textarea class=\"form-control form-control-sm mt-1\" name=\"item_name[]\" rows=\"1\" placeholder=\"Description\"><?= h((string)($it['item_name'] ?? '')) ?></textarea>","            </td>","            <td><input class=\"form-control form-control-sm\" name=\"hsn_sac[]\" value=\"<?= h((string)($it['hsn_sac'] ?? '')) ?>\"></td>","            <td><input class=\"form-control form-control-sm qty\" name=\"qty[]\" value=\"<?= h((string)($it['qty'] ?? '1.000')) ?>\"></td>","            <td><select class=\"form-select form-select-sm\" name=\"uom[]\"><?= str_replace('value=\"'.h($uomSel).'\"', 'value=\"'.h($uomSel).'\" selected', $uomHtml) ?></select></td>","            <td><input class=\"form-control form-control-sm rate\" name=\"rate[]\" value=\"<?= h((string)($it['rate'] ?? '0.00')) ?>\"></td>","            <td><input class=\"form-control form-control-sm disc\" name=\"discount_pct[]\" value=\"<?= h((string)($it['discount_pct'] ?? '0.00')) ?>\"></td>","            <td><input class=\"form-control form-control-sm tax\" name=\"tax_pct[]\" value=\"<?= h((string)($it['tax_pct'] ?? '0.00')) ?>\"></td>","            <td><input class=\"form-control form-control-sm line_total\" name=\"line_total[]\" value=\"<?= h((string)($it['line_total'] ?? '0.00')) ?>\" readonly></td>","            <td><button type=\"button\" class=\"btn btn-sm btn-outline-danger delRow\">&times;</button></td>","          </tr>","        <?php endforeach; endif; ?>","      </tbody>","    </table>","  </div>","","  <div class=\"row g-3 justify-content-end mt-2\">","    <div class=\"col-md-3\"><label class=\"form-label\">Subtotal</label><input class=\"form-control\" name=\"subtotal\" id=\"subtotal\" value=\"<?= h((string)$row['subtotal']) ?>\" readonly></div>","    <div class=\"col-md-3\"><label class=\"form-label\">Discount (absolute)</label><input class=\"form-control\" name=\"discount_amount\" id=\"discount_amount\" value=\"<?= h((string)$row['discount_amount']) ?>\"></div>","    <div class=\"col-md-3\"><label class=\"form-label\">Tax (total)</label><input class=\"form-control\" name=\"tax_amount\" id=\"tax_amount\" value=\"<?= h((string)$row['tax_amount']) ?>\" readonly></div>","    <div class=\"col-md-3\"><label class=\"form-label\">Round Off</label><input class=\"form-control\" name=\"round_off\" id=\"round_off\" value=\"<?= h((string)$row['round_off']) ?>\"></div>","    <div class=\"col-md-3\"><label class=\"form-label fw-semibold\">Grand Total</label><input class=\"form-control\" name=\"grand_total\" id=\"grand_total\" value=\"<?= h((string)$row['grand_total']) ?>\" readonly></div>","  </div>","","  <div class=\"d-flex gap-2 justify-content-end mt-3\">","    <button class=\"btn btn-primary\"><?= $isEdit ? 'Update' : 'Create' ?></button>","  </div>","</form>","","<?php include __DIR__ . '/../ui/layout_end.php'; ?>","","<script>","const QI_MAP = <?= json_encode($QI_MAP, JSON_UNESCAPED_UNICODE) ?>;","const QI_OPTIONS_HTML = <?= json_encode($QI_OPTIONS_HTML) ?>;","const UOM_OPTIONS_HTML = <?= json_encode($uomOptionsHtml) ?>;","","function recalcRow(tr){","  const qty = parseFloat(tr.querySelector('.qty')?.value || '0') || 0;","  const rate = parseFloat(tr.querySelector('.rate')?.value || '0') || 0;","  const disc = parseFloat(tr.querySelector('.disc')?.value || '0') || 0;","  const tax = parseFloat(tr.querySelector('.tax')?.value || '0') || 0;","  const base = qty * rate;","  const afterDisc = base * (1 - (disc/100));","  const lineTax = afterDisc * (tax/100);","  const lineTotal = afterDisc + lineTax;","  tr.querySelector('.line_total').value = lineTotal.toFixed(2);","  return {afterDisc,lineTax};","}","function recalcAll(){","  let sub=0,tx=0;","  document.querySelectorAll('#itemsTable tbody tr').forEach(tr=>{","    const r=recalcRow(tr); sub+=r.afterDisc; tx+=r.lineTax;","  });","  document.getElementById('subtotal').value = sub.toFixed(2);","  document.getElementById('tax_amount').value = tx.toFixed(2);","  const discAbs=parseFloat(document.getElementById('discount_amount').value||'0')||0;","  const roff=parseFloat(document.getElementById('round_off').value||'0')||0;","  document.getElementById('grand_total').value = (sub-discAbs+tx+roff).toFixed(2);","}","function attachRowHandlers(tr){","  const sel = tr.querySelector('.qi_select');","  if (sel && !sel.dataset.wired){","    sel.dataset.wired='1';","    // select correct option if hidden code already present","    const cur = tr.querySelector('.qi_code')?.value || '';","    if (cur){","      [...sel.options].forEach(o => { if (o.value===cur) o.selected=true; });","    }","    sel.addEventListener('change',()=>{","      const code = sel.value || '';","      const data = QI_MAP[code] || null;","      tr.querySelector('.qi_code')?.setAttribute('value', code);","      if (data){","        const desc = tr.querySelector('textarea[name=\"item_name[]\"]');","        if (desc && (!desc.value || desc.value.trim()==='')) desc.value = data.name;","        const hsn = tr.querySelector('input[name=\"hsn_sac[]\"]'); if (hsn) hsn.value = data.hsn || '';","        const uomSel = tr.querySelector('select[name=\"uom[]\"]');","        if (uomSel){","          const wanted = data.uom || '';","          if (wanted){","            if (!uomSel.querySelector('option[value=\"'+wanted+'\"]')){","              const opt=document.createElement('option'); opt.value=wanted; opt.textContent=wanted; uomSel.insertBefore(opt,uomSel.firstChild);","            }","            uomSel.value = wanted;","          }","        }","        const rate = tr.querySelector('.rate'); if (rate) rate.value = parseFloat(data.rate||'0').toFixed(2);","        const tax  = tr.querySelector('.tax');  if (tax)  tax.value  = parseFloat(data.tax ||'0').toFixed(2);","        recalcAll();","      }","    });","  }","  tr.addEventListener('input', e => { if (e.target.matches('.qty,.rate,.disc,.tax')) recalcAll(); });","}","document.getElementById('itemsTable').addEventListener('click', e=>{","  if (e.target.closest('.delRow')) { e.target.closest('tr').remove(); recalcAll(); }","});","document.getElementById('addRow')?.addEventListener('click', ()=>{","  const tb=document.querySelector('#itemsTable tbody');","  const tr=document.createElement('tr');","  const sl=tb.querySelectorAll('tr').length+1;","  tr.innerHTML=`","    <td><input type=\"hidden\" name=\"item_id[]\" value=\"0\"><input type=\"number\" class=\"form-control form-control-sm sl\" name=\"sl_no[]\" value=\"${sl}\"></td>","    <td>","      <select class=\"form-select form-select-sm qi_select\">${QI_OPTIONS_HTML}</select>","      <input type=\"hidden\" name=\"item_code[]\" class=\"qi_code\" value=\"\">","      <textarea class=\"form-control form-control-sm mt-1\" name=\"item_name[]\" rows=\"1\" placeholder=\"Description\"></textarea>","    </td>","    <td><input class=\"form-control form-control-sm\" name=\"hsn_sac[]\"></td>","    <td><input class=\"form-control form-control-sm qty\" name=\"qty[]\" value=\"1.000\"></td>","    <td><select class=\"form-select form-select-sm\" name=\"uom[]\"><?= $uomOptionsHtml ?></select></td>","    <td><input class=\"form-control form-control-sm rate\" name=\"rate[]\" value=\"0.00\"></td>","    <td><input class=\"form-control form-control-sm disc\" name=\"discount_pct[]\" value=\"0.00\"></td>","    <td><input class=\"form-control form-control-sm tax\" name=\"tax_pct[]\" value=\"0.00\"></td>","    <td><input class=\"form-control form-control-sm line_total\" name=\"line_total[]\" value=\"0.00\" readonly></td>","    <td><button type=\"button\" class=\"btn btn-sm btn-outline-danger delRow\">&times;</button></td>`;","  tb.appendChild(tr); attachRowHandlers(tr);","});","document.querySelectorAll('#itemsTable tbody tr').forEach(attachRowHandlers);","document.getElementById('discount_amount')?.addEventListener('input', recalcAll);","document.getElementById('round_off')?.addEventListener('input', recalcAll);","recalcAll();","","// Party \u2192 Contacts","document.getElementById('party_id')?.addEventListener('change', async function(){","  const pid=this.value, sel=document.getElementById('party_contact_id');","  sel.innerHTML='<option value=\"\">-- Select Contact --</option>';","  if (!pid){ sel.disabled=true; return; }","  sel.disabled=false;","  try{","    const res=await fetch('../common/party_contacts.php?party_id='+encodeURIComponent(pid));","    const js=await res.json();","    if(js.ok){ js.items.forEach(it=>{ const o=document.createElement('option'); o.value=it.id; o.textContent=it.name+(it.phone?' \u00b7 '+it.phone:''); sel.appendChild(o); }); }","  }catch(e){ console.error(e); }","});","// Copy client address \u2192 site address","document.getElementById('copyClientAddr')?.addEventListener('click', async ()=>{","  const pid=document.getElementById('party_id').value; if(!pid) return;","  try{","    const res=await fetch('../common/party_get.php?id='+encodeURIComponent(pid));","    const js=await res.json();","    if(js.ok && js.party){","      site_name.value=js.party.legal_name || js.party.name || '';","      site_gst_number.value=js.party.gst_number || '';","      site_address_line1.value=js.party.address_line1 || '';","      site_address_line2.value=js.party.address_line2 || '';","      site_city.value=js.party.city || '';","      site_state.value=js.party.state || '';","      site_pincode.value=js.party.pincode || '';","    }","  }catch(e){ console.error(e); }","});","document.getElementById('clearSiteAddr')?.addEventListener('click', ()=>{","  ['site_name','site_gst_number','site_address_line1','site_address_line2','site_city','site_state','site_pincode']","    .forEach(id=>{const el=document.getElementById(id); if(el) el.value='';});","});","</script>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/approval_set.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","require_once __DIR__.'/../includes/csrf.php';","require_login(); require_permission('sales.quote.approve'); csrf_require_token();","","$id=(int)($_POST['id']??0);","$action=(string)($_POST['action']??'');","if($id<=0){flash('Invalid','danger'); redirect('/sales_quotes/sales_quotes_list.php');}","$pdo=db();","","if ($action==='approve'){","  $pdo->prepare(\"UPDATE sales_quotes SET approval_status='Approved', approved_by=:u, approved_at=NOW(), updated_at=NOW() WHERE id=:id\")->execute([':u'=>current_user_id(),':id'=>$id]);","  flash('Quote approved.','success');","} elseif ($action==='revert'){","  $pdo->prepare(\"UPDATE sales_quotes SET approval_status='Draft', approved_by=NULL, approved_at=NULL, updated_at=NOW() WHERE id=:id\")->execute([':id'=>$id]);","  flash('Quote reverted to Draft.','warning');","}","redirect('/sales_quotes/sales_quotes_view.php?id='.$id);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/approval_request.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","require_once __DIR__.'/../includes/csrf.php';","require_login(); require_permission('sales.quote.edit'); csrf_require_token();","","$id=(int)($_POST['id']??0); if($id<=0){flash('Invalid','danger'); redirect('/sales_quotes/sales_quotes_list.php');}","$pdo=db();","$pdo->prepare(\"UPDATE sales_quotes SET approval_status='Pending', updated_at=NOW() WHERE id=:id\")->execute([':id'=>$id]);","flash('Quote sent for approval.','success');","redirect('/sales_quotes/sales_quotes_view.php?id='.$id);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/sales_quotes_save.php": ["<?php","/** PATH: /public_html/sales_quotes/sales_quotes_save.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/audit.php';","require_once __DIR__ . '/../includes/numbering.php';","","require_login();","verify_csrf_or_die();","","$pdo = db();","","$id = (int)($_POST['id'] ?? 0);","$isEdit = $id > 0;","require_permission($isEdit ? 'sales.quote.edit' : 'sales.quote.create');","","/* -------------------- collect header -------------------- */","$codeIn = trim((string)($_POST['code'] ?? ''));","$header = [","  'code' => ($codeIn === '' ? null : $codeIn),","  'quote_date' => (string)($_POST['quote_date'] ?? date('Y-m-d')),","  'valid_till' => (($_POST['valid_till'] ?? '') === '' ? null : (string)$_POST['valid_till']),","  'status' => (string)($_POST['status'] ?? 'Draft'),","  'party_id' => (($_POST['party_id'] ?? '') === '' ? null : (int)$_POST['party_id']),","  'party_contact_id' => (($_POST['party_contact_id'] ?? '') === '' ? null : (int)$_POST['party_contact_id']),","  'lead_id' => (($_POST['lead_id'] ?? '') === '' ? null : (int)$_POST['lead_id']),","  'currency' => (string)($_POST['currency'] ?? 'INR'),","  'notes' => trim((string)($_POST['notes'] ?? '')),","  'terms' => trim((string)($_POST['terms'] ?? '')),","  'use_site_as_bill_to' => isset($_POST['use_site_as_bill_to']) ? 1 : 0,","  'site_name' => trim((string)($_POST['site_name'] ?? '')),","  'site_gst_number' => trim((string)($_POST['site_gst_number'] ?? '')),","  'site_address_line1' => trim((string)($_POST['site_address_line1'] ?? '')),","  'site_address_line2' => trim((string)($_POST['site_address_line2'] ?? '')),","  'site_city' => trim((string)($_POST['site_city'] ?? '')),","  'site_state' => trim((string)($_POST['site_state'] ?? '')),","  'site_pincode' => trim((string)($_POST['site_pincode'] ?? '')),","];","","/* -------------------- collect lines -------------------- */","$lineIds    = array_map('strval', $_POST['item_id'] ?? ($_POST['line_id'] ?? []));","$sl_no      = $_POST['sl_no'] ?? [];","$item_code  = $_POST['item_code'] ?? [];","$item_name  = $_POST['item_name'] ?? [];","$hsn_sac    = $_POST['hsn_sac'] ?? [];","$qty        = $_POST['qty'] ?? [];","$uom        = $_POST['uom'] ?? [];","$rate       = $_POST['rate'] ?? [];","$disc       = $_POST['discount_pct'] ?? [];","$tax        = $_POST['tax_pct'] ?? [];","$line_total = $_POST['line_total'] ?? [];","","/* Build map for any codes present */","$codesWanted = [];","foreach ($item_code as $c) { $c = trim((string)$c); if ($c !== '') $codesWanted[$c] = true; }","$codeMap = [];","if ($codesWanted) {","  $in = implode(',', array_fill(0, count($codesWanted), '?'));","  $st = $pdo->prepare(\"SELECT code, name, hsn_sac, uom, rate_default, tax_pct_default","                       FROM quote_items","                       WHERE deleted_at IS NULL AND is_active=1 AND code IN ($in)\");","  $st->execute(array_keys($codesWanted));","  foreach ($st->fetchAll(PDO::FETCH_ASSOC) as $r) {","    $codeMap[(string)$r['code']] = [","      'name' => (string)$r['name'],","      'hsn'  => (string)($r['hsn_sac'] ?? ''),","      'uom'  => (string)($r['uom'] ?? ''),","      'rate' => (string)number_format((float)($r['rate_default'] ?? 0), 2, '.', ''),","      'tax'  => (string)number_format((float)($r['tax_pct_default'] ?? 0), 2, '.', ''),","    ];","  }","}","","/* Build rows; keep row if name or code present (or qty*rate) */","$rows = [];","$N = max(count($sl_no), count($item_name), count($hsn_sac), count($qty),","         count($uom), count($rate), count($disc), count($tax), count($line_total), count($item_code));","for ($i=0; $i<$N; $i++) {","  $code = trim((string)($item_code[$i] ?? ''));","  $name = trim((string)($item_name[$i] ?? ''));","  $q = (float)($qty[$i] ?? 0);","  $rt = (float)($rate[$i] ?? 0);","  if ($name === '' && $code === '' && ($q*$rt) <= 0) continue;","","  if ($name === '' && $code !== '' && isset($codeMap[$code])) {","    $name = $codeMap[$code]['name'];","    if (($hsn_sac[$i] ?? '') === '') $hsn_sac[$i] = $codeMap[$code]['hsn'];","    if (($uom[$i] ?? '') === '')     $uom[$i]     = $codeMap[$code]['uom'];","    if (($rate[$i] ?? '') === '' || (float)$rate[$i] == 0) $rate[$i] = $codeMap[$code]['rate'];","    if (($tax[$i]  ?? '') === '' )   $tax[$i]     = $codeMap[$code]['tax'];","  }","","  $rows[] = [","    'id' => (int)($lineIds[$i] ?? 0),","    'sl_no' => (int)($sl_no[$i] ?? ($i+1)),","    'item_code' => ($code === '' ? null : $code),","    'item_name' => ($name === '' ? 'Item' : $name),","    'hsn_sac' => trim((string)($hsn_sac[$i] ?? '')),","    'qty' => (string)($qty[$i] ?? '1.000'),","    'uom' => trim((string)($uom[$i] ?? 'Nos')),","    'rate' => (string)($rate[$i] ?? '0.00'),","    'discount_pct' => (string)($disc[$i] ?? '0.00'),","    'tax_pct' => (string)($tax[$i] ?? '0.00'),","    'line_total' => (string)($line_total[$i] ?? '0.00'),","  ];","}","","/* -------------------- totals (server-side) -------------------- */","$subtotal=0.00; $totalTax=0.00;","foreach ($rows as $r) {","  $base = (float)$r['qty'] * (float)$r['rate'];","  $afterDisc = $base * (1 - ((float)$r['discount_pct']/100));","  $lineTax = $afterDisc * ((float)$r['tax_pct']/100);","  $subtotal += $afterDisc; $totalTax += $lineTax;","}","$discountAbs = (float)($_POST['discount_amount'] ?? 0.00);","$roundOff    = (float)($_POST['round_off'] ?? 0.00);","$grandTotal  = $subtotal - $discountAbs + $totalTax + $roundOff;","","$headerTotals = [","  'subtotal' => number_format($subtotal, 2, '.', ''),","  'discount_amount' => number_format($discountAbs, 2, '.', ''),","  'tax_amount' => number_format($totalTax, 2, '.', ''),","  'round_off' => number_format($roundOff, 2, '.', ''),","  'grand_total' => number_format($grandTotal, 2, '.', ''),","];","","/* -------------------- TX guard -------------------- */","$_OWN_TX = !$pdo->inTransaction();","try {","  if ($_OWN_TX) $pdo->beginTransaction();","","  /* -------- header upsert -------- */","  if (!$isEdit) {","    if ($header['code'] === null) $header['code'] = next_no('QO');","    $sql = \"INSERT INTO sales_quotes","      (code, quote_date, valid_till, status, party_id, party_contact_id, lead_id,","       currency, notes, terms,","       use_site_as_bill_to, site_name, site_gst_number, site_address_line1, site_address_line2,","       site_city, site_state, site_pincode,","       subtotal, discount_amount, tax_amount, round_off, grand_total, created_at)","      VALUES","      (:code, :quote_date, :valid_till, :status, :party_id, :party_contact_id, :lead_id,","       :currency, :notes, :terms,","       :use_site_as_bill_to, :site_name, :site_gst_number, :site_address_line1, :site_address_line2,","       :site_city, :site_state, :site_pincode,","       :subtotal, :discount_amount, :tax_amount, :round_off, :grand_total, NOW())\";","    $pdo->prepare($sql)->execute(array_merge($header, $headerTotals));","    $id = (int)$pdo->lastInsertId();","    audit_log($pdo, 'sales_quotes', 'create', $id, array_merge($header, $headerTotals));","    set_flash('success', 'Quote created.');","  } else {","    if ($header['code'] === null) {","      $cur = $pdo->prepare(\"SELECT code FROM sales_quotes WHERE id=?\");","      $cur->execute([$id]);","      $curCode = (string)($cur->fetchColumn() ?: '');","      $header['code'] = $curCode !== '' ? $curCode : next_no('QO');","    }","    $header['id'] = $id;","    $sql = \"UPDATE sales_quotes SET","      code=:code, quote_date=:quote_date, valid_till=:valid_till, status=:status,","      party_id=:party_id, party_contact_id=:party_contact_id, lead_id=:lead_id,","      currency=:currency, notes=:notes, terms=:terms,","      use_site_as_bill_to=:use_site_as_bill_to, site_name=:site_name, site_gst_number=:site_gst_number,","      site_address_line1=:site_address_line1, site_address_line2=:site_address_line2,","      site_city=:site_city, site_state=:site_state, site_pincode=:site_pincode,","      subtotal=:subtotal, discount_amount=:discount_amount, tax_amount=:tax_amount,","      round_off=:round_off, grand_total=:grand_total","      WHERE id=:id\";","    $pdo->prepare($sql)->execute(array_merge($header, $headerTotals));","    audit_log($pdo, 'sales_quotes', 'update', $id, array_merge($header, $headerTotals));","    set_flash('success', 'Quote updated.');","  }","","  /* -------- lines upsert (hard-sync) -------- */","  $st = $pdo->prepare(\"SELECT id FROM sales_quote_items WHERE quote_id=?\");","  $st->execute([$id]);","  $existing = array_map('intval', $st->fetchAll(PDO::FETCH_COLUMN, 0));","  $keepIds = [];","","  $ins = $pdo->prepare(\"INSERT INTO sales_quote_items","    (quote_id, sl_no, item_code, item_name, hsn_sac, qty, uom, rate, discount_pct, tax_pct, line_total)","    VALUES","    (:quote_id, :sl_no, :item_code, :item_name, :hsn_sac, :qty, :uom, :rate, :discount_pct, :tax_pct, :line_total)\");","","  $upd = $pdo->prepare(\"UPDATE sales_quote_items SET","    sl_no=:sl_no, item_code=:item_code, item_name=:item_name, hsn_sac=:hsn_sac, qty=:qty, uom=:uom,","    rate=:rate, discount_pct=:discount_pct, tax_pct=:tax_pct, line_total=:line_total","    WHERE id=:id AND quote_id=:quote_id\");","","  foreach ($rows as $r) {","    $payload = [","      'quote_id' => $id,","      'sl_no' => (int)$r['sl_no'],","      'item_code' => $r['item_code'],","      'item_name' => $r['item_name'],","      'hsn_sac' => $r['hsn_sac'],","      'qty' => (string)$r['qty'],","      'uom' => $r['uom'],","      'rate' => (string)$r['rate'],","      'discount_pct' => (string)$r['discount_pct'],","      'tax_pct' => (string)$r['tax_pct'],","      'line_total' => (string)$r['line_total'],","    ];","","    if ($r['id'] > 0 && in_array($r['id'], $existing, true)) {","      $payloadUpd = $payload; $payloadUpd['id'] = (int)$r['id'];","      $upd->execute($payloadUpd);","      $keepIds[] = (int)$r['id'];","    } else {","      $ins->execute($payload);","      $keepIds[] = (int)$pdo->lastInsertId();","    }","  }","","  $toDelete = array_diff($existing, $keepIds);","  if ($toDelete) {","    $in = implode(',', array_fill(0, count($toDelete), '?'));","    $pdo->prepare(\"DELETE FROM sales_quote_items WHERE quote_id=? AND id IN ($in)\")","        ->execute(array_merge([$id], array_values($toDelete)));","  }","","  if ($_OWN_TX) $pdo->commit();","  header('Location: sales_quotes_form.php?id='.$id);","  exit;","","} catch (Throwable $e) {","  if ($_OWN_TX && $pdo->inTransaction()) $pdo->rollBack();","  set_flash('danger', $e->getMessage());","  header('Location: sales_quotes_form.php'.($isEdit?('?id='.$id):'')); exit;","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/store_patch_packager.php": ["<?php","/**"," * EMS Infra ERP \u2014 Store Module Patch Packager"," * Writes replacement endpoints, the StockLedger adapter include, and a migration SQL,"," * then creates store_module_patch.zip for easy download."," *"," * Usage:"," * 1) Upload this file to your server (e.g., /var/www/html or your PHP tools dir)"," * 2) Open it in a browser OR run: php store_patch_packager.php"," * 3) It will create ./store_module_patch/ and ./store_module_patch.zip in the same folder"," * 4) Download the zip, then delete this script for safety"," */","","date_default_timezone_set('Asia/Kolkata');","","$baseDir = __DIR__ . '/store_module_patch';","$includesDir = $baseDir . '/includes';","$migrationsDir = $baseDir . '/migrations';","","@mkdir($baseDir, 0775, true);","@mkdir($includesDir, 0775, true);","@mkdir($migrationsDir, 0775, true);","","$TS = date('Y-m-d H:i:s');","","function writeFileStrict($path, $content) {","    $dir = dirname($path);","    if (!is_dir($dir)) mkdir($dir, 0775, true);","    $ok = file_put_contents($path, $content);","    if ($ok === false) {","        throw new RuntimeException(\"Failed writing file: $path\");","    }","}","","/* ------------------ File contents ------------------ */","","$REQ_POST_ISSUE = <<<'PHP'","<?php","/**"," * Material Requisition \u2192 Issue POST"," * - Creates material_issues header + lines"," * - Posts OUT movements via StockMoveWriter"," * - NEW: Calls ValuationService::onIssue and mirrors to stock_ledger"," */","require_once __DIR__ . '/includes/db.php';","require_once __DIR__ . '/includes/rbac.php';","require_once __DIR__ . '/includes/csrf.php';","require_once __DIR__ . '/includes/audit.php';","require_once __DIR__ . '/includes/helpers.php';","","require_once __DIR__ . '/includes/NumberingService.php';","require_once __DIR__ . '/includes/StockMoveWriter.php';","require_once __DIR__ . '/includes/ValuationService.php';","require_once __DIR__ . '/includes/StockLedgerAdapter.php';","","header('Content-Type: application/json');","","try {","    require_permission('stores.issue.manage');","","    // Accept either JSON or form","    $raw = file_get_contents('php://input');","    $input = json_decode($raw, true);","    if (!$input) $input = $_POST;","","    // Optional CSRF (only if you post from a form)","    if (!empty($_POST)) {","        csrf_require_token($_POST['csrf_token'] ?? '');","    }","","    $userId = (int)($_SESSION['user_id'] ?? 0);","    $now = date('Y-m-d H:i:s');","","    $reqId        = (int)($input['req_id'] ?? 0);","    $warehouseId  = (int)($input['warehouse_id'] ?? 0);","    $projectId    = isset($input['project_id']) ? (int)$input['project_id'] : null;","    $remarks      = trim($input['remarks'] ?? '');","    $lines        = $input['lines'] ?? [];","","    if ($warehouseId <= 0 || empty($lines)) {","        http_response_code(422);","        echo json_encode(['ok' => false, 'error' => 'warehouse_id and lines are required']);","        exit;","    }","","    $pdo = db();","    $pdo->beginTransaction();","","    // Generate Issue number","    $issueNo = NumberingService::next($pdo, 'ISS'); // e.g., ISS-2025-000123","","    // Create header","    $stmt = $pdo->prepare(\"INSERT INTO material_issues","        (issue_no, req_id, warehouse_id, project_id, remarks, status, created_by, created_at)","        VALUES (:issue_no, :req_id, :warehouse_id, :project_id, :remarks, 'POSTED', :created_by, :created_at)\");","    $stmt->execute([","        ':issue_no'     => $issueNo,","        ':req_id'       => $reqId ?: null,","        ':warehouse_id' => $warehouseId,","        ':project_id'   => $projectId,","        ':remarks'      => $remarks,","        ':created_by'   => $userId,","        ':created_at'   => $now,","    ]);","    $issueId = (int)$pdo->lastInsertId();","","    // Prepare line insert","    $insLine = $pdo->prepare(\"INSERT INTO material_issue_items","        (issue_id, line_no, item_id, uom_id, qty, bin_id, batch_id, remarks)","        VALUES (:issue_id, :line_no, :item_id, :uom_id, :qty, :bin_id, :batch_id, :remarks)\");","","    $lineNo = 0;","    foreach ($lines as $ln) {","        $lineNo++;","        $itemId     = (int)($ln['item_id'] ?? 0);","        $uomId      = isset($ln['uom_id']) ? (int)$ln['uom_id'] : null;","        $qty        = (float)($ln['qty'] ?? 0);","        $binId      = isset($ln['bin_id']) ? (int)$ln['bin_id'] : null;","        $batchId    = isset($ln['batch_id']) ? (int)$ln['batch_id'] : null;","        $lnRemarks  = trim($ln['remarks'] ?? '');","","        if ($itemId <= 0 || $qty <= 0) {","            throw new RuntimeException(\"Invalid line at #{$lineNo}\");","        }","","        // Insert issue line","        $insLine->execute([","            ':issue_id' => $issueId,","            ':line_no'  => $lineNo,","            ':item_id'  => $itemId,","            ':uom_id'   => $uomId,","            ':qty'      => $qty,","            ':bin_id'   => $binId,","            ':batch_id' => $batchId,","            ':remarks'  => $lnRemarks,","        ]);","","        // Build writer payload (mirror your existing shape)","        $payload = [","            'txn_type'     => 'ISS',","            'txn_no'       => $issueNo,","            'txn_date'     => $now,","            'item_id'      => $itemId,","            'uom_id'       => $uomId,","            'warehouse_id' => $warehouseId,","            'bin_id'       => $binId,","            'batch_id'     => $batchId,","            'project_id'   => $projectId,","            'qty'          => $qty,            // positive here; writer will store negative in stock_moves","            'unit_cost'    => (float)($ln['unit_cost'] ?? 0), // optional; not used for WA on issue","            'ref_table'    => 'material_issues',","            'ref_id'       => $issueId,","            'created_by'   => $userId,","        ];","","        // Post OUT to stock","        StockMoveWriter::postOut($pdo, $payload);","","        // NEW: Valuation basis reduce + ledger mirror","        ValuationService::onIssue($pdo, $itemId, $warehouseId, $qty);","        StockLedgerAdapter::mirror($pdo, $payload);","    }","","    // Optional: close requisition if fully issued (business rule as before)","    if ($reqId > 0) {","        $pdo->prepare(\"UPDATE material_requisitions SET status = 'CLOSED', updated_at = NOW()","                       WHERE id = :id AND status <> 'CLOSED'\")","            ->execute([':id' => $reqId]);","    }","","    audit_log('material_issues', $issueId, 'POST', null, ['issue_no' => $issueNo, 'lines' => count($lines)]);","    $pdo->commit();","","    echo json_encode(['ok' => true, 'issue_id' => $issueId, 'issue_no' => $issueNo]);","","} catch (Throwable $e) {","    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();","    error_log($e);","    http_response_code(400);","    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);","}","PHP;","","$STOCK_ADJUST_POST = <<<'PHP'","<?php","/**"," * Stock Adjustment POST"," * - Creates adjustment header + lines"," * - Posts IN or OUT via StockMoveWriter"," * - NEW: Calls ValuationService and mirrors to stock_ledger"," */","require_once __DIR__ . '/includes/db.php';","require_once __DIR__ . '/includes/rbac.php';","require_once __DIR__ . '/includes/csrf.php';","require_once __DIR__ . '/includes/audit.php';","require_once __DIR__ . '/includes/helpers.php';","","require_once __DIR__ . '/includes/NumberingService.php';","require_once __DIR__ . '/includes/StockMoveWriter.php';","require_once __DIR__ . '/includes/ValuationService.php';","require_once __DIR__ . '/includes/StockLedgerAdapter.php';","","header('Content-Type: application/json');","","try {","    require_permission('stocks.adjust.manage');","","    $raw = file_get_contents('php://input');","    $input = json_decode($raw, true);","    if (!$input) $input = $_POST;","","    if (!empty($_POST)) {","        csrf_require_token($_POST['csrf_token'] ?? '');","    }","","    $userId = (int)($_SESSION['user_id'] ?? 0);","    $now = date('Y-m-d H:i:s');","","    $warehouseId = (int)($input['warehouse_id'] ?? 0);","    $mode        = strtoupper(trim($input['mode'] ?? '')); // IN or OUT","    $reasonCode  = trim($input['reason_code'] ?? '');","    $remarks     = trim($input['remarks'] ?? '');","    $lines       = $input['lines'] ?? [];","","    if ($warehouseId <= 0 || !in_array($mode, ['IN', 'OUT'], true) || empty($lines)) {","        http_response_code(422);","        echo json_encode(['ok' => false, 'error' => 'warehouse_id, mode (IN/OUT) and lines are required']);","        exit;","    }","","    $pdo = db();","    $pdo->beginTransaction();","","    $adjNo = NumberingService::next($pdo, 'ADJ'); // e.g., ADJ-2025-001234","","    // Header","    $pdo->prepare(\"INSERT INTO stock_adjustments","            (adj_no, warehouse_id, mode, reason_code, remarks, status, created_by, created_at)","            VALUES (:adj_no, :warehouse_id, :mode, :reason_code, :remarks, 'POSTED', :created_by, :created_at)\")","        ->execute([","            ':adj_no'       => $adjNo,","            ':warehouse_id' => $warehouseId,","            ':mode'         => $mode,","            ':reason_code'  => $reasonCode,","            ':remarks'      => $remarks,","            ':created_by'   => $userId,","            ':created_at'   => $now,","        ]);","    $adjId = (int)$pdo->lastInsertId();","","    $insLine = $pdo->prepare(\"INSERT INTO stock_adjustment_items","        (adjustment_id, line_no, item_id, uom_id, qty, unit_cost, bin_id, batch_id, remarks)","        VALUES (:adjustment_id, :line_no, :item_id, :uom_id, :qty, :unit_cost, :bin_id, :batch_id, :remarks)\");","","    $lineNo = 0;","    foreach ($lines as $ln) {","        $lineNo++;","        $itemId    = (int)($ln['item_id'] ?? 0);","        $uomId     = isset($ln['uom_id']) ? (int)$ln['uom_id'] : null;","        $qty       = (float)($ln['qty'] ?? 0);","        $binId     = isset($ln['bin_id']) ? (int)$ln['bin_id'] : null;","        $batchId   = isset($ln['batch_id']) ? (int)$ln['batch_id'] : null;","        $lnRemarks = trim($ln['remarks'] ?? '');","        $unitCost  = (float)($ln['unit_cost'] ?? 0); // required for IN valuation","","        if ($itemId <= 0 || $qty <= 0) {","            throw new RuntimeException(\"Invalid line #{$lineNo}\");","        }","","        $insLine->execute([","            ':adjustment_id' => $adjId,","            ':line_no'       => $lineNo,","            ':item_id'       => $itemId,","            ':uom_id'        => $uomId,","            ':qty'           => $qty,","            ':unit_cost'     => $unitCost,","            ':bin_id'        => $binId,","            ':batch_id'      => $batchId,","            ':remarks'       => $lnRemarks,","        ]);","","        $payload = [","            'txn_type'     => 'ADJ',","            'txn_no'       => $adjNo,","            'txn_date'     => $now,","            'item_id'      => $itemId,","            'uom_id'       => $uomId,","            'warehouse_id' => $warehouseId,","            'bin_id'       => $binId,","            'batch_id'     => $batchId,","            'project_id'   => null,","            'qty'          => $qty,         // positive","            'unit_cost'    => $unitCost,    // pre-tax basic","            'ref_table'    => 'stock_adjustments',","            'ref_id'       => $adjId,","            'created_by'   => $userId,","        ];","","        if ($mode === 'IN') {","            StockMoveWriter::postIn($pdo, $payload);","            ValuationService::onReceipt($pdo, $itemId, $warehouseId, $qty, $unitCost);","            StockLedgerAdapter::mirror($pdo, $payload);","        } else { // OUT","            StockMoveWriter::postOut($pdo, $payload);","            ValuationService::onIssue($pdo, $itemId, $warehouseId, $qty);","            StockLedgerAdapter::mirror($pdo, $payload);","        }","    }","","    audit_log('stock_adjustments', $adjId, 'POST', null, ['adj_no' => $adjNo, 'mode' => $mode, 'lines' => count($lines)]);","    $pdo->commit();","","    echo json_encode(['ok' => true, 'adjustment_id' => $adjId, 'adj_no' => $adjNo]);","","} catch (Throwable $e) {","    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();","    error_log($e);","    http_response_code(400);","    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);","}","PHP;","","$GP_CREATE_POST = <<<'PHP'","<?php","/**"," * Gate Pass CREATE"," * - Creates GP header + lines"," * - For non-returnable lines that are dispatched now: posts OUT"," * - NEW: Valuation on OUT + mirror to stock_ledger"," */","require_once __DIR__ . '/includes/db.php';","require_once __DIR__ . '/includes/rbac.php';","require_once __DIR__ . '/includes/csrf.php';","require_once __DIR__ . '/includes/audit.php';","require_once __DIR__ . '/includes/helpers.php';","","require_once __DIR__ . '/includes/NumberingService.php';","require_once __DIR__ . '/includes/StockMoveWriter.php';","require_once __DIR__ . '/includes/ValuationService.php';","require_once __DIR__ . '/includes/StockLedgerAdapter.php';","","header('Content-Type: application/json');","","try {","    require_permission('stores.gatepass.manage');","","    $raw = file_get_contents('php://input');","    $input = json_decode($raw, true);","    if (!$input) $input = $_POST;","","    if (!empty($_POST)) {","        csrf_require_token($_POST['csrf_token'] ?? '');","    }","","    $userId = (int)($_SESSION['user_id'] ?? 0);","    $now = date('Y-m-d H:i:s');","","    $sourceWhId   = (int)($input['warehouse_id'] ?? 0);","    $destWhId     = isset($input['to_warehouse_id']) ? (int)$input['to_warehouse_id'] : null; // optional","    $partyId      = isset($input['party_id']) ? (int)$input['party_id'] : null;               // optional (jobwork/site)","    $projectId    = isset($input['project_id']) ? (int)$input['project_id'] : null;","    $returnable   = (int)($input['returnable'] ?? 0); // 1/0","    $expectedRet  = !empty($input['expected_return_date']) ? $input['expected_return_date'] : null;","    $vehicleNo    = trim($input['vehicle_no'] ?? '');","    $contactName  = trim($input['contact_name'] ?? '');","    $remarks      = trim($input['remarks'] ?? '');","    $lines        = $input['lines'] ?? [];","","    if ($sourceWhId <= 0 || empty($lines)) {","        http_response_code(422);","        echo json_encode(['ok' => false, 'error' => 'warehouse_id and lines are required']);","        exit;","    }","","    $pdo = db();","    $pdo->beginTransaction();","","    $gpNo = NumberingService::next($pdo, 'GP');","","    // Header","    $stmt = $pdo->prepare(\"INSERT INTO gatepasses","        (gp_no, warehouse_id, to_warehouse_id, party_id, project_id, returnable, expected_return_date,","         vehicle_no, contact_name, remarks, status, created_by, created_at)","        VALUES","        (:gp_no, :warehouse_id, :to_warehouse_id, :party_id, :project_id, :returnable, :expected_return_date,","         :vehicle_no, :contact_name, :remarks, :status, :created_by, :created_at)\");","    $stmt->execute([","        ':gp_no'                => $gpNo,","        ':warehouse_id'         => $sourceWhId,","        ':to_warehouse_id'      => $destWhId,","        ':party_id'             => $partyId,","        ':project_id'           => $projectId,","        ':returnable'           => $returnable,","        ':expected_return_date' => $expectedRet,","        ':vehicle_no'           => $vehicleNo,","        ':contact_name'         => $contactName,","        ':remarks'              => $remarks,","        ':status'               => ($returnable ? 'OPEN' : 'CLOSED'),","        ':created_by'           => $userId,","        ':created_at'           => $now,","    ]);","    $gpId = (int)$pdo->lastInsertId();","","    $insLine = $pdo->prepare(\"INSERT INTO gatepass_items","        (gp_id, line_no, item_id, uom_id, qty, bin_id, batch_id, remarks, returned_qty)","        VALUES (:gp_id, :line_no, :item_id, :uom_id, :qty, :bin_id, :batch_id, :remarks, 0)\");","","    $lineNo = 0;","    foreach ($lines as $ln) {","        $lineNo++;","        $itemId    = (int)($ln['item_id'] ?? 0);","        $uomId     = isset($ln['uom_id']) ? (int)$ln['uom_id'] : null;","        $qty       = (float)($ln['qty'] ?? 0);","        $binId     = isset($ln['bin_id']) ? (int)$ln['bin_id'] : null;","        $batchId   = isset($ln['batch_id']) ? (int)$ln['batch_id'] : null;","        $lnRemarks = trim($ln['remarks'] ?? '');","        $unitCost  = (float)($ln['unit_cost'] ?? 0);","","        if ($itemId <= 0 || $qty <= 0) {","            throw new RuntimeException(\"Invalid line #{$lineNo}\");","        }","","        $insLine->execute([","            ':gp_id'   => $gpId,","            ':line_no' => $lineNo,","            ':item_id' => $itemId,","            ':uom_id'  => $uomId,","            ':qty'     => $qty,","            ':bin_id'  => $binId,","            ':batch_id'=> $batchId,","            ':remarks' => $lnRemarks,","        ]);","","        // If NON-RETURNABLE, we post OUT right now.","        if (!$returnable) {","            $payload = [","                'txn_type'     => 'GP',","                'txn_no'       => $gpNo,","                'txn_date'     => $now,","                'item_id'      => $itemId,","                'uom_id'       => $uomId,","                'warehouse_id' => $sourceWhId,","                'bin_id'       => $binId,","                'batch_id'     => $batchId,","                'project_id'   => $projectId,","                'qty'          => $qty,","                'unit_cost'    => $unitCost,","                'ref_table'    => 'gatepasses',","                'ref_id'       => $gpId,","                'created_by'   => $userId,","            ];","","            StockMoveWriter::postOut($pdo, $payload);","            ValuationService::onIssue($pdo, $itemId, $sourceWhId, $qty);","            StockLedgerAdapter::mirror($pdo, $payload);","        }","    }","","    audit_log('gatepasses', $gpId, 'CREATE', null, ['gp_no' => $gpNo, 'returnable' => $returnable, 'lines' => count($lines)]);","    $pdo->commit();","","    echo json_encode(['ok' => true, 'gp_id' => $gpId, 'gp_no' => $gpNo]);","","} catch (Throwable $e) {","    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();","    error_log($e);","    http_response_code(400);","    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);","}","PHP;","","$GP_RETURN_POST = <<<'PHP'","<?php","/**"," * Gate Pass RETURN"," * - Validates returnable GP and outstanding qty"," * - Posts IN movements"," * - NEW: Calls ValuationService::onReceipt and mirrors to stock_ledger"," */","require_once __DIR__ . '/includes/db.php';","require_once __DIR__ . '/includes/rbac.php';","require_once __DIR__ . '/includes/csrf.php';","require_once __DIR__ . '/includes/audit.php';","require_once __DIR__ . '/includes/helpers.php';","","require_once __DIR__ . '/includes/NumberingService.php';","require_once __DIR__ . '/includes/StockMoveWriter.php';","require_once __DIR__ . '/includes/ValuationService.php';","require_once __DIR__ . '/includes/StockLedgerAdapter.php';","","header('Content-Type: application/json');","","try {","    require_permission('stores.gatepass.manage');","","    $raw = file_get_contents('php://input');","    $input = json_decode($raw, true);","    if (!$input) $input = $_POST;","","    if (!empty($_POST)) {","        csrf_require_token($_POST['csrf_token'] ?? '');","    }","","    $userId = (int)($_SESSION['user_id'] ?? 0);","    $now = date('Y-m-d H:i:s');","","    $gpId   = (int)($input['gp_id'] ?? 0);","    $lines  = $input['lines'] ?? []; // each: gp_line_id, qty, unit_cost?, bin_id?, batch_id?","    if ($gpId <= 0 || empty($lines)) {","        http_response_code(422);","        echo json_encode(['ok' => false, 'error' => 'gp_id and lines are required']);","        exit;","    }","","    $pdo = db();","    $pdo->beginTransaction();","","    // Load GP header, ensure returnable","    $h = $pdo->prepare(\"SELECT gp_no, warehouse_id, returnable, status FROM gatepasses WHERE id = :id FOR UPDATE\");","    $h->execute([':id' => $gpId]);","    $hdr = $h->fetch(PDO::FETCH_ASSOC);","    if (!$hdr) throw new RuntimeException('Gate Pass not found');","    if ((int)$hdr['returnable'] !== 1) throw new RuntimeException('Gate Pass is not returnable');","","    $gpNo       = $hdr['gp_no'];","    $warehouseId= (int)$hdr['warehouse_id'];","","    // Load lines outstanding","    $lnQ = $pdo->prepare(\"SELECT id, line_no, item_id, uom_id, qty, returned_qty, bin_id, batch_id FROM gatepass_items WHERE gp_id = :id\");","    $lnQ->execute([':id' => $gpId]);","    $existing = [];","    while ($r = $lnQ->fetch(PDO::FETCH_ASSOC)) {","        $existing[(int)$r['id']] = $r;","    }","","    // Generate return number","    $gprNo = NumberingService::next($pdo, 'GPR');","","    foreach ($lines as $ln) {","        $gpLineId = (int)($ln['gp_line_id'] ?? 0);","        $retQty   = (float)($ln['qty'] ?? 0);","        $unitCost = (float)($ln['unit_cost'] ?? 0);","        $binId    = isset($ln['bin_id']) ? (int)$ln['bin_id'] : ($existing[$gpLineId]['bin_id'] ?? null);","        $batchId  = isset($ln['batch_id']) ? (int)$ln['batch_id'] : ($existing[$gpLineId]['batch_id'] ?? null);","","        if ($gpLineId <= 0 || $retQty <= 0) {","            throw new RuntimeException(\"Invalid return line\");","        }","        if (!isset($existing[$gpLineId])) {","            throw new RuntimeException(\"Gate Pass line not found: {$gpLineId}\");","        }","        $ex = $existing[$gpLineId];","        $outstanding = (float)$ex['qty'] - (float)$ex['returned_qty'];","        if ($retQty > $outstanding + 1e-9) {","            throw new RuntimeException(\"Return qty exceeds outstanding on line {$ex['line_no']}\");","        }","","        // Update returned qty","        $pdo->prepare(\"UPDATE gatepass_items SET returned_qty = returned_qty + :r WHERE id = :id\")","            ->execute([':r' => $retQty, ':id' => $gpLineId]);","","        // Build payload","        $payload = [","            'txn_type'     => 'GPR',","            'txn_no'       => $gprNo,       // return doc number","            'txn_date'     => $now,","            'item_id'      => (int)$ex['item_id'],","            'uom_id'       => (int)$ex['uom_id'],","            'warehouse_id' => $warehouseId,","            'bin_id'       => $binId,","            'batch_id'     => $batchId,","            'project_id'   => null,","            'qty'          => $retQty,      // positive IN","            'unit_cost'    => $unitCost,    // pre-tax","            'ref_table'    => 'gatepasses',","            'ref_id'       => $gpId,","            'created_by'   => $userId,","        ];","","        StockMoveWriter::postIn($pdo, $payload);","        ValuationService::onReceipt($pdo, (int)$ex['item_id'], $warehouseId, $retQty, $unitCost);","        StockLedgerAdapter::mirror($pdo, $payload);","    }","","    // Close GP if fully returned","    $c = $pdo->prepare(\"SELECT SUM(qty) as t_qty, SUM(returned_qty) as t_ret FROM gatepass_items WHERE gp_id = :id\");","    $c->execute([':id' => $gpId]);","    $row = $c->fetch(PDO::FETCH_ASSOC);","    if ($row && (float)$row['t_qty'] <= (float)$row['t_ret'] + 1e-9) {","        $pdo->prepare(\"UPDATE gatepasses SET status = 'CLOSED', updated_at = NOW() WHERE id = :id\")","            ->execute([':id' => $gpId]);","    }","","    audit_log('gatepasses', $gpId, 'RETURN', null, ['gpr_no' => $gprNo, 'lines' => count($lines)]);","    $pdo->commit();","","    echo json_encode(['ok' => true, 'gp_id' => $gpId, 'gpr_no' => $gprNo]);","","} catch (Throwable $e) {","    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();","    error_log($e);","    http_response_code(400);","    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);","}","PHP;","","$STOCK_LEDGER_ADAPTER = <<<'PHP'","<?php","// includes/StockLedgerAdapter.php","require_once __DIR__ . '/db.php';","","class StockLedgerAdapter","{","    public static function mirror(PDO $pdo, array $payload): void","    {","        if (!$payload) return;","","        $txnDate     = $payload['txn_date'] ?? date('Y-m-d H:i:s');","        $txnType     = $payload['txn_type'] ?? 'NA';","        $txnNo       = $payload['txn_no'] ?? '';","        $itemId      = (int)($payload['item_id'] ?? 0);","        $warehouseId = (int)($payload['warehouse_id'] ?? 0);","        $projectId   = isset($payload['project_id']) ? (int)$payload['project_id'] : null;","        $binId       = isset($payload['bin_id']) ? (int)$payload['bin_id'] : null;","        $batchId     = isset($payload['batch_id']) ? (int)$payload['batch_id'] : null;","        $qty         = (float)($payload['qty'] ?? 0);","        $unitCost    = isset($payload['unit_cost']) ? (float)$payload['unit_cost'] : 0.0;","        $uomId       = isset($payload['uom_id']) ? (int)$payload['uom_id'] : null;","        $refTable    = $payload['ref_table'] ?? null;","        $refId       = isset($payload['ref_id']) ? (int)$payload['ref_id'] : null;","        $createdBy   = isset($payload['created_by']) ? (int)$payload['created_by'] : null;","","        if ($qty == 0 || $itemId <= 0 || $warehouseId <= 0) {","            return;","        }","","        // Determine WA for OUT from stock_avg (optional but recommended)","        $rate = $unitCost;","        if (in_array(($payload['txn_type'] ?? ''), ['ADJ','GP','ISS'], true)) {","            $q = $pdo->prepare('SELECT avg_cost FROM stock_avg WHERE item_id = :i AND warehouse_id = :w');","            $q->execute([':i' => $itemId, ':w' => $warehouseId]);","            $r = $q->fetch(PDO::FETCH_ASSOC);","            if ($r && isset($r['avg_cost']) && (float)$r['avg_cost'] > 0) {","                $rate = (float)$r['avg_cost'];","            }","        }","","        $stmt = $pdo->prepare('INSERT INTO stock_ledger","            (txn_date, txn_type, txn_no, item_id, warehouse_id, project_id, bin_id, batch_id,","             qty, rate, uom_id, ref_table, ref_id, created_by, created_at)","            VALUES","            (:txn_date, :txn_type, :txn_no, :item_id, :warehouse_id, :project_id, :bin_id, :batch_id,","             :qty, :rate, :uom_id, :ref_table, :ref_id, :created_by, NOW(6))');","","        $stmt->execute([","            ':txn_date'     => $txnDate,","            ':txn_type'     => $txnType,","            ':txn_no'       => $txnNo,","            ':item_id'      => $itemId,","            ':warehouse_id' => $warehouseId,","            ':project_id'   => $projectId,","            ':bin_id'       => $binId,","            ':batch_id'     => $batchId,","            ':qty'          => $qty,","            ':rate'         => $rate,","            ':uom_id'       => $uomId,","            ':ref_table'    => $refTable,","            ':ref_id'       => $refId,","            ':created_by'   => $createdBy,","        ]);","    }","}","PHP;","","$MIGRATION = <<<'SQL'","-- migrations/001_add_stock_ledger.sql","CREATE TABLE IF NOT EXISTS stock_ledger (","  id                BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,","  txn_date          DATETIME(6)     NOT NULL,","  txn_type          VARCHAR(16)     NOT NULL,","  txn_no            VARCHAR(50)     NOT NULL,","  item_id           BIGINT          NOT NULL,","  warehouse_id      BIGINT          NOT NULL,","  project_id        BIGINT          NULL,","  bin_id            BIGINT          NULL,","  batch_id          BIGINT          NULL,","  qty               DECIMAL(18,6)   NOT NULL,","  rate              DECIMAL(18,6)   NOT NULL,","  amount            DECIMAL(18,2)   AS (qty * rate) STORED,","  uom_id            BIGINT          NULL,","  ref_table         VARCHAR(64)     NULL,","  ref_id            BIGINT          NULL,","  created_by        BIGINT          NULL,","  created_at        DATETIME(6)     NOT NULL DEFAULT CURRENT_TIMESTAMP(6),","  PRIMARY KEY (id),","  KEY idx_ledger_date (txn_date),","  KEY idx_ledger_item_wh (item_id, warehouse_id),","  KEY idx_ledger_txn (txn_type, txn_no)",");","SQL;","","$README = <<<TXT","EMS Infra ERP \u2014 Store Module Patch","Generated: {$TS}","","Contents","--------","- req_post_issue.php            (full replacement)","- stock_adjust_post.php         (full replacement)","- gp_create_post.php            (full replacement)","- gp_return_post.php            (full replacement)","- includes/StockLedgerAdapter.php (new include)","- migrations/001_add_stock_ledger.sql (new table)","","Instructions","------------","1) Run the migration:","   - Execute migrations/001_add_stock_ledger.sql on your MySQL DB.","","2) Copy the new include:","   - Place includes/StockLedgerAdapter.php into your project's includes/ folder.","","3) Replace endpoints:","   - Backup your existing files.","   - Replace the following with the provided versions:","       req_post_issue.php","       stock_adjust_post.php","       gp_create_post.php","       gp_return_post.php","","4) Clear opcode cache if enabled (php-fpm/apcu/opcache).","","5) Test:","   - Post a small Issue (OUT): verify stock_ledger receives rows and stock_avg basis reduces.","   - Create a non-returnable GP: verify OUT mirror in stock_ledger.","   - Return on a returnable GP: verify IN mirror and valuation on receipt.","   - Adjustment IN/OUT: verify both valuation and ledger entries.","","Notes","-----","- No UI changes. Payload shapes are preserved.","- Rates are pre-tax (basic). Taxes remain in AP.","- The adapter reads current WA for OUT from stock_avg; ensure your ValuationService keeps stock_avg updated.","TXT;","","/* ------------- Write files ------------- */","writeFileStrict($baseDir . '/req_post_issue.php', $REQ_POST_ISSUE);","writeFileStrict($baseDir . '/stock_adjust_post.php', $STOCK_ADJUST_POST);","writeFileStrict($baseDir . '/gp_create_post.php', $GP_CREATE_POST);","writeFileStrict($baseDir . '/gp_return_post.php', $GP_RETURN_POST);","","writeFileStrict($includesDir . '/StockLedgerAdapter.php', $STOCK_LEDGER_ADAPTER);","writeFileStrict($migrationsDir . '/001_add_stock_ledger.sql', $MIGRATION);","writeFileStrict($baseDir . '/README.txt', $README);","","/* ------------- Zip it ------------- */","$zipPath = __DIR__ . '/store_module_patch.zip';","$zip = new ZipArchive();","if ($zip->open($zipPath, ZipArchive::CREATE | ZipArchive::OVERWRITE) !== true) {","    throw new RuntimeException(\"Unable to create zip at $zipPath\");","}","$rii = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($baseDir, FilesystemIterator::SKIP_DOTS));","foreach ($rii as $file) {","    $filePath = $file->getPathname();","    $local = substr($filePath, strlen($baseDir) + 1);","    $zip->addFile($filePath, $local);","}","$zip->close();","","/* ------------- Output ------------- */","$isCli = (php_sapi_name() === 'cli');","$msg = \"OK: Created folder 'store_module_patch' and 'store_module_patch.zip' in \" . __DIR__ . \"\\n\";","if ($isCli) {","    echo $msg;","} else {","    echo nl2br(htmlentities($msg));","    echo \"<br><a href='store_module_patch.zip' download>Download store_module_patch.zip</a>\";","}","PHP;","","/* ------------------ Write everything and finish ------------------ */","try {","    writeFileStrict($baseDir . '/README.txt', $README); // ensure base exists","    // Re-write all files (already done above in content-section)","    // but here we just ensure the script writes itself ZIP after all files.","    // done in code.","","    // Actually, files were already written above.","    // No action here.","","} catch (Throwable $e) {","    http_response_code(500);","    echo \"ERROR: \" . htmlspecialchars($e->getMessage());","    exit;","}","","echo \"Packager file generated successfully at \" . __FILE__ . \"\\n\";"],
"/home/u989675055/domains/emsinfra.co.in/public_html/login.php": ["<?php","// PATH: /public_html/login.php","declare(strict_types=1);","","require_once __DIR__ . '/config.php';","if (session_status() === PHP_SESSION_NONE) session_start();","require_once __DIR__ . '/includes/csrf.php';","","// app_url() fallback","if (!function_exists('app_url')) {","  function app_url(): string { return '/'; }","}","?>","<!doctype html>","<html lang=\"en\">","<head>","  <meta charset=\"utf-8\">","  <title>EMS Infra ERP \u2014 Login</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","  <style>","    body {","      background: #f8f9fa;","      min-height: 100vh;","      display: flex;","      align-items: center;","    }","    .login-card {","      border-radius: 1rem;","    }","    .logo {","      max-width: 120px;","      margin-bottom: 1rem;","    }","  </style>","</head>","<body>","  <div class=\"container\">","    <div class=\"row justify-content-center\">","      <div class=\"col-sm-10 col-md-6 col-lg-4\">","        <div class=\"card shadow-sm login-card\">","          <div class=\"card-body p-4\">","            <div class=\"text-center\">","              <img src=\"/assets/logo.jpg\" alt=\"EMS Infra Logo\" class=\"logo rounded-circle shadow-sm\">","              <h4 class=\"fw-bold\">EMS Infra ERP</h4>","              <p class=\"text-muted small mb-4\">Secure Access Portal</p>","            </div>","","            <?php if (!empty($_SESSION['flash_error'])): ?>","              <div class=\"alert alert-danger\">","                <?= htmlspecialchars($_SESSION['flash_error']) ?>","              </div>","              <?php unset($_SESSION['flash_error']); ?>","            <?php endif; ?>","","            <form method=\"post\" action=\"login_handler.php\" autocomplete=\"off\">","              <?= csrf_field(); ?>","              <div class=\"mb-3\">","                <label class=\"form-label\">Username or Email</label>","                <input name=\"username\" class=\"form-control form-control-lg\" required>","              </div>","              <div class=\"mb-3\">","                <label class=\"form-label\">Password</label>","                <input name=\"password\" type=\"password\" class=\"form-control form-control-lg\" required>","              </div>","              <button class=\"btn btn-primary w-100 btn-lg\">Login</button>","            </form>","          </div>","          <div class=\"card-footer text-center small bg-light\">","            <a href=\"<?= app_url(); ?>\" class=\"text-decoration-none\">","              <?= parse_url(app_url(), PHP_URL_HOST) ?: 'Home' ?>","            </a>","          </div>","        </div>","      </div>","    </div>","  </div>","  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/finance/_ajax/ap_invoice_add_line.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2) . '/includes/auth.php';","require_once dirname(__DIR__,2) . '/includes/db.php';","require_once dirname(__DIR__,2) . '/includes/rbac.php';","header('Content-Type: application/json');","try{","  require_login(); require_permission('finance.ap.edit');","  $pdo = db();","  $in = json_decode(file_get_contents('php://input'), true) ?: $_POST;","  $qty=(float)($in['qty'] ?? 0); $rate=(float)($in['unit_price'] ?? 0); $amt=round($qty*$rate,2);","  $st=$pdo->prepare(\"INSERT INTO ap_invoice_lines (invoice_id,po_id,po_line_id,grn_id,grn_line_id,item_id,qty,unit_price,amount) VALUES (?,?,?,?,?,?,?,?,?)\");","  $st->execute([(int)($in['invoice_id'] ?? 0), $in['po_id'] ?? null, $in['po_line_id'] ?? null, $in['grn_id'] ?? null, $in['grn_line_id'] ?? null, $in['item_id'] ?? null, $qty, $rate, $amt]);","  $pdo->prepare(\"UPDATE ap_invoices SET total_amount=COALESCE(total_amount,0)+? WHERE id=?\")->execute([$amt, (int)($in['invoice_id'] ?? 0)]);","  echo json_encode(['ok'=>true,'data'=>['invoice_line_id'=>(int)$pdo->lastInsertId(),'amount'=>$amt]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/finance/_ajax/ap_invoice_match.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2) . '/includes/auth.php';","require_once dirname(__DIR__,2) . '/includes/db.php';","require_once dirname(__DIR__,2) . '/includes/rbac.php';","require_once dirname(__DIR__,2) . '/includes/coupler/ThreeWayMatch.php';","header('Content-Type: application/json');","try{","  require_login(); require_permission('finance.ap.match');","  $pdo = db();","  $in = json_decode(file_get_contents('php://input'), true) ?: $_POST;","  $svc = new \\Coupler\\ThreeWayMatch($pdo);","  $res = $svc->matchInvoice((int)($in['invoice_id'] ?? 0));","  echo json_encode(['ok'=>true,'data'=>$res]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/finance/_ajax/ap_invoice_post.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2) . '/includes/auth.php';","require_once dirname(__DIR__,2) . '/includes/db.php';","require_once dirname(__DIR__,2) . '/includes/rbac.php';","require_once dirname(__DIR__,2) . '/includes/coupler/ThreeWayMatch.php';","header('Content-Type: application/json');","try{","  require_login(); require_permission('finance.ap.post');","  $pdo = db();","  $in = json_decode(file_get_contents('php://input'), true) ?: $_POST;","  $svc = new \\Coupler\\ThreeWayMatch($pdo);","  $res = $svc->postInvoice((int)($in['invoice_id'] ?? 0));","  echo json_encode(['ok'=>true,'data'=>$res]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/finance/_ajax/ap_invoice_create.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2) . '/includes/auth.php';","require_once dirname(__DIR__,2) . '/includes/db.php';","require_once dirname(__DIR__,2) . '/includes/rbac.php';","header('Content-Type: application/json');","try{","  require_login(); require_permission('finance.ap.create');","  $pdo = db();","  $in = json_decode(file_get_contents('php://input'), true) ?: $_POST;","  $st=$pdo->prepare(\"INSERT INTO ap_invoices (vendor_id,currency,fx_rate,invoice_no,invoice_date,category,notes) VALUES (?,?,?,?,?,?,?)\");","  $st->execute([(int)($in['vendor_id'] ?? 0), (string)($in['currency'] ?? 'INR'), (float)($in['fx_rate'] ?? 1.0), (string)($in['invoice_no'] ?? ''), (string)($in['invoice_date'] ?? date('Y-m-d')), (string)($in['category'] ?? 'goods'), $in['notes'] ?? null]);","  echo json_encode(['ok'=>true,'data'=>['invoice_id'=>(int)$pdo->lastInsertId()]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/finance/ap_invoice_console.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_login(); require_permission('finance.ap.view');","?><!doctype html><html><head><meta charset=\"utf-8\"><title>AP Invoice Console (3-Way Match)</title>","<link rel=\"stylesheet\" href=\"../assets/ems_phase04_ui.css\"></head><body>","<h1>AP Invoice Console (3-Way Match)</h1>","<section><h2>Create Invoice</h2>","<div class=\"row\"><div><label>Vendor ID</label><input id=\"v_id\" type=\"number\"></div><div><label>Invoice No</label><input id=\"inv_no\"></div>","<div><label>Date</label><input id=\"inv_date\" type=\"date\"></div><div><label>Category</label><select id=\"inv_cat\"><option>goods</option><option>service</option><option>landed_cost</option></select></div></div>","<div class=\"row\"><div><label>Currency</label><input id=\"inv_curr\" value=\"INR\"></div><div><label>FX Rate</label><input id=\"inv_fx\" type=\"number\" step=\"0.000001\" value=\"1.0\"></div><div><button id=\"btnCreateInv\">Create</button></div></div>","<b id=\"invoiceId\"></b></section>","<section><h2>Add Invoice Line</h2>","<div class=\"row\"><div><label>Invoice ID</label><input id=\"il_inv_id\" type=\"number\"></div><div><label>PO Line ID</label><input id=\"il_po_line\" type=\"number\"></div>","<div><label>GRN Line ID</label><input id=\"il_grn_line\" type=\"number\"></div><div><label>Item ID</label><input id=\"il_item\" type=\"number\"></div></div>","<div class=\"row\"><div><label>Qty</label><input id=\"il_qty\" type=\"number\" step=\"0.000001\"></div><div><label>Unit Price</label><input id=\"il_rate\" type=\"number\" step=\"0.000001\"></div><div><button id=\"btnAddLine\">Add Line</button></div></div>","<div id=\"ilMsg\"></div></section>","<section><h2>Match & Post</h2>","<div class=\"row-3\"><div><label>Invoice ID</label><input id=\"act_inv_id\" type=\"number\"></div><div><button id=\"btnMatch\">Run 3-Way Match</button></div><div><button id=\"btnPost\">Post</button></div></div>","<div id=\"matchMsg\"></div></section>","<script>","async function api(u,d){const r=await fetch(u,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(d)});const j=await r.json();if(!j.ok) throw new Error(j.error||'API');return j.data;}","document.getElementById('btnCreateInv').onclick=async()=>{try{const d=await api('../finance/_ajax/ap_invoice_create.php',{vendor_id:parseInt(document.getElementById('v_id').value||0),invoice_no:document.getElementById('inv_no').value,invoice_date:document.getElementById('inv_date').value,category:document.getElementById('inv_cat').value,currency:document.getElementById('inv_curr').value,fx_rate:parseFloat(document.getElementById('inv_fx').value||'1')});document.getElementById('invoiceId').textContent='Invoice #'+d.invoice_id;document.getElementById('il_inv_id').value=d.invoice_id;document.getElementById('act_inv_id').value=d.invoice_id;}catch(e){alert(e.message);}};","document.getElementById('btnAddLine').onclick=async()=>{try{const d=await api('../finance/_ajax/ap_invoice_add_line.php',{invoice_id:parseInt(document.getElementById('il_inv_id').value||0),po_line_id:document.getElementById('il_po_line').value?parseInt(document.getElementById('il_po_line').value):null,grn_line_id:document.getElementById('il_grn_line').value?parseInt(document.getElementById('il_grn_line').value):null,item_id:document.getElementById('il_item').value?parseInt(document.getElementById('il_item').value):null,qty:parseFloat(document.getElementById('il_qty').value||'0'),unit_price:parseFloat(document.getElementById('il_rate').value||'0')});document.getElementById('ilMsg').textContent='Line #'+d.invoice_line_id+' amount='+d.amount;}catch(e){alert(e.message);}};","document.getElementById('btnMatch').onclick=async()=>{try{const d=await api('../finance/_ajax/ap_invoice_match.php',{invoice_id:parseInt(document.getElementById('act_inv_id').value||0)});document.getElementById('matchMsg').innerHTML='OK: '+d.ok+' Tol: '+d.tolerance+' Exc: '+d.exception+' Status: <span class=\"badge '+(d.exception>0?'err':(d.tolerance>0?'warn':'ok'))+'\">'+d.status+'</span>'; }catch(e){alert(e.message);}};","document.getElementById('btnPost').onclick=async()=>{try{const d=await api('../finance/_ajax/ap_invoice_post.php',{invoice_id:parseInt(document.getElementById('act_inv_id').value||0)});document.getElementById('matchMsg').textContent='Posted amount='+d.amount+' PPV='+d.ppv+' QTV='+d.qtv;}catch(e){alert(e.message);}};","</script></body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/files_grouped.json": ["{","\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_complete.php\": [\"<?php\",\"/** PATH: /public_html/maintenance/wo_complete.php\",\" * PURPOSE:\",\" *  - Complete/close a Work Order.\",\" *  - If linked to an interval, roll the interval (last_completed_on, next_due_date).\",\" * SECURITY: maintenance.wo.manage\",\" * NOTE: Uses status='completed' to match schema/enum.\",\" */\",\"declare(strict_types=1);\",\"\",\"$ROOT = dirname(__DIR__);\",\"require_once $ROOT . '/includes/auth.php';\",\"require_once $ROOT . '/includes/db.php';\",\"require_once $ROOT . '/includes/rbac.php';\",\"\",\"require_login();\",\"require_permission('maintenance.wo.manage');\",\"\",\"$pdo = db();\",\"$pdo->exec(\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\");\",\"\",\"$woId = (int)($_GET['id'] ?? $_POST['id'] ?? 0);\",\"if ($woId <= 0) { http_response_code(400); exit('Invalid WO id'); }\",\"\",\"function next_due_from(string $freq, int $count, int $customDays, DateTimeImmutable $base): string {\",\"  $count = max(1, $count);\",\"  return match ($freq) {\",\"    'daily'       => $base->modify(\\\"+{$count} day\\\")->format('Y-m-d'),\",\"    'weekly'      => $base->modify(\\\"+{$count} week\\\")->format('Y-m-d'),\",\"    'monthly'     => $base->modify(\\\"+{$count} month\\\")->format('Y-m-d'),\",\"    'quarterly'   => $base->modify(\\\"+\\\".(3 * $count).\\\" month\\\")->format('Y-m-d'),\",\"    'semiannual'  => $base->modify(\\\"+\\\".(6 * $count).\\\" month\\\")->format('Y-m-d'),\",\"    'annual'      => $base->modify(\\\"+{$count} year\\\")->format('Y-m-d'),\",\"    'custom'      => $base->modify(\\\"+\\\".max(1, $customDays).\\\" day\\\")->format('Y-m-d'),\",\"    default       => $base->modify(\\\"+{$count} month\\\")->format('Y-m-d'),\",\"  };\",\"}\",\"\",\"try {\",\"  // Load WO\",\"  $st = $pdo->prepare(\\\"\",\"    SELECT id, wo_code, machine_id, interval_id, status, due_date, down_from, up_at\",\"      FROM maintenance_work_orders\",\"     WHERE id = ?\\\");\",\"  $st->execute([$woId]);\",\"  $wo = $st->fetch(PDO::FETCH_ASSOC);\",\"  if (!$wo) { http_response_code(404); exit('Work Order not found'); }\",\"\",\"  $today = new DateTimeImmutable('today');\",\"\",\"  $pdo->beginTransaction();\",\"\",\"  // If tied to an interval \\u2192 roll it forward\",\"  if (!empty($wo['interval_id'])) {\",\"    $stIv = $pdo->prepare(\\\"\",\"      SELECT id, program_id, title, frequency, interval_count, custom_days\",\"        FROM maintenance_intervals\",\"       WHERE id = ?\\\");\",\"    $stIv->execute([(int)$wo['interval_id']]);\",\"    if ($iv = $stIv->fetch(PDO::FETCH_ASSOC)) {\",\"      $next = next_due_from(\",\"        (string)$iv['frequency'],\",\"        (int)($iv['interval_count'] ?? 1),\",\"        (int)($iv['custom_days'] ?? 0),\",\"        $today\",\"      );\",\"      $pdo->prepare(\\\"\",\"        UPDATE maintenance_intervals\",\"           SET last_completed_on = ?, next_due_date = ?, updated_at = NOW()\",\"         WHERE id = ?\",\"      \\\")->execute([$today->format('Y-m-d'), $next, (int)$iv['id']]);\",\"    }\",\"  }\",\"\",\"  // Mark WO completed (enum-safe)\",\"  $pdo->prepare(\\\"\",\"    UPDATE maintenance_work_orders\",\"       SET status='completed',\",\"           up_at = COALESCE(up_at, NOW())\",\"     WHERE id = ?\",\"  \\\")->execute([$woId]);\",\"\",\"  // Best-effort maintenance log (ignore failure)\",\"  try {\",\"    $pdo->prepare(\\\"\",\"      INSERT INTO maintenance_logs (machine_id, wo_id, performed_on, meter_value, remarks, created_by, created_at) VALUES (?, ?, NOW(), NULL, ?, ?, NOW()))\",\"    \\\")->execute([\",\"      (int)$wo['machine_id'],\",\"      $today->format('Y-m-d'),\",\"      'WO completed: ' . (string)($wo['wo_code'] ?? $woId),\",\"      (int)current_user_id()\",\"    ]);\",\"  } catch (Throwable $e) { /* non-blocking */ }\",\"\",\"  $pdo->commit();\",\"  header('Location: /maintenance/wo_view.php?id=' . $woId . '&ok=1');\",\"  exit;\",\"\",\"} catch (Throwable $e) {\",\"  if ($pdo->inTransaction()) $pdo->rollBack();\",\"  http_response_code(500);\",\"  echo \\\"Complete failed: \\\" . $e->getMessage();\",\"  exit;\",\"}\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_task_toggle.php\": [\"<?php\",\"/** PATH: /public_html/maintenance/wo_task_toggle.php\",\" * PURPOSE: Toggle one task status between 'todo' and 'done'\",\" * PERMS: maintenance.wo.manage\",\" */\",\"declare(strict_types=1);\",\"\",\"$ROOT = dirname(__DIR__);\",\"require_once $ROOT . '/includes/auth.php';\",\"require_once $ROOT . '/includes/db.php';\",\"require_once $ROOT . '/includes/rbac.php';\",\"require_once $ROOT . '/includes/csrf.php';\",\"\",\"require_login();\",\"require_permission('maintenance.wo.manage');\",\"\",\"$pdo = db();\",\"csrf_require_token();\",\"$pdo->exec(\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\");\",\"\",\"$id   = (int)($_POST['id'] ?? 0);\",\"$woId = (int)($_POST['wo_id'] ?? 0);\",\"$to   = (string)($_POST['to'] ?? '');\",\"\",\"if ($id <= 0 || $woId <= 0 || !in_array($to, ['todo','done'], true)) {\",\"  http_response_code(400); exit('Invalid params');\",\"}\",\"\",\"$st = $pdo->prepare(\\\"UPDATE maintenance_wo_tasks SET status=? WHERE id=? AND wo_id=?\\\");\",\"$st->execute([$to, $id, $woId]);\",\"\",\"header('Location: /maintenance/wo_view.php?id=' . $woId);\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_form.php\": [\"<?php\",\"/** PATH: /public_html/maintenance/wo_form.php */\",\"declare(strict_types=1);\",\"\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"require_once __DIR__ . '/../includes/csrf.php';\",\"require_once __DIR__ . '/../includes/machines_helpers.php';\",\"\",\"require_login();\",\"$pdo = db();\",\"$pdo->exec(\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\");\",\"\",\"$id = (int)($_GET['id'] ?? 0);\",\"$is_edit = $id > 0;\",\"if ($is_edit) require_permission('maintenance.wo.view'); else require_permission('maintenance.wo.manage');\",\"\",\"function allocate_wo_code(PDO $pdo): string {\",\"  $year = date('Y');\",\"  $lock = \\\"wo_code_$year\\\";\",\"  $pdo->query(\\\"SELECT GET_LOCK('$lock', 10)\\\");\",\"  try {\",\"    $st = $pdo->prepare(\\\"SELECT MAX(CAST(SUBSTRING(wo_code, 10) AS UNSIGNED)) FROM maintenance_work_orders WHERE wo_code LIKE ?\\\");\",\"    $st->execute([\\\"WO-$year-%\\\"]);\",\"    $next = ((int)$st->fetchColumn()) + 1;\",\"    return sprintf(\\\"WO-%s-%04d\\\", $year, $next);\",\"  } finally {\",\"    $pdo->query(\\\"SELECT RELEASE_LOCK('$lock')\\\");\",\"  }\",\"}\",\"function sum_array_amount(array $arr, string $key): float { $t=0.0; foreach($arr as $r){ $t+=(float)($r[$key]??0);} return $t; }\",\"\",\"$machines = $pdo->query(\\\"SELECT id, CONCAT(machine_id,' - ',name) AS label FROM machines ORDER BY machine_id\\\")->fetchAll(PDO::FETCH_KEY_PAIR);\",\"$mtypes   = $pdo->query(\\\"SELECT id, CONCAT(code,' - ',name) AS label FROM maintenance_types ORDER BY code\\\")->fetchAll(PDO::FETCH_KEY_PAIR);\",\"\",\"$wo = [\",\"  'wo_code'=>'','machine_id'=> (int)($_GET['machine_id'] ?? 0),'interval_id'=>null,\",\"  'title'=> (string)($_GET['title'] ?? ''),'description'=>null,'maintenance_type_id'=>null,'priority'=>'medium',\",\"  'status'=>'open','due_date'=>null,'reported_by'=>null,'down_from'=>null,'up_at'=>null,\",\"  'parts_cost'=>0,'labour_cost_internal'=>0,'labour_cost_vendor'=>0,'misc_cost'=>0,'total_cost'=>0\",\"];\",\"$tasks=[]; $parts=[]; $labour=[];\",\"$interval_id = (int)($_GET['interval_id'] ?? 0);\",\"if (!$is_edit && $interval_id) {\",\"  $st = $pdo->prepare(\\\"SELECT mi.*, mp.machine_id FROM maintenance_intervals mi JOIN maintenance_programs mp ON mp.id=mi.program_id WHERE mi.id=?\\\");\",\"  $st->execute([$interval_id]);\",\"  if ($ir=$st->fetch(PDO::FETCH_ASSOC)) {\",\"    $wo['machine_id']=(int)$ir['machine_id']; $wo['interval_id']=(int)$ir['id']; $wo['title']=(string)$ir['title']; $wo['maintenance_type_id']=(int)$ir['maintenance_type_id']; $wo['due_date']=$ir['next_due_date'];\",\"    if (!empty($ir['checklist_json'])) { $chk=json_decode((string)$ir['checklist_json'], true); if (is_array($chk)) foreach($chk as $c) $tasks[]=['task'=>(string)($c['task']??(is_string($c)?$c:'')),'status'=>'pending']; }\",\"    if (!empty($ir['parts_json'])) { $pj=json_decode((string)$ir['parts_json'], true); if (is_array($pj)) foreach($pj as $p) $parts[]=['item_id'=>(int)($p['item_id']??0)?:null,'description'=>(string)($p['description']??''),'qty'=>(float)($p['qty']??0),'uom_id'=>(int)($p['uom_id']??0)?:null,'rate'=>(float)($p['rate']??0),'amount'=>(float)($p['amount']??0)]; }\",\"  }\",\"}\",\"if ($is_edit) {\",\"  $st=$pdo->prepare(\\\"SELECT * FROM maintenance_work_orders WHERE id=?\\\"); $st->execute([$id]); $wo=$st->fetch(PDO::FETCH_ASSOC) ?: $wo;\",\"  $tasks=$pdo->query(\\\"SELECT * FROM maintenance_wo_tasks WHERE wo_id=$id ORDER BY id\\\")->fetchAll(PDO::FETCH_ASSOC);\",\"  $parts=$pdo->query(\\\"SELECT * FROM maintenance_wo_parts WHERE wo_id=$id ORDER BY id\\\")->fetchAll(PDO::FETCH_ASSOC);\",\"  $labour=$pdo->query(\\\"SELECT * FROM maintenance_wo_labour WHERE wo_id=$id ORDER BY id\\\")->fetchAll(PDO::FETCH_ASSOC);\",\"}\",\"$errors=[]; $ok='';\",\"if ($_SERVER['REQUEST_METHOD']==='POST') {\",\"  csrf_require_token();\",\"  $wo['machine_id']=(int)($_POST['machine_id'] ?? 0);\",\"  $wo['interval_id']=($_POST['interval_id'] ?? '')!==''?(int)$_POST['interval_id']:null;\",\"  $wo['title']=trim((string)($_POST['title'] ?? ''));\",\"  $wo['description']=trim((string)($_POST['description'] ?? '')) ?: null;\",\"  $wo['maintenance_type_id']=($_POST['maintenance_type_id'] ?? '')!==''?(int)$_POST['maintenance_type_id']:null;\",\"  $wo['priority']=(string)($_POST['priority'] ?? 'medium');\",\"  $wo['status']=(string)($_POST['status'] ?? 'open');\",\"  $wo['due_date']=($_POST['due_date'] ?? '') ?: null;\",\"  $wo['down_from']=($_POST['down_from'] ?? '') ?: null;\",\"  $wo['up_at']=($_POST['up_at'] ?? '') ?: null;\",\"\",\"  $tasks = array_values((array)($_POST['tasks'] ?? []));\",\"  $parts = array_values((array)($_POST['parts'] ?? []));\",\"  $labour= array_values((array)($_POST['labour'] ?? []));\",\"\",\"  $parts_total = sum_array_amount($parts, 'amount');\",\"  $lab_int=0.0; $lab_vend=0.0;\",\"  foreach ($labour as $l){ $amt=(float)($l['amount']??0); if((string)($l['role_name']??'')==='vendor') $lab_vend+=$amt; else $lab_int+=$amt; }\",\"  $misc=(float)($_POST['misc_cost'] ?? 0);\",\"  $wo['parts_cost']=$parts_total; $wo['labour_cost_internal']=$lab_int; $wo['labour_cost_vendor']=$lab_vend; $wo['misc_cost']=$misc; $wo['total_cost']=$parts_total+$lab_int+$lab_vend+$misc;\",\"\",\"  if ($wo['machine_id']<=0) $errors[]='Machine is required';\",\"  if ($wo['title']==='')    $errors[]='Title is required';\",\"\",\"  if (!$errors) {\",\"    $pdo->beginTransaction();\",\"    try {\",\"      if ($is_edit) {\",\"        $sql=\\\"UPDATE maintenance_work_orders SET title=?, description=?, maintenance_type_id=?, priority=?, status=?, due_date=?, interval_id=?, down_from=?, up_at=?, parts_cost=?, labour_cost_internal=?, labour_cost_vendor=?, misc_cost=?, total_cost=?, updated_at=NOW() WHERE id=?\\\";\",\"        $pdo->prepare($sql)->execute([$wo['title'],$wo['description'],$wo['maintenance_type_id'],$wo['priority'],$wo['status'],$wo['due_date'],$wo['interval_id'],$wo['down_from'],$wo['up_at'],$wo['parts_cost'],$wo['labour_cost_internal'],$wo['labour_cost_vendor'],$wo['misc_cost'],$wo['total_cost'],$id]);\",\"      } else {\",\"        $wo_code = allocate_wo_code($pdo);\",\"        $sql=\\\"INSERT INTO maintenance_work_orders (wo_code,machine_id,interval_id,title,description,maintenance_type_id,priority,status,due_date,reported_by,reported_at,down_from,up_at,parts_cost,labour_cost_internal,labour_cost_vendor,misc_cost,total_cost,created_by,created_at) VALUES (?,?,?,?,?,?,?,?,?, ?, NOW(), ?, ?, ?, ?, ?, ?, ?, ?, NOW())\\\";\",\"        $pdo->prepare($sql)->execute([$wo_code,$wo['machine_id'],$wo['interval_id'],$wo['title'],$wo['description'],$wo['maintenance_type_id'],$wo['priority'],$wo['status'],$wo['due_date'],current_user_id(),$wo['down_from'],$wo['up_at'],$wo['parts_cost'],$wo['labour_cost_internal'],$wo['labour_cost_vendor'],$wo['misc_cost'],$wo['total_cost'],current_user_id()]);\",\"        $id=(int)$pdo->lastInsertId(); $is_edit=true;\",\"      }\",\"      $pdo->prepare(\\\"DELETE FROM maintenance_wo_tasks WHERE wo_id=?\\\")->execute([$id]);\",\"      if ($tasks) { $ins=$pdo->prepare(\\\"INSERT INTO maintenance_wo_tasks (wo_id,task,status) VALUES (?,?,?)\\\"); foreach($tasks as $t){ $task=trim((string)($t['task']??'')); if($task==='') continue; $status=in_array(($t['status']??'pending'),['pending','done'],true)?$t['status']:'pending'; $ins->execute([$id,$task,$status]); } }\",\"      $pdo->prepare(\\\"DELETE FROM maintenance_wo_parts WHERE wo_id=?\\\")->execute([$id]);\",\"      if ($parts) { $ins=$pdo->prepare(\\\"INSERT INTO maintenance_wo_parts (wo_id,item_id,description,qty,uom_id,rate,amount,source_doc) VALUES (?,?,?,?,?,?,?,?)\\\");\",\"        foreach($parts as $p){ $desc=trim((string)($p['description']??'')); $qty=(float)($p['qty']??0); if($desc==='' && $qty<=0) continue;\",\"          $ins->execute([$id, ($p['item_id']??'')!==''?(int)$p['item_id']:null, $desc, $qty, ($p['uom_id']??'')!==''?(int)$p['uom_id']:null, ($p['rate']??'')!==''?(float)$p['rate']:null, ($p['amount']??'')!==''?(float)$p['amount']:null, trim((string)($p['source_doc']??''))?:null]); } }\",\"      $pdo->prepare(\\\"DELETE FROM maintenance_wo_labour WHERE wo_id=?\\\")->execute([$id]);\",\"      if ($labour) { $ins=$pdo->prepare(\\\"INSERT INTO maintenance_wo_labour (wo_id,staff_id,role_name,entry_date,hours,rate,amount,shift,notes) VALUES (?,?,?,?,?,?,?,?,?)\\\");\",\"        foreach($labour as $l){ $entry_date=(string)($l['entry_date']??''); if($entry_date==='') continue;\",\"          $ins->execute([$id, ($l['staff_id']??'')!==''?(int)$l['staff_id']:null, trim((string)($l['role_name']??''))?:null, $entry_date, (float)($l['hours']??0), (float)($l['rate']??0), (float)($l['amount']??0), in_array(($l['shift']??null),['A','B','C'],true)?$l['shift']:null, trim((string)($l['notes']??''))?:null]); } }\",\"      $pdo->commit();\",\"      $ok='Saved.';\",\"      $st=$pdo->prepare(\\\"SELECT * FROM maintenance_work_orders WHERE id=?\\\"); $st->execute([$id]); $wo=$st->fetch(PDO::FETCH_ASSOC) ?: $wo;\",\"    } catch(Throwable $e){ $pdo->rollBack(); $errors[]='Save failed: '.$e->getMessage(); }\",\"  }\",\"}\",\"\",\"$holder = (int)$wo['machine_id']>0 ? machine_current_holder($pdo, (int)$wo['machine_id']) : null;\",\"\",\"$PAGE_TITLE = $is_edit ? \\\"Work Order \\\".($wo['wo_code'] ?? '') : \\\"New Work Order\\\";\",\"$ACTIVE_MENU = 'machines.list';\",\"include __DIR__ . '/../ui/layout_start.php';\",\"?>\",\"<div class=\\\"d-flex align-items-center justify-content-between mb-3\\\">\",\"  <h1 class=\\\"h5 mb-0\\\"><?=$PAGE_TITLE?></h1>\",\"  <div class=\\\"d-flex gap-2\\\">\",\"    <?php if ($holder): ?>\",\"      <span class=\\\"badge bg-warning text-dark align-self-center\\\">Held by <?=htmlspecialchars($holder['contractor_code'].' \\u2014 '.$holder['contractor_name'])?></span>\",\"    <?php endif; ?>\",\"    <div class=\\\"btn-group btn-group-sm\\\">\",\"      <?php if ((int)$wo['machine_id']>0): ?>\",\"        <a class=\\\"btn btn-outline-secondary\\\" href=\\\"/maintenance/programs_list.php?machine_id=<?=$wo['machine_id']?>\\\">Programs</a>\",\"        <a class=\\\"btn btn-outline-dark\\\" href=\\\"/maintenance/wo_list.php?machine_id=<?=$wo['machine_id']?>\\\">WO List</a>\",\"        <a class=\\\"btn btn-outline-danger\\\" href=\\\"/maintenance/breakdown_quick_create.php?machine_id=<?=$wo['machine_id']?>&symptom=Breakdown%20reported&severity=high\\\">+ Breakdown</a>\",\"        <?php if ($holder): ?>\",\"          <a class=\\\"btn btn-success\\\" href=\\\"/maintenance_alloc/allocations_return.php?id=<?=$holder['alloc_id']?>\\\">Return</a>\",\"        <?php else: ?>\",\"          <a class=\\\"btn btn-success\\\" href=\\\"/maintenance_alloc/allocations_form.php?machine_id=<?=$wo['machine_id']?>\\\">Issue</a>\",\"        <?php endif; ?>\",\"      <?php endif; ?>\",\"    </div>\",\"    <a class=\\\"btn btn-light btn-sm\\\" href=\\\"/maintenance/wo_list.php?machine_id=<?=(int)$wo['machine_id']?>\\\">Back</a>\",\"    <?php if (!$is_edit && has_permission('maintenance.wo.manage')): ?>\",\"      <button form=\\\"woForm\\\" class=\\\"btn btn-primary btn-sm\\\">Create</button>\",\"    <?php elseif (has_permission('maintenance.wo.manage')): ?>\",\"      <button form=\\\"woForm\\\" class=\\\"btn btn-primary btn-sm\\\">Save</button>\",\"    <?php endif; ?>\",\"  </div>\",\"</div>\",\"\",\"<?php if ($errors): ?><div class=\\\"alert alert-danger\\\"><ul class=\\\"mb-0\\\"><?php foreach($errors as $e) echo '<li>'.htmlspecialchars($e).'</li>'; ?></ul></div>\",\"<?php elseif ($ok): ?><div class=\\\"alert alert-success\\\"><?=$ok?></div><?php endif; ?>\",\"\",\"<form id=\\\"woForm\\\" method=\\\"post\\\" class=\\\"row g-3\\\">\",\"  <?= csrf_hidden_input() ?>\",\"  <div class=\\\"col-md-4\\\">\",\"    <label class=\\\"form-label\\\">Machine</label>\",\"    <select name=\\\"machine_id\\\" class=\\\"form-select\\\" required>\",\"      <option value=\\\"\\\">\\u2014 choose \\u2014</option>\",\"      <?php foreach ($machines as $mid=>$label): ?>\",\"        <option value=\\\"<?=$mid?>\\\" <?= (int)$wo['machine_id']===$mid?'selected':'' ?>><?=htmlspecialchars((string)$label)?></option>\",\"      <?php endforeach; ?>\",\"    </select>\",\"  </div>\",\"  <div class=\\\"col-md-3\\\">\",\"    <label class=\\\"form-label\\\">Maintenance Type</label>\",\"    <select name=\\\"maintenance_type_id\\\" class=\\\"form-select\\\">\",\"      <option value=\\\"\\\">\\u2014</option>\",\"      <?php foreach ($mtypes as $tid=>$label): ?>\",\"        <option value=\\\"<?=$tid?>\\\" <?= (int)($wo['maintenance_type_id'] ?? 0)===$tid?'selected':'' ?>><?=htmlspecialchars($label)?></option>\",\"      <?php endforeach; ?>\",\"    </select>\",\"  </div>\",\"  <div class=\\\"col-md-2\\\">\",\"    <label class=\\\"form-label\\\">Priority</label>\",\"    <select name=\\\"priority\\\" class=\\\"form-select\\\">\",\"      <?php foreach (['low','medium','high'] as $p): ?>\",\"        <option value=\\\"<?=$p?>\\\" <?= ($wo['priority'] ?? 'medium')===$p?'selected':'' ?>><?=ucfirst($p)?></option>\",\"      <?php endforeach; ?>\",\"    </select>\",\"  </div>\",\"  <div class=\\\"col-md-3\\\">\",\"    <label class=\\\"form-label\\\">Status</label>\",\"    <select name=\\\"status\\\" class=\\\"form-select\\\">\",\"      <?php foreach (['open','in_progress','waiting_parts','completed','cancelled'] as $s): ?>\",\"        <option value=\\\"<?=$s?>\\\" <?= ($wo['status'] ?? 'open')===$s?'selected':'' ?>><?=ucwords(str_replace('_',' ',$s))?></option>\",\"      <?php endforeach; ?>\",\"    </select>\",\"  </div>\",\"\",\"  <div class=\\\"col-md-8\\\">\",\"    <label class=\\\"form-label\\\">Title</label>\",\"    <input name=\\\"title\\\" class=\\\"form-control\\\" required value=\\\"<?=htmlspecialchars((string)$wo['title'])?>\\\">\",\"  </div>\",\"  <div class=\\\"col-md-4\\\">\",\"    <label class=\\\"form-label\\\">Due Date</label>\",\"    <input type=\\\"date\\\" name=\\\"due_date\\\" class=\\\"form-control\\\" value=\\\"<?=htmlspecialchars((string)$wo['due_date'] ?? '')?>\\\">\",\"  </div>\",\"\",\"  <div class=\\\"col-12\\\">\",\"    <label class=\\\"form-label\\\">Description</label>\",\"    <textarea name=\\\"description\\\" class=\\\"form-control\\\" rows=\\\"3\\\"><?=htmlspecialchars((string)($wo['description'] ?? ''))?></textarea>\",\"  </div>\",\"\",\"  <div class=\\\"col-md-3\\\">\",\"    <label class=\\\"form-label\\\">Linked Interval</label>\",\"    <input name=\\\"interval_id\\\" class=\\\"form-control\\\" value=\\\"<?=htmlspecialchars((string)($wo['interval_id'] ?? ''))?>\\\">\",\"    <div class=\\\"form-text\\\">Optional: link to a planned interval ID.</div>\",\"  </div>\",\"  <div class=\\\"col-md-3\\\">\",\"    <label class=\\\"form-label\\\">Down From</label>\",\"    <input type=\\\"datetime-local\\\" name=\\\"down_from\\\" class=\\\"form-control\\\" value=\\\"<?= $wo['down_from'] ? date('Y-m-d\\\\TH:i', strtotime((string)$wo['down_from'])) : '' ?>\\\">\",\"  </div>\",\"  <div class=\\\"col-md-3\\\">\",\"    <label class=\\\"form-label\\\">Up At</label>\",\"    <input type=\\\"datetime-local\\\" name=\\\"up_at\\\" class=\\\"form-control\\\" value=\\\"<?= $wo['up_at'] ? date('Y-m-d\\\\TH:i', strtotime((string)$wo['up_at'])) : '' ?>\\\">\",\"  </div>\",\"  <div class=\\\"col-md-3\\\">\",\"    <label class=\\\"form-label\\\">Misc Cost (\\u20b9)</label>\",\"    <input type=\\\"number\\\" step=\\\"0.01\\\" name=\\\"misc_cost\\\" class=\\\"form-control\\\" value=\\\"<?=htmlspecialchars((string)$wo['misc_cost'])?>\\\">\",\"  </div>\",\"\",\"  <hr class=\\\"mt-4\\\">\",\"\",\"  <h6>Tasks</h6>\",\"  <div id=\\\"tasksWrap\\\" class=\\\"mb-2\\\">\",\"    <?php foreach ($tasks ?: [['task'=>'','status'=>'pending']] as $i=>$t): ?>\",\"      <div class=\\\"row g-2 mb-2\\\">\",\"        <div class=\\\"col-md-8\\\"><input class=\\\"form-control\\\" name=\\\"tasks[<?=$i?>][task]\\\" placeholder=\\\"Task\\u2026\\\" value=\\\"<?=htmlspecialchars((string)($t['task'] ?? ''))?>\\\"></div>\",\"        <div class=\\\"col-md-3\\\">\",\"          <select class=\\\"form-select\\\" name=\\\"tasks[<?=$i?>][status]\\\">\",\"            <?php foreach (['pending','done'] as $ts): ?>\",\"              <option value=\\\"<?=$ts?>\\\" <?= (($t['status'] ?? 'pending')===$ts)?'selected':'' ?>><?=ucfirst($ts)?></option>\",\"            <?php endforeach; ?>\",\"          </select>\",\"        </div>\",\"        <div class=\\\"col-md-1 text-end\\\">\",\"          <button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" onclick=\\\"this.closest('.row').remove()\\\">\\u00d7</button>\",\"        </div>\",\"      </div>\",\"    <?php endforeach; ?>\",\"  </div>\",\"  <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-secondary\\\" onclick=\\\"addTask()\\\">+ Add Task</button>\",\"\",\"  <h6 class=\\\"mt-4\\\">Parts</h6>\",\"  <div id=\\\"partsWrap\\\" class=\\\"mb-2\\\">\",\"    <?php foreach ($parts ?: [['description'=>'','qty'=>'','uom_id'=>'','rate'=>'','amount'=>'']] as $i=>$p): ?>\",\"      <div class=\\\"row g-2 mb-2\\\">\",\"        <div class=\\\"col-md-5\\\"><input class=\\\"form-control\\\" name=\\\"parts[<?=$i?>][description]\\\" placeholder=\\\"Description\\\" value=\\\"<?=htmlspecialchars((string)($p['description'] ?? ''))?>\\\"></div>\",\"        <div class=\\\"col-md-2\\\"><input type=\\\"number\\\" step=\\\"0.001\\\" class=\\\"form-control\\\" name=\\\"parts[<?=$i?>][qty]\\\" placeholder=\\\"Qty\\\" value=\\\"<?=htmlspecialchars((string)($p['qty'] ?? ''))?>\\\"></div>\",\"        <div class=\\\"col-md-2\\\"><input class=\\\"form-control\\\" name=\\\"parts[<?=$i?>][uom_id]\\\" placeholder=\\\"UOM ID\\\" value=\\\"<?=htmlspecialchars((string)($p['uom_id'] ?? ''))?>\\\"></div>\",\"        <div class=\\\"col-md-1\\\"><input type=\\\"number\\\" step=\\\"0.01\\\" class=\\\"form-control\\\" name=\\\"parts[<?=$i?>][rate]\\\" placeholder=\\\"Rate\\\" value=\\\"<?=htmlspecialchars((string)($p['rate'] ?? ''))?>\\\"></div>\",\"        <div class=\\\"col-md-1\\\"><input type=\\\"number\\\" step=\\\"0.01\\\" class=\\\"form-control\\\" name=\\\"parts[<?=$i?>][amount]\\\" placeholder=\\\"Amt\\\" value=\\\"<?=htmlspecialchars((string)($p['amount'] ?? ''))?>\\\"></div>\",\"        <div class=\\\"col-md-1 text-end\\\"><button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" onclick=\\\"this.closest('.row').remove()\\\">\\u00d7</button></div>\",\"      </div>\",\"    <?php endforeach; ?>\",\"  </div>\",\"  <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-secondary\\\" onclick=\\\"addPart()\\\">+ Add Part</button>\",\"\",\"  <h6 class=\\\"mt-4\\\">Labour</h6>\",\"  <div id=\\\"labourWrap\\\" class=\\\"mb-2\\\">\",\"    <?php foreach ($labour ?: [['entry_date'=>date('Y-m-d'),'hours'=>'','rate'=>'','amount'=>'','role_name'=>'']] as $i=>$l): ?>\",\"      <div class=\\\"row g-2 mb-2\\\">\",\"        <div class=\\\"col-md-2\\\"><input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"labour[<?=$i?>][entry_date]\\\" value=\\\"<?=htmlspecialchars((string)($l['entry_date'] ?? date('Y-m-d')))?>\\\"></div>\",\"        <div class=\\\"col-md-2\\\"><input class=\\\"form-control\\\" name=\\\"labour[<?=$i?>][role_name]\\\" placeholder=\\\"Role/vendor\\\" value=\\\"<?=htmlspecialchars((string)($l['role_name'] ?? ''))?>\\\"></div>\",\"        <div class=\\\"col-md-2\\\"><input type=\\\"number\\\" step=\\\"0.01\\\" class=\\\"form-control\\\" name=\\\"labour[<?=$i?>][hours]\\\" placeholder=\\\"Hours\\\" value=\\\"<?=htmlspecialchars((string)($l['hours'] ?? ''))?>\\\"></div>\",\"        <div class=\\\"col-md-2\\\"><input type=\\\"number\\\" step=\\\"0.01\\\" class=\\\"form-control\\\" name=\\\"labour[<?=$i?>][rate]\\\" placeholder=\\\"Rate\\\" value=\\\"<?=htmlspecialchars((string)($l['rate'] ?? ''))?>\\\"></div>\",\"        <div class=\\\"col-md-2\\\"><input type=\\\"number\\\" step=\\\"0.01\\\" class=\\\"form-control\\\" name=\\\"labour[<?=$i?>][amount]\\\" placeholder=\\\"Amount\\\" value=\\\"<?=htmlspecialchars((string)($l['amount'] ?? ''))?>\\\"></div>\",\"        <div class=\\\"col-md-1\\\">\",\"          <select class=\\\"form-select\\\" name=\\\"labour[<?=$i?>][shift]\\\"><option value=\\\"\\\">-</option><option<?=($l['shift']??'')==='A'?' selected':''?>>A</option><option<?=($l['shift']??'')==='B'?' selected':''?>>B</option><option<?=($l['shift']??'')==='C'?' selected':''?>>C</option></select>\",\"        </div>\",\"        <div class=\\\"col-md-1 text-end\\\"><button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" onclick=\\\"this.closest('.row').remove()\\\">\\u00d7</button></div>\",\"      </div>\",\"    <?php endforeach; ?>\",\"  </div>\",\"  <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-secondary\\\" onclick=\\\"addLabour()\\\">+ Add Labour</button>\",\"\",\"  <div class=\\\"col-12 text-end\\\">\",\"    <button class=\\\"btn btn-primary\\\"><?= $is_edit ? 'Save' : 'Create' ?></button>\",\"  </div>\",\"</form>\",\"\",\"<script>\",\"function addTask(){ const w=document.getElementById('tasksWrap'); const i=w.querySelectorAll('.row').length;\",\"  w.insertAdjacentHTML('beforeend', `<div class=\\\"row g-2 mb-2\\\">\",\"    <div class=\\\"col-md-8\\\"><input class=\\\"form-control\\\" name=\\\"tasks[${i}][task]\\\" placeholder=\\\"Task\\u2026\\\"></div>\",\"    <div class=\\\"col-md-3\\\"><select class=\\\"form-select\\\" name=\\\"tasks[${i}][status]\\\"><option value=\\\"pending\\\">Pending</option><option value=\\\"done\\\">Done</option></select></div>\",\"    <div class=\\\"col-md-1 text-end\\\"><button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" onclick=\\\"this.closest('.row').remove()\\\">\\u00d7</button></div>\",\"  </div>`); }\",\"function addPart(){ const w=document.getElementById('partsWrap'); const i=w.querySelectorAll('.row').length;\",\"  w.insertAdjacentHTML('beforeend', `<div class=\\\"row g-2 mb-2\\\">\",\"    <div class=\\\"col-md-5\\\"><input class=\\\"form-control\\\" name=\\\"parts[${i}][description]\\\" placeholder=\\\"Description\\\"></div>\",\"    <div class=\\\"col-md-2\\\"><input type=\\\"number\\\" step=\\\"0.001\\\" class=\\\"form-control\\\" name=\\\"parts[${i}][qty]\\\" placeholder=\\\"Qty\\\"></div>\",\"    <div class=\\\"col-md-2\\\"><input class=\\\"form-control\\\" name=\\\"parts[${i}][uom_id]\\\" placeholder=\\\"UOM ID\\\"></div>\",\"    <div class=\\\"col-md-1\\\"><input type=\\\"number\\\" step=\\\"0.01\\\" class=\\\"form-control\\\" name=\\\"parts[${i}][rate]\\\" placeholder=\\\"Rate\\\"></div>\",\"    <div class=\\\"col-md-1\\\"><input type=\\\"number\\\" step=\\\"0.01\\\" class=\\\"form-control\\\" name=\\\"parts[${i}][amount]\\\" placeholder=\\\"Amt\\\"></div>\",\"    <div class=\\\"col-md-1 text-end\\\"><button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" onclick=\\\"this.closest('.row').remove()\\\">\\u00d7</button></div>\",\"  </div>`); }\",\"function addLabour(){ const w=document.getElementById('labourWrap'); const i=w.querySelectorAll('.row').length;\",\"  const today = new Date().toISOString().slice(0,10);\",\"  w.insertAdjacentHTML('beforeend', `<div class=\\\"row g-2 mb-2\\\">\",\"    <div class=\\\"col-md-2\\\"><input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"labour[${i}][entry_date]\\\" value=\\\"${today}\\\"></div>\",\"    <div class=\\\"col-md-2\\\"><input class=\\\"form-control\\\" name=\\\"labour[${i}][role_name]\\\" placeholder=\\\"Role/vendor\\\"></div>\",\"    <div class=\\\"col-md-2\\\"><input type=\\\"number\\\" step=\\\"0.01\\\" class=\\\"form-control\\\" name=\\\"labour[${i}][hours]\\\" placeholder=\\\"Hours\\\"></div>\",\"    <div class=\\\"col-md-2\\\"><input type=\\\"number\\\" step=\\\"0.01\\\" class=\\\"form-control\\\" name=\\\"labour[${i}][rate]\\\" placeholder=\\\"Rate\\\"></div>\",\"    <div class=\\\"col-md-2\\\"><input type=\\\"number\\\" step=\\\"0.01\\\" class=\\\"form-control\\\" name=\\\"labour[${i}][amount]\\\" placeholder=\\\"Amount\\\"></div>\",\"    <div class=\\\"col-md-1\\\"><select class=\\\"form-select\\\" name=\\\"labour[${i}][shift]\\\"><option value=\\\"\\\">-</option><option>A</option><option>B</option><option>C</option></select></div>\",\"    <div class=\\\"col-md-1 text-end\\\"><button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" onclick=\\\"this.closest('.row').remove()\\\">\\u00d7</button></div>\",\"  </div>`); }\",\"</script>\",\"<?php include __DIR__ . '/../ui/layout_end.php';\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/x_machine_type.php\": [\"<?php\",\"/** PATH: /public_html/maintenance/x_machine_type.php */\",\"declare(strict_types=1);\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_login();\",\"require_permission('machines.manage');\",\"\",\"$pdo = db();\",\"$machine_id = (int)($_GET['machine_id'] ?? 0);\",\"if(!$machine_id){ echo json_encode(['ok'=>false,'msg'=>'machine_id required']); exit; }\",\"\",\"$st = $pdo->prepare(\\\"SELECT type_id FROM machines WHERE id=?\\\");\",\"$st->execute([$machine_id]); // FK exists (machines\\u2192machine_types). :contentReference[oaicite:8]{index=8}\",\"$type_id = $st->fetchColumn();\",\"\",\"header('Content-Type: application/json');\",\"echo json_encode(['ok'=>(bool)$type_id,'type_id'=>(int)$type_id]);\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/programs_form.php\": [\"<?php\",\"declare(strict_types=1);\",\"/** PATH: /public_html/maintenance/programs_form.php */\",\"$ROOT = dirname(__DIR__);\",\"require_once $ROOT . '/includes/auth.php';\",\"require_once $ROOT . '/includes/db.php';\",\"require_once $ROOT . '/includes/rbac.php';\",\"require_once $ROOT . '/includes/csrf.php';\",\"\",\"require_login();\",\"// If you already have a 'maintenance.manage' permission, switch to that:\",\"require_permission('machines.manage');\",\"\",\"$pdo = db();\",\"\",\"$id = (int)($_GET['id'] ?? 0);\",\"$machine_id = (int)($_GET['machine_id'] ?? 0);\",\"$editing = $id > 0;\",\"\",\"$row = [\",\"  'machine_id'   => $machine_id ?: 0,\",\"  'anchor_date'  => null,\",\"  'default_team' => null,\",\"  'notes'        => null,\",\"];\",\"\",\"// Load program when editing\",\"if ($editing) {\",\"  $st = $pdo->prepare(\\\"SELECT * FROM maintenance_programs WHERE id = ?\\\");\",\"  $st->execute([$id]);\",\"  if ($db = $st->fetch(PDO::FETCH_ASSOC)) {\",\"    $row = array_merge($row, $db);\",\"  } else {\",\"    http_response_code(404);\",\"    exit('Program not found');\",\"  }\",\"}\",\"\",\"// Machines for dropdown\",\"$machines = $pdo->query(\\\"SELECT id, CONCAT(machine_id,' - ',name) AS label FROM machines ORDER BY machine_id\\\")->fetchAll(PDO::FETCH_KEY_PAIR);\",\"\",\"$errors = [];\",\"$okMsg  = '';\",\"\",\"if ($_SERVER['REQUEST_METHOD'] === 'POST') {\",\"  csrf_require_token();\",\"  $row['machine_id']   = (int)($_POST['machine_id'] ?? 0);\",\"  $row['anchor_date']  = $_POST['anchor_date'] ?? null;\",\"  $row['default_team'] = trim((string)($_POST['default_team'] ?? '')) ?: null;\",\"  $row['notes']        = trim((string)($_POST['notes'] ?? '')) ?: null;\",\"\",\"  if ($row['machine_id'] <= 0) $errors[] = 'Machine is required.';\",\"\",\"  // Enforce one program per machine (schema has UNIQUE uq_mp_machine)\",\"  if (!$errors) {\",\"    $u = $pdo->prepare(\\\"SELECT id FROM maintenance_programs WHERE machine_id = ? \\\" . ($editing ? \\\"AND id <> ?\\\" : \\\"\\\"));\",\"    $u->execute($editing ? [$row['machine_id'], $id] : [$row['machine_id']]);\",\"    if ($u->fetch()) $errors[] = 'This machine already has a maintenance program.';\",\"  }\",\"\",\"  if (!$errors) {\",\"    try {\",\"      if ($editing) {\",\"        $sql = \\\"UPDATE maintenance_programs\",\"                   SET machine_id=?, anchor_date=?, default_team=?, notes=?, updated_at=NOW()\",\"                 WHERE id=?\\\";\",\"        $pdo->prepare($sql)->execute([\",\"          $row['machine_id'], $row['anchor_date'], $row['default_team'], $row['notes'], $id\",\"        ]);\",\"        $okMsg = 'Program updated.';\",\"      } else {\",\"        $sql = \\\"INSERT INTO maintenance_programs\",\"                  (machine_id, anchor_date, default_team, notes, created_at, updated_at)\",\"                VALUES (?,?,?,?,NOW(),NOW())\\\";\",\"        $pdo->prepare($sql)->execute([\",\"          $row['machine_id'], $row['anchor_date'], $row['default_team'], $row['notes']\",\"        ]);\",\"        $id = (int)$pdo->lastInsertId();\",\"        $editing = true;\",\"        $okMsg = 'Program created.';\",\"      }\",\"      // After save, stay on the same page so you can add intervals\",\"      header(\\\"Location: programs_form.php?id=\\\".$id.\\\"&ok=1\\\");\",\"      exit;\",\"    } catch (Throwable $e) {\",\"      $errors[] = 'Save failed: '.$e->getMessage();\",\"    }\",\"  }\",\"}\",\"\",\"// UI\",\"$PAGE_TITLE = $editing ? 'Edit Maintenance Program' : 'Add Maintenance Program';\",\"include $ROOT . '/ui/layout_start.php';\",\"?>\",\"<div class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\",\"  <h1 class=\\\"h5 mb-0\\\"><?= htmlspecialchars($PAGE_TITLE) ?></h1>\",\"  <div class=\\\"d-flex gap-2\\\">\",\"    <?php if ($editing): ?>\",\"      <a class=\\\"btn btn-outline-primary btn-sm\\\" href=\\\"/maintenance/intervals_list.php?program_id=<?= (int)$id ?>\\\">+ Manage Intervals</a>\",\"    <?php endif; ?>\",\"    <a class=\\\"btn btn-light btn-sm\\\" href=\\\"/maintenance/programs_list.php\\\">Back</a>\",\"  </div>\",\"</div>\",\"\",\"<?php if (!empty($_GET['ok']) && !$errors): ?>\",\"  <div class=\\\"alert alert-success\\\">Saved successfully.</div>\",\"<?php endif; ?>\",\"\",\"<?php if ($errors): ?>\",\"  <div class=\\\"alert alert-danger\\\">\",\"    <ul class=\\\"mb-0\\\"><?php foreach ($errors as $e): ?><li><?= htmlspecialchars($e) ?></li><?php endforeach; ?></ul>\",\"  </div>\",\"<?php endif; ?>\",\"\",\"<form method=\\\"post\\\" class=\\\"row g-3\\\">\",\"  <?= csrf_hidden_input() ?>\",\"  <div class=\\\"col-md-6\\\">\",\"    <label class=\\\"form-label\\\">Machine</label>\",\"    <select name=\\\"machine_id\\\" class=\\\"form-select\\\" required>\",\"      <option value=\\\"\\\">-- choose --</option>\",\"      <?php foreach ($machines as $mid => $label): ?>\",\"        <option value=\\\"<?= (int)$mid ?>\\\" <?= ((int)$row['machine_id']===(int)$mid)?'selected':'' ?>>\",\"          <?= htmlspecialchars($label) ?>\",\"        </option>\",\"      <?php endforeach; ?>\",\"    </select>\",\"    <div class=\\\"form-text\\\">One program per machine (enforced by DB unique key).</div>\",\"  </div>\",\"\",\"  <div class=\\\"col-md-3\\\">\",\"    <label class=\\\"form-label\\\">Anchor Date</label>\",\"    <input type=\\\"date\\\" name=\\\"anchor_date\\\" class=\\\"form-control\\\" value=\\\"<?= htmlspecialchars((string)($row['anchor_date'] ?? '')) ?>\\\">\",\"    <div class=\\\"form-text\\\">Used as base for interval scheduling.</div>\",\"  </div>\",\"\",\"  <div class=\\\"col-md-3\\\">\",\"    <label class=\\\"form-label\\\">Default Team</label>\",\"    <input name=\\\"default_team\\\" class=\\\"form-control\\\" value=\\\"<?= htmlspecialchars((string)($row['default_team'] ?? '')) ?>\\\">\",\"  </div>\",\"\",\"  <div class=\\\"col-12\\\">\",\"    <label class=\\\"form-label\\\">Notes</label>\",\"    <textarea name=\\\"notes\\\" class=\\\"form-control\\\" rows=\\\"2\\\"><?= htmlspecialchars((string)($row['notes'] ?? '')) ?></textarea>\",\"  </div>\",\"\",\"  <div class=\\\"col-12 d-flex gap-2\\\">\",\"    <button class=\\\"btn btn-primary\\\">Save</button>\",\"    <?php if ($editing): ?>\",\"      <a class=\\\"btn btn-outline-secondary\\\" href=\\\"/maintenance/intervals_list.php?program_id=<?= (int)$id ?>\\\">Manage Intervals</a>\",\"    <?php endif; ?>\",\"  </div>\",\"</form>\",\"\",\"<?php include $ROOT . '/ui/layout_end.php';\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/intervals_form.php\": [\"<?php\",\"declare(strict_types=1);\",\"/** PATH: /public_html/maintenance/intervals_form.php */\",\"$ROOT = dirname(__DIR__);\",\"require_once $ROOT . '/includes/auth.php';\",\"require_once $ROOT . '/includes/db.php';\",\"require_once $ROOT . '/includes/rbac.php';\",\"require_once $ROOT . '/includes/csrf.php';\",\"\",\"require_login();\",\"require_permission('maintenance.manage');\",\"\",\"$pdo = db();\",\"\",\"$program_id = (int)($_GET['program_id'] ?? 0);\",\"$id         = (int)($_GET['id'] ?? 0);\",\"$editing    = $id > 0;\",\"\",\"// Fallback: if program_id missing but id is present, look it up\",\"if ($program_id <= 0 && $editing) {\",\"  $st = $pdo->prepare(\\\"SELECT program_id FROM maintenance_intervals WHERE id = ?\\\");\",\"  $st->execute([$id]);\",\"  $program_id = (int)$st->fetchColumn();\",\"}\",\"\",\"// Still missing? hard-stop with a clear message\",\"if ($program_id <= 0) { http_response_code(400); exit('program_id required'); }\",\"// load program header (for context/breadcrumb) \\u2014 NOTE: no p.title in schema\",\"$ph = $pdo->prepare(\\\"\",\"  SELECT p.id, p.machine_id AS machine_fk, m.machine_id, m.name AS machine_name\",\"  FROM maintenance_programs p\",\"  LEFT JOIN machines m ON m.id = p.machine_id\",\"  WHERE p.id = ?\",\"\\\");\",\"$ph->execute([$program_id]);\",\"$program = $ph->fetch(PDO::FETCH_ASSOC);\",\"if (!$program) { http_response_code(404); exit('Program not found'); }\",\"\",\"// dropdown: maintenance types\",\"$mtypes = $pdo->query(\\\"SELECT id, name FROM maintenance_types ORDER BY name\\\")->fetchAll(PDO::FETCH_KEY_PAIR);\",\"\",\"// default row\",\"$row = [\",\"  'program_id'           => $program_id,\",\"  'maintenance_type_id'  => null,\",\"  'title'                => '',\",\"  'frequency'            => 'monthly',     // enum in your DB: daily/weekly/monthly/quarterly/semiannual/annual/custom_days\",\"  'interval_count'       => 1,\",\"  'custom_days'          => null,\",\"  'notify_before_days'   => null,\",\"  'grace_days'           => null,\",\"  'requires_shutdown'    => 0,\",\"  'priority'             => 0,\",\"  'active'               => 1,\",\"  'last_completed_on'    => null,\",\"  'next_due_date'        => null,\",\"];\",\"\",\"// load existing when editing\",\"if ($editing) {\",\"  $st = $pdo->prepare(\\\"SELECT * FROM maintenance_intervals WHERE id=? AND program_id=?\\\");\",\"  $st->execute([$id,$program_id]);\",\"  $db = $st->fetch(PDO::FETCH_ASSOC);\",\"  if (!$db) { http_response_code(404); exit('Interval not found'); }\",\"  $row = array_merge($row, $db);\",\"}\",\"\",\"$errors = [];\",\"if ($_SERVER['REQUEST_METHOD'] === 'POST') {\",\"  csrf_require_token();\",\"  $row['program_id']          = $program_id; // lock to current program\",\"  $row['maintenance_type_id'] = (int)($_POST['maintenance_type_id'] ?? 0) ?: null;\",\"  $row['title']               = trim((string)($_POST['title'] ?? '')) ?: null;\",\"  $row['frequency']           = (string)($_POST['frequency'] ?? 'monthly');\",\"  $row['interval_count']      = (int)($_POST['interval_count'] ?? 1);\",\"  $row['custom_days']         = ($_POST['custom_days'] === '' ? null : (int)$_POST['custom_days']);\",\"  $row['notify_before_days']  = ($_POST['notify_before_days'] === '' ? null : (int)$_POST['notify_before_days']);\",\"  $row['grace_days']          = ($_POST['grace_days'] === '' ? null : (int)$_POST['grace_days']);\",\"  $row['requires_shutdown']   = isset($_POST['requires_shutdown']) ? 1 : 0;\",\"  $row['priority']            = (int)($_POST['priority'] ?? 0);\",\"  $row['active']              = isset($_POST['active']) ? 1 : 0;\",\"  $row['last_completed_on']   = $_POST['last_completed_on'] ?: null;\",\"  $row['next_due_date']       = $_POST['next_due_date'] ?: null;\",\"\",\"  if (!$row['maintenance_type_id']) $errors[] = 'Maintenance Type is required.';\",\"  if (!$row['title'])               $errors[] = 'Title is required.';\",\"  if (!in_array($row['frequency'], ['daily','weekly','monthly','quarterly','semiannual','annual','custom_days'], true))\",\"    $errors[] = 'Invalid frequency.';\",\"  if ($row['interval_count'] <= 0) $errors[] = 'Interval count must be positive.';\",\"  if ($row['frequency'] === 'custom_days' && !$row['custom_days'])\",\"    $errors[] = 'Custom days required for frequency = custom_days.';\",\"\",\"  if (!$errors) {\",\"    try {\",\"      if ($editing) {\",\"        $sql = \\\"UPDATE maintenance_intervals SET\",\"                  maintenance_type_id=?, title=?, frequency=?, interval_count=?, custom_days=?,\",\"                  notify_before_days=?, grace_days=?, requires_shutdown=?, priority=?, active=?,\",\"                  last_completed_on=?, next_due_date=?\",\"                WHERE id=? AND program_id=?\\\";\",\"        $pdo->prepare($sql)->execute([\",\"          $row['maintenance_type_id'], $row['title'], $row['frequency'], $row['interval_count'], $row['custom_days'],\",\"          $row['notify_before_days'], $row['grace_days'], $row['requires_shutdown'], $row['priority'], $row['active'],\",\"          $row['last_completed_on'], $row['next_due_date'], $id, $program_id\",\"        ]);\",\"      } else {\",\"        $sql = \\\"INSERT INTO maintenance_intervals\",\"                  (program_id, maintenance_type_id, title, frequency, interval_count, custom_days,\",\"                   notify_before_days, grace_days, requires_shutdown, priority, active,\",\"                   last_completed_on, next_due_date)\",\"                VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)\\\";\",\"        $pdo->prepare($sql)->execute([\",\"          $program_id, $row['maintenance_type_id'], $row['title'], $row['frequency'], $row['interval_count'], $row['custom_days'],\",\"          $row['notify_before_days'], $row['grace_days'], $row['requires_shutdown'], $row['priority'], $row['active'],\",\"          $row['last_completed_on'], $row['next_due_date']\",\"        ]);\",\"        $id = (int)$pdo->lastInsertId();\",\"      }\",\"      header(\\\"Location: /maintenance/intervals_list.php?program_id=\\\".$program_id);\",\"      exit;\",\"    } catch (Throwable $e) {\",\"      $errors[] = 'Save failed: '.$e->getMessage();\",\"    }\",\"  }\",\"}\",\"\",\"// UI\",\"$UI = $ROOT.'/ui';\",\"$PAGE_TITLE = $editing ? 'Edit Interval' : 'Add Interval';\",\"require_once $UI.'/init.php';\",\"require_once $UI.'/layout_start.php';\",\"?>\",\"<div class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\",\"  <div>\",\"    <h1 class=\\\"h5 mb-0\\\"><?= htmlspecialchars($PAGE_TITLE) ?></h1>\",\"    <div class=\\\"small text-muted\\\">\",\"      Program #<?= (int)$program['id'] ?> \\u00b7 Machine:\",\"      <strong><?= htmlspecialchars(($program['machine_id'] ?? '') . ($program['machine_name'] ? ' \\u2014 '.$program['machine_name'] : '')) ?></strong>\",\"    </div>\",\"  </div>\",\"  <div class=\\\"d-flex gap-2\\\">\",\"    <a class=\\\"btn btn-light btn-sm\\\" href=\\\"/maintenance/intervals_list.php?program_id=<?= (int)$program_id ?>\\\">Back</a>\",\"  </div>\",\"</div>\",\"\",\"<?php if ($errors): ?>\",\"  <div class=\\\"alert alert-danger\\\"><ul class=\\\"mb-0\\\"><?php foreach ($errors as $e): ?><li><?= htmlspecialchars($e) ?></li><?php endforeach; ?></ul></div>\",\"<?php endif; ?>\",\"\",\"<form method=\\\"post\\\" class=\\\"row g-3\\\">\",\"  <?= csrf_hidden_input() ?>\",\"  <div class=\\\"col-md-6\\\">\",\"    <label class=\\\"form-label\\\">Interval Title</label>\",\"    <input name=\\\"title\\\" class=\\\"form-control\\\" required value=\\\"<?= htmlspecialchars((string)($row['title'] ?? '')) ?>\\\" placeholder=\\\"e.g., Weekly Inspection\\\">\",\"  </div>\",\"\",\"  <div class=\\\"col-md-6\\\">\",\"    <label class=\\\"form-label\\\">Maintenance Type</label>\",\"    <select name=\\\"maintenance_type_id\\\" class=\\\"form-select\\\" required>\",\"      <option value=\\\"\\\">\\u2014 choose \\u2014</option>\",\"      <?php foreach ($mtypes as $tid => $name): ?>\",\"        <option value=\\\"<?= (int)$tid ?>\\\" <?= ((int)($row['maintenance_type_id'] ?? 0) === (int)$tid ? 'selected' : '') ?>>\",\"          <?= htmlspecialchars($name) ?>\",\"        </option>\",\"      <?php endforeach; ?>\",\"    </select>\",\"  </div>\",\"\",\"  <div class=\\\"col-md-6\\\">\",\"    <label class=\\\"form-label\\\">Frequency</label>\",\"    <div class=\\\"input-group\\\">\",\"      <select name=\\\"frequency\\\" id=\\\"frequency\\\" class=\\\"form-select\\\">\",\"        <?php foreach (['daily','weekly','monthly','quarterly','semiannual','annual','custom_days'] as $f): ?>\",\"          <option value=\\\"<?=$f?>\\\" <?= (($row['frequency'] ?? '')===$f?'selected':'') ?>><?= ucwords(str_replace('_',' ',$f)) ?></option>\",\"        <?php endforeach; ?>\",\"      </select>\",\"      <input type=\\\"number\\\" min=\\\"1\\\" name=\\\"interval_count\\\" class=\\\"form-control\\\" value=\\\"<?= (int)($row['interval_count'] ?? 1) ?>\\\">\",\"      <span class=\\\"input-group-text\\\">count</span>\",\"    </div>\",\"    <div class=\\\"form-text\\\">For \\u201ccustom days\\u201d, also set Custom Days below.</div>\",\"  </div>\",\"\",\"  <div class=\\\"col-md-2\\\">\",\"    <label class=\\\"form-label\\\">Custom Days</label>\",\"    <input type=\\\"number\\\" min=\\\"1\\\" name=\\\"custom_days\\\" class=\\\"form-control\\\" value=\\\"<?= htmlspecialchars((string)($row['custom_days'] ?? '')) ?>\\\">\",\"  </div>\",\"  <div class=\\\"col-md-2\\\">\",\"    <label class=\\\"form-label\\\">Notify Before (days)</label>\",\"    <input type=\\\"number\\\" min=\\\"0\\\" name=\\\"notify_before_days\\\" class=\\\"form-control\\\" value=\\\"<?= htmlspecialchars((string)($row['notify_before_days'] ?? '')) ?>\\\">\",\"  </div>\",\"  <div class=\\\"col-md-2\\\">\",\"    <label class=\\\"form-label\\\">Grace Days</label>\",\"    <input type=\\\"number\\\" min=\\\"0\\\" name=\\\"grace_days\\\" class=\\\"form-control\\\" value=\\\"<?= htmlspecialchars((string)($row['grace_days'] ?? '')) ?>\\\">\",\"  </div>\",\"\",\"  <div class=\\\"col-md-3\\\">\",\"    <label class=\\\"form-label\\\">Priority</label>\",\"    <input type=\\\"number\\\" name=\\\"priority\\\" class=\\\"form-control\\\" value=\\\"<?= (int)($row['priority'] ?? 0) ?>\\\">\",\"  </div>\",\"  <div class=\\\"col-md-3\\\">\",\"    <label class=\\\"form-label d-block\\\">Requires Shutdown</label>\",\"    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" name=\\\"requires_shutdown\\\" <?= !empty($row['requires_shutdown'])?'checked':'' ?>>\",\"  </div>\",\"  <div class=\\\"col-md-3\\\">\",\"    <label class=\\\"form-label d-block\\\">Active</label>\",\"    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" name=\\\"active\\\" <?= !empty($row['active'])?'checked':'' ?>>\",\"  </div>\",\"\",\"  <div class=\\\"col-md-3\\\">\",\"    <label class=\\\"form-label\\\">Next Due Date</label>\",\"    <input type=\\\"date\\\" name=\\\"next_due_date\\\" class=\\\"form-control\\\" value=\\\"<?= htmlspecialchars((string)($row['next_due_date'] ?? '')) ?>\\\">\",\"  </div>\",\"  <div class=\\\"col-md-3\\\">\",\"    <label class=\\\"form-label\\\">Last Completed On</label>\",\"    <input type=\\\"date\\\" name=\\\"last_completed_on\\\" class=\\\"form-control\\\" value=\\\"<?= htmlspecialchars((string)($row['last_completed_on'] ?? '')) ?>\\\">\",\"  </div>\",\"\",\"  <div class=\\\"col-12 d-flex gap-2\\\">\",\"    <button class=\\\"btn btn-primary\\\">Save</button>\",\"    <?php if ($editing): ?>\",\"      <a class=\\\"btn btn-outline-danger\\\" href=\\\"?program_id=<?= (int)$program_id ?>&id=<?= (int)$id ?>&delete=1\\\" onclick=\\\"return confirm('Delete this interval?')\\\">Delete</a>\",\"    <?php endif; ?>\",\"  </div>\",\"</form>\",\"\",\"<script>\",\"(function(){\",\"  function toggleCustom(){\",\"    var f = document.getElementById('frequency').value;\",\"    var cd = document.querySelector('input[name=\\\"custom_days\\\"]');\",\"    cd.disabled = (f !== 'custom_days');\",\"  }\",\"  document.getElementById('frequency').addEventListener('change', toggleCustom);\",\"  toggleCustom();\",\"})();\",\"</script>\",\"\",\"<?php require_once $UI.'/layout_end.php'; ?>\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_list.php\": [\"<?php\",\"/** PATH: /public_html/maintenance/wo_list.php */\",\"declare(strict_types=1);\",\"\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"\",\"require_login();\",\"require_permission('maintenance.wo.view');\",\"\",\"$pdo = db();\",\"$pdo->exec(\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\");\",\"\",\"$machine_id = (int)($_GET['machine_id'] ?? 0);\",\"$status     = (string)($_GET['status'] ?? '');\",\"$q          = trim((string)($_GET['q'] ?? ''));\",\"\",\"// filters\",\"$machines = $pdo->query(\\\"SELECT id, CONCAT(machine_id,' - ',name) AS label FROM machines ORDER BY machine_id\\\")->fetchAll(PDO::FETCH_KEY_PAIR);\",\"\",\"$where = [];\",\"$params = [];\",\"if ($machine_id) { $where[] = \\\"wo.machine_id = ?\\\"; $params[] = $machine_id; }\",\"if ($status !== '') { $where[] = \\\"wo.status = CAST(? AS CHAR) COLLATE utf8mb4_general_ci\\\"; $params[] = $status; }\",\"if ($q !== '') {\",\"  $where[] = \\\"(wo.wo_code LIKE CONCAT('%', ?, '%') OR wo.title LIKE CONCAT('%', ?, '%') OR m.machine_id LIKE CONCAT('%', ?, '%'))\\\";\",\"  array_push($params, $q, $q, $q);\",\"}\",\"\",\"$sql = \\\"SELECT wo.*, m.machine_id, m.name AS machine_name\",\"        FROM maintenance_work_orders wo\",\"        JOIN machines m ON m.id = wo.machine_id\",\"        \\\" . ($where ? \\\"WHERE \\\".implode(\\\" AND \\\", $where) : \\\"\\\") . \\\"\",\"        ORDER BY wo.created_at DESC LIMIT 200\\\";\",\"$st = $pdo->prepare($sql); $st->execute($params); $rows = $st->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"// ui\",\"$PAGE_TITLE = 'Work Orders';\",\"$ACTIVE_MENU = 'machines.list';\",\"include __DIR__ . '/../ui/layout_start.php';\",\"?>\",\"<div class=\\\"d-flex align-items-center justify-content-between mb-3\\\">\",\"  <h1 class=\\\"h5 mb-0\\\">Work Orders</h1>\",\"  <div class=\\\"d-flex gap-2\\\">\",\"    <?php if ($machine_id): ?>\",\"      <a class=\\\"btn btn-outline-secondary btn-sm\\\" href=\\\"/machines/machines_list.php?id=<?=$machine_id?>\\\">Back to Machine</a>\",\"    <?php endif; ?>\",\"    <?php if (has_permission('maintenance.wo.manage')): ?>\",\"      <a class=\\\"btn btn-primary btn-sm\\\" href=\\\"/maintenance/wo_form.php?machine_id=<?=$machine_id?>\\\">+ Work Order</a>\",\"    <?php endif; ?>\",\"  </div>\",\"</div>\",\"\",\"<form class=\\\"row g-2 mb-3\\\">\",\"  <div class=\\\"col-md-4\\\">\",\"    <select name=\\\"machine_id\\\" class=\\\"form-select\\\">\",\"      <option value=\\\"0\\\">\\u2014 All machines \\u2014</option>\",\"      <?php foreach ($machines as $id=>$label): ?>\",\"        <option value=\\\"<?=$id?>\\\" <?= $machine_id===$id?'selected':'' ?>><?=htmlspecialchars($label)?></option>\",\"      <?php endforeach; ?>\",\"    </select>\",\"  </div>\",\"  <div class=\\\"col-md-3\\\">\",\"    <select name=\\\"status\\\" class=\\\"form-select\\\">\",\"      <?php foreach (['','open','in_progress','waiting_parts','completed','cancelled'] as $s): ?>\",\"        <option value=\\\"<?=$s?>\\\" <?= $status===$s?'selected':'' ?>><?= $s===''?'\\u2014 Any status \\u2014':ucwords(str_replace('_',' ',$s)) ?></option>\",\"      <?php endforeach; ?>\",\"    </select>\",\"  </div>\",\"  <div class=\\\"col-md-3\\\">\",\"    <input class=\\\"form-control\\\" name=\\\"q\\\" placeholder=\\\"WO code / title / machine\\u2026\\\" value=\\\"<?=htmlspecialchars($q)?>\\\">\",\"  </div>\",\"  <div class=\\\"col-md-2\\\">\",\"    <button class=\\\"btn btn-outline-secondary w-100\\\">Search</button>\",\"  </div>\",\"</form>\",\"\",\"<div class=\\\"table-responsive\\\">\",\"  <table class=\\\"table table-striped table-hover align-middle\\\">\",\"    <thead class=\\\"table-light\\\">\",\"      <tr>\",\"        <th>WO Code</th><th>Machine</th><th>Title</th><th>Type</th><th>Priority</th><th>Status</th><th>Due</th><th class=\\\"text-end\\\">Total \\u20b9</th><th style=\\\"width:120px;\\\"></th>\",\"      </tr>\",\"    </thead>\",\"    <tbody>\",\"    <?php foreach ($rows as $r): ?>\",\"      <tr>\",\"        <td><code><?=htmlspecialchars((string)$r['wo_code'])?></code></td>\",\"        <td><?=htmlspecialchars((string)$r['machine_id'].' \\u2014 '.$r['machine_name'])?></td>\",\"        <td><?=htmlspecialchars((string)$r['title'])?></td>\",\"        <td><?= (int)$r['maintenance_type_id'] ?: '\\u2014' ?></td>\",\"        <td><span class=\\\"badge bg-secondary\\\"><?=htmlspecialchars((string)$r['priority'])?></span></td>\",\"        <td><span class=\\\"badge bg-<?= $r['status']==='completed'?'success':($r['status']==='open'?'warning text-dark':'secondary') ?>\\\"><?=htmlspecialchars((string)$r['status'])?></span></td>\",\"        <td><?=htmlspecialchars((string)$r['due_date'] ?? '')?></td>\",\"        <td class=\\\"text-end\\\"><?= number_format((float)$r['total_cost'], 2) ?></td>\",\"        <td class=\\\"text-end\\\">\",\"          <a class=\\\"btn btn-sm btn-outline-primary\\\" href=\\\"/maintenance/wo_form.php?id=<?=$r['id']?>\\\">Open</a>\",\"        </td>\",\"      </tr>\",\"    <?php endforeach; if (!$rows): ?>\",\"      <tr><td colspan=\\\"9\\\" class=\\\"text-muted text-center py-4\\\">No work orders.</td></tr>\",\"    <?php endif; ?>\",\"    </tbody>\",\"  </table>\",\"</div>\",\"\",\"<?php include __DIR__ . '/../ui/layout_end.php';\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/programs_list.php\": [\"<?php\",\"/** PATH: /public_html/maintenance/programs_list.php */\",\"declare(strict_types=1);\",\"\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"require_once __DIR__ . '/../includes/machines_helpers.php';\",\"\",\"require_login();\",\"require_permission('maintenance.plan.view');\",\"\",\"$pdo = db();\",\"$pdo->exec(\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\");\",\"\",\"$machine_id = (int)($_GET['machine_id'] ?? 0);\",\"$q = trim((string)($_GET['q'] ?? ''));\",\"\",\"// machine (header)\",\"$machine = null;\",\"if ($machine_id) {\",\"  $st = $pdo->prepare(\\\"SELECT id, machine_id, name, make, model FROM machines WHERE id=?\\\");\",\"  $st->execute([$machine_id]);\",\"  $machine = $st->fetch(PDO::FETCH_ASSOC);\",\"}\",\"$holder = $machine ? machine_current_holder($pdo, (int)$machine['id']) : null;\",\"\",\"// list programs\",\"$where = []; $params = [];\",\"if ($machine_id) { $where[]=\\\"p.machine_id=?\\\"; $params[]=$machine_id; }\",\"if ($q!=='') { $where[]=\\\"(p.notes LIKE CONCAT('%', ?, '%') OR COALESCE(p.default_team,'') LIKE CONCAT('%', ?, '%'))\\\"; array_push($params,$q,$q); }\",\"$sql = \\\"SELECT p.*, (SELECT COUNT(*) FROM maintenance_intervals mi WHERE mi.program_id=p.id AND mi.active=1) as intervals_count\",\"        FROM maintenance_programs p \\\".($where?\\\"WHERE \\\".implode(\\\" AND \\\",$where):\\\"\\\").\\\" ORDER BY p.id DESC\\\";\",\"$rows = $pdo->prepare($sql); $rows->execute($params); $rows = $rows->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"$PAGE_TITLE = 'Maintenance Programs';\",\"$ACTIVE_MENU = 'machines.list';\",\"include __DIR__ . '/../ui/layout_start.php';\",\"?>\",\"<div class=\\\"d-flex align-items-center justify-content-between mb-3\\\">\",\"  <div>\",\"    <h1 class=\\\"h5 mb-0\\\">Maintenance Programs</h1>\",\"    <?php if ($machine): ?>\",\"      <div class=\\\"text-muted small\\\">Machine: <strong><?=htmlspecialchars((string)$machine['machine_id'])?></strong> \\u2014 <?=htmlspecialchars((string)$machine['name'])?> (<?=htmlspecialchars((string)$machine['make'].' '.$machine['model'])?>)</div>\",\"    <?php endif; ?>\",\"  </div>\",\"  <div class=\\\"d-flex align-items-center gap-2\\\">\",\"    <?php if ($holder): ?>\",\"      <span class=\\\"badge bg-warning text-dark\\\">Held by <?=htmlspecialchars($holder['contractor_code'].' \\u2014 '.$holder['contractor_name'])?></span>\",\"    <?php endif; ?>\",\"    <div class=\\\"btn-group btn-group-sm\\\">\",\"      <a class=\\\"btn btn-outline-dark\\\" href=\\\"/maintenance/wo_list.php?machine_id=<?=$machine_id?>\\\">WO List</a>\",\"      <a class=\\\"btn btn-outline-primary\\\" href=\\\"/maintenance/wo_form.php?machine_id=<?=$machine_id?>\\\">+ WO</a>\",\"      <a class=\\\"btn btn-outline-danger\\\" href=\\\"/maintenance/breakdown_quick_create.php?machine_id=<?=$machine_id?>&symptom=Breakdown%20reported&severity=high\\\">+ Breakdown</a>\",\"    </div>\",\"    <a class=\\\"btn btn-light btn-sm\\\" href=\\\"/machines/machines_list.php\\\">Back to Machines</a>\",\"    <a class=\\\"btn btn-primary btn-sm\\\" href=\\\"/maintenance/programs_form.php?machine_id=<?=$machine_id?>\\\">+ Program</a>\",\"  </div>\",\"</div>\",\"\",\"<form class=\\\"row g-2 mb-3\\\">\",\"  <input type=\\\"hidden\\\" name=\\\"machine_id\\\" value=\\\"<?=$machine_id?>\\\">\",\"  <div class=\\\"col-md-6\\\">\",\"    <input class=\\\"form-control\\\" name=\\\"q\\\" placeholder=\\\"Search team / notes\\u2026\\\" value=\\\"<?=htmlspecialchars($q)?>\\\">\",\"  </div>\",\"  <div class=\\\"col-md-2\\\">\",\"    <button class=\\\"btn btn-outline-secondary w-100\\\">Search</button>\",\"  </div>\",\"</form>\",\"\",\"<div class=\\\"table-responsive\\\">\",\"  <table class=\\\"table table-striped table-hover align-middle\\\">\",\"    <thead class=\\\"table-light\\\">\",\"      <tr>\",\"        <th>#</th><th>Intervals (active)</th><th>Anchor Date</th><th>Default Team</th><th>Notes</th><th style=\\\"width:220px;\\\"></th>\",\"      </tr>\",\"    </thead>\",\"    <tbody>\",\"    <?php foreach ($rows as $r): ?>\",\"      <tr>\",\"        <td><?= (int)$r['id'] ?></td>\",\"        <td><span class=\\\"badge bg-secondary\\\"><?= (int)$r['intervals_count'] ?></span></td>\",\"        <td><?= htmlspecialchars((string)$r['anchor_date'] ?? '') ?></td>\",\"        <td><?= htmlspecialchars((string)$r['default_team'] ?? '') ?></td>\",\"        <td><?= htmlspecialchars((string)$r['notes'] ?? '') ?></td>\",\"        <td class=\\\"text-end\\\">\",\"          <a class=\\\"btn btn-sm btn-outline-primary\\\" href=\\\"/maintenance/programs_form.php?id=<?=$r['id']?>\\\">Edit</a>\",\"          <a class=\\\"btn btn-sm btn-outline-success\\\" href=\\\"/maintenance/intervals_generate.php?program_id=<?=$r['id']?>\\\">Generate Due</a>\",\"          <a class=\\\"btn btn-sm btn-outline-dark\\\" href=\\\"/maintenance/wo_list.php?machine_id=<?=$machine_id?>\\\">Work Orders</a>\",\"        </td>\",\"      </tr>\",\"    <?php endforeach; if (!$rows): ?>\",\"      <tr><td colspan=\\\"6\\\" class=\\\"text-muted text-center py-4\\\">No programs yet.</td></tr>\",\"    <?php endif; ?>\",\"    </tbody>\",\"  </table>\",\"</div>\",\"\",\"<?php include __DIR__ . '/../ui/layout_end.php';\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/intervals_list.php\": [\"<?php\",\"declare(strict_types=1);\",\"/** PATH: /public_html/maintenance/intervals_list.php */\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"\",\"require_login();\",\"require_permission('maintenance.manage');\",\"\",\"$pdo = db();\",\"\",\"// Filters\",\"$programId = isset($_GET['program_id']) ? (int)$_GET['program_id'] : 0;\",\"$q = trim((string)($_GET['q'] ?? ''));\",\"\",\"// WHERE\",\"$w = [];\",\"$p = [];\",\"if ($programId > 0) { $w[] = 'mi.program_id=?'; $p[] = $programId; }\",\"if ($q !== '') {\",\"  $w[] = '('\",\"      .\\\"mi.title LIKE CONCAT('%', ?, '%')\\\"\",\"      .\\\" OR mt.name LIKE CONCAT('%', ?, '%')\\\"\",\"      .\\\" OR m.machine_id LIKE CONCAT('%', ?, '%')\\\"\",\"      .\\\" OR COALESCE(mp.notes,'') LIKE CONCAT('%', ?, '%')\\\"\",\"      .\\\" OR COALESCE(mp.default_team,'') LIKE CONCAT('%', ?, '%')\\\"\",\"      .')';\",\"  array_push($p, $q, $q, $q, $q, $q);\",\"}\",\"$whereSql = $w ? 'WHERE '.implode(' AND ', $w) : '';\",\"\",\"// Query (matches your schema)\",\"$sql = \\\"\",\"SELECT\",\"  mi.id, mi.program_id, mi.maintenance_type_id, mi.title,\",\"  mi.frequency, mi.interval_count, mi.custom_days,\",\"  mi.notify_before_days, mi.grace_days, mi.requires_shutdown,\",\"  mi.priority, mi.active, mi.last_completed_on, mi.next_due_date,\",\"  mt.name AS mtype_name,\",\"  m.machine_id, m.name AS machine_name,\",\"  mp.notes, mp.default_team\",\"FROM maintenance_intervals mi\",\"LEFT JOIN maintenance_types    mt ON mt.id = mi.maintenance_type_id\",\"LEFT JOIN maintenance_programs mp ON mp.id = mi.program_id\",\"LEFT JOIN machines             m  ON m.id  = mp.machine_id\",\"$whereSql\",\"ORDER BY m.machine_id, mi.priority DESC, mi.next_due_date IS NULL, mi.next_due_date ASC, mi.id DESC\",\"\\\";\",\"$st = $pdo->prepare($sql);\",\"$st->execute($p);\",\"$rows = $st->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"// Program dropdown (label from machine + notes/team)\",\"$progStmt = $pdo->query(\\\"\",\"  SELECT mp.id, m.machine_id, m.name AS machine_name, mp.notes, mp.default_team\",\"  FROM maintenance_programs mp\",\"  LEFT JOIN machines m ON m.id = mp.machine_id\",\"  ORDER BY m.machine_id, mp.id\",\"\\\");\",\"$programs = $progStmt->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"include __DIR__ . '/../ui/layout_start.php';\",\"?>\",\"<div class=\\\"d-flex align-items-center justify-content-between mb-3\\\">\",\"  <h1 class=\\\"h5 mb-0\\\">Maintenance Intervals</h1>\",\"  <div class=\\\"d-flex gap-2\\\">\",\"    <a href=\\\"intervals_form.php<?= $programId>0 ? ('?program_id='.$programId) : '' ?>\\\" class=\\\"btn btn-primary btn-sm\\\">Add Interval</a>\",\"    <a href=\\\"programs_list.php\\\" class=\\\"btn btn-outline-secondary btn-sm\\\">Programs</a>\",\"  </div>\",\"</div>\",\"\",\"<form class=\\\"row g-2 mb-3\\\" method=\\\"get\\\">\",\"  <div class=\\\"col-md-4\\\">\",\"    <label class=\\\"form-label\\\">Program</label>\",\"    <select name=\\\"program_id\\\" class=\\\"form-select\\\" onchange=\\\"this.form.submit()\\\">\",\"      <option value=\\\"0\\\">\\u2014 All Programs \\u2014</option>\",\"      <?php foreach ($programs as $pgr):\",\"        $bits  = array_filter([$pgr['machine_id'] ?? '', $pgr['machine_name'] ?? '']);\",\"        $suff  = trim(implode(' \\u2022 ', array_filter([$pgr['notes'] ?? '', $pgr['default_team'] ?? ''])));\",\"        $label = trim(implode(' \\u2014 ', array_filter([implode(' \\u2022 ', $bits), $suff])));\",\"        if ($label === '') $label = 'Program #'.$pgr['id'];\",\"      ?>\",\"        <option value=\\\"<?=$pgr['id']?>\\\" <?=$programId===(int)$pgr['id']?'selected':''?>><?=htmlspecialchars($label)?></option>\",\"      <?php endforeach; ?>\",\"    </select>\",\"  </div>\",\"  <div class=\\\"col-md-4\\\">\",\"    <label class=\\\"form-label\\\">Search</label>\",\"    <input name=\\\"q\\\" class=\\\"form-control\\\" value=\\\"<?=htmlspecialchars($q)?>\\\" placeholder=\\\"Title / Type / Machine / Notes / Team\\\">\",\"  </div>\",\"  <div class=\\\"col-md-2 d-grid align-items-end\\\">\",\"    <button class=\\\"btn btn-outline-secondary mt-4\\\">Filter</button>\",\"  </div>\",\"</form>\",\"\",\"<div class=\\\"table-responsive\\\">\",\"  <table class=\\\"table table-hover align-middle\\\">\",\"    <thead class=\\\"table-light\\\">\",\"      <tr>\",\"        <th style=\\\"width:160px;\\\">Machine</th>\",\"        <th>Program</th>\",\"        <th>Interval</th>\",\"        <th>Type</th>\",\"        <th>Notify</th>\",\"        <th>Grace</th>\",\"        <th>Shutdown</th>\",\"        <th>Priority</th>\",\"        <th>Last Done</th>\",\"        <th>Next Due</th>\",\"        <th class=\\\"text-end\\\" style=\\\"width:160px;\\\">Actions</th>\",\"      </tr>\",\"    </thead>\",\"    <tbody>\",\"      <?php foreach ($rows as $r):\",\"        $freq  = (string)$r['frequency'];\",\"        $count = (int)$r['interval_count'];\",\"        $intervalText = '';\",\"        switch ($freq) {\",\"          case 'daily': case 'weekly': case 'monthly': case 'quarterly': case 'semiannual': case 'annual':\",\"            $unit = ['daily'=>'day','weekly'=>'week','monthly'=>'month','quarterly'=>'quarter','semiannual'=>'half-year','annual'=>'year'][$freq];\",\"            $intervalText = 'Every '.($count>1?$count.' ':'').$unit.($count>1?'s':'');\",\"            break;\",\"          case 'custom_days':\",\"            $days = (int)$r['custom_days']; $intervalText = $days>0 ? ('Every '.$days.' days') : 'Custom (days)'; break;\",\"          default: $intervalText = ucfirst($freq);\",\"        }\",\"        $progBits = array_filter([$r['machine_id'] ?? '', $r['machine_name'] ?? '']);\",\"        $progSuff = trim(implode(' \\u2022 ', array_filter([$r['notes'] ?? '', $r['default_team'] ?? ''])));\",\"        $progLbl  = trim(implode(' \\u2014 ', array_filter([implode(' \\u2022 ', $progBits), $progSuff])));\",\"        if ($progLbl === '') $progLbl = 'Program #'.$r['program_id'];\",\"\",\"        $notify = (int)$r['notify_before_days'];\",\"        $grace  = (int)$r['grace_days'];\",\"        $sdBadge = !empty($r['requires_shutdown']) ? '<span class=\\\"badge text-bg-danger\\\">Yes</span>' : '<span class=\\\"badge text-bg-secondary\\\">No</span>';\",\"        $prio = htmlspecialchars((string)$r['priority']);\",\"        $actBadge = !empty($r['active']) ? '<span class=\\\"badge text-bg-success\\\">Active</span>' : '<span class=\\\"badge text-bg-secondary\\\">Inactive</span>';\",\"      ?>\",\"      <tr>\",\"        <td class=\\\"text-nowrap\\\">\",\"          <div class=\\\"fw-semibold\\\"><?=htmlspecialchars((string)$r['machine_id'])?></div>\",\"          <div class=\\\"small text-muted\\\"><?=htmlspecialchars((string)$r['machine_name'])?></div>\",\"        </td>\",\"        <td><?=htmlspecialchars($progLbl)?></td>\",\"        <td>\",\"          <div class=\\\"fw-semibold\\\"><?=htmlspecialchars((string)$r['title'])?></div>\",\"          <div class=\\\"small text-muted\\\"><?=$intervalText?> <?=$actBadge?></div>\",\"        </td>\",\"        <td><?=htmlspecialchars((string)($r['mtype_name'] ?: '-'))?></td>\",\"        <td><?=$notify ? $notify.' d' : '\\u2014'?></td>\",\"        <td><?=$grace ? $grace.' d' : '\\u2014'?></td>\",\"        <td><?=$sdBadge?></td>\",\"        <td><?= $prio ?></td>\",\"        <td><?=htmlspecialchars($r['last_completed_on'] ?? '\\u2014')?></td>\",\"        <td>\",\"          <?php if (!empty($r['next_due_date'])):\",\"            $due = new DateTime((string)$r['next_due_date']);\",\"            $today = new DateTime('today');\",\"            $badge = $due < $today ? 'text-bg-danger' : ($due == $today ? 'text-bg-warning' : 'text-bg-success'); ?>\",\"            <span class=\\\"badge <?=$badge?>\\\"><?=htmlspecialchars($r['next_due_date'])?></span>\",\"          <?php else: ?>\\u2014<?php endif; ?>\",\"        </td>\",\"        <td class=\\\"text-end\\\">\",\"          <a href=\\\"intervals_form.php?id=<?=$r['id']?>\\\" class=\\\"btn btn-sm btn-outline-secondary\\\">Edit</a>\",\"          <a href=\\\"intervals_generate.php?id=<?=$r['id']?>\\\" class=\\\"btn btn-sm btn-outline-primary\\\">Generate WO</a>\",\"        </td>\",\"      </tr>\",\"      <?php endforeach; ?>\",\"      <?php if (!$rows): ?>\",\"        <tr><td colspan=\\\"11\\\" class=\\\"text-center text-muted py-4\\\">No intervals found.</td></tr>\",\"      <?php endif; ?>\",\"    </tbody>\",\"  </table>\",\"</div>\",\"\",\"<?php include __DIR__ . '/../ui/layout_end.php';\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/intervals_generate.php\": [\"<?php\",\"/** PATH: /public_html/maintenance/intervals_generate.php\",\" * PURPOSE:\",\" *   - Generate WO(s) from maintenance intervals.\",\" *   - Works for a single interval (?id=123) or all due in a program (?program_id=45).\",\" *\",\" * PHP: 8.4\",\" */\",\"declare(strict_types=1);\",\"\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"\",\"require_login();\",\"require_permission('maintenance.wo.manage');\",\"\",\"$pdo = db();\",\"// Keep session consistent with rest of app.\",\"$pdo->exec(\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\");\",\"\",\"$id         = (int)($_GET['id'] ?? 0);          // maintenance_intervals.id\",\"$program_id = (int)($_GET['program_id'] ?? 0);  // maintenance_programs.id\",\"\",\"if ($id <= 0 && $program_id <= 0) {\",\"  http_response_code(400);\",\"  echo \\\"Usage: intervals_generate.php?id={interval_id} OR ?program_id={program_id}\\\";\",\"  exit;\",\"}\",\"\",\"/** Safe, concurrent WO number allocator (same approach as wo_form.php) */\",\"function allocate_wo_code(PDO $pdo): string {\",\"  $year = date('Y');\",\"  $lock = \\\"wo_code_$year\\\";\",\"  $pdo->query(\\\"SELECT GET_LOCK('$lock', 10)\\\");\",\"  try {\",\"    $st = $pdo->prepare(\\\"SELECT MAX(CAST(SUBSTRING(wo_code, 10) AS UNSIGNED)) FROM maintenance_work_orders WHERE wo_code LIKE ?\\\");\",\"    $st->execute([\\\"WO-$year-%\\\"]);\",\"    $next = ((int)$st->fetchColumn()) + 1;\",\"    return sprintf(\\\"WO-%s-%04d\\\", $year, $next);\",\"  } finally {\",\"    $pdo->query(\\\"SELECT RELEASE_LOCK('$lock')\\\");\",\"  }\",\"}\",\"\",\"/** Build one WO for a given interval row (joined with program for machine_id). Returns new WO id or null if skipped. */\",\"function create_wo_for_interval(PDO $pdo, array $iv): ?int {\",\"  // Skip if there is already an open/in-progress WO for this interval\",\"  $chk = $pdo->prepare(\\\"SELECT id FROM maintenance_work_orders WHERE interval_id=? AND status NOT IN ('closed','cancelled') ORDER BY id DESC LIMIT 1\\\");\",\"  $chk->execute([(int)$iv['id']]);\",\"  if ($chk->fetchColumn()) return null;\",\"\",\"  $wo_code = allocate_wo_code($pdo);\",\"\",\"  $title   = (string)($iv['title'] ?? 'Scheduled Maintenance');\",\"  $desc    = (string)($iv['description'] ?? null);\",\"  $due     = $iv['next_due_date'] ?? null; // may be null\",\"  $dueStr  = $due ? (string)$due : date('Y-m-d');\",\"\",\"  $ins = $pdo->prepare(\\\"\",\"    INSERT INTO maintenance_work_orders\",\"      (wo_code, machine_id, interval_id, title, description, maintenance_type_id, priority, status, due_date,\",\"       reported_by, reported_at, down_from, up_at, parts_cost, labour_cost_internal, labour_cost_vendor, misc_cost, total_cost,\",\"       created_by, created_at)\",\"    VALUES\",\"      (?,?,?,?,?,?,?,?,?,\",\"       ?, NOW(), ?, ?, 0, 0, 0, 0, 0,\",\"       ?, NOW())\",\"  \\\");\",\"\",\"  $ins->execute([\",\"    $wo_code,\",\"    (int)$iv['machine_id'],\",\"    (int)$iv['id'],\",\"    $title,\",\"    $desc ?: null,\",\"    (int)($iv['maintenance_type_id'] ?? 0) ?: null,\",\"    'medium',              // default\",\"    'open',                // new WO starts open\",\"    $dueStr,\",\"    current_user_id(),\",\"    null,                  // down_from\",\"    null,                  // up_at\",\"    current_user_id()\",\"  ]);\",\"\",\"  $wo_id = (int)$pdo->lastInsertId();\",\"\",\"  // Seed tasks: prefer checklist_json if present, else ensure at least one task line = title\",\"  $added = false;\",\"  if (!empty($iv['checklist_json'])) {\",\"    $chk = json_decode((string)$iv['checklist_json'], true);\",\"    if (is_array($chk) && $chk) {\",\"      $insT = $pdo->prepare(\\\"INSERT INTO maintenance_wo_tasks (wo_id, task, status) VALUES (?,?, 'todo')\\\");\",\"      foreach ($chk as $t) {\",\"        $task = (string)($t['task'] ?? '');\",\"        if ($task !== '') { $insT->execute([$wo_id, $task]); $added = true; }\",\"      }\",\"    }\",\"  }\",\"  if (!$added) {\",\"    $pdo->prepare(\\\"INSERT INTO maintenance_wo_tasks (wo_id, task, status) VALUES (?,?, 'todo')\\\")\",\"        ->execute([$wo_id, $title]);\",\"  }\",\"\",\"  return $wo_id;\",\"}\",\"\",\"// Single interval mode:\",\"if ($id > 0) {\",\"  $st = $pdo->prepare(\\\"SELECT mi.*, mp.machine_id\",\"                         FROM maintenance_intervals mi\",\"                         JOIN maintenance_programs mp ON mp.id = mi.program_id\",\"                        WHERE mi.id=?\\\");\",\"  $st->execute([$id]);\",\"  $iv = $st->fetch(PDO::FETCH_ASSOC);\",\"  if (!$iv) { http_response_code(404); echo \\\"Interval not found\\\"; exit; }\",\"\",\"  $pdo->beginTransaction();\",\"  try {\",\"    $wo_id = create_wo_for_interval($pdo, $iv);\",\"    $pdo->commit();\",\"    if ($wo_id) {\",\"      header(\\\"Location: /maintenance/wo_view.php?id=\\\" . $wo_id);\",\"    } else {\",\"      header(\\\"Location: /maintenance/intervals_list.php?program_id=\\\" . (int)$iv['program_id'] . \\\"&info=exists\\\");\",\"    }\",\"    exit;\",\"  } catch (Throwable $e) {\",\"    if ($pdo->inTransaction()) $pdo->rollBack();\",\"    http_response_code(500);\",\"    echo \\\"Generate failed: \\\" . $e->getMessage();\",\"    exit;\",\"  }\",\"}\",\"\",\"// Program batch mode: create WOs for all intervals due today or earlier\",\"$st = $pdo->prepare(\\\"SELECT mi.*, mp.machine_id\",\"                       FROM maintenance_intervals mi\",\"                       JOIN maintenance_programs mp ON mp.id = mi.program_id\",\"                      WHERE mi.program_id=? AND mi.next_due_date IS NOT NULL AND mi.next_due_date <= CURDATE()\",\"                      ORDER BY mi.next_due_date, mi.id\\\");\",\"$st->execute([$program_id]);\",\"$rows = $st->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"$made = 0;\",\"$pdo->beginTransaction();\",\"try {\",\"  foreach ($rows as $iv) {\",\"    $wo_id = create_wo_for_interval($pdo, $iv);\",\"    if ($wo_id) $made++;\",\"  }\",\"  $pdo->commit();\",\"  header(\\\"Location: /maintenance/intervals_list.php?program_id=\\\".$program_id.\\\"&generated=\\\".$made);\",\"  exit;\",\"} catch (Throwable $e) {\",\"  if ($pdo->inTransaction()) $pdo->rollBack();\",\"  $msg = urlencode('Generate failed: '.$e->getMessage());\",\"  header(\\\"Location: /maintenance/intervals_list.php?program_id=\\\".$program_id.\\\"&error=\\\".$msg);\",\"  exit;\",\"}\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/schedule.php\": [\"<?php\",\"/** PATH: /public_html/maintenance/schedule.php\",\" * PURPOSE: Show maintenance person a \\\"today\\\" view:\",\" *  - Due plan items (intervals with next_due_date <= today)\",\" *  - My open Work Orders due today\",\" * ACTIONS:\",\" *  - Generate WO (links to intervals_generate.php)\",\" *  - Quick Complete (POST to interval_quick_complete.php)\",\" *\",\" * PHP 8.4, Bootstrap 5 UI\",\" */\",\"declare(strict_types=1);\",\"\",\"$ROOT = dirname(__DIR__);\",\"require_once $ROOT . '/includes/auth.php';\",\"require_once $ROOT . '/includes/db.php';\",\"require_once $ROOT . '/includes/rbac.php';\",\"require_once $ROOT . '/includes/csrf.php';\",\"\",\"require_login();\",\"\",\"// Create DB connection BEFORE any queries\",\"$pdo = db();\",\"$pdo->exec(\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\");\",\"\",\"// KPI badges (non-blocking)\",\"$counts = [\",\"  'overdue_intervals'   => 0,\",\"  'due_today_intervals' => 0,\",\"  'due_week_intervals'  => 0,\",\"  'wo_due_today'        => 0,\",\"  'wo_due_week'         => 0,\",\"];\",\"\",\"try {\",\"  // Overdue / Due Intervals\",\"  $st = $pdo->prepare(\\\"\",\"    SELECT\",\"      SUM(CASE WHEN mi.next_due_date IS NOT NULL AND mi.next_due_date < CURDATE() THEN 1 ELSE 0 END) AS overdue_intervals,\",\"      SUM(CASE WHEN mi.next_due_date = CURDATE() THEN 1 ELSE 0 END) AS due_today_intervals,\",\"      SUM(CASE WHEN mi.next_due_date > CURDATE() AND mi.next_due_date <= DATE_ADD(CURDATE(), INTERVAL 7 DAY) THEN 1 ELSE 0 END) AS due_week_intervals\",\"    FROM maintenance_intervals mi\",\"    JOIN maintenance_programs mp ON mp.id = mi.program_id\",\"  \\\");\",\"  $st->execute();\",\"  $counts = array_merge($counts, $st->fetch(PDO::FETCH_ASSOC) ?: []);\",\"\",\"  // Work Orders due\",\"  $st2 = $pdo->prepare(\\\"\",\"    SELECT\",\"      SUM(CASE WHEN due_date = CURDATE() AND status IN ('open','in_progress','waiting_parts') THEN 1 ELSE 0 END) AS wo_due_today,\",\"      SUM(CASE WHEN due_date > CURDATE() AND due_date <= DATE_ADD(CURDATE(), INTERVAL 7 DAY)\",\"               AND status IN ('open','in_progress','waiting_parts') THEN 1 ELSE 0 END) AS wo_due_week\",\"    FROM maintenance_work_orders\",\"  \\\");\",\"  $st2->execute();\",\"  $counts = array_merge($counts, $st2->fetch(PDO::FETCH_ASSOC) ?: []);\",\"} catch (Throwable $e) {\",\"  // kpi non-blocking\",\"}\",\"\",\"// Permissions: view schedule; manage allows quick-complete\",\"$canView   = has_permission('maintenance.plan.view') || has_permission('maintenance.wo.view') || is_admin();\",\"$canManage = has_permission('maintenance.plan.manage') || has_permission('maintenance.wo.manage') || is_admin();\",\"if (!$canView) { http_response_code(403); exit('Access denied'); }\",\"\",\"// Filters\",\"$team  = trim((string)($_GET['team'] ?? ''));        // optional program.default_team\",\"$q     = trim((string)($_GET['q'] ?? ''));           // search by machine code/name or interval title\",\"$mine  = (int)($_GET['mine'] ?? 0);                  // reserved for future responsible_user_id\",\"\",\"// Today\",\"$today = (new DateTimeImmutable('today'))->format('Y-m-d');\",\"\",\"// --- Query: Due intervals (next_due_date <= today), active only ---\",\"$where  = [\\\"mi.active = 1\\\", \\\"(mi.next_due_date IS NOT NULL AND mi.next_due_date <= ?)\\\"];\",\"$params = [$today];\",\"\",\"if ($team !== '') {\",\"  $where[]  = \\\"mp.default_team = ?\\\";\",\"  $params[] = $team;\",\"}\",\"if ($q !== '') {\",\"  $like = '%'.$q.'%';\",\"  $where[] = \\\"(m.machine_id COLLATE utf8mb4_general_ci LIKE ? OR m.name COLLATE utf8mb4_general_ci LIKE ? OR mi.title COLLATE utf8mb4_general_ci LIKE ?)\\\";\",\"  array_push($params, $like, $like, $like);\",\"}\",\"\",\"$sql_due = \\\"\",\"SELECT mi.id AS interval_id, mi.title, mi.frequency, mi.interval_count, mi.custom_days,\",\"       mi.next_due_date, mi.requires_shutdown, mi.priority,\",\"       mi.maintenance_type_id, mt.name AS maintenance_type_name,\",\"       mp.id AS program_id, mp.default_team,\",\"       m.id AS machine_id, m.machine_id AS machine_code, m.name AS machine_name\",\"  FROM maintenance_intervals mi\",\"  JOIN maintenance_programs mp ON mp.id = mi.program_id\",\"  JOIN machines m ON m.id = mp.machine_id\",\"  LEFT JOIN maintenance_types mt ON mt.id = mi.maintenance_type_id\",\" WHERE \\\" . implode(' AND ', $where) . \\\"\",\" ORDER BY mi.next_due_date ASC, mi.priority DESC, mi.id ASC\",\" LIMIT 200\\\";\",\"$st = $pdo->prepare($sql_due);\",\"$st->execute($params);\",\"$due_rows = $st->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"// --- Query: Open WOs due today (or overdue) ---\",\"$sql_wo = \\\"\",\"SELECT wo.id, wo.wo_code, wo.title, wo.status, wo.due_date,\",\"       m.machine_id AS machine_code, m.name AS machine_name\",\"  FROM maintenance_work_orders wo\",\"  JOIN machines m ON m.id = wo.machine_id\",\" WHERE wo.status IN ('open','in_progress') AND wo.due_date IS NOT NULL AND wo.due_date <= ?\",\" ORDER BY wo.due_date ASC, wo.id DESC\",\" LIMIT 200\\\";\",\"$st2 = $pdo->prepare($sql_wo);\",\"$st2->execute([$today]);\",\"$wo_rows = $st2->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"// UI shell\",\"$UI          = $ROOT . '/ui';\",\"$PAGE_TITLE  = 'Maintenance \\u2014 Daily Schedule';\",\"$ACTIVE_MENU = 'maintenance.schedule';\",\"require_once $UI . '/init.php';\",\"require_once $UI . '/layout_start.php';\",\"?>\",\"<div class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\",\"  <h1 class=\\\"h4 mb-0\\\">Daily Maintenance Schedule</h1>\",\"  <div data-kpi-badges class=\\\"d-flex gap-2\\\">\",\"    <span class=\\\"badge bg-danger\\\">Overdue: <?= (int)($counts['overdue_intervals'] ?? 0) ?></span>\",\"    <span class=\\\"badge bg-warning text-dark\\\">Due Today: <?= (int)($counts['due_today_intervals'] ?? 0) ?></span>\",\"    <span class=\\\"badge bg-info text-dark\\\">Due Week: <?= (int)($counts['due_week_intervals'] ?? 0) ?></span>\",\"    <span class=\\\"badge bg-primary\\\">WO Today: <?= (int)($counts['wo_due_today'] ?? 0) ?></span>\",\"    <span class=\\\"badge bg-secondary\\\">WO Week: <?= (int)($counts['wo_due_week'] ?? 0) ?></span>\",\"  </div>\",\"</div>\",\"\",\"<form method=\\\"get\\\" class=\\\"row g-2 mb-3\\\">\",\"  <div class=\\\"col-md-3\\\">\",\"    <input name=\\\"q\\\" class=\\\"form-control\\\" placeholder=\\\"Search machine/interval\\\" value=\\\"<?= htmlspecialchars($q) ?>\\\">\",\"  </div>\",\"  <div class=\\\"col-md-3\\\">\",\"    <input name=\\\"team\\\" class=\\\"form-control\\\" placeholder=\\\"Team (e.g., Mechanical)\\\" value=\\\"<?= htmlspecialchars($team) ?>\\\">\",\"  </div>\",\"  <div class=\\\"col-md-auto\\\">\",\"    <button class=\\\"btn btn-outline-secondary\\\">Filter</button>\",\"    <a class=\\\"btn btn-outline-secondary\\\" href=\\\"/maintenance/schedule.php\\\">Reset</a>\",\"  </div>\",\"</form>\",\"\",\"<ul class=\\\"nav nav-tabs mb-3\\\" role=\\\"tablist\\\">\",\"  <li class=\\\"nav-item\\\" role=\\\"presentation\\\">\",\"    <button class=\\\"nav-link active\\\" data-bs-toggle=\\\"tab\\\" data-bs-target=\\\"#tab-due\\\" type=\\\"button\\\" role=\\\"tab\\\">Plan Due (<?= count($due_rows) ?>)</button>\",\"  </li>\",\"  <li class=\\\"nav-item\\\" role=\\\"presentation\\\">\",\"    <button class=\\\"nav-link\\\" data-bs-toggle=\\\"tab\\\" data-bs-target=\\\"#tab-wo\\\" type=\\\"button\\\" role=\\\"tab\\\">My Open WOs (<?= count($wo_rows) ?>)</button>\",\"  </li>\",\"</ul>\",\"\",\"<div class=\\\"tab-content\\\">\",\"  <div class=\\\"tab-pane fade show active\\\" id=\\\"tab-due\\\" role=\\\"tabpanel\\\">\",\"    <?php if (!$due_rows): ?>\",\"      <div class=\\\"alert alert-success\\\">No intervals due today\\u2014great job!</div>\",\"    <?php else: ?>\",\"      <div class=\\\"row row-cols-1 row-cols-lg-2 g-3\\\">\",\"        <?php foreach ($due_rows as $r): ?>\",\"          <div class=\\\"col\\\">\",\"            <div class=\\\"card shadow-sm\\\">\",\"              <div class=\\\"card-body\\\">\",\"                <div class=\\\"d-flex justify-content-between align-items-start\\\">\",\"                  <div>\",\"                    <div class=\\\"small text-muted\\\"><?= htmlspecialchars((string)($r['maintenance_type_name'] ?? '')) ?></div>\",\"                    <h5 class=\\\"card-title mb-1\\\"><?= htmlspecialchars((string)($r['title'] ?: 'Scheduled Maintenance')) ?></h5>\",\"                    <div class=\\\"small\\\">\",\"                      <strong><?= htmlspecialchars((string)$r['machine_code']) ?></strong> \\u2014 <?= htmlspecialchars((string)$r['machine_name']) ?>\",\"                    </div>\",\"                  </div>\",\"                  <div class=\\\"text-end\\\">\",\"                    <?php\",\"                      $pri = (string)($r['priority'] ?? 'medium');\",\"                      $priClass = ($pri === 'high' ? 'danger' : ($pri === 'medium' ? 'warning text-dark' : 'secondary'));\",\"                    ?>\",\"                    <span class=\\\"badge bg-<?= $priClass ?>\\\"><?= htmlspecialchars($pri) ?></span>\",\"                    <div class=\\\"small text-muted mt-1\\\">\",\"                      Due: <strong><?= htmlspecialchars((string)$r['next_due_date']) ?></strong>\",\"                    </div>\",\"                  </div>\",\"                </div>\",\"\",\"                <div class=\\\"mt-3 d-flex gap-2\\\">\",\"                  <a class=\\\"btn btn-sm btn-primary\\\" href=\\\"/maintenance/intervals_generate.php?id=<?= (int)$r['interval_id'] ?>\\\">\",\"                    <i class=\\\"bi bi-gear-wide-connected me-1\\\"></i> Generate WO\",\"                  </a>\",\"\",\"                  <?php if ($canManage): ?>\",\"                    <form method=\\\"post\\\" action=\\\"/maintenance/interval_quick_complete.php\\\" class=\\\"d-inline\\\">\",\"                      <?= csrf_hidden_input() ?>\",\"                      <input type=\\\"hidden\\\" name=\\\"id\\\" value=\\\"<?= (int)$r['interval_id'] ?>\\\">\",\"                      <input type=\\\"hidden\\\" name=\\\"from\\\" value=\\\"schedule\\\">\",\"                      <button class=\\\"btn btn-sm btn-success\\\" onclick=\\\"return confirm('Mark this interval as completed for today and roll next due date?');\\\">\",\"                        <i class=\\\"bi bi-check2-circle me-1\\\"></i> Quick Complete\",\"                      </button>\",\"                    </form>\",\"                  <?php endif; ?>\",\"\",\"                  <a class=\\\"btn btn-sm btn-outline-secondary\\\" href=\\\"/maintenance/intervals_list.php?program_id=<?= (int)$r['program_id'] ?>\\\">Program</a>\",\"                </div>\",\"\",\"                <div class=\\\"mt-2 small text-muted\\\">\",\"                  Freq:\",\"                  <?php\",\"                  $f  = (string)$r['frequency'];\",\"                  $c  = (int)$r['interval_count'];\",\"                  $cd = (int)($r['custom_days'] ?? 0);\",\"                  echo htmlspecialchars($f . ($c ? \\\"\\u00d7$c\\\" : '') . ($f === 'custom' && $cd ? \\\" ($cd days)\\\" : ''));\",\"                  ?>\",\"                  <?php if ((int)$r['requires_shutdown'] === 1): ?>\",\"                    &nbsp;\\u2022&nbsp;<span class=\\\"text-danger\\\">Requires shutdown</span>\",\"                  <?php endif; ?>\",\"                  <?php if (!empty($r['default_team'])): ?>\",\"                    &nbsp;\\u2022&nbsp;Team: <?= htmlspecialchars((string)$r['default_team']) ?>\",\"                  <?php endif; ?>\",\"                </div>\",\"              </div>\",\"            </div>\",\"          </div>\",\"        <?php endforeach; ?>\",\"      </div>\",\"    <?php endif; ?>\",\"  </div>\",\"\",\"  <div class=\\\"tab-pane fade\\\" id=\\\"tab-wo\\\" role=\\\"tabpanel\\\">\",\"    <?php if (!$wo_rows): ?>\",\"      <div class=\\\"alert alert-info\\\">No open work orders due today.</div>\",\"    <?php else: ?>\",\"      <div class=\\\"table-responsive\\\">\",\"        <table class=\\\"table table-sm align-middle\\\">\",\"          <thead class=\\\"table-light\\\">\",\"            <tr>\",\"              <th>WO</th>\",\"              <th>Title</th>\",\"              <th>Machine</th>\",\"              <th>Due</th>\",\"              <th>Status</th>\",\"              <th></th>\",\"            </tr>\",\"          </thead>\",\"          <tbody>\",\"          <?php foreach ($wo_rows as $w): ?>\",\"            <tr>\",\"              <td><code><?= htmlspecialchars((string)$w['wo_code']) ?></code></td>\",\"              <td><?= htmlspecialchars((string)$w['title']) ?></td>\",\"              <td><strong><?= htmlspecialchars((string)$w['machine_code']) ?></strong> \\u2014 <?= htmlspecialchars((string)$w['machine_name']) ?></td>\",\"              <td><?= htmlspecialchars((string)$w['due_date']) ?></td>\",\"              <td><span class=\\\"badge bg-secondary\\\"><?= htmlspecialchars((string)$w['status']) ?></span></td>\",\"              <td class=\\\"text-end\\\">\",\"                <a class=\\\"btn btn-sm btn-outline-primary\\\" href=\\\"/maintenance/wo_view.php?id=<?= (int)$w['id'] ?>\\\">Open</a>\",\"              </td>\",\"            </tr>\",\"          <?php endforeach; ?>\",\"          </tbody>\",\"        </table>\",\"      </div>\",\"    <?php endif; ?>\",\"  </div>\",\"</div>\",\"\",\"<?php\",\"require_once $UI . '/layout_end.php';\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/breakdown_view.php\": [\"<?php\",\"declare(strict_types=1);\",\"/** PATH: /public_html/maintenance/breakdown_view.php */\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"\",\"require_login();\",\"require_permission('maintenance.wo.view'); // or 'maintenance.breakdown.view'\",\"\",\"$pdo = db();\",\"$pdo->exec(\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\");\",\"\",\"$id = (int)($_GET['id'] ?? 0);\",\"$ok = isset($_GET['ok']);\",\"\",\"$st = $pdo->prepare(\\\"SELECT b.*, m.machine_id AS machine_code, m.name AS machine_name\",\"                       FROM breakdown_tickets b\",\"                       JOIN machines m ON m.id=b.machine_id\",\"                      WHERE b.id=?\\\");\",\"$st->execute([$id]);\",\"$B = $st->fetch(PDO::FETCH_ASSOC);\",\"if (!$B) { http_response_code(404); exit('Not found'); }\",\"\",\"$PAGE_TITLE = \\\"Breakdown #\\\".$id;\",\"$ACTIVE_MENU = 'machines.list';\",\"include __DIR__ . '/../ui/layout_start.php';\",\"?>\",\"<div class=\\\"d-flex align-items-center justify-content-between mb-3\\\">\",\"  <h1 class=\\\"h5 mb-0\\\"><?=htmlspecialchars($PAGE_TITLE)?></h1>\",\"  <div class=\\\"d-flex gap-2\\\">\",\"    <a class=\\\"btn btn-light btn-sm\\\" href=\\\"/machines/machines_list.php\\\">Machines</a>\",\"    <a class=\\\"btn btn-outline-primary btn-sm\\\" href=\\\"/maintenance/wo_form.php?machine_id=<?=$B['machine_id']?>&title=Breakdown%20WO%20for%20<?=urlencode($B['machine_code'])?>\\\">Create WO</a>\",\"  </div>\",\"</div>\",\"\",\"<?php if ($ok): ?><div class=\\\"alert alert-success\\\">Breakdown recorded.</div><?php endif; ?>\",\"\",\"<div class=\\\"card shadow-sm\\\">\",\"  <div class=\\\"card-body\\\">\",\"    <dl class=\\\"row mb-0\\\">\",\"      <dt class=\\\"col-4\\\">Machine</dt><dd class=\\\"col-8\\\"><?=htmlspecialchars($B['machine_code'].' \\u2014 '.$B['machine_name'])?></dd>\",\"      <dt class=\\\"col-4\\\">Reported At</dt><dd class=\\\"col-8\\\"><?=htmlspecialchars((string)$B['reported_at'])?></dd>\",\"      <dt class=\\\"col-4\\\">Symptom</dt><dd class=\\\"col-8\\\"><?=htmlspecialchars((string)$B['symptom'])?></dd>\",\"      <dt class=\\\"col-4\\\">Severity</dt><dd class=\\\"col-8\\\"><span class=\\\"badge bg-danger\\\"><?=htmlspecialchars((string)$B['severity'])?></span></dd>\",\"      <dt class=\\\"col-4\\\">Status</dt><dd class=\\\"col-8\\\"><span class=\\\"badge bg-secondary\\\"><?=htmlspecialchars((string)$B['status'])?></span></dd>\",\"    </dl>\",\"  </div>\",\"</div>\",\"<?php include __DIR__ . '/../ui/layout_end.php';\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/interval_quick_complete.php\": [\"<?php\",\"/** PATH: /public_html/maintenance/interval_quick_complete.php\",\" * PURPOSE: One-click completion of a maintenance interval (no WO).\",\" *  - Sets last_completed_on = today\",\" *  - Advances next_due_date using frequency + interval_count/custom_days\",\" *  - Optionally writes a maintenance log (best-effort)\",\" *\",\" * SECURITY: requires maintenance.plan.manage\",\" */\",\"declare(strict_types=1);\",\"\",\"$ROOT = dirname(__DIR__);\",\"require_once $ROOT . '/includes/auth.php';\",\"require_once $ROOT . '/includes/db.php';\",\"require_once $ROOT . '/includes/rbac.php';\",\"\",\"require_login();\",\"require_permission('maintenance.plan.manage');\",\"\",\"$pdo = db();\",\"$pdo->exec(\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\");\",\"\",\"$id   = (int)($_POST['id'] ?? 0);\",\"$from = (string)($_POST['from'] ?? '');\",\"if ($id <= 0) { http_response_code(400); exit('Interval id required'); }\",\"\",\"$today = new DateTimeImmutable('today');\",\"\",\"function compute_next_due(string $freq, int $count, int $customDays, DateTimeImmutable $base): string {\",\"  $count = max(1, $count);\",\"  return match ($freq) {\",\"    'daily'       => $base->modify(\\\"+{$count} day\\\")->format('Y-m-d'),\",\"    'weekly'      => $base->modify(\\\"+{$count} week\\\")->format('Y-m-d'),\",\"    'monthly'     => $base->modify(\\\"+{$count} month\\\")->format('Y-m-d'),\",\"    'quarterly'   => $base->modify(\\\"+\\\".(3 * $count).\\\" month\\\")->format('Y-m-d'),\",\"    'semiannual'  => $base->modify(\\\"+\\\".(6 * $count).\\\" month\\\")->format('Y-m-d'),\",\"    'annual'      => $base->modify(\\\"+{$count} year\\\")->format('Y-m-d'),\",\"    'custom'      => $base->modify(\\\"+\\\".max(1, $customDays).\\\" day\\\")->format('Y-m-d'),\",\"    default       => $base->modify(\\\"+{$count} month\\\")->format('Y-m-d'),\",\"  };\",\"}\",\"\",\"try {\",\"  // Load interval + program/machine\",\"  $st = $pdo->prepare(\\\"\",\"    SELECT mi.*, mp.machine_id\",\"      FROM maintenance_intervals mi\",\"      JOIN maintenance_programs mp ON mp.id = mi.program_id\",\"     WHERE mi.id = ?\\\");\",\"  $st->execute([$id]);\",\"  $iv = $st->fetch(PDO::FETCH_ASSOC);\",\"  if (!$iv) { http_response_code(404); exit('Interval not found'); }\",\"\",\"  $freq  = (string)$iv['frequency'];\",\"  $cnt   = (int)($iv['interval_count'] ?? 1);\",\"  $cdays = (int)($iv['custom_days'] ?? 0);\",\"\",\"  $next = compute_next_due($freq, $cnt, $cdays, $today);\",\"\",\"  $pdo->beginTransaction();\",\"\",\"  // Update interval dates\",\"  $upd = $pdo->prepare(\\\"UPDATE maintenance_intervals\",\"                           SET last_completed_on = ?, next_due_date = ?, updated_at = NOW()\",\"                         WHERE id = ?\\\");\",\"  $upd->execute([$today->format('Y-m-d'), $next, $id]);\",\"\",\"  // Best-effort maintenance log (schema variations tolerated)\",\"  try {\",\"    // Try the common schema first\",\"    $insLog = $pdo->prepare(\\\"\",\"      INSERT INTO maintenance_logs (machine_id, wo_id, performed_on, meter_value, remarks, created_by, created_at) VALUES (?, NULL, NOW(), NULL, ?, ?, NOW()))\",\"    \\\");\",\"    $note = 'Quick-completed: ' . ((string)$iv['title'] ?: 'Scheduled Maintenance');\",\"    $insLog->execute([(int)$iv['machine_id'], $today->format('Y-m-d'), $note, (int)current_user_id()]);\",\"  } catch (Throwable $e) {\",\"    // If table or columns differ, ignore silently to avoid blocking completion.\",\"  }\",\"\",\"  $pdo->commit();\",\"\",\"  // Redirect back\",\"  if ($from === 'schedule') {\",\"    header('Location: /maintenance/schedule.php?ok=1');\",\"  } else {\",\"    header('Location: /maintenance/intervals_list.php?program_id='.(int)$iv['program_id'].'&ok=1');\",\"  }\",\"  exit;\",\"\",\"} catch (Throwable $e) {\",\"  if ($pdo->inTransaction()) $pdo->rollBack();\",\"  http_response_code(500);\",\"  echo \\\"Quick-complete failed: \\\" . $e->getMessage();\",\"  exit;\",\"}\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/reports/contractor_costs.php\": [\"<?php\",\"/** PATH: /public_html/maintenance/reports/contractor_costs.php\",\" * PURPOSE: Summarize maintenance cost per contractor during their machine allocation windows.\",\" * RULE: Attribute each WO to the contractor who had the machine allocated on the WO's\",\" *       as-of date: COALESCE(wo.due_date, DATE(wo.created_at)).\",\" * NOTE: Uses generated column machine_allocations.effective_end_date.\",\" * PERMS: maintenance.report.view OR admin\",\" * PHP: 8.4\",\" */\",\"declare(strict_types=1);\",\"\",\"$ROOT = dirname(__DIR__, 2);\",\"require_once $ROOT . '/includes/auth.php';\",\"require_once $ROOT . '/includes/db.php';\",\"require_once $ROOT . '/includes/rbac.php';\",\"\",\"require_login();\",\"if (!(has_permission('maintenance.report.view') || is_admin())) {\",\"  http_response_code(403); exit('Access denied');\",\"}\",\"\",\"$pdo = db();\",\"$pdo->exec(\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\");\",\"\",\"$from = trim((string)($_GET['from'] ?? ''));\",\"$to   = trim((string)($_GET['to']   ?? ''));\",\"if ($from === '' || $to === '') {\",\"  $from = (new DateTimeImmutable('first day of this month'))->format('Y-m-d');\",\"  $to   = (new DateTimeImmutable('last day of this month'))->format('Y-m-d');\",\"}\",\"\",\"// Optional filters\",\"$machineId    = (int)($_GET['machine_id'] ?? 0);\",\"$contractorId = (int)($_GET['contractor_id'] ?? 0);\",\"$statusFilter = trim((string)($_GET['wo_status'] ?? 'completed')); // completed | open | all\",\"\",\"$asOf = \\\"COALESCE(wo.due_date, DATE(wo.created_at))\\\";\",\"\",\"// Build WHERE\",\"$params = [$from, $to];\",\"$where  = [\\\"$asOf BETWEEN ? AND ?\\\"];\",\"\",\"// WO status filter\",\"if ($statusFilter === 'completed') {\",\"  $where[] = \\\"wo.status = 'completed'\\\";\",\"} elseif ($statusFilter === 'open') {\",\"  $where[] = \\\"wo.status IN ('open','in_progress')\\\";\",\"} // else 'all' = no status filter\",\"\",\"if ($machineId > 0)    { $where[] = \\\"wo.machine_id = ?\\\"; $params[] = $machineId; }\",\"if ($contractorId > 0) { $where[] = \\\"ma.contractor_id = ?\\\"; $params[] = $contractorId; }\",\"\",\"// MAIN rollup\",\"$sql = \\\"\",\"SELECT\",\"  p.id   AS contractor_id,\",\"  p.name AS contractor_name,\",\"  COUNT(DISTINCT wo.id)                        AS wo_count,\",\"  COALESCE(SUM(wo.parts_cost),0)               AS parts_cost,\",\"  COALESCE(SUM(wo.labour_cost_internal),0)     AS labour_internal,\",\"  COALESCE(SUM(wo.labour_cost_vendor),0)       AS labour_vendor,\",\"  COALESCE(SUM(wo.misc_cost),0)                AS misc_cost,\",\"  COALESCE(SUM(wo.total_cost),0)               AS total_cost\",\"FROM maintenance_work_orders wo\",\"JOIN machines m ON m.id = wo.machine_id\",\"JOIN machine_allocations ma\",\"  ON ma.machine_id = wo.machine_id\",\" AND $asOf BETWEEN ma.alloc_date AND COALESCE(ma.effective_end_date, '9999-12-31')\",\"JOIN parties p ON p.id = ma.contractor_id\",\"WHERE \\\" . implode(' AND ', $where) . \\\"\",\"GROUP BY p.id, p.name\",\"ORDER BY total_cost DESC, wo_count DESC\",\"\\\";\",\"\",\"$st = $pdo->prepare($sql);\",\"$st->execute($params);\",\"$rows = $st->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"// DETAIL query (per contractor)\",\"$sqlDetail = \\\"\",\"SELECT\",\"  wo.id, wo.wo_code, wo.title, wo.status, wo.due_date,\",\"  wo.parts_cost, wo.labour_cost_internal, wo.labour_cost_vendor, wo.misc_cost, wo.total_cost,\",\"  m.machine_id AS machine_code, m.name AS machine_name\",\"FROM maintenance_work_orders wo\",\"JOIN machines m ON m.id = wo.machine_id\",\"JOIN machine_allocations ma\",\"  ON ma.machine_id = wo.machine_id\",\" AND $asOf BETWEEN ma.alloc_date AND COALESCE(ma.effective_end_date, '9999-12-31')\",\"WHERE \\\" . implode(' AND ', $where) . \\\"\",\"  AND ma.contractor_id = ?\",\"ORDER BY wo.due_date, wo.id DESC\",\"\\\";\",\"\",\"$UI = $ROOT . '/ui';\",\"$PAGE_TITLE  = 'Maintenance Cost by Contractor';\",\"$ACTIVE_MENU = 'maintenance.reports.contractor_costs';\",\"require_once $UI . '/init.php';\",\"require_once $UI . '/layout_start.php';\",\"?>\",\"<div class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\",\"  <h1 class=\\\"h4 mb-0\\\">Maintenance Cost by Contractor</h1>\",\"</div>\",\"\",\"<form class=\\\"row g-2 mb-3\\\" method=\\\"get\\\">\",\"  <div class=\\\"col-auto\\\">\",\"    <label class=\\\"form-label\\\">From</label>\",\"    <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"from\\\" value=\\\"<?= htmlspecialchars($from) ?>\\\">\",\"  </div>\",\"  <div class=\\\"col-auto\\\">\",\"    <label class=\\\"form-label\\\">To</label>\",\"    <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"to\\\" value=\\\"<?= htmlspecialchars($to) ?>\\\">\",\"  </div>\",\"  <div class=\\\"col-auto\\\">\",\"    <label class=\\\"form-label\\\">WO Status</label>\",\"    <select class=\\\"form-select\\\" name=\\\"wo_status\\\">\",\"      <option value=\\\"completed\\\" <?= $statusFilter==='completed'?'selected':'' ?>>Completed</option>\",\"      <option value=\\\"open\\\" <?= $statusFilter==='open'?'selected':'' ?>>Open/In Progress</option>\",\"      <option value=\\\"all\\\" <?= $statusFilter==='all'?'selected':'' ?>>All</option>\",\"    </select>\",\"  </div>\",\"  <div class=\\\"col-auto\\\">\",\"    <label class=\\\"form-label\\\">Machine ID (opt)</label>\",\"    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"machine_id\\\" value=\\\"<?= (int)$machineId ?>\\\">\",\"  </div>\",\"  <div class=\\\"col-auto\\\">\",\"    <label class=\\\"form-label\\\">Contractor ID (opt)</label>\",\"    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"contractor_id\\\" value=\\\"<?= (int)$contractorId ?>\\\">\",\"  </div>\",\"  <div class=\\\"col-auto align-self-end\\\">\",\"    <button class=\\\"btn btn-primary\\\">Apply</button>\",\"    <a class=\\\"btn btn-outline-secondary\\\" href=\\\"/maintenance/reports/contractor_costs.php\\\">Reset</a>\",\"  </div>\",\"</form>\",\"\",\"<?php if (!$rows): ?>\",\"  <div class=\\\"alert alert-info\\\">No matching work orders in the selected window.</div>\",\"<?php else: ?>\",\"  <div class=\\\"table-responsive\\\">\",\"    <table class=\\\"table table-sm align-middle\\\">\",\"      <thead class=\\\"table-light\\\">\",\"        <tr>\",\"          <th>Contractor</th>\",\"          <th class=\\\"text-end\\\">WO Count</th>\",\"          <th class=\\\"text-end\\\">Parts</th>\",\"          <th class=\\\"text-end\\\">Labour (Int)</th>\",\"          <th class=\\\"text-end\\\">Labour (Vendor)</th>\",\"          <th class=\\\"text-end\\\">Misc</th>\",\"          <th class=\\\"text-end\\\">Total</th>\",\"          <th></th>\",\"        </tr>\",\"      </thead>\",\"      <tbody>\",\"      <?php foreach ($rows as $r): ?>\",\"        <tr>\",\"          <td><?= htmlspecialchars((string)$r['contractor_name']) ?> <span class=\\\"text-muted\\\">(#<?= (int)$r['contractor_id'] ?>)</span></td>\",\"          <td class=\\\"text-end\\\"><?= (int)$r['wo_count'] ?></td>\",\"          <td class=\\\"text-end\\\"><?= number_format((float)$r['parts_cost'], 2) ?></td>\",\"          <td class=\\\"text-end\\\"><?= number_format((float)$r['labour_internal'], 2) ?></td>\",\"          <td class=\\\"text-end\\\"><?= number_format((float)$r['labour_vendor'], 2) ?></td>\",\"          <td class=\\\"text-end\\\"><?= number_format((float)$r['misc_cost'], 2) ?></td>\",\"          <td class=\\\"text-end\\\"><strong><?= number_format((float)$r['total_cost'], 2) ?></strong></td>\",\"          <td class=\\\"text-end\\\">\",\"            <button class=\\\"btn btn-sm btn-outline-primary\\\" type=\\\"button\\\"\",\"              data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#detail<?= (int)$r['contractor_id'] ?>\\\">Details</button>\",\"          </td>\",\"        </tr>\",\"        <tr class=\\\"collapse\\\" id=\\\"detail<?= (int)$r['contractor_id'] ?>\\\">\",\"          <td colspan=\\\"8\\\">\",\"            <?php\",\"              $stD = $pdo->prepare($sqlDetail);\",\"              $paramsD = array_merge($params, [(int)$r['contractor_id']]);\",\"              $stD->execute($paramsD);\",\"              $detail = $stD->fetchAll(PDO::FETCH_ASSOC);\",\"            ?>\",\"            <?php if (!$detail): ?>\",\"              <div class=\\\"text-muted\\\">No WOs.</div>\",\"            <?php else: ?>\",\"              <div class=\\\"table-responsive\\\">\",\"                <table class=\\\"table table-sm\\\">\",\"                  <thead>\",\"                    <tr>\",\"                      <th>WO</th><th>Title</th><th>Machine</th><th>Due</th>\",\"                      <th class=\\\"text-end\\\">Parts</th>\",\"                      <th class=\\\"text-end\\\">Lab (Int)</th>\",\"                      <th class=\\\"text-end\\\">Lab (Vendor)</th>\",\"                      <th class=\\\"text-end\\\">Misc</th>\",\"                      <th class=\\\"text-end\\\">Total</th>\",\"                      <th></th>\",\"                    </tr>\",\"                  </thead>\",\"                  <tbody>\",\"                  <?php foreach ($detail as $d): ?>\",\"                    <tr>\",\"                      <td><code><?= htmlspecialchars((string)$d['wo_code']) ?></code></td>\",\"                      <td><?= htmlspecialchars((string)$d['title']) ?></td>\",\"                      <td><strong><?= htmlspecialchars((string)$d['machine_code']) ?></strong> \\u2014 <?= htmlspecialchars((string)$d['machine_name']) ?></td>\",\"                      <td><?= htmlspecialchars((string)($d['due_date'] ?? '')) ?></td>\",\"                      <td class=\\\"text-end\\\"><?= number_format((float)$d['parts_cost'], 2) ?></td>\",\"                      <td class=\\\"text-end\\\"><?= number_format((float)$d['labour_cost_internal'], 2) ?></td>\",\"                      <td class=\\\"text-end\\\"><?= number_format((float)$d['labour_cost_vendor'], 2) ?></td>\",\"                      <td class=\\\"text-end\\\"><?= number_format((float)$d['misc_cost'], 2) ?></td>\",\"                      <td class=\\\"text-end\\\"><strong><?= number_format((float)$d['total_cost'], 2) ?></strong></td>\",\"                      <td class=\\\"text-end\\\"><a class=\\\"btn btn-sm btn-outline-secondary\\\" href=\\\"/maintenance/wo_view.php?id=<?= (int)$d['id'] ?>\\\">Open</a></td>\",\"                    </tr>\",\"                  <?php endforeach; ?>\",\"                  </tbody>\",\"                </table>\",\"              </div>\",\"            <?php endif; ?>\",\"          </td>\",\"        </tr>\",\"      <?php endforeach; ?>\",\"      </tbody>\",\"    </table>\",\"  </div>\",\"<?php endif; ?>\",\"\",\"<?php require_once $UI . '/layout_end.php'; ?>\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/x_templates_for_type.php\": [\"<?php\",\"/** PATH: /public_html/maintenance/x_templates_for_type.php */\",\"declare(strict_types=1);\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_login();\",\"require_permission('machines.manage');\",\"\",\"$pdo = db();\",\"$type_id = (int)($_GET['type_id'] ?? 0);\",\"$maintenance_type_id = (int)($_GET['maintenance_type_id'] ?? 0);\",\"\",\"$st = $pdo->prepare(\\\"SELECT id, title FROM maintenance_program_templates\",\"                      WHERE type_id=? AND maintenance_type_id=?\",\"                      ORDER BY title\\\");\",\"$st->execute([$type_id, $maintenance_type_id]); // FKs on both columns. :contentReference[oaicite:9]{index=9}\",\"$rows = $st->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"header('Content-Type: application/json');\",\"echo json_encode(['ok'=>true,'rows'=>$rows]);\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_view.php\": [\"<?php\",\"/** PATH: /public_html/maintenance/wo_view.php\",\" * PURPOSE: View a Work Order with tickable tasks + allocation & costing context.\",\" * PERMS: view => maintenance.wo.view (or admin), manage => maintenance.wo.manage\",\" * PHP: 8.4\",\" */\",\"declare(strict_types=1);\",\"\",\"$ROOT = dirname(__DIR__);\",\"require_once $ROOT . '/includes/auth.php';\",\"require_once $ROOT . '/includes/db.php';\",\"require_once $ROOT . '/includes/rbac.php';\",\"\",\"require_login();\",\"\",\"$canView   = has_permission('maintenance.wo.view')   || is_admin();\",\"$canManage = has_permission('maintenance.wo.manage') || is_admin();\",\"if (!$canView) { http_response_code(403); exit('Access denied'); }\",\"\",\"$pdo = db();\",\"$pdo->exec(\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\");\",\"\",\"$woId = (int)($_GET['id'] ?? 0);\",\"if ($woId <= 0) { http_response_code(400); exit('Invalid WO id'); }\",\"\",\"/** Load WO header + machine */\",\"$st = $pdo->prepare(\\\"\",\"  SELECT wo.*,\",\"         m.machine_id AS machine_code, m.name AS machine_name\",\"    FROM maintenance_work_orders wo\",\"    JOIN machines m ON m.id = wo.machine_id\",\"   WHERE wo.id = ?\",\"\\\");\",\"$st->execute([$woId]);\",\"$wo = $st->fetch(PDO::FETCH_ASSOC);\",\"if (!$wo) { http_response_code(404); exit('Work Order not found'); }\",\"\",\"/** If linked to interval, load minimal interval (title + program link) */\",\"$interval = null;\",\"if (!empty($wo['interval_id'])) {\",\"  $sti = $pdo->prepare(\\\"SELECT mi.id, mi.title, mi.program_id FROM maintenance_intervals mi WHERE mi.id=?\\\");\",\"  $sti->execute([(int)$wo['interval_id']]);\",\"  $interval = $sti->fetch(PDO::FETCH_ASSOC) ?: null;\",\"}\",\"\",\"/** Determine 'as-of' date for allocation attribution */\",\"$asOf = null;\",\"if (!empty($wo['due_date'])) {\",\"  $asOf = (string)$wo['due_date'];\",\"} else {\",\"  // Fallback to created_at if present; else today\",\"  $asOf = !empty($wo['created_at']) ? date('Y-m-d', strtotime((string)$wo['created_at'])) : date('Y-m-d');\",\"}\",\"\",\"/**\",\" * Load allocation record as of $asOf.\",\" * Window: alloc_date .. COALESCE(return_date, expected_return, '9999-12-31')\",\" * Prefer active status 'issued'; but allow a returned record if asOf sits within window historically.\",\" */\",\"$alloc = null;\",\"try {\",\"  $stmt = $pdo->prepare(\\\"\",\"  SELECT ma.*, p.name AS contractor_name\",\"    FROM machine_allocations ma\",\"    JOIN parties p ON p.id = ma.contractor_id\",\"   WHERE ma.machine_id = ?\",\"     AND ? BETWEEN ma.alloc_date AND COALESCE(ma.effective_end_date, '9999-12-31')\",\"   ORDER BY ma.status = 'issued' DESC, ma.id DESC\",\"   LIMIT 1\",\"\\\");\",\"\",\"  $stmt->execute([(int)$wo['machine_id'], $asOf]);\",\"  $alloc = $stmt->fetch(PDO::FETCH_ASSOC) ?: null;\",\"} catch (Throwable $e) {\",\"  $alloc = null; // Never block the page on allocation lookup\",\"}\",\"\",\"/** Load tasks */\",\"$st2 = $pdo->prepare(\\\"\",\"  SELECT id, task, status\",\"    FROM maintenance_wo_tasks\",\"   WHERE wo_id = ?\",\"   ORDER BY id ASC\",\"\\\");\",\"$st2->execute([$woId]);\",\"$tasks = $st2->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"/** UI shell */\",\"$UI = $ROOT . '/ui';\",\"$PAGE_TITLE  = 'WO ' . htmlspecialchars((string)$wo['wo_code']);\",\"$ACTIVE_MENU = 'maintenance.wo';\",\"require_once $UI . '/init.php';\",\"require_once $UI . '/layout_start.php';\",\"\",\"$ok = (int)($_GET['ok'] ?? 0);\",\"?>\",\"<?php if ($ok): ?>\",\"  <div class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\",\"    Work Order marked <strong>completed</strong>.\",\"    <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\"></button>\",\"  </div>\",\"<?php endif; ?>\",\"\",\"<div class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\",\"  <h1 class=\\\"h4 mb-0\\\">Work Order <code><?= htmlspecialchars((string)$wo['wo_code']) ?></code></h1>\",\"  <div class=\\\"d-flex gap-2\\\">\",\"    <a class=\\\"btn btn-outline-secondary\\\" href=\\\"/maintenance/wo_list.php\\\">Back to list</a>\",\"  </div>\",\"</div>\",\"\",\"<div class=\\\"row g-3\\\">\",\"  <!-- HEADER + ALLOCATION + COSTING -->\",\"  <div class=\\\"col-lg-6\\\">\",\"    <div class=\\\"card shadow-sm\\\">\",\"      <div class=\\\"card-body\\\">\",\"        <h5 class=\\\"card-title mb-3\\\">Header</h5>\",\"        <div class=\\\"row\\\">\",\"          <div class=\\\"col-sm-6 mb-2\\\">\",\"            <strong>Machine</strong><br>\",\"            <span class=\\\"text-muted\\\"><?= htmlspecialchars((string)$wo['machine_code']) ?></span> \\u2014 <?= htmlspecialchars((string)$wo['machine_name']) ?>\",\"          </div>\",\"          <div class=\\\"col-sm-6 mb-2\\\">\",\"            <strong>Status</strong><br>\",\"            <span class=\\\"badge bg-secondary\\\"><?= htmlspecialchars((string)$wo['status']) ?></span>\",\"          </div>\",\"          <div class=\\\"col-sm-6 mb-2\\\">\",\"            <strong>Title</strong><br><?= htmlspecialchars((string)$wo['title']) ?>\",\"          </div>\",\"          <div class=\\\"col-sm-6 mb-2\\\">\",\"            <strong>Due Date</strong><br><?= htmlspecialchars((string)($wo['due_date'] ?? '')) ?>\",\"          </div>\",\"\",\"          <?php if ($interval): ?>\",\"          <div class=\\\"col-sm-12 mb-2\\\">\",\"            <strong>Source Interval</strong><br>\",\"            <div class=\\\"small\\\">\",\"              <?= htmlspecialchars((string)($interval['title'] ?: 'Scheduled Maintenance')) ?>\",\"              &nbsp;\\u00b7&nbsp;\",\"              <a href=\\\"/maintenance/intervals_list.php?program_id=<?= (int)$interval['program_id'] ?>\\\">View program</a>\",\"            </div>\",\"          </div>\",\"          <?php endif; ?>\",\"\",\"          <?php if (!empty($wo['description'])): ?>\",\"          <div class=\\\"col-sm-12 mb-2\\\">\",\"            <strong>Description</strong><br><?= nl2br(htmlspecialchars((string)$wo['description'])) ?>\",\"          </div>\",\"          <?php endif; ?>\",\"\",\"          <?php if ($alloc): ?>\",\"          <div class=\\\"col-sm-12 mb-2\\\">\",\"            <strong>Allocation (as of <?= htmlspecialchars($asOf) ?>)</strong><br>\",\"            <div class=\\\"small\\\">\",\"              Contractor: <strong><?= htmlspecialchars((string)$alloc['contractor_name']) ?></strong>\",\"              &nbsp;\\u2022&nbsp; Code: <code><?= htmlspecialchars((string)$alloc['alloc_code']) ?></code>\",\"              <br>\",\"              From <strong><?= htmlspecialchars((string)$alloc['alloc_date']) ?></strong>\",\"              to <strong><?= htmlspecialchars((string)($alloc['return_date'] ?? $alloc['expected_return'] ?? 'open')) ?></strong>\",\"              &nbsp;\\u2022&nbsp; Status: <span class=\\\"badge bg-<?= ($alloc['status']==='issued'?'warning text-dark':'secondary') ?>\\\">\",\"                <?= htmlspecialchars((string)$alloc['status']) ?>\",\"              </span>\",\"              <?php if (!is_null($alloc['meter_issue'])): ?>\",\"                <br><span class=\\\"text-muted\\\">Meter @ issue:</span> <?= number_format((float)$alloc['meter_issue'], 2) ?>\",\"              <?php endif; ?>\",\"              <?php if (!is_null($alloc['meter_return'])): ?>\",\"                &nbsp;|&nbsp;<span class=\\\"text-muted\\\">Meter @ return:</span> <?= number_format((float)$alloc['meter_return'], 2) ?>\",\"              <?php endif; ?>\",\"              <?php if (!empty($alloc['remarks'])): ?>\",\"                <div class=\\\"mt-1 text-muted\\\">Remarks: <?= htmlspecialchars((string)$alloc['remarks']) ?></div>\",\"              <?php endif; ?>\",\"            </div>\",\"          </div>\",\"          <?php endif; ?>\",\"\",\"          <!-- Costing block -->\",\"          <div class=\\\"col-sm-12 mt-2\\\">\",\"            <h6 class=\\\"mt-3\\\">Costing</h6>\",\"            <div class=\\\"row g-2 small\\\">\",\"              <div class=\\\"col-6\\\"><span class=\\\"text-muted\\\">Parts</span><br><strong><?= number_format((float)($wo['parts_cost'] ?? 0), 2) ?></strong></div>\",\"              <div class=\\\"col-6\\\"><span class=\\\"text-muted\\\">Labour (Internal)</span><br><strong><?= number_format((float)($wo['labour_cost_internal'] ?? 0), 2) ?></strong></div>\",\"              <div class=\\\"col-6\\\"><span class=\\\"text-muted\\\">Labour (Vendor)</span><br><strong><?= number_format((float)($wo['labour_cost_vendor'] ?? 0), 2) ?></strong></div>\",\"              <div class=\\\"col-6\\\"><span class=\\\"text-muted\\\">Misc</span><br><strong><?= number_format((float)($wo['misc_cost'] ?? 0), 2) ?></strong></div>\",\"              <div class=\\\"col-12\\\"><hr class=\\\"my-2\\\"></div>\",\"              <div class=\\\"col-12\\\"><span class=\\\"text-muted\\\">Total</span><br><strong><?= number_format((float)($wo['total_cost'] ?? 0), 2) ?></strong></div>\",\"            </div>\",\"          </div>\",\"\",\"        </div>\",\"      </div>\",\"    </div>\",\"  </div>\",\"\",\"  <!-- TASKS -->\",\"  <div class=\\\"col-lg-6\\\">\",\"    <div class=\\\"card shadow-sm\\\">\",\"      <div class=\\\"card-body\\\">\",\"        <div class=\\\"d-flex align-items-center justify-content-between\\\">\",\"          <h5 class=\\\"card-title mb-0\\\">Tasks</h5>\",\"          <?php if ($canManage): ?>\",\"          <form class=\\\"d-flex gap-2\\\" method=\\\"post\\\" action=\\\"/maintenance/wo_task_add.php\\\">\",\"            <input type=\\\"hidden\\\" name=\\\"wo_id\\\" value=\\\"<?= (int)$woId ?>\\\">\",\"            <input class=\\\"form-control form-control-sm\\\" name=\\\"task\\\" placeholder=\\\"New task...\\\" required>\",\"            <button class=\\\"btn btn-sm btn-primary\\\">Add</button>\",\"          </form>\",\"          <?php endif; ?>\",\"        </div>\",\"\",\"        <div class=\\\"mt-3\\\">\",\"          <?php if (!$tasks): ?>\",\"            <div class=\\\"text-muted\\\">No tasks yet.</div>\",\"          <?php else: ?>\",\"            <ul class=\\\"list-group list-group-flush\\\">\",\"              <?php foreach ($tasks as $t): $done = (string)$t['status'] === 'done'; ?>\",\"                <li class=\\\"list-group-item\\\">\",\"                  <?php if ($canManage): ?>\",\"                  <form method=\\\"post\\\" action=\\\"/maintenance/wo_task_toggle.php\\\" class=\\\"m-0\\\">\",\"                    <input type=\\\"hidden\\\" name=\\\"id\\\" value=\\\"<?= (int)$t['id'] ?>\\\">\",\"                    <input type=\\\"hidden\\\" name=\\\"wo_id\\\" value=\\\"<?= (int)$woId ?>\\\">\",\"                    <input type=\\\"hidden\\\" name=\\\"to\\\" value=\\\"<?= $done ? 'todo' : 'done' ?>\\\">\",\"                    <div class=\\\"form-check\\\">\",\"                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"task<?= (int)$t['id'] ?>\\\"\",\"                             <?= $done ? 'checked' : '' ?>\",\"                             onchange=\\\"this.form.submit()\\\">\",\"                      <label class=\\\"form-check-label <?= $done ? 'text-decoration-line-through text-muted' : '' ?>\\\"\",\"                             for=\\\"task<?= (int)$t['id'] ?>\\\">\",\"                        <?= htmlspecialchars((string)$t['task']) ?>\",\"                      </label>\",\"                    </div>\",\"                  </form>\",\"                  <?php else: ?>\",\"                  <div class=\\\"form-check\\\">\",\"                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" disabled <?= $done ? 'checked' : '' ?>>\",\"                    <label class=\\\"form-check-label <?= $done ? 'text-decoration-line-through text-muted' : '' ?>\\\">\",\"                      <?= htmlspecialchars((string)$t['task']) ?>\",\"                    </label>\",\"                  </div>\",\"                  <?php endif; ?>\",\"                </li>\",\"              <?php endforeach; ?>\",\"            </ul>\",\"          <?php endif; ?>\",\"        </div>\",\"\",\"        <?php if ($canManage): ?>\",\"        <div class=\\\"mt-3 d-flex gap-2\\\">\",\"          <a class=\\\"btn btn-success\\\" href=\\\"/maintenance/wo_complete.php?id=<?= (int)$woId ?>\\\"\",\"             onclick=\\\"return confirm('Mark this WO as completed? Intervals (if linked) will roll to next due.');\\\">\",\"             Complete WO\",\"          </a>\",\"          <a class=\\\"btn btn-outline-secondary\\\" href=\\\"/maintenance/wo_edit.php?id=<?= (int)$woId ?>\\\">Edit</a>\",\"        </div>\",\"        <?php endif; ?>\",\"      </div>\",\"    </div>\",\"  </div>\",\"</div>\",\"\",\"<?php require_once $UI . '/layout_end.php'; ?>\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_task_add.php\": [\"<?php\",\"/** PATH: /public_html/maintenance/wo_task_add.php\",\" * PURPOSE: Add a new task line to a WO with status 'todo'\",\" * PERMS: maintenance.wo.manage\",\" */\",\"declare(strict_types=1);\",\"\",\"$ROOT = dirname(__DIR__);\",\"require_once $ROOT . '/includes/auth.php';\",\"require_once $ROOT . '/includes/db.php';\",\"require_once $ROOT . '/includes/rbac.php';\",\"require_once $ROOT . '/includes/csrf.php';\",\"\",\"require_login();\",\"require_permission('maintenance.wo.manage');\",\"\",\"$pdo = db();\",\"csrf_require_token();\",\"$pdo->exec(\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\");\",\"\",\"$woId = (int)($_POST['wo_id'] ?? 0);\",\"$task = trim((string)($_POST['task'] ?? ''));\",\"\",\"if ($woId <= 0 || $task === '') { http_response_code(400); exit('Invalid params'); }\",\"\",\"$st = $pdo->prepare(\\\"INSERT INTO maintenance_wo_tasks (wo_id, task, status) VALUES (?, ?, 'todo')\\\");\",\"$st->execute([$woId, $task]);\",\"\",\"header('Location: /maintenance/wo_view.php?id=' . $woId);\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/_backups/modules__demo__hello.php.20250924_224202.json\": [\"{\",\"    \\\"rel_path\\\": \\\"modules\\\\/demo\\\\/hello.php\\\",\",\"    \\\"size\\\": 630,\",\"    \\\"saved_at\\\": \\\"2025-09-24 22:42:02\\\"\",\"}\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/_backups/modules__demo__hello.php.20250924_224202.bak\": [\"<?php\",\"declare(strict_types=1);\",\"$title = \\\"Items\\\";\",\"$items = [\\\"apple\\\",\\\"banana\\\",\\\"cherry\\\"];\",\"?>\",\"<!doctype html>\",\"<html lang=\\\"en\\\">\",\"<head>\",\"  <meta charset=\\\"utf-8\\\">\",\"  <title><?= htmlspecialchars($title) ?></title>\",\"  <link href=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\">\",\"</head>\",\"<body class=\\\"p-3\\\">\",\"  <div class=\\\"container\\\">\",\"    <h1 class=\\\"h4\\\"><?= htmlspecialchars($title) ?></h1>\",\"    <ul>\",\"      <?php foreach ($items as $it): ?>\",\"        <li><?= htmlspecialchars($it) ?></li>\",\"      <?php endforeach; ?>\",\"    </ul>\",\"    <button class=\\\"btn btn-secondary\\\">Click me</button>\",\"  </div>\",\"</body>\",\"</html>\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/parties/party_gst_lookup.php\": [\"<?php\",\"/** PATH: /public_html/parties/party_gst_lookup.php */\",\"declare(strict_types=1);\",\"\",\"require_once __DIR__ . '/../includes/auth.php';\",\"\",\"header('Content-Type: application/json');\",\"try {\",\"  require_login();\",\"\",\"  $gstin = strtoupper(trim((string)($_GET['gstin'] ?? '')));\",\"  if ($gstin === '') {\",\"    echo json_encode(['ok'=>false,'message'=>'GSTIN is required']); exit;\",\"  }\",\"\",\"  // Format: 2 digit state + 10 PAN-like + 1 entity + 'Z' + 1 checksum\",\"  $isValid = (bool)preg_match('/^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z][1-9A-Z]Z[0-9A-Z]$/', $gstin);\",\"  $pan = $isValid ? substr($gstin, 2, 10) : null;\",\"  $stateCode = $isValid ? substr($gstin, 0, 2) : null;\",\"\",\"  // NOTE: We do not call the NIC/GSTN API here. legal_name is unknown without an external API.\",\"  echo json_encode([\",\"    'ok'         => $isValid,\",\"    'message'    => $isValid ? 'GSTIN format looks valid' : 'Invalid GSTIN format',\",\"    'gstin'      => $gstin,\",\"    'pan'        => $pan,\",\"    'state_code' => $stateCode,\",\"    'legal_name' => null\",\"  ]);\",\"} catch (Throwable $e) {\",\"  http_response_code(500);\",\"  echo json_encode(['ok'=>false,'message'=>$e->getMessage()]);\",\"}\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/parties/parties_form.php\": [\"<?php\",\"/** PATH: /public_html/parties/parties_form.php */\",\"declare(strict_types=1);\",\"\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"require_once __DIR__ . '/../includes/csrf.php';\",\"require_once __DIR__ . '/../includes/helpers.php';\",\"require_once __DIR__ . '/../includes/audit.php';\",\"\",\"require_login();\",\"require_permission('parties.manage');\",\"\",\"$pdo = db();\",\"\",\"$id = (int)($_GET['id'] ?? 0);\",\"$isEdit = $id > 0;\",\"\",\"$types = ['client','supplier','contractor','other'];\",\"\",\"$errors = [];\",\"$party = [\",\"  'code' => '',\",\"  'name' => '',\",\"  'legal_name' => '',\",\"  'type' => 'supplier',\",\"  'contact_name' => '',\",\"  'email' => '',\",\"  'phone' => '',\",\"  'gst_number' => '',\",\"  'gst_state_code' => '',\",\"  'gst_registration_type' => null,\",\"  'pan_number' => '',\",\"  'msme_udyam' => '',\",\"  'address_line1' => '',\",\"  'address_line2' => '',\",\"  'city' => '',\",\"  'state' => '',\",\"  'country' => 'India',\",\"  'pincode' => '',\",\"  'status' => 1,\",\"];\",\"\",\"$commercial = [\",\"  'payment_terms_days' => 30,\",\"  'credit_limit' => '0.00',\",\"  'tds_section' => '',\",\"  'tds_rate' => null,\",\"  'tcs_applicable' => 0,\",\"  'e_invoice_required' => 0,\",\"  'reverse_charge_applicable' => 0,\",\"  'default_place_of_supply' => '',\",\"];\",\"\",\"$banks = [];\",\"$contacts = [];\",\"\",\"// Load existing\",\"if ($isEdit) {\",\"  $st = $pdo->prepare(\\\"SELECT * FROM parties WHERE id=? LIMIT 1\\\");\",\"  $st->execute([$id]);\",\"  $row = $st->fetch(PDO::FETCH_ASSOC);\",\"  if (!$row) { http_response_code(404); echo \\\"Party not found\\\"; exit; }\",\"  $party = array_merge($party, $row);\",\"\",\"  // commercial\",\"  $st = $pdo->prepare(\\\"SELECT * FROM party_commercials WHERE party_id=? LIMIT 1\\\");\",\"  $st->execute([$id]);\",\"  if ($c = $st->fetch(PDO::FETCH_ASSOC)) $commercial = array_merge($commercial, $c);\",\"\",\"  // banks\",\"  $st = $pdo->prepare(\\\"SELECT * FROM party_bank_accounts WHERE party_id=? ORDER BY is_primary DESC, id ASC\\\");\",\"  $st->execute([$id]);\",\"  $banks = $st->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"  // contacts\",\"  $st = $pdo->prepare(\\\"SELECT * FROM party_contacts WHERE party_id=? ORDER BY is_primary DESC, id ASC\\\");\",\"  $st->execute([$id]);\",\"  $contacts = $st->fetchAll(PDO::FETCH_ASSOC);\",\"}\",\"\",\"// Handle POST\",\"if ($_SERVER['REQUEST_METHOD'] === 'POST') {\",\"  verify_csrf_or_die();\",\"\",\"  // Party fields\",\"  foreach ($party as $k => $_) {\",\"    if ($k === 'status') continue;\",\"    $party[$k] = trim((string)($_POST[$k] ?? ''));\",\"  }\",\"  $party['status'] = isset($_POST['status']) ? 1 : 0;\",\"\",\"  // Validate\",\"  if ($party['name'] === '') $errors['name'] = 'Name is required';\",\"  if (!in_array($party['type'], $types, true)) $errors['type'] = 'Invalid type';\",\"  if ($party['email'] !== '' && !filter_var($party['email'], FILTER_VALIDATE_EMAIL)) $errors['email'] = 'Invalid email';\",\"  if ($party['gst_number'] !== '' && !preg_match('/^[0-9A-Z]{15}$/', $party['gst_number'])) $errors['gst_number'] = 'Invalid GSTIN (15 alphanumerics)';\",\"\",\"  // Commercials\",\"  $commercial['payment_terms_days'] = (int)($_POST['payment_terms_days'] ?? 30);\",\"  $commercial['credit_limit'] = (string)($_POST['credit_limit'] ?? '0.00');\",\"  $commercial['tds_section'] = trim((string)($_POST['tds_section'] ?? ''));\",\"  $commercial['tds_rate'] = ($_POST['tds_rate'] ?? '') === '' ? null : (string)$_POST['tds_rate'];\",\"  $commercial['tcs_applicable'] = isset($_POST['tcs_applicable']) ? 1 : 0;\",\"  $commercial['e_invoice_required'] = isset($_POST['e_invoice_required']) ? 1 : 0;\",\"  $commercial['reverse_charge_applicable'] = isset($_POST['reverse_charge_applicable']) ? 1 : 0;\",\"  $commercial['default_place_of_supply'] = trim((string)($_POST['default_place_of_supply'] ?? ''));\",\"\",\"  // Bank arrays\",\"  $bank_ids        = $_POST['bank_id'] ?? [];\",\"  $beneficiary_name= $_POST['beneficiary_name'] ?? [];\",\"  $bank_name       = $_POST['bank_name'] ?? [];\",\"  $branch          = $_POST['branch'] ?? [];\",\"  $account_number  = $_POST['account_number'] ?? [];\",\"  $ifsc            = $_POST['ifsc'] ?? [];\",\"  $account_type    = $_POST['account_type'] ?? [];\",\"  $bank_is_primary = $_POST['bank_is_primary'] ?? []; // holds indices marked primary (single key)\",\"\",\"  // Contact arrays\",\"  $contact_ids         = $_POST['contact_id'] ?? [];\",\"  $contact_name        = $_POST['contact_name'] ?? [];\",\"  $contact_email       = $_POST['contact_email'] ?? [];\",\"  $contact_phone       = $_POST['contact_phone'] ?? [];\",\"  $contact_role_title  = $_POST['contact_role_title'] ?? [];\",\"  $contact_is_primary  = $_POST['contact_is_primary'] ?? []; // holds indices marked primary (single key)\",\"\",\"  try {\",\"    if (!$errors) {\",\"      $pdo->beginTransaction();\",\"\",\"      // INSERT code generation if needed\",\"      if (!$isEdit && $party['code'] === '') {\",\"        $st = $pdo->prepare(\\\"SELECT code_prefix FROM party_type_meta WHERE type=?\\\");\",\"        $st->execute([$party['type']]);\",\"        $prefix = (string)($st->fetchColumn() ?: '');\",\"        if ($prefix === '') {\",\"          $map = ['client'=>'CL','supplier'=>'SP','contractor'=>'CT','other'=>'OT'];\",\"          $prefix = $map[$party['type']] ?? 'PT';\",\"        }\",\"        $scope = 'party:' . $prefix;\",\"        $row = $pdo->prepare(\\\"SELECT id, current_value FROM party_sequences WHERE scope=? FOR UPDATE\\\");\",\"        $row->execute([$scope]);\",\"        $seq = $row->fetch(PDO::FETCH_ASSOC);\",\"        if (!$seq) {\",\"          $pdo->prepare(\\\"INSERT INTO party_sequences(scope, current_value) VALUES(?, 0)\\\")->execute([$scope]);\",\"          $row->execute([$scope]);\",\"          $seq = $row->fetch(PDO::FETCH_ASSOC);\",\"        }\",\"        $next = (int)$seq['current_value'] + 1;\",\"        $pdo->prepare(\\\"UPDATE party_sequences SET current_value=? WHERE id=?\\\")->execute([$next, (int)$seq['id']]);\",\"\",\"        $cst = $pdo->prepare(\\\"SELECT code FROM parties WHERE code LIKE ? ORDER BY id DESC LIMIT 1\\\");\",\"        $cst->execute([$prefix.'%']);\",\"        $lastCode = (string)($cst->fetchColumn() ?: '');\",\"        $hyphen = $lastCode ? (strpos($lastCode, '-') !== false) : ($party['type']==='client');\",\"        $party['code'] = $prefix . ($hyphen?'-':'') . str_pad((string)$next, 4, '0', STR_PAD_LEFT);\",\"      }\",\"\",\"      // upsert party\",\"      if ($isEdit) {\",\"        $sql = \\\"UPDATE parties SET code=?, name=?, legal_name=?, type=?, contact_name=?, email=?, phone=?, \",\"                gst_number=?, gst_state_code=?, gst_registration_type=?, pan_number=?, msme_udyam=?,\",\"                address_line1=?, address_line2=?, city=?, state=?, country=?, pincode=?, status=? \",\"                WHERE id=?\\\";\",\"        $pdo->prepare($sql)->execute([\",\"          $party['code'],$party['name'],$party['legal_name'],$party['type'],$party['contact_name'],$party['email'],$party['phone'],\",\"          $party['gst_number'],$party['gst_state_code'],$party['gst_registration_type'],$party['pan_number'],$party['msme_udyam'],\",\"          $party['address_line1'],$party['address_line2'],$party['city'],$party['state'],$party['country'],$party['pincode'],$party['status'],\",\"          $id\",\"        ]);\",\"      } else {\",\"        $sql = \\\"INSERT INTO parties(code,name,legal_name,type,contact_name,email,phone,gst_number,gst_state_code,gst_registration_type,pan_number,msme_udyam,address_line1,address_line2,city,state,country,pincode,status)\",\"                VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\\\";\",\"        $pdo->prepare($sql)->execute([\",\"          $party['code'],$party['name'],$party['legal_name'],$party['type'],$party['contact_name'],$party['email'],$party['phone'],\",\"          $party['gst_number'],$party['gst_state_code'],$party['gst_registration_type'],$party['pan_number'],$party['msme_udyam'],\",\"          $party['address_line1'],$party['address_line2'],$party['city'],$party['state'],$party['country'],$party['pincode'],$party['status']\",\"        ]);\",\"        $id = (int)$pdo->lastInsertId();\",\"        $isEdit = true;\",\"      }\",\"\",\"      // upsert party_commercials (PK party_id)\",\"      $st = $pdo->prepare(\\\"SELECT party_id FROM party_commercials WHERE party_id=?\\\");\",\"      $st->execute([$id]);\",\"      if ($st->fetchColumn()) {\",\"        $sql = \\\"UPDATE party_commercials SET payment_terms_days=?, credit_limit=?, tds_section=?, tds_rate=?, \",\"                tcs_applicable=?, e_invoice_required=?, reverse_charge_applicable=?, default_place_of_supply=?\",\"                WHERE party_id=?\\\";\",\"        $pdo->prepare($sql)->execute([\",\"          $commercial['payment_terms_days'], $commercial['credit_limit'], $commercial['tds_section'], $commercial['tds_rate'],\",\"          $commercial['tcs_applicable'], $commercial['e_invoice_required'], $commercial['reverse_charge_applicable'],\",\"          $commercial['default_place_of_supply'], $id\",\"        ]);\",\"      } else {\",\"        $sql = \\\"INSERT INTO party_commercials(party_id,payment_terms_days,credit_limit,tds_section,tds_rate,tcs_applicable,e_invoice_required,reverse_charge_applicable,default_place_of_supply)\",\"                VALUES (?,?,?,?,?,?,?,?,?)\\\";\",\"        $pdo->prepare($sql)->execute([\",\"          $id, $commercial['payment_terms_days'], $commercial['credit_limit'], $commercial['tds_section'], $commercial['tds_rate'],\",\"          $commercial['tcs_applicable'], $commercial['e_invoice_required'], $commercial['reverse_charge_applicable'],\",\"          $commercial['default_place_of_supply']\",\"        ]);\",\"      }\",\"\",\"      // existing banks for cleanup\",\"      $st = $pdo->prepare(\\\"SELECT id FROM party_bank_accounts WHERE party_id=?\\\");\",\"      $st->execute([$id]);\",\"      $existingBankIds = array_map('intval', array_column($st->fetchAll(PDO::FETCH_ASSOC), 'id'));\",\"\",\"      $keptBankIds = [];\",\"      $primaryBankIndex = is_array($bank_is_primary) && count($bank_is_primary) ? (int)array_keys($bank_is_primary)[0] : -1;\",\"\",\"      foreach ((array)$beneficiary_name as $i => $bn) {\",\"        $rowHasData = trim((string)$bn) !== '' || trim((string)($bank_name[$i] ?? '')) !== '' || trim((string)($account_number[$i] ?? '')) !== '';\",\"        if (!$rowHasData) continue;\",\"\",\"        $b = [\",\"          'id' => (int)($bank_ids[$i] ?? 0),\",\"          'beneficiary_name' => trim((string)$bn),\",\"          'bank_name' => trim((string)($bank_name[$i] ?? '')),\",\"          'branch' => trim((string)($branch[$i] ?? '')),\",\"          'account_number' => trim((string)($account_number[$i] ?? '')),\",\"          'ifsc' => trim((string)($ifsc[$i] ?? '')),\",\"          'account_type' => (string)($account_type[$i] ?? 'current'),\",\"          'is_primary' => ($i === $primaryBankIndex) ? 1 : 0,\",\"        ];\",\"\",\"        if ($b['id'] > 0) {\",\"          $sql = \\\"UPDATE party_bank_accounts SET beneficiary_name=?, bank_name=?, branch=?, account_number=?, ifsc=?, account_type=?, is_primary=? \",\"                  WHERE id=? AND party_id=?\\\";\",\"          $pdo->prepare($sql)->execute([\",\"            $b['beneficiary_name'],$b['bank_name'],$b['branch'],$b['account_number'],$b['ifsc'],$b['account_type'],$b['is_primary'],\",\"            $b['id'],$id\",\"          ]);\",\"          $keptBankIds[] = $b['id'];\",\"        } else {\",\"          $sql = \\\"INSERT INTO party_bank_accounts(party_id,beneficiary_name,bank_name,branch,account_number,ifsc,account_type,is_primary)\",\"                  VALUES (?,?,?,?,?,?,?,?)\\\";\",\"          $pdo->prepare($sql)->execute([\",\"            $id,$b['beneficiary_name'],$b['bank_name'],$b['branch'],$b['account_number'],$b['ifsc'],$b['account_type'],$b['is_primary']\",\"          ]);\",\"          $keptBankIds[] = (int)$pdo->lastInsertId();\",\"        }\",\"      }\",\"\",\"      // delete removed banks\",\"      $toDelete = array_diff($existingBankIds, $keptBankIds);\",\"      if ($toDelete) {\",\"        $in = implode(',', array_fill(0, count($toDelete), '?'));\",\"        $sql = \\\"DELETE FROM party_bank_accounts WHERE party_id=? AND id IN ($in)\\\";\",\"        $params = array_merge([$id], array_values($toDelete));\",\"        $pdo->prepare($sql)->execute($params);\",\"      }\",\"\",\"      // existing contacts for cleanup\",\"      $st = $pdo->prepare(\\\"SELECT id FROM party_contacts WHERE party_id=?\\\");\",\"      $st->execute([$id]);\",\"      $existingContactIds = array_map('intval', array_column($st->fetchAll(PDO::FETCH_ASSOC), 'id'));\",\"\",\"      $keptContactIds = [];\",\"      $primaryContactIndex = is_array($contact_is_primary) && count($contact_is_primary) ? (int)array_keys($contact_is_primary)[0] : -1;\",\"\",\"      foreach ((array)$contact_name as $i => $cn) {\",\"        $rowHasData = trim((string)$cn) !== '' || trim((string)($contact_phone[$i] ?? '')) !== '' || trim((string)($contact_email[$i] ?? '')) !== '';\",\"        if (!$rowHasData) continue;\",\"\",\"        $c = [\",\"          'id' => (int)($contact_ids[$i] ?? 0),\",\"          'name' => trim((string)$cn),\",\"          'email' => trim((string)($contact_email[$i] ?? '')),\",\"          'phone' => trim((string)($contact_phone[$i] ?? '')),\",\"          'role_title' => trim((string)($contact_role_title[$i] ?? '')),\",\"          'is_primary' => ($i === $primaryContactIndex) ? 1 : 0,\",\"        ];\",\"\",\"        if ($c['id'] > 0) {\",\"          $sql = \\\"UPDATE party_contacts SET name=?, email=?, phone=?, role_title=?, is_primary=? WHERE id=? AND party_id=?\\\";\",\"          $pdo->prepare($sql)->execute([\",\"            $c['name'],$c['email'],$c['phone'],$c['role_title'],$c['is_primary'], $c['id'],$id\",\"          ]);\",\"          $keptContactIds[] = $c['id'];\",\"        } else {\",\"          $sql = \\\"INSERT INTO party_contacts(party_id,name,email,phone,role_title,is_primary) VALUES (?,?,?,?,?,?)\\\";\",\"          $pdo->prepare($sql)->execute([$id,$c['name'],$c['email'],$c['phone'],$c['role_title'],$c['is_primary']]);\",\"          $keptContactIds[] = (int)$pdo->lastInsertId();\",\"        }\",\"      }\",\"\",\"      // delete removed contacts\",\"      $toDeleteC = array_diff($existingContactIds, $keptContactIds);\",\"      if ($toDeleteC) {\",\"        $in = implode(',', array_fill(0, count($toDeleteC), '?'));\",\"        $sql = \\\"DELETE FROM party_contacts WHERE party_id=? AND id IN ($in)\\\";\",\"        $params = array_merge([$id], array_values($toDeleteC));\",\"        $pdo->prepare($sql)->execute($params);\",\"      }\",\"\",\"      // audit (kernel signature: audit_log(PDO $pdo, string $entity, string $action, ?int $row_id, $payload))\",\"      audit_log($pdo, 'parties', $isEdit ? 'update' : 'create', $id, ['party'=>$party,'commercial'=>$commercial]);\",\"\",\"      $pdo->commit();\",\"      set_flash('success', 'Saved successfully.');\",\"      header(\\\"Location: parties_list.php?saved=1\\\");\",\"      exit;\",\"    }\",\"  } catch (Throwable $e) {\",\"    if ($pdo->inTransaction()) $pdo->rollBack();\",\"    $errors['db'] = $e->getMessage();\",\"  }\",\"}\",\"\",\"$pageTitle = $isEdit ? ('Edit Party: '.h($party['code'] ?: $party['name'])) : 'New Party';\",\"include __DIR__ . '/../ui/layout_start.php';\",\"?>\",\"<div class=\\\"container-fluid py-3\\\">\",\"  <div class=\\\"d-flex align-items-center justify-content-between mb-3\\\">\",\"    <h1 class=\\\"h4 mb-0\\\"><?= h($pageTitle) ?></h1>\",\"    <div>\",\"      <a href=\\\"parties_list.php\\\" class=\\\"btn btn-sm btn-outline-secondary\\\"><i class=\\\"bi bi-arrow-left\\\"></i> Back</a>\",\"    </div>\",\"  </div>\",\"\",\"  <?php if ($errors): ?>\",\"    <div class=\\\"alert alert-danger\\\">\",\"      <div class=\\\"fw-semibold mb-1\\\">Please fix the errors below:</div>\",\"      <ul class=\\\"mb-0\\\">\",\"        <?php foreach ($errors as $msg): ?>\",\"          <li><?= h($msg) ?></li>\",\"        <?php endforeach; ?>\",\"      </ul>\",\"    </div>\",\"  <?php endif; ?>\",\"\",\"  <form method=\\\"post\\\" action=\\\"\\\" novalidate>\",\"    <?= csrf_field() ?>\",\"\",\"    <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\",\"      <li class=\\\"nav-item\\\"><button class=\\\"nav-link active\\\" data-bs-toggle=\\\"tab\\\" data-bs-target=\\\"#tab-basic\\\" type=\\\"button\\\">Basic</button></li>\",\"      <li class=\\\"nav-item\\\"><button class=\\\"nav-link\\\" data-bs-toggle=\\\"tab\\\" data-bs-target=\\\"#tab-commercial\\\" type=\\\"button\\\">Commercials</button></li>\",\"      <li class=\\\"nav-item\\\"><button class=\\\"nav-link\\\" data-bs-toggle=\\\"tab\\\" data-bs-target=\\\"#tab-banks\\\" type=\\\"button\\\">Bank Details</button></li>\",\"      <li class=\\\"nav-item\\\"><button class=\\\"nav-link\\\" data-bs-toggle=\\\"tab\\\" data-bs-target=\\\"#tab-contacts\\\" type=\\\"button\\\">Contacts</button></li>\",\"      <?php if ($isEdit): ?>\",\"        <li class=\\\"nav-item\\\"><button class=\\\"nav-link\\\" data-bs-toggle=\\\"tab\\\" data-bs-target=\\\"#tab-attachments\\\" type=\\\"button\\\">Attachments</button></li>\",\"      <?php endif; ?>\",\"    </ul>\",\"\",\"    <div class=\\\"tab-content border border-top-0 p-3 rounded-bottom shadow-sm\\\">\",\"      <!-- BASIC -->\",\"      <div class=\\\"tab-pane fade show active\\\" id=\\\"tab-basic\\\">\",\"        <div class=\\\"row g-3\\\">\",\"          <div class=\\\"col-sm-4\\\">\",\"            <label class=\\\"form-label\\\">Type</label>\",\"            <select name=\\\"type\\\" class=\\\"form-select\\\" required>\",\"              <?php foreach ($types as $t): ?>\",\"                <option value=\\\"<?= h($t) ?>\\\" <?= $party['type']===$t?'selected':'' ?>><?= ucfirst($t) ?></option>\",\"              <?php endforeach; ?>\",\"            </select>\",\"          </div>\",\"          <div class=\\\"col-sm-4\\\">\",\"            <label class=\\\"form-label\\\">Code</label>\",\"            <div class=\\\"input-group\\\">\",\"              <input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control\\\" value=\\\"<?= h($party['code']) ?>\\\" placeholder=\\\"Auto\\\" readonly>\",\"              <button class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\" id=\\\"btnGen\\\">Auto</button>\",\"            </div>\",\"            <div class=\\\"form-text\\\">Generated on save. Use Auto to preview.</div>\",\"          </div>\",\"          <div class=\\\"col-sm-8\\\">\",\"            <label class=\\\"form-label\\\">Name <span class=\\\"text-danger\\\">*</span></label>\",\"            <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" value=\\\"<?= h($party['name']) ?>\\\" required>\",\"          </div>\",\"\",\"          <div class=\\\"col-sm-8\\\">\",\"            <label class=\\\"form-label\\\">Legal Name</label>\",\"            <input type=\\\"text\\\" name=\\\"legal_name\\\" class=\\\"form-control\\\" value=\\\"<?= h($party['legal_name']) ?>\\\">\",\"          </div>\",\"          <div class=\\\"col-sm-4\\\">\",\"            <label class=\\\"form-label\\\">Contact Person</label>\",\"            <input type=\\\"text\\\" name=\\\"contact_name\\\" class=\\\"form-control\\\" value=\\\"<?= h($party['contact_name']) ?>\\\">\",\"          </div>\",\"\",\"          <div class=\\\"col-sm-4\\\">\",\"            <label class=\\\"form-label\\\">Email</label>\",\"            <input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" value=\\\"<?= h($party['email']) ?>\\\">\",\"          </div>\",\"          <div class=\\\"col-sm-4\\\">\",\"            <label class=\\\"form-label\\\">Phone</label>\",\"            <input type=\\\"text\\\" name=\\\"phone\\\" class=\\\"form-control\\\" value=\\\"<?= h($party['phone']) ?>\\\">\",\"          </div>\",\"\",\"          <div class=\\\"col-sm-4\\\">\",\"            <label class=\\\"form-label\\\">GSTIN</label>\",\"            <div class=\\\"input-group\\\">\",\"              <input type=\\\"text\\\" name=\\\"gst_number\\\" id=\\\"gstin\\\" class=\\\"form-control\\\" value=\\\"<?= h($party['gst_number']) ?>\\\" maxlength=\\\"15\\\" placeholder=\\\"27ABCDE1234F1Z5\\\">\",\"              <button class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\" id=\\\"btnGST\\\">Verify</button>\",\"            </div>\",\"          </div>\",\"          <div class=\\\"col-sm-4\\\">\",\"            <label class=\\\"form-label\\\">GST State Code</label>\",\"            <input type=\\\"text\\\" name=\\\"gst_state_code\\\" class=\\\"form-control\\\" value=\\\"<?= h($party['gst_state_code']) ?>\\\" maxlength=\\\"2\\\">\",\"          </div>\",\"          <div class=\\\"col-sm-4\\\">\",\"            <label class=\\\"form-label\\\">GST Registration</label>\",\"            <select name=\\\"gst_registration_type\\\" class=\\\"form-select\\\">\",\"              <option value=\\\"\\\">\\u2014</option>\",\"              <?php foreach (['regular','composition','unregistered','consumer','sez'] as $opt): ?>\",\"                <option value=\\\"<?= h($opt) ?>\\\" <?= ($party['gst_registration_type']===$opt)?'selected':'' ?>><?= ucfirst($opt) ?></option>\",\"              <?php endforeach; ?>\",\"            </select>\",\"          </div>\",\"\",\"          <div class=\\\"col-sm-4\\\">\",\"            <label class=\\\"form-label\\\">PAN</label>\",\"            <input type=\\\"text\\\" name=\\\"pan_number\\\" class=\\\"form-control\\\" value=\\\"<?= h($party['pan_number']) ?>\\\" maxlength=\\\"20\\\">\",\"          </div>\",\"          <div class=\\\"col-sm-4\\\">\",\"            <label class=\\\"form-label\\\">MSME Udyam</label>\",\"            <input type=\\\"text\\\" name=\\\"msme_udyam\\\" class=\\\"form-control\\\" value=\\\"<?= h($party['msme_udyam']) ?>\\\">\",\"          </div>\",\"\",\"          <div class=\\\"col-12\\\"><hr></div>\",\"\",\"          <div class=\\\"col-sm-8\\\">\",\"            <label class=\\\"form-label\\\">Address Line 1</label>\",\"            <input type=\\\"text\\\" name=\\\"address_line1\\\" class=\\\"form-control\\\" value=\\\"<?= h($party['address_line1']) ?>\\\">\",\"          </div>\",\"          <div class=\\\"col-sm-8\\\">\",\"            <label class=\\\"form-label\\\">Address Line 2</label>\",\"            <input type=\\\"text\\\" name=\\\"address_line2\\\" class=\\\"form-control\\\" value=\\\"<?= h($party['address_line2']) ?>\\\">\",\"          </div>\",\"          <div class=\\\"col-sm-4\\\">\",\"            <label class=\\\"form-label\\\">City</label>\",\"            <input type=\\\"text\\\" name=\\\"city\\\" class=\\\"form-control\\\" value=\\\"<?= h($party['city']) ?>\\\">\",\"          </div>\",\"          <div class=\\\"col-sm-4\\\">\",\"            <label class=\\\"form-label\\\">State</label>\",\"            <input type=\\\"text\\\" name=\\\"state\\\" class=\\\"form-control\\\" value=\\\"<?= h($party['state']) ?>\\\">\",\"          </div>\",\"          <div class=\\\"col-sm-4\\\">\",\"            <label class=\\\"form-label\\\">Country</label>\",\"            <input type=\\\"text\\\" name=\\\"country\\\" class=\\\"form-control\\\" value=\\\"<?= h($party['country']) ?>\\\">\",\"          </div>\",\"          <div class=\\\"col-sm-4\\\">\",\"            <label class=\\\"form-label\\\">PIN</label>\",\"            <input type=\\\"text\\\" name=\\\"pincode\\\" class=\\\"form-control\\\" value=\\\"<?= h($party['pincode']) ?>\\\">\",\"          </div>\",\"\",\"          <div class=\\\"col-sm-4 form-check mt-4\\\">\",\"            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"status\\\" name=\\\"status\\\" value=\\\"1\\\" <?= ((int)$party['status']===1)?'checked':'' ?>>\",\"            <label class=\\\"form-check-label\\\" for=\\\"status\\\">Active</label>\",\"          </div>\",\"        </div>\",\"      </div>\",\"\",\"      <!-- COMMERCIALS -->\",\"      <div class=\\\"tab-pane fade\\\" id=\\\"tab-commercial\\\">\",\"        <div class=\\\"row g-3\\\">\",\"          <div class=\\\"col-sm-3\\\">\",\"            <label class=\\\"form-label\\\">Payment Terms (days)</label>\",\"            <input type=\\\"number\\\" name=\\\"payment_terms_days\\\" class=\\\"form-control\\\" value=\\\"<?= h((string)$commercial['payment_terms_days']) ?>\\\">\",\"          </div>\",\"          <div class=\\\"col-sm-3\\\">\",\"            <label class=\\\"form-label\\\">Credit Limit</label>\",\"            <input type=\\\"text\\\" name=\\\"credit_limit\\\" class=\\\"form-control\\\" value=\\\"<?= h((string)$commercial['credit_limit']) ?>\\\">\",\"          </div>\",\"          <div class=\\\"col-sm-3\\\">\",\"            <label class=\\\"form-label\\\">TDS Section</label>\",\"            <input type=\\\"text\\\" name=\\\"tds_section\\\" class=\\\"form-control\\\" value=\\\"<?= h((string)$commercial['tds_section']) ?>\\\" placeholder=\\\"194C\\\">\",\"          </div>\",\"          <div class=\\\"col-sm-3\\\">\",\"            <label class=\\\"form-label\\\">TDS Rate (%)</label>\",\"            <input type=\\\"text\\\" name=\\\"tds_rate\\\" class=\\\"form-control\\\" value=\\\"<?= h((string)$commercial['tds_rate']) ?>\\\">\",\"          </div>\",\"\",\"          <div class=\\\"col-sm-3 form-check mt-4\\\">\",\"            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"tcs_applicable\\\" name=\\\"tcs_applicable\\\" value=\\\"1\\\" <?= $commercial['tcs_applicable']? 'checked':'' ?>>\",\"            <label class=\\\"form-check-label\\\" for=\\\"tcs_applicable\\\">TCS Applicable</label>\",\"          </div>\",\"          <div class=\\\"col-sm-3 form-check mt-4\\\">\",\"            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"e_invoice_required\\\" name=\\\"e_invoice_required\\\" value=\\\"1\\\" <?= $commercial['e_invoice_required']? 'checked':'' ?>>\",\"            <label class=\\\"form-check-label\\\" for=\\\"e_invoice_required\\\">E-Invoice Required</label>\",\"          </div>\",\"          <div class=\\\"col-sm-3 form-check mt-4\\\">\",\"            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"reverse_charge_applicable\\\" name=\\\"reverse_charge_applicable\\\" value=\\\"1\\\" <?= $commercial['reverse_charge_applicable']? 'checked':'' ?>>\",\"            <label class=\\\"form-check-label\\\" for=\\\"reverse_charge_applicable\\\">Reverse Charge</label>\",\"          </div>\",\"\",\"          <div class=\\\"col-sm-6\\\">\",\"            <label class=\\\"form-label\\\">Default Place of Supply</label>\",\"            <input type=\\\"text\\\" name=\\\"default_place_of_supply\\\" class=\\\"form-control\\\" value=\\\"<?= h((string)$commercial['default_place_of_supply']) ?>\\\">\",\"          </div>\",\"        </div>\",\"      </div>\",\"\",\"      <!-- BANKS -->\",\"      <div class=\\\"tab-pane fade\\\" id=\\\"tab-banks\\\">\",\"        <div class=\\\"d-flex justify-content-between align-items-center mb-2\\\">\",\"          <strong>Bank Accounts</strong>\",\"          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-primary\\\" id=\\\"addBank\\\"><i class=\\\"bi bi-plus\\\"></i> Add</button>\",\"        </div>\",\"        <div class=\\\"table-responsive\\\">\",\"          <table class=\\\"table table-sm align-middle\\\" id=\\\"bankTable\\\">\",\"            <thead class=\\\"table-light\\\">\",\"              <tr>\",\"                <th>Beneficiary</th>\",\"                <th>Bank</th>\",\"                <th>Branch</th>\",\"                <th>Account #</th>\",\"                <th>IFSC</th>\",\"                <th>Type</th>\",\"                <th>Primary</th>\",\"                <th style=\\\"width:48px;\\\"></th>\",\"              </tr>\",\"            </thead>\",\"            <tbody>\",\"              <?php $i=0; if ($banks): foreach ($banks as $b): ?>\",\"                <tr>\",\"                  <td>\",\"                    <input type=\\\"hidden\\\" name=\\\"bank_id[]\\\" value=\\\"<?= (int)$b['id'] ?>\\\">\",\"                    <input type=\\\"text\\\" name=\\\"beneficiary_name[]\\\" class=\\\"form-control form-control-sm\\\" value=\\\"<?= h((string)$b['beneficiary_name']) ?>\\\">\",\"                  </td>\",\"                  <td><input type=\\\"text\\\" name=\\\"bank_name[]\\\" class=\\\"form-control form-control-sm\\\" value=\\\"<?= h((string)$b['bank_name']) ?>\\\"></td>\",\"                  <td><input type=\\\"text\\\" name=\\\"branch[]\\\" class=\\\"form-control form-control-sm\\\" value=\\\"<?= h((string)$b['branch']) ?>\\\"></td>\",\"                  <td><input type=\\\"text\\\" name=\\\"account_number[]\\\" class=\\\"form-control form-control-sm\\\" value=\\\"<?= h((string)$b['account_number']) ?>\\\"></td>\",\"                  <td><input type=\\\"text\\\" name=\\\"ifsc[]\\\" class=\\\"form-control form-control-sm\\\" value=\\\"<?= h((string)$b['ifsc']) ?>\\\"></td>\",\"                  <td>\",\"                    <select name=\\\"account_type[]\\\" class=\\\"form-select form-select-sm\\\">\",\"                      <?php foreach (['current','savings','overdraft','other'] as $opt): ?>\",\"                        <option value=\\\"<?= $opt ?>\\\" <?= ((string)$b['account_type']===$opt?'selected':'') ?>><?= ucfirst($opt) ?></option>\",\"                      <?php endforeach; ?>\",\"                    </select>\",\"                  </td>\",\"                  <td class=\\\"text-center\\\">\",\"                    <input type=\\\"radio\\\" name=\\\"bank_is_primary[<?= $i ?>]\\\" class=\\\"form-check-input\\\" <?= ((int)$b['is_primary']===1?'checked':'') ?>>\",\"                  </td>\",\"                  <td><button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-danger delRow\\\">&times;</button></td>\",\"                </tr>\",\"              <?php $i++; endforeach; endif; ?>\",\"              <!-- empty rows via JS -->\",\"            </tbody>\",\"          </table>\",\"        </div>\",\"      </div>\",\"\",\"      <!-- CONTACTS -->\",\"      <div class=\\\"tab-pane fade\\\" id=\\\"tab-contacts\\\">\",\"        <div class=\\\"d-flex justify-content-between align-items-center mb-2\\\">\",\"          <strong>Contacts</strong>\",\"          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-primary\\\" id=\\\"addContact\\\"><i class=\\\"bi bi-plus\\\"></i> Add</button>\",\"        </div>\",\"        <div class=\\\"table-responsive\\\">\",\"          <table class=\\\"table table-sm align-middle\\\" id=\\\"contactTable\\\">\",\"            <thead class=\\\"table-light\\\">\",\"              <tr>\",\"                <th>Name</th>\",\"                <th>Email</th>\",\"                <th>Phone</th>\",\"                <th>Role</th>\",\"                <th>Primary</th>\",\"                <th style=\\\"width:48px;\\\"></th>\",\"              </tr>\",\"            </thead>\",\"            <tbody>\",\"              <?php $j=0; if ($contacts): foreach ($contacts as $c): ?>\",\"                <tr>\",\"                  <td>\",\"                    <input type=\\\"hidden\\\" name=\\\"contact_id[]\\\" value=\\\"<?= (int)$c['id'] ?>\\\">\",\"                    <input type=\\\"text\\\" name=\\\"contact_name[]\\\" class=\\\"form-control form-control-sm\\\" value=\\\"<?= h((string)$c['name']) ?>\\\">\",\"                  </td>\",\"                  <td><input type=\\\"email\\\" name=\\\"contact_email[]\\\" class=\\\"form-control form-control-sm\\\" value=\\\"<?= h((string)$c['email']) ?>\\\"></td>\",\"                  <td><input type=\\\"text\\\" name=\\\"contact_phone[]\\\" class=\\\"form-control form-control-sm\\\" value=\\\"<?= h((string)$c['phone']) ?>\\\"></td>\",\"                  <td><input type=\\\"text\\\" name=\\\"contact_role_title[]\\\" class=\\\"form-control form-control-sm\\\" value=\\\"<?= h((string)$c['role_title']) ?>\\\"></td>\",\"                  <td class=\\\"text-center\\\">\",\"                    <input type=\\\"radio\\\" name=\\\"contact_is_primary[<?= $j ?>]\\\" class=\\\"form-check-input\\\" <?= ((int)$c['is_primary']===1?'checked':'') ?>>\",\"                  </td>\",\"                  <td><button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-danger delRow\\\">&times;</button></td>\",\"                </tr>\",\"              <?php $j++; endforeach; endif; ?>\",\"            </tbody>\",\"          </table>\",\"        </div>\",\"      </div>\",\"\",\"      <!-- ATTACHMENTS -->\",\"      <?php if ($isEdit): ?>\",\"      <div class=\\\"tab-pane fade\\\" id=\\\"tab-attachments\\\">\",\"        <div class=\\\"card shadow-sm\\\">\",\"          <div class=\\\"card-body\\\">\",\"            <?php @include __DIR__ . '/../attachments/panel.php'; ?>\",\"          </div>\",\"        </div>\",\"      </div>\",\"      <?php endif; ?>\",\"    </div>\",\"\",\"    <div class=\\\"d-grid gap-2 d-sm-flex justify-content-end mt-3\\\">\",\"      <button class=\\\"btn btn-primary\\\"><i class=\\\"bi bi-save\\\"></i> Save</button>\",\"      <a class=\\\"btn btn-outline-secondary\\\" href=\\\"parties_list.php\\\">Cancel</a>\",\"    </div>\",\"  </form>\",\"</div>\",\"<?php include __DIR__ . '/../ui/layout_end.php'; ?>\",\"\",\"<script>\",\"/** Auto-code preview */\",\"document.getElementById('btnGen')?.addEventListener('click', async function(){\",\"  const typeSel = document.querySelector('select[name=\\\"type\\\"]');\",\"  const type = typeSel ? typeSel.value : '';\",\"  try {\",\"    const res = await fetch('party_next_code.php?type=' + encodeURIComponent(type));\",\"    const js = await res.json();\",\"    if (js.ok) document.querySelector('input[name=\\\"code\\\"]').value = js.code;\",\"    else alert(js.message || 'Failed to generate');\",\"  } catch (e) { alert('Network error'); }\",\"});\",\"\",\"/** GST helper */\",\"document.getElementById('btnGST')?.addEventListener('click', async function(){\",\"  const gstin = (document.getElementById('gstin')?.value || '').trim().toUpperCase();\",\"  if (!gstin) { alert('Enter GSTIN'); return; }\",\"  try {\",\"    const res = await fetch('party_gst_lookup.php?gstin=' + encodeURIComponent(gstin));\",\"    const js = await res.json();\",\"    if (js.ok) {\",\"      if (js.state_code) document.querySelector('input[name=\\\"gst_state_code\\\"]').value = js.state_code;\",\"      if (js.legal_name)  document.querySelector('input[name=\\\"legal_name\\\"]').value  = js.legal_name;\",\"    } else alert(js.message || 'GST lookup failed');\",\"  } catch (e) { alert('Network error'); }\",\"});\",\"\",\"/** Dynamic rows: Banks */\",\"(function(){\",\"  const tbody = document.querySelector('#bankTable tbody');\",\"  const addBtn = document.getElementById('addBank');\",\"  addBtn?.addEventListener('click', () => {\",\"    const idx = Date.now();\",\"    const tr = document.createElement('tr');\",\"    tr.innerHTML = `\",\"      <td><input type=\\\"hidden\\\" name=\\\"bank_id[]\\\" value=\\\"0\\\">\",\"          <input type=\\\"text\\\" name=\\\"beneficiary_name[]\\\" class=\\\"form-control form-control-sm\\\"></td>\",\"      <td><input type=\\\"text\\\" name=\\\"bank_name[]\\\" class=\\\"form-control form-control-sm\\\"></td>\",\"      <td><input type=\\\"text\\\" name=\\\"branch[]\\\" class=\\\"form-control form-control-sm\\\"></td>\",\"      <td><input type=\\\"text\\\" name=\\\"account_number[]\\\" class=\\\"form-control form-control-sm\\\"></td>\",\"      <td><input type=\\\"text\\\" name=\\\"ifsc[]\\\" class=\\\"form-control form-control-sm\\\"></td>\",\"      <td>\",\"        <select name=\\\"account_type[]\\\" class=\\\"form-select form-select-sm\\\">\",\"          <option value=\\\"current\\\">Current</option>\",\"          <option value=\\\"savings\\\">Savings</option>\",\"          <option value=\\\"overdraft\\\">Overdraft</option>\",\"          <option value=\\\"other\\\">Other</option>\",\"        </select>\",\"      </td>\",\"      <td class=\\\"text-center\\\"><input type=\\\"radio\\\" name=\\\"bank_is_primary[${idx}]\\\" class=\\\"form-check-input\\\"></td>\",\"      <td><button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-danger delRow\\\">&times;</button></td>\",\"    `;\",\"    tbody.appendChild(tr);\",\"  });\",\"  tbody?.addEventListener('click', (e) => {\",\"    if (e.target.closest('.delRow')) e.target.closest('tr').remove();\",\"  });\",\"})();\",\"\",\"/** Dynamic rows: Contacts */\",\"(function(){\",\"  const tbody = document.querySelector('#contactTable tbody');\",\"  const addBtn = document.getElementById('addContact');\",\"  addBtn?.addEventListener('click', () => {\",\"    const idx = Date.now();\",\"    const tr = document.createElement('tr');\",\"    tr.innerHTML = `\",\"      <td><input type=\\\"hidden\\\" name=\\\"contact_id[]\\\" value=\\\"0\\\">\",\"          <input type=\\\"text\\\" name=\\\"contact_name[]\\\" class=\\\"form-control form-control-sm\\\"></td>\",\"      <td><input type=\\\"email\\\" name=\\\"contact_email[]\\\" class=\\\"form-control form-control-sm\\\"></td>\",\"      <td><input type=\\\"text\\\" name=\\\"contact_phone[]\\\" class=\\\"form-control form-control-sm\\\"></td>\",\"      <td><input type=\\\"text\\\" name=\\\"contact_role_title[]\\\" class=\\\"form-control form-control-sm\\\"></td>\",\"      <td class=\\\"text-center\\\"><input type=\\\"radio\\\" name=\\\"contact_is_primary[${idx}]\\\" class=\\\"form-check-input\\\"></td>\",\"      <td><button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-danger delRow\\\">&times;</button></td>\",\"    `;\",\"    tbody.appendChild(tr);\",\"  });\",\"  tbody?.addEventListener('click', (e) => {\",\"    if (e.target.closest('.delRow')) e.target.closest('tr').remove();\",\"  });\",\"})();\",\"</script>\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/parties/party_next_code.php\": [\"<?php\",\"/** PATH: /public_html/parties/party_next_code.php */\",\"declare(strict_types=1);\",\"\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"\",\"header('Content-Type: application/json');\",\"\",\"try {\",\"  require_login();\",\"\",\"  $type = strtolower(trim((string)($_GET['type'] ?? 'supplier')));\",\"  $valid = ['client','supplier','contractor','other'];\",\"  if (!in_array($type, $valid, true)) { throw new RuntimeException('Invalid type'); }\",\"\",\"  $pdo = db();\",\"\",\"  // Prefix from meta (fallback map)\",\"  $st = $pdo->prepare(\\\"SELECT code_prefix FROM party_type_meta WHERE type=?\\\");\",\"  $st->execute([$type]);\",\"  $prefix = (string)($st->fetchColumn() ?: '');\",\"  if ($prefix === '') {\",\"    $map = ['client'=>'CL','supplier'=>'SP','contractor'=>'CT','other'=>'OT'];\",\"    $prefix = $map[$type] ?? 'PT';\",\"  }\",\"\",\"  // Peek next (NO INCREMENT here)\",\"  $scope = 'party:' . $prefix;\",\"  $row = $pdo->prepare(\\\"SELECT current_value FROM party_sequences WHERE scope=?\\\");\",\"  $row->execute([$scope]);\",\"  $cur = (int)($row->fetchColumn() ?: 0);\",\"  $next = $cur + 1;\",\"\",\"  // Preserve historical hyphen style per prefix (e.g., CL-0001 vs SP0023)\",\"  $cst = $pdo->prepare(\\\"SELECT code FROM parties WHERE code LIKE ? ORDER BY id DESC LIMIT 1\\\");\",\"  $cst->execute([$prefix . '%']);\",\"  $last = (string)($cst->fetchColumn() ?: '');\",\"  $hyphen = $last && strpos($last, '-') !== false;\",\"  if (!$last && $type === 'client') $hyphen = true;\",\"\",\"  $code = $prefix . ($hyphen?'-':'') . str_pad((string)$next, 4, '0', STR_PAD_LEFT);\",\"\",\"  echo json_encode(['ok'=>true,'code'=>$code]);\",\"} catch (Throwable $e) {\",\"  echo json_encode(['ok'=>false,'message'=>$e->getMessage()]);\",\"}\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/parties/parties_list.php\": [\"<?php\",\"/** PATH: /public_html/parties/parties_list.php */\",\"declare(strict_types=1);\",\"\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"\",\"require_login();\",\"require_permission('parties.view');\",\"\",\"$pdo = db();\",\"\",\"$q = trim($_GET['q'] ?? '');\",\"$type = trim($_GET['type'] ?? '');\",\"$types = ['client','supplier','contractor','other'];\",\"if ($type !== '' && !in_array($type, $types, true)) $type = '';\",\"\",\"// Build WHERE dynamically (avoid collation issues)\",\"$where = [];\",\"$params = [];\",\"if ($q !== '') {\",\"  $where[] = \\\"(name LIKE ? OR code LIKE ? OR phone LIKE ? OR gst_number LIKE ? OR city LIKE ? OR state LIKE ?)\\\";\",\"  $like = '%'.$q.'%';\",\"  array_push($params, $like,$like,$like,$like,$like,$like);\",\"}\",\"if ($type !== '') { $where[] = \\\"type = ?\\\"; $params[] = $type; }\",\"\",\"$sql = \\\"SELECT id, code, name, type, phone, gst_number, city, state, status\",\"        FROM parties\\\"\",\"      . (count($where) ? \\\" WHERE \\\".implode(\\\" AND \\\", $where) : \\\"\\\")\",\"      . \\\" ORDER BY id DESC LIMIT 200\\\";\",\"\",\"$st = $pdo->prepare($sql);\",\"$st->execute($params);\",\"$rows = $st->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"$pageTitle = 'Parties';\",\"include __DIR__ . '/../ui/layout_start.php';\",\"?>\",\"<div class=\\\"container-fluid py-3\\\">\",\"  <div class=\\\"d-flex align-items-center justify-content-between mb-3\\\">\",\"    <h1 class=\\\"h4 mb-0\\\"><?= h($pageTitle) ?></h1>\",\"    <div class=\\\"d-flex gap-2\\\">\",\"      <?php if (has_permission('parties.manage')): ?>\",\"        <a href=\\\"parties_form.php\\\" class=\\\"btn btn-primary btn-sm\\\"><i class=\\\"bi bi-plus-circle\\\"></i> New Party</a>\",\"      <?php endif; ?>\",\"    </div>\",\"  </div>\",\"\",\"  <form class=\\\"row g-2 mb-3\\\" method=\\\"get\\\" action=\\\"\\\">\",\"    <div class=\\\"col-sm-5 col-md-4 col-lg-3\\\">\",\"      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"q\\\" value=\\\"<?= h($q) ?>\\\" placeholder=\\\"Search name, code, phone, GST, city, state\\\">\",\"    </div>\",\"    <div class=\\\"col-sm-4 col-md-3 col-lg-2\\\">\",\"      <select name=\\\"type\\\" class=\\\"form-select\\\">\",\"        <option value=\\\"\\\">All types</option>\",\"        <?php foreach ($types as $t): ?>\",\"          <option value=\\\"<?= h($t) ?>\\\" <?= $type===$t?'selected':'' ?>><?= ucfirst($t) ?></option>\",\"        <?php endforeach; ?>\",\"      </select>\",\"    </div>\",\"    <div class=\\\"col-auto\\\">\",\"      <button class=\\\"btn btn-outline-secondary\\\"><i class=\\\"bi bi-search\\\"></i> Filter</button>\",\"    </div>\",\"  </form>\",\"\",\"  <?php if (empty($rows)): ?>\",\"    <div class=\\\"alert alert-warning\\\">No parties found.</div>\",\"  <?php else: ?>\",\"    <div class=\\\"table-responsive\\\">\",\"      <table class=\\\"table table-sm align-middle\\\">\",\"        <thead class=\\\"table-light\\\">\",\"          <tr>\",\"            <th style=\\\"width:120px\\\">Code</th>\",\"            <th>Name</th>\",\"            <th style=\\\"width:120px\\\">Type</th>\",\"            <th style=\\\"width:140px\\\">Phone</th>\",\"            <th style=\\\"width:160px\\\">GST</th>\",\"            <th style=\\\"width:180px\\\">Location</th>\",\"            <th style=\\\"width:90px\\\">Status</th>\",\"            <th style=\\\"width:140px\\\">Actions</th>\",\"          </tr>\",\"        </thead>\",\"        <tbody>\",\"          <?php foreach ($rows as $r): ?>\",\"            <tr>\",\"              <td><span class=\\\"badge bg-secondary-subtle border text-body\\\"><?= h($r['code']) ?></span></td>\",\"              <td><?= h($r['name']) ?></td>\",\"              <td><?= ucfirst(h($r['type'])) ?></td>\",\"              <td><?= h($r['phone'] ?? '') ?></td>\",\"              <td><?= h($r['gst_number'] ?? '') ?></td>\",\"              <td><?= h(trim(($r['city'] ?? '') . ', ' . ($r['state'] ?? ''), ', ')) ?></td>\",\"              <td>\",\"                <?php if ((int)$r['status'] === 1): ?>\",\"                  <span class=\\\"badge bg-success-subtle border text-success-emphasis\\\">Active</span>\",\"                <?php else: ?>\",\"                  <span class=\\\"badge bg-secondary-subtle border text-body\\\">Inactive</span>\",\"                <?php endif; ?>\",\"              </td>\",\"              <td>\",\"                <div class=\\\"btn-group btn-group-sm\\\">\",\"                  <?php if (has_permission('parties.manage')): ?>\",\"                    <a class=\\\"btn btn-outline-secondary\\\" href=\\\"parties_form.php?id=<?= (int)$r['id'] ?>\\\" title=\\\"Edit\\\">\",\"                      <i class=\\\"bi bi-pencil-square\\\"></i> Edit\",\"                    </a>\",\"                  <?php endif; ?>\",\"                </div>\",\"              </td>\",\"            </tr>\",\"          <?php endforeach; ?>\",\"        </tbody>\",\"      </table>\",\"    </div>\",\"  <?php endif; ?>\",\"</div>\",\"<?php include __DIR__ . '/../ui/layout_end.php'; ?>\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/file_report.php\": [\"<?php\",\"declare(strict_types=1);\",\"// file_report.php\",\"// Usage: place in the folder you want to scan and open in browser.\",\"// Options (GET):\",\"//  - path=/absolute/or/relative/path  (default: current directory)\",\"//  - format=html|csv|json              (default: html)\",\"//  - max_depth=N                       (default: 0 = unlimited)\",\"//  - hide_dotfiles=1                   (hide files/dirs starting with .)\",\"//  - follow_symlinks=1                 (follow symlinks; default no)\",\"//  - download=1                        (force download for csv/json)\",\"// Example: file_report.php?format=csv&hide_dotfiles=1\",\"\",\"set_time_limit(0);\",\"ini_set('memory_limit', '-1');\",\"\",\"$root = (string)($_GET['path'] ?? getcwd());\",\"$format = (string)($_GET['format'] ?? 'html');\",\"$maxDepth = isset($_GET['max_depth']) ? (int)$_GET['max_depth'] : 0;\",\"$hideDot = isset($_GET['hide_dotfiles']) && in_array($_GET['hide_dotfiles'], ['1','true','on'], true);\",\"$followLinks = isset($_GET['follow_symlinks']) && in_array($_GET['follow_symlinks'], ['1','true','on'], true);\",\"\",\"// Validate path\",\"if (!is_dir($root)) {\",\"    http_response_code(400);\",\"    echo \\\"Path not found or not a directory: \\\" . htmlspecialchars($root);\",\"    exit;\",\"}\",\"\",\"// Helper: human readable size\",\"function hrsize(float $bytes): string {\",\"    $units = ['B','KB','MB','GB','TB'];\",\"    $i = 0;\",\"    while ($bytes >= 1024 && $i < count($units)-1) { $bytes /= 1024; $i++; }\",\"    return round($bytes, ($i ? 2 : 0)) . ' ' . $units[$i];\",\"}\",\"\",\"// Recursively walk directory\",\"function scan_dir(string $root, bool $hideDot, int $maxDepth, bool $followLinks): array {\",\"    $results = [];\",\"    // Iterator flags\",\"    $flags = \\\\FilesystemIterator::SKIP_DOTS;\",\"    if ($followLinks) $flags |= \\\\FilesystemIterator::FOLLOW_SYMLINKS;\",\"    $directory = new \\\\RecursiveDirectoryIterator($root, $flags);\",\"\",\"    if ($maxDepth > 0) {\",\"        $iter = new \\\\RecursiveIteratorIterator($directory, \\\\RecursiveIteratorIterator::SELF_FIRST);\",\"        $iter->setMaxDepth($maxDepth);\",\"    } else {\",\"        $iter = new \\\\RecursiveIteratorIterator($directory, \\\\RecursiveIteratorIterator::SELF_FIRST);\",\"    }\",\"\",\"    foreach ($iter as $fileinfo) {\",\"        /** @var SplFileInfo $fileinfo */\",\"        $path = $fileinfo->getPathname();\",\"        $basename = $fileinfo->getBasename();\",\"        if ($hideDot && strlen($basename) > 0 && $basename[0] === '.') continue;\",\"\",\"        // Skip broken symlinks if followLinks is false (RecursiveDirectoryIterator will already handle)\",\"        if ($fileinfo->isLink() && !$followLinks) {\",\"            // treat as file entry with link info\",\"            $results[] = [\",\"                'type' => 'link',\",\"                'path' => $path,\",\"                'name' => $basename,\",\"                'size' => 0,\",\"                'modified' => date('c', $fileinfo->getMTime() ?: time()),\",\"                'perms' => substr(sprintf('%o', $fileinfo->getPerms()), -4),\",\"                'is_dir' => $fileinfo->isDir(),\",\"            ];\",\"            continue;\",\"        }\",\"\",\"        $isDir = $fileinfo->isDir();\",\"        $size = $isDir ? 0.0 : (float)$fileinfo->getSize();\",\"        $results[] = [\",\"            'type' => $isDir ? 'dir' : 'file',\",\"            'path' => $path,\",\"            'name' => $basename,\",\"            'size' => $size,\",\"            'modified' => date('c', $fileinfo->getMTime()),\",\"            'perms' => substr(sprintf('%o', $fileinfo->getPerms()), -4),\",\"            'is_dir' => $isDir,\",\"        ];\",\"    }\",\"\",\"    return $results;\",\"}\",\"\",\"// Collect results\",\"$items = scan_dir($root, $hideDot, $maxDepth, $followLinks);\",\"$totalFiles = 0;\",\"$totalDirs = 0;\",\"$totalBytes = 0.0;\",\"foreach ($items as $it) {\",\"    if ($it['type'] === 'dir') $totalDirs++;\",\"    else $totalFiles++;\",\"    $totalBytes += $it['size'];\",\"}\",\"\",\"// Output in requested format\",\"if ($format === 'csv' || $format === 'json') {\",\"    $download = isset($_GET['download']) && in_array($_GET['download'], ['1','true','on'], true);\",\"    if ($format === 'csv') {\",\"        if ($download) {\",\"            header('Content-Type: text/csv; charset=utf-8');\",\"            header('Content-Disposition: attachment; filename=\\\"file_report.csv\\\"');\",\"        } else {\",\"            header('Content-Type: text/csv; charset=utf-8');\",\"        }\",\"        $out = fopen('php://output', 'w');\",\"        fputcsv($out, ['type','path','name','size_bytes','size_readable','modified','perms','is_dir']);\",\"        foreach ($items as $r) {\",\"            fputcsv($out, [\",\"                $r['type'],\",\"                $r['path'],\",\"                $r['name'],\",\"                (string)$r['size'],\",\"                hrsize($r['size']),\",\"                $r['modified'],\",\"                $r['perms'],\",\"                $r['is_dir'] ? '1':'0'\",\"            ]);\",\"        }\",\"        fclose($out);\",\"        exit;\",\"    } else { // json\",\"        if ($download) {\",\"            header('Content-Type: application/json; charset=utf-8');\",\"            header('Content-Disposition: attachment; filename=\\\"file_report.json\\\"');\",\"        } else {\",\"            header('Content-Type: application/json; charset=utf-8');\",\"        }\",\"        echo json_encode([\",\"            'scanned_at' => date('c'),\",\"            'root' => $root,\",\"            'summary' => [\",\"                'files' => $totalFiles,\",\"                'directories' => $totalDirs,\",\"                'total_bytes' => $totalBytes,\",\"                'total_readable' => hrsize($totalBytes)\",\"            ],\",\"            'items' => $items\",\"        ], JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES);\",\"        exit;\",\"    }\",\"}\",\"\",\"// Default: HTML output (Bootstrap 5)\",\"?><!doctype html>\",\"<html lang=\\\"en\\\">\",\"<head>\",\"  <meta charset=\\\"utf-8\\\">\",\"  <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\">\",\"  <title>File report \\u2014 <?= htmlspecialchars($root) ?></title>\",\"  <link href=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\">\",\"  <style>\",\"    body { padding: 18px; }\",\"    pre.small { font-size: .85rem; white-space: pre-wrap; }\",\"    .mono { font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, \\\"Roboto Mono\\\", monospace; font-size:.9rem; }\",\"    td.path { max-width: 520px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }\",\"  </style>\",\"</head>\",\"<body>\",\"<div class=\\\"container-fluid\\\">\",\"  <div class=\\\"d-flex align-items-center mb-3\\\">\",\"    <h3 class=\\\"me-auto\\\">File report</h3>\",\"    <div class=\\\"text-muted\\\">Scanned: <strong><?= date('Y-m-d H:i:s') ?></strong></div>\",\"  </div>\",\"\",\"  <div class=\\\"card mb-3\\\">\",\"    <div class=\\\"card-body\\\">\",\"      <form class=\\\"row g-2\\\" method=\\\"get\\\">\",\"        <div class=\\\"col-md-6\\\">\",\"          <label class=\\\"form-label\\\">Path to scan</label>\",\"          <input name=\\\"path\\\" class=\\\"form-control mono\\\" value=\\\"<?= htmlspecialchars($root) ?>\\\">\",\"          <div class=\\\"form-text\\\">Absolute or relative path. Default is current directory (where script lives).</div>\",\"        </div>\",\"\",\"        <div class=\\\"col-md-2\\\">\",\"          <label class=\\\"form-label\\\">Format</label>\",\"          <select name=\\\"format\\\" class=\\\"form-select\\\">\",\"            <option value=\\\"html\\\" <?= $format==='html'?'selected':'' ?>>HTML</option>\",\"            <option value=\\\"csv\\\" <?= $format==='csv'?'selected':'' ?>>CSV</option>\",\"            <option value=\\\"json\\\" <?= $format==='json'?'selected':'' ?>>JSON</option>\",\"          </select>\",\"        </div>\",\"\",\"        <div class=\\\"col-md-1\\\">\",\"          <label class=\\\"form-label\\\">Max depth</label>\",\"          <input name=\\\"max_depth\\\" type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" value=\\\"<?= $maxDepth ?>\\\">\",\"        </div>\",\"\",\"        <div class=\\\"col-md-1\\\">\",\"          <label class=\\\"form-label\\\">Hide dotfiles</label>\",\"          <select name=\\\"hide_dotfiles\\\" class=\\\"form-select\\\">\",\"            <option value=\\\"0\\\" <?= !$hideDot?'selected':'' ?>>No</option>\",\"            <option value=\\\"1\\\" <?= $hideDot?'selected':'' ?>>Yes</option>\",\"          </select>\",\"        </div>\",\"\",\"        <div class=\\\"col-md-2 d-flex align-items-end gap-2\\\">\",\"          <button class=\\\"btn btn-primary\\\">Scan</button>\",\"          <a class=\\\"btn btn-outline-secondary\\\" href=\\\"?<?= http_build_query(array_merge($_GET, ['format'=>'csv','download'=>'1'])) ?>\\\">Download CSV</a>\",\"          <a class=\\\"btn btn-outline-secondary\\\" href=\\\"?<?= http_build_query(array_merge($_GET, ['format'=>'json','download'=>'1'])) ?>\\\">Download JSON</a>\",\"        </div>\",\"      </form>\",\"    </div>\",\"  </div>\",\"\",\"  <div class=\\\"row mb-3\\\">\",\"    <div class=\\\"col\\\">\",\"      <div class=\\\"card\\\">\",\"        <div class=\\\"card-body\\\">\",\"          <h5 class=\\\"card-title\\\">Summary</h5>\",\"          <div class=\\\"row\\\">\",\"            <div class=\\\"col-sm-3\\\"><strong>Root</strong><div class=\\\"mono small\\\"><?= htmlspecialchars($root) ?></div></div>\",\"            <div class=\\\"col-sm-2\\\"><strong>Files</strong><div><?= number_format($totalFiles) ?></div></div>\",\"            <div class=\\\"col-sm-2\\\"><strong>Directories</strong><div><?= number_format($totalDirs) ?></div></div>\",\"            <div class=\\\"col-sm-2\\\"><strong>Total size</strong><div><?= hrsize($totalBytes) ?></div></div>\",\"            <div class=\\\"col-sm-3\\\"><strong>Options</strong>\",\"              <div class=\\\"small\\\">Max depth: <?= $maxDepth ?: 'unlimited' ?><br>Hide dotfiles: <?= $hideDot ? 'yes' : 'no' ?></div>\",\"            </div>\",\"          </div>\",\"        </div>\",\"      </div>\",\"    </div>\",\"  </div>\",\"\",\"  <div class=\\\"table-responsive\\\" style=\\\"max-height:60vh; overflow:auto;\\\">\",\"    <table class=\\\"table table-sm table-hover align-middle\\\">\",\"      <thead class=\\\"table-light sticky-top\\\">\",\"        <tr>\",\"          <th>Type</th>\",\"          <th>Path</th>\",\"          <th>Name</th>\",\"          <th class=\\\"text-end\\\">Size</th>\",\"          <th>Modified</th>\",\"          <th>Perms</th>\",\"        </tr>\",\"      </thead>\",\"      <tbody>\",\"        <?php foreach ($items as $r): ?>\",\"          <tr>\",\"            <td class=\\\"align-middle\\\">\",\"              <?php if ($r['type'] === 'dir'): ?>\",\"                <span class=\\\"badge bg-primary\\\">DIR</span>\",\"              <?php elseif ($r['type'] === 'link'): ?>\",\"                <span class=\\\"badge bg-warning text-dark\\\">LINK</span>\",\"              <?php else: ?>\",\"                <span class=\\\"badge bg-secondary\\\">FILE</span>\",\"              <?php endif; ?>\",\"            </td>\",\"            <td class=\\\"path mono\\\" title=\\\"<?= htmlspecialchars($r['path']) ?>\\\"><?= htmlspecialchars($r['path']) ?></td>\",\"            <td><?= htmlspecialchars($r['name']) ?></td>\",\"            <td class=\\\"text-end\\\"><?= $r['is_dir'] ? '-' : hrsize($r['size']) ?></td>\",\"            <td><?= htmlspecialchars($r['modified']) ?></td>\",\"            <td><?= htmlspecialchars($r['perms']) ?></td>\",\"          </tr>\",\"        <?php endforeach; ?>\",\"      </tbody>\",\"    </table>\",\"  </div>\",\"\",\"  <footer class=\\\"text-muted small mt-3\\\">\",\"    Run locally. Scan can be slow for very large trees. If you want, I can add filters (extensions only), grouping by folder, or a CSV scheduled export.\",\"  </footer>\",\"</div>\",\"\",\"<script src=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\\\"></script>\",\"</body>\",\"</html>\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/diag_min.php\": [\"<?php\",\"// PATH: /public_html/_diag_min.php\",\"header('Content-Type: text/plain; charset=utf-8');\",\"echo \\\"PHP works\\\\n\\\";\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/ui/partials/notifications_bell.php\": [\"<?php\",\"declare(strict_types=1);\",\"/**\",\" * Pure UI notifications bell. No DB calls here.\",\" * If $unread_count and $unread_items are set by the page, we render them.\",\" * Otherwise, show a graceful empty state.\",\" */\",\"$unread_count = isset($unread_count) && is_numeric($unread_count) ? (int)$unread_count : 0;\",\"$items = isset($unread_items) && is_array($unread_items) ? $unread_items : [];\",\"?>\",\"<div class=\\\"dropdown\\\">\",\"  <a class=\\\"btn btn-outline-secondary btn-sm position-relative\\\" href=\\\"#\\\" id=\\\"notifDropdown\\\"\",\"     role=\\\"button\\\" data-bs-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\" title=\\\"Notifications\\\">\",\"    <i class=\\\"bi bi-bell\\\"></i>\",\"    <?php if ($unread_count > 0): ?>\",\"      <span class=\\\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\\\">\",\"        <?= (int)$unread_count ?>\",\"      </span>\",\"    <?php endif; ?>\",\"  </a>\",\"  <div class=\\\"dropdown-menu dropdown-menu-end p-0 shadow\\\" aria-labelledby=\\\"notifDropdown\\\" style=\\\"min-width: 360px;\\\">\",\"    <div class=\\\"list-group list-group-flush\\\">\",\"      <?php if (!$unread_count || empty($items)): ?>\",\"        <div class=\\\"p-3 text-muted\\\">No new notifications.</div>\",\"      <?php else: ?>\",\"        <?php foreach ($items as $n): ?>\",\"          <div class=\\\"list-group-item\\\">\",\"            <div class=\\\"d-flex justify-content-between align-items-start\\\">\",\"              <div class=\\\"me-2\\\">\",\"                <div class=\\\"fw-semibold\\\"><?= htmlspecialchars((string)($n['title'] ?? 'Notification'), ENT_QUOTES, 'UTF-8') ?></div>\",\"                <small class=\\\"text-muted\\\"><?= htmlspecialchars((string)($n['time'] ?? ''), ENT_QUOTES, 'UTF-8') ?></small>\",\"              </div>\",\"              <?php if (!empty($n['link'])): ?>\",\"                <a class=\\\"btn btn-sm btn-primary\\\" href=\\\"<?= htmlspecialchars((string)$n['link'], ENT_QUOTES, 'UTF-8') ?>\\\">Open</a>\",\"              <?php endif; ?>\",\"            </div>\",\"          </div>\",\"        <?php endforeach; ?>\",\"      <?php endif; ?>\",\"    </div>\",\"    <div class=\\\"p-2 text-end\\\">\",\"      <a class=\\\"btn btn-light btn-sm\\\" href=\\\"/notifications/center.php\\\"><i class=\\\"bi bi-bell-fill me-1\\\"></i> Notification Center</a>\",\"    </div>\",\"  </div>\",\"</div>\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/ui/layout_end.php\": [\"<?php /** UI Layout End (no logic) */ ?>\",\"      </div> <!-- /.container-fluid -->\",\"    </main>\",\"  </div> <!-- /.app-shell -->\",\"\",\"  <!-- Mobile Offcanvas Sidebar -->\",\"  <div class=\\\"offcanvas offcanvas-start offcanvas-sidebar\\\" tabindex=\\\"-1\\\" id=\\\"offcanvasSidebar\\\" aria-labelledby=\\\"offcanvasSidebarLabel\\\">\",\"    <div class=\\\"offcanvas-header\\\">\",\"      <h5 class=\\\"offcanvas-title\\\" id=\\\"offcanvasSidebarLabel\\\">Navigation</h5>\",\"      <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"offcanvas\\\" aria-label=\\\"Close\\\"></button>\",\"    </div>\",\"    <div class=\\\"offcanvas-body p-0\\\">\",\"      <?php @include __DIR__ . '/sidebar.php'; ?>\",\"    </div>\",\"  </div>\",\"\",\"  <!-- Bootstrap JS (bundle includes Popper) -->\",\"  <script src=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\\\"></script>\",\"</body>\",\"</html>\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/ui/sidebar.php\": [\"<?php\",\"declare(strict_types=1);\",\"/** PATH: /public_html/ui/sidebar.php\",\" * Sidebar navigation (Bootstrap 5) \\u2014 compact with collapsible groups.\",\" * Groups: Core, Masters, Purchase, Stores, Production & Planning, Machinery, Maintenance, Quality, Accounts, Audit, Reports\",\" * Note: Pure UI; no RBAC checks (keep kernel untouched).\",\" */\",\"\",\"$REQ_URI = $_SERVER['REQUEST_URI'] ?? '';\",\"\",\"if (!function_exists('nav_is_active')) {\",\"  /** Return 'active' if any of $needles appear in current URI */\",\"  function nav_is_active(array $needles, string $haystack): string {\",\"    foreach ($needles as $n) { if ($n !== '' && str_contains($haystack, $n)) return 'active'; }\",\"    return '';\",\"  }\",\"}\",\"if (!function_exists('collapse_show')) {\",\"  /** Return 'show' if any of $needles appear in current URI (auto-expand a group) */\",\"  function collapse_show(array $needles, string $haystack): string {\",\"    foreach ($needles as $n) { if ($n !== '' && str_contains($haystack, $n)) return 'show'; }\",\"    return '';\",\"  }\",\"}\",\"?>\",\"<nav class=\\\"px-2 py-3\\\">\",\"  <ul class=\\\"nav nav-pills flex-column gap-1 w-100\\\">\",\"\",\"    <!-- Core -->\",\"    <li class=\\\"nav-item text-uppercase small text-muted px-2 mt-1\\\">Core</li>\",\"    <li class=\\\"nav-item\\\">\",\"      <a class=\\\"nav-link d-flex align-items-center <?= nav_is_active(['/dashboard.php'], $REQ_URI) ?>\\\" href=\\\"/dashboard.php\\\">\",\"        <i class=\\\"bi bi-speedometer2 me-2\\\"></i> Dashboard\",\"      </a>\",\"    </li>\",\"    <li class=\\\"nav-item\\\">\",\"      <a class=\\\"nav-link d-flex align-items-center <?= nav_is_active(['/notifications/'], $REQ_URI) ?>\\\" href=\\\"/notifications/center.php\\\">\",\"        <i class=\\\"bi bi-bell me-2\\\"></i> Notifications\",\"      </a>\",\"    </li>\",\"\",\"    <!-- Masters (collapsible) -->\",\"    <?php $masters_needles = ['/identity/', '/uom/', '/material/', '/items/', '/parties/', '/locations/', '/projects/']; ?>\",\"    <li class=\\\"nav-item text-uppercase small text-muted px-2 mt-3\\\">Masters</li>\",\"    <li class=\\\"nav-item\\\">\",\"      <button class=\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($masters_needles, $REQ_URI) ?>\\\"\",\"              data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#navMasters\\\" aria-expanded=\\\"<?= collapse_show($masters_needles,$REQ_URI)?'true':'false' ?>\\\">\",\"        <i class=\\\"bi bi-sliders me-2\\\"></i> Masters\",\"        <i class=\\\"bi bi-caret-down ms-auto\\\"></i>\",\"      </button>\",\"      <div id=\\\"navMasters\\\" class=\\\"collapse <?= collapse_show($masters_needles, $REQ_URI) ?>\\\">\",\"        <ul class=\\\"nav flex-column ms-3 mt-1\\\">\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/identity/'], $REQ_URI) ?>\\\" href=\\\"/identity/users_list.php\\\"><i class=\\\"bi bi-people me-2\\\"></i> Users & Roles</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/uom/uom_list.php'], $REQ_URI) ?>\\\" href=\\\"/uom/uom_list.php\\\"><i class=\\\"bi bi-rulers me-2\\\"></i> UOM</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/uom/uom_conversions_list.php'], $REQ_URI) ?>\\\" href=\\\"/uom/uom_conversions_list.php\\\"><i class=\\\"bi bi-shuffle me-2\\\"></i> UOM Conversions</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/material/'], $REQ_URI) ?>\\\" href=\\\"/material/index.php\\\"><i class=\\\"bi bi-diagram-2 me-2\\\"></i> Material Taxonomy</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/items/'], $REQ_URI) ?>\\\" href=\\\"/items/items_list.php\\\"><i class=\\\"bi bi-box-seam me-2\\\"></i> Items</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/parties/'], $REQ_URI) ?>\\\" href=\\\"/parties/parties_list.php\\\"><i class=\\\"bi bi-building me-2\\\"></i> Parties</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/locations/'], $REQ_URI) ?>\\\" href=\\\"/locations/warehouses_list.php\\\"><i class=\\\"bi bi-geo-alt me-2\\\"></i> Locations/Warehouses</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/projects/'], $REQ_URI) ?>\\\" href=\\\"/projects/projects_list.php\\\"><i class=\\\"bi bi-kanban me-2\\\"></i> Projects</a></li>\",\"        </ul>\",\"      </div>\",\"    </li>\",\"\",\"    <!-- Operations -->\",\"    <li class=\\\"nav-item text-uppercase small text-muted px-2 mt-3\\\">Operations</li>\",\"\",\"    <!-- Purchase (collapsible) -->\",\"    <?php $purchase_needles = ['/purchase/']; ?>\",\"    <li class=\\\"nav-item\\\">\",\"      <button class=\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($purchase_needles, $REQ_URI) ?>\\\"\",\"              data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#navPurchase\\\" aria-expanded=\\\"<?= collapse_show($purchase_needles,$REQ_URI)?'true':'false' ?>\\\">\",\"        <i class=\\\"bi bi-bag-check me-2\\\"></i> Purchase\",\"        <i class=\\\"bi bi-caret-down ms-auto\\\"></i>\",\"      </button>\",\"      <div id=\\\"navPurchase\\\" class=\\\"collapse <?= collapse_show($purchase_needles, $REQ_URI) ?>\\\">\",\"        <ul class=\\\"nav flex-column ms-3 mt-1\\\">\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/purchase/indents_'], $REQ_URI) ?>\\\" href=\\\"/purchase/indents_list.php\\\"><i class=\\\"bi bi-card-list me-2\\\"></i> Indents</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/purchase/rfq_'], $REQ_URI) ?>\\\" href=\\\"/purchase/rfq_list.php\\\"><i class=\\\"bi bi-envelope-paper me-2\\\"></i> RFQ</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/purchase/quotes_','/purchase/quote'], $REQ_URI) ?>\\\" href=\\\"/purchase/quotes_list.php\\\"><i class=\\\"bi bi-currency-rupee me-2\\\"></i> Quotes</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/purchase/po_'], $REQ_URI) ?>\\\" href=\\\"/purchase/po_list.php\\\"><i class=\\\"bi bi-receipt me-2\\\"></i> Purchase Orders</a></li>\",\"        </ul>\",\"      </div>\",\"    </li>\",\"\",\"    <!-- Stores (collapsible) -->\",\"    <?php $stores_needles = ['/stores/']; ?>\",\"    <li class=\\\"nav-item\\\">\",\"      <button class=\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($stores_needles, $REQ_URI) ?>\\\"\",\"              data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#navStores\\\" aria-expanded=\\\"<?= collapse_show($stores_needles,$REQ_URI)?'true':'false' ?>\\\">\",\"        <i class=\\\"bi bi-boxes me-2\\\"></i> Stores\",\"        <i class=\\\"bi bi-caret-down ms-auto\\\"></i>\",\"      </button>\",\"      <div id=\\\"navStores\\\" class=\\\"collapse <?= collapse_show($stores_needles, $REQ_URI) ?>\\\">\",\"        <ul class=\\\"nav flex-column ms-3 mt-1\\\">\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/stores/grn_'], $REQ_URI) ?>\\\" href=\\\"/stores/grn_list.php\\\"><i class=\\\"bi bi-box-arrow-in-down-left me-2\\\"></i> GRN (Receipts)</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/stores/issue_'], $REQ_URI) ?>\\\" href=\\\"/stores/issues_list.php\\\"><i class=\\\"bi bi-box-arrow-up-right me-2\\\"></i> Issues/Returns</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/stores/transfer_'], $REQ_URI) ?>\\\" href=\\\"/stores/transfer_list.php\\\"><i class=\\\"bi bi-arrow-left-right me-2\\\"></i> Stock Transfer</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/stores/minmax_report.php'], $REQ_URI) ?>\\\" href=\\\"/stores/minmax_report.php\\\"><i class=\\\"bi bi-graph-down-arrow me-2\\\"></i> Min/Max Report</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/stores/purchase_advice_list.php'], $REQ_URI) ?>\\\" href=\\\"/stores/purchase_advice_list.php\\\"><i class=\\\"bi bi-clipboard2-plus me-2\\\"></i> Purchase Advice</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/stores/stock_adjust_form.php'], $REQ_URI) ?>\\\" href=\\\"/stores/stock_adjust_form.php\\\"><i class=\\\"bi bi-sliders2 me-2\\\"></i> Stock Adjust</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/stores/gatepass_list.php'], $REQ_URI) ?>\\\" href=\\\"/stores/gatepass_list.php\\\"><i class=\\\"bi bi-card-heading me-2\\\"></i> Gate Pass</a></li>\",\"        </ul>\",\"      </div>\",\"    </li>\",\"\",\"    <!-- Production & Planning (collapsible) -->\",\"    <?php $pp_needles = ['/purchase/bom_list.php','/workorders/','/processes/','/workcenters/']; ?>\",\"    <li class=\\\"nav-item\\\">\",\"      <button class=\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($pp_needles, $REQ_URI) ?>\\\"\",\"              data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#navProdPlan\\\" aria-expanded=\\\"<?= collapse_show($pp_needles,$REQ_URI)?'true':'false' ?>\\\">\",\"        <i class=\\\"bi bi-diagram-3 me-2\\\"></i> Production &amp; Planning\",\"        <i class=\\\"bi bi-caret-down ms-auto\\\"></i>\",\"      </button>\",\"      <div id=\\\"navProdPlan\\\" class=\\\"collapse <?= collapse_show($pp_needles, $REQ_URI) ?>\\\">\",\"        <ul class=\\\"nav flex-column ms-3 mt-1\\\">\",\"          <!-- Corrected BOM link (as requested) -->\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/purchase/bom_list.php'], $REQ_URI) ?>\\\" href=\\\"/purchase/bom_list.php\\\"><i class=\\\"bi bi-diagram-3 me-2\\\"></i> BOMs</a></li>\",\"          <!-- Removed routing links per instruction -->\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/workorders/pwo_list.php'], $REQ_URI) ?>\\\" href=\\\"/workorders/pwo_list.php\\\"><i class=\\\"bi bi-gear me-2\\\"></i> Work Orders (PWO)</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/processes/processes_list.php'], $REQ_URI) ?>\\\" href=\\\"/processes/processes_list.php\\\"><i class=\\\"bi bi-diagram-2 me-2\\\"></i> Processes</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/workcenters/workcenters_list.php'], $REQ_URI) ?>\\\" href=\\\"/workcenters/workcenters_list.php\\\"><i class=\\\"bi bi-hdd-stack me-2\\\"></i> Work Centers</a></li>\",\"        </ul>\",\"      </div>\",\"    </li>\",\"\",\"    <!-- Machinery (collapsible) -->\",\"    <?php $mach_needles = ['/machines/','/maintenance_alloc/']; ?>\",\"    <li class=\\\"nav-item\\\">\",\"      <button class=\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($mach_needles, $REQ_URI) ?>\\\"\",\"              data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#navMachinery\\\" aria-expanded=\\\"<?= collapse_show($mach_needles,$REQ_URI)?'true':'false' ?>\\\">\",\"        <i class=\\\"bi bi-wrench-adjustable-circle me-2\\\"></i> Machinery\",\"        <i class=\\\"bi bi-caret-down ms-auto\\\"></i>\",\"      </button>\",\"      <div id=\\\"navMachinery\\\" class=\\\"collapse <?= collapse_show($mach_needles, $REQ_URI) ?>\\\">\",\"        <ul class=\\\"nav flex-column ms-3 mt-1\\\">\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/machines/machines_list.php'], $REQ_URI) ?>\\\" href=\\\"/machines/machines_list.php\\\"><i class=\\\"bi bi-hdd-network me-2\\\"></i> Machines</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/machines/categories_list.php'], $REQ_URI) ?>\\\" href=\\\"/machines/categories_list.php\\\"><i class=\\\"bi bi-ui-checks-grid me-2\\\"></i> Machine Categories</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/maintenance_alloc/allocations_list.php'], $REQ_URI) ?>\\\" href=\\\"/maintenance_alloc/allocations_list.php\\\"><i class=\\\"bi bi-people-gear me-2\\\"></i> Allocations</a></li>\",\"        </ul>\",\"      </div>\",\"    </li>\",\"\",\"    <!-- Maintenance (collapsible) -->\",\"    <?php $maint_needles = ['/maintenance/wo_list.php','/maintenance/schedule.php','/maintenance/reports/contractor_costs.php']; ?>\",\"    <li class=\\\"nav-item\\\">\",\"      <button class=\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($maint_needles, $REQ_URI) ?>\\\"\",\"              data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#navMaintenance\\\" aria-expanded=\\\"<?= collapse_show($maint_needles,$REQ_URI)?'true':'false' ?>\\\">\",\"        <i class=\\\"bi bi-tools me-2\\\"></i> Maintenance\",\"        <i class=\\\"bi bi-caret-down ms-auto\\\"></i>\",\"      </button>\",\"      <div id=\\\"navMaintenance\\\" class=\\\"collapse <?= collapse_show($maint_needles, $REQ_URI) ?>\\\">\",\"        <ul class=\\\"nav flex-column ms-3 mt-1\\\">\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/maintenance/wo_list.php'], $REQ_URI) ?>\\\" href=\\\"/maintenance/wo_list.php\\\"><i class=\\\"bi bi-clipboard2-check me-2\\\"></i> Work Orders</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/maintenance/schedule.php'], $REQ_URI) ?>\\\" href=\\\"/maintenance/schedule.php\\\"><i class=\\\"bi bi-calendar2-check me-2\\\"></i> Schedule</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/maintenance/reports/contractor_costs.php'], $REQ_URI) ?>\\\" href=\\\"/maintenance/reports/contractor_costs.php\\\"><i class=\\\"bi bi-currency-rupee me-2\\\"></i> Contractor Costs</a></li>\",\"        </ul>\",\"      </div>\",\"    </li>\",\"\",\"    <!-- Quality (collapsible kept for future; remove if not needed) -->\",\"    <?php $qc_needles = ['/qc/']; ?>\",\"    <li class=\\\"nav-item\\\">\",\"      <button class=\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($qc_needles, $REQ_URI) ?>\\\"\",\"              data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#navQuality\\\" aria-expanded=\\\"<?= collapse_show($qc_needles,$REQ_URI)?'true':'false' ?>\\\">\",\"        <i class=\\\"bi bi-shield-check me-2\\\"></i> Quality / ITP\",\"        <i class=\\\"bi bi-caret-down ms-auto\\\"></i>\",\"      </button>\",\"      <div id=\\\"navQuality\\\" class=\\\"collapse <?= collapse_show($qc_needles, $REQ_URI) ?>\\\">\",\"        <ul class=\\\"nav flex-column ms-3 mt-1\\\">\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/qc/inspections_'], $REQ_URI) ?>\\\" href=\\\"/qc/inspections_list.php\\\"><i class=\\\"bi bi-clipboard-check me-2\\\"></i> Inspections</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/qc/dossier_'], $REQ_URI) ?>\\\" href=\\\"/qc/dossier_list.php\\\"><i class=\\\"bi bi-folder2-open me-2\\\"></i> Dossiers</a></li>\",\"        </ul>\",\"      </div>\",\"    </li>\",\"\",\"    <!-- Accounts (collapsible) -->\",\"    <?php $acct_needles = ['/accounts/journals_list.php','/accounts/ledger.php']; ?>\",\"    <li class=\\\"nav-item text-uppercase small text-muted px-2 mt-3\\\">Finance</li>\",\"    <li class=\\\"nav-item\\\">\",\"      <button class=\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($acct_needles, $REQ_URI) ?>\\\"\",\"              data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#navAccounts\\\" aria-expanded=\\\"<?= collapse_show($acct_needles,$REQ_URI)?'true':'false' ?>\\\">\",\"        <i class=\\\"bi bi-cash-coin me-2\\\"></i> Accounts\",\"        <i class=\\\"bi bi-caret-down ms-auto\\\"></i>\",\"      </button>\",\"      <div id=\\\"navAccounts\\\" class=\\\"collapse <?= collapse_show($acct_needles, $REQ_URI) ?>\\\">\",\"        <ul class=\\\"nav flex-column ms-3 mt-1\\\">\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/accounts/journals_list.php'], $REQ_URI) ?>\\\" href=\\\"/accounts/journals_list.php\\\"><i class=\\\"bi bi-journal-text me-2\\\"></i> Journals</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/accounts/ledger.php'], $REQ_URI) ?>\\\" href=\\\"/accounts/ledger.php\\\"><i class=\\\"bi bi-journal-richtext me-2\\\"></i> Ledger</a></li>\",\"        </ul>\",\"      </div>\",\"    </li>\",\"\",\"    <!-- Audit -->\",\"    <li class=\\\"nav-item\\\">\",\"      <a class=\\\"nav-link d-flex align-items-center <?= nav_is_active(['/audit/'], $REQ_URI) ?>\\\" href=\\\"/audit/log_list.php\\\">\",\"        <i class=\\\"bi bi-activity me-2\\\"></i> Audit Log\",\"      </a>\",\"    </li>\",\"\",\"    <!-- Reports (collapsible) -->\",\"    <?php $reports_needles = ['/reports/']; ?>\",\"    <li class=\\\"nav-item text-uppercase small text-muted px-2 mt-3\\\">Reports</li>\",\"    <li class=\\\"nav-item\\\">\",\"      <button class=\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($reports_needles, $REQ_URI) ?>\\\"\",\"              data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#navReports\\\" aria-expanded=\\\"<?= collapse_show($reports_needles,$REQ_URI)?'true':'false' ?>\\\">\",\"        <i class=\\\"bi bi-graph-up me-2\\\"></i> Reports\",\"        <i class=\\\"bi bi-caret-down ms-auto\\\"></i>\",\"      </button>\",\"      <div id=\\\"navReports\\\" class=\\\"collapse <?= collapse_show($reports_needles,$REQ_URI) ?>\\\">\",\"        <ul class=\\\"nav flex-column ms-3 mt-1\\\">\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/reports/inventory/stock_summary.php'], $REQ_URI) ?>\\\" href=\\\"/reports/inventory/stock_summary.php\\\"><i class=\\\"bi bi-clipboard-data me-2\\\"></i> Inventory Summary</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/reports/inventory/stock_ledger.php'], $REQ_URI) ?>\\\" href=\\\"/reports/inventory/stock_ledger.php\\\"><i class=\\\"bi bi-journal-check me-2\\\"></i> Stock Ledger</a></li>\",\"          <li><a class=\\\"nav-link <?= nav_is_active(['/reports/purchase/indent_register.php'], $REQ_URI) ?>\\\" href=\\\"/reports/purchase/indent_register.php\\\"><i class=\\\"bi bi-receipt me-2\\\"></i> Purchase Register</a></li>\",\"        </ul>\",\"      </div>\",\"    </li>\",\"\",\"  </ul>\",\"</nav>\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/ui/init.php\": [\"<?php\",\"declare(strict_types=1);\",\"/** Minimal UI init for per-page title, etc. */\",\"# Example usage in a page:\",\"# $page_title = 'Items';\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/ui/components.php\": [\"<?php\",\"// --- Action buttons for list rows (view/edit/delete etc.) ---\",\"function ui_row_actions(array $opts): string {\",\"  // $opts = ['view'=>url|null, 'edit'=>url|null, 'delete'=>url|null, 'extra'=>[['icon'=>'download','label'=>'Download','href'=>'/x']]]\",\"  $html = '<div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\">';\",\"  if (!empty($opts['view']))   $html .= '<a class=\\\"btn btn-light\\\" href=\\\"'.htmlspecialchars($opts['view']).'\\\" title=\\\"View\\\"><i class=\\\"bi bi-eye\\\"></i></a>';\",\"  if (!empty($opts['edit']))   $html .= '<a class=\\\"btn btn-light\\\" href=\\\"'.htmlspecialchars($opts['edit']).'\\\" title=\\\"Edit\\\"><i class=\\\"bi bi-pencil-square\\\"></i></a>';\",\"  if (!empty($opts['delete'])) $html .= '<a class=\\\"btn btn-light\\\" href=\\\"'.htmlspecialchars($opts['delete']).'\\\" title=\\\"Delete\\\" onclick=\\\"return confirm(\\\\'Delete this record?\\\\')\\\"><i class=\\\"bi bi-trash\\\"></i></a>';\",\"  if (!empty($opts['extra']) && is_array($opts['extra'])) {\",\"    foreach ($opts['extra'] as $x) {\",\"      $icon  = htmlspecialchars($x['icon']  ?? 'link-45deg');\",\"      $label = htmlspecialchars($x['label'] ?? 'Action');\",\"      $href  = htmlspecialchars($x['href']  ?? '#');\",\"      $html .= '<a class=\\\"btn btn-light\\\" href=\\\"'.$href.'\\\" title=\\\"'.$label.'\\\"><i class=\\\"bi bi-'.$icon.'\\\"></i></a>';\",\"    }\",\"  }\",\"  $html .= '</div>';\",\"  return $html;\",\"}\",\"\",\"// --- Status pill (badge) ---\",\"function ui_status(string $status): string {\",\"  $s = strtolower(trim($status));\",\"  $map = [\",\"    'active'   => 'bg-success-subtle text-success-emphasis border',\",\"    'enabled'  => 'bg-success-subtle text-success-emphasis border',\",\"    'draft'    => 'bg-secondary-subtle text-secondary-emphasis border',\",\"    'pending'  => 'bg-warning-subtle text-warning-emphasis border',\",\"    'paused'   => 'bg-warning-subtle text-warning-emphasis border',\",\"    'rejected' => 'bg-danger-subtle text-danger-emphasis border',\",\"    'disabled' => 'bg-dark-subtle text-dark-emphasis border',\",\"  ];\",\"  $cls = $map[$s] ?? 'bg-primary-subtle text-primary-emphasis border';\",\"  return '<span class=\\\"badge '.$cls.'\\\">'.htmlspecialchars(ucfirst($s)).'</span>';\",\"}\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/ui/layout_start.php\": [\"<?php\",\"declare(strict_types=1);\",\"/** UI Layout Start (Bootstrap 5.3) \\u2014 UI only, no business logic */\",\"\",\"if (session_status() !== PHP_SESSION_ACTIVE) {\",\"  session_start();\",\"}\",\"\",\"/** HTML escape */\",\"if (!function_exists('h')) {\",\"  function h(?string $v): string { return htmlspecialchars((string)$v, ENT_QUOTES, 'UTF-8'); }\",\"}\",\"\",\"/**\",\" * Flash helper (fallback).\",\" * - If already defined elsewhere, we won't redeclare.\",\" * - Usage:\",\" *    flash('success','Saved')  // queue\",\" *    foreach (flash() as $f) { ... }  // fetch & clear\",\" */\",\"if (!function_exists('flash')) {\",\"  function flash(?string $type = null, ?string $msg = null): array {\",\"    if ($type !== null && $msg !== null) {\",\"      $_SESSION['_flash'][] = ['type' => $type, 'msg' => $msg];\",\"      return [];\",\"    }\",\"    $out = $_SESSION['_flash'] ?? [];\",\"    if (!is_array($out)) $out = [];\",\"    unset($_SESSION['_flash']); // clear after reading\",\"    return $out;\",\"  }\",\"}\",\"\",\"/** Soft-depend on components; don't fatal if missing */\",\"@include __DIR__ . '/components.php';\",\"\",\"/** Title/Brand fallbacks */\",\"$app_name   = $app_name   ?? ($_ENV['APP_NAME'] ?? 'EMS Infra ERP');\",\"$page_title = $page_title ?? ($PAGE_TITLE ?? $app_name);\",\"$currentPath = $_SERVER['SCRIPT_NAME'] ?? '';\",\"?>\",\"<!doctype html>\",\"<html lang=\\\"en\\\" data-bs-theme=\\\"light\\\">\",\"<head>\",\"  <meta charset=\\\"utf-8\\\">\",\"  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\",\"  <title><?= h($page_title) ?></title>\",\"\",\"  <!-- Bootstrap & Icons -->\",\"  <link rel=\\\"stylesheet\\\" href=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\\\">\",\"  <link rel=\\\"stylesheet\\\" href=\\\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css\\\">\",\"\",\"  <!-- Optional site styles (served from public_html root if present) -->\",\"  <link rel=\\\"stylesheet\\\" href=\\\"/styles.css\\\">\",\"\",\"  <style>\",\"    :root { --sidebar-width: 260px; }\",\"    html, body { height: 100%; }\",\"    body { min-height: 100vh; }\",\"    .app-shell { display: flex; min-height: calc(100vh - 56px); }\",\"    .app-sidebar { width: var(--sidebar-width); border-right: 1px solid #eef0f2; background: #fff; }\",\"    @media (max-width: 991.98px) { .app-sidebar { display: none; } }\",\"    .app-content { flex: 1; }\",\"    .brand { font-weight: 600; letter-spacing: .2px; }\",\"    .navbar-brand img { height: 32px; width: auto; }\",\"    .nav-link.active { background: #f1f5f9; font-weight: 600; }\",\"    .offcanvas-sidebar { width: var(--sidebar-width); }\",\"    .card-tile { transition: transform .15s ease; }\",\"    .card-tile:hover { transform: translateY(-2px); }\",\"  </style>\",\"</head>\",\"<body>\",\"\",\"  <?php foreach (flash() as $f): ?>\",\"    <div class=\\\"alert alert-<?= h($f['type'] ?? 'info') ?> m-2\\\">\",\"      <?= h($f['msg'] ?? '') ?>\",\"    </div>\",\"  <?php endforeach; ?>\",\"\",\"  <!-- Header -->\",\"  <nav class=\\\"navbar navbar-expand-lg bg-body-tertiary border-bottom sticky-top\\\">\",\"    <div class=\\\"container-fluid\\\">\",\"      <button class=\\\"btn btn-outline-primary d-lg-none me-2\\\" type=\\\"button\\\"\",\"              data-bs-toggle=\\\"offcanvas\\\" data-bs-target=\\\"#offcanvasSidebar\\\" aria-controls=\\\"offcanvasSidebar\\\"\",\"              aria-label=\\\"Open menu\\\">\",\"        <i class=\\\"bi bi-list\\\"></i>\",\"      </button>\",\"\",\"      <a class=\\\"navbar-brand d-flex align-items-center\\\" href=\\\"/dashboard.php\\\">\",\"        <img src=\\\"/assets/logo.jpg\\\" alt=\\\"EMS Infra ERP Logo\\\" class=\\\"me-2\\\">\",\"        <span class=\\\"brand\\\"><?= h($app_name) ?></span>\",\"      </a>\",\"\",\"      <div class=\\\"ms-auto d-flex align-items-center gap-2\\\">\",\"        <?php @include __DIR__ . '/partials/notifications_bell.php'; ?>\",\"\",\"        <div class=\\\"dropdown\\\">\",\"          <a href=\\\"#\\\" class=\\\"btn btn-outline-secondary btn-sm dropdown-toggle\\\" data-bs-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\",\"            <i class=\\\"bi bi-person-circle me-1\\\"></i><?= h($_SESSION['user_name'] ?? 'User') ?>\",\"          </a>\",\"          <ul class=\\\"dropdown-menu dropdown-menu-end\\\">\",\"            <li><a class=\\\"dropdown-item\\\" href=\\\"/identity/profile.php\\\"><i class=\\\"bi bi-gear me-2\\\"></i> Profile</a></li>\",\"            <li><hr class=\\\"dropdown-divider\\\"></li>\",\"            <li><a class=\\\"dropdown-item\\\" href=\\\"/logout.php\\\"><i class=\\\"bi bi-box-arrow-right me-2\\\"></i> Logout</a></li>\",\"          </ul>\",\"        </div>\",\"      </div>\",\"    </div>\",\"  </nav>\",\"\",\"  <!-- App shell -->\",\"  <div class=\\\"app-shell\\\">\",\"    <!-- Desktop sidebar -->\",\"    <aside class=\\\"app-sidebar\\\">\",\"      <?php @include __DIR__ . '/sidebar.php'; ?>\",\"    </aside>\",\"\",\"    <!-- Main content -->\",\"    <main class=\\\"app-content\\\">\",\"      <div class=\\\"container-fluid py-3\\\">\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_orders/create_project.php\": [\"<?php\",\"declare(strict_types=1);\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"require_once __DIR__ . '/../includes/csrf.php';\",\"require_once __DIR__ . '/../includes/helpers.php';\",\"require_once __DIR__ . '/../includes/numbering.php';\",\"require_once __DIR__ . '/../includes/audit.php';\",\"\",\"require_login();\",\"require_permission('project.core.create');\",\"require_permission('sales.order.view');\",\"\",\"$pdo = db();\",\"\",\"if ($_SERVER['REQUEST_METHOD'] === 'POST') {\",\"  verify_csrf_or_die();\",\"  $orderId = (int)($_POST['order_id'] ?? 0);\",\"  $row = $pdo->prepare(\\\"SELECT * FROM sales_orders WHERE id=? AND (deleted_at IS NULL) LIMIT 1\\\");\",\"  $row->execute([$orderId]);\",\"  $so = $row->fetch(PDO::FETCH_ASSOC);\",\"  if (!$so) { set_flash('danger','Order not found'); header('Location: sales_orders_list.php'); exit; }\",\"\",\"  $proj = [\",\"    'code'              => next_no('PRJ'),\",\"    'sales_order_id'    => $orderId,\",\"    'client_account_id' => (int)$so['account_id'],\",\"    'client_contact_id' => $so['contact_id'] ? (int)$so['contact_id'] : null,\",\"    'name'              => 'Project for '.$so['code'],\",\"    'status'            => 'Planned',\",\"    'start_date'        => date('Y-m-d'),\",\"    'end_date'          => null,\",\"    'notes'             => 'Created from Sales Order '.$so['code'],\",\"  ];\",\"  $st = $pdo->prepare(\\\"INSERT INTO projects\",\"    (`code`,`sales_order_id`,`client_account_id`,`client_contact_id`,`name`,`status`,`start_date`,`end_date`,`notes`)\",\"    VALUES (:code,:sales_order_id,:client_account_id,:client_contact_id,:name,:status,:start_date,:end_date,:notes)\\\");\",\"  $st->execute($proj);\",\"  $pid = (int)$pdo->lastInsertId();\",\"  audit_log($pdo, 'projects', 'create', $pid, $proj);\",\"\",\"  set_flash('success', 'Project '.$proj['code'].' created with same party/contact.');\",\"  header('Location: ../projects/projects_form.php?id='.$pid);\",\"  exit;\",\"}\",\"\",\"require_once __DIR__ . '/../ui/layout_start.php';\",\"?>\",\"<form method=\\\"post\\\">\",\"  <?= csrf_field() ?>\",\"  <input type=\\\"hidden\\\" name=\\\"order_id\\\" value=\\\"<?= (int)($_GET['order_id'] ?? 0) ?>\\\">\",\"  <p>Create a Project for this Sales Order using the same Account & Contact?</p>\",\"  <button class=\\\"btn btn-primary\\\">Create Project</button>\",\"</form>\",\"<?php include __DIR__ . '/../ui/layout_end.php'; ?>\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/quote_pdf.php\": [\"<?php\",\"/** PATH: /public_html/sales_quotes/quote_pdf.php */\",\"declare(strict_types=1);\",\"\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"require_once __DIR__ . '/../includes/helpers.php';\",\"\",\"require_login();\",\"require_permission('sales.quote.view');\",\"\",\"$id = (int)($_GET['id'] ?? 0);\",\"if ($id<=0) { http_response_code(400); echo \\\"Invalid id\\\"; exit; }\",\"\",\"// optional template variant: standard | compact | with-photos (kept for future)\",\"$tpl = preg_replace('/[^a-z\\\\-]/','', (string)($_GET['tpl'] ?? 'standard'));\",\"if (!in_array($tpl, ['standard','compact','with-photos'], true)) $tpl = 'standard';\",\"\",\"$pdo = db();\",\"$qh = $pdo->prepare(\\\"\",\"    SELECT q.*, p.name AS party_name, p.gstin AS party_gstin, p.address AS party_address\",\"      FROM sales_quotes q\",\"      LEFT JOIN parties p ON p.id = q.party_id\",\"     WHERE q.id=:id AND q.deleted_at IS NULL\",\"\\\");\",\"$qh->execute([':id'=>$id]);\",\"$quote = $qh->fetch(PDO::FETCH_ASSOC);\",\"if (!$quote) { http_response_code(404); echo \\\"Quote not found\\\"; exit; }\",\"\",\"// ITEMS MAPPED TO YOUR SCHEMA\",\"$qi = $pdo->prepare(\\\"\",\"    SELECT sl_no, item_code, item_name, qty, uom, rate, discount_pct, tax_pct, line_total\",\"      FROM sales_quote_items\",\"     WHERE quote_id=:id\",\"  ORDER BY sl_no\",\"\\\");\",\"$qi->execute([':id'=>$id]);\",\"$items = $qi->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"$org = function_exists('org_profile') ? org_profile() : ['name'=>'Company', 'address'=>'', 'gstin'=>'', 'logo_url'=>''];\",\"\",\"ob_start();\",\"?>\",\"<!doctype html>\",\"<html>\",\"<head>\",\"<meta charset=\\\"utf-8\\\">\",\"<style>\",\"body { font-family: DejaVu Sans, sans-serif; font-size: 12px; }\",\"table { width: 100%; border-collapse: collapse; }\",\"th, td { border: 1px solid #999; padding: 6px; }\",\"th { background: #eee; }\",\".text-right { text-align: right; }\",\".small { font-size: 11px; color: #555; }\",\"<?php if ($tpl==='compact'): ?> th, td { padding:4px; font-size:11px; } <?php endif; ?>\",\"</style>\",\"</head>\",\"<body>\",\"  <table style=\\\"border:none\\\">\",\"    <tr>\",\"      <td style=\\\"border:none\\\">\",\"        <h2><?=h($org['name'] ?? 'Organization')?></h2>\",\"        <div class=\\\"small\\\"><?=nl2br(h($org['address'] ?? ''))?></div>\",\"        <div class=\\\"small\\\">GSTIN: <?=h($org['gstin'] ?? '-')?></div>\",\"      </td>\",\"      <td style=\\\"border:none; text-align:right\\\">\",\"        <?php if (!empty($org['logo_url'])): ?>\",\"          <img src=\\\"<?=h($org['logo_url'])?>\\\" alt=\\\"Logo\\\" style=\\\"max-height:70px\\\">\",\"        <?php endif; ?>\",\"      </td>\",\"    </tr>\",\"  </table>\",\"\",\"  <h3 style=\\\"margin-top:0\\\">Quotation: <?=h($quote['code'])?></h3>\",\"  <table>\",\"    <tr><th>Quote Date</th><td><?=h($quote['quote_date'])?></td><th>Client</th><td><?=h($quote['party_name'])?></td></tr>\",\"    <tr><th>Client GSTIN</th><td><?=h($quote['party_gstin'] ?? '-')?></td><th>Title</th><td><?=h($quote['title'] ?? '')?></td></tr>\",\"  </table>\",\"\",\"  <br>\",\"  <table>\",\"    <thead>\",\"      <tr>\",\"        <th>Sl</th>\",\"        <th>Item</th>\",\"        <th class=\\\"text-right\\\">Qty</th>\",\"        <th>UOM</th>\",\"        <th class=\\\"text-right\\\">Rate</th>\",\"        <th class=\\\"text-right\\\">Disc %</th>\",\"        <th class=\\\"text-right\\\">Tax %</th>\",\"        <th class=\\\"text-right\\\">Amount</th>\",\"      </tr>\",\"    </thead>\",\"    <tbody>\",\"      <?php foreach ($items as $it): ?>\",\"      <tr>\",\"        <td><?= (int)$it['sl_no'] ?></td>\",\"        <td><?= h(($it['item_code'] ? $it['item_code'].' - ' : '').$it['item_name']) ?></td>\",\"        <td class=\\\"text-right\\\"><?= h($it['qty']) ?></td>\",\"        <td><?= h($it['uom']) ?></td>\",\"        <td class=\\\"text-right\\\"><?= number_format((float)$it['rate'], 2) ?></td>\",\"        <td class=\\\"text-right\\\"><?= number_format((float)($it['discount_pct'] ?? 0), 2) ?></td>\",\"        <td class=\\\"text-right\\\"><?= number_format((float)($it['tax_pct'] ?? 0), 2) ?></td>\",\"        <td class=\\\"text-right\\\"><?= number_format((float)$it['line_total'], 2) ?></td>\",\"      </tr>\",\"      <?php endforeach; ?>\",\"      <tr><td colspan=\\\"7\\\" class=\\\"text-right\\\"><b>Subtotal</b></td><td class=\\\"text-right\\\"><?=number_format((float)$quote['subtotal'],2)?></td></tr>\",\"      <tr><td colspan=\\\"7\\\" class=\\\"text-right\\\"><b>Discount</b></td><td class=\\\"text-right\\\"><?=number_format((float)$quote['discount_total'],2)?></td></tr>\",\"      <tr><td colspan=\\\"7\\\" class=\\\"text-right\\\"><b>Tax</b></td><td class=\\\"text-right\\\"><?=number_format((float)$quote['tax_total'],2)?></td></tr>\",\"      <tr><td colspan=\\\"7\\\" class=\\\"text-right\\\"><b>Grand Total</b></td><td class=\\\"text-right\\\"><?=number_format((float)$quote['grand_total'],2)?></td></tr>\",\"    </tbody>\",\"  </table>\",\"\",\"  <?php if (!empty($quote['terms'])): ?>\",\"    <h4>Terms & Conditions</h4>\",\"    <div class=\\\"small\\\"><?=nl2br(h($quote['terms']))?></div>\",\"  <?php endif; ?>\",\"</body>\",\"</html>\",\"<?php\",\"$html = ob_get_clean();\",\"\",\"$pdfFileName = 'Quote-' . preg_replace('/[^A-Za-z0-9\\\\-]/','', (string)$quote['code']) . '.pdf';\",\"\",\"if (class_exists('\\\\\\\\Mpdf\\\\\\\\Mpdf')) {\",\"    $mpdf = new \\\\Mpdf\\\\Mpdf(['tempDir' => sys_get_temp_dir()]);\",\"    $mpdf->WriteHTML($html);\",\"    $mpdf->Output($pdfFileName, 'I');\",\"    exit;\",\"} elseif (class_exists('\\\\\\\\Dompdf\\\\\\\\Dompdf')) {\",\"    $dompdf = new \\\\Dompdf\\\\Dompdf();\",\"    $dompdf->loadHtml($html);\",\"    $dompdf->setPaper('A4');\",\"    $dompdf->render();\",\"    $dompdf->stream($pdfFileName, ['Attachment' => false]);\",\"    exit;\",\"} else {\",\"    header('Content-Type: text/html; charset=utf-8');\",\"    echo \\\"<p><b>PDF library not found.</b> Showing HTML instead.</p>\\\";\",\"    echo $html;\",\"}\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/sales_quotes_list.php\": [\"<?php\",\"/** PATH: /public_html/sales_quotes/sales_quotes_list.php */\",\"declare(strict_types=1);\",\"\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"require_once __DIR__ . '/../includes/helpers.php';\",\"\",\"require_login();\",\"require_permission('sales.quote.view');\",\"\",\"$pdo = db();\",\"\",\"// GET filters\",\"$status   = trim((string)($_GET['status'] ?? ''));\",\"$client   = trim((string)($_GET['client'] ?? ''));\",\"$q        = trim((string)($_GET['q'] ?? ''));\",\"$from     = trim((string)($_GET['from'] ?? ''));\",\"$to       = trim((string)($_GET['to'] ?? ''));\",\"$minAmt   = (float)($_GET['min'] ?? 0);\",\"$maxAmt   = (float)($_GET['max'] ?? 0);\",\"\",\"$where = [\\\"q.deleted_at IS NULL\\\"];\",\"$params = [];\",\"\",\"if ($status !== '') { $where[] = \\\"q.status = :status\\\"; $params[':status'] = $status; }\",\"if ($client !== '') { \",\"    // allow numeric id or name search\",\"    if (ctype_digit($client)) { $where[] = \\\"q.party_id = :party_id\\\"; $params[':party_id'] = (int)$client; }\",\"    else { $where[] = \\\"p.name LIKE :pname\\\"; $params[':pname'] = \\\"%{$client}%\\\"; }\",\"}\",\"if ($from !== '')   { $where[] = \\\"q.quote_date >= :from\\\"; $params[':from'] = $from; }\",\"if ($to !== '')     { $where[] = \\\"q.quote_date <= :to\\\";   $params[':to']   = $to; }\",\"if ($minAmt > 0)    { $where[] = \\\"q.grand_total >= :minamt\\\"; $params[':minamt'] = $minAmt; }\",\"if ($maxAmt > 0)    { $where[] = \\\"q.grand_total <= :maxamt\\\"; $params[':maxamt'] = $maxAmt; }\",\"if ($q !== '') {\",\"    $where[] = \\\"(q.code LIKE :kw OR q.title LIKE :kw OR p.name LIKE :kw)\\\";\",\"    $params[':kw'] = \\\"%{$q}%\\\";\",\"}\",\"\",\"$sql = \\\"\",\"SELECT q.id, q.code, q.title, q.quote_date, q.status, q.grand_total, p.name AS party_name\",\"FROM sales_quotes q\",\"LEFT JOIN parties p ON p.id = q.party_id\",\"WHERE \\\" . implode(' AND ', $where) . \\\"\",\"ORDER BY q.quote_date DESC, q.id DESC\",\"LIMIT 500\\\";\",\"\",\"$stmt = $pdo->prepare($sql);\",\"$stmt->execute($params);\",\"$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"function status_badge(string $s): string {\",\"    $map = [\",\"        'Draft'     => 'secondary',\",\"        'Pending'   => 'info',\",\"        'Sent'      => 'primary',\",\"        'Accepted'  => 'success',\",\"        'Lost'      => 'danger',\",\"        'Converted' => 'warning',\",\"    ];\",\"    $cls = $map[$s] ?? 'light';\",\"    return '<span class=\\\"badge bg-' . $cls . '\\\">' . h($s) . '</span>';\",\"}\",\"\",\"$canCreate = rbac_can('sales.quote.create');\",\"$canEdit   = rbac_can('sales.quote.edit');\",\"$canDelete = rbac_can('sales.quote.delete');\",\"\",\"$UI_PATH     = dirname(__DIR__) . '/ui';\",\"$PAGE_TITLE  = 'Sales Quotes';\",\"$ACTIVE_MENU = 'sales.quotes';\",\"\",\"require_once $UI_PATH . '/init.php';\",\"require_once $UI_PATH . '/layout_start.php';\",\"?>\",\"\",\"<div class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\",\"  <h3 class=\\\"mb-0\\\">Sales Quotes</h3>\",\"  <?php if ($canCreate): ?>\",\"    <a class=\\\"btn btn-sm btn-primary\\\" href=\\\"/sales_quotes/sales_quotes_edit.php\\\">New Quote</a>\",\"  <?php endif; ?>\",\"</div>\",\"\",\"<form class=\\\"row g-2 mb-3\\\" method=\\\"get\\\">\",\"  <div class=\\\"col-auto\\\">\",\"    <input name=\\\"q\\\" class=\\\"form-control\\\" placeholder=\\\"Search code/title/client\\\" value=\\\"<?=h($q)?>\\\">\",\"  </div>\",\"  <div class=\\\"col-auto\\\">\",\"    <select name=\\\"status\\\" class=\\\"form-select\\\">\",\"      <option value=\\\"\\\">All Status</option>\",\"      <?php foreach (['Draft','Pending','Sent','Accepted','Lost','Converted'] as $s): ?>\",\"        <option value=\\\"<?=$s?>\\\" <?=$status===$s?'selected':''?>><?=$s?></option>\",\"      <?php endforeach; ?>\",\"    </select>\",\"  </div>\",\"  <div class=\\\"col-auto\\\"><input name=\\\"client\\\" class=\\\"form-control\\\" placeholder=\\\"Client name or ID\\\" value=\\\"<?=h($client)?>\\\"></div>\",\"  <div class=\\\"col-auto\\\"><input type=\\\"date\\\" name=\\\"from\\\" class=\\\"form-control\\\" value=\\\"<?=h($from)?>\\\"></div>\",\"  <div class=\\\"col-auto\\\"><input type=\\\"date\\\" name=\\\"to\\\" class=\\\"form-control\\\" value=\\\"<?=h($to)?>\\\"></div>\",\"  <div class=\\\"col-auto\\\"><input type=\\\"number\\\" name=\\\"min\\\" step=\\\"0.01\\\" class=\\\"form-control\\\" placeholder=\\\"Min \\u20b9\\\" value=\\\"<?=h((string)$minAmt)?>\\\"></div>\",\"  <div class=\\\"col-auto\\\"><input type=\\\"number\\\" name=\\\"max\\\" step=\\\"0.01\\\" class=\\\"form-control\\\" placeholder=\\\"Max \\u20b9\\\" value=\\\"<?=h((string)$maxAmt)?>\\\"></div>\",\"  <div class=\\\"col-auto\\\"><button class=\\\"btn btn-outline-secondary\\\">Filter</button></div>\",\"</form>\",\"\",\"<table class=\\\"table table-sm table-striped align-middle\\\">\",\"  <thead>\",\"    <tr>\",\"      <th>Code</th><th>Date</th><th>Client</th><th>Title</th><th class=\\\"text-end\\\">Amount</th><th>Status</th><th>Actions</th>\",\"    </tr>\",\"  </thead>\",\"  <tbody>\",\"  <?php foreach ($rows as $r): ?>\",\"    <tr>\",\"      <td><a href=\\\"/sales_quotes/sales_quotes_view.php?id=<?=$r['id']?>\\\"><?=h($r['code'])?></a></td>\",\"      <td><?=h($r['quote_date'])?></td>\",\"      <td><?=h($r['party_name'] ?? '')?></td>\",\"      <td><?=h($r['title'] ?? '')?></td>\",\"      <td class=\\\"text-end\\\"><?=number_format((float)$r['grand_total'], 2)?></td>\",\"      <td><?=status_badge($r['status'] ?? 'Draft')?></td>\",\"      <td>\",\"        <?php if ($canEdit): ?>\",\"          <a class=\\\"btn btn-sm btn-outline-primary\\\" href=\\\"/sales_quotes/sales_quotes_edit.php?id=<?=$r['id']?>\\\">Edit</a>\",\"        <?php endif; ?>\",\"        <?php if ($canDelete): ?>\",\"          <form action=\\\"/sales_quotes/sales_quotes_delete.php\\\" method=\\\"post\\\" class=\\\"d-inline\\\" onsubmit=\\\"return confirm('Soft-delete this quote?');\\\">\",\"            <?=csrf_hidden_input()?>\",\"            <input type=\\\"hidden\\\" name=\\\"id\\\" value=\\\"<?=$r['id']?>\\\">\",\"            <button class=\\\"btn btn-sm btn-outline-danger\\\">Delete</button>\",\"          </form>\",\"        <?php endif; ?>\",\"      </td>\",\"    </tr>\",\"  <?php endforeach; ?>\",\"  </tbody>\",\"</table>\",\"\",\"<?php require_once $UI_PATH . '/layout_end.php';\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/send_quote.php\": [\"<?php\",\"/** PATH: /public_html/sales_quotes/send_quote.php */\",\"declare(strict_types=1);\",\"\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"require_once __DIR__ . '/../includes/csrf.php';\",\"require_once __DIR__ . '/../includes/helpers.php';\",\"\",\"require_login();\",\"require_permission('sales.quote.edit');\",\"csrf_require_token();\",\"\",\"$quoteId = (int)($_POST['id'] ?? 0);\",\"$toEmail = trim((string)($_POST['to'] ?? ''));\",\"$subject = trim((string)($_POST['subject'] ?? ''));\",\"$body    = (string)($_POST['body'] ?? '');\",\"\",\"if ($quoteId<=0 || $toEmail==='') {\",\"    flash('To email and quote id are required', 'danger');\",\"    redirect('/sales_quotes/sales_quotes_view.php?id=' . max(1, $quoteId));\",\"}\",\"\",\"$pdo = db();\",\"\",\"// Enforce approvals gate: only Approved can be sent\",\"$st = $pdo->prepare(\\\"SELECT approval_status FROM sales_quotes WHERE id=:id\\\");\",\"$st->execute([':id'=>$quoteId]);\",\"$approval = (string)$st->fetchColumn();\",\"if ($approval !== 'Approved') {\",\"    flash('Cannot send: quote not approved yet.', 'danger');\",\"    redirect('/sales_quotes/sales_quotes_view.php?id='.$quoteId);\",\"}\",\"\",\"// Load header\",\"$qh = $pdo->prepare(\\\"\",\"    SELECT q.*, p.name AS party_name, p.gstin AS party_gstin, p.address AS party_address\",\"      FROM sales_quotes q\",\"      LEFT JOIN parties p ON p.id=q.party_id\",\"     WHERE q.id=:id AND q.deleted_at IS NULL\",\"\\\");\",\"$qh->execute([':id'=>$quoteId]);\",\"$quote = $qh->fetch(PDO::FETCH_ASSOC);\",\"if (!$quote) { flash('Quote not found', 'danger'); redirect('/sales_quotes/sales_quotes_list.php'); }\",\"\",\"// Load items (YOUR SCHEMA)\",\"$qi = $pdo->prepare(\\\"\",\"    SELECT sl_no, item_code, item_name, qty, uom, rate, discount_pct, tax_pct, line_total\",\"      FROM sales_quote_items\",\"     WHERE quote_id=:id\",\"  ORDER BY sl_no\",\"\\\");\",\"$qi->execute([':id'=>$quoteId]);\",\"$items = $qi->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"// Build HTML (same look as quote_pdf.php)\",\"$org = function_exists('org_profile') ? org_profile() : ['name'=>'Company','address'=>'','gstin'=>'','logo_url'=>''];\",\"\",\"ob_start(); ?>\",\"<!doctype html>\",\"<html>\",\"<head>\",\"<meta charset=\\\"utf-8\\\">\",\"<style>\",\"body { font-family: DejaVu Sans, sans-serif; font-size: 12px; }\",\"table { width:100%; border-collapse: collapse; }\",\"th, td { border:1px solid #999; padding:6px; }\",\"th { background:#eee; }\",\".text-right { text-align:right; }\",\".small { font-size:11px; color:#555; }\",\"</style>\",\"</head>\",\"<body>\",\"  <table style=\\\"border:none\\\">\",\"    <tr>\",\"      <td style=\\\"border:none\\\">\",\"        <h2><?=h($org['name'] ?? 'Organization')?></h2>\",\"        <div class=\\\"small\\\"><?=nl2br(h($org['address'] ?? ''))?></div>\",\"        <div class=\\\"small\\\">GSTIN: <?=h($org['gstin'] ?? '-')?></div>\",\"      </td>\",\"      <td style=\\\"border:none; text-align:right\\\">\",\"        <?php if (!empty($org['logo_url'])): ?>\",\"          <img src=\\\"<?=h($org['logo_url'])?>\\\" alt=\\\"Logo\\\" style=\\\"max-height:70px\\\">\",\"        <?php endif; ?>\",\"      </td>\",\"    </tr>\",\"  </table>\",\"\",\"  <h3 style=\\\"margin-top:0\\\">Quotation: <?=h($quote['code'])?></h3>\",\"  <table>\",\"    <tr><th>Quote Date</th><td><?=h($quote['quote_date'])?></td><th>Client</th><td><?=h($quote['party_name'])?></td></tr>\",\"    <tr><th>Client GSTIN</th><td><?=h($quote['party_gstin'] ?? '-')?></td><th>Title</th><td><?=h($quote['title'] ?? '')?></td></tr>\",\"  </table>\",\"\",\"  <br>\",\"  <table>\",\"    <thead>\",\"      <tr>\",\"        <th>Sl</th><th>Item</th><th class=\\\"text-right\\\">Qty</th><th>UOM</th>\",\"        <th class=\\\"text-right\\\">Rate</th><th class=\\\"text-right\\\">Disc %</th>\",\"        <th class=\\\"text-right\\\">Tax %</th><th class=\\\"text-right\\\">Amount</th>\",\"      </tr>\",\"    </thead>\",\"    <tbody>\",\"      <?php foreach ($items as $it): ?>\",\"      <tr>\",\"        <td><?= (int)$it['sl_no'] ?></td>\",\"        <td><?= h(($it['item_code'] ? $it['item_code'].' - ' : '').$it['item_name']) ?></td>\",\"        <td class=\\\"text-right\\\"><?= h($it['qty']) ?></td>\",\"        <td><?= h($it['uom']) ?></td>\",\"        <td class=\\\"text-right\\\"><?= number_format((float)$it['rate'],2) ?></td>\",\"        <td class=\\\"text-right\\\"><?= number_format((float)($it['discount_pct'] ?? 0),2) ?></td>\",\"        <td class=\\\"text-right\\\"><?= number_format((float)($it['tax_pct'] ?? 0),2) ?></td>\",\"        <td class=\\\"text-right\\\"><?= number_format((float)$it['line_total'],2) ?></td>\",\"      </tr>\",\"      <?php endforeach; ?>\",\"      <tr><td colspan=\\\"7\\\" class=\\\"text-right\\\"><b>Subtotal</b></td><td class=\\\"text-right\\\"><?=number_format((float)$quote['subtotal'],2)?></td></tr>\",\"      <tr><td colspan=\\\"7\\\" class=\\\"text-right\\\"><b>Discount</b></td><td class=\\\"text-right\\\"><?=number_format((float)$quote['discount_total'],2)?></td></tr>\",\"      <tr><td colspan=\\\"7\\\" class=\\\"text-right\\\"><b>Tax</b></td><td class=\\\"text-right\\\"><?=number_format((float)$quote['tax_total'],2)?></td></tr>\",\"      <tr><td colspan=\\\"7\\\" class=\\\"text-right\\\"><b>Grand Total</b></td><td class=\\\"text-right\\\"><?=number_format((float)$quote['grand_total'],2)?></td></tr>\",\"    </tbody>\",\"  </table>\",\"\",\"  <?php if (!empty($quote['terms'])): ?>\",\"    <h4>Terms & Conditions</h4>\",\"    <div class=\\\"small\\\"><?=nl2br(h($quote['terms']))?></div>\",\"  <?php endif; ?>\",\"</body>\",\"</html>\",\"<?php\",\"$html = ob_get_clean();\",\"\",\"// Write PDF to temp\",\"$tmpDir = sys_get_temp_dir();\",\"$pdfPath = $tmpDir . '/Quote-' . preg_replace('/[^A-Za-z0-9\\\\-]/', '', (string)$quote['code']) . '.pdf';\",\"\",\"if (class_exists('\\\\\\\\Mpdf\\\\\\\\Mpdf')) {\",\"    $mpdf = new \\\\Mpdf\\\\Mpdf(['tempDir' => $tmpDir]);\",\"    $mpdf->WriteHTML($html);\",\"    $mpdf->Output($pdfPath, 'F');\",\"} elseif (class_exists('\\\\\\\\Dompdf\\\\\\\\Dompdf')) {\",\"    $dompdf = new \\\\Dompdf\\\\Dompdf();\",\"    $dompdf->loadHtml($html);\",\"    $dompdf->setPaper('A4');\",\"    $dompdf->render();\",\"    file_put_contents($pdfPath, $dompdf->output());\",\"} else {\",\"    // fallback: attach HTML\",\"    $pdfPath = $tmpDir . '/Quote-' . preg_replace('/[^A-Za-z0-9\\\\-]/','', (string)$quote['code']) . '.html';\",\"    file_put_contents($pdfPath, $html);\",\"}\",\"\",\"// Subject/body defaults\",\"if ($subject==='') $subject = 'Quotation ' . $quote['code'];\",\"if ($body==='') {\",\"    $body = \\\"Dear Customer,\\\\n\\\\nPlease find attached quotation {$quote['code']}.\\\\n\\\\nRegards,\\\\n\\\" . ($org['name'] ?? 'Sales Team');\",\"}\",\"\",\"// Send\",\"$sent = false;\",\"if (function_exists('send_mail')) {\",\"    $sent = send_mail($toEmail, $subject, nl2br(h($body)), [$pdfPath]);\",\"} else {\",\"    // basic fallback (no attachment)\",\"    $headers = \\\"From: no-reply@\\\" . ($_SERVER['SERVER_NAME'] ?? 'localhost') . \\\"\\\\r\\\\n\\\";\",\"    $sent = mail($toEmail, $subject, $body, $headers);\",\"}\",\"\",\"if ($sent) {\",\"    $pdo->prepare(\\\"UPDATE sales_quotes SET status='Sent', updated_at=NOW() WHERE id=:id\\\")->execute([':id'=>$quoteId]);\",\"    $pdo->prepare(\\\"INSERT INTO sales_quote_sents (quote_id, sent_to, subject, created_at) VALUES (:qid,:to,:sub,NOW())\\\")\",\"        ->execute([':qid'=>$quoteId, ':to'=>$toEmail, ':sub'=>$subject]);\",\"    flash('Quote emailed successfully.', 'success');\",\"} else {\",\"    flash('Failed to send email. Please check mail configuration.', 'danger');\",\"}\",\"\",\"redirect('/sales_quotes/sales_quotes_view.php?id='.$quoteId);\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/analytics.php\": [\"<?php\",\"declare(strict_types=1);\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"require_once __DIR__ . '/../includes/helpers.php';\",\"require_login(); require_permission('sales.quote.view');\",\"\",\"$pdo=db();\",\"\",\"// Win/Loss by month\",\"$wl = $pdo->query(\\\"\",\"SELECT DATE_FORMAT(quote_date,'%Y-%m') AS ym,\",\"SUM(CASE WHEN status IN ('Accepted','Converted') THEN 1 ELSE 0 END) win,\",\"SUM(CASE WHEN status='Lost' THEN 1 ELSE 0 END) loss,\",\"COUNT(*) total\",\"FROM sales_quotes WHERE deleted_at IS NULL\",\"GROUP BY ym ORDER BY ym DESC LIMIT 12\\\")->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"// Cycle time (lead->quote->order)\",\"$ct = $pdo->query(\\\"\",\"SELECT DATE_FORMAT(q.quote_date,'%Y-%m') ym,\",\"AVG(TIMESTAMPDIFF(DAY, l.created_at, q.quote_date)) AS lead_to_quote_days\",\"FROM sales_quotes q\",\"LEFT JOIN crm_leads l ON l.id=q.lead_id\",\"GROUP BY ym ORDER BY ym DESC LIMIT 12\\\")->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"$UI_PATH= dirname(__DIR__).'/ui';\",\"$PAGE_TITLE='Sales Analytics';\",\"$ACTIVE_MENU='sales.analytics';\",\"require_once $UI_PATH.'/init.php';\",\"require_once $UI_PATH.'/layout_start.php';\",\"?>\",\"<h3>Sales Analytics</h3>\",\"<h5>Win/Loss (last 12 months)</h5>\",\"<table class=\\\"table table-sm table-striped\\\">\",\"  <thead><tr><th>Month</th><th class=\\\"text-end\\\">Wins</th><th class=\\\"text-end\\\">Losses</th><th class=\\\"text-end\\\">Total</th></tr></thead>\",\"  <tbody>\",\"  <?php foreach($wl as $r): ?>\",\"    <tr><td><?=$r['ym']?></td><td class=\\\"text-end\\\"><?=$r['win']?></td><td class=\\\"text-end\\\"><?=$r['loss']?></td><td class=\\\"text-end\\\"><?=$r['total']?></td></tr>\",\"  <?php endforeach; ?>\",\"  </tbody>\",\"</table>\",\"\",\"<h5>Avg Lead \\u2192 Quote days</h5>\",\"<table class=\\\"table table-sm table-striped\\\">\",\"  <thead><tr><th>Month</th><th class=\\\"text-end\\\">Days</th></tr></thead>\",\"  <tbody>\",\"  <?php foreach($ct as $r): ?>\",\"    <tr><td><?=$r['ym']?></td><td class=\\\"text-end\\\"><?=number_format((float)$r['lead_to_quote_days'],1)?></td></tr>\",\"  <?php endforeach; ?>\",\"  </tbody>\",\"</table>\",\"<?php require_once $UI_PATH.'/layout_end.php';\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/revisions_list.php\": [\"<?php\",\"/** PATH: /public_html/sales_quotes/revisions_list.php */\",\"declare(strict_types=1);\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"require_once __DIR__ . '/../includes/helpers.php';\",\"\",\"require_login(); require_permission('sales.quote.view');\",\"\",\"$qid = (int)($_GET['quote_id'] ?? 0);\",\"if ($qid<=0) { flash('Invalid quote id','danger'); redirect('/sales_quotes/sales_quotes_list.php'); }\",\"\",\"$pdo = db();\",\"$qh = $pdo->prepare(\\\"SELECT id, code, title FROM sales_quotes WHERE id=:id\\\");\",\"$qh->execute([':id'=>$qid]);\",\"$q = $qh->fetch(PDO::FETCH_ASSOC);\",\"if (!$q) { flash('Quote not found','danger'); redirect('/sales_quotes/sales_quotes_list.php'); }\",\"\",\"$revs = $pdo->prepare(\\\"SELECT id, rev_no, created_by, created_at FROM sales_quote_revisions WHERE quote_id=:id ORDER BY rev_no DESC\\\");\",\"$revs->execute([':id'=>$qid]);\",\"$rows = $revs->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"$UI_PATH = dirname(__DIR__).'/ui';\",\"$PAGE_TITLE = 'Revisions - '.$q['code'];\",\"$ACTIVE_MENU = 'sales.quotes';\",\"require_once $UI_PATH.'/init.php';\",\"require_once $UI_PATH.'/layout_start.php';\",\"?>\",\"<h3 class=\\\"mb-3\\\">Revisions for <?=h($q['code'])?> - <?=h($q['title']??'')?></h3>\",\"\",\"<form class=\\\"row g-2 mb-3\\\" method=\\\"get\\\" action=\\\"/sales_quotes/revisions_compare.php\\\">\",\"  <input type=\\\"hidden\\\" name=\\\"quote_id\\\" value=\\\"<?=$qid?>\\\">\",\"  <div class=\\\"col-auto\\\">\",\"    <select name=\\\"a\\\" class=\\\"form-select\\\" required>\",\"      <option value=\\\"\\\">Select Rev A</option>\",\"      <?php foreach ($rows as $r): ?>\",\"        <option value=\\\"<?=$r['rev_no']?>\\\">R<?=$r['rev_no']?> (<?=$r['created_at']?>)</option>\",\"      <?php endforeach; ?>\",\"    </select>\",\"  </div>\",\"  <div class=\\\"col-auto\\\">\",\"    <select name=\\\"b\\\" class=\\\"form-select\\\" required>\",\"      <option value=\\\"\\\">Select Rev B</option>\",\"      <?php foreach ($rows as $r): ?>\",\"        <option value=\\\"<?=$r['rev_no']?>\\\">R<?=$r['rev_no']?> (<?=$r['created_at']?>)</option>\",\"      <?php endforeach; ?>\",\"    </select>\",\"  </div>\",\"  <div class=\\\"col-auto\\\">\",\"    <button class=\\\"btn btn-outline-primary\\\">Compare</button>\",\"  </div>\",\"</form>\",\"\",\"<table class=\\\"table table-sm table-striped\\\">\",\"  <thead><tr><th>Rev</th><th>Created</th><th>By</th><th class=\\\"text-end\\\">Actions</th></tr></thead>\",\"  <tbody>\",\"    <?php foreach ($rows as $r): ?>\",\"      <tr>\",\"        <td>R<?=$r['rev_no']?></td>\",\"        <td><?=h($r['created_at'])?></td>\",\"        <td>#<?=h($r['created_by'])?></td>\",\"        <td class=\\\"text-end\\\">\",\"          <?php if (rbac_can('sales.quote.edit')): ?>\",\"          <form action=\\\"/sales_quotes/revision_restore.php\\\" method=\\\"post\\\" class=\\\"d-inline\\\" onsubmit=\\\"return confirm('Restore this revision into the live quote?');\\\">\",\"            <?=csrf_hidden_input()?>\",\"            <input type=\\\"hidden\\\" name=\\\"quote_id\\\" value=\\\"<?=$qid?>\\\">\",\"            <input type=\\\"hidden\\\" name=\\\"rev_no\\\" value=\\\"<?=$r['rev_no']?>\\\">\",\"            <button class=\\\"btn btn-sm btn-outline-warning\\\">Restore</button>\",\"          </form>\",\"          <?php endif; ?>\",\"          <a class=\\\"btn btn-sm btn-outline-secondary\\\" href=\\\"/sales_quotes/revisions_compare.php?quote_id=<?=$qid?>&a=<?=$r['rev_no']?>&b=<?=$r['rev_no']?>\\\">View</a>\",\"        </td>\",\"      </tr>\",\"    <?php endforeach; ?>\",\"  </tbody>\",\"</table>\",\"<?php require_once $UI_PATH.'/layout_end.php';\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/convert_to_order.php\": [\"<?php\",\"/** PATH: /public_html/sales_quotes/convert_to_order.php */\",\"declare(strict_types=1);\",\"\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"require_once __DIR__ . '/../includes/csrf.php';\",\"require_once __DIR__ . '/../includes/helpers.php';\",\"\",\"require_login();\",\"require_permission('sales.order.create');\",\"csrf_require_token();\",\"\",\"$quoteId    = (int)($_POST['quote_id'] ?? $_GET['quote_id'] ?? 0);\",\"$setLeadWon = (int)($_POST['set_lead_won'] ?? $_GET['set_lead_won'] ?? 0);\",\"\",\"if ($quoteId <= 0) {\",\"    flash('Invalid quote id', 'danger');\",\"    redirect('/sales_quotes/sales_quotes_list.php');\",\"}\",\"\",\"$pdo = db();\",\"$pdo->beginTransaction();\",\"\",\"try {\",\"    // Lock quote\",\"    $q = $pdo->prepare(\\\"\",\"        SELECT q.*, p.name AS party_name\",\"          FROM sales_quotes q\",\"          LEFT JOIN parties p ON p.id = q.party_id\",\"         WHERE q.id = :id AND q.deleted_at IS NULL\",\"         FOR UPDATE\",\"    \\\");\",\"    $q->execute([':id' => $quoteId]);\",\"    $quote = $q->fetch(PDO::FETCH_ASSOC);\",\"    if (!$quote) {\",\"        throw new RuntimeException('Quote not found or deleted.');\",\"    }\",\"\",\"    // Already converted?\",\"    $chk = $pdo->prepare(\\\"SELECT id FROM sales_orders WHERE quote_id = :qid LIMIT 1\\\");\",\"    $chk->execute([':qid' => $quoteId]);\",\"    if ($chk->fetchColumn()) {\",\"        throw new RuntimeException('This quote is already converted to a Sales Order.');\",\"    }\",\"\",\"    // Fetch quote items (MAPPED TO YOUR SCHEMA)\",\"    $qi = $pdo->prepare(\\\"\",\"        SELECT sl_no, item_code, item_name, qty, uom, rate, discount_pct, tax_pct, line_total\",\"          FROM sales_quote_items\",\"         WHERE quote_id = :qid\",\"         ORDER BY sl_no\",\"    \\\");\",\"    $qi->execute([':qid' => $quoteId]);\",\"    $items = $qi->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"    // Create SO header (adjust fields as per your sales_orders table)\",\"    $soNo = next_no('SO');\",\"    $insSO = $pdo->prepare(\\\"\",\"        INSERT INTO sales_orders\",\"            (code, quote_id, party_id, contact_id, site_id, title, order_date, currency, fx_rate,\",\"             subtotal, discount_total, tax_total, grand_total, status, created_by, created_at)\",\"        VALUES\",\"            (:code, :quote_id, :party_id, :contact_id, :site_id, :title, CURRENT_DATE, :currency, :fx_rate,\",\"             :subtotal, :discount_total, :tax_total, :grand_total, 'Draft', :uid, NOW())\",\"    \\\");\",\"    $insSO->execute([\",\"        ':code'           => $soNo,\",\"        ':quote_id'       => $quote['id'],\",\"        ':party_id'       => $quote['party_id'],\",\"        ':contact_id'     => $quote['contact_id'],\",\"        ':site_id'        => $quote['site_id'],\",\"        ':title'          => $quote['title'] ?: ('Order for ' . ($quote['party_name'] ?? '')),\",\"        ':currency'       => $quote['currency'] ?? 'INR',\",\"        ':fx_rate'        => $quote['fx_rate'] ?? 1.0,\",\"        ':subtotal'       => $quote['subtotal'] ?? 0,\",\"        ':discount_total' => $quote['discount_total'] ?? 0,\",\"        ':tax_total'      => $quote['tax_total'] ?? 0,\",\"        ':grand_total'    => $quote['grand_total'] ?? 0,\",\"        ':uid'            => (int)current_user_id(),\",\"    ]);\",\"    $soId = (int)$pdo->lastInsertId();\",\"\",\"    // Copy items into sales_order_items (assumes same-named columns exist there)\",\"    if ($items) {\",\"        $insItem = $pdo->prepare(\\\"\",\"            INSERT INTO sales_order_items\",\"                (order_id, sl_no, item_code, item_name, qty, uom, rate, discount_pct, tax_pct, line_total)\",\"            VALUES\",\"                (:order_id, :sl_no, :item_code, :item_name, :qty, :uom, :rate, :discount_pct, :tax_pct, :line_total)\",\"        \\\");\",\"        foreach ($items as $it) {\",\"            $insItem->execute([\",\"                ':order_id'     => $soId,\",\"                ':sl_no'        => (int)$it['sl_no'],\",\"                ':item_code'    => (string)($it['item_code'] ?? ''),\",\"                ':item_name'    => (string)$it['item_name'],\",\"                ':qty'          => (float)$it['qty'],\",\"                ':uom'          => (string)$it['uom'],\",\"                ':rate'         => (float)$it['rate'],\",\"                ':discount_pct' => (float)($it['discount_pct'] ?? 0),\",\"                ':tax_pct'      => (float)($it['tax_pct'] ?? 0),\",\"                ':line_total'   => (float)$it['line_total'],\",\"            ]);\",\"        }\",\"    }\",\"\",\"    // Optional: mark related lead Won\",\"    if ($setLeadWon && (int)$quote['lead_id'] > 0) {\",\"        $pdo->prepare(\\\"UPDATE crm_leads SET stage='Won', updated_at=NOW() WHERE id=:lid\\\")\",\"            ->execute([':lid' => (int)$quote['lead_id']]);\",\"    }\",\"\",\"    // Mark quote as converted\",\"    $pdo->prepare(\\\"UPDATE sales_quotes SET status='Converted', updated_at=NOW() WHERE id=:qid\\\")\",\"        ->execute([':qid' => $quoteId]);\",\"\",\"    $pdo->commit();\",\"\",\"    flash(\\\"Sales Order #{$soNo} created from Quote #{$quote['code']}.\\\", 'success');\",\"    redirect('/sales_orders/sales_order_view.php?id=' . $soId);\",\"\",\"} catch (Throwable $e) {\",\"    if ($pdo->inTransaction()) $pdo->rollBack();\",\"    // Helpful guidance if sales_order_items schema differs\",\"    $msg = $e->getMessage();\",\"    if (stripos($msg, 'Unknown column') !== false) {\",\"        $msg .= ' \\u2014 Adjust the INSERT column list in sales_order_items to your schema.';\",\"    }\",\"    flash('Conversion failed: ' . h($msg), 'danger');\",\"    redirect('/sales_quotes/sales_quotes_view.php?id=' . $quoteId);\",\"}\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/revision_new.php\": [\"<?php\",\"/** PATH: /public_html/sales_quotes/revision_new.php */\",\"declare(strict_types=1);\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"require_once __DIR__ . '/../includes/csrf.php';\",\"require_once __DIR__ . '/../includes/helpers.php';\",\"\",\"require_login(); require_permission('sales.quote.edit'); csrf_require_token();\",\"\",\"$qid = (int)($_POST['quote_id'] ?? 0);\",\"if ($qid<=0) { flash('Invalid quote id','danger'); redirect('/sales_quotes/sales_quotes_list.php'); }\",\"\",\"$pdo = db();\",\"\",\"$h = $pdo->prepare(\\\"SELECT * FROM sales_quotes WHERE id=:id AND deleted_at IS NULL\\\");\",\"$h->execute([':id'=>$qid]);\",\"$header = $h->fetch(PDO::FETCH_ASSOC);\",\"if (!$header) { flash('Quote not found','danger'); redirect('/sales_quotes/sales_quotes_list.php'); }\",\"\",\"$i = $pdo->prepare(\\\"SELECT * FROM sales_quote_items WHERE quote_id=:id ORDER BY sl\\\");\",\"$i->execute([':id'=>$qid]);\",\"$items = $i->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"$revNo = (int)$pdo->query(\\\"SELECT COALESCE(MAX(rev_no),0)+1 AS n FROM sales_quote_revisions WHERE quote_id={$qid}\\\")->fetchColumn();\",\"$payload = json_encode(['header'=>$header,'items'=>$items], JSON_UNESCAPED_UNICODE);\",\"\",\"$s = $pdo->prepare(\\\"INSERT INTO sales_quote_revisions(quote_id,rev_no,snapshot,created_by,created_at) VALUES(?,?,?,?,NOW())\\\");\",\"$s->execute([$qid,$revNo,$payload,(int)current_user_id()]);\",\"\",\"flash(\\\"Revision R{$revNo} saved.\\\", 'success');\",\"redirect('/sales_quotes/revisions_list.php?quote_id='.$qid);\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/revision_restore.php\": [\"<?php\",\"/** PATH: /public_html/sales_quotes/revision_restore.php */\",\"declare(strict_types=1);\",\"\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"require_once __DIR__ . '/../includes/csrf.php';\",\"require_once __DIR__ . '/../includes/helpers.php';\",\"\",\"require_login();\",\"require_permission('sales.quote.edit');\",\"csrf_require_token();\",\"\",\"$qid = (int)($_POST['quote_id'] ?? 0);\",\"$rev = (int)($_POST['rev_no'] ?? 0);\",\"if ($qid<=0 || $rev<=0) { flash('Invalid request','danger'); redirect('/sales_quotes/sales_quotes_list.php'); }\",\"\",\"$pdo = db();\",\"$stm = $pdo->prepare(\\\"SELECT snapshot FROM sales_quote_revisions WHERE quote_id=:qid AND rev_no=:r\\\");\",\"$stm->execute([':qid'=>$qid, ':r'=>$rev]);\",\"$row = $stm->fetch(PDO::FETCH_ASSOC);\",\"if (!$row) { flash('Revision not found','danger'); redirect('/sales_quotes/sales_quotes_view.php?id='.$qid); }\",\"\",\"$data  = json_decode($row['snapshot'], true);\",\"$h     = $data['header'] ?? null;\",\"$items = $data['items'] ?? [];\",\"\",\"if (!$h) { flash('Invalid snapshot','danger'); redirect('/sales_quotes/sales_quotes_view.php?id='.$qid); }\",\"\",\"$pdo->beginTransaction();\",\"try {\",\"    // Update header (keep id/created*)\",\"    $fields = ['title','quote_date','party_id','contact_id','site_id','currency','fx_rate','subtotal','discount_total','tax_total','grand_total','terms','status'];\",\"    $set = []; $params = [':id'=>$qid];\",\"    foreach ($fields as $f) { $set[] = \\\"$f=:$f\\\"; $params[\\\":$f\\\"] = $h[$f] ?? null; }\",\"    $pdo->prepare(\\\"UPDATE sales_quotes SET \\\".implode(',', $set).\\\", updated_at=NOW() WHERE id=:id\\\")->execute($params);\",\"\",\"    // Replace items (MAPPED TO YOUR SCHEMA)\",\"    $pdo->prepare(\\\"DELETE FROM sales_quote_items WHERE quote_id=:id\\\")->execute([':id'=>$qid]);\",\"\",\"    $ins = $pdo->prepare(\\\"\",\"        INSERT INTO sales_quote_items\",\"            (quote_id, sl_no, item_code, item_name, qty, uom, rate, discount_pct, tax_pct, line_total)\",\"        VALUES\",\"            (:qid, :sl_no, :item_code, :item_name, :qty, :uom, :rate, :discount_pct, :tax_pct, :line_total)\",\"    \\\");\",\"\",\"    $fallbackSl = 1;\",\"    foreach ($items as $it){\",\"        $ins->execute([\",\"            ':qid'          => $qid,\",\"            ':sl_no'        => (int)($it['sl_no'] ?? $fallbackSl++),\",\"            ':item_code'    => (string)($it['item_code'] ?? ''),\",\"            ':item_name'    => (string)($it['item_name'] ?? ($it['name'] ?? '')),\",\"            ':qty'          => (float)($it['qty'] ?? 0),\",\"            ':uom'          => (string)($it['uom'] ?? ''),\",\"            ':rate'         => (float)($it['rate'] ?? ($it['price'] ?? 0)),\",\"            ':discount_pct' => (float)($it['discount_pct'] ?? 0),\",\"            ':tax_pct'      => (float)($it['tax_pct'] ?? ($it['tax_rate'] ?? 0)),\",\"            ':line_total'   => (float)($it['line_total'] ?? 0),\",\"        ]);\",\"    }\",\"\",\"    $pdo->commit();\",\"    flash(\\\"Revision R{$rev} restored into the live quote.\\\", 'success');\",\"\",\"} catch (Throwable $e) {\",\"    if ($pdo->inTransaction()) $pdo->rollBack();\",\"    flash('Restore failed: '.h($e->getMessage()), 'danger');\",\"}\",\"redirect('/sales_quotes/sales_quotes_view.php?id='.$qid);\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/sales_quotes_delete.php\": [\"<?php\",\"declare(strict_types=1);\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"require_once __DIR__ . '/../includes/csrf.php';\",\"require_login(); require_permission('sales.quote.delete'); csrf_require_token();\",\"$id = (int)($_POST['id'] ?? 0);\",\"if ($id>0){\",\"  $pdo = db();\",\"  $stm = $pdo->prepare(\\\"UPDATE sales_quotes SET deleted_at=NOW() WHERE id=:id AND status<>'Converted'\\\");\",\"  $stm->execute([':id'=>$id]);\",\"  if ($stm->rowCount()===0) flash('Cannot delete (maybe already converted?)','warning');\",\"  else flash('Quote deleted (soft).','success');\",\"}\",\"redirect('/sales_quotes/sales_quotes_list.php');\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/revisions_compare.php\": [\"<?php\",\"/** PATH: /public_html/sales_quotes/revisions_compare.php */\",\"declare(strict_types=1);\",\"\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"require_once __DIR__ . '/../includes/helpers.php';\",\"\",\"require_login();\",\"require_permission('sales.quote.view');\",\"\",\"$qid = (int)($_GET['quote_id'] ?? 0);\",\"$A   = (int)($_GET['a'] ?? 0);\",\"$B   = (int)($_GET['b'] ?? 0);\",\"if ($qid<=0 || $A<=0 || $B<=0) { http_response_code(400); echo 'Bad request'; exit; }\",\"\",\"$pdo = db();\",\"$load = $pdo->prepare(\\\"\",\"    SELECT rev_no, snapshot, created_at\",\"      FROM sales_quote_revisions\",\"     WHERE quote_id=:qid AND rev_no IN (:a,:b)\",\"     ORDER BY rev_no\",\"\\\");\",\"$load->execute([':qid'=>$qid, ':a'=>$A, ':b'=>$B]);\",\"$revs = $load->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"$pick = function(array $rows, int $revNo) {\",\"    foreach ($rows as $r) if ((int)$r['rev_no'] === $revNo) return json_decode($r['snapshot'] ?? '{}', true);\",\"    return [];\",\"};\",\"$rA = $pick($revs, $A);\",\"$rB = $pick($revs, $B);\",\"\",\"function diff_cell($av, $bv){\",\"    if ($av === $bv) return '<td colspan=\\\"2\\\">'.h((string)$av).'</td>';\",\"    return '<td><del>'.h((string)$av).'</del></td><td><ins>'.h((string)$bv).'</ins></td>';\",\"}\",\"\",\"$UI_PATH = dirname(__DIR__).'/ui';\",\"$PAGE_TITLE = \\\"Compare R{$A} vs R{$B}\\\";\",\"$ACTIVE_MENU = 'sales.quotes';\",\"require_once $UI_PATH.'/init.php';\",\"require_once $UI_PATH.'/layout_start.php';\",\"?>\",\"<h3>Compare Revisions R<?=$A?> \\u2194 R<?=$B?></h3>\",\"\",\"<h5 class=\\\"mt-3\\\">Header</h5>\",\"<table class=\\\"table table-sm\\\">\",\"  <thead><tr><th>Field</th><th>Rev <?=$A?></th><th>Rev <?=$B?></th></tr></thead>\",\"  <tbody>\",\"  <?php\",\"  $fields = ['title','quote_date','party_id','contact_id','subtotal','discount_total','tax_total','grand_total','terms','status'];\",\"  foreach ($fields as $f) {\",\"    $av = $rA['header'][$f] ?? '';\",\"    $bv = $rB['header'][$f] ?? '';\",\"    echo '<tr><th>'.h($f).'</th>'.diff_cell($av,$bv).'</tr>';\",\"  }\",\"  ?>\",\"  </tbody>\",\"</table>\",\"\",\"<h5 class=\\\"mt-3\\\">Lines</h5>\",\"<table class=\\\"table table-sm\\\">\",\"  <thead>\",\"    <tr>\",\"      <th>Sl</th><th>Item Code</th><th>Item Name</th>\",\"      <th class=\\\"text-end\\\">Qty</th><th>UOM</th>\",\"      <th class=\\\"text-end\\\">Rate</th><th class=\\\"text-end\\\">Disc %</th>\",\"      <th class=\\\"text-end\\\">Tax %</th><th class=\\\"text-end\\\">Amount</th>\",\"    </tr>\",\"  </thead>\",\"  <tbody>\",\"  <?php\",\"  $la = $rA['items'] ?? [];\",\"  $lb = $rB['items'] ?? [];\",\"  $max = max(count($la), count($lb));\",\"  for ($i=0;$i<$max;$i++){\",\"    $a = $la[$i] ?? [];\",\"    $b = $lb[$i] ?? [];\",\"    $slA = $a['sl_no'] ?? ($i+1);\",\"    $slB = $b['sl_no'] ?? ($i+1);\",\"    $chg = ($a != $b) ? 'table-warning' : '';\",\"    echo \\\"<tr class='{$chg}'>\\\";\",\"    echo \\\"<td>\\\".h($slA).\\\" \\u2192 \\\".h($slB).\\\"</td>\\\";\",\"    echo \\\"<td>\\\".h($a['item_code'] ?? '').\\\" \\u2192 \\\".h($b['item_code'] ?? '').\\\"</td>\\\";\",\"    echo \\\"<td>\\\".h($a['item_name'] ?? ($a['name'] ?? '')).\\\"</td>\\\";\",\"    echo \\\"<td class='text-end'>\\\".h($a['qty'] ?? '').\\\" \\u2192 \\\".h($b['qty'] ?? '').\\\"</td>\\\";\",\"    echo \\\"<td>\\\".h($a['uom'] ?? '').\\\" \\u2192 \\\".h($b['uom'] ?? '').\\\"</td>\\\";\",\"    echo \\\"<td class='text-end'>\\\".h($a['rate'] ?? ($a['price'] ?? '')).\\\" \\u2192 \\\".h($b['rate'] ?? ($b['price'] ?? '')).\\\"</td>\\\";\",\"    echo \\\"<td class='text-end'>\\\".h($a['discount_pct'] ?? '').\\\" \\u2192 \\\".h($b['discount_pct'] ?? '').\\\"</td>\\\";\",\"    echo \\\"<td class='text-end'>\\\".h($a['tax_pct'] ?? ($a['tax_rate'] ?? '')).\\\" \\u2192 \\\".h($b['tax_pct'] ?? ($b['tax_rate'] ?? '')).\\\"</td>\\\";\",\"    echo \\\"<td class='text-end'>\\\".h($a['line_total'] ?? '').\\\" \\u2192 \\\".h($b['line_total'] ?? '').\\\"</td>\\\";\",\"    echo \\\"</tr>\\\";\",\"  }\",\"  ?>\",\"  </tbody>\",\"</table>\",\"<?php require_once $UI_PATH.'/layout_end.php';\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/sales_quotes_form.php\": [\"<?php\",\"/** PATH: /public_html/sales_quotes/sales_quotes_form.php */\",\"declare(strict_types=1);\",\"\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"require_once __DIR__ . '/../includes/csrf.php';\",\"require_once __DIR__ . '/../includes/helpers.php';\",\"\",\"require_login();\",\"$id = (int)($_GET['id'] ?? 0);\",\"$isEdit = $id > 0;\",\"require_permission($isEdit ? 'sales.quote.edit' : 'sales.quote.create');\",\"\",\"$pdo = db();\",\"\",\"/** ---------- helpers (table detection) ---------- */\",\"function table_exists(PDO $pdo, string $name): bool {\",\"  static $cache = [];\",\"  if (array_key_exists($name, $cache)) return $cache[$name];\",\"  $st = $pdo->prepare(\\\"SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = ?\\\");\",\"  $st->execute([$name]);\",\"  return $cache[$name] = ((int)$st->fetchColumn() > 0);\",\"}\",\"function fetch_quote_items(PDO $pdo, int $quoteId): array {\",\"  if ($quoteId <= 0) return [];\",\"  // 1) sales_quote_items.quote_id\",\"  if (table_exists($pdo, 'sales_quote_items')) {\",\"    try {\",\"      $st = $pdo->prepare(\\\"SELECT * FROM sales_quote_items WHERE quote_id=? ORDER BY sl_no, id\\\");\",\"      $st->execute([$quoteId]);\",\"      $rows = $st->fetchAll(PDO::FETCH_ASSOC);\",\"      if ($rows) return $rows;\",\"      // try sales_quote_id column (fallback)\",\"      $st = $pdo->prepare(\\\"SELECT * FROM sales_quote_items WHERE sales_quote_id=? ORDER BY sl_no, id\\\");\",\"      $st->execute([$quoteId]);\",\"      $rows = $st->fetchAll(PDO::FETCH_ASSOC);\",\"      if ($rows) return $rows;\",\"    } catch (Throwable $e) {}\",\"  }\",\"  // 2) sales_quotes_items.quote_id (plural table)\",\"  if (table_exists($pdo, 'sales_quotes_items')) {\",\"    try {\",\"      $st = $pdo->prepare(\\\"SELECT * FROM sales_quotes_items WHERE quote_id=? ORDER BY sl_no, id\\\");\",\"      $st->execute([$quoteId]);\",\"      $rows = $st->fetchAll(PDO::FETCH_ASSOC);\",\"      if ($rows) return $rows;\",\"      $st = $pdo->prepare(\\\"SELECT * FROM sales_quotes_items WHERE sales_quote_id=? ORDER BY sl_no, id\\\");\",\"      $st->execute([$quoteId]);\",\"      $rows = $st->fetchAll(PDO::FETCH_ASSOC);\",\"      if ($rows) return $rows;\",\"    } catch (Throwable $e) {}\",\"  }\",\"  return [];\",\"}\",\"\",\"/** ---------- header defaults ---------- */\",\"$row = [\",\"  'code' => '',\",\"  'quote_date' => date('Y-m-d'),\",\"  'valid_till' => null,\",\"  'status' => 'Draft',\",\"  'party_id' => null,\",\"  'party_contact_id' => null,\",\"  'lead_id' => isset($_GET['lead_id']) ? (int)$_GET['lead_id'] : null,\",\"  'currency' => 'INR',\",\"  'notes' => '',\",\"  'terms' => '',\",\"  'subtotal' => '0.00',\",\"  'discount_amount' => '0.00',\",\"  'tax_amount' => '0.00',\",\"  'round_off' => '0.00',\",\"  'grand_total' => '0.00',\",\"  // site address fields\",\"  'site_name' => '',\",\"  'site_address_line1' => '',\",\"  'site_address_line2' => '',\",\"  'site_city' => '',\",\"  'site_state' => '',\",\"  'site_pincode' => '',\",\"  'site_gst_number' => '',\",\"  // toggle\",\"  'use_site_as_bill_to' => 0,\",\"];\",\"\",\"/** ---------- load existing header ---------- */\",\"if ($isEdit) {\",\"  $st = $pdo->prepare(\\\"SELECT * FROM sales_quotes WHERE id=? LIMIT 1\\\");\",\"  $st->execute([$id]);\",\"  if ($dbrow = $st->fetch(PDO::FETCH_ASSOC)) $row = array_merge($row, $dbrow);\",\"}\",\"\",\"/** ---------- prefill from lead ---------- */\",\"if (!$isEdit && !empty($row['lead_id'])) {\",\"  $st = $pdo->prepare(\\\"SELECT party_id, party_contact_id, title FROM crm_leads WHERE id=?\\\");\",\"  $st->execute([(int)$row['lead_id']]);\",\"  if ($lead = $st->fetch(PDO::FETCH_ASSOC)) {\",\"    if (!empty($lead['party_id'])) $row['party_id'] = (int)$lead['party_id'];\",\"    if (!empty($lead['party_contact_id'])) $row['party_contact_id'] = (int)$lead['party_contact_id'];\",\"    if (empty($row['notes']) && !empty($lead['title'])) $row['notes'] = 'Ref: Lead - '.$lead['title'];\",\"  }\",\"}\",\"\",\"/** ---------- clients & contacts ---------- */\",\"$clients = $pdo->query(\\\"SELECT id, code, name FROM parties\",\"  WHERE (status=1 OR status IS NULL) AND (type='client' OR type IS NULL)\",\"  ORDER BY name\\\")->fetchAll(PDO::FETCH_ASSOC);\",\"\",\"$contacts = [];\",\"if (!empty($row['party_id'])) {\",\"  $st = $pdo->prepare(\\\"SELECT id, name, phone FROM party_contacts WHERE party_id=? ORDER BY is_primary DESC, name\\\");\",\"  $st->execute([(int)$row['party_id']]);\",\"  $contacts = $st->fetchAll(PDO::FETCH_ASSOC);\",\"}\",\"\",\"/** ---------- UOM (active) ---------- */\",\"$uoms = $pdo->query(\\\"SELECT code, name FROM uom WHERE status='active' ORDER BY name\\\")->fetchAll(PDO::FETCH_ASSOC);\",\"$uomOptionsHtml = '';\",\"foreach ($uoms as $u) {\",\"  $code = (string)$u['code'];\",\"  $label = trim($u['code'].' - '.$u['name']);\",\"  $uomOptionsHtml .= '<option value=\\\"'.h($code).'\\\">'.h($label).'</option>';\",\"}\",\"\",\"/** ---------- Quote Items master (for dropdown) ---------- */\",\"$qItems = $pdo->query(\\\"SELECT code, name, hsn_sac, uom, rate_default, tax_pct_default\",\"                       FROM quote_items\",\"                       WHERE deleted_at IS NULL AND is_active=1\",\"                       ORDER BY name LIMIT 500\\\")->fetchAll(PDO::FETCH_ASSOC);\",\"$QI_OPTIONS_HTML = '<option value=\\\"\\\">-- Pick Item --</option>';\",\"$QI_MAP = [];\",\"foreach ($qItems as $qi) {\",\"  $code = (string)$qi['code'];\",\"  $text = ($qi['code'] ? $qi['code'].' \\u00b7 ' : '').$qi['name'];\",\"  $QI_OPTIONS_HTML .= '<option value=\\\"'.h($code).'\\\">'.h($text).'</option>';\",\"  $QI_MAP[$code] = [\",\"    'name' => (string)$qi['name'],\",\"    'hsn'  => (string)($qi['hsn_sac'] ?? ''),\",\"    'uom'  => (string)($qi['uom'] ?? ''),\",\"    'rate' => (string)number_format((float)($qi['rate_default'] ?? 0), 2, '.', ''),\",\"    'tax'  => (string)number_format((float)($qi['tax_pct_default'] ?? 0), 2, '.', ''),\",\"  ];\",\"}\",\"\",\"/** ---------- items for this quote (robust) ---------- */\",\"$items = $isEdit ? fetch_quote_items($pdo, $id) : [];\",\"\",\"include __DIR__ . '/../ui/layout_start.php';\",\"render_flash();\",\"?>\",\"<style>\",\".item-suggest{position:absolute;z-index:1000;display:none;max-height:260px;overflow-y:auto;background:#fff;border:1px solid rgba(0,0,0,.15);border-radius:.5rem;box-shadow:0 .5rem 1rem rgba(0,0,0,.15)}\",\".item-cell{position:relative}\",\"</style>\",\"\",\"<div class=\\\"d-flex align-items-center justify-content-between mb-3\\\">\",\"  <h1 class=\\\"h4 mb-0\\\"><?= $isEdit ? 'Edit Quotation' : 'New Quotation' ?></h1>\",\"  <div class=\\\"d-flex gap-2\\\">\",\"    <?php if ($isEdit): ?>\",\"      <a class=\\\"btn btn-outline-secondary\\\" target=\\\"_blank\\\" href=\\\"<?= h('../prints/quote_print.php?id='.$id) ?>\\\">Print</a>\",\"      <?php if (has_permission('sales.order.create')): ?>\",\"        <a class=\\\"btn btn-outline-primary\\\" href=\\\"<?= h('convert_to_order.php?quote_id='.$id) ?>\\\">Convert \\u2192 Order</a>\",\"      <?php endif; ?>\",\"    <?php endif; ?>\",\"    <a href=\\\"<?= h('sales_quotes_list.php') ?>\\\" class=\\\"btn btn-outline-secondary\\\">Back</a>\",\"  </div>\",\"</div>\",\"\",\"<form method=\\\"post\\\" action=\\\"<?= h('sales_quotes_save.php') ?>\\\" id=\\\"quoteForm\\\">\",\"  <?= csrf_field() ?>\",\"  <input type=\\\"hidden\\\" name=\\\"id\\\" value=\\\"<?= (int)$id ?>\\\">\",\"\",\"  <div class=\\\"row g-3\\\">\",\"    <div class=\\\"col-md-3\\\">\",\"      <label class=\\\"form-label\\\">Quote No</label>\",\"      <input class=\\\"form-control\\\" name=\\\"code\\\" value=\\\"<?= h((string)$row['code']) ?>\\\" placeholder=\\\"Auto on save (QO)\\\">\",\"    </div>\",\"    <div class=\\\"col-md-3\\\">\",\"      <label class=\\\"form-label\\\">Quote Date</label>\",\"      <input type=\\\"date\\\" name=\\\"quote_date\\\" class=\\\"form-control\\\" value=\\\"<?= h((string)$row['quote_date']) ?>\\\">\",\"    </div>\",\"    <div class=\\\"col-md-3\\\">\",\"      <label class=\\\"form-label\\\">Valid Till</label>\",\"      <input type=\\\"date\\\" name=\\\"valid_till\\\" class=\\\"form-control\\\" value=\\\"<?= h((string)$row['valid_till']) ?>\\\">\",\"    </div>\",\"    <div class=\\\"col-md-3\\\">\",\"      <label class=\\\"form-label\\\">Status</label>\",\"      <select name=\\\"status\\\" class=\\\"form-select\\\">\",\"        <?php foreach (['Draft','Sent','Accepted','Lost','Expired','Canceled'] as $s): ?>\",\"          <option value=\\\"<?= h($s) ?>\\\" <?= ($row['status']===$s?'selected':'') ?>><?= h($s) ?></option>\",\"        <?php endforeach; ?>\",\"      </select>\",\"    </div>\",\"\",\"    <div class=\\\"col-md-6\\\">\",\"      <label class=\\\"form-label\\\">Client (Party)</label>\",\"      <select name=\\\"party_id\\\" id=\\\"party_id\\\" class=\\\"form-select\\\">\",\"        <option value=\\\"\\\">-- Select Client --</option>\",\"        <?php foreach ($clients as $c): ?>\",\"          <option value=\\\"<?= (int)$c['id'] ?>\\\" <?= ((int)$row['party_id']===(int)$c['id']?'selected':'') ?>>\",\"            <?= h($c['name'].($c['code']?' ('.$c['code'].')':'')) ?>\",\"          </option>\",\"        <?php endforeach; ?>\",\"      </select>\",\"    </div>\",\"    <div class=\\\"col-md-6\\\">\",\"      <label class=\\\"form-label\\\">Contact</label>\",\"      <select name=\\\"party_contact_id\\\" id=\\\"party_contact_id\\\" class=\\\"form-select\\\" <?= $row['party_id']?'':'disabled' ?>>\",\"        <option value=\\\"\\\">-- Select Contact --</option>\",\"        <?php foreach ($contacts as $c): ?>\",\"          <option value=\\\"<?= (int)$c['id'] ?>\\\" <?= ((int)$row['party_contact_id']===(int)$c['id']?'selected':'') ?>>\",\"            <?= h($c['name'].($c['phone']?' \\u00b7 '.$c['phone']:'')) ?>\",\"          </option>\",\"        <?php endforeach; ?>\",\"      </select>\",\"    </div>\",\"\",\"    <div class=\\\"col-md-2\\\">\",\"      <label class=\\\"form-label\\\">Currency</label>\",\"      <input class=\\\"form-control\\\" name=\\\"currency\\\" value=\\\"<?= h((string)$row['currency']) ?>\\\">\",\"    </div>\",\"    <div class=\\\"col-md-10\\\">\",\"      <label class=\\\"form-label\\\">Notes (internal)</label>\",\"      <input class=\\\"form-control\\\" name=\\\"notes\\\" value=\\\"<?= h((string)$row['notes']) ?>\\\">\",\"    </div>\",\"    <div class=\\\"col-12\\\">\",\"      <label class=\\\"form-label\\\">Terms (customer-visible)</label>\",\"      <textarea class=\\\"form-control\\\" name=\\\"terms\\\" rows=\\\"3\\\"><?= h((string)$row['terms']) ?></textarea>\",\"    </div>\",\"  </div>\",\"\",\"  <hr class=\\\"my-3\\\">\",\"  <!-- Site Address Block (unchanged) -->\",\"  <div class=\\\"card mb-3\\\">\",\"    <div class=\\\"card-header d-flex justify-content-between align-items-center flex-wrap gap-2\\\">\",\"      <span>Site Address</span>\",\"      <div class=\\\"d-flex align-items-center gap-2\\\">\",\"        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-secondary\\\" id=\\\"copyClientAddr\\\">Copy from Client</button>\",\"        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-secondary\\\" id=\\\"clearSiteAddr\\\">Clear</button>\",\"        <div class=\\\"form-check form-switch ms-2\\\">\",\"          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"use_site_as_bill_to\\\" name=\\\"use_site_as_bill_to\\\" <?= ((int)$row['use_site_as_bill_to'] ? 'checked' : '') ?>>\",\"          <label class=\\\"form-check-label\\\" for=\\\"use_site_as_bill_to\\\">Use Site as Bill To (for print & GST)</label>\",\"        </div>\",\"      </div>\",\"    </div>\",\"    <div class=\\\"card-body\\\">\",\"      <div class=\\\"row g-3\\\">\",\"        <div class=\\\"col-md-6\\\"><label class=\\\"form-label\\\">Site / Attention</label><input class=\\\"form-control\\\" name=\\\"site_name\\\" id=\\\"site_name\\\" value=\\\"<?= h((string)$row['site_name']) ?>\\\"></div>\",\"        <div class=\\\"col-md-6\\\"><label class=\\\"form-label\\\">Site GSTIN (if any)</label><input class=\\\"form-control\\\" name=\\\"site_gst_number\\\" id=\\\"site_gst_number\\\" value=\\\"<?= h((string)$row['site_gst_number']) ?>\\\"></div>\",\"        <div class=\\\"col-md-6\\\"><label class=\\\"form-label\\\">Address Line 1</label><input class=\\\"form-control\\\" name=\\\"site_address_line1\\\" id=\\\"site_address_line1\\\" value=\\\"<?= h((string)$row['site_address_line1']) ?>\\\"></div>\",\"        <div class=\\\"col-md-6\\\"><label class=\\\"form-label\\\">Address Line 2</label><input class=\\\"form-control\\\" name=\\\"site_address_line2\\\" id=\\\"site_address_line2\\\" value=\\\"<?= h((string)$row['site_address_line2']) ?>\\\"></div>\",\"        <div class=\\\"col-md-4\\\"><label class=\\\"form-label\\\">City</label><input class=\\\"form-control\\\" name=\\\"site_city\\\" id=\\\"site_city\\\" value=\\\"<?= h((string)$row['site_city']) ?>\\\"></div>\",\"        <div class=\\\"col-md-4\\\"><label class=\\\"form-label\\\">State</label><input class=\\\"form-control\\\" name=\\\"site_state\\\" id=\\\"site_state\\\" value=\\\"<?= h((string)$row['site_state']) ?>\\\"></div>\",\"        <div class=\\\"col-md-4\\\"><label class=\\\"form-label\\\">PIN Code</label><input class=\\\"form-control\\\" name=\\\"site_pincode\\\" id=\\\"site_pincode\\\" value=\\\"<?= h((string)$row['site_pincode']) ?>\\\"></div>\",\"      </div>\",\"    </div>\",\"  </div>\",\"\",\"  <div class=\\\"d-flex justify-content-between align-items-center\\\">\",\"    <h2 class=\\\"h6 mb-0\\\">Items</h2>\",\"    <button class=\\\"btn btn-sm btn-outline-primary\\\" type=\\\"button\\\" id=\\\"addRow\\\">+ Add Row</button>\",\"  </div>\",\"\",\"  <div class=\\\"table-responsive mt-2\\\">\",\"    <table class=\\\"table table-sm align-middle\\\" id=\\\"itemsTable\\\">\",\"      <thead class=\\\"table-light\\\">\",\"        <tr>\",\"          <th style=\\\"width:60px;\\\">SL</th>\",\"          <th style=\\\"min-width:320px\\\">Item (dropdown) &amp; Description</th>\",\"          <th style=\\\"width:120px;\\\">HSN/SAC</th>\",\"          <th style=\\\"width:120px;\\\">Qty</th>\",\"          <th style=\\\"width:140px;\\\">UOM</th>\",\"          <th style=\\\"width:140px;\\\">Rate</th>\",\"          <th style=\\\"width:120px;\\\">Disc %</th>\",\"          <th style=\\\"width:120px;\\\">Tax %</th>\",\"          <th style=\\\"width:140px;\\\">Line Total</th>\",\"          <th style=\\\"width:48px;\\\"></th>\",\"        </tr>\",\"      </thead>\",\"      <tbody>\",\"        <?php if ($items): foreach ($items as $it):\",\"          $uomSel = (string)($it['uom'] ?? 'Nos');\",\"          $uomHtml = $uomOptionsHtml;\",\"          if ($uomSel && !array_filter($uoms, fn($u)=>$u['code']===$uomSel)) {\",\"            $uomHtml = '<option value=\\\"'.h($uomSel).'\\\">'.h($uomSel).'</option>'.$uomHtml;\",\"          }\",\"        ?>\",\"          <tr>\",\"            <td><input type=\\\"hidden\\\" name=\\\"item_id[]\\\" value=\\\"<?= (int)$it['id'] ?>\\\"><input type=\\\"number\\\" class=\\\"form-control form-control-sm sl\\\" name=\\\"sl_no[]\\\" value=\\\"<?= (int)($it['sl_no'] ?? 1) ?>\\\"></td>\",\"            <td>\",\"              <select class=\\\"form-select form-select-sm qi_select\\\"><?= $QI_OPTIONS_HTML ?></select>\",\"              <input type=\\\"hidden\\\" name=\\\"item_code[]\\\" class=\\\"qi_code\\\" value=\\\"<?= h((string)($it['item_code'] ?? '')) ?>\\\">\",\"              <textarea class=\\\"form-control form-control-sm mt-1\\\" name=\\\"item_name[]\\\" rows=\\\"1\\\" placeholder=\\\"Description\\\"><?= h((string)($it['item_name'] ?? '')) ?></textarea>\",\"            </td>\",\"            <td><input class=\\\"form-control form-control-sm\\\" name=\\\"hsn_sac[]\\\" value=\\\"<?= h((string)($it['hsn_sac'] ?? '')) ?>\\\"></td>\",\"            <td><input class=\\\"form-control form-control-sm qty\\\" name=\\\"qty[]\\\" value=\\\"<?= h((string)($it['qty'] ?? '1.000')) ?>\\\"></td>\",\"            <td><select class=\\\"form-select form-select-sm\\\" name=\\\"uom[]\\\"><?= str_replace('value=\\\"'.h($uomSel).'\\\"', 'value=\\\"'.h($uomSel).'\\\" selected', $uomHtml) ?></select></td>\",\"            <td><input class=\\\"form-control form-control-sm rate\\\" name=\\\"rate[]\\\" value=\\\"<?= h((string)($it['rate'] ?? '0.00')) ?>\\\"></td>\",\"            <td><input class=\\\"form-control form-control-sm disc\\\" name=\\\"discount_pct[]\\\" value=\\\"<?= h((string)($it['discount_pct'] ?? '0.00')) ?>\\\"></td>\",\"            <td><input class=\\\"form-control form-control-sm tax\\\" name=\\\"tax_pct[]\\\" value=\\\"<?= h((string)($it['tax_pct'] ?? '0.00')) ?>\\\"></td>\",\"            <td><input class=\\\"form-control form-control-sm line_total\\\" name=\\\"line_total[]\\\" value=\\\"<?= h((string)($it['line_total'] ?? '0.00')) ?>\\\" readonly></td>\",\"            <td><button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-danger delRow\\\">&times;</button></td>\",\"          </tr>\",\"        <?php endforeach; endif; ?>\",\"      </tbody>\",\"    </table>\",\"  </div>\",\"\",\"  <div class=\\\"row g-3 justify-content-end mt-2\\\">\",\"    <div class=\\\"col-md-3\\\"><label class=\\\"form-label\\\">Subtotal</label><input class=\\\"form-control\\\" name=\\\"subtotal\\\" id=\\\"subtotal\\\" value=\\\"<?= h((string)$row['subtotal']) ?>\\\" readonly></div>\",\"    <div class=\\\"col-md-3\\\"><label class=\\\"form-label\\\">Discount (absolute)</label><input class=\\\"form-control\\\" name=\\\"discount_amount\\\" id=\\\"discount_amount\\\" value=\\\"<?= h((string)$row['discount_amount']) ?>\\\"></div>\",\"    <div class=\\\"col-md-3\\\"><label class=\\\"form-label\\\">Tax (total)</label><input class=\\\"form-control\\\" name=\\\"tax_amount\\\" id=\\\"tax_amount\\\" value=\\\"<?= h((string)$row['tax_amount']) ?>\\\" readonly></div>\",\"    <div class=\\\"col-md-3\\\"><label class=\\\"form-label\\\">Round Off</label><input class=\\\"form-control\\\" name=\\\"round_off\\\" id=\\\"round_off\\\" value=\\\"<?= h((string)$row['round_off']) ?>\\\"></div>\",\"    <div class=\\\"col-md-3\\\"><label class=\\\"form-label fw-semibold\\\">Grand Total</label><input class=\\\"form-control\\\" name=\\\"grand_total\\\" id=\\\"grand_total\\\" value=\\\"<?= h((string)$row['grand_total']) ?>\\\" readonly></div>\",\"  </div>\",\"\",\"  <div class=\\\"d-flex gap-2 justify-content-end mt-3\\\">\",\"    <button class=\\\"btn btn-primary\\\"><?= $isEdit ? 'Update' : 'Create' ?></button>\",\"  </div>\",\"</form>\",\"\",\"<?php include __DIR__ . '/../ui/layout_end.php'; ?>\",\"\",\"<script>\",\"const QI_MAP = <?= json_encode($QI_MAP, JSON_UNESCAPED_UNICODE) ?>;\",\"const QI_OPTIONS_HTML = <?= json_encode($QI_OPTIONS_HTML) ?>;\",\"const UOM_OPTIONS_HTML = <?= json_encode($uomOptionsHtml) ?>;\",\"\",\"function recalcRow(tr){\",\"  const qty = parseFloat(tr.querySelector('.qty')?.value || '0') || 0;\",\"  const rate = parseFloat(tr.querySelector('.rate')?.value || '0') || 0;\",\"  const disc = parseFloat(tr.querySelector('.disc')?.value || '0') || 0;\",\"  const tax = parseFloat(tr.querySelector('.tax')?.value || '0') || 0;\",\"  const base = qty * rate;\",\"  const afterDisc = base * (1 - (disc/100));\",\"  const lineTax = afterDisc * (tax/100);\",\"  const lineTotal = afterDisc + lineTax;\",\"  tr.querySelector('.line_total').value = lineTotal.toFixed(2);\",\"  return {afterDisc,lineTax};\",\"}\",\"function recalcAll(){\",\"  let sub=0,tx=0;\",\"  document.querySelectorAll('#itemsTable tbody tr').forEach(tr=>{\",\"    const r=recalcRow(tr); sub+=r.afterDisc; tx+=r.lineTax;\",\"  });\",\"  document.getElementById('subtotal').value = sub.toFixed(2);\",\"  document.getElementById('tax_amount').value = tx.toFixed(2);\",\"  const discAbs=parseFloat(document.getElementById('discount_amount').value||'0')||0;\",\"  const roff=parseFloat(document.getElementById('round_off').value||'0')||0;\",\"  document.getElementById('grand_total').value = (sub-discAbs+tx+roff).toFixed(2);\",\"}\",\"function attachRowHandlers(tr){\",\"  const sel = tr.querySelector('.qi_select');\",\"  if (sel && !sel.dataset.wired){\",\"    sel.dataset.wired='1';\",\"    // select correct option if hidden code already present\",\"    const cur = tr.querySelector('.qi_code')?.value || '';\",\"    if (cur){\",\"      [...sel.options].forEach(o => { if (o.value===cur) o.selected=true; });\",\"    }\",\"    sel.addEventListener('change',()=>{\",\"      const code = sel.value || '';\",\"      const data = QI_MAP[code] || null;\",\"      tr.querySelector('.qi_code')?.setAttribute('value', code);\",\"      if (data){\",\"        const desc = tr.querySelector('textarea[name=\\\"item_name[]\\\"]');\",\"        if (desc && (!desc.value || desc.value.trim()==='')) desc.value = data.name;\",\"        const hsn = tr.querySelector('input[name=\\\"hsn_sac[]\\\"]'); if (hsn) hsn.value = data.hsn || '';\",\"        const uomSel = tr.querySelector('select[name=\\\"uom[]\\\"]');\",\"        if (uomSel){\",\"          const wanted = data.uom || '';\",\"          if (wanted){\",\"            if (!uomSel.querySelector('option[value=\\\"'+wanted+'\\\"]')){\",\"              const opt=document.createElement('option'); opt.value=wanted; opt.textContent=wanted; uomSel.insertBefore(opt,uomSel.firstChild);\",\"            }\",\"            uomSel.value = wanted;\",\"          }\",\"        }\",\"        const rate = tr.querySelector('.rate'); if (rate) rate.value = parseFloat(data.rate||'0').toFixed(2);\",\"        const tax  = tr.querySelector('.tax');  if (tax)  tax.value  = parseFloat(data.tax ||'0').toFixed(2);\",\"        recalcAll();\",\"      }\",\"    });\",\"  }\",\"  tr.addEventListener('input', e => { if (e.target.matches('.qty,.rate,.disc,.tax')) recalcAll(); });\",\"}\",\"document.getElementById('itemsTable').addEventListener('click', e=>{\",\"  if (e.target.closest('.delRow')) { e.target.closest('tr').remove(); recalcAll(); }\",\"});\",\"document.getElementById('addRow')?.addEventListener('click', ()=>{\",\"  const tb=document.querySelector('#itemsTable tbody');\",\"  const tr=document.createElement('tr');\",\"  const sl=tb.querySelectorAll('tr').length+1;\",\"  tr.innerHTML=`\",\"    <td><input type=\\\"hidden\\\" name=\\\"item_id[]\\\" value=\\\"0\\\"><input type=\\\"number\\\" class=\\\"form-control form-control-sm sl\\\" name=\\\"sl_no[]\\\" value=\\\"${sl}\\\"></td>\",\"    <td>\",\"      <select class=\\\"form-select form-select-sm qi_select\\\">${QI_OPTIONS_HTML}</select>\",\"      <input type=\\\"hidden\\\" name=\\\"item_code[]\\\" class=\\\"qi_code\\\" value=\\\"\\\">\",\"      <textarea class=\\\"form-control form-control-sm mt-1\\\" name=\\\"item_name[]\\\" rows=\\\"1\\\" placeholder=\\\"Description\\\"></textarea>\",\"    </td>\",\"    <td><input class=\\\"form-control form-control-sm\\\" name=\\\"hsn_sac[]\\\"></td>\",\"    <td><input class=\\\"form-control form-control-sm qty\\\" name=\\\"qty[]\\\" value=\\\"1.000\\\"></td>\",\"    <td><select class=\\\"form-select form-select-sm\\\" name=\\\"uom[]\\\"><?= $uomOptionsHtml ?></select></td>\",\"    <td><input class=\\\"form-control form-control-sm rate\\\" name=\\\"rate[]\\\" value=\\\"0.00\\\"></td>\",\"    <td><input class=\\\"form-control form-control-sm disc\\\" name=\\\"discount_pct[]\\\" value=\\\"0.00\\\"></td>\",\"    <td><input class=\\\"form-control form-control-sm tax\\\" name=\\\"tax_pct[]\\\" value=\\\"0.00\\\"></td>\",\"    <td><input class=\\\"form-control form-control-sm line_total\\\" name=\\\"line_total[]\\\" value=\\\"0.00\\\" readonly></td>\",\"    <td><button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-danger delRow\\\">&times;</button></td>`;\",\"  tb.appendChild(tr); attachRowHandlers(tr);\",\"});\",\"document.querySelectorAll('#itemsTable tbody tr').forEach(attachRowHandlers);\",\"document.getElementById('discount_amount')?.addEventListener('input', recalcAll);\",\"document.getElementById('round_off')?.addEventListener('input', recalcAll);\",\"recalcAll();\",\"\",\"// Party \\u2192 Contacts\",\"document.getElementById('party_id')?.addEventListener('change', async function(){\",\"  const pid=this.value, sel=document.getElementById('party_contact_id');\",\"  sel.innerHTML='<option value=\\\"\\\">-- Select Contact --</option>';\",\"  if (!pid){ sel.disabled=true; return; }\",\"  sel.disabled=false;\",\"  try{\",\"    const res=await fetch('../common/party_contacts.php?party_id='+encodeURIComponent(pid));\",\"    const js=await res.json();\",\"    if(js.ok){ js.items.forEach(it=>{ const o=document.createElement('option'); o.value=it.id; o.textContent=it.name+(it.phone?' \\u00b7 '+it.phone:''); sel.appendChild(o); }); }\",\"  }catch(e){ console.error(e); }\",\"});\",\"// Copy client address \\u2192 site address\",\"document.getElementById('copyClientAddr')?.addEventListener('click', async ()=>{\",\"  const pid=document.getElementById('party_id').value; if(!pid) return;\",\"  try{\",\"    const res=await fetch('../common/party_get.php?id='+encodeURIComponent(pid));\",\"    const js=await res.json();\",\"    if(js.ok && js.party){\",\"      site_name.value=js.party.legal_name || js.party.name || '';\",\"      site_gst_number.value=js.party.gst_number || '';\",\"      site_address_line1.value=js.party.address_line1 || '';\",\"      site_address_line2.value=js.party.address_line2 || '';\",\"      site_city.value=js.party.city || '';\",\"      site_state.value=js.party.state || '';\",\"      site_pincode.value=js.party.pincode || '';\",\"    }\",\"  }catch(e){ console.error(e); }\",\"});\",\"document.getElementById('clearSiteAddr')?.addEventListener('click', ()=>{\",\"  ['site_name','site_gst_number','site_address_line1','site_address_line2','site_city','site_state','site_pincode']\",\"    .forEach(id=>{const el=document.getElementById(id); if(el) el.value='';});\",\"});\",\"</script>\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/approval_set.php\": [\"<?php\",\"declare(strict_types=1);\",\"require_once __DIR__.'/../includes/auth.php';\",\"require_once __DIR__.'/../includes/db.php';\",\"require_once __DIR__.'/../includes/rbac.php';\",\"require_once __DIR__.'/../includes/csrf.php';\",\"require_login(); require_permission('sales.quote.approve'); csrf_require_token();\",\"\",\"$id=(int)($_POST['id']??0);\",\"$action=(string)($_POST['action']??'');\",\"if($id<=0){flash('Invalid','danger'); redirect('/sales_quotes/sales_quotes_list.php');}\",\"$pdo=db();\",\"\",\"if ($action==='approve'){\",\"  $pdo->prepare(\\\"UPDATE sales_quotes SET approval_status='Approved', approved_by=:u, approved_at=NOW(), updated_at=NOW() WHERE id=:id\\\")->execute([':u'=>current_user_id(),':id'=>$id]);\",\"  flash('Quote approved.','success');\",\"} elseif ($action==='revert'){\",\"  $pdo->prepare(\\\"UPDATE sales_quotes SET approval_status='Draft', approved_by=NULL, approved_at=NULL, updated_at=NOW() WHERE id=:id\\\")->execute([':id'=>$id]);\",\"  flash('Quote reverted to Draft.','warning');\",\"}\",\"redirect('/sales_quotes/sales_quotes_view.php?id='.$id);\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/approval_request.php\": [\"<?php\",\"declare(strict_types=1);\",\"require_once __DIR__.'/../includes/auth.php';\",\"require_once __DIR__.'/../includes/db.php';\",\"require_once __DIR__.'/../includes/rbac.php';\",\"require_once __DIR__.'/../includes/csrf.php';\",\"require_login(); require_permission('sales.quote.edit'); csrf_require_token();\",\"\",\"$id=(int)($_POST['id']??0); if($id<=0){flash('Invalid','danger'); redirect('/sales_quotes/sales_quotes_list.php');}\",\"$pdo=db();\",\"$pdo->prepare(\\\"UPDATE sales_quotes SET approval_status='Pending', updated_at=NOW() WHERE id=:id\\\")->execute([':id'=>$id]);\",\"flash('Quote sent for approval.','success');\",\"redirect('/sales_quotes/sales_quotes_view.php?id='.$id);\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/sales_quotes_save.php\": [\"<?php\",\"/** PATH: /public_html/sales_quotes/sales_quotes_save.php */\",\"declare(strict_types=1);\",\"\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"require_once __DIR__ . '/../includes/csrf.php';\",\"require_once __DIR__ . '/../includes/helpers.php';\",\"require_once __DIR__ . '/../includes/audit.php';\",\"require_once __DIR__ . '/../includes/numbering.php';\",\"\",\"require_login();\",\"verify_csrf_or_die();\",\"\",\"$pdo = db();\",\"\",\"$id = (int)($_POST['id'] ?? 0);\",\"$isEdit = $id > 0;\",\"require_permission($isEdit ? 'sales.quote.edit' : 'sales.quote.create');\",\"\",\"/* -------------------- collect header -------------------- */\",\"$codeIn = trim((string)($_POST['code'] ?? ''));\",\"$header = [\",\"  'code' => ($codeIn === '' ? null : $codeIn),\",\"  'quote_date' => (string)($_POST['quote_date'] ?? date('Y-m-d')),\",\"  'valid_till' => (($_POST['valid_till'] ?? '') === '' ? null : (string)$_POST['valid_till']),\",\"  'status' => (string)($_POST['status'] ?? 'Draft'),\",\"  'party_id' => (($_POST['party_id'] ?? '') === '' ? null : (int)$_POST['party_id']),\",\"  'party_contact_id' => (($_POST['party_contact_id'] ?? '') === '' ? null : (int)$_POST['party_contact_id']),\",\"  'lead_id' => (($_POST['lead_id'] ?? '') === '' ? null : (int)$_POST['lead_id']),\",\"  'currency' => (string)($_POST['currency'] ?? 'INR'),\",\"  'notes' => trim((string)($_POST['notes'] ?? '')),\",\"  'terms' => trim((string)($_POST['terms'] ?? '')),\",\"  'use_site_as_bill_to' => isset($_POST['use_site_as_bill_to']) ? 1 : 0,\",\"  'site_name' => trim((string)($_POST['site_name'] ?? '')),\",\"  'site_gst_number' => trim((string)($_POST['site_gst_number'] ?? '')),\",\"  'site_address_line1' => trim((string)($_POST['site_address_line1'] ?? '')),\",\"  'site_address_line2' => trim((string)($_POST['site_address_line2'] ?? '')),\",\"  'site_city' => trim((string)($_POST['site_city'] ?? '')),\",\"  'site_state' => trim((string)($_POST['site_state'] ?? '')),\",\"  'site_pincode' => trim((string)($_POST['site_pincode'] ?? '')),\",\"];\",\"\",\"/* -------------------- collect lines -------------------- */\",\"$lineIds    = array_map('strval', $_POST['item_id'] ?? ($_POST['line_id'] ?? []));\",\"$sl_no      = $_POST['sl_no'] ?? [];\",\"$item_code  = $_POST['item_code'] ?? [];\",\"$item_name  = $_POST['item_name'] ?? [];\",\"$hsn_sac    = $_POST['hsn_sac'] ?? [];\",\"$qty        = $_POST['qty'] ?? [];\",\"$uom        = $_POST['uom'] ?? [];\",\"$rate       = $_POST['rate'] ?? [];\",\"$disc       = $_POST['discount_pct'] ?? [];\",\"$tax        = $_POST['tax_pct'] ?? [];\",\"$line_total = $_POST['line_total'] ?? [];\",\"\",\"/* Build map for any codes present */\",\"$codesWanted = [];\",\"foreach ($item_code as $c) { $c = trim((string)$c); if ($c !== '') $codesWanted[$c] = true; }\",\"$codeMap = [];\",\"if ($codesWanted) {\",\"  $in = implode(',', array_fill(0, count($codesWanted), '?'));\",\"  $st = $pdo->prepare(\\\"SELECT code, name, hsn_sac, uom, rate_default, tax_pct_default\",\"                       FROM quote_items\",\"                       WHERE deleted_at IS NULL AND is_active=1 AND code IN ($in)\\\");\",\"  $st->execute(array_keys($codesWanted));\",\"  foreach ($st->fetchAll(PDO::FETCH_ASSOC) as $r) {\",\"    $codeMap[(string)$r['code']] = [\",\"      'name' => (string)$r['name'],\",\"      'hsn'  => (string)($r['hsn_sac'] ?? ''),\",\"      'uom'  => (string)($r['uom'] ?? ''),\",\"      'rate' => (string)number_format((float)($r['rate_default'] ?? 0), 2, '.', ''),\",\"      'tax'  => (string)number_format((float)($r['tax_pct_default'] ?? 0), 2, '.', ''),\",\"    ];\",\"  }\",\"}\",\"\",\"/* Build rows; keep row if name or code present (or qty*rate) */\",\"$rows = [];\",\"$N = max(count($sl_no), count($item_name), count($hsn_sac), count($qty),\",\"         count($uom), count($rate), count($disc), count($tax), count($line_total), count($item_code));\",\"for ($i=0; $i<$N; $i++) {\",\"  $code = trim((string)($item_code[$i] ?? ''));\",\"  $name = trim((string)($item_name[$i] ?? ''));\",\"  $q = (float)($qty[$i] ?? 0);\",\"  $rt = (float)($rate[$i] ?? 0);\",\"  if ($name === '' && $code === '' && ($q*$rt) <= 0) continue;\",\"\",\"  if ($name === '' && $code !== '' && isset($codeMap[$code])) {\",\"    $name = $codeMap[$code]['name'];\",\"    if (($hsn_sac[$i] ?? '') === '') $hsn_sac[$i] = $codeMap[$code]['hsn'];\",\"    if (($uom[$i] ?? '') === '')     $uom[$i]     = $codeMap[$code]['uom'];\",\"    if (($rate[$i] ?? '') === '' || (float)$rate[$i] == 0) $rate[$i] = $codeMap[$code]['rate'];\",\"    if (($tax[$i]  ?? '') === '' )   $tax[$i]     = $codeMap[$code]['tax'];\",\"  }\",\"\",\"  $rows[] = [\",\"    'id' => (int)($lineIds[$i] ?? 0),\",\"    'sl_no' => (int)($sl_no[$i] ?? ($i+1)),\",\"    'item_code' => ($code === '' ? null : $code),\",\"    'item_name' => ($name === '' ? 'Item' : $name),\",\"    'hsn_sac' => trim((string)($hsn_sac[$i] ?? '')),\",\"    'qty' => (string)($qty[$i] ?? '1.000'),\",\"    'uom' => trim((string)($uom[$i] ?? 'Nos')),\",\"    'rate' => (string)($rate[$i] ?? '0.00'),\",\"    'discount_pct' => (string)($disc[$i] ?? '0.00'),\",\"    'tax_pct' => (string)($tax[$i] ?? '0.00'),\",\"    'line_total' => (string)($line_total[$i] ?? '0.00'),\",\"  ];\",\"}\",\"\",\"/* -------------------- totals (server-side) -------------------- */\",\"$subtotal=0.00; $totalTax=0.00;\",\"foreach ($rows as $r) {\",\"  $base = (float)$r['qty'] * (float)$r['rate'];\",\"  $afterDisc = $base * (1 - ((float)$r['discount_pct']/100));\",\"  $lineTax = $afterDisc * ((float)$r['tax_pct']/100);\",\"  $subtotal += $afterDisc; $totalTax += $lineTax;\",\"}\",\"$discountAbs = (float)($_POST['discount_amount'] ?? 0.00);\",\"$roundOff    = (float)($_POST['round_off'] ?? 0.00);\",\"$grandTotal  = $subtotal - $discountAbs + $totalTax + $roundOff;\",\"\",\"$headerTotals = [\",\"  'subtotal' => number_format($subtotal, 2, '.', ''),\",\"  'discount_amount' => number_format($discountAbs, 2, '.', ''),\",\"  'tax_amount' => number_format($totalTax, 2, '.', ''),\",\"  'round_off' => number_format($roundOff, 2, '.', ''),\",\"  'grand_total' => number_format($grandTotal, 2, '.', ''),\",\"];\",\"\",\"/* -------------------- TX guard -------------------- */\",\"$_OWN_TX = !$pdo->inTransaction();\",\"try {\",\"  if ($_OWN_TX) $pdo->beginTransaction();\",\"\",\"  /* -------- header upsert -------- */\",\"  if (!$isEdit) {\",\"    if ($header['code'] === null) $header['code'] = next_no('QO');\",\"    $sql = \\\"INSERT INTO sales_quotes\",\"      (code, quote_date, valid_till, status, party_id, party_contact_id, lead_id,\",\"       currency, notes, terms,\",\"       use_site_as_bill_to, site_name, site_gst_number, site_address_line1, site_address_line2,\",\"       site_city, site_state, site_pincode,\",\"       subtotal, discount_amount, tax_amount, round_off, grand_total, created_at)\",\"      VALUES\",\"      (:code, :quote_date, :valid_till, :status, :party_id, :party_contact_id, :lead_id,\",\"       :currency, :notes, :terms,\",\"       :use_site_as_bill_to, :site_name, :site_gst_number, :site_address_line1, :site_address_line2,\",\"       :site_city, :site_state, :site_pincode,\",\"       :subtotal, :discount_amount, :tax_amount, :round_off, :grand_total, NOW())\\\";\",\"    $pdo->prepare($sql)->execute(array_merge($header, $headerTotals));\",\"    $id = (int)$pdo->lastInsertId();\",\"    audit_log($pdo, 'sales_quotes', 'create', $id, array_merge($header, $headerTotals));\",\"    set_flash('success', 'Quote created.');\",\"  } else {\",\"    if ($header['code'] === null) {\",\"      $cur = $pdo->prepare(\\\"SELECT code FROM sales_quotes WHERE id=?\\\");\",\"      $cur->execute([$id]);\",\"      $curCode = (string)($cur->fetchColumn() ?: '');\",\"      $header['code'] = $curCode !== '' ? $curCode : next_no('QO');\",\"    }\",\"    $header['id'] = $id;\",\"    $sql = \\\"UPDATE sales_quotes SET\",\"      code=:code, quote_date=:quote_date, valid_till=:valid_till, status=:status,\",\"      party_id=:party_id, party_contact_id=:party_contact_id, lead_id=:lead_id,\",\"      currency=:currency, notes=:notes, terms=:terms,\",\"      use_site_as_bill_to=:use_site_as_bill_to, site_name=:site_name, site_gst_number=:site_gst_number,\",\"      site_address_line1=:site_address_line1, site_address_line2=:site_address_line2,\",\"      site_city=:site_city, site_state=:site_state, site_pincode=:site_pincode,\",\"      subtotal=:subtotal, discount_amount=:discount_amount, tax_amount=:tax_amount,\",\"      round_off=:round_off, grand_total=:grand_total\",\"      WHERE id=:id\\\";\",\"    $pdo->prepare($sql)->execute(array_merge($header, $headerTotals));\",\"    audit_log($pdo, 'sales_quotes', 'update', $id, array_merge($header, $headerTotals));\",\"    set_flash('success', 'Quote updated.');\",\"  }\",\"\",\"  /* -------- lines upsert (hard-sync) -------- */\",\"  $st = $pdo->prepare(\\\"SELECT id FROM sales_quote_items WHERE quote_id=?\\\");\",\"  $st->execute([$id]);\",\"  $existing = array_map('intval', $st->fetchAll(PDO::FETCH_COLUMN, 0));\",\"  $keepIds = [];\",\"\",\"  $ins = $pdo->prepare(\\\"INSERT INTO sales_quote_items\",\"    (quote_id, sl_no, item_code, item_name, hsn_sac, qty, uom, rate, discount_pct, tax_pct, line_total)\",\"    VALUES\",\"    (:quote_id, :sl_no, :item_code, :item_name, :hsn_sac, :qty, :uom, :rate, :discount_pct, :tax_pct, :line_total)\\\");\",\"\",\"  $upd = $pdo->prepare(\\\"UPDATE sales_quote_items SET\",\"    sl_no=:sl_no, item_code=:item_code, item_name=:item_name, hsn_sac=:hsn_sac, qty=:qty, uom=:uom,\",\"    rate=:rate, discount_pct=:discount_pct, tax_pct=:tax_pct, line_total=:line_total\",\"    WHERE id=:id AND quote_id=:quote_id\\\");\",\"\",\"  foreach ($rows as $r) {\",\"    $payload = [\",\"      'quote_id' => $id,\",\"      'sl_no' => (int)$r['sl_no'],\",\"      'item_code' => $r['item_code'],\",\"      'item_name' => $r['item_name'],\",\"      'hsn_sac' => $r['hsn_sac'],\",\"      'qty' => (string)$r['qty'],\",\"      'uom' => $r['uom'],\",\"      'rate' => (string)$r['rate'],\",\"      'discount_pct' => (string)$r['discount_pct'],\",\"      'tax_pct' => (string)$r['tax_pct'],\",\"      'line_total' => (string)$r['line_total'],\",\"    ];\",\"\",\"    if ($r['id'] > 0 && in_array($r['id'], $existing, true)) {\",\"      $payloadUpd = $payload; $payloadUpd['id'] = (int)$r['id'];\",\"      $upd->execute($payloadUpd);\",\"      $keepIds[] = (int)$r['id'];\",\"    } else {\",\"      $ins->execute($payload);\",\"      $keepIds[] = (int)$pdo->lastInsertId();\",\"    }\",\"  }\",\"\",\"  $toDelete = array_diff($existing, $keepIds);\",\"  if ($toDelete) {\",\"    $in = implode(',', array_fill(0, count($toDelete), '?'));\",\"    $pdo->prepare(\\\"DELETE FROM sales_quote_items WHERE quote_id=? AND id IN ($in)\\\")\",\"        ->execute(array_merge([$id], array_values($toDelete)));\",\"  }\",\"\",\"  if ($_OWN_TX) $pdo->commit();\",\"  header('Location: sales_quotes_form.php?id='.$id);\",\"  exit;\",\"\",\"} catch (Throwable $e) {\",\"  if ($_OWN_TX && $pdo->inTransaction()) $pdo->rollBack();\",\"  set_flash('danger', $e->getMessage());\",\"  header('Location: sales_quotes_form.php'.($isEdit?('?id='.$id):'')); exit;\",\"}\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/store_patch_packager.php\": [\"<?php\",\"/**\",\" * EMS Infra ERP \\u2014 Store Module Patch Packager\",\" * Writes replacement endpoints, the StockLedger adapter include, and a migration SQL,\",\" * then creates store_module_patch.zip for easy download.\",\" *\",\" * Usage:\",\" * 1) Upload this file to your server (e.g., /var/www/html or your PHP tools dir)\",\" * 2) Open it in a browser OR run: php store_patch_packager.php\",\" * 3) It will create ./store_module_patch/ and ./store_module_patch.zip in the same folder\",\" * 4) Download the zip, then delete this script for safety\",\" */\",\"\",\"date_default_timezone_set('Asia/Kolkata');\",\"\",\"$baseDir = __DIR__ . '/store_module_patch';\",\"$includesDir = $baseDir . '/includes';\",\"$migrationsDir = $baseDir . '/migrations';\",\"\",\"@mkdir($baseDir, 0775, true);\",\"@mkdir($includesDir, 0775, true);\",\"@mkdir($migrationsDir, 0775, true);\",\"\",\"$TS = date('Y-m-d H:i:s');\",\"\",\"function writeFileStrict($path, $content) {\",\"    $dir = dirname($path);\",\"    if (!is_dir($dir)) mkdir($dir, 0775, true);\",\"    $ok = file_put_contents($path, $content);\",\"    if ($ok === false) {\",\"        throw new RuntimeException(\\\"Failed writing file: $path\\\");\",\"    }\",\"}\",\"\",\"/* ------------------ File contents ------------------ */\",\"\",\"$REQ_POST_ISSUE = <<<'PHP'\",\"<?php\",\"/**\",\" * Material Requisition \\u2192 Issue POST\",\" * - Creates material_issues header + lines\",\" * - Posts OUT movements via StockMoveWriter\",\" * - NEW: Calls ValuationService::onIssue and mirrors to stock_ledger\",\" */\",\"require_once __DIR__ . '/includes/db.php';\",\"require_once __DIR__ . '/includes/rbac.php';\",\"require_once __DIR__ . '/includes/csrf.php';\",\"require_once __DIR__ . '/includes/audit.php';\",\"require_once __DIR__ . '/includes/helpers.php';\",\"\",\"require_once __DIR__ . '/includes/NumberingService.php';\",\"require_once __DIR__ . '/includes/StockMoveWriter.php';\",\"require_once __DIR__ . '/includes/ValuationService.php';\",\"require_once __DIR__ . '/includes/StockLedgerAdapter.php';\",\"\",\"header('Content-Type: application/json');\",\"\",\"try {\",\"    require_permission('stores.issue.manage');\",\"\",\"    // Accept either JSON or form\",\"    $raw = file_get_contents('php://input');\",\"    $input = json_decode($raw, true);\",\"    if (!$input) $input = $_POST;\",\"\",\"    // Optional CSRF (only if you post from a form)\",\"    if (!empty($_POST)) {\",\"        csrf_require_token($_POST['csrf_token'] ?? '');\",\"    }\",\"\",\"    $userId = (int)($_SESSION['user_id'] ?? 0);\",\"    $now = date('Y-m-d H:i:s');\",\"\",\"    $reqId        = (int)($input['req_id'] ?? 0);\",\"    $warehouseId  = (int)($input['warehouse_id'] ?? 0);\",\"    $projectId    = isset($input['project_id']) ? (int)$input['project_id'] : null;\",\"    $remarks      = trim($input['remarks'] ?? '');\",\"    $lines        = $input['lines'] ?? [];\",\"\",\"    if ($warehouseId <= 0 || empty($lines)) {\",\"        http_response_code(422);\",\"        echo json_encode(['ok' => false, 'error' => 'warehouse_id and lines are required']);\",\"        exit;\",\"    }\",\"\",\"    $pdo = db();\",\"    $pdo->beginTransaction();\",\"\",\"    // Generate Issue number\",\"    $issueNo = NumberingService::next($pdo, 'ISS'); // e.g., ISS-2025-000123\",\"\",\"    // Create header\",\"    $stmt = $pdo->prepare(\\\"INSERT INTO material_issues\",\"        (issue_no, req_id, warehouse_id, project_id, remarks, status, created_by, created_at)\",\"        VALUES (:issue_no, :req_id, :warehouse_id, :project_id, :remarks, 'POSTED', :created_by, :created_at)\\\");\",\"    $stmt->execute([\",\"        ':issue_no'     => $issueNo,\",\"        ':req_id'       => $reqId ?: null,\",\"        ':warehouse_id' => $warehouseId,\",\"        ':project_id'   => $projectId,\",\"        ':remarks'      => $remarks,\",\"        ':created_by'   => $userId,\",\"        ':created_at'   => $now,\",\"    ]);\",\"    $issueId = (int)$pdo->lastInsertId();\",\"\",\"    // Prepare line insert\",\"    $insLine = $pdo->prepare(\\\"INSERT INTO material_issue_items\",\"        (issue_id, line_no, item_id, uom_id, qty, bin_id, batch_id, remarks)\",\"        VALUES (:issue_id, :line_no, :item_id, :uom_id, :qty, :bin_id, :batch_id, :remarks)\\\");\",\"\",\"    $lineNo = 0;\",\"    foreach ($lines as $ln) {\",\"        $lineNo++;\",\"        $itemId     = (int)($ln['item_id'] ?? 0);\",\"        $uomId      = isset($ln['uom_id']) ? (int)$ln['uom_id'] : null;\",\"        $qty        = (float)($ln['qty'] ?? 0);\",\"        $binId      = isset($ln['bin_id']) ? (int)$ln['bin_id'] : null;\",\"        $batchId    = isset($ln['batch_id']) ? (int)$ln['batch_id'] : null;\",\"        $lnRemarks  = trim($ln['remarks'] ?? '');\",\"\",\"        if ($itemId <= 0 || $qty <= 0) {\",\"            throw new RuntimeException(\\\"Invalid line at #{$lineNo}\\\");\",\"        }\",\"\",\"        // Insert issue line\",\"        $insLine->execute([\",\"            ':issue_id' => $issueId,\",\"            ':line_no'  => $lineNo,\",\"            ':item_id'  => $itemId,\",\"            ':uom_id'   => $uomId,\",\"            ':qty'      => $qty,\",\"            ':bin_id'   => $binId,\",\"            ':batch_id' => $batchId,\",\"            ':remarks'  => $lnRemarks,\",\"        ]);\",\"\",\"        // Build writer payload (mirror your existing shape)\",\"        $payload = [\",\"            'txn_type'     => 'ISS',\",\"            'txn_no'       => $issueNo,\",\"            'txn_date'     => $now,\",\"            'item_id'      => $itemId,\",\"            'uom_id'       => $uomId,\",\"            'warehouse_id' => $warehouseId,\",\"            'bin_id'       => $binId,\",\"            'batch_id'     => $batchId,\",\"            'project_id'   => $projectId,\",\"            'qty'          => $qty,            // positive here; writer will store negative in stock_moves\",\"            'unit_cost'    => (float)($ln['unit_cost'] ?? 0), // optional; not used for WA on issue\",\"            'ref_table'    => 'material_issues',\",\"            'ref_id'       => $issueId,\",\"            'created_by'   => $userId,\",\"        ];\",\"\",\"        // Post OUT to stock\",\"        StockMoveWriter::postOut($pdo, $payload);\",\"\",\"        // NEW: Valuation basis reduce + ledger mirror\",\"        ValuationService::onIssue($pdo, $itemId, $warehouseId, $qty);\",\"        StockLedgerAdapter::mirror($pdo, $payload);\",\"    }\",\"\",\"    // Optional: close requisition if fully issued (business rule as before)\",\"    if ($reqId > 0) {\",\"        $pdo->prepare(\\\"UPDATE material_requisitions SET status = 'CLOSED', updated_at = NOW()\",\"                       WHERE id = :id AND status <> 'CLOSED'\\\")\",\"            ->execute([':id' => $reqId]);\",\"    }\",\"\",\"    audit_log('material_issues', $issueId, 'POST', null, ['issue_no' => $issueNo, 'lines' => count($lines)]);\",\"    $pdo->commit();\",\"\",\"    echo json_encode(['ok' => true, 'issue_id' => $issueId, 'issue_no' => $issueNo]);\",\"\",\"} catch (Throwable $e) {\",\"    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();\",\"    error_log($e);\",\"    http_response_code(400);\",\"    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);\",\"}\",\"PHP;\",\"\",\"$STOCK_ADJUST_POST = <<<'PHP'\",\"<?php\",\"/**\",\" * Stock Adjustment POST\",\" * - Creates adjustment header + lines\",\" * - Posts IN or OUT via StockMoveWriter\",\" * - NEW: Calls ValuationService and mirrors to stock_ledger\",\" */\",\"require_once __DIR__ . '/includes/db.php';\",\"require_once __DIR__ . '/includes/rbac.php';\",\"require_once __DIR__ . '/includes/csrf.php';\",\"require_once __DIR__ . '/includes/audit.php';\",\"require_once __DIR__ . '/includes/helpers.php';\",\"\",\"require_once __DIR__ . '/includes/NumberingService.php';\",\"require_once __DIR__ . '/includes/StockMoveWriter.php';\",\"require_once __DIR__ . '/includes/ValuationService.php';\",\"require_once __DIR__ . '/includes/StockLedgerAdapter.php';\",\"\",\"header('Content-Type: application/json');\",\"\",\"try {\",\"    require_permission('stocks.adjust.manage');\",\"\",\"    $raw = file_get_contents('php://input');\",\"    $input = json_decode($raw, true);\",\"    if (!$input) $input = $_POST;\",\"\",\"    if (!empty($_POST)) {\",\"        csrf_require_token($_POST['csrf_token'] ?? '');\",\"    }\",\"\",\"    $userId = (int)($_SESSION['user_id'] ?? 0);\",\"    $now = date('Y-m-d H:i:s');\",\"\",\"    $warehouseId = (int)($input['warehouse_id'] ?? 0);\",\"    $mode        = strtoupper(trim($input['mode'] ?? '')); // IN or OUT\",\"    $reasonCode  = trim($input['reason_code'] ?? '');\",\"    $remarks     = trim($input['remarks'] ?? '');\",\"    $lines       = $input['lines'] ?? [];\",\"\",\"    if ($warehouseId <= 0 || !in_array($mode, ['IN', 'OUT'], true) || empty($lines)) {\",\"        http_response_code(422);\",\"        echo json_encode(['ok' => false, 'error' => 'warehouse_id, mode (IN/OUT) and lines are required']);\",\"        exit;\",\"    }\",\"\",\"    $pdo = db();\",\"    $pdo->beginTransaction();\",\"\",\"    $adjNo = NumberingService::next($pdo, 'ADJ'); // e.g., ADJ-2025-001234\",\"\",\"    // Header\",\"    $pdo->prepare(\\\"INSERT INTO stock_adjustments\",\"            (adj_no, warehouse_id, mode, reason_code, remarks, status, created_by, created_at)\",\"            VALUES (:adj_no, :warehouse_id, :mode, :reason_code, :remarks, 'POSTED', :created_by, :created_at)\\\")\",\"        ->execute([\",\"            ':adj_no'       => $adjNo,\",\"            ':warehouse_id' => $warehouseId,\",\"            ':mode'         => $mode,\",\"            ':reason_code'  => $reasonCode,\",\"            ':remarks'      => $remarks,\",\"            ':created_by'   => $userId,\",\"            ':created_at'   => $now,\",\"        ]);\",\"    $adjId = (int)$pdo->lastInsertId();\",\"\",\"    $insLine = $pdo->prepare(\\\"INSERT INTO stock_adjustment_items\",\"        (adjustment_id, line_no, item_id, uom_id, qty, unit_cost, bin_id, batch_id, remarks)\",\"        VALUES (:adjustment_id, :line_no, :item_id, :uom_id, :qty, :unit_cost, :bin_id, :batch_id, :remarks)\\\");\",\"\",\"    $lineNo = 0;\",\"    foreach ($lines as $ln) {\",\"        $lineNo++;\",\"        $itemId    = (int)($ln['item_id'] ?? 0);\",\"        $uomId     = isset($ln['uom_id']) ? (int)$ln['uom_id'] : null;\",\"        $qty       = (float)($ln['qty'] ?? 0);\",\"        $binId     = isset($ln['bin_id']) ? (int)$ln['bin_id'] : null;\",\"        $batchId   = isset($ln['batch_id']) ? (int)$ln['batch_id'] : null;\",\"        $lnRemarks = trim($ln['remarks'] ?? '');\",\"        $unitCost  = (float)($ln['unit_cost'] ?? 0); // required for IN valuation\",\"\",\"        if ($itemId <= 0 || $qty <= 0) {\",\"            throw new RuntimeException(\\\"Invalid line #{$lineNo}\\\");\",\"        }\",\"\",\"        $insLine->execute([\",\"            ':adjustment_id' => $adjId,\",\"            ':line_no'       => $lineNo,\",\"            ':item_id'       => $itemId,\",\"            ':uom_id'        => $uomId,\",\"            ':qty'           => $qty,\",\"            ':unit_cost'     => $unitCost,\",\"            ':bin_id'        => $binId,\",\"            ':batch_id'      => $batchId,\",\"            ':remarks'       => $lnRemarks,\",\"        ]);\",\"\",\"        $payload = [\",\"            'txn_type'     => 'ADJ',\",\"            'txn_no'       => $adjNo,\",\"            'txn_date'     => $now,\",\"            'item_id'      => $itemId,\",\"            'uom_id'       => $uomId,\",\"            'warehouse_id' => $warehouseId,\",\"            'bin_id'       => $binId,\",\"            'batch_id'     => $batchId,\",\"            'project_id'   => null,\",\"            'qty'          => $qty,         // positive\",\"            'unit_cost'    => $unitCost,    // pre-tax basic\",\"            'ref_table'    => 'stock_adjustments',\",\"            'ref_id'       => $adjId,\",\"            'created_by'   => $userId,\",\"        ];\",\"\",\"        if ($mode === 'IN') {\",\"            StockMoveWriter::postIn($pdo, $payload);\",\"            ValuationService::onReceipt($pdo, $itemId, $warehouseId, $qty, $unitCost);\",\"            StockLedgerAdapter::mirror($pdo, $payload);\",\"        } else { // OUT\",\"            StockMoveWriter::postOut($pdo, $payload);\",\"            ValuationService::onIssue($pdo, $itemId, $warehouseId, $qty);\",\"            StockLedgerAdapter::mirror($pdo, $payload);\",\"        }\",\"    }\",\"\",\"    audit_log('stock_adjustments', $adjId, 'POST', null, ['adj_no' => $adjNo, 'mode' => $mode, 'lines' => count($lines)]);\",\"    $pdo->commit();\",\"\",\"    echo json_encode(['ok' => true, 'adjustment_id' => $adjId, 'adj_no' => $adjNo]);\",\"\",\"} catch (Throwable $e) {\",\"    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();\",\"    error_log($e);\",\"    http_response_code(400);\",\"    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);\",\"}\",\"PHP;\",\"\",\"$GP_CREATE_POST = <<<'PHP'\",\"<?php\",\"/**\",\" * Gate Pass CREATE\",\" * - Creates GP header + lines\",\" * - For non-returnable lines that are dispatched now: posts OUT\",\" * - NEW: Valuation on OUT + mirror to stock_ledger\",\" */\",\"require_once __DIR__ . '/includes/db.php';\",\"require_once __DIR__ . '/includes/rbac.php';\",\"require_once __DIR__ . '/includes/csrf.php';\",\"require_once __DIR__ . '/includes/audit.php';\",\"require_once __DIR__ . '/includes/helpers.php';\",\"\",\"require_once __DIR__ . '/includes/NumberingService.php';\",\"require_once __DIR__ . '/includes/StockMoveWriter.php';\",\"require_once __DIR__ . '/includes/ValuationService.php';\",\"require_once __DIR__ . '/includes/StockLedgerAdapter.php';\",\"\",\"header('Content-Type: application/json');\",\"\",\"try {\",\"    require_permission('stores.gatepass.manage');\",\"\",\"    $raw = file_get_contents('php://input');\",\"    $input = json_decode($raw, true);\",\"    if (!$input) $input = $_POST;\",\"\",\"    if (!empty($_POST)) {\",\"        csrf_require_token($_POST['csrf_token'] ?? '');\",\"    }\",\"\",\"    $userId = (int)($_SESSION['user_id'] ?? 0);\",\"    $now = date('Y-m-d H:i:s');\",\"\",\"    $sourceWhId   = (int)($input['warehouse_id'] ?? 0);\",\"    $destWhId     = isset($input['to_warehouse_id']) ? (int)$input['to_warehouse_id'] : null; // optional\",\"    $partyId      = isset($input['party_id']) ? (int)$input['party_id'] : null;               // optional (jobwork/site)\",\"    $projectId    = isset($input['project_id']) ? (int)$input['project_id'] : null;\",\"    $returnable   = (int)($input['returnable'] ?? 0); // 1/0\",\"    $expectedRet  = !empty($input['expected_return_date']) ? $input['expected_return_date'] : null;\",\"    $vehicleNo    = trim($input['vehicle_no'] ?? '');\",\"    $contactName  = trim($input['contact_name'] ?? '');\",\"    $remarks      = trim($input['remarks'] ?? '');\",\"    $lines        = $input['lines'] ?? [];\",\"\",\"    if ($sourceWhId <= 0 || empty($lines)) {\",\"        http_response_code(422);\",\"        echo json_encode(['ok' => false, 'error' => 'warehouse_id and lines are required']);\",\"        exit;\",\"    }\",\"\",\"    $pdo = db();\",\"    $pdo->beginTransaction();\",\"\",\"    $gpNo = NumberingService::next($pdo, 'GP');\",\"\",\"    // Header\",\"    $stmt = $pdo->prepare(\\\"INSERT INTO gatepasses\",\"        (gp_no, warehouse_id, to_warehouse_id, party_id, project_id, returnable, expected_return_date,\",\"         vehicle_no, contact_name, remarks, status, created_by, created_at)\",\"        VALUES\",\"        (:gp_no, :warehouse_id, :to_warehouse_id, :party_id, :project_id, :returnable, :expected_return_date,\",\"         :vehicle_no, :contact_name, :remarks, :status, :created_by, :created_at)\\\");\",\"    $stmt->execute([\",\"        ':gp_no'                => $gpNo,\",\"        ':warehouse_id'         => $sourceWhId,\",\"        ':to_warehouse_id'      => $destWhId,\",\"        ':party_id'             => $partyId,\",\"        ':project_id'           => $projectId,\",\"        ':returnable'           => $returnable,\",\"        ':expected_return_date' => $expectedRet,\",\"        ':vehicle_no'           => $vehicleNo,\",\"        ':contact_name'         => $contactName,\",\"        ':remarks'              => $remarks,\",\"        ':status'               => ($returnable ? 'OPEN' : 'CLOSED'),\",\"        ':created_by'           => $userId,\",\"        ':created_at'           => $now,\",\"    ]);\",\"    $gpId = (int)$pdo->lastInsertId();\",\"\",\"    $insLine = $pdo->prepare(\\\"INSERT INTO gatepass_items\",\"        (gp_id, line_no, item_id, uom_id, qty, bin_id, batch_id, remarks, returned_qty)\",\"        VALUES (:gp_id, :line_no, :item_id, :uom_id, :qty, :bin_id, :batch_id, :remarks, 0)\\\");\",\"\",\"    $lineNo = 0;\",\"    foreach ($lines as $ln) {\",\"        $lineNo++;\",\"        $itemId    = (int)($ln['item_id'] ?? 0);\",\"        $uomId     = isset($ln['uom_id']) ? (int)$ln['uom_id'] : null;\",\"        $qty       = (float)($ln['qty'] ?? 0);\",\"        $binId     = isset($ln['bin_id']) ? (int)$ln['bin_id'] : null;\",\"        $batchId   = isset($ln['batch_id']) ? (int)$ln['batch_id'] : null;\",\"        $lnRemarks = trim($ln['remarks'] ?? '');\",\"        $unitCost  = (float)($ln['unit_cost'] ?? 0);\",\"\",\"        if ($itemId <= 0 || $qty <= 0) {\",\"            throw new RuntimeException(\\\"Invalid line #{$lineNo}\\\");\",\"        }\",\"\",\"        $insLine->execute([\",\"            ':gp_id'   => $gpId,\",\"            ':line_no' => $lineNo,\",\"            ':item_id' => $itemId,\",\"            ':uom_id'  => $uomId,\",\"            ':qty'     => $qty,\",\"            ':bin_id'  => $binId,\",\"            ':batch_id'=> $batchId,\",\"            ':remarks' => $lnRemarks,\",\"        ]);\",\"\",\"        // If NON-RETURNABLE, we post OUT right now.\",\"        if (!$returnable) {\",\"            $payload = [\",\"                'txn_type'     => 'GP',\",\"                'txn_no'       => $gpNo,\",\"                'txn_date'     => $now,\",\"                'item_id'      => $itemId,\",\"                'uom_id'       => $uomId,\",\"                'warehouse_id' => $sourceWhId,\",\"                'bin_id'       => $binId,\",\"                'batch_id'     => $batchId,\",\"                'project_id'   => $projectId,\",\"                'qty'          => $qty,\",\"                'unit_cost'    => $unitCost,\",\"                'ref_table'    => 'gatepasses',\",\"                'ref_id'       => $gpId,\",\"                'created_by'   => $userId,\",\"            ];\",\"\",\"            StockMoveWriter::postOut($pdo, $payload);\",\"            ValuationService::onIssue($pdo, $itemId, $sourceWhId, $qty);\",\"            StockLedgerAdapter::mirror($pdo, $payload);\",\"        }\",\"    }\",\"\",\"    audit_log('gatepasses', $gpId, 'CREATE', null, ['gp_no' => $gpNo, 'returnable' => $returnable, 'lines' => count($lines)]);\",\"    $pdo->commit();\",\"\",\"    echo json_encode(['ok' => true, 'gp_id' => $gpId, 'gp_no' => $gpNo]);\",\"\",\"} catch (Throwable $e) {\",\"    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();\",\"    error_log($e);\",\"    http_response_code(400);\",\"    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);\",\"}\",\"PHP;\",\"\",\"$GP_RETURN_POST = <<<'PHP'\",\"<?php\",\"/**\",\" * Gate Pass RETURN\",\" * - Validates returnable GP and outstanding qty\",\" * - Posts IN movements\",\" * - NEW: Calls ValuationService::onReceipt and mirrors to stock_ledger\",\" */\",\"require_once __DIR__ . '/includes/db.php';\",\"require_once __DIR__ . '/includes/rbac.php';\",\"require_once __DIR__ . '/includes/csrf.php';\",\"require_once __DIR__ . '/includes/audit.php';\",\"require_once __DIR__ . '/includes/helpers.php';\",\"\",\"require_once __DIR__ . '/includes/NumberingService.php';\",\"require_once __DIR__ . '/includes/StockMoveWriter.php';\",\"require_once __DIR__ . '/includes/ValuationService.php';\",\"require_once __DIR__ . '/includes/StockLedgerAdapter.php';\",\"\",\"header('Content-Type: application/json');\",\"\",\"try {\",\"    require_permission('stores.gatepass.manage');\",\"\",\"    $raw = file_get_contents('php://input');\",\"    $input = json_decode($raw, true);\",\"    if (!$input) $input = $_POST;\",\"\",\"    if (!empty($_POST)) {\",\"        csrf_require_token($_POST['csrf_token'] ?? '');\",\"    }\",\"\",\"    $userId = (int)($_SESSION['user_id'] ?? 0);\",\"    $now = date('Y-m-d H:i:s');\",\"\",\"    $gpId   = (int)($input['gp_id'] ?? 0);\",\"    $lines  = $input['lines'] ?? []; // each: gp_line_id, qty, unit_cost?, bin_id?, batch_id?\",\"    if ($gpId <= 0 || empty($lines)) {\",\"        http_response_code(422);\",\"        echo json_encode(['ok' => false, 'error' => 'gp_id and lines are required']);\",\"        exit;\",\"    }\",\"\",\"    $pdo = db();\",\"    $pdo->beginTransaction();\",\"\",\"    // Load GP header, ensure returnable\",\"    $h = $pdo->prepare(\\\"SELECT gp_no, warehouse_id, returnable, status FROM gatepasses WHERE id = :id FOR UPDATE\\\");\",\"    $h->execute([':id' => $gpId]);\",\"    $hdr = $h->fetch(PDO::FETCH_ASSOC);\",\"    if (!$hdr) throw new RuntimeException('Gate Pass not found');\",\"    if ((int)$hdr['returnable'] !== 1) throw new RuntimeException('Gate Pass is not returnable');\",\"\",\"    $gpNo       = $hdr['gp_no'];\",\"    $warehouseId= (int)$hdr['warehouse_id'];\",\"\",\"    // Load lines outstanding\",\"    $lnQ = $pdo->prepare(\\\"SELECT id, line_no, item_id, uom_id, qty, returned_qty, bin_id, batch_id FROM gatepass_items WHERE gp_id = :id\\\");\",\"    $lnQ->execute([':id' => $gpId]);\",\"    $existing = [];\",\"    while ($r = $lnQ->fetch(PDO::FETCH_ASSOC)) {\",\"        $existing[(int)$r['id']] = $r;\",\"    }\",\"\",\"    // Generate return number\",\"    $gprNo = NumberingService::next($pdo, 'GPR');\",\"\",\"    foreach ($lines as $ln) {\",\"        $gpLineId = (int)($ln['gp_line_id'] ?? 0);\",\"        $retQty   = (float)($ln['qty'] ?? 0);\",\"        $unitCost = (float)($ln['unit_cost'] ?? 0);\",\"        $binId    = isset($ln['bin_id']) ? (int)$ln['bin_id'] : ($existing[$gpLineId]['bin_id'] ?? null);\",\"        $batchId  = isset($ln['batch_id']) ? (int)$ln['batch_id'] : ($existing[$gpLineId]['batch_id'] ?? null);\",\"\",\"        if ($gpLineId <= 0 || $retQty <= 0) {\",\"            throw new RuntimeException(\\\"Invalid return line\\\");\",\"        }\",\"        if (!isset($existing[$gpLineId])) {\",\"            throw new RuntimeException(\\\"Gate Pass line not found: {$gpLineId}\\\");\",\"        }\",\"        $ex = $existing[$gpLineId];\",\"        $outstanding = (float)$ex['qty'] - (float)$ex['returned_qty'];\",\"        if ($retQty > $outstanding + 1e-9) {\",\"            throw new RuntimeException(\\\"Return qty exceeds outstanding on line {$ex['line_no']}\\\");\",\"        }\",\"\",\"        // Update returned qty\",\"        $pdo->prepare(\\\"UPDATE gatepass_items SET returned_qty = returned_qty + :r WHERE id = :id\\\")\",\"            ->execute([':r' => $retQty, ':id' => $gpLineId]);\",\"\",\"        // Build payload\",\"        $payload = [\",\"            'txn_type'     => 'GPR',\",\"            'txn_no'       => $gprNo,       // return doc number\",\"            'txn_date'     => $now,\",\"            'item_id'      => (int)$ex['item_id'],\",\"            'uom_id'       => (int)$ex['uom_id'],\",\"            'warehouse_id' => $warehouseId,\",\"            'bin_id'       => $binId,\",\"            'batch_id'     => $batchId,\",\"            'project_id'   => null,\",\"            'qty'          => $retQty,      // positive IN\",\"            'unit_cost'    => $unitCost,    // pre-tax\",\"            'ref_table'    => 'gatepasses',\",\"            'ref_id'       => $gpId,\",\"            'created_by'   => $userId,\",\"        ];\",\"\",\"        StockMoveWriter::postIn($pdo, $payload);\",\"        ValuationService::onReceipt($pdo, (int)$ex['item_id'], $warehouseId, $retQty, $unitCost);\",\"        StockLedgerAdapter::mirror($pdo, $payload);\",\"    }\",\"\",\"    // Close GP if fully returned\",\"    $c = $pdo->prepare(\\\"SELECT SUM(qty) as t_qty, SUM(returned_qty) as t_ret FROM gatepass_items WHERE gp_id = :id\\\");\",\"    $c->execute([':id' => $gpId]);\",\"    $row = $c->fetch(PDO::FETCH_ASSOC);\",\"    if ($row && (float)$row['t_qty'] <= (float)$row['t_ret'] + 1e-9) {\",\"        $pdo->prepare(\\\"UPDATE gatepasses SET status = 'CLOSED', updated_at = NOW() WHERE id = :id\\\")\",\"            ->execute([':id' => $gpId]);\",\"    }\",\"\",\"    audit_log('gatepasses', $gpId, 'RETURN', null, ['gpr_no' => $gprNo, 'lines' => count($lines)]);\",\"    $pdo->commit();\",\"\",\"    echo json_encode(['ok' => true, 'gp_id' => $gpId, 'gpr_no' => $gprNo]);\",\"\",\"} catch (Throwable $e) {\",\"    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();\",\"    error_log($e);\",\"    http_response_code(400);\",\"    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);\",\"}\",\"PHP;\",\"\",\"$STOCK_LEDGER_ADAPTER = <<<'PHP'\",\"<?php\",\"// includes/StockLedgerAdapter.php\",\"require_once __DIR__ . '/db.php';\",\"\",\"class StockLedgerAdapter\",\"{\",\"    public static function mirror(PDO $pdo, array $payload): void\",\"    {\",\"        if (!$payload) return;\",\"\",\"        $txnDate     = $payload['txn_date'] ?? date('Y-m-d H:i:s');\",\"        $txnType     = $payload['txn_type'] ?? 'NA';\",\"        $txnNo       = $payload['txn_no'] ?? '';\",\"        $itemId      = (int)($payload['item_id'] ?? 0);\",\"        $warehouseId = (int)($payload['warehouse_id'] ?? 0);\",\"        $projectId   = isset($payload['project_id']) ? (int)$payload['project_id'] : null;\",\"        $binId       = isset($payload['bin_id']) ? (int)$payload['bin_id'] : null;\",\"        $batchId     = isset($payload['batch_id']) ? (int)$payload['batch_id'] : null;\",\"        $qty         = (float)($payload['qty'] ?? 0);\",\"        $unitCost    = isset($payload['unit_cost']) ? (float)$payload['unit_cost'] : 0.0;\",\"        $uomId       = isset($payload['uom_id']) ? (int)$payload['uom_id'] : null;\",\"        $refTable    = $payload['ref_table'] ?? null;\",\"        $refId       = isset($payload['ref_id']) ? (int)$payload['ref_id'] : null;\",\"        $createdBy   = isset($payload['created_by']) ? (int)$payload['created_by'] : null;\",\"\",\"        if ($qty == 0 || $itemId <= 0 || $warehouseId <= 0) {\",\"            return;\",\"        }\",\"\",\"        // Determine WA for OUT from stock_avg (optional but recommended)\",\"        $rate = $unitCost;\",\"        if (in_array(($payload['txn_type'] ?? ''), ['ADJ','GP','ISS'], true)) {\",\"            $q = $pdo->prepare('SELECT avg_cost FROM stock_avg WHERE item_id = :i AND warehouse_id = :w');\",\"            $q->execute([':i' => $itemId, ':w' => $warehouseId]);\",\"            $r = $q->fetch(PDO::FETCH_ASSOC);\",\"            if ($r && isset($r['avg_cost']) && (float)$r['avg_cost'] > 0) {\",\"                $rate = (float)$r['avg_cost'];\",\"            }\",\"        }\",\"\",\"        $stmt = $pdo->prepare('INSERT INTO stock_ledger\",\"            (txn_date, txn_type, txn_no, item_id, warehouse_id, project_id, bin_id, batch_id,\",\"             qty, rate, uom_id, ref_table, ref_id, created_by, created_at)\",\"            VALUES\",\"            (:txn_date, :txn_type, :txn_no, :item_id, :warehouse_id, :project_id, :bin_id, :batch_id,\",\"             :qty, :rate, :uom_id, :ref_table, :ref_id, :created_by, NOW(6))');\",\"\",\"        $stmt->execute([\",\"            ':txn_date'     => $txnDate,\",\"            ':txn_type'     => $txnType,\",\"            ':txn_no'       => $txnNo,\",\"            ':item_id'      => $itemId,\",\"            ':warehouse_id' => $warehouseId,\",\"            ':project_id'   => $projectId,\",\"            ':bin_id'       => $binId,\",\"            ':batch_id'     => $batchId,\",\"            ':qty'          => $qty,\",\"            ':rate'         => $rate,\",\"            ':uom_id'       => $uomId,\",\"            ':ref_table'    => $refTable,\",\"            ':ref_id'       => $refId,\",\"            ':created_by'   => $createdBy,\",\"        ]);\",\"    }\",\"}\",\"PHP;\",\"\",\"$MIGRATION = <<<'SQL'\",\"-- migrations/001_add_stock_ledger.sql\",\"CREATE TABLE IF NOT EXISTS stock_ledger (\",\"  id                BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,\",\"  txn_date          DATETIME(6)     NOT NULL,\",\"  txn_type          VARCHAR(16)     NOT NULL,\",\"  txn_no            VARCHAR(50)     NOT NULL,\",\"  item_id           BIGINT          NOT NULL,\",\"  warehouse_id      BIGINT          NOT NULL,\",\"  project_id        BIGINT          NULL,\",\"  bin_id            BIGINT          NULL,\",\"  batch_id          BIGINT          NULL,\",\"  qty               DECIMAL(18,6)   NOT NULL,\",\"  rate              DECIMAL(18,6)   NOT NULL,\",\"  amount            DECIMAL(18,2)   AS (qty * rate) STORED,\",\"  uom_id            BIGINT          NULL,\",\"  ref_table         VARCHAR(64)     NULL,\",\"  ref_id            BIGINT          NULL,\",\"  created_by        BIGINT          NULL,\",\"  created_at        DATETIME(6)     NOT NULL DEFAULT CURRENT_TIMESTAMP(6),\",\"  PRIMARY KEY (id),\",\"  KEY idx_ledger_date (txn_date),\",\"  KEY idx_ledger_item_wh (item_id, warehouse_id),\",\"  KEY idx_ledger_txn (txn_type, txn_no)\",\");\",\"SQL;\",\"\",\"$README = <<<TXT\",\"EMS Infra ERP \\u2014 Store Module Patch\",\"Generated: {$TS}\",\"\",\"Contents\",\"--------\",\"- req_post_issue.php            (full replacement)\",\"- stock_adjust_post.php         (full replacement)\",\"- gp_create_post.php            (full replacement)\",\"- gp_return_post.php            (full replacement)\",\"- includes/StockLedgerAdapter.php (new include)\",\"- migrations/001_add_stock_ledger.sql (new table)\",\"\",\"Instructions\",\"------------\",\"1) Run the migration:\",\"   - Execute migrations/001_add_stock_ledger.sql on your MySQL DB.\",\"\",\"2) Copy the new include:\",\"   - Place includes/StockLedgerAdapter.php into your project's includes/ folder.\",\"\",\"3) Replace endpoints:\",\"   - Backup your existing files.\",\"   - Replace the following with the provided versions:\",\"       req_post_issue.php\",\"       stock_adjust_post.php\",\"       gp_create_post.php\",\"       gp_return_post.php\",\"\",\"4) Clear opcode cache if enabled (php-fpm/apcu/opcache).\",\"\",\"5) Test:\",\"   - Post a small Issue (OUT): verify stock_ledger receives rows and stock_avg basis reduces.\",\"   - Create a non-returnable GP: verify OUT mirror in stock_ledger.\",\"   - Return on a returnable GP: verify IN mirror and valuation on receipt.\",\"   - Adjustment IN/OUT: verify both valuation and ledger entries.\",\"\",\"Notes\",\"-----\",\"- No UI changes. Payload shapes are preserved.\",\"- Rates are pre-tax (basic). Taxes remain in AP.\",\"- The adapter reads current WA for OUT from stock_avg; ensure your ValuationService keeps stock_avg updated.\",\"TXT;\",\"\",\"/* ------------- Write files ------------- */\",\"writeFileStrict($baseDir . '/req_post_issue.php', $REQ_POST_ISSUE);\",\"writeFileStrict($baseDir . '/stock_adjust_post.php', $STOCK_ADJUST_POST);\",\"writeFileStrict($baseDir . '/gp_create_post.php', $GP_CREATE_POST);\",\"writeFileStrict($baseDir . '/gp_return_post.php', $GP_RETURN_POST);\",\"\",\"writeFileStrict($includesDir . '/StockLedgerAdapter.php', $STOCK_LEDGER_ADAPTER);\",\"writeFileStrict($migrationsDir . '/001_add_stock_ledger.sql', $MIGRATION);\",\"writeFileStrict($baseDir . '/README.txt', $README);\",\"\",\"/* ------------- Zip it ------------- */\",\"$zipPath = __DIR__ . '/store_module_patch.zip';\",\"$zip = new ZipArchive();\",\"if ($zip->open($zipPath, ZipArchive::CREATE | ZipArchive::OVERWRITE) !== true) {\",\"    throw new RuntimeException(\\\"Unable to create zip at $zipPath\\\");\",\"}\",\"$rii = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($baseDir, FilesystemIterator::SKIP_DOTS));\",\"foreach ($rii as $file) {\",\"    $filePath = $file->getPathname();\",\"    $local = substr($filePath, strlen($baseDir) + 1);\",\"    $zip->addFile($filePath, $local);\",\"}\",\"$zip->close();\",\"\",\"/* ------------- Output ------------- */\",\"$isCli = (php_sapi_name() === 'cli');\",\"$msg = \\\"OK: Created folder 'store_module_patch' and 'store_module_patch.zip' in \\\" . __DIR__ . \\\"\\\\n\\\";\",\"if ($isCli) {\",\"    echo $msg;\",\"} else {\",\"    echo nl2br(htmlentities($msg));\",\"    echo \\\"<br><a href='store_module_patch.zip' download>Download store_module_patch.zip</a>\\\";\",\"}\",\"PHP;\",\"\",\"/* ------------------ Write everything and finish ------------------ */\",\"try {\",\"    writeFileStrict($baseDir . '/README.txt', $README); // ensure base exists\",\"    // Re-write all files (already done above in content-section)\",\"    // but here we just ensure the script writes itself ZIP after all files.\",\"    // done in code.\",\"\",\"    // Actually, files were already written above.\",\"    // No action here.\",\"\",\"} catch (Throwable $e) {\",\"    http_response_code(500);\",\"    echo \\\"ERROR: \\\" . htmlspecialchars($e->getMessage());\",\"    exit;\",\"}\",\"\",\"echo \\\"Packager file generated successfully at \\\" . __FILE__ . \\\"\\\\n\\\";\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/login.php\": [\"<?php\",\"// PATH: /public_html/login.php\",\"declare(strict_types=1);\",\"\",\"require_once __DIR__ . '/config.php';\",\"if (session_status() === PHP_SESSION_NONE) session_start();\",\"require_once __DIR__ . '/includes/csrf.php';\",\"\",\"// app_url() fallback\",\"if (!function_exists('app_url')) {\",\"  function app_url(): string { return '/'; }\",\"}\",\"?>\",\"<!doctype html>\",\"<html lang=\\\"en\\\">\",\"<head>\",\"  <meta charset=\\\"utf-8\\\">\",\"  <title>EMS Infra ERP \\u2014 Login</title>\",\"  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\",\"  <link href=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\">\",\"  <style>\",\"    body {\",\"      background: #f8f9fa;\",\"      min-height: 100vh;\",\"      display: flex;\",\"      align-items: center;\",\"    }\",\"    .login-card {\",\"      border-radius: 1rem;\",\"    }\",\"    .logo {\",\"      max-width: 120px;\",\"      margin-bottom: 1rem;\",\"    }\",\"  </style>\",\"</head>\",\"<body>\",\"  <div class=\\\"container\\\">\",\"    <div class=\\\"row justify-content-center\\\">\",\"      <div class=\\\"col-sm-10 col-md-6 col-lg-4\\\">\",\"        <div class=\\\"card shadow-sm login-card\\\">\",\"          <div class=\\\"card-body p-4\\\">\",\"            <div class=\\\"text-center\\\">\",\"              <img src=\\\"/assets/logo.jpg\\\" alt=\\\"EMS Infra Logo\\\" class=\\\"logo rounded-circle shadow-sm\\\">\",\"              <h4 class=\\\"fw-bold\\\">EMS Infra ERP</h4>\",\"              <p class=\\\"text-muted small mb-4\\\">Secure Access Portal</p>\",\"            </div>\",\"\",\"            <?php if (!empty($_SESSION['flash_error'])): ?>\",\"              <div class=\\\"alert alert-danger\\\">\",\"                <?= htmlspecialchars($_SESSION['flash_error']) ?>\",\"              </div>\",\"              <?php unset($_SESSION['flash_error']); ?>\",\"            <?php endif; ?>\",\"\",\"            <form method=\\\"post\\\" action=\\\"login_handler.php\\\" autocomplete=\\\"off\\\">\",\"              <?= csrf_field(); ?>\",\"              <div class=\\\"mb-3\\\">\",\"                <label class=\\\"form-label\\\">Username or Email</label>\",\"                <input name=\\\"username\\\" class=\\\"form-control form-control-lg\\\" required>\",\"              </div>\",\"              <div class=\\\"mb-3\\\">\",\"                <label class=\\\"form-label\\\">Password</label>\",\"                <input name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control form-control-lg\\\" required>\",\"              </div>\",\"              <button class=\\\"btn btn-primary w-100 btn-lg\\\">Login</button>\",\"            </form>\",\"          </div>\",\"          <div class=\\\"card-footer text-center small bg-light\\\">\",\"            <a href=\\\"<?= app_url(); ?>\\\" class=\\\"text-decoration-none\\\">\",\"              <?= parse_url(app_url(), PHP_URL_HOST) ?: 'Home' ?>\",\"            </a>\",\"          </div>\",\"        </div>\",\"      </div>\",\"    </div>\",\"  </div>\",\"  <script src=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\\\"></script>\",\"</body>\",\"</html>\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/finance/_ajax/ap_invoice_add_line.php\": [\"\",\"<?php\",\"declare(strict_types=1);\",\"require_once dirname(__DIR__,2) . '/includes/auth.php';\",\"require_once dirname(__DIR__,2) . '/includes/db.php';\",\"require_once dirname(__DIR__,2) . '/includes/rbac.php';\",\"header('Content-Type: application/json');\",\"try{\",\"  require_login(); require_permission('finance.ap.edit');\",\"  $pdo = db();\",\"  $in = json_decode(file_get_contents('php://input'), true) ?: $_POST;\",\"  $qty=(float)($in['qty'] ?? 0); $rate=(float)($in['unit_price'] ?? 0); $amt=round($qty*$rate,2);\",\"  $st=$pdo->prepare(\\\"INSERT INTO ap_invoice_lines (invoice_id,po_id,po_line_id,grn_id,grn_line_id,item_id,qty,unit_price,amount) VALUES (?,?,?,?,?,?,?,?,?)\\\");\",\"  $st->execute([(int)($in['invoice_id'] ?? 0), $in['po_id'] ?? null, $in['po_line_id'] ?? null, $in['grn_id'] ?? null, $in['grn_line_id'] ?? null, $in['item_id'] ?? null, $qty, $rate, $amt]);\",\"  $pdo->prepare(\\\"UPDATE ap_invoices SET total_amount=COALESCE(total_amount,0)+? WHERE id=?\\\")->execute([$amt, (int)($in['invoice_id'] ?? 0)]);\",\"  echo json_encode(['ok'=>true,'data'=>['invoice_line_id'=>(int)$pdo->lastInsertId(),'amount'=>$amt]]);\",\"}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/finance/_ajax/ap_invoice_match.php\": [\"\",\"<?php\",\"declare(strict_types=1);\",\"require_once dirname(__DIR__,2) . '/includes/auth.php';\",\"require_once dirname(__DIR__,2) . '/includes/db.php';\",\"require_once dirname(__DIR__,2) . '/includes/rbac.php';\",\"require_once dirname(__DIR__,2) . '/includes/coupler/ThreeWayMatch.php';\",\"header('Content-Type: application/json');\",\"try{\",\"  require_login(); require_permission('finance.ap.match');\",\"  $pdo = db();\",\"  $in = json_decode(file_get_contents('php://input'), true) ?: $_POST;\",\"  $svc = new \\\\Coupler\\\\ThreeWayMatch($pdo);\",\"  $res = $svc->matchInvoice((int)($in['invoice_id'] ?? 0));\",\"  echo json_encode(['ok'=>true,'data'=>$res]);\",\"}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/finance/_ajax/ap_invoice_post.php\": [\"\",\"<?php\",\"declare(strict_types=1);\",\"require_once dirname(__DIR__,2) . '/includes/auth.php';\",\"require_once dirname(__DIR__,2) . '/includes/db.php';\",\"require_once dirname(__DIR__,2) . '/includes/rbac.php';\",\"require_once dirname(__DIR__,2) . '/includes/coupler/ThreeWayMatch.php';\",\"header('Content-Type: application/json');\",\"try{\",\"  require_login(); require_permission('finance.ap.post');\",\"  $pdo = db();\",\"  $in = json_decode(file_get_contents('php://input'), true) ?: $_POST;\",\"  $svc = new \\\\Coupler\\\\ThreeWayMatch($pdo);\",\"  $res = $svc->postInvoice((int)($in['invoice_id'] ?? 0));\",\"  echo json_encode(['ok'=>true,'data'=>$res]);\",\"}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/finance/_ajax/ap_invoice_create.php\": [\"\",\"<?php\",\"declare(strict_types=1);\",\"require_once dirname(__DIR__,2) . '/includes/auth.php';\",\"require_once dirname(__DIR__,2) . '/includes/db.php';\",\"require_once dirname(__DIR__,2) . '/includes/rbac.php';\",\"header('Content-Type: application/json');\",\"try{\",\"  require_login(); require_permission('finance.ap.create');\",\"  $pdo = db();\",\"  $in = json_decode(file_get_contents('php://input'), true) ?: $_POST;\",\"  $st=$pdo->prepare(\\\"INSERT INTO ap_invoices (vendor_id,currency,fx_rate,invoice_no,invoice_date,category,notes) VALUES (?,?,?,?,?,?,?)\\\");\",\"  $st->execute([(int)($in['vendor_id'] ?? 0), (string)($in['currency'] ?? 'INR'), (float)($in['fx_rate'] ?? 1.0), (string)($in['invoice_no'] ?? ''), (string)($in['invoice_date'] ?? date('Y-m-d')), (string)($in['category'] ?? 'goods'), $in['notes'] ?? null]);\",\"  echo json_encode(['ok'=>true,'data'=>['invoice_id'=>(int)$pdo->lastInsertId()]]);\",\"}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/finance/ap_invoice_console.php\": [\"<?php\",\"declare(strict_types=1);\",\"require_once __DIR__ . '/../includes/auth.php';\",\"require_once __DIR__ . '/../includes/db.php';\",\"require_once __DIR__ . '/../includes/rbac.php';\",\"require_login(); require_permission('finance.ap.view');\",\"?><!doctype html><html><head><meta charset=\\\"utf-8\\\"><title>AP Invoice Console (3-Way Match)</title>\",\"<link rel=\\\"stylesheet\\\" href=\\\"../assets/ems_phase04_ui.css\\\"></head><body>\",\"<h1>AP Invoice Console (3-Way Match)</h1>\",\"<section><h2>Create Invoice</h2>\",\"<div class=\\\"row\\\"><div><label>Vendor ID</label><input id=\\\"v_id\\\" type=\\\"number\\\"></div><div><label>Invoice No</label><input id=\\\"inv_no\\\"></div>\",\"<div><label>Date</label><input id=\\\"inv_date\\\" type=\\\"date\\\"></div><div><label>Category</label><select id=\\\"inv_cat\\\"><option>goods</option><option>service</option><option>landed_cost</option></select></div></div>\",\"<div class=\\\"row\\\"><div><label>Currency</label><input id=\\\"inv_curr\\\" value=\\\"INR\\\"></div><div><label>FX Rate</label><input id=\\\"inv_fx\\\" type=\\\"number\\\" step=\\\"0.000001\\\" value=\\\"1.0\\\"></div><div><button id=\\\"btnCreateInv\\\">Create</button></div></div>\",\"<b id=\\\"invoiceId\\\"></b></section>\",\"<section><h2>Add Invoice Line</h2>\",\"<div class=\\\"row\\\"><div><label>Invoice ID</label><input id=\\\"il_inv_id\\\" type=\\\"number\\\"></div><div><label>PO Line ID</label><input id=\\\"il_po_line\\\" type=\\\"number\\\"></div>\",\"<div><label>GRN Line ID</label><input id=\\\"il_grn_line\\\" type=\\\"number\\\"></div><div><label>Item ID</label><input id=\\\"il_item\\\" type=\\\"number\\\"></div></div>\",\"<div class=\\\"row\\\"><div><label>Qty</label><input id=\\\"il_qty\\\" type=\\\"number\\\" step=\\\"0.000001\\\"></div><div><label>Unit Price</label><input id=\\\"il_rate\\\" type=\\\"number\\\" step=\\\"0.000001\\\"></div><div><button id=\\\"btnAddLine\\\">Add Line</button></div></div>\",\"<div id=\\\"ilMsg\\\"></div></section>\",\"<section><h2>Match & Post</h2>\",\"<div class=\\\"row-3\\\"><div><label>Invoice ID</label><input id=\\\"act_inv_id\\\" type=\\\"number\\\"></div><div><button id=\\\"btnMatch\\\">Run 3-Way Match</button></div><div><button id=\\\"btnPost\\\">Post</button></div></div>\",\"<div id=\\\"matchMsg\\\"></div></section>\",\"<script>\",\"async function api(u,d){const r=await fetch(u,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(d)});const j=await r.json();if(!j.ok) throw new Error(j.error||'API');return j.data;}\",\"document.getElementById('btnCreateInv').onclick=async()=>{try{const d=await api('../finance/_ajax/ap_invoice_create.php',{vendor_id:parseInt(document.getElementById('v_id').value||0),invoice_no:document.getElementById('inv_no').value,invoice_date:document.getElementById('inv_date').value,category:document.getElementById('inv_cat').value,currency:document.getElementById('inv_curr').value,fx_rate:parseFloat(document.getElementById('inv_fx').value||'1')});document.getElementById('invoiceId').textContent='Invoice #'+d.invoice_id;document.getElementById('il_inv_id').value=d.invoice_id;document.getElementById('act_inv_id').value=d.invoice_id;}catch(e){alert(e.message);}};\",\"document.getElementById('btnAddLine').onclick=async()=>{try{const d=await api('../finance/_ajax/ap_invoice_add_line.php',{invoice_id:parseInt(document.getElementById('il_inv_id').value||0),po_line_id:document.getElementById('il_po_line').value?parseInt(document.getElementById('il_po_line').value):null,grn_line_id:document.getElementById('il_grn_line').value?parseInt(document.getElementById('il_grn_line').value):null,item_id:document.getElementById('il_item').value?parseInt(document.getElementById('il_item').value):null,qty:parseFloat(document.getElementById('il_qty').value||'0'),unit_price:parseFloat(document.getElementById('il_rate').value||'0')});document.getElementById('ilMsg').textContent='Line #'+d.invoice_line_id+' amount='+d.amount;}catch(e){alert(e.message);}};\",\"document.getElementById('btnMatch').onclick=async()=>{try{const d=await api('../finance/_ajax/ap_invoice_match.php',{invoice_id:parseInt(document.getElementById('act_inv_id').value||0)});document.getElementById('matchMsg').innerHTML='OK: '+d.ok+' Tol: '+d.tolerance+' Exc: '+d.exception+' Status: <span class=\\\"badge '+(d.exception>0?'err':(d.tolerance>0?'warn':'ok'))+'\\\">'+d.status+'</span>'; }catch(e){alert(e.message);}};\",\"document.getElementById('btnPost').onclick=async()=>{try{const d=await api('../finance/_ajax/ap_invoice_post.php',{invoice_id:parseInt(document.getElementById('act_inv_id').value||0)});document.getElementById('matchMsg').textContent='Posted amount='+d.amount+' PPV='+d.ppv+' QTV='+d.qtv;}catch(e){alert(e.message);}};\",\"</script></body></html>\"],","\"/home/u989675055/domains/emsinfra.co.in/public_html/files_grouped.json\": [\"{\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_complete.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/maintenance/wo_complete.php\\\",\\\" * PURPOSE:\\\",\\\" *  - Complete/close a Work Order.\\\",\\\" *  - If linked to an interval, roll the interval (last_completed_on, next_due_date).\\\",\\\" * SECURITY: maintenance.wo.manage\\\",\\\" * NOTE: Uses status='completed' to match schema/enum.\\\",\\\" */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"$ROOT = dirname(__DIR__);\\\",\\\"require_once $ROOT . '/includes/auth.php';\\\",\\\"require_once $ROOT . '/includes/db.php';\\\",\\\"require_once $ROOT . '/includes/rbac.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('maintenance.wo.manage');\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"$pdo->exec(\\\\\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\\\\\");\\\",\\\"\\\",\\\"$woId = (int)($_GET['id'] ?? $_POST['id'] ?? 0);\\\",\\\"if ($woId <= 0) { http_response_code(400); exit('Invalid WO id'); }\\\",\\\"\\\",\\\"function next_due_from(string $freq, int $count, int $customDays, DateTimeImmutable $base): string {\\\",\\\"  $count = max(1, $count);\\\",\\\"  return match ($freq) {\\\",\\\"    'daily'       => $base->modify(\\\\\\\"+{$count} day\\\\\\\")->format('Y-m-d'),\\\",\\\"    'weekly'      => $base->modify(\\\\\\\"+{$count} week\\\\\\\")->format('Y-m-d'),\\\",\\\"    'monthly'     => $base->modify(\\\\\\\"+{$count} month\\\\\\\")->format('Y-m-d'),\\\",\\\"    'quarterly'   => $base->modify(\\\\\\\"+\\\\\\\".(3 * $count).\\\\\\\" month\\\\\\\")->format('Y-m-d'),\\\",\\\"    'semiannual'  => $base->modify(\\\\\\\"+\\\\\\\".(6 * $count).\\\\\\\" month\\\\\\\")->format('Y-m-d'),\\\",\\\"    'annual'      => $base->modify(\\\\\\\"+{$count} year\\\\\\\")->format('Y-m-d'),\\\",\\\"    'custom'      => $base->modify(\\\\\\\"+\\\\\\\".max(1, $customDays).\\\\\\\" day\\\\\\\")->format('Y-m-d'),\\\",\\\"    default       => $base->modify(\\\\\\\"+{$count} month\\\\\\\")->format('Y-m-d'),\\\",\\\"  };\\\",\\\"}\\\",\\\"\\\",\\\"try {\\\",\\\"  // Load WO\\\",\\\"  $st = $pdo->prepare(\\\\\\\"\\\",\\\"    SELECT id, wo_code, machine_id, interval_id, status, due_date, down_from, up_at\\\",\\\"      FROM maintenance_work_orders\\\",\\\"     WHERE id = ?\\\\\\\");\\\",\\\"  $st->execute([$woId]);\\\",\\\"  $wo = $st->fetch(PDO::FETCH_ASSOC);\\\",\\\"  if (!$wo) { http_response_code(404); exit('Work Order not found'); }\\\",\\\"\\\",\\\"  $today = new DateTimeImmutable('today');\\\",\\\"\\\",\\\"  $pdo->beginTransaction();\\\",\\\"\\\",\\\"  // If tied to an interval \\\\u2192 roll it forward\\\",\\\"  if (!empty($wo['interval_id'])) {\\\",\\\"    $stIv = $pdo->prepare(\\\\\\\"\\\",\\\"      SELECT id, program_id, title, frequency, interval_count, custom_days\\\",\\\"        FROM maintenance_intervals\\\",\\\"       WHERE id = ?\\\\\\\");\\\",\\\"    $stIv->execute([(int)$wo['interval_id']]);\\\",\\\"    if ($iv = $stIv->fetch(PDO::FETCH_ASSOC)) {\\\",\\\"      $next = next_due_from(\\\",\\\"        (string)$iv['frequency'],\\\",\\\"        (int)($iv['interval_count'] ?? 1),\\\",\\\"        (int)($iv['custom_days'] ?? 0),\\\",\\\"        $today\\\",\\\"      );\\\",\\\"      $pdo->prepare(\\\\\\\"\\\",\\\"        UPDATE maintenance_intervals\\\",\\\"           SET last_completed_on = ?, next_due_date = ?, updated_at = NOW()\\\",\\\"         WHERE id = ?\\\",\\\"      \\\\\\\")->execute([$today->format('Y-m-d'), $next, (int)$iv['id']]);\\\",\\\"    }\\\",\\\"  }\\\",\\\"\\\",\\\"  // Mark WO completed (enum-safe)\\\",\\\"  $pdo->prepare(\\\\\\\"\\\",\\\"    UPDATE maintenance_work_orders\\\",\\\"       SET status='completed',\\\",\\\"           up_at = COALESCE(up_at, NOW())\\\",\\\"     WHERE id = ?\\\",\\\"  \\\\\\\")->execute([$woId]);\\\",\\\"\\\",\\\"  // Best-effort maintenance log (ignore failure)\\\",\\\"  try {\\\",\\\"    $pdo->prepare(\\\\\\\"\\\",\\\"      INSERT INTO maintenance_logs (machine_id, wo_id, performed_on, meter_value, remarks, created_by, created_at) VALUES (?, ?, NOW(), NULL, ?, ?, NOW()))\\\",\\\"    \\\\\\\")->execute([\\\",\\\"      (int)$wo['machine_id'],\\\",\\\"      $today->format('Y-m-d'),\\\",\\\"      'WO completed: ' . (string)($wo['wo_code'] ?? $woId),\\\",\\\"      (int)current_user_id()\\\",\\\"    ]);\\\",\\\"  } catch (Throwable $e) { /* non-blocking */ }\\\",\\\"\\\",\\\"  $pdo->commit();\\\",\\\"  header('Location: /maintenance/wo_view.php?id=' . $woId . '&ok=1');\\\",\\\"  exit;\\\",\\\"\\\",\\\"} catch (Throwable $e) {\\\",\\\"  if ($pdo->inTransaction()) $pdo->rollBack();\\\",\\\"  http_response_code(500);\\\",\\\"  echo \\\\\\\"Complete failed: \\\\\\\" . $e->getMessage();\\\",\\\"  exit;\\\",\\\"}\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_task_toggle.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/maintenance/wo_task_toggle.php\\\",\\\" * PURPOSE: Toggle one task status between 'todo' and 'done'\\\",\\\" * PERMS: maintenance.wo.manage\\\",\\\" */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"$ROOT = dirname(__DIR__);\\\",\\\"require_once $ROOT . '/includes/auth.php';\\\",\\\"require_once $ROOT . '/includes/db.php';\\\",\\\"require_once $ROOT . '/includes/rbac.php';\\\",\\\"require_once $ROOT . '/includes/csrf.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('maintenance.wo.manage');\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"csrf_require_token();\\\",\\\"$pdo->exec(\\\\\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\\\\\");\\\",\\\"\\\",\\\"$id   = (int)($_POST['id'] ?? 0);\\\",\\\"$woId = (int)($_POST['wo_id'] ?? 0);\\\",\\\"$to   = (string)($_POST['to'] ?? '');\\\",\\\"\\\",\\\"if ($id <= 0 || $woId <= 0 || !in_array($to, ['todo','done'], true)) {\\\",\\\"  http_response_code(400); exit('Invalid params');\\\",\\\"}\\\",\\\"\\\",\\\"$st = $pdo->prepare(\\\\\\\"UPDATE maintenance_wo_tasks SET status=? WHERE id=? AND wo_id=?\\\\\\\");\\\",\\\"$st->execute([$to, $id, $woId]);\\\",\\\"\\\",\\\"header('Location: /maintenance/wo_view.php?id=' . $woId);\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_form.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/maintenance/wo_form.php */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"require_once __DIR__ . '/../includes/csrf.php';\\\",\\\"require_once __DIR__ . '/../includes/machines_helpers.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"$pdo = db();\\\",\\\"$pdo->exec(\\\\\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\\\\\");\\\",\\\"\\\",\\\"$id = (int)($_GET['id'] ?? 0);\\\",\\\"$is_edit = $id > 0;\\\",\\\"if ($is_edit) require_permission('maintenance.wo.view'); else require_permission('maintenance.wo.manage');\\\",\\\"\\\",\\\"function allocate_wo_code(PDO $pdo): string {\\\",\\\"  $year = date('Y');\\\",\\\"  $lock = \\\\\\\"wo_code_$year\\\\\\\";\\\",\\\"  $pdo->query(\\\\\\\"SELECT GET_LOCK('$lock', 10)\\\\\\\");\\\",\\\"  try {\\\",\\\"    $st = $pdo->prepare(\\\\\\\"SELECT MAX(CAST(SUBSTRING(wo_code, 10) AS UNSIGNED)) FROM maintenance_work_orders WHERE wo_code LIKE ?\\\\\\\");\\\",\\\"    $st->execute([\\\\\\\"WO-$year-%\\\\\\\"]);\\\",\\\"    $next = ((int)$st->fetchColumn()) + 1;\\\",\\\"    return sprintf(\\\\\\\"WO-%s-%04d\\\\\\\", $year, $next);\\\",\\\"  } finally {\\\",\\\"    $pdo->query(\\\\\\\"SELECT RELEASE_LOCK('$lock')\\\\\\\");\\\",\\\"  }\\\",\\\"}\\\",\\\"function sum_array_amount(array $arr, string $key): float { $t=0.0; foreach($arr as $r){ $t+=(float)($r[$key]??0);} return $t; }\\\",\\\"\\\",\\\"$machines = $pdo->query(\\\\\\\"SELECT id, CONCAT(machine_id,' - ',name) AS label FROM machines ORDER BY machine_id\\\\\\\")->fetchAll(PDO::FETCH_KEY_PAIR);\\\",\\\"$mtypes   = $pdo->query(\\\\\\\"SELECT id, CONCAT(code,' - ',name) AS label FROM maintenance_types ORDER BY code\\\\\\\")->fetchAll(PDO::FETCH_KEY_PAIR);\\\",\\\"\\\",\\\"$wo = [\\\",\\\"  'wo_code'=>'','machine_id'=> (int)($_GET['machine_id'] ?? 0),'interval_id'=>null,\\\",\\\"  'title'=> (string)($_GET['title'] ?? ''),'description'=>null,'maintenance_type_id'=>null,'priority'=>'medium',\\\",\\\"  'status'=>'open','due_date'=>null,'reported_by'=>null,'down_from'=>null,'up_at'=>null,\\\",\\\"  'parts_cost'=>0,'labour_cost_internal'=>0,'labour_cost_vendor'=>0,'misc_cost'=>0,'total_cost'=>0\\\",\\\"];\\\",\\\"$tasks=[]; $parts=[]; $labour=[];\\\",\\\"$interval_id = (int)($_GET['interval_id'] ?? 0);\\\",\\\"if (!$is_edit && $interval_id) {\\\",\\\"  $st = $pdo->prepare(\\\\\\\"SELECT mi.*, mp.machine_id FROM maintenance_intervals mi JOIN maintenance_programs mp ON mp.id=mi.program_id WHERE mi.id=?\\\\\\\");\\\",\\\"  $st->execute([$interval_id]);\\\",\\\"  if ($ir=$st->fetch(PDO::FETCH_ASSOC)) {\\\",\\\"    $wo['machine_id']=(int)$ir['machine_id']; $wo['interval_id']=(int)$ir['id']; $wo['title']=(string)$ir['title']; $wo['maintenance_type_id']=(int)$ir['maintenance_type_id']; $wo['due_date']=$ir['next_due_date'];\\\",\\\"    if (!empty($ir['checklist_json'])) { $chk=json_decode((string)$ir['checklist_json'], true); if (is_array($chk)) foreach($chk as $c) $tasks[]=['task'=>(string)($c['task']??(is_string($c)?$c:'')),'status'=>'pending']; }\\\",\\\"    if (!empty($ir['parts_json'])) { $pj=json_decode((string)$ir['parts_json'], true); if (is_array($pj)) foreach($pj as $p) $parts[]=['item_id'=>(int)($p['item_id']??0)?:null,'description'=>(string)($p['description']??''),'qty'=>(float)($p['qty']??0),'uom_id'=>(int)($p['uom_id']??0)?:null,'rate'=>(float)($p['rate']??0),'amount'=>(float)($p['amount']??0)]; }\\\",\\\"  }\\\",\\\"}\\\",\\\"if ($is_edit) {\\\",\\\"  $st=$pdo->prepare(\\\\\\\"SELECT * FROM maintenance_work_orders WHERE id=?\\\\\\\"); $st->execute([$id]); $wo=$st->fetch(PDO::FETCH_ASSOC) ?: $wo;\\\",\\\"  $tasks=$pdo->query(\\\\\\\"SELECT * FROM maintenance_wo_tasks WHERE wo_id=$id ORDER BY id\\\\\\\")->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"  $parts=$pdo->query(\\\\\\\"SELECT * FROM maintenance_wo_parts WHERE wo_id=$id ORDER BY id\\\\\\\")->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"  $labour=$pdo->query(\\\\\\\"SELECT * FROM maintenance_wo_labour WHERE wo_id=$id ORDER BY id\\\\\\\")->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"}\\\",\\\"$errors=[]; $ok='';\\\",\\\"if ($_SERVER['REQUEST_METHOD']==='POST') {\\\",\\\"  csrf_require_token();\\\",\\\"  $wo['machine_id']=(int)($_POST['machine_id'] ?? 0);\\\",\\\"  $wo['interval_id']=($_POST['interval_id'] ?? '')!==''?(int)$_POST['interval_id']:null;\\\",\\\"  $wo['title']=trim((string)($_POST['title'] ?? ''));\\\",\\\"  $wo['description']=trim((string)($_POST['description'] ?? '')) ?: null;\\\",\\\"  $wo['maintenance_type_id']=($_POST['maintenance_type_id'] ?? '')!==''?(int)$_POST['maintenance_type_id']:null;\\\",\\\"  $wo['priority']=(string)($_POST['priority'] ?? 'medium');\\\",\\\"  $wo['status']=(string)($_POST['status'] ?? 'open');\\\",\\\"  $wo['due_date']=($_POST['due_date'] ?? '') ?: null;\\\",\\\"  $wo['down_from']=($_POST['down_from'] ?? '') ?: null;\\\",\\\"  $wo['up_at']=($_POST['up_at'] ?? '') ?: null;\\\",\\\"\\\",\\\"  $tasks = array_values((array)($_POST['tasks'] ?? []));\\\",\\\"  $parts = array_values((array)($_POST['parts'] ?? []));\\\",\\\"  $labour= array_values((array)($_POST['labour'] ?? []));\\\",\\\"\\\",\\\"  $parts_total = sum_array_amount($parts, 'amount');\\\",\\\"  $lab_int=0.0; $lab_vend=0.0;\\\",\\\"  foreach ($labour as $l){ $amt=(float)($l['amount']??0); if((string)($l['role_name']??'')==='vendor') $lab_vend+=$amt; else $lab_int+=$amt; }\\\",\\\"  $misc=(float)($_POST['misc_cost'] ?? 0);\\\",\\\"  $wo['parts_cost']=$parts_total; $wo['labour_cost_internal']=$lab_int; $wo['labour_cost_vendor']=$lab_vend; $wo['misc_cost']=$misc; $wo['total_cost']=$parts_total+$lab_int+$lab_vend+$misc;\\\",\\\"\\\",\\\"  if ($wo['machine_id']<=0) $errors[]='Machine is required';\\\",\\\"  if ($wo['title']==='')    $errors[]='Title is required';\\\",\\\"\\\",\\\"  if (!$errors) {\\\",\\\"    $pdo->beginTransaction();\\\",\\\"    try {\\\",\\\"      if ($is_edit) {\\\",\\\"        $sql=\\\\\\\"UPDATE maintenance_work_orders SET title=?, description=?, maintenance_type_id=?, priority=?, status=?, due_date=?, interval_id=?, down_from=?, up_at=?, parts_cost=?, labour_cost_internal=?, labour_cost_vendor=?, misc_cost=?, total_cost=?, updated_at=NOW() WHERE id=?\\\\\\\";\\\",\\\"        $pdo->prepare($sql)->execute([$wo['title'],$wo['description'],$wo['maintenance_type_id'],$wo['priority'],$wo['status'],$wo['due_date'],$wo['interval_id'],$wo['down_from'],$wo['up_at'],$wo['parts_cost'],$wo['labour_cost_internal'],$wo['labour_cost_vendor'],$wo['misc_cost'],$wo['total_cost'],$id]);\\\",\\\"      } else {\\\",\\\"        $wo_code = allocate_wo_code($pdo);\\\",\\\"        $sql=\\\\\\\"INSERT INTO maintenance_work_orders (wo_code,machine_id,interval_id,title,description,maintenance_type_id,priority,status,due_date,reported_by,reported_at,down_from,up_at,parts_cost,labour_cost_internal,labour_cost_vendor,misc_cost,total_cost,created_by,created_at) VALUES (?,?,?,?,?,?,?,?,?, ?, NOW(), ?, ?, ?, ?, ?, ?, ?, ?, NOW())\\\\\\\";\\\",\\\"        $pdo->prepare($sql)->execute([$wo_code,$wo['machine_id'],$wo['interval_id'],$wo['title'],$wo['description'],$wo['maintenance_type_id'],$wo['priority'],$wo['status'],$wo['due_date'],current_user_id(),$wo['down_from'],$wo['up_at'],$wo['parts_cost'],$wo['labour_cost_internal'],$wo['labour_cost_vendor'],$wo['misc_cost'],$wo['total_cost'],current_user_id()]);\\\",\\\"        $id=(int)$pdo->lastInsertId(); $is_edit=true;\\\",\\\"      }\\\",\\\"      $pdo->prepare(\\\\\\\"DELETE FROM maintenance_wo_tasks WHERE wo_id=?\\\\\\\")->execute([$id]);\\\",\\\"      if ($tasks) { $ins=$pdo->prepare(\\\\\\\"INSERT INTO maintenance_wo_tasks (wo_id,task,status) VALUES (?,?,?)\\\\\\\"); foreach($tasks as $t){ $task=trim((string)($t['task']??'')); if($task==='') continue; $status=in_array(($t['status']??'pending'),['pending','done'],true)?$t['status']:'pending'; $ins->execute([$id,$task,$status]); } }\\\",\\\"      $pdo->prepare(\\\\\\\"DELETE FROM maintenance_wo_parts WHERE wo_id=?\\\\\\\")->execute([$id]);\\\",\\\"      if ($parts) { $ins=$pdo->prepare(\\\\\\\"INSERT INTO maintenance_wo_parts (wo_id,item_id,description,qty,uom_id,rate,amount,source_doc) VALUES (?,?,?,?,?,?,?,?)\\\\\\\");\\\",\\\"        foreach($parts as $p){ $desc=trim((string)($p['description']??'')); $qty=(float)($p['qty']??0); if($desc==='' && $qty<=0) continue;\\\",\\\"          $ins->execute([$id, ($p['item_id']??'')!==''?(int)$p['item_id']:null, $desc, $qty, ($p['uom_id']??'')!==''?(int)$p['uom_id']:null, ($p['rate']??'')!==''?(float)$p['rate']:null, ($p['amount']??'')!==''?(float)$p['amount']:null, trim((string)($p['source_doc']??''))?:null]); } }\\\",\\\"      $pdo->prepare(\\\\\\\"DELETE FROM maintenance_wo_labour WHERE wo_id=?\\\\\\\")->execute([$id]);\\\",\\\"      if ($labour) { $ins=$pdo->prepare(\\\\\\\"INSERT INTO maintenance_wo_labour (wo_id,staff_id,role_name,entry_date,hours,rate,amount,shift,notes) VALUES (?,?,?,?,?,?,?,?,?)\\\\\\\");\\\",\\\"        foreach($labour as $l){ $entry_date=(string)($l['entry_date']??''); if($entry_date==='') continue;\\\",\\\"          $ins->execute([$id, ($l['staff_id']??'')!==''?(int)$l['staff_id']:null, trim((string)($l['role_name']??''))?:null, $entry_date, (float)($l['hours']??0), (float)($l['rate']??0), (float)($l['amount']??0), in_array(($l['shift']??null),['A','B','C'],true)?$l['shift']:null, trim((string)($l['notes']??''))?:null]); } }\\\",\\\"      $pdo->commit();\\\",\\\"      $ok='Saved.';\\\",\\\"      $st=$pdo->prepare(\\\\\\\"SELECT * FROM maintenance_work_orders WHERE id=?\\\\\\\"); $st->execute([$id]); $wo=$st->fetch(PDO::FETCH_ASSOC) ?: $wo;\\\",\\\"    } catch(Throwable $e){ $pdo->rollBack(); $errors[]='Save failed: '.$e->getMessage(); }\\\",\\\"  }\\\",\\\"}\\\",\\\"\\\",\\\"$holder = (int)$wo['machine_id']>0 ? machine_current_holder($pdo, (int)$wo['machine_id']) : null;\\\",\\\"\\\",\\\"$PAGE_TITLE = $is_edit ? \\\\\\\"Work Order \\\\\\\".($wo['wo_code'] ?? '') : \\\\\\\"New Work Order\\\\\\\";\\\",\\\"$ACTIVE_MENU = 'machines.list';\\\",\\\"include __DIR__ . '/../ui/layout_start.php';\\\",\\\"?>\\\",\\\"<div class=\\\\\\\"d-flex align-items-center justify-content-between mb-3\\\\\\\">\\\",\\\"  <h1 class=\\\\\\\"h5 mb-0\\\\\\\"><?=$PAGE_TITLE?></h1>\\\",\\\"  <div class=\\\\\\\"d-flex gap-2\\\\\\\">\\\",\\\"    <?php if ($holder): ?>\\\",\\\"      <span class=\\\\\\\"badge bg-warning text-dark align-self-center\\\\\\\">Held by <?=htmlspecialchars($holder['contractor_code'].' \\\\u2014 '.$holder['contractor_name'])?></span>\\\",\\\"    <?php endif; ?>\\\",\\\"    <div class=\\\\\\\"btn-group btn-group-sm\\\\\\\">\\\",\\\"      <?php if ((int)$wo['machine_id']>0): ?>\\\",\\\"        <a class=\\\\\\\"btn btn-outline-secondary\\\\\\\" href=\\\\\\\"/maintenance/programs_list.php?machine_id=<?=$wo['machine_id']?>\\\\\\\">Programs</a>\\\",\\\"        <a class=\\\\\\\"btn btn-outline-dark\\\\\\\" href=\\\\\\\"/maintenance/wo_list.php?machine_id=<?=$wo['machine_id']?>\\\\\\\">WO List</a>\\\",\\\"        <a class=\\\\\\\"btn btn-outline-danger\\\\\\\" href=\\\\\\\"/maintenance/breakdown_quick_create.php?machine_id=<?=$wo['machine_id']?>&symptom=Breakdown%20reported&severity=high\\\\\\\">+ Breakdown</a>\\\",\\\"        <?php if ($holder): ?>\\\",\\\"          <a class=\\\\\\\"btn btn-success\\\\\\\" href=\\\\\\\"/maintenance_alloc/allocations_return.php?id=<?=$holder['alloc_id']?>\\\\\\\">Return</a>\\\",\\\"        <?php else: ?>\\\",\\\"          <a class=\\\\\\\"btn btn-success\\\\\\\" href=\\\\\\\"/maintenance_alloc/allocations_form.php?machine_id=<?=$wo['machine_id']?>\\\\\\\">Issue</a>\\\",\\\"        <?php endif; ?>\\\",\\\"      <?php endif; ?>\\\",\\\"    </div>\\\",\\\"    <a class=\\\\\\\"btn btn-light btn-sm\\\\\\\" href=\\\\\\\"/maintenance/wo_list.php?machine_id=<?=(int)$wo['machine_id']?>\\\\\\\">Back</a>\\\",\\\"    <?php if (!$is_edit && has_permission('maintenance.wo.manage')): ?>\\\",\\\"      <button form=\\\\\\\"woForm\\\\\\\" class=\\\\\\\"btn btn-primary btn-sm\\\\\\\">Create</button>\\\",\\\"    <?php elseif (has_permission('maintenance.wo.manage')): ?>\\\",\\\"      <button form=\\\\\\\"woForm\\\\\\\" class=\\\\\\\"btn btn-primary btn-sm\\\\\\\">Save</button>\\\",\\\"    <?php endif; ?>\\\",\\\"  </div>\\\",\\\"</div>\\\",\\\"\\\",\\\"<?php if ($errors): ?><div class=\\\\\\\"alert alert-danger\\\\\\\"><ul class=\\\\\\\"mb-0\\\\\\\"><?php foreach($errors as $e) echo '<li>'.htmlspecialchars($e).'</li>'; ?></ul></div>\\\",\\\"<?php elseif ($ok): ?><div class=\\\\\\\"alert alert-success\\\\\\\"><?=$ok?></div><?php endif; ?>\\\",\\\"\\\",\\\"<form id=\\\\\\\"woForm\\\\\\\" method=\\\\\\\"post\\\\\\\" class=\\\\\\\"row g-3\\\\\\\">\\\",\\\"  <?= csrf_hidden_input() ?>\\\",\\\"  <div class=\\\\\\\"col-md-4\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Machine</label>\\\",\\\"    <select name=\\\\\\\"machine_id\\\\\\\" class=\\\\\\\"form-select\\\\\\\" required>\\\",\\\"      <option value=\\\\\\\"\\\\\\\">\\\\u2014 choose \\\\u2014</option>\\\",\\\"      <?php foreach ($machines as $mid=>$label): ?>\\\",\\\"        <option value=\\\\\\\"<?=$mid?>\\\\\\\" <?= (int)$wo['machine_id']===$mid?'selected':'' ?>><?=htmlspecialchars((string)$label)?></option>\\\",\\\"      <?php endforeach; ?>\\\",\\\"    </select>\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Maintenance Type</label>\\\",\\\"    <select name=\\\\\\\"maintenance_type_id\\\\\\\" class=\\\\\\\"form-select\\\\\\\">\\\",\\\"      <option value=\\\\\\\"\\\\\\\">\\\\u2014</option>\\\",\\\"      <?php foreach ($mtypes as $tid=>$label): ?>\\\",\\\"        <option value=\\\\\\\"<?=$tid?>\\\\\\\" <?= (int)($wo['maintenance_type_id'] ?? 0)===$tid?'selected':'' ?>><?=htmlspecialchars($label)?></option>\\\",\\\"      <?php endforeach; ?>\\\",\\\"    </select>\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-2\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Priority</label>\\\",\\\"    <select name=\\\\\\\"priority\\\\\\\" class=\\\\\\\"form-select\\\\\\\">\\\",\\\"      <?php foreach (['low','medium','high'] as $p): ?>\\\",\\\"        <option value=\\\\\\\"<?=$p?>\\\\\\\" <?= ($wo['priority'] ?? 'medium')===$p?'selected':'' ?>><?=ucfirst($p)?></option>\\\",\\\"      <?php endforeach; ?>\\\",\\\"    </select>\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Status</label>\\\",\\\"    <select name=\\\\\\\"status\\\\\\\" class=\\\\\\\"form-select\\\\\\\">\\\",\\\"      <?php foreach (['open','in_progress','waiting_parts','completed','cancelled'] as $s): ?>\\\",\\\"        <option value=\\\\\\\"<?=$s?>\\\\\\\" <?= ($wo['status'] ?? 'open')===$s?'selected':'' ?>><?=ucwords(str_replace('_',' ',$s))?></option>\\\",\\\"      <?php endforeach; ?>\\\",\\\"    </select>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"col-md-8\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Title</label>\\\",\\\"    <input name=\\\\\\\"title\\\\\\\" class=\\\\\\\"form-control\\\\\\\" required value=\\\\\\\"<?=htmlspecialchars((string)$wo['title'])?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-4\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Due Date</label>\\\",\\\"    <input type=\\\\\\\"date\\\\\\\" name=\\\\\\\"due_date\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?=htmlspecialchars((string)$wo['due_date'] ?? '')?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"col-12\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Description</label>\\\",\\\"    <textarea name=\\\\\\\"description\\\\\\\" class=\\\\\\\"form-control\\\\\\\" rows=\\\\\\\"3\\\\\\\"><?=htmlspecialchars((string)($wo['description'] ?? ''))?></textarea>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Linked Interval</label>\\\",\\\"    <input name=\\\\\\\"interval_id\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?=htmlspecialchars((string)($wo['interval_id'] ?? ''))?>\\\\\\\">\\\",\\\"    <div class=\\\\\\\"form-text\\\\\\\">Optional: link to a planned interval ID.</div>\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Down From</label>\\\",\\\"    <input type=\\\\\\\"datetime-local\\\\\\\" name=\\\\\\\"down_from\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= $wo['down_from'] ? date('Y-m-d\\\\\\\\TH:i', strtotime((string)$wo['down_from'])) : '' ?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Up At</label>\\\",\\\"    <input type=\\\\\\\"datetime-local\\\\\\\" name=\\\\\\\"up_at\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= $wo['up_at'] ? date('Y-m-d\\\\\\\\TH:i', strtotime((string)$wo['up_at'])) : '' ?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Misc Cost (\\\\u20b9)</label>\\\",\\\"    <input type=\\\\\\\"number\\\\\\\" step=\\\\\\\"0.01\\\\\\\" name=\\\\\\\"misc_cost\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?=htmlspecialchars((string)$wo['misc_cost'])?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <hr class=\\\\\\\"mt-4\\\\\\\">\\\",\\\"\\\",\\\"  <h6>Tasks</h6>\\\",\\\"  <div id=\\\\\\\"tasksWrap\\\\\\\" class=\\\\\\\"mb-2\\\\\\\">\\\",\\\"    <?php foreach ($tasks ?: [['task'=>'','status'=>'pending']] as $i=>$t): ?>\\\",\\\"      <div class=\\\\\\\"row g-2 mb-2\\\\\\\">\\\",\\\"        <div class=\\\\\\\"col-md-8\\\\\\\"><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"tasks[<?=$i?>][task]\\\\\\\" placeholder=\\\\\\\"Task\\\\u2026\\\\\\\" value=\\\\\\\"<?=htmlspecialchars((string)($t['task'] ?? ''))?>\\\\\\\"></div>\\\",\\\"        <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"          <select class=\\\\\\\"form-select\\\\\\\" name=\\\\\\\"tasks[<?=$i?>][status]\\\\\\\">\\\",\\\"            <?php foreach (['pending','done'] as $ts): ?>\\\",\\\"              <option value=\\\\\\\"<?=$ts?>\\\\\\\" <?= (($t['status'] ?? 'pending')===$ts)?'selected':'' ?>><?=ucfirst($ts)?></option>\\\",\\\"            <?php endforeach; ?>\\\",\\\"          </select>\\\",\\\"        </div>\\\",\\\"        <div class=\\\\\\\"col-md-1 text-end\\\\\\\">\\\",\\\"          <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-outline-danger btn-sm\\\\\\\" onclick=\\\\\\\"this.closest('.row').remove()\\\\\\\">\\\\u00d7</button>\\\",\\\"        </div>\\\",\\\"      </div>\\\",\\\"    <?php endforeach; ?>\\\",\\\"  </div>\\\",\\\"  <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-sm btn-outline-secondary\\\\\\\" onclick=\\\\\\\"addTask()\\\\\\\">+ Add Task</button>\\\",\\\"\\\",\\\"  <h6 class=\\\\\\\"mt-4\\\\\\\">Parts</h6>\\\",\\\"  <div id=\\\\\\\"partsWrap\\\\\\\" class=\\\\\\\"mb-2\\\\\\\">\\\",\\\"    <?php foreach ($parts ?: [['description'=>'','qty'=>'','uom_id'=>'','rate'=>'','amount'=>'']] as $i=>$p): ?>\\\",\\\"      <div class=\\\\\\\"row g-2 mb-2\\\\\\\">\\\",\\\"        <div class=\\\\\\\"col-md-5\\\\\\\"><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"parts[<?=$i?>][description]\\\\\\\" placeholder=\\\\\\\"Description\\\\\\\" value=\\\\\\\"<?=htmlspecialchars((string)($p['description'] ?? ''))?>\\\\\\\"></div>\\\",\\\"        <div class=\\\\\\\"col-md-2\\\\\\\"><input type=\\\\\\\"number\\\\\\\" step=\\\\\\\"0.001\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"parts[<?=$i?>][qty]\\\\\\\" placeholder=\\\\\\\"Qty\\\\\\\" value=\\\\\\\"<?=htmlspecialchars((string)($p['qty'] ?? ''))?>\\\\\\\"></div>\\\",\\\"        <div class=\\\\\\\"col-md-2\\\\\\\"><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"parts[<?=$i?>][uom_id]\\\\\\\" placeholder=\\\\\\\"UOM ID\\\\\\\" value=\\\\\\\"<?=htmlspecialchars((string)($p['uom_id'] ?? ''))?>\\\\\\\"></div>\\\",\\\"        <div class=\\\\\\\"col-md-1\\\\\\\"><input type=\\\\\\\"number\\\\\\\" step=\\\\\\\"0.01\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"parts[<?=$i?>][rate]\\\\\\\" placeholder=\\\\\\\"Rate\\\\\\\" value=\\\\\\\"<?=htmlspecialchars((string)($p['rate'] ?? ''))?>\\\\\\\"></div>\\\",\\\"        <div class=\\\\\\\"col-md-1\\\\\\\"><input type=\\\\\\\"number\\\\\\\" step=\\\\\\\"0.01\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"parts[<?=$i?>][amount]\\\\\\\" placeholder=\\\\\\\"Amt\\\\\\\" value=\\\\\\\"<?=htmlspecialchars((string)($p['amount'] ?? ''))?>\\\\\\\"></div>\\\",\\\"        <div class=\\\\\\\"col-md-1 text-end\\\\\\\"><button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-outline-danger btn-sm\\\\\\\" onclick=\\\\\\\"this.closest('.row').remove()\\\\\\\">\\\\u00d7</button></div>\\\",\\\"      </div>\\\",\\\"    <?php endforeach; ?>\\\",\\\"  </div>\\\",\\\"  <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-sm btn-outline-secondary\\\\\\\" onclick=\\\\\\\"addPart()\\\\\\\">+ Add Part</button>\\\",\\\"\\\",\\\"  <h6 class=\\\\\\\"mt-4\\\\\\\">Labour</h6>\\\",\\\"  <div id=\\\\\\\"labourWrap\\\\\\\" class=\\\\\\\"mb-2\\\\\\\">\\\",\\\"    <?php foreach ($labour ?: [['entry_date'=>date('Y-m-d'),'hours'=>'','rate'=>'','amount'=>'','role_name'=>'']] as $i=>$l): ?>\\\",\\\"      <div class=\\\\\\\"row g-2 mb-2\\\\\\\">\\\",\\\"        <div class=\\\\\\\"col-md-2\\\\\\\"><input type=\\\\\\\"date\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"labour[<?=$i?>][entry_date]\\\\\\\" value=\\\\\\\"<?=htmlspecialchars((string)($l['entry_date'] ?? date('Y-m-d')))?>\\\\\\\"></div>\\\",\\\"        <div class=\\\\\\\"col-md-2\\\\\\\"><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"labour[<?=$i?>][role_name]\\\\\\\" placeholder=\\\\\\\"Role/vendor\\\\\\\" value=\\\\\\\"<?=htmlspecialchars((string)($l['role_name'] ?? ''))?>\\\\\\\"></div>\\\",\\\"        <div class=\\\\\\\"col-md-2\\\\\\\"><input type=\\\\\\\"number\\\\\\\" step=\\\\\\\"0.01\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"labour[<?=$i?>][hours]\\\\\\\" placeholder=\\\\\\\"Hours\\\\\\\" value=\\\\\\\"<?=htmlspecialchars((string)($l['hours'] ?? ''))?>\\\\\\\"></div>\\\",\\\"        <div class=\\\\\\\"col-md-2\\\\\\\"><input type=\\\\\\\"number\\\\\\\" step=\\\\\\\"0.01\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"labour[<?=$i?>][rate]\\\\\\\" placeholder=\\\\\\\"Rate\\\\\\\" value=\\\\\\\"<?=htmlspecialchars((string)($l['rate'] ?? ''))?>\\\\\\\"></div>\\\",\\\"        <div class=\\\\\\\"col-md-2\\\\\\\"><input type=\\\\\\\"number\\\\\\\" step=\\\\\\\"0.01\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"labour[<?=$i?>][amount]\\\\\\\" placeholder=\\\\\\\"Amount\\\\\\\" value=\\\\\\\"<?=htmlspecialchars((string)($l['amount'] ?? ''))?>\\\\\\\"></div>\\\",\\\"        <div class=\\\\\\\"col-md-1\\\\\\\">\\\",\\\"          <select class=\\\\\\\"form-select\\\\\\\" name=\\\\\\\"labour[<?=$i?>][shift]\\\\\\\"><option value=\\\\\\\"\\\\\\\">-</option><option<?=($l['shift']??'')==='A'?' selected':''?>>A</option><option<?=($l['shift']??'')==='B'?' selected':''?>>B</option><option<?=($l['shift']??'')==='C'?' selected':''?>>C</option></select>\\\",\\\"        </div>\\\",\\\"        <div class=\\\\\\\"col-md-1 text-end\\\\\\\"><button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-outline-danger btn-sm\\\\\\\" onclick=\\\\\\\"this.closest('.row').remove()\\\\\\\">\\\\u00d7</button></div>\\\",\\\"      </div>\\\",\\\"    <?php endforeach; ?>\\\",\\\"  </div>\\\",\\\"  <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-sm btn-outline-secondary\\\\\\\" onclick=\\\\\\\"addLabour()\\\\\\\">+ Add Labour</button>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"col-12 text-end\\\\\\\">\\\",\\\"    <button class=\\\\\\\"btn btn-primary\\\\\\\"><?= $is_edit ? 'Save' : 'Create' ?></button>\\\",\\\"  </div>\\\",\\\"</form>\\\",\\\"\\\",\\\"<script>\\\",\\\"function addTask(){ const w=document.getElementById('tasksWrap'); const i=w.querySelectorAll('.row').length;\\\",\\\"  w.insertAdjacentHTML('beforeend', `<div class=\\\\\\\"row g-2 mb-2\\\\\\\">\\\",\\\"    <div class=\\\\\\\"col-md-8\\\\\\\"><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"tasks[${i}][task]\\\\\\\" placeholder=\\\\\\\"Task\\\\u2026\\\\\\\"></div>\\\",\\\"    <div class=\\\\\\\"col-md-3\\\\\\\"><select class=\\\\\\\"form-select\\\\\\\" name=\\\\\\\"tasks[${i}][status]\\\\\\\"><option value=\\\\\\\"pending\\\\\\\">Pending</option><option value=\\\\\\\"done\\\\\\\">Done</option></select></div>\\\",\\\"    <div class=\\\\\\\"col-md-1 text-end\\\\\\\"><button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-outline-danger btn-sm\\\\\\\" onclick=\\\\\\\"this.closest('.row').remove()\\\\\\\">\\\\u00d7</button></div>\\\",\\\"  </div>`); }\\\",\\\"function addPart(){ const w=document.getElementById('partsWrap'); const i=w.querySelectorAll('.row').length;\\\",\\\"  w.insertAdjacentHTML('beforeend', `<div class=\\\\\\\"row g-2 mb-2\\\\\\\">\\\",\\\"    <div class=\\\\\\\"col-md-5\\\\\\\"><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"parts[${i}][description]\\\\\\\" placeholder=\\\\\\\"Description\\\\\\\"></div>\\\",\\\"    <div class=\\\\\\\"col-md-2\\\\\\\"><input type=\\\\\\\"number\\\\\\\" step=\\\\\\\"0.001\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"parts[${i}][qty]\\\\\\\" placeholder=\\\\\\\"Qty\\\\\\\"></div>\\\",\\\"    <div class=\\\\\\\"col-md-2\\\\\\\"><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"parts[${i}][uom_id]\\\\\\\" placeholder=\\\\\\\"UOM ID\\\\\\\"></div>\\\",\\\"    <div class=\\\\\\\"col-md-1\\\\\\\"><input type=\\\\\\\"number\\\\\\\" step=\\\\\\\"0.01\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"parts[${i}][rate]\\\\\\\" placeholder=\\\\\\\"Rate\\\\\\\"></div>\\\",\\\"    <div class=\\\\\\\"col-md-1\\\\\\\"><input type=\\\\\\\"number\\\\\\\" step=\\\\\\\"0.01\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"parts[${i}][amount]\\\\\\\" placeholder=\\\\\\\"Amt\\\\\\\"></div>\\\",\\\"    <div class=\\\\\\\"col-md-1 text-end\\\\\\\"><button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-outline-danger btn-sm\\\\\\\" onclick=\\\\\\\"this.closest('.row').remove()\\\\\\\">\\\\u00d7</button></div>\\\",\\\"  </div>`); }\\\",\\\"function addLabour(){ const w=document.getElementById('labourWrap'); const i=w.querySelectorAll('.row').length;\\\",\\\"  const today = new Date().toISOString().slice(0,10);\\\",\\\"  w.insertAdjacentHTML('beforeend', `<div class=\\\\\\\"row g-2 mb-2\\\\\\\">\\\",\\\"    <div class=\\\\\\\"col-md-2\\\\\\\"><input type=\\\\\\\"date\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"labour[${i}][entry_date]\\\\\\\" value=\\\\\\\"${today}\\\\\\\"></div>\\\",\\\"    <div class=\\\\\\\"col-md-2\\\\\\\"><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"labour[${i}][role_name]\\\\\\\" placeholder=\\\\\\\"Role/vendor\\\\\\\"></div>\\\",\\\"    <div class=\\\\\\\"col-md-2\\\\\\\"><input type=\\\\\\\"number\\\\\\\" step=\\\\\\\"0.01\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"labour[${i}][hours]\\\\\\\" placeholder=\\\\\\\"Hours\\\\\\\"></div>\\\",\\\"    <div class=\\\\\\\"col-md-2\\\\\\\"><input type=\\\\\\\"number\\\\\\\" step=\\\\\\\"0.01\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"labour[${i}][rate]\\\\\\\" placeholder=\\\\\\\"Rate\\\\\\\"></div>\\\",\\\"    <div class=\\\\\\\"col-md-2\\\\\\\"><input type=\\\\\\\"number\\\\\\\" step=\\\\\\\"0.01\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"labour[${i}][amount]\\\\\\\" placeholder=\\\\\\\"Amount\\\\\\\"></div>\\\",\\\"    <div class=\\\\\\\"col-md-1\\\\\\\"><select class=\\\\\\\"form-select\\\\\\\" name=\\\\\\\"labour[${i}][shift]\\\\\\\"><option value=\\\\\\\"\\\\\\\">-</option><option>A</option><option>B</option><option>C</option></select></div>\\\",\\\"    <div class=\\\\\\\"col-md-1 text-end\\\\\\\"><button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-outline-danger btn-sm\\\\\\\" onclick=\\\\\\\"this.closest('.row').remove()\\\\\\\">\\\\u00d7</button></div>\\\",\\\"  </div>`); }\\\",\\\"</script>\\\",\\\"<?php include __DIR__ . '/../ui/layout_end.php';\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/x_machine_type.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/maintenance/x_machine_type.php */\\\",\\\"declare(strict_types=1);\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_login();\\\",\\\"require_permission('machines.manage');\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"$machine_id = (int)($_GET['machine_id'] ?? 0);\\\",\\\"if(!$machine_id){ echo json_encode(['ok'=>false,'msg'=>'machine_id required']); exit; }\\\",\\\"\\\",\\\"$st = $pdo->prepare(\\\\\\\"SELECT type_id FROM machines WHERE id=?\\\\\\\");\\\",\\\"$st->execute([$machine_id]); // FK exists (machines\\\\u2192machine_types). :contentReference[oaicite:8]{index=8}\\\",\\\"$type_id = $st->fetchColumn();\\\",\\\"\\\",\\\"header('Content-Type: application/json');\\\",\\\"echo json_encode(['ok'=>(bool)$type_id,'type_id'=>(int)$type_id]);\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/programs_form.php\\\": [\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"/** PATH: /public_html/maintenance/programs_form.php */\\\",\\\"$ROOT = dirname(__DIR__);\\\",\\\"require_once $ROOT . '/includes/auth.php';\\\",\\\"require_once $ROOT . '/includes/db.php';\\\",\\\"require_once $ROOT . '/includes/rbac.php';\\\",\\\"require_once $ROOT . '/includes/csrf.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"// If you already have a 'maintenance.manage' permission, switch to that:\\\",\\\"require_permission('machines.manage');\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"\\\",\\\"$id = (int)($_GET['id'] ?? 0);\\\",\\\"$machine_id = (int)($_GET['machine_id'] ?? 0);\\\",\\\"$editing = $id > 0;\\\",\\\"\\\",\\\"$row = [\\\",\\\"  'machine_id'   => $machine_id ?: 0,\\\",\\\"  'anchor_date'  => null,\\\",\\\"  'default_team' => null,\\\",\\\"  'notes'        => null,\\\",\\\"];\\\",\\\"\\\",\\\"// Load program when editing\\\",\\\"if ($editing) {\\\",\\\"  $st = $pdo->prepare(\\\\\\\"SELECT * FROM maintenance_programs WHERE id = ?\\\\\\\");\\\",\\\"  $st->execute([$id]);\\\",\\\"  if ($db = $st->fetch(PDO::FETCH_ASSOC)) {\\\",\\\"    $row = array_merge($row, $db);\\\",\\\"  } else {\\\",\\\"    http_response_code(404);\\\",\\\"    exit('Program not found');\\\",\\\"  }\\\",\\\"}\\\",\\\"\\\",\\\"// Machines for dropdown\\\",\\\"$machines = $pdo->query(\\\\\\\"SELECT id, CONCAT(machine_id,' - ',name) AS label FROM machines ORDER BY machine_id\\\\\\\")->fetchAll(PDO::FETCH_KEY_PAIR);\\\",\\\"\\\",\\\"$errors = [];\\\",\\\"$okMsg  = '';\\\",\\\"\\\",\\\"if ($_SERVER['REQUEST_METHOD'] === 'POST') {\\\",\\\"  csrf_require_token();\\\",\\\"  $row['machine_id']   = (int)($_POST['machine_id'] ?? 0);\\\",\\\"  $row['anchor_date']  = $_POST['anchor_date'] ?? null;\\\",\\\"  $row['default_team'] = trim((string)($_POST['default_team'] ?? '')) ?: null;\\\",\\\"  $row['notes']        = trim((string)($_POST['notes'] ?? '')) ?: null;\\\",\\\"\\\",\\\"  if ($row['machine_id'] <= 0) $errors[] = 'Machine is required.';\\\",\\\"\\\",\\\"  // Enforce one program per machine (schema has UNIQUE uq_mp_machine)\\\",\\\"  if (!$errors) {\\\",\\\"    $u = $pdo->prepare(\\\\\\\"SELECT id FROM maintenance_programs WHERE machine_id = ? \\\\\\\" . ($editing ? \\\\\\\"AND id <> ?\\\\\\\" : \\\\\\\"\\\\\\\"));\\\",\\\"    $u->execute($editing ? [$row['machine_id'], $id] : [$row['machine_id']]);\\\",\\\"    if ($u->fetch()) $errors[] = 'This machine already has a maintenance program.';\\\",\\\"  }\\\",\\\"\\\",\\\"  if (!$errors) {\\\",\\\"    try {\\\",\\\"      if ($editing) {\\\",\\\"        $sql = \\\\\\\"UPDATE maintenance_programs\\\",\\\"                   SET machine_id=?, anchor_date=?, default_team=?, notes=?, updated_at=NOW()\\\",\\\"                 WHERE id=?\\\\\\\";\\\",\\\"        $pdo->prepare($sql)->execute([\\\",\\\"          $row['machine_id'], $row['anchor_date'], $row['default_team'], $row['notes'], $id\\\",\\\"        ]);\\\",\\\"        $okMsg = 'Program updated.';\\\",\\\"      } else {\\\",\\\"        $sql = \\\\\\\"INSERT INTO maintenance_programs\\\",\\\"                  (machine_id, anchor_date, default_team, notes, created_at, updated_at)\\\",\\\"                VALUES (?,?,?,?,NOW(),NOW())\\\\\\\";\\\",\\\"        $pdo->prepare($sql)->execute([\\\",\\\"          $row['machine_id'], $row['anchor_date'], $row['default_team'], $row['notes']\\\",\\\"        ]);\\\",\\\"        $id = (int)$pdo->lastInsertId();\\\",\\\"        $editing = true;\\\",\\\"        $okMsg = 'Program created.';\\\",\\\"      }\\\",\\\"      // After save, stay on the same page so you can add intervals\\\",\\\"      header(\\\\\\\"Location: programs_form.php?id=\\\\\\\".$id.\\\\\\\"&ok=1\\\\\\\");\\\",\\\"      exit;\\\",\\\"    } catch (Throwable $e) {\\\",\\\"      $errors[] = 'Save failed: '.$e->getMessage();\\\",\\\"    }\\\",\\\"  }\\\",\\\"}\\\",\\\"\\\",\\\"// UI\\\",\\\"$PAGE_TITLE = $editing ? 'Edit Maintenance Program' : 'Add Maintenance Program';\\\",\\\"include $ROOT . '/ui/layout_start.php';\\\",\\\"?>\\\",\\\"<div class=\\\\\\\"d-flex justify-content-between align-items-center mb-3\\\\\\\">\\\",\\\"  <h1 class=\\\\\\\"h5 mb-0\\\\\\\"><?= htmlspecialchars($PAGE_TITLE) ?></h1>\\\",\\\"  <div class=\\\\\\\"d-flex gap-2\\\\\\\">\\\",\\\"    <?php if ($editing): ?>\\\",\\\"      <a class=\\\\\\\"btn btn-outline-primary btn-sm\\\\\\\" href=\\\\\\\"/maintenance/intervals_list.php?program_id=<?= (int)$id ?>\\\\\\\">+ Manage Intervals</a>\\\",\\\"    <?php endif; ?>\\\",\\\"    <a class=\\\\\\\"btn btn-light btn-sm\\\\\\\" href=\\\\\\\"/maintenance/programs_list.php\\\\\\\">Back</a>\\\",\\\"  </div>\\\",\\\"</div>\\\",\\\"\\\",\\\"<?php if (!empty($_GET['ok']) && !$errors): ?>\\\",\\\"  <div class=\\\\\\\"alert alert-success\\\\\\\">Saved successfully.</div>\\\",\\\"<?php endif; ?>\\\",\\\"\\\",\\\"<?php if ($errors): ?>\\\",\\\"  <div class=\\\\\\\"alert alert-danger\\\\\\\">\\\",\\\"    <ul class=\\\\\\\"mb-0\\\\\\\"><?php foreach ($errors as $e): ?><li><?= htmlspecialchars($e) ?></li><?php endforeach; ?></ul>\\\",\\\"  </div>\\\",\\\"<?php endif; ?>\\\",\\\"\\\",\\\"<form method=\\\\\\\"post\\\\\\\" class=\\\\\\\"row g-3\\\\\\\">\\\",\\\"  <?= csrf_hidden_input() ?>\\\",\\\"  <div class=\\\\\\\"col-md-6\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Machine</label>\\\",\\\"    <select name=\\\\\\\"machine_id\\\\\\\" class=\\\\\\\"form-select\\\\\\\" required>\\\",\\\"      <option value=\\\\\\\"\\\\\\\">-- choose --</option>\\\",\\\"      <?php foreach ($machines as $mid => $label): ?>\\\",\\\"        <option value=\\\\\\\"<?= (int)$mid ?>\\\\\\\" <?= ((int)$row['machine_id']===(int)$mid)?'selected':'' ?>>\\\",\\\"          <?= htmlspecialchars($label) ?>\\\",\\\"        </option>\\\",\\\"      <?php endforeach; ?>\\\",\\\"    </select>\\\",\\\"    <div class=\\\\\\\"form-text\\\\\\\">One program per machine (enforced by DB unique key).</div>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Anchor Date</label>\\\",\\\"    <input type=\\\\\\\"date\\\\\\\" name=\\\\\\\"anchor_date\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= htmlspecialchars((string)($row['anchor_date'] ?? '')) ?>\\\\\\\">\\\",\\\"    <div class=\\\\\\\"form-text\\\\\\\">Used as base for interval scheduling.</div>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Default Team</label>\\\",\\\"    <input name=\\\\\\\"default_team\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= htmlspecialchars((string)($row['default_team'] ?? '')) ?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"col-12\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Notes</label>\\\",\\\"    <textarea name=\\\\\\\"notes\\\\\\\" class=\\\\\\\"form-control\\\\\\\" rows=\\\\\\\"2\\\\\\\"><?= htmlspecialchars((string)($row['notes'] ?? '')) ?></textarea>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"col-12 d-flex gap-2\\\\\\\">\\\",\\\"    <button class=\\\\\\\"btn btn-primary\\\\\\\">Save</button>\\\",\\\"    <?php if ($editing): ?>\\\",\\\"      <a class=\\\\\\\"btn btn-outline-secondary\\\\\\\" href=\\\\\\\"/maintenance/intervals_list.php?program_id=<?= (int)$id ?>\\\\\\\">Manage Intervals</a>\\\",\\\"    <?php endif; ?>\\\",\\\"  </div>\\\",\\\"</form>\\\",\\\"\\\",\\\"<?php include $ROOT . '/ui/layout_end.php';\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/intervals_form.php\\\": [\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"/** PATH: /public_html/maintenance/intervals_form.php */\\\",\\\"$ROOT = dirname(__DIR__);\\\",\\\"require_once $ROOT . '/includes/auth.php';\\\",\\\"require_once $ROOT . '/includes/db.php';\\\",\\\"require_once $ROOT . '/includes/rbac.php';\\\",\\\"require_once $ROOT . '/includes/csrf.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('maintenance.manage');\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"\\\",\\\"$program_id = (int)($_GET['program_id'] ?? 0);\\\",\\\"$id         = (int)($_GET['id'] ?? 0);\\\",\\\"$editing    = $id > 0;\\\",\\\"\\\",\\\"// Fallback: if program_id missing but id is present, look it up\\\",\\\"if ($program_id <= 0 && $editing) {\\\",\\\"  $st = $pdo->prepare(\\\\\\\"SELECT program_id FROM maintenance_intervals WHERE id = ?\\\\\\\");\\\",\\\"  $st->execute([$id]);\\\",\\\"  $program_id = (int)$st->fetchColumn();\\\",\\\"}\\\",\\\"\\\",\\\"// Still missing? hard-stop with a clear message\\\",\\\"if ($program_id <= 0) { http_response_code(400); exit('program_id required'); }\\\",\\\"// load program header (for context/breadcrumb) \\\\u2014 NOTE: no p.title in schema\\\",\\\"$ph = $pdo->prepare(\\\\\\\"\\\",\\\"  SELECT p.id, p.machine_id AS machine_fk, m.machine_id, m.name AS machine_name\\\",\\\"  FROM maintenance_programs p\\\",\\\"  LEFT JOIN machines m ON m.id = p.machine_id\\\",\\\"  WHERE p.id = ?\\\",\\\"\\\\\\\");\\\",\\\"$ph->execute([$program_id]);\\\",\\\"$program = $ph->fetch(PDO::FETCH_ASSOC);\\\",\\\"if (!$program) { http_response_code(404); exit('Program not found'); }\\\",\\\"\\\",\\\"// dropdown: maintenance types\\\",\\\"$mtypes = $pdo->query(\\\\\\\"SELECT id, name FROM maintenance_types ORDER BY name\\\\\\\")->fetchAll(PDO::FETCH_KEY_PAIR);\\\",\\\"\\\",\\\"// default row\\\",\\\"$row = [\\\",\\\"  'program_id'           => $program_id,\\\",\\\"  'maintenance_type_id'  => null,\\\",\\\"  'title'                => '',\\\",\\\"  'frequency'            => 'monthly',     // enum in your DB: daily/weekly/monthly/quarterly/semiannual/annual/custom_days\\\",\\\"  'interval_count'       => 1,\\\",\\\"  'custom_days'          => null,\\\",\\\"  'notify_before_days'   => null,\\\",\\\"  'grace_days'           => null,\\\",\\\"  'requires_shutdown'    => 0,\\\",\\\"  'priority'             => 0,\\\",\\\"  'active'               => 1,\\\",\\\"  'last_completed_on'    => null,\\\",\\\"  'next_due_date'        => null,\\\",\\\"];\\\",\\\"\\\",\\\"// load existing when editing\\\",\\\"if ($editing) {\\\",\\\"  $st = $pdo->prepare(\\\\\\\"SELECT * FROM maintenance_intervals WHERE id=? AND program_id=?\\\\\\\");\\\",\\\"  $st->execute([$id,$program_id]);\\\",\\\"  $db = $st->fetch(PDO::FETCH_ASSOC);\\\",\\\"  if (!$db) { http_response_code(404); exit('Interval not found'); }\\\",\\\"  $row = array_merge($row, $db);\\\",\\\"}\\\",\\\"\\\",\\\"$errors = [];\\\",\\\"if ($_SERVER['REQUEST_METHOD'] === 'POST') {\\\",\\\"  csrf_require_token();\\\",\\\"  $row['program_id']          = $program_id; // lock to current program\\\",\\\"  $row['maintenance_type_id'] = (int)($_POST['maintenance_type_id'] ?? 0) ?: null;\\\",\\\"  $row['title']               = trim((string)($_POST['title'] ?? '')) ?: null;\\\",\\\"  $row['frequency']           = (string)($_POST['frequency'] ?? 'monthly');\\\",\\\"  $row['interval_count']      = (int)($_POST['interval_count'] ?? 1);\\\",\\\"  $row['custom_days']         = ($_POST['custom_days'] === '' ? null : (int)$_POST['custom_days']);\\\",\\\"  $row['notify_before_days']  = ($_POST['notify_before_days'] === '' ? null : (int)$_POST['notify_before_days']);\\\",\\\"  $row['grace_days']          = ($_POST['grace_days'] === '' ? null : (int)$_POST['grace_days']);\\\",\\\"  $row['requires_shutdown']   = isset($_POST['requires_shutdown']) ? 1 : 0;\\\",\\\"  $row['priority']            = (int)($_POST['priority'] ?? 0);\\\",\\\"  $row['active']              = isset($_POST['active']) ? 1 : 0;\\\",\\\"  $row['last_completed_on']   = $_POST['last_completed_on'] ?: null;\\\",\\\"  $row['next_due_date']       = $_POST['next_due_date'] ?: null;\\\",\\\"\\\",\\\"  if (!$row['maintenance_type_id']) $errors[] = 'Maintenance Type is required.';\\\",\\\"  if (!$row['title'])               $errors[] = 'Title is required.';\\\",\\\"  if (!in_array($row['frequency'], ['daily','weekly','monthly','quarterly','semiannual','annual','custom_days'], true))\\\",\\\"    $errors[] = 'Invalid frequency.';\\\",\\\"  if ($row['interval_count'] <= 0) $errors[] = 'Interval count must be positive.';\\\",\\\"  if ($row['frequency'] === 'custom_days' && !$row['custom_days'])\\\",\\\"    $errors[] = 'Custom days required for frequency = custom_days.';\\\",\\\"\\\",\\\"  if (!$errors) {\\\",\\\"    try {\\\",\\\"      if ($editing) {\\\",\\\"        $sql = \\\\\\\"UPDATE maintenance_intervals SET\\\",\\\"                  maintenance_type_id=?, title=?, frequency=?, interval_count=?, custom_days=?,\\\",\\\"                  notify_before_days=?, grace_days=?, requires_shutdown=?, priority=?, active=?,\\\",\\\"                  last_completed_on=?, next_due_date=?\\\",\\\"                WHERE id=? AND program_id=?\\\\\\\";\\\",\\\"        $pdo->prepare($sql)->execute([\\\",\\\"          $row['maintenance_type_id'], $row['title'], $row['frequency'], $row['interval_count'], $row['custom_days'],\\\",\\\"          $row['notify_before_days'], $row['grace_days'], $row['requires_shutdown'], $row['priority'], $row['active'],\\\",\\\"          $row['last_completed_on'], $row['next_due_date'], $id, $program_id\\\",\\\"        ]);\\\",\\\"      } else {\\\",\\\"        $sql = \\\\\\\"INSERT INTO maintenance_intervals\\\",\\\"                  (program_id, maintenance_type_id, title, frequency, interval_count, custom_days,\\\",\\\"                   notify_before_days, grace_days, requires_shutdown, priority, active,\\\",\\\"                   last_completed_on, next_due_date)\\\",\\\"                VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)\\\\\\\";\\\",\\\"        $pdo->prepare($sql)->execute([\\\",\\\"          $program_id, $row['maintenance_type_id'], $row['title'], $row['frequency'], $row['interval_count'], $row['custom_days'],\\\",\\\"          $row['notify_before_days'], $row['grace_days'], $row['requires_shutdown'], $row['priority'], $row['active'],\\\",\\\"          $row['last_completed_on'], $row['next_due_date']\\\",\\\"        ]);\\\",\\\"        $id = (int)$pdo->lastInsertId();\\\",\\\"      }\\\",\\\"      header(\\\\\\\"Location: /maintenance/intervals_list.php?program_id=\\\\\\\".$program_id);\\\",\\\"      exit;\\\",\\\"    } catch (Throwable $e) {\\\",\\\"      $errors[] = 'Save failed: '.$e->getMessage();\\\",\\\"    }\\\",\\\"  }\\\",\\\"}\\\",\\\"\\\",\\\"// UI\\\",\\\"$UI = $ROOT.'/ui';\\\",\\\"$PAGE_TITLE = $editing ? 'Edit Interval' : 'Add Interval';\\\",\\\"require_once $UI.'/init.php';\\\",\\\"require_once $UI.'/layout_start.php';\\\",\\\"?>\\\",\\\"<div class=\\\\\\\"d-flex justify-content-between align-items-center mb-3\\\\\\\">\\\",\\\"  <div>\\\",\\\"    <h1 class=\\\\\\\"h5 mb-0\\\\\\\"><?= htmlspecialchars($PAGE_TITLE) ?></h1>\\\",\\\"    <div class=\\\\\\\"small text-muted\\\\\\\">\\\",\\\"      Program #<?= (int)$program['id'] ?> \\\\u00b7 Machine:\\\",\\\"      <strong><?= htmlspecialchars(($program['machine_id'] ?? '') . ($program['machine_name'] ? ' \\\\u2014 '.$program['machine_name'] : '')) ?></strong>\\\",\\\"    </div>\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"d-flex gap-2\\\\\\\">\\\",\\\"    <a class=\\\\\\\"btn btn-light btn-sm\\\\\\\" href=\\\\\\\"/maintenance/intervals_list.php?program_id=<?= (int)$program_id ?>\\\\\\\">Back</a>\\\",\\\"  </div>\\\",\\\"</div>\\\",\\\"\\\",\\\"<?php if ($errors): ?>\\\",\\\"  <div class=\\\\\\\"alert alert-danger\\\\\\\"><ul class=\\\\\\\"mb-0\\\\\\\"><?php foreach ($errors as $e): ?><li><?= htmlspecialchars($e) ?></li><?php endforeach; ?></ul></div>\\\",\\\"<?php endif; ?>\\\",\\\"\\\",\\\"<form method=\\\\\\\"post\\\\\\\" class=\\\\\\\"row g-3\\\\\\\">\\\",\\\"  <?= csrf_hidden_input() ?>\\\",\\\"  <div class=\\\\\\\"col-md-6\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Interval Title</label>\\\",\\\"    <input name=\\\\\\\"title\\\\\\\" class=\\\\\\\"form-control\\\\\\\" required value=\\\\\\\"<?= htmlspecialchars((string)($row['title'] ?? '')) ?>\\\\\\\" placeholder=\\\\\\\"e.g., Weekly Inspection\\\\\\\">\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"col-md-6\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Maintenance Type</label>\\\",\\\"    <select name=\\\\\\\"maintenance_type_id\\\\\\\" class=\\\\\\\"form-select\\\\\\\" required>\\\",\\\"      <option value=\\\\\\\"\\\\\\\">\\\\u2014 choose \\\\u2014</option>\\\",\\\"      <?php foreach ($mtypes as $tid => $name): ?>\\\",\\\"        <option value=\\\\\\\"<?= (int)$tid ?>\\\\\\\" <?= ((int)($row['maintenance_type_id'] ?? 0) === (int)$tid ? 'selected' : '') ?>>\\\",\\\"          <?= htmlspecialchars($name) ?>\\\",\\\"        </option>\\\",\\\"      <?php endforeach; ?>\\\",\\\"    </select>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"col-md-6\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Frequency</label>\\\",\\\"    <div class=\\\\\\\"input-group\\\\\\\">\\\",\\\"      <select name=\\\\\\\"frequency\\\\\\\" id=\\\\\\\"frequency\\\\\\\" class=\\\\\\\"form-select\\\\\\\">\\\",\\\"        <?php foreach (['daily','weekly','monthly','quarterly','semiannual','annual','custom_days'] as $f): ?>\\\",\\\"          <option value=\\\\\\\"<?=$f?>\\\\\\\" <?= (($row['frequency'] ?? '')===$f?'selected':'') ?>><?= ucwords(str_replace('_',' ',$f)) ?></option>\\\",\\\"        <?php endforeach; ?>\\\",\\\"      </select>\\\",\\\"      <input type=\\\\\\\"number\\\\\\\" min=\\\\\\\"1\\\\\\\" name=\\\\\\\"interval_count\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= (int)($row['interval_count'] ?? 1) ?>\\\\\\\">\\\",\\\"      <span class=\\\\\\\"input-group-text\\\\\\\">count</span>\\\",\\\"    </div>\\\",\\\"    <div class=\\\\\\\"form-text\\\\\\\">For \\\\u201ccustom days\\\\u201d, also set Custom Days below.</div>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"col-md-2\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Custom Days</label>\\\",\\\"    <input type=\\\\\\\"number\\\\\\\" min=\\\\\\\"1\\\\\\\" name=\\\\\\\"custom_days\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= htmlspecialchars((string)($row['custom_days'] ?? '')) ?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-2\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Notify Before (days)</label>\\\",\\\"    <input type=\\\\\\\"number\\\\\\\" min=\\\\\\\"0\\\\\\\" name=\\\\\\\"notify_before_days\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= htmlspecialchars((string)($row['notify_before_days'] ?? '')) ?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-2\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Grace Days</label>\\\",\\\"    <input type=\\\\\\\"number\\\\\\\" min=\\\\\\\"0\\\\\\\" name=\\\\\\\"grace_days\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= htmlspecialchars((string)($row['grace_days'] ?? '')) ?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Priority</label>\\\",\\\"    <input type=\\\\\\\"number\\\\\\\" name=\\\\\\\"priority\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= (int)($row['priority'] ?? 0) ?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label d-block\\\\\\\">Requires Shutdown</label>\\\",\\\"    <input class=\\\\\\\"form-check-input\\\\\\\" type=\\\\\\\"checkbox\\\\\\\" name=\\\\\\\"requires_shutdown\\\\\\\" <?= !empty($row['requires_shutdown'])?'checked':'' ?>>\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label d-block\\\\\\\">Active</label>\\\",\\\"    <input class=\\\\\\\"form-check-input\\\\\\\" type=\\\\\\\"checkbox\\\\\\\" name=\\\\\\\"active\\\\\\\" <?= !empty($row['active'])?'checked':'' ?>>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Next Due Date</label>\\\",\\\"    <input type=\\\\\\\"date\\\\\\\" name=\\\\\\\"next_due_date\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= htmlspecialchars((string)($row['next_due_date'] ?? '')) ?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Last Completed On</label>\\\",\\\"    <input type=\\\\\\\"date\\\\\\\" name=\\\\\\\"last_completed_on\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= htmlspecialchars((string)($row['last_completed_on'] ?? '')) ?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"col-12 d-flex gap-2\\\\\\\">\\\",\\\"    <button class=\\\\\\\"btn btn-primary\\\\\\\">Save</button>\\\",\\\"    <?php if ($editing): ?>\\\",\\\"      <a class=\\\\\\\"btn btn-outline-danger\\\\\\\" href=\\\\\\\"?program_id=<?= (int)$program_id ?>&id=<?= (int)$id ?>&delete=1\\\\\\\" onclick=\\\\\\\"return confirm('Delete this interval?')\\\\\\\">Delete</a>\\\",\\\"    <?php endif; ?>\\\",\\\"  </div>\\\",\\\"</form>\\\",\\\"\\\",\\\"<script>\\\",\\\"(function(){\\\",\\\"  function toggleCustom(){\\\",\\\"    var f = document.getElementById('frequency').value;\\\",\\\"    var cd = document.querySelector('input[name=\\\\\\\"custom_days\\\\\\\"]');\\\",\\\"    cd.disabled = (f !== 'custom_days');\\\",\\\"  }\\\",\\\"  document.getElementById('frequency').addEventListener('change', toggleCustom);\\\",\\\"  toggleCustom();\\\",\\\"})();\\\",\\\"</script>\\\",\\\"\\\",\\\"<?php require_once $UI.'/layout_end.php'; ?>\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_list.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/maintenance/wo_list.php */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('maintenance.wo.view');\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"$pdo->exec(\\\\\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\\\\\");\\\",\\\"\\\",\\\"$machine_id = (int)($_GET['machine_id'] ?? 0);\\\",\\\"$status     = (string)($_GET['status'] ?? '');\\\",\\\"$q          = trim((string)($_GET['q'] ?? ''));\\\",\\\"\\\",\\\"// filters\\\",\\\"$machines = $pdo->query(\\\\\\\"SELECT id, CONCAT(machine_id,' - ',name) AS label FROM machines ORDER BY machine_id\\\\\\\")->fetchAll(PDO::FETCH_KEY_PAIR);\\\",\\\"\\\",\\\"$where = [];\\\",\\\"$params = [];\\\",\\\"if ($machine_id) { $where[] = \\\\\\\"wo.machine_id = ?\\\\\\\"; $params[] = $machine_id; }\\\",\\\"if ($status !== '') { $where[] = \\\\\\\"wo.status = CAST(? AS CHAR) COLLATE utf8mb4_general_ci\\\\\\\"; $params[] = $status; }\\\",\\\"if ($q !== '') {\\\",\\\"  $where[] = \\\\\\\"(wo.wo_code LIKE CONCAT('%', ?, '%') OR wo.title LIKE CONCAT('%', ?, '%') OR m.machine_id LIKE CONCAT('%', ?, '%'))\\\\\\\";\\\",\\\"  array_push($params, $q, $q, $q);\\\",\\\"}\\\",\\\"\\\",\\\"$sql = \\\\\\\"SELECT wo.*, m.machine_id, m.name AS machine_name\\\",\\\"        FROM maintenance_work_orders wo\\\",\\\"        JOIN machines m ON m.id = wo.machine_id\\\",\\\"        \\\\\\\" . ($where ? \\\\\\\"WHERE \\\\\\\".implode(\\\\\\\" AND \\\\\\\", $where) : \\\\\\\"\\\\\\\") . \\\\\\\"\\\",\\\"        ORDER BY wo.created_at DESC LIMIT 200\\\\\\\";\\\",\\\"$st = $pdo->prepare($sql); $st->execute($params); $rows = $st->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"// ui\\\",\\\"$PAGE_TITLE = 'Work Orders';\\\",\\\"$ACTIVE_MENU = 'machines.list';\\\",\\\"include __DIR__ . '/../ui/layout_start.php';\\\",\\\"?>\\\",\\\"<div class=\\\\\\\"d-flex align-items-center justify-content-between mb-3\\\\\\\">\\\",\\\"  <h1 class=\\\\\\\"h5 mb-0\\\\\\\">Work Orders</h1>\\\",\\\"  <div class=\\\\\\\"d-flex gap-2\\\\\\\">\\\",\\\"    <?php if ($machine_id): ?>\\\",\\\"      <a class=\\\\\\\"btn btn-outline-secondary btn-sm\\\\\\\" href=\\\\\\\"/machines/machines_list.php?id=<?=$machine_id?>\\\\\\\">Back to Machine</a>\\\",\\\"    <?php endif; ?>\\\",\\\"    <?php if (has_permission('maintenance.wo.manage')): ?>\\\",\\\"      <a class=\\\\\\\"btn btn-primary btn-sm\\\\\\\" href=\\\\\\\"/maintenance/wo_form.php?machine_id=<?=$machine_id?>\\\\\\\">+ Work Order</a>\\\",\\\"    <?php endif; ?>\\\",\\\"  </div>\\\",\\\"</div>\\\",\\\"\\\",\\\"<form class=\\\\\\\"row g-2 mb-3\\\\\\\">\\\",\\\"  <div class=\\\\\\\"col-md-4\\\\\\\">\\\",\\\"    <select name=\\\\\\\"machine_id\\\\\\\" class=\\\\\\\"form-select\\\\\\\">\\\",\\\"      <option value=\\\\\\\"0\\\\\\\">\\\\u2014 All machines \\\\u2014</option>\\\",\\\"      <?php foreach ($machines as $id=>$label): ?>\\\",\\\"        <option value=\\\\\\\"<?=$id?>\\\\\\\" <?= $machine_id===$id?'selected':'' ?>><?=htmlspecialchars($label)?></option>\\\",\\\"      <?php endforeach; ?>\\\",\\\"    </select>\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"    <select name=\\\\\\\"status\\\\\\\" class=\\\\\\\"form-select\\\\\\\">\\\",\\\"      <?php foreach (['','open','in_progress','waiting_parts','completed','cancelled'] as $s): ?>\\\",\\\"        <option value=\\\\\\\"<?=$s?>\\\\\\\" <?= $status===$s?'selected':'' ?>><?= $s===''?'\\\\u2014 Any status \\\\u2014':ucwords(str_replace('_',' ',$s)) ?></option>\\\",\\\"      <?php endforeach; ?>\\\",\\\"    </select>\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"    <input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"q\\\\\\\" placeholder=\\\\\\\"WO code / title / machine\\\\u2026\\\\\\\" value=\\\\\\\"<?=htmlspecialchars($q)?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-2\\\\\\\">\\\",\\\"    <button class=\\\\\\\"btn btn-outline-secondary w-100\\\\\\\">Search</button>\\\",\\\"  </div>\\\",\\\"</form>\\\",\\\"\\\",\\\"<div class=\\\\\\\"table-responsive\\\\\\\">\\\",\\\"  <table class=\\\\\\\"table table-striped table-hover align-middle\\\\\\\">\\\",\\\"    <thead class=\\\\\\\"table-light\\\\\\\">\\\",\\\"      <tr>\\\",\\\"        <th>WO Code</th><th>Machine</th><th>Title</th><th>Type</th><th>Priority</th><th>Status</th><th>Due</th><th class=\\\\\\\"text-end\\\\\\\">Total \\\\u20b9</th><th style=\\\\\\\"width:120px;\\\\\\\"></th>\\\",\\\"      </tr>\\\",\\\"    </thead>\\\",\\\"    <tbody>\\\",\\\"    <?php foreach ($rows as $r): ?>\\\",\\\"      <tr>\\\",\\\"        <td><code><?=htmlspecialchars((string)$r['wo_code'])?></code></td>\\\",\\\"        <td><?=htmlspecialchars((string)$r['machine_id'].' \\\\u2014 '.$r['machine_name'])?></td>\\\",\\\"        <td><?=htmlspecialchars((string)$r['title'])?></td>\\\",\\\"        <td><?= (int)$r['maintenance_type_id'] ?: '\\\\u2014' ?></td>\\\",\\\"        <td><span class=\\\\\\\"badge bg-secondary\\\\\\\"><?=htmlspecialchars((string)$r['priority'])?></span></td>\\\",\\\"        <td><span class=\\\\\\\"badge bg-<?= $r['status']==='completed'?'success':($r['status']==='open'?'warning text-dark':'secondary') ?>\\\\\\\"><?=htmlspecialchars((string)$r['status'])?></span></td>\\\",\\\"        <td><?=htmlspecialchars((string)$r['due_date'] ?? '')?></td>\\\",\\\"        <td class=\\\\\\\"text-end\\\\\\\"><?= number_format((float)$r['total_cost'], 2) ?></td>\\\",\\\"        <td class=\\\\\\\"text-end\\\\\\\">\\\",\\\"          <a class=\\\\\\\"btn btn-sm btn-outline-primary\\\\\\\" href=\\\\\\\"/maintenance/wo_form.php?id=<?=$r['id']?>\\\\\\\">Open</a>\\\",\\\"        </td>\\\",\\\"      </tr>\\\",\\\"    <?php endforeach; if (!$rows): ?>\\\",\\\"      <tr><td colspan=\\\\\\\"9\\\\\\\" class=\\\\\\\"text-muted text-center py-4\\\\\\\">No work orders.</td></tr>\\\",\\\"    <?php endif; ?>\\\",\\\"    </tbody>\\\",\\\"  </table>\\\",\\\"</div>\\\",\\\"\\\",\\\"<?php include __DIR__ . '/../ui/layout_end.php';\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/programs_list.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/maintenance/programs_list.php */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"require_once __DIR__ . '/../includes/machines_helpers.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('maintenance.plan.view');\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"$pdo->exec(\\\\\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\\\\\");\\\",\\\"\\\",\\\"$machine_id = (int)($_GET['machine_id'] ?? 0);\\\",\\\"$q = trim((string)($_GET['q'] ?? ''));\\\",\\\"\\\",\\\"// machine (header)\\\",\\\"$machine = null;\\\",\\\"if ($machine_id) {\\\",\\\"  $st = $pdo->prepare(\\\\\\\"SELECT id, machine_id, name, make, model FROM machines WHERE id=?\\\\\\\");\\\",\\\"  $st->execute([$machine_id]);\\\",\\\"  $machine = $st->fetch(PDO::FETCH_ASSOC);\\\",\\\"}\\\",\\\"$holder = $machine ? machine_current_holder($pdo, (int)$machine['id']) : null;\\\",\\\"\\\",\\\"// list programs\\\",\\\"$where = []; $params = [];\\\",\\\"if ($machine_id) { $where[]=\\\\\\\"p.machine_id=?\\\\\\\"; $params[]=$machine_id; }\\\",\\\"if ($q!=='') { $where[]=\\\\\\\"(p.notes LIKE CONCAT('%', ?, '%') OR COALESCE(p.default_team,'') LIKE CONCAT('%', ?, '%'))\\\\\\\"; array_push($params,$q,$q); }\\\",\\\"$sql = \\\\\\\"SELECT p.*, (SELECT COUNT(*) FROM maintenance_intervals mi WHERE mi.program_id=p.id AND mi.active=1) as intervals_count\\\",\\\"        FROM maintenance_programs p \\\\\\\".($where?\\\\\\\"WHERE \\\\\\\".implode(\\\\\\\" AND \\\\\\\",$where):\\\\\\\"\\\\\\\").\\\\\\\" ORDER BY p.id DESC\\\\\\\";\\\",\\\"$rows = $pdo->prepare($sql); $rows->execute($params); $rows = $rows->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"$PAGE_TITLE = 'Maintenance Programs';\\\",\\\"$ACTIVE_MENU = 'machines.list';\\\",\\\"include __DIR__ . '/../ui/layout_start.php';\\\",\\\"?>\\\",\\\"<div class=\\\\\\\"d-flex align-items-center justify-content-between mb-3\\\\\\\">\\\",\\\"  <div>\\\",\\\"    <h1 class=\\\\\\\"h5 mb-0\\\\\\\">Maintenance Programs</h1>\\\",\\\"    <?php if ($machine): ?>\\\",\\\"      <div class=\\\\\\\"text-muted small\\\\\\\">Machine: <strong><?=htmlspecialchars((string)$machine['machine_id'])?></strong> \\\\u2014 <?=htmlspecialchars((string)$machine['name'])?> (<?=htmlspecialchars((string)$machine['make'].' '.$machine['model'])?>)</div>\\\",\\\"    <?php endif; ?>\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"d-flex align-items-center gap-2\\\\\\\">\\\",\\\"    <?php if ($holder): ?>\\\",\\\"      <span class=\\\\\\\"badge bg-warning text-dark\\\\\\\">Held by <?=htmlspecialchars($holder['contractor_code'].' \\\\u2014 '.$holder['contractor_name'])?></span>\\\",\\\"    <?php endif; ?>\\\",\\\"    <div class=\\\\\\\"btn-group btn-group-sm\\\\\\\">\\\",\\\"      <a class=\\\\\\\"btn btn-outline-dark\\\\\\\" href=\\\\\\\"/maintenance/wo_list.php?machine_id=<?=$machine_id?>\\\\\\\">WO List</a>\\\",\\\"      <a class=\\\\\\\"btn btn-outline-primary\\\\\\\" href=\\\\\\\"/maintenance/wo_form.php?machine_id=<?=$machine_id?>\\\\\\\">+ WO</a>\\\",\\\"      <a class=\\\\\\\"btn btn-outline-danger\\\\\\\" href=\\\\\\\"/maintenance/breakdown_quick_create.php?machine_id=<?=$machine_id?>&symptom=Breakdown%20reported&severity=high\\\\\\\">+ Breakdown</a>\\\",\\\"    </div>\\\",\\\"    <a class=\\\\\\\"btn btn-light btn-sm\\\\\\\" href=\\\\\\\"/machines/machines_list.php\\\\\\\">Back to Machines</a>\\\",\\\"    <a class=\\\\\\\"btn btn-primary btn-sm\\\\\\\" href=\\\\\\\"/maintenance/programs_form.php?machine_id=<?=$machine_id?>\\\\\\\">+ Program</a>\\\",\\\"  </div>\\\",\\\"</div>\\\",\\\"\\\",\\\"<form class=\\\\\\\"row g-2 mb-3\\\\\\\">\\\",\\\"  <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"machine_id\\\\\\\" value=\\\\\\\"<?=$machine_id?>\\\\\\\">\\\",\\\"  <div class=\\\\\\\"col-md-6\\\\\\\">\\\",\\\"    <input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"q\\\\\\\" placeholder=\\\\\\\"Search team / notes\\\\u2026\\\\\\\" value=\\\\\\\"<?=htmlspecialchars($q)?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-2\\\\\\\">\\\",\\\"    <button class=\\\\\\\"btn btn-outline-secondary w-100\\\\\\\">Search</button>\\\",\\\"  </div>\\\",\\\"</form>\\\",\\\"\\\",\\\"<div class=\\\\\\\"table-responsive\\\\\\\">\\\",\\\"  <table class=\\\\\\\"table table-striped table-hover align-middle\\\\\\\">\\\",\\\"    <thead class=\\\\\\\"table-light\\\\\\\">\\\",\\\"      <tr>\\\",\\\"        <th>#</th><th>Intervals (active)</th><th>Anchor Date</th><th>Default Team</th><th>Notes</th><th style=\\\\\\\"width:220px;\\\\\\\"></th>\\\",\\\"      </tr>\\\",\\\"    </thead>\\\",\\\"    <tbody>\\\",\\\"    <?php foreach ($rows as $r): ?>\\\",\\\"      <tr>\\\",\\\"        <td><?= (int)$r['id'] ?></td>\\\",\\\"        <td><span class=\\\\\\\"badge bg-secondary\\\\\\\"><?= (int)$r['intervals_count'] ?></span></td>\\\",\\\"        <td><?= htmlspecialchars((string)$r['anchor_date'] ?? '') ?></td>\\\",\\\"        <td><?= htmlspecialchars((string)$r['default_team'] ?? '') ?></td>\\\",\\\"        <td><?= htmlspecialchars((string)$r['notes'] ?? '') ?></td>\\\",\\\"        <td class=\\\\\\\"text-end\\\\\\\">\\\",\\\"          <a class=\\\\\\\"btn btn-sm btn-outline-primary\\\\\\\" href=\\\\\\\"/maintenance/programs_form.php?id=<?=$r['id']?>\\\\\\\">Edit</a>\\\",\\\"          <a class=\\\\\\\"btn btn-sm btn-outline-success\\\\\\\" href=\\\\\\\"/maintenance/intervals_generate.php?program_id=<?=$r['id']?>\\\\\\\">Generate Due</a>\\\",\\\"          <a class=\\\\\\\"btn btn-sm btn-outline-dark\\\\\\\" href=\\\\\\\"/maintenance/wo_list.php?machine_id=<?=$machine_id?>\\\\\\\">Work Orders</a>\\\",\\\"        </td>\\\",\\\"      </tr>\\\",\\\"    <?php endforeach; if (!$rows): ?>\\\",\\\"      <tr><td colspan=\\\\\\\"6\\\\\\\" class=\\\\\\\"text-muted text-center py-4\\\\\\\">No programs yet.</td></tr>\\\",\\\"    <?php endif; ?>\\\",\\\"    </tbody>\\\",\\\"  </table>\\\",\\\"</div>\\\",\\\"\\\",\\\"<?php include __DIR__ . '/../ui/layout_end.php';\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/intervals_list.php\\\": [\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"/** PATH: /public_html/maintenance/intervals_list.php */\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('maintenance.manage');\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"\\\",\\\"// Filters\\\",\\\"$programId = isset($_GET['program_id']) ? (int)$_GET['program_id'] : 0;\\\",\\\"$q = trim((string)($_GET['q'] ?? ''));\\\",\\\"\\\",\\\"// WHERE\\\",\\\"$w = [];\\\",\\\"$p = [];\\\",\\\"if ($programId > 0) { $w[] = 'mi.program_id=?'; $p[] = $programId; }\\\",\\\"if ($q !== '') {\\\",\\\"  $w[] = '('\\\",\\\"      .\\\\\\\"mi.title LIKE CONCAT('%', ?, '%')\\\\\\\"\\\",\\\"      .\\\\\\\" OR mt.name LIKE CONCAT('%', ?, '%')\\\\\\\"\\\",\\\"      .\\\\\\\" OR m.machine_id LIKE CONCAT('%', ?, '%')\\\\\\\"\\\",\\\"      .\\\\\\\" OR COALESCE(mp.notes,'') LIKE CONCAT('%', ?, '%')\\\\\\\"\\\",\\\"      .\\\\\\\" OR COALESCE(mp.default_team,'') LIKE CONCAT('%', ?, '%')\\\\\\\"\\\",\\\"      .')';\\\",\\\"  array_push($p, $q, $q, $q, $q, $q);\\\",\\\"}\\\",\\\"$whereSql = $w ? 'WHERE '.implode(' AND ', $w) : '';\\\",\\\"\\\",\\\"// Query (matches your schema)\\\",\\\"$sql = \\\\\\\"\\\",\\\"SELECT\\\",\\\"  mi.id, mi.program_id, mi.maintenance_type_id, mi.title,\\\",\\\"  mi.frequency, mi.interval_count, mi.custom_days,\\\",\\\"  mi.notify_before_days, mi.grace_days, mi.requires_shutdown,\\\",\\\"  mi.priority, mi.active, mi.last_completed_on, mi.next_due_date,\\\",\\\"  mt.name AS mtype_name,\\\",\\\"  m.machine_id, m.name AS machine_name,\\\",\\\"  mp.notes, mp.default_team\\\",\\\"FROM maintenance_intervals mi\\\",\\\"LEFT JOIN maintenance_types    mt ON mt.id = mi.maintenance_type_id\\\",\\\"LEFT JOIN maintenance_programs mp ON mp.id = mi.program_id\\\",\\\"LEFT JOIN machines             m  ON m.id  = mp.machine_id\\\",\\\"$whereSql\\\",\\\"ORDER BY m.machine_id, mi.priority DESC, mi.next_due_date IS NULL, mi.next_due_date ASC, mi.id DESC\\\",\\\"\\\\\\\";\\\",\\\"$st = $pdo->prepare($sql);\\\",\\\"$st->execute($p);\\\",\\\"$rows = $st->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"// Program dropdown (label from machine + notes/team)\\\",\\\"$progStmt = $pdo->query(\\\\\\\"\\\",\\\"  SELECT mp.id, m.machine_id, m.name AS machine_name, mp.notes, mp.default_team\\\",\\\"  FROM maintenance_programs mp\\\",\\\"  LEFT JOIN machines m ON m.id = mp.machine_id\\\",\\\"  ORDER BY m.machine_id, mp.id\\\",\\\"\\\\\\\");\\\",\\\"$programs = $progStmt->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"include __DIR__ . '/../ui/layout_start.php';\\\",\\\"?>\\\",\\\"<div class=\\\\\\\"d-flex align-items-center justify-content-between mb-3\\\\\\\">\\\",\\\"  <h1 class=\\\\\\\"h5 mb-0\\\\\\\">Maintenance Intervals</h1>\\\",\\\"  <div class=\\\\\\\"d-flex gap-2\\\\\\\">\\\",\\\"    <a href=\\\\\\\"intervals_form.php<?= $programId>0 ? ('?program_id='.$programId) : '' ?>\\\\\\\" class=\\\\\\\"btn btn-primary btn-sm\\\\\\\">Add Interval</a>\\\",\\\"    <a href=\\\\\\\"programs_list.php\\\\\\\" class=\\\\\\\"btn btn-outline-secondary btn-sm\\\\\\\">Programs</a>\\\",\\\"  </div>\\\",\\\"</div>\\\",\\\"\\\",\\\"<form class=\\\\\\\"row g-2 mb-3\\\\\\\" method=\\\\\\\"get\\\\\\\">\\\",\\\"  <div class=\\\\\\\"col-md-4\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Program</label>\\\",\\\"    <select name=\\\\\\\"program_id\\\\\\\" class=\\\\\\\"form-select\\\\\\\" onchange=\\\\\\\"this.form.submit()\\\\\\\">\\\",\\\"      <option value=\\\\\\\"0\\\\\\\">\\\\u2014 All Programs \\\\u2014</option>\\\",\\\"      <?php foreach ($programs as $pgr):\\\",\\\"        $bits  = array_filter([$pgr['machine_id'] ?? '', $pgr['machine_name'] ?? '']);\\\",\\\"        $suff  = trim(implode(' \\\\u2022 ', array_filter([$pgr['notes'] ?? '', $pgr['default_team'] ?? ''])));\\\",\\\"        $label = trim(implode(' \\\\u2014 ', array_filter([implode(' \\\\u2022 ', $bits), $suff])));\\\",\\\"        if ($label === '') $label = 'Program #'.$pgr['id'];\\\",\\\"      ?>\\\",\\\"        <option value=\\\\\\\"<?=$pgr['id']?>\\\\\\\" <?=$programId===(int)$pgr['id']?'selected':''?>><?=htmlspecialchars($label)?></option>\\\",\\\"      <?php endforeach; ?>\\\",\\\"    </select>\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-4\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Search</label>\\\",\\\"    <input name=\\\\\\\"q\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?=htmlspecialchars($q)?>\\\\\\\" placeholder=\\\\\\\"Title / Type / Machine / Notes / Team\\\\\\\">\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-2 d-grid align-items-end\\\\\\\">\\\",\\\"    <button class=\\\\\\\"btn btn-outline-secondary mt-4\\\\\\\">Filter</button>\\\",\\\"  </div>\\\",\\\"</form>\\\",\\\"\\\",\\\"<div class=\\\\\\\"table-responsive\\\\\\\">\\\",\\\"  <table class=\\\\\\\"table table-hover align-middle\\\\\\\">\\\",\\\"    <thead class=\\\\\\\"table-light\\\\\\\">\\\",\\\"      <tr>\\\",\\\"        <th style=\\\\\\\"width:160px;\\\\\\\">Machine</th>\\\",\\\"        <th>Program</th>\\\",\\\"        <th>Interval</th>\\\",\\\"        <th>Type</th>\\\",\\\"        <th>Notify</th>\\\",\\\"        <th>Grace</th>\\\",\\\"        <th>Shutdown</th>\\\",\\\"        <th>Priority</th>\\\",\\\"        <th>Last Done</th>\\\",\\\"        <th>Next Due</th>\\\",\\\"        <th class=\\\\\\\"text-end\\\\\\\" style=\\\\\\\"width:160px;\\\\\\\">Actions</th>\\\",\\\"      </tr>\\\",\\\"    </thead>\\\",\\\"    <tbody>\\\",\\\"      <?php foreach ($rows as $r):\\\",\\\"        $freq  = (string)$r['frequency'];\\\",\\\"        $count = (int)$r['interval_count'];\\\",\\\"        $intervalText = '';\\\",\\\"        switch ($freq) {\\\",\\\"          case 'daily': case 'weekly': case 'monthly': case 'quarterly': case 'semiannual': case 'annual':\\\",\\\"            $unit = ['daily'=>'day','weekly'=>'week','monthly'=>'month','quarterly'=>'quarter','semiannual'=>'half-year','annual'=>'year'][$freq];\\\",\\\"            $intervalText = 'Every '.($count>1?$count.' ':'').$unit.($count>1?'s':'');\\\",\\\"            break;\\\",\\\"          case 'custom_days':\\\",\\\"            $days = (int)$r['custom_days']; $intervalText = $days>0 ? ('Every '.$days.' days') : 'Custom (days)'; break;\\\",\\\"          default: $intervalText = ucfirst($freq);\\\",\\\"        }\\\",\\\"        $progBits = array_filter([$r['machine_id'] ?? '', $r['machine_name'] ?? '']);\\\",\\\"        $progSuff = trim(implode(' \\\\u2022 ', array_filter([$r['notes'] ?? '', $r['default_team'] ?? ''])));\\\",\\\"        $progLbl  = trim(implode(' \\\\u2014 ', array_filter([implode(' \\\\u2022 ', $progBits), $progSuff])));\\\",\\\"        if ($progLbl === '') $progLbl = 'Program #'.$r['program_id'];\\\",\\\"\\\",\\\"        $notify = (int)$r['notify_before_days'];\\\",\\\"        $grace  = (int)$r['grace_days'];\\\",\\\"        $sdBadge = !empty($r['requires_shutdown']) ? '<span class=\\\\\\\"badge text-bg-danger\\\\\\\">Yes</span>' : '<span class=\\\\\\\"badge text-bg-secondary\\\\\\\">No</span>';\\\",\\\"        $prio = htmlspecialchars((string)$r['priority']);\\\",\\\"        $actBadge = !empty($r['active']) ? '<span class=\\\\\\\"badge text-bg-success\\\\\\\">Active</span>' : '<span class=\\\\\\\"badge text-bg-secondary\\\\\\\">Inactive</span>';\\\",\\\"      ?>\\\",\\\"      <tr>\\\",\\\"        <td class=\\\\\\\"text-nowrap\\\\\\\">\\\",\\\"          <div class=\\\\\\\"fw-semibold\\\\\\\"><?=htmlspecialchars((string)$r['machine_id'])?></div>\\\",\\\"          <div class=\\\\\\\"small text-muted\\\\\\\"><?=htmlspecialchars((string)$r['machine_name'])?></div>\\\",\\\"        </td>\\\",\\\"        <td><?=htmlspecialchars($progLbl)?></td>\\\",\\\"        <td>\\\",\\\"          <div class=\\\\\\\"fw-semibold\\\\\\\"><?=htmlspecialchars((string)$r['title'])?></div>\\\",\\\"          <div class=\\\\\\\"small text-muted\\\\\\\"><?=$intervalText?> <?=$actBadge?></div>\\\",\\\"        </td>\\\",\\\"        <td><?=htmlspecialchars((string)($r['mtype_name'] ?: '-'))?></td>\\\",\\\"        <td><?=$notify ? $notify.' d' : '\\\\u2014'?></td>\\\",\\\"        <td><?=$grace ? $grace.' d' : '\\\\u2014'?></td>\\\",\\\"        <td><?=$sdBadge?></td>\\\",\\\"        <td><?= $prio ?></td>\\\",\\\"        <td><?=htmlspecialchars($r['last_completed_on'] ?? '\\\\u2014')?></td>\\\",\\\"        <td>\\\",\\\"          <?php if (!empty($r['next_due_date'])):\\\",\\\"            $due = new DateTime((string)$r['next_due_date']);\\\",\\\"            $today = new DateTime('today');\\\",\\\"            $badge = $due < $today ? 'text-bg-danger' : ($due == $today ? 'text-bg-warning' : 'text-bg-success'); ?>\\\",\\\"            <span class=\\\\\\\"badge <?=$badge?>\\\\\\\"><?=htmlspecialchars($r['next_due_date'])?></span>\\\",\\\"          <?php else: ?>\\\\u2014<?php endif; ?>\\\",\\\"        </td>\\\",\\\"        <td class=\\\\\\\"text-end\\\\\\\">\\\",\\\"          <a href=\\\\\\\"intervals_form.php?id=<?=$r['id']?>\\\\\\\" class=\\\\\\\"btn btn-sm btn-outline-secondary\\\\\\\">Edit</a>\\\",\\\"          <a href=\\\\\\\"intervals_generate.php?id=<?=$r['id']?>\\\\\\\" class=\\\\\\\"btn btn-sm btn-outline-primary\\\\\\\">Generate WO</a>\\\",\\\"        </td>\\\",\\\"      </tr>\\\",\\\"      <?php endforeach; ?>\\\",\\\"      <?php if (!$rows): ?>\\\",\\\"        <tr><td colspan=\\\\\\\"11\\\\\\\" class=\\\\\\\"text-center text-muted py-4\\\\\\\">No intervals found.</td></tr>\\\",\\\"      <?php endif; ?>\\\",\\\"    </tbody>\\\",\\\"  </table>\\\",\\\"</div>\\\",\\\"\\\",\\\"<?php include __DIR__ . '/../ui/layout_end.php';\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/intervals_generate.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/maintenance/intervals_generate.php\\\",\\\" * PURPOSE:\\\",\\\" *   - Generate WO(s) from maintenance intervals.\\\",\\\" *   - Works for a single interval (?id=123) or all due in a program (?program_id=45).\\\",\\\" *\\\",\\\" * PHP: 8.4\\\",\\\" */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('maintenance.wo.manage');\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"// Keep session consistent with rest of app.\\\",\\\"$pdo->exec(\\\\\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\\\\\");\\\",\\\"\\\",\\\"$id         = (int)($_GET['id'] ?? 0);          // maintenance_intervals.id\\\",\\\"$program_id = (int)($_GET['program_id'] ?? 0);  // maintenance_programs.id\\\",\\\"\\\",\\\"if ($id <= 0 && $program_id <= 0) {\\\",\\\"  http_response_code(400);\\\",\\\"  echo \\\\\\\"Usage: intervals_generate.php?id={interval_id} OR ?program_id={program_id}\\\\\\\";\\\",\\\"  exit;\\\",\\\"}\\\",\\\"\\\",\\\"/** Safe, concurrent WO number allocator (same approach as wo_form.php) */\\\",\\\"function allocate_wo_code(PDO $pdo): string {\\\",\\\"  $year = date('Y');\\\",\\\"  $lock = \\\\\\\"wo_code_$year\\\\\\\";\\\",\\\"  $pdo->query(\\\\\\\"SELECT GET_LOCK('$lock', 10)\\\\\\\");\\\",\\\"  try {\\\",\\\"    $st = $pdo->prepare(\\\\\\\"SELECT MAX(CAST(SUBSTRING(wo_code, 10) AS UNSIGNED)) FROM maintenance_work_orders WHERE wo_code LIKE ?\\\\\\\");\\\",\\\"    $st->execute([\\\\\\\"WO-$year-%\\\\\\\"]);\\\",\\\"    $next = ((int)$st->fetchColumn()) + 1;\\\",\\\"    return sprintf(\\\\\\\"WO-%s-%04d\\\\\\\", $year, $next);\\\",\\\"  } finally {\\\",\\\"    $pdo->query(\\\\\\\"SELECT RELEASE_LOCK('$lock')\\\\\\\");\\\",\\\"  }\\\",\\\"}\\\",\\\"\\\",\\\"/** Build one WO for a given interval row (joined with program for machine_id). Returns new WO id or null if skipped. */\\\",\\\"function create_wo_for_interval(PDO $pdo, array $iv): ?int {\\\",\\\"  // Skip if there is already an open/in-progress WO for this interval\\\",\\\"  $chk = $pdo->prepare(\\\\\\\"SELECT id FROM maintenance_work_orders WHERE interval_id=? AND status NOT IN ('closed','cancelled') ORDER BY id DESC LIMIT 1\\\\\\\");\\\",\\\"  $chk->execute([(int)$iv['id']]);\\\",\\\"  if ($chk->fetchColumn()) return null;\\\",\\\"\\\",\\\"  $wo_code = allocate_wo_code($pdo);\\\",\\\"\\\",\\\"  $title   = (string)($iv['title'] ?? 'Scheduled Maintenance');\\\",\\\"  $desc    = (string)($iv['description'] ?? null);\\\",\\\"  $due     = $iv['next_due_date'] ?? null; // may be null\\\",\\\"  $dueStr  = $due ? (string)$due : date('Y-m-d');\\\",\\\"\\\",\\\"  $ins = $pdo->prepare(\\\\\\\"\\\",\\\"    INSERT INTO maintenance_work_orders\\\",\\\"      (wo_code, machine_id, interval_id, title, description, maintenance_type_id, priority, status, due_date,\\\",\\\"       reported_by, reported_at, down_from, up_at, parts_cost, labour_cost_internal, labour_cost_vendor, misc_cost, total_cost,\\\",\\\"       created_by, created_at)\\\",\\\"    VALUES\\\",\\\"      (?,?,?,?,?,?,?,?,?,\\\",\\\"       ?, NOW(), ?, ?, 0, 0, 0, 0, 0,\\\",\\\"       ?, NOW())\\\",\\\"  \\\\\\\");\\\",\\\"\\\",\\\"  $ins->execute([\\\",\\\"    $wo_code,\\\",\\\"    (int)$iv['machine_id'],\\\",\\\"    (int)$iv['id'],\\\",\\\"    $title,\\\",\\\"    $desc ?: null,\\\",\\\"    (int)($iv['maintenance_type_id'] ?? 0) ?: null,\\\",\\\"    'medium',              // default\\\",\\\"    'open',                // new WO starts open\\\",\\\"    $dueStr,\\\",\\\"    current_user_id(),\\\",\\\"    null,                  // down_from\\\",\\\"    null,                  // up_at\\\",\\\"    current_user_id()\\\",\\\"  ]);\\\",\\\"\\\",\\\"  $wo_id = (int)$pdo->lastInsertId();\\\",\\\"\\\",\\\"  // Seed tasks: prefer checklist_json if present, else ensure at least one task line = title\\\",\\\"  $added = false;\\\",\\\"  if (!empty($iv['checklist_json'])) {\\\",\\\"    $chk = json_decode((string)$iv['checklist_json'], true);\\\",\\\"    if (is_array($chk) && $chk) {\\\",\\\"      $insT = $pdo->prepare(\\\\\\\"INSERT INTO maintenance_wo_tasks (wo_id, task, status) VALUES (?,?, 'todo')\\\\\\\");\\\",\\\"      foreach ($chk as $t) {\\\",\\\"        $task = (string)($t['task'] ?? '');\\\",\\\"        if ($task !== '') { $insT->execute([$wo_id, $task]); $added = true; }\\\",\\\"      }\\\",\\\"    }\\\",\\\"  }\\\",\\\"  if (!$added) {\\\",\\\"    $pdo->prepare(\\\\\\\"INSERT INTO maintenance_wo_tasks (wo_id, task, status) VALUES (?,?, 'todo')\\\\\\\")\\\",\\\"        ->execute([$wo_id, $title]);\\\",\\\"  }\\\",\\\"\\\",\\\"  return $wo_id;\\\",\\\"}\\\",\\\"\\\",\\\"// Single interval mode:\\\",\\\"if ($id > 0) {\\\",\\\"  $st = $pdo->prepare(\\\\\\\"SELECT mi.*, mp.machine_id\\\",\\\"                         FROM maintenance_intervals mi\\\",\\\"                         JOIN maintenance_programs mp ON mp.id = mi.program_id\\\",\\\"                        WHERE mi.id=?\\\\\\\");\\\",\\\"  $st->execute([$id]);\\\",\\\"  $iv = $st->fetch(PDO::FETCH_ASSOC);\\\",\\\"  if (!$iv) { http_response_code(404); echo \\\\\\\"Interval not found\\\\\\\"; exit; }\\\",\\\"\\\",\\\"  $pdo->beginTransaction();\\\",\\\"  try {\\\",\\\"    $wo_id = create_wo_for_interval($pdo, $iv);\\\",\\\"    $pdo->commit();\\\",\\\"    if ($wo_id) {\\\",\\\"      header(\\\\\\\"Location: /maintenance/wo_view.php?id=\\\\\\\" . $wo_id);\\\",\\\"    } else {\\\",\\\"      header(\\\\\\\"Location: /maintenance/intervals_list.php?program_id=\\\\\\\" . (int)$iv['program_id'] . \\\\\\\"&info=exists\\\\\\\");\\\",\\\"    }\\\",\\\"    exit;\\\",\\\"  } catch (Throwable $e) {\\\",\\\"    if ($pdo->inTransaction()) $pdo->rollBack();\\\",\\\"    http_response_code(500);\\\",\\\"    echo \\\\\\\"Generate failed: \\\\\\\" . $e->getMessage();\\\",\\\"    exit;\\\",\\\"  }\\\",\\\"}\\\",\\\"\\\",\\\"// Program batch mode: create WOs for all intervals due today or earlier\\\",\\\"$st = $pdo->prepare(\\\\\\\"SELECT mi.*, mp.machine_id\\\",\\\"                       FROM maintenance_intervals mi\\\",\\\"                       JOIN maintenance_programs mp ON mp.id = mi.program_id\\\",\\\"                      WHERE mi.program_id=? AND mi.next_due_date IS NOT NULL AND mi.next_due_date <= CURDATE()\\\",\\\"                      ORDER BY mi.next_due_date, mi.id\\\\\\\");\\\",\\\"$st->execute([$program_id]);\\\",\\\"$rows = $st->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"$made = 0;\\\",\\\"$pdo->beginTransaction();\\\",\\\"try {\\\",\\\"  foreach ($rows as $iv) {\\\",\\\"    $wo_id = create_wo_for_interval($pdo, $iv);\\\",\\\"    if ($wo_id) $made++;\\\",\\\"  }\\\",\\\"  $pdo->commit();\\\",\\\"  header(\\\\\\\"Location: /maintenance/intervals_list.php?program_id=\\\\\\\".$program_id.\\\\\\\"&generated=\\\\\\\".$made);\\\",\\\"  exit;\\\",\\\"} catch (Throwable $e) {\\\",\\\"  if ($pdo->inTransaction()) $pdo->rollBack();\\\",\\\"  $msg = urlencode('Generate failed: '.$e->getMessage());\\\",\\\"  header(\\\\\\\"Location: /maintenance/intervals_list.php?program_id=\\\\\\\".$program_id.\\\\\\\"&error=\\\\\\\".$msg);\\\",\\\"  exit;\\\",\\\"}\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/schedule.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/maintenance/schedule.php\\\",\\\" * PURPOSE: Show maintenance person a \\\\\\\"today\\\\\\\" view:\\\",\\\" *  - Due plan items (intervals with next_due_date <= today)\\\",\\\" *  - My open Work Orders due today\\\",\\\" * ACTIONS:\\\",\\\" *  - Generate WO (links to intervals_generate.php)\\\",\\\" *  - Quick Complete (POST to interval_quick_complete.php)\\\",\\\" *\\\",\\\" * PHP 8.4, Bootstrap 5 UI\\\",\\\" */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"$ROOT = dirname(__DIR__);\\\",\\\"require_once $ROOT . '/includes/auth.php';\\\",\\\"require_once $ROOT . '/includes/db.php';\\\",\\\"require_once $ROOT . '/includes/rbac.php';\\\",\\\"require_once $ROOT . '/includes/csrf.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"\\\",\\\"// Create DB connection BEFORE any queries\\\",\\\"$pdo = db();\\\",\\\"$pdo->exec(\\\\\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\\\\\");\\\",\\\"\\\",\\\"// KPI badges (non-blocking)\\\",\\\"$counts = [\\\",\\\"  'overdue_intervals'   => 0,\\\",\\\"  'due_today_intervals' => 0,\\\",\\\"  'due_week_intervals'  => 0,\\\",\\\"  'wo_due_today'        => 0,\\\",\\\"  'wo_due_week'         => 0,\\\",\\\"];\\\",\\\"\\\",\\\"try {\\\",\\\"  // Overdue / Due Intervals\\\",\\\"  $st = $pdo->prepare(\\\\\\\"\\\",\\\"    SELECT\\\",\\\"      SUM(CASE WHEN mi.next_due_date IS NOT NULL AND mi.next_due_date < CURDATE() THEN 1 ELSE 0 END) AS overdue_intervals,\\\",\\\"      SUM(CASE WHEN mi.next_due_date = CURDATE() THEN 1 ELSE 0 END) AS due_today_intervals,\\\",\\\"      SUM(CASE WHEN mi.next_due_date > CURDATE() AND mi.next_due_date <= DATE_ADD(CURDATE(), INTERVAL 7 DAY) THEN 1 ELSE 0 END) AS due_week_intervals\\\",\\\"    FROM maintenance_intervals mi\\\",\\\"    JOIN maintenance_programs mp ON mp.id = mi.program_id\\\",\\\"  \\\\\\\");\\\",\\\"  $st->execute();\\\",\\\"  $counts = array_merge($counts, $st->fetch(PDO::FETCH_ASSOC) ?: []);\\\",\\\"\\\",\\\"  // Work Orders due\\\",\\\"  $st2 = $pdo->prepare(\\\\\\\"\\\",\\\"    SELECT\\\",\\\"      SUM(CASE WHEN due_date = CURDATE() AND status IN ('open','in_progress','waiting_parts') THEN 1 ELSE 0 END) AS wo_due_today,\\\",\\\"      SUM(CASE WHEN due_date > CURDATE() AND due_date <= DATE_ADD(CURDATE(), INTERVAL 7 DAY)\\\",\\\"               AND status IN ('open','in_progress','waiting_parts') THEN 1 ELSE 0 END) AS wo_due_week\\\",\\\"    FROM maintenance_work_orders\\\",\\\"  \\\\\\\");\\\",\\\"  $st2->execute();\\\",\\\"  $counts = array_merge($counts, $st2->fetch(PDO::FETCH_ASSOC) ?: []);\\\",\\\"} catch (Throwable $e) {\\\",\\\"  // kpi non-blocking\\\",\\\"}\\\",\\\"\\\",\\\"// Permissions: view schedule; manage allows quick-complete\\\",\\\"$canView   = has_permission('maintenance.plan.view') || has_permission('maintenance.wo.view') || is_admin();\\\",\\\"$canManage = has_permission('maintenance.plan.manage') || has_permission('maintenance.wo.manage') || is_admin();\\\",\\\"if (!$canView) { http_response_code(403); exit('Access denied'); }\\\",\\\"\\\",\\\"// Filters\\\",\\\"$team  = trim((string)($_GET['team'] ?? ''));        // optional program.default_team\\\",\\\"$q     = trim((string)($_GET['q'] ?? ''));           // search by machine code/name or interval title\\\",\\\"$mine  = (int)($_GET['mine'] ?? 0);                  // reserved for future responsible_user_id\\\",\\\"\\\",\\\"// Today\\\",\\\"$today = (new DateTimeImmutable('today'))->format('Y-m-d');\\\",\\\"\\\",\\\"// --- Query: Due intervals (next_due_date <= today), active only ---\\\",\\\"$where  = [\\\\\\\"mi.active = 1\\\\\\\", \\\\\\\"(mi.next_due_date IS NOT NULL AND mi.next_due_date <= ?)\\\\\\\"];\\\",\\\"$params = [$today];\\\",\\\"\\\",\\\"if ($team !== '') {\\\",\\\"  $where[]  = \\\\\\\"mp.default_team = ?\\\\\\\";\\\",\\\"  $params[] = $team;\\\",\\\"}\\\",\\\"if ($q !== '') {\\\",\\\"  $like = '%'.$q.'%';\\\",\\\"  $where[] = \\\\\\\"(m.machine_id COLLATE utf8mb4_general_ci LIKE ? OR m.name COLLATE utf8mb4_general_ci LIKE ? OR mi.title COLLATE utf8mb4_general_ci LIKE ?)\\\\\\\";\\\",\\\"  array_push($params, $like, $like, $like);\\\",\\\"}\\\",\\\"\\\",\\\"$sql_due = \\\\\\\"\\\",\\\"SELECT mi.id AS interval_id, mi.title, mi.frequency, mi.interval_count, mi.custom_days,\\\",\\\"       mi.next_due_date, mi.requires_shutdown, mi.priority,\\\",\\\"       mi.maintenance_type_id, mt.name AS maintenance_type_name,\\\",\\\"       mp.id AS program_id, mp.default_team,\\\",\\\"       m.id AS machine_id, m.machine_id AS machine_code, m.name AS machine_name\\\",\\\"  FROM maintenance_intervals mi\\\",\\\"  JOIN maintenance_programs mp ON mp.id = mi.program_id\\\",\\\"  JOIN machines m ON m.id = mp.machine_id\\\",\\\"  LEFT JOIN maintenance_types mt ON mt.id = mi.maintenance_type_id\\\",\\\" WHERE \\\\\\\" . implode(' AND ', $where) . \\\\\\\"\\\",\\\" ORDER BY mi.next_due_date ASC, mi.priority DESC, mi.id ASC\\\",\\\" LIMIT 200\\\\\\\";\\\",\\\"$st = $pdo->prepare($sql_due);\\\",\\\"$st->execute($params);\\\",\\\"$due_rows = $st->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"// --- Query: Open WOs due today (or overdue) ---\\\",\\\"$sql_wo = \\\\\\\"\\\",\\\"SELECT wo.id, wo.wo_code, wo.title, wo.status, wo.due_date,\\\",\\\"       m.machine_id AS machine_code, m.name AS machine_name\\\",\\\"  FROM maintenance_work_orders wo\\\",\\\"  JOIN machines m ON m.id = wo.machine_id\\\",\\\" WHERE wo.status IN ('open','in_progress') AND wo.due_date IS NOT NULL AND wo.due_date <= ?\\\",\\\" ORDER BY wo.due_date ASC, wo.id DESC\\\",\\\" LIMIT 200\\\\\\\";\\\",\\\"$st2 = $pdo->prepare($sql_wo);\\\",\\\"$st2->execute([$today]);\\\",\\\"$wo_rows = $st2->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"// UI shell\\\",\\\"$UI          = $ROOT . '/ui';\\\",\\\"$PAGE_TITLE  = 'Maintenance \\\\u2014 Daily Schedule';\\\",\\\"$ACTIVE_MENU = 'maintenance.schedule';\\\",\\\"require_once $UI . '/init.php';\\\",\\\"require_once $UI . '/layout_start.php';\\\",\\\"?>\\\",\\\"<div class=\\\\\\\"d-flex justify-content-between align-items-center mb-3\\\\\\\">\\\",\\\"  <h1 class=\\\\\\\"h4 mb-0\\\\\\\">Daily Maintenance Schedule</h1>\\\",\\\"  <div data-kpi-badges class=\\\\\\\"d-flex gap-2\\\\\\\">\\\",\\\"    <span class=\\\\\\\"badge bg-danger\\\\\\\">Overdue: <?= (int)($counts['overdue_intervals'] ?? 0) ?></span>\\\",\\\"    <span class=\\\\\\\"badge bg-warning text-dark\\\\\\\">Due Today: <?= (int)($counts['due_today_intervals'] ?? 0) ?></span>\\\",\\\"    <span class=\\\\\\\"badge bg-info text-dark\\\\\\\">Due Week: <?= (int)($counts['due_week_intervals'] ?? 0) ?></span>\\\",\\\"    <span class=\\\\\\\"badge bg-primary\\\\\\\">WO Today: <?= (int)($counts['wo_due_today'] ?? 0) ?></span>\\\",\\\"    <span class=\\\\\\\"badge bg-secondary\\\\\\\">WO Week: <?= (int)($counts['wo_due_week'] ?? 0) ?></span>\\\",\\\"  </div>\\\",\\\"</div>\\\",\\\"\\\",\\\"<form method=\\\\\\\"get\\\\\\\" class=\\\\\\\"row g-2 mb-3\\\\\\\">\\\",\\\"  <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"    <input name=\\\\\\\"q\\\\\\\" class=\\\\\\\"form-control\\\\\\\" placeholder=\\\\\\\"Search machine/interval\\\\\\\" value=\\\\\\\"<?= htmlspecialchars($q) ?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"    <input name=\\\\\\\"team\\\\\\\" class=\\\\\\\"form-control\\\\\\\" placeholder=\\\\\\\"Team (e.g., Mechanical)\\\\\\\" value=\\\\\\\"<?= htmlspecialchars($team) ?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-md-auto\\\\\\\">\\\",\\\"    <button class=\\\\\\\"btn btn-outline-secondary\\\\\\\">Filter</button>\\\",\\\"    <a class=\\\\\\\"btn btn-outline-secondary\\\\\\\" href=\\\\\\\"/maintenance/schedule.php\\\\\\\">Reset</a>\\\",\\\"  </div>\\\",\\\"</form>\\\",\\\"\\\",\\\"<ul class=\\\\\\\"nav nav-tabs mb-3\\\\\\\" role=\\\\\\\"tablist\\\\\\\">\\\",\\\"  <li class=\\\\\\\"nav-item\\\\\\\" role=\\\\\\\"presentation\\\\\\\">\\\",\\\"    <button class=\\\\\\\"nav-link active\\\\\\\" data-bs-toggle=\\\\\\\"tab\\\\\\\" data-bs-target=\\\\\\\"#tab-due\\\\\\\" type=\\\\\\\"button\\\\\\\" role=\\\\\\\"tab\\\\\\\">Plan Due (<?= count($due_rows) ?>)</button>\\\",\\\"  </li>\\\",\\\"  <li class=\\\\\\\"nav-item\\\\\\\" role=\\\\\\\"presentation\\\\\\\">\\\",\\\"    <button class=\\\\\\\"nav-link\\\\\\\" data-bs-toggle=\\\\\\\"tab\\\\\\\" data-bs-target=\\\\\\\"#tab-wo\\\\\\\" type=\\\\\\\"button\\\\\\\" role=\\\\\\\"tab\\\\\\\">My Open WOs (<?= count($wo_rows) ?>)</button>\\\",\\\"  </li>\\\",\\\"</ul>\\\",\\\"\\\",\\\"<div class=\\\\\\\"tab-content\\\\\\\">\\\",\\\"  <div class=\\\\\\\"tab-pane fade show active\\\\\\\" id=\\\\\\\"tab-due\\\\\\\" role=\\\\\\\"tabpanel\\\\\\\">\\\",\\\"    <?php if (!$due_rows): ?>\\\",\\\"      <div class=\\\\\\\"alert alert-success\\\\\\\">No intervals due today\\\\u2014great job!</div>\\\",\\\"    <?php else: ?>\\\",\\\"      <div class=\\\\\\\"row row-cols-1 row-cols-lg-2 g-3\\\\\\\">\\\",\\\"        <?php foreach ($due_rows as $r): ?>\\\",\\\"          <div class=\\\\\\\"col\\\\\\\">\\\",\\\"            <div class=\\\\\\\"card shadow-sm\\\\\\\">\\\",\\\"              <div class=\\\\\\\"card-body\\\\\\\">\\\",\\\"                <div class=\\\\\\\"d-flex justify-content-between align-items-start\\\\\\\">\\\",\\\"                  <div>\\\",\\\"                    <div class=\\\\\\\"small text-muted\\\\\\\"><?= htmlspecialchars((string)($r['maintenance_type_name'] ?? '')) ?></div>\\\",\\\"                    <h5 class=\\\\\\\"card-title mb-1\\\\\\\"><?= htmlspecialchars((string)($r['title'] ?: 'Scheduled Maintenance')) ?></h5>\\\",\\\"                    <div class=\\\\\\\"small\\\\\\\">\\\",\\\"                      <strong><?= htmlspecialchars((string)$r['machine_code']) ?></strong> \\\\u2014 <?= htmlspecialchars((string)$r['machine_name']) ?>\\\",\\\"                    </div>\\\",\\\"                  </div>\\\",\\\"                  <div class=\\\\\\\"text-end\\\\\\\">\\\",\\\"                    <?php\\\",\\\"                      $pri = (string)($r['priority'] ?? 'medium');\\\",\\\"                      $priClass = ($pri === 'high' ? 'danger' : ($pri === 'medium' ? 'warning text-dark' : 'secondary'));\\\",\\\"                    ?>\\\",\\\"                    <span class=\\\\\\\"badge bg-<?= $priClass ?>\\\\\\\"><?= htmlspecialchars($pri) ?></span>\\\",\\\"                    <div class=\\\\\\\"small text-muted mt-1\\\\\\\">\\\",\\\"                      Due: <strong><?= htmlspecialchars((string)$r['next_due_date']) ?></strong>\\\",\\\"                    </div>\\\",\\\"                  </div>\\\",\\\"                </div>\\\",\\\"\\\",\\\"                <div class=\\\\\\\"mt-3 d-flex gap-2\\\\\\\">\\\",\\\"                  <a class=\\\\\\\"btn btn-sm btn-primary\\\\\\\" href=\\\\\\\"/maintenance/intervals_generate.php?id=<?= (int)$r['interval_id'] ?>\\\\\\\">\\\",\\\"                    <i class=\\\\\\\"bi bi-gear-wide-connected me-1\\\\\\\"></i> Generate WO\\\",\\\"                  </a>\\\",\\\"\\\",\\\"                  <?php if ($canManage): ?>\\\",\\\"                    <form method=\\\\\\\"post\\\\\\\" action=\\\\\\\"/maintenance/interval_quick_complete.php\\\\\\\" class=\\\\\\\"d-inline\\\\\\\">\\\",\\\"                      <?= csrf_hidden_input() ?>\\\",\\\"                      <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"id\\\\\\\" value=\\\\\\\"<?= (int)$r['interval_id'] ?>\\\\\\\">\\\",\\\"                      <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"from\\\\\\\" value=\\\\\\\"schedule\\\\\\\">\\\",\\\"                      <button class=\\\\\\\"btn btn-sm btn-success\\\\\\\" onclick=\\\\\\\"return confirm('Mark this interval as completed for today and roll next due date?');\\\\\\\">\\\",\\\"                        <i class=\\\\\\\"bi bi-check2-circle me-1\\\\\\\"></i> Quick Complete\\\",\\\"                      </button>\\\",\\\"                    </form>\\\",\\\"                  <?php endif; ?>\\\",\\\"\\\",\\\"                  <a class=\\\\\\\"btn btn-sm btn-outline-secondary\\\\\\\" href=\\\\\\\"/maintenance/intervals_list.php?program_id=<?= (int)$r['program_id'] ?>\\\\\\\">Program</a>\\\",\\\"                </div>\\\",\\\"\\\",\\\"                <div class=\\\\\\\"mt-2 small text-muted\\\\\\\">\\\",\\\"                  Freq:\\\",\\\"                  <?php\\\",\\\"                  $f  = (string)$r['frequency'];\\\",\\\"                  $c  = (int)$r['interval_count'];\\\",\\\"                  $cd = (int)($r['custom_days'] ?? 0);\\\",\\\"                  echo htmlspecialchars($f . ($c ? \\\\\\\"\\\\u00d7$c\\\\\\\" : '') . ($f === 'custom' && $cd ? \\\\\\\" ($cd days)\\\\\\\" : ''));\\\",\\\"                  ?>\\\",\\\"                  <?php if ((int)$r['requires_shutdown'] === 1): ?>\\\",\\\"                    &nbsp;\\\\u2022&nbsp;<span class=\\\\\\\"text-danger\\\\\\\">Requires shutdown</span>\\\",\\\"                  <?php endif; ?>\\\",\\\"                  <?php if (!empty($r['default_team'])): ?>\\\",\\\"                    &nbsp;\\\\u2022&nbsp;Team: <?= htmlspecialchars((string)$r['default_team']) ?>\\\",\\\"                  <?php endif; ?>\\\",\\\"                </div>\\\",\\\"              </div>\\\",\\\"            </div>\\\",\\\"          </div>\\\",\\\"        <?php endforeach; ?>\\\",\\\"      </div>\\\",\\\"    <?php endif; ?>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"tab-pane fade\\\\\\\" id=\\\\\\\"tab-wo\\\\\\\" role=\\\\\\\"tabpanel\\\\\\\">\\\",\\\"    <?php if (!$wo_rows): ?>\\\",\\\"      <div class=\\\\\\\"alert alert-info\\\\\\\">No open work orders due today.</div>\\\",\\\"    <?php else: ?>\\\",\\\"      <div class=\\\\\\\"table-responsive\\\\\\\">\\\",\\\"        <table class=\\\\\\\"table table-sm align-middle\\\\\\\">\\\",\\\"          <thead class=\\\\\\\"table-light\\\\\\\">\\\",\\\"            <tr>\\\",\\\"              <th>WO</th>\\\",\\\"              <th>Title</th>\\\",\\\"              <th>Machine</th>\\\",\\\"              <th>Due</th>\\\",\\\"              <th>Status</th>\\\",\\\"              <th></th>\\\",\\\"            </tr>\\\",\\\"          </thead>\\\",\\\"          <tbody>\\\",\\\"          <?php foreach ($wo_rows as $w): ?>\\\",\\\"            <tr>\\\",\\\"              <td><code><?= htmlspecialchars((string)$w['wo_code']) ?></code></td>\\\",\\\"              <td><?= htmlspecialchars((string)$w['title']) ?></td>\\\",\\\"              <td><strong><?= htmlspecialchars((string)$w['machine_code']) ?></strong> \\\\u2014 <?= htmlspecialchars((string)$w['machine_name']) ?></td>\\\",\\\"              <td><?= htmlspecialchars((string)$w['due_date']) ?></td>\\\",\\\"              <td><span class=\\\\\\\"badge bg-secondary\\\\\\\"><?= htmlspecialchars((string)$w['status']) ?></span></td>\\\",\\\"              <td class=\\\\\\\"text-end\\\\\\\">\\\",\\\"                <a class=\\\\\\\"btn btn-sm btn-outline-primary\\\\\\\" href=\\\\\\\"/maintenance/wo_view.php?id=<?= (int)$w['id'] ?>\\\\\\\">Open</a>\\\",\\\"              </td>\\\",\\\"            </tr>\\\",\\\"          <?php endforeach; ?>\\\",\\\"          </tbody>\\\",\\\"        </table>\\\",\\\"      </div>\\\",\\\"    <?php endif; ?>\\\",\\\"  </div>\\\",\\\"</div>\\\",\\\"\\\",\\\"<?php\\\",\\\"require_once $UI . '/layout_end.php';\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/breakdown_view.php\\\": [\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"/** PATH: /public_html/maintenance/breakdown_view.php */\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('maintenance.wo.view'); // or 'maintenance.breakdown.view'\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"$pdo->exec(\\\\\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\\\\\");\\\",\\\"\\\",\\\"$id = (int)($_GET['id'] ?? 0);\\\",\\\"$ok = isset($_GET['ok']);\\\",\\\"\\\",\\\"$st = $pdo->prepare(\\\\\\\"SELECT b.*, m.machine_id AS machine_code, m.name AS machine_name\\\",\\\"                       FROM breakdown_tickets b\\\",\\\"                       JOIN machines m ON m.id=b.machine_id\\\",\\\"                      WHERE b.id=?\\\\\\\");\\\",\\\"$st->execute([$id]);\\\",\\\"$B = $st->fetch(PDO::FETCH_ASSOC);\\\",\\\"if (!$B) { http_response_code(404); exit('Not found'); }\\\",\\\"\\\",\\\"$PAGE_TITLE = \\\\\\\"Breakdown #\\\\\\\".$id;\\\",\\\"$ACTIVE_MENU = 'machines.list';\\\",\\\"include __DIR__ . '/../ui/layout_start.php';\\\",\\\"?>\\\",\\\"<div class=\\\\\\\"d-flex align-items-center justify-content-between mb-3\\\\\\\">\\\",\\\"  <h1 class=\\\\\\\"h5 mb-0\\\\\\\"><?=htmlspecialchars($PAGE_TITLE)?></h1>\\\",\\\"  <div class=\\\\\\\"d-flex gap-2\\\\\\\">\\\",\\\"    <a class=\\\\\\\"btn btn-light btn-sm\\\\\\\" href=\\\\\\\"/machines/machines_list.php\\\\\\\">Machines</a>\\\",\\\"    <a class=\\\\\\\"btn btn-outline-primary btn-sm\\\\\\\" href=\\\\\\\"/maintenance/wo_form.php?machine_id=<?=$B['machine_id']?>&title=Breakdown%20WO%20for%20<?=urlencode($B['machine_code'])?>\\\\\\\">Create WO</a>\\\",\\\"  </div>\\\",\\\"</div>\\\",\\\"\\\",\\\"<?php if ($ok): ?><div class=\\\\\\\"alert alert-success\\\\\\\">Breakdown recorded.</div><?php endif; ?>\\\",\\\"\\\",\\\"<div class=\\\\\\\"card shadow-sm\\\\\\\">\\\",\\\"  <div class=\\\\\\\"card-body\\\\\\\">\\\",\\\"    <dl class=\\\\\\\"row mb-0\\\\\\\">\\\",\\\"      <dt class=\\\\\\\"col-4\\\\\\\">Machine</dt><dd class=\\\\\\\"col-8\\\\\\\"><?=htmlspecialchars($B['machine_code'].' \\\\u2014 '.$B['machine_name'])?></dd>\\\",\\\"      <dt class=\\\\\\\"col-4\\\\\\\">Reported At</dt><dd class=\\\\\\\"col-8\\\\\\\"><?=htmlspecialchars((string)$B['reported_at'])?></dd>\\\",\\\"      <dt class=\\\\\\\"col-4\\\\\\\">Symptom</dt><dd class=\\\\\\\"col-8\\\\\\\"><?=htmlspecialchars((string)$B['symptom'])?></dd>\\\",\\\"      <dt class=\\\\\\\"col-4\\\\\\\">Severity</dt><dd class=\\\\\\\"col-8\\\\\\\"><span class=\\\\\\\"badge bg-danger\\\\\\\"><?=htmlspecialchars((string)$B['severity'])?></span></dd>\\\",\\\"      <dt class=\\\\\\\"col-4\\\\\\\">Status</dt><dd class=\\\\\\\"col-8\\\\\\\"><span class=\\\\\\\"badge bg-secondary\\\\\\\"><?=htmlspecialchars((string)$B['status'])?></span></dd>\\\",\\\"    </dl>\\\",\\\"  </div>\\\",\\\"</div>\\\",\\\"<?php include __DIR__ . '/../ui/layout_end.php';\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/interval_quick_complete.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/maintenance/interval_quick_complete.php\\\",\\\" * PURPOSE: One-click completion of a maintenance interval (no WO).\\\",\\\" *  - Sets last_completed_on = today\\\",\\\" *  - Advances next_due_date using frequency + interval_count/custom_days\\\",\\\" *  - Optionally writes a maintenance log (best-effort)\\\",\\\" *\\\",\\\" * SECURITY: requires maintenance.plan.manage\\\",\\\" */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"$ROOT = dirname(__DIR__);\\\",\\\"require_once $ROOT . '/includes/auth.php';\\\",\\\"require_once $ROOT . '/includes/db.php';\\\",\\\"require_once $ROOT . '/includes/rbac.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('maintenance.plan.manage');\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"$pdo->exec(\\\\\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\\\\\");\\\",\\\"\\\",\\\"$id   = (int)($_POST['id'] ?? 0);\\\",\\\"$from = (string)($_POST['from'] ?? '');\\\",\\\"if ($id <= 0) { http_response_code(400); exit('Interval id required'); }\\\",\\\"\\\",\\\"$today = new DateTimeImmutable('today');\\\",\\\"\\\",\\\"function compute_next_due(string $freq, int $count, int $customDays, DateTimeImmutable $base): string {\\\",\\\"  $count = max(1, $count);\\\",\\\"  return match ($freq) {\\\",\\\"    'daily'       => $base->modify(\\\\\\\"+{$count} day\\\\\\\")->format('Y-m-d'),\\\",\\\"    'weekly'      => $base->modify(\\\\\\\"+{$count} week\\\\\\\")->format('Y-m-d'),\\\",\\\"    'monthly'     => $base->modify(\\\\\\\"+{$count} month\\\\\\\")->format('Y-m-d'),\\\",\\\"    'quarterly'   => $base->modify(\\\\\\\"+\\\\\\\".(3 * $count).\\\\\\\" month\\\\\\\")->format('Y-m-d'),\\\",\\\"    'semiannual'  => $base->modify(\\\\\\\"+\\\\\\\".(6 * $count).\\\\\\\" month\\\\\\\")->format('Y-m-d'),\\\",\\\"    'annual'      => $base->modify(\\\\\\\"+{$count} year\\\\\\\")->format('Y-m-d'),\\\",\\\"    'custom'      => $base->modify(\\\\\\\"+\\\\\\\".max(1, $customDays).\\\\\\\" day\\\\\\\")->format('Y-m-d'),\\\",\\\"    default       => $base->modify(\\\\\\\"+{$count} month\\\\\\\")->format('Y-m-d'),\\\",\\\"  };\\\",\\\"}\\\",\\\"\\\",\\\"try {\\\",\\\"  // Load interval + program/machine\\\",\\\"  $st = $pdo->prepare(\\\\\\\"\\\",\\\"    SELECT mi.*, mp.machine_id\\\",\\\"      FROM maintenance_intervals mi\\\",\\\"      JOIN maintenance_programs mp ON mp.id = mi.program_id\\\",\\\"     WHERE mi.id = ?\\\\\\\");\\\",\\\"  $st->execute([$id]);\\\",\\\"  $iv = $st->fetch(PDO::FETCH_ASSOC);\\\",\\\"  if (!$iv) { http_response_code(404); exit('Interval not found'); }\\\",\\\"\\\",\\\"  $freq  = (string)$iv['frequency'];\\\",\\\"  $cnt   = (int)($iv['interval_count'] ?? 1);\\\",\\\"  $cdays = (int)($iv['custom_days'] ?? 0);\\\",\\\"\\\",\\\"  $next = compute_next_due($freq, $cnt, $cdays, $today);\\\",\\\"\\\",\\\"  $pdo->beginTransaction();\\\",\\\"\\\",\\\"  // Update interval dates\\\",\\\"  $upd = $pdo->prepare(\\\\\\\"UPDATE maintenance_intervals\\\",\\\"                           SET last_completed_on = ?, next_due_date = ?, updated_at = NOW()\\\",\\\"                         WHERE id = ?\\\\\\\");\\\",\\\"  $upd->execute([$today->format('Y-m-d'), $next, $id]);\\\",\\\"\\\",\\\"  // Best-effort maintenance log (schema variations tolerated)\\\",\\\"  try {\\\",\\\"    // Try the common schema first\\\",\\\"    $insLog = $pdo->prepare(\\\\\\\"\\\",\\\"      INSERT INTO maintenance_logs (machine_id, wo_id, performed_on, meter_value, remarks, created_by, created_at) VALUES (?, NULL, NOW(), NULL, ?, ?, NOW()))\\\",\\\"    \\\\\\\");\\\",\\\"    $note = 'Quick-completed: ' . ((string)$iv['title'] ?: 'Scheduled Maintenance');\\\",\\\"    $insLog->execute([(int)$iv['machine_id'], $today->format('Y-m-d'), $note, (int)current_user_id()]);\\\",\\\"  } catch (Throwable $e) {\\\",\\\"    // If table or columns differ, ignore silently to avoid blocking completion.\\\",\\\"  }\\\",\\\"\\\",\\\"  $pdo->commit();\\\",\\\"\\\",\\\"  // Redirect back\\\",\\\"  if ($from === 'schedule') {\\\",\\\"    header('Location: /maintenance/schedule.php?ok=1');\\\",\\\"  } else {\\\",\\\"    header('Location: /maintenance/intervals_list.php?program_id='.(int)$iv['program_id'].'&ok=1');\\\",\\\"  }\\\",\\\"  exit;\\\",\\\"\\\",\\\"} catch (Throwable $e) {\\\",\\\"  if ($pdo->inTransaction()) $pdo->rollBack();\\\",\\\"  http_response_code(500);\\\",\\\"  echo \\\\\\\"Quick-complete failed: \\\\\\\" . $e->getMessage();\\\",\\\"  exit;\\\",\\\"}\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/reports/contractor_costs.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/maintenance/reports/contractor_costs.php\\\",\\\" * PURPOSE: Summarize maintenance cost per contractor during their machine allocation windows.\\\",\\\" * RULE: Attribute each WO to the contractor who had the machine allocated on the WO's\\\",\\\" *       as-of date: COALESCE(wo.due_date, DATE(wo.created_at)).\\\",\\\" * NOTE: Uses generated column machine_allocations.effective_end_date.\\\",\\\" * PERMS: maintenance.report.view OR admin\\\",\\\" * PHP: 8.4\\\",\\\" */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"$ROOT = dirname(__DIR__, 2);\\\",\\\"require_once $ROOT . '/includes/auth.php';\\\",\\\"require_once $ROOT . '/includes/db.php';\\\",\\\"require_once $ROOT . '/includes/rbac.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"if (!(has_permission('maintenance.report.view') || is_admin())) {\\\",\\\"  http_response_code(403); exit('Access denied');\\\",\\\"}\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"$pdo->exec(\\\\\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\\\\\");\\\",\\\"\\\",\\\"$from = trim((string)($_GET['from'] ?? ''));\\\",\\\"$to   = trim((string)($_GET['to']   ?? ''));\\\",\\\"if ($from === '' || $to === '') {\\\",\\\"  $from = (new DateTimeImmutable('first day of this month'))->format('Y-m-d');\\\",\\\"  $to   = (new DateTimeImmutable('last day of this month'))->format('Y-m-d');\\\",\\\"}\\\",\\\"\\\",\\\"// Optional filters\\\",\\\"$machineId    = (int)($_GET['machine_id'] ?? 0);\\\",\\\"$contractorId = (int)($_GET['contractor_id'] ?? 0);\\\",\\\"$statusFilter = trim((string)($_GET['wo_status'] ?? 'completed')); // completed | open | all\\\",\\\"\\\",\\\"$asOf = \\\\\\\"COALESCE(wo.due_date, DATE(wo.created_at))\\\\\\\";\\\",\\\"\\\",\\\"// Build WHERE\\\",\\\"$params = [$from, $to];\\\",\\\"$where  = [\\\\\\\"$asOf BETWEEN ? AND ?\\\\\\\"];\\\",\\\"\\\",\\\"// WO status filter\\\",\\\"if ($statusFilter === 'completed') {\\\",\\\"  $where[] = \\\\\\\"wo.status = 'completed'\\\\\\\";\\\",\\\"} elseif ($statusFilter === 'open') {\\\",\\\"  $where[] = \\\\\\\"wo.status IN ('open','in_progress')\\\\\\\";\\\",\\\"} // else 'all' = no status filter\\\",\\\"\\\",\\\"if ($machineId > 0)    { $where[] = \\\\\\\"wo.machine_id = ?\\\\\\\"; $params[] = $machineId; }\\\",\\\"if ($contractorId > 0) { $where[] = \\\\\\\"ma.contractor_id = ?\\\\\\\"; $params[] = $contractorId; }\\\",\\\"\\\",\\\"// MAIN rollup\\\",\\\"$sql = \\\\\\\"\\\",\\\"SELECT\\\",\\\"  p.id   AS contractor_id,\\\",\\\"  p.name AS contractor_name,\\\",\\\"  COUNT(DISTINCT wo.id)                        AS wo_count,\\\",\\\"  COALESCE(SUM(wo.parts_cost),0)               AS parts_cost,\\\",\\\"  COALESCE(SUM(wo.labour_cost_internal),0)     AS labour_internal,\\\",\\\"  COALESCE(SUM(wo.labour_cost_vendor),0)       AS labour_vendor,\\\",\\\"  COALESCE(SUM(wo.misc_cost),0)                AS misc_cost,\\\",\\\"  COALESCE(SUM(wo.total_cost),0)               AS total_cost\\\",\\\"FROM maintenance_work_orders wo\\\",\\\"JOIN machines m ON m.id = wo.machine_id\\\",\\\"JOIN machine_allocations ma\\\",\\\"  ON ma.machine_id = wo.machine_id\\\",\\\" AND $asOf BETWEEN ma.alloc_date AND COALESCE(ma.effective_end_date, '9999-12-31')\\\",\\\"JOIN parties p ON p.id = ma.contractor_id\\\",\\\"WHERE \\\\\\\" . implode(' AND ', $where) . \\\\\\\"\\\",\\\"GROUP BY p.id, p.name\\\",\\\"ORDER BY total_cost DESC, wo_count DESC\\\",\\\"\\\\\\\";\\\",\\\"\\\",\\\"$st = $pdo->prepare($sql);\\\",\\\"$st->execute($params);\\\",\\\"$rows = $st->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"// DETAIL query (per contractor)\\\",\\\"$sqlDetail = \\\\\\\"\\\",\\\"SELECT\\\",\\\"  wo.id, wo.wo_code, wo.title, wo.status, wo.due_date,\\\",\\\"  wo.parts_cost, wo.labour_cost_internal, wo.labour_cost_vendor, wo.misc_cost, wo.total_cost,\\\",\\\"  m.machine_id AS machine_code, m.name AS machine_name\\\",\\\"FROM maintenance_work_orders wo\\\",\\\"JOIN machines m ON m.id = wo.machine_id\\\",\\\"JOIN machine_allocations ma\\\",\\\"  ON ma.machine_id = wo.machine_id\\\",\\\" AND $asOf BETWEEN ma.alloc_date AND COALESCE(ma.effective_end_date, '9999-12-31')\\\",\\\"WHERE \\\\\\\" . implode(' AND ', $where) . \\\\\\\"\\\",\\\"  AND ma.contractor_id = ?\\\",\\\"ORDER BY wo.due_date, wo.id DESC\\\",\\\"\\\\\\\";\\\",\\\"\\\",\\\"$UI = $ROOT . '/ui';\\\",\\\"$PAGE_TITLE  = 'Maintenance Cost by Contractor';\\\",\\\"$ACTIVE_MENU = 'maintenance.reports.contractor_costs';\\\",\\\"require_once $UI . '/init.php';\\\",\\\"require_once $UI . '/layout_start.php';\\\",\\\"?>\\\",\\\"<div class=\\\\\\\"d-flex justify-content-between align-items-center mb-3\\\\\\\">\\\",\\\"  <h1 class=\\\\\\\"h4 mb-0\\\\\\\">Maintenance Cost by Contractor</h1>\\\",\\\"</div>\\\",\\\"\\\",\\\"<form class=\\\\\\\"row g-2 mb-3\\\\\\\" method=\\\\\\\"get\\\\\\\">\\\",\\\"  <div class=\\\\\\\"col-auto\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">From</label>\\\",\\\"    <input type=\\\\\\\"date\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"from\\\\\\\" value=\\\\\\\"<?= htmlspecialchars($from) ?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-auto\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">To</label>\\\",\\\"    <input type=\\\\\\\"date\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"to\\\\\\\" value=\\\\\\\"<?= htmlspecialchars($to) ?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-auto\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">WO Status</label>\\\",\\\"    <select class=\\\\\\\"form-select\\\\\\\" name=\\\\\\\"wo_status\\\\\\\">\\\",\\\"      <option value=\\\\\\\"completed\\\\\\\" <?= $statusFilter==='completed'?'selected':'' ?>>Completed</option>\\\",\\\"      <option value=\\\\\\\"open\\\\\\\" <?= $statusFilter==='open'?'selected':'' ?>>Open/In Progress</option>\\\",\\\"      <option value=\\\\\\\"all\\\\\\\" <?= $statusFilter==='all'?'selected':'' ?>>All</option>\\\",\\\"    </select>\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-auto\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Machine ID (opt)</label>\\\",\\\"    <input type=\\\\\\\"number\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"machine_id\\\\\\\" value=\\\\\\\"<?= (int)$machineId ?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-auto\\\\\\\">\\\",\\\"    <label class=\\\\\\\"form-label\\\\\\\">Contractor ID (opt)</label>\\\",\\\"    <input type=\\\\\\\"number\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"contractor_id\\\\\\\" value=\\\\\\\"<?= (int)$contractorId ?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-auto align-self-end\\\\\\\">\\\",\\\"    <button class=\\\\\\\"btn btn-primary\\\\\\\">Apply</button>\\\",\\\"    <a class=\\\\\\\"btn btn-outline-secondary\\\\\\\" href=\\\\\\\"/maintenance/reports/contractor_costs.php\\\\\\\">Reset</a>\\\",\\\"  </div>\\\",\\\"</form>\\\",\\\"\\\",\\\"<?php if (!$rows): ?>\\\",\\\"  <div class=\\\\\\\"alert alert-info\\\\\\\">No matching work orders in the selected window.</div>\\\",\\\"<?php else: ?>\\\",\\\"  <div class=\\\\\\\"table-responsive\\\\\\\">\\\",\\\"    <table class=\\\\\\\"table table-sm align-middle\\\\\\\">\\\",\\\"      <thead class=\\\\\\\"table-light\\\\\\\">\\\",\\\"        <tr>\\\",\\\"          <th>Contractor</th>\\\",\\\"          <th class=\\\\\\\"text-end\\\\\\\">WO Count</th>\\\",\\\"          <th class=\\\\\\\"text-end\\\\\\\">Parts</th>\\\",\\\"          <th class=\\\\\\\"text-end\\\\\\\">Labour (Int)</th>\\\",\\\"          <th class=\\\\\\\"text-end\\\\\\\">Labour (Vendor)</th>\\\",\\\"          <th class=\\\\\\\"text-end\\\\\\\">Misc</th>\\\",\\\"          <th class=\\\\\\\"text-end\\\\\\\">Total</th>\\\",\\\"          <th></th>\\\",\\\"        </tr>\\\",\\\"      </thead>\\\",\\\"      <tbody>\\\",\\\"      <?php foreach ($rows as $r): ?>\\\",\\\"        <tr>\\\",\\\"          <td><?= htmlspecialchars((string)$r['contractor_name']) ?> <span class=\\\\\\\"text-muted\\\\\\\">(#<?= (int)$r['contractor_id'] ?>)</span></td>\\\",\\\"          <td class=\\\\\\\"text-end\\\\\\\"><?= (int)$r['wo_count'] ?></td>\\\",\\\"          <td class=\\\\\\\"text-end\\\\\\\"><?= number_format((float)$r['parts_cost'], 2) ?></td>\\\",\\\"          <td class=\\\\\\\"text-end\\\\\\\"><?= number_format((float)$r['labour_internal'], 2) ?></td>\\\",\\\"          <td class=\\\\\\\"text-end\\\\\\\"><?= number_format((float)$r['labour_vendor'], 2) ?></td>\\\",\\\"          <td class=\\\\\\\"text-end\\\\\\\"><?= number_format((float)$r['misc_cost'], 2) ?></td>\\\",\\\"          <td class=\\\\\\\"text-end\\\\\\\"><strong><?= number_format((float)$r['total_cost'], 2) ?></strong></td>\\\",\\\"          <td class=\\\\\\\"text-end\\\\\\\">\\\",\\\"            <button class=\\\\\\\"btn btn-sm btn-outline-primary\\\\\\\" type=\\\\\\\"button\\\\\\\"\\\",\\\"              data-bs-toggle=\\\\\\\"collapse\\\\\\\" data-bs-target=\\\\\\\"#detail<?= (int)$r['contractor_id'] ?>\\\\\\\">Details</button>\\\",\\\"          </td>\\\",\\\"        </tr>\\\",\\\"        <tr class=\\\\\\\"collapse\\\\\\\" id=\\\\\\\"detail<?= (int)$r['contractor_id'] ?>\\\\\\\">\\\",\\\"          <td colspan=\\\\\\\"8\\\\\\\">\\\",\\\"            <?php\\\",\\\"              $stD = $pdo->prepare($sqlDetail);\\\",\\\"              $paramsD = array_merge($params, [(int)$r['contractor_id']]);\\\",\\\"              $stD->execute($paramsD);\\\",\\\"              $detail = $stD->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"            ?>\\\",\\\"            <?php if (!$detail): ?>\\\",\\\"              <div class=\\\\\\\"text-muted\\\\\\\">No WOs.</div>\\\",\\\"            <?php else: ?>\\\",\\\"              <div class=\\\\\\\"table-responsive\\\\\\\">\\\",\\\"                <table class=\\\\\\\"table table-sm\\\\\\\">\\\",\\\"                  <thead>\\\",\\\"                    <tr>\\\",\\\"                      <th>WO</th><th>Title</th><th>Machine</th><th>Due</th>\\\",\\\"                      <th class=\\\\\\\"text-end\\\\\\\">Parts</th>\\\",\\\"                      <th class=\\\\\\\"text-end\\\\\\\">Lab (Int)</th>\\\",\\\"                      <th class=\\\\\\\"text-end\\\\\\\">Lab (Vendor)</th>\\\",\\\"                      <th class=\\\\\\\"text-end\\\\\\\">Misc</th>\\\",\\\"                      <th class=\\\\\\\"text-end\\\\\\\">Total</th>\\\",\\\"                      <th></th>\\\",\\\"                    </tr>\\\",\\\"                  </thead>\\\",\\\"                  <tbody>\\\",\\\"                  <?php foreach ($detail as $d): ?>\\\",\\\"                    <tr>\\\",\\\"                      <td><code><?= htmlspecialchars((string)$d['wo_code']) ?></code></td>\\\",\\\"                      <td><?= htmlspecialchars((string)$d['title']) ?></td>\\\",\\\"                      <td><strong><?= htmlspecialchars((string)$d['machine_code']) ?></strong> \\\\u2014 <?= htmlspecialchars((string)$d['machine_name']) ?></td>\\\",\\\"                      <td><?= htmlspecialchars((string)($d['due_date'] ?? '')) ?></td>\\\",\\\"                      <td class=\\\\\\\"text-end\\\\\\\"><?= number_format((float)$d['parts_cost'], 2) ?></td>\\\",\\\"                      <td class=\\\\\\\"text-end\\\\\\\"><?= number_format((float)$d['labour_cost_internal'], 2) ?></td>\\\",\\\"                      <td class=\\\\\\\"text-end\\\\\\\"><?= number_format((float)$d['labour_cost_vendor'], 2) ?></td>\\\",\\\"                      <td class=\\\\\\\"text-end\\\\\\\"><?= number_format((float)$d['misc_cost'], 2) ?></td>\\\",\\\"                      <td class=\\\\\\\"text-end\\\\\\\"><strong><?= number_format((float)$d['total_cost'], 2) ?></strong></td>\\\",\\\"                      <td class=\\\\\\\"text-end\\\\\\\"><a class=\\\\\\\"btn btn-sm btn-outline-secondary\\\\\\\" href=\\\\\\\"/maintenance/wo_view.php?id=<?= (int)$d['id'] ?>\\\\\\\">Open</a></td>\\\",\\\"                    </tr>\\\",\\\"                  <?php endforeach; ?>\\\",\\\"                  </tbody>\\\",\\\"                </table>\\\",\\\"              </div>\\\",\\\"            <?php endif; ?>\\\",\\\"          </td>\\\",\\\"        </tr>\\\",\\\"      <?php endforeach; ?>\\\",\\\"      </tbody>\\\",\\\"    </table>\\\",\\\"  </div>\\\",\\\"<?php endif; ?>\\\",\\\"\\\",\\\"<?php require_once $UI . '/layout_end.php'; ?>\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/x_templates_for_type.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/maintenance/x_templates_for_type.php */\\\",\\\"declare(strict_types=1);\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_login();\\\",\\\"require_permission('machines.manage');\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"$type_id = (int)($_GET['type_id'] ?? 0);\\\",\\\"$maintenance_type_id = (int)($_GET['maintenance_type_id'] ?? 0);\\\",\\\"\\\",\\\"$st = $pdo->prepare(\\\\\\\"SELECT id, title FROM maintenance_program_templates\\\",\\\"                      WHERE type_id=? AND maintenance_type_id=?\\\",\\\"                      ORDER BY title\\\\\\\");\\\",\\\"$st->execute([$type_id, $maintenance_type_id]); // FKs on both columns. :contentReference[oaicite:9]{index=9}\\\",\\\"$rows = $st->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"header('Content-Type: application/json');\\\",\\\"echo json_encode(['ok'=>true,'rows'=>$rows]);\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_view.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/maintenance/wo_view.php\\\",\\\" * PURPOSE: View a Work Order with tickable tasks + allocation & costing context.\\\",\\\" * PERMS: view => maintenance.wo.view (or admin), manage => maintenance.wo.manage\\\",\\\" * PHP: 8.4\\\",\\\" */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"$ROOT = dirname(__DIR__);\\\",\\\"require_once $ROOT . '/includes/auth.php';\\\",\\\"require_once $ROOT . '/includes/db.php';\\\",\\\"require_once $ROOT . '/includes/rbac.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"\\\",\\\"$canView   = has_permission('maintenance.wo.view')   || is_admin();\\\",\\\"$canManage = has_permission('maintenance.wo.manage') || is_admin();\\\",\\\"if (!$canView) { http_response_code(403); exit('Access denied'); }\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"$pdo->exec(\\\\\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\\\\\");\\\",\\\"\\\",\\\"$woId = (int)($_GET['id'] ?? 0);\\\",\\\"if ($woId <= 0) { http_response_code(400); exit('Invalid WO id'); }\\\",\\\"\\\",\\\"/** Load WO header + machine */\\\",\\\"$st = $pdo->prepare(\\\\\\\"\\\",\\\"  SELECT wo.*,\\\",\\\"         m.machine_id AS machine_code, m.name AS machine_name\\\",\\\"    FROM maintenance_work_orders wo\\\",\\\"    JOIN machines m ON m.id = wo.machine_id\\\",\\\"   WHERE wo.id = ?\\\",\\\"\\\\\\\");\\\",\\\"$st->execute([$woId]);\\\",\\\"$wo = $st->fetch(PDO::FETCH_ASSOC);\\\",\\\"if (!$wo) { http_response_code(404); exit('Work Order not found'); }\\\",\\\"\\\",\\\"/** If linked to interval, load minimal interval (title + program link) */\\\",\\\"$interval = null;\\\",\\\"if (!empty($wo['interval_id'])) {\\\",\\\"  $sti = $pdo->prepare(\\\\\\\"SELECT mi.id, mi.title, mi.program_id FROM maintenance_intervals mi WHERE mi.id=?\\\\\\\");\\\",\\\"  $sti->execute([(int)$wo['interval_id']]);\\\",\\\"  $interval = $sti->fetch(PDO::FETCH_ASSOC) ?: null;\\\",\\\"}\\\",\\\"\\\",\\\"/** Determine 'as-of' date for allocation attribution */\\\",\\\"$asOf = null;\\\",\\\"if (!empty($wo['due_date'])) {\\\",\\\"  $asOf = (string)$wo['due_date'];\\\",\\\"} else {\\\",\\\"  // Fallback to created_at if present; else today\\\",\\\"  $asOf = !empty($wo['created_at']) ? date('Y-m-d', strtotime((string)$wo['created_at'])) : date('Y-m-d');\\\",\\\"}\\\",\\\"\\\",\\\"/**\\\",\\\" * Load allocation record as of $asOf.\\\",\\\" * Window: alloc_date .. COALESCE(return_date, expected_return, '9999-12-31')\\\",\\\" * Prefer active status 'issued'; but allow a returned record if asOf sits within window historically.\\\",\\\" */\\\",\\\"$alloc = null;\\\",\\\"try {\\\",\\\"  $stmt = $pdo->prepare(\\\\\\\"\\\",\\\"  SELECT ma.*, p.name AS contractor_name\\\",\\\"    FROM machine_allocations ma\\\",\\\"    JOIN parties p ON p.id = ma.contractor_id\\\",\\\"   WHERE ma.machine_id = ?\\\",\\\"     AND ? BETWEEN ma.alloc_date AND COALESCE(ma.effective_end_date, '9999-12-31')\\\",\\\"   ORDER BY ma.status = 'issued' DESC, ma.id DESC\\\",\\\"   LIMIT 1\\\",\\\"\\\\\\\");\\\",\\\"\\\",\\\"  $stmt->execute([(int)$wo['machine_id'], $asOf]);\\\",\\\"  $alloc = $stmt->fetch(PDO::FETCH_ASSOC) ?: null;\\\",\\\"} catch (Throwable $e) {\\\",\\\"  $alloc = null; // Never block the page on allocation lookup\\\",\\\"}\\\",\\\"\\\",\\\"/** Load tasks */\\\",\\\"$st2 = $pdo->prepare(\\\\\\\"\\\",\\\"  SELECT id, task, status\\\",\\\"    FROM maintenance_wo_tasks\\\",\\\"   WHERE wo_id = ?\\\",\\\"   ORDER BY id ASC\\\",\\\"\\\\\\\");\\\",\\\"$st2->execute([$woId]);\\\",\\\"$tasks = $st2->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"/** UI shell */\\\",\\\"$UI = $ROOT . '/ui';\\\",\\\"$PAGE_TITLE  = 'WO ' . htmlspecialchars((string)$wo['wo_code']);\\\",\\\"$ACTIVE_MENU = 'maintenance.wo';\\\",\\\"require_once $UI . '/init.php';\\\",\\\"require_once $UI . '/layout_start.php';\\\",\\\"\\\",\\\"$ok = (int)($_GET['ok'] ?? 0);\\\",\\\"?>\\\",\\\"<?php if ($ok): ?>\\\",\\\"  <div class=\\\\\\\"alert alert-success alert-dismissible fade show\\\\\\\" role=\\\\\\\"alert\\\\\\\">\\\",\\\"    Work Order marked <strong>completed</strong>.\\\",\\\"    <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn-close\\\\\\\" data-bs-dismiss=\\\\\\\"alert\\\\\\\" aria-label=\\\\\\\"Close\\\\\\\"></button>\\\",\\\"  </div>\\\",\\\"<?php endif; ?>\\\",\\\"\\\",\\\"<div class=\\\\\\\"d-flex justify-content-between align-items-center mb-3\\\\\\\">\\\",\\\"  <h1 class=\\\\\\\"h4 mb-0\\\\\\\">Work Order <code><?= htmlspecialchars((string)$wo['wo_code']) ?></code></h1>\\\",\\\"  <div class=\\\\\\\"d-flex gap-2\\\\\\\">\\\",\\\"    <a class=\\\\\\\"btn btn-outline-secondary\\\\\\\" href=\\\\\\\"/maintenance/wo_list.php\\\\\\\">Back to list</a>\\\",\\\"  </div>\\\",\\\"</div>\\\",\\\"\\\",\\\"<div class=\\\\\\\"row g-3\\\\\\\">\\\",\\\"  <!-- HEADER + ALLOCATION + COSTING -->\\\",\\\"  <div class=\\\\\\\"col-lg-6\\\\\\\">\\\",\\\"    <div class=\\\\\\\"card shadow-sm\\\\\\\">\\\",\\\"      <div class=\\\\\\\"card-body\\\\\\\">\\\",\\\"        <h5 class=\\\\\\\"card-title mb-3\\\\\\\">Header</h5>\\\",\\\"        <div class=\\\\\\\"row\\\\\\\">\\\",\\\"          <div class=\\\\\\\"col-sm-6 mb-2\\\\\\\">\\\",\\\"            <strong>Machine</strong><br>\\\",\\\"            <span class=\\\\\\\"text-muted\\\\\\\"><?= htmlspecialchars((string)$wo['machine_code']) ?></span> \\\\u2014 <?= htmlspecialchars((string)$wo['machine_name']) ?>\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-6 mb-2\\\\\\\">\\\",\\\"            <strong>Status</strong><br>\\\",\\\"            <span class=\\\\\\\"badge bg-secondary\\\\\\\"><?= htmlspecialchars((string)$wo['status']) ?></span>\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-6 mb-2\\\\\\\">\\\",\\\"            <strong>Title</strong><br><?= htmlspecialchars((string)$wo['title']) ?>\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-6 mb-2\\\\\\\">\\\",\\\"            <strong>Due Date</strong><br><?= htmlspecialchars((string)($wo['due_date'] ?? '')) ?>\\\",\\\"          </div>\\\",\\\"\\\",\\\"          <?php if ($interval): ?>\\\",\\\"          <div class=\\\\\\\"col-sm-12 mb-2\\\\\\\">\\\",\\\"            <strong>Source Interval</strong><br>\\\",\\\"            <div class=\\\\\\\"small\\\\\\\">\\\",\\\"              <?= htmlspecialchars((string)($interval['title'] ?: 'Scheduled Maintenance')) ?>\\\",\\\"              &nbsp;\\\\u00b7&nbsp;\\\",\\\"              <a href=\\\\\\\"/maintenance/intervals_list.php?program_id=<?= (int)$interval['program_id'] ?>\\\\\\\">View program</a>\\\",\\\"            </div>\\\",\\\"          </div>\\\",\\\"          <?php endif; ?>\\\",\\\"\\\",\\\"          <?php if (!empty($wo['description'])): ?>\\\",\\\"          <div class=\\\\\\\"col-sm-12 mb-2\\\\\\\">\\\",\\\"            <strong>Description</strong><br><?= nl2br(htmlspecialchars((string)$wo['description'])) ?>\\\",\\\"          </div>\\\",\\\"          <?php endif; ?>\\\",\\\"\\\",\\\"          <?php if ($alloc): ?>\\\",\\\"          <div class=\\\\\\\"col-sm-12 mb-2\\\\\\\">\\\",\\\"            <strong>Allocation (as of <?= htmlspecialchars($asOf) ?>)</strong><br>\\\",\\\"            <div class=\\\\\\\"small\\\\\\\">\\\",\\\"              Contractor: <strong><?= htmlspecialchars((string)$alloc['contractor_name']) ?></strong>\\\",\\\"              &nbsp;\\\\u2022&nbsp; Code: <code><?= htmlspecialchars((string)$alloc['alloc_code']) ?></code>\\\",\\\"              <br>\\\",\\\"              From <strong><?= htmlspecialchars((string)$alloc['alloc_date']) ?></strong>\\\",\\\"              to <strong><?= htmlspecialchars((string)($alloc['return_date'] ?? $alloc['expected_return'] ?? 'open')) ?></strong>\\\",\\\"              &nbsp;\\\\u2022&nbsp; Status: <span class=\\\\\\\"badge bg-<?= ($alloc['status']==='issued'?'warning text-dark':'secondary') ?>\\\\\\\">\\\",\\\"                <?= htmlspecialchars((string)$alloc['status']) ?>\\\",\\\"              </span>\\\",\\\"              <?php if (!is_null($alloc['meter_issue'])): ?>\\\",\\\"                <br><span class=\\\\\\\"text-muted\\\\\\\">Meter @ issue:</span> <?= number_format((float)$alloc['meter_issue'], 2) ?>\\\",\\\"              <?php endif; ?>\\\",\\\"              <?php if (!is_null($alloc['meter_return'])): ?>\\\",\\\"                &nbsp;|&nbsp;<span class=\\\\\\\"text-muted\\\\\\\">Meter @ return:</span> <?= number_format((float)$alloc['meter_return'], 2) ?>\\\",\\\"              <?php endif; ?>\\\",\\\"              <?php if (!empty($alloc['remarks'])): ?>\\\",\\\"                <div class=\\\\\\\"mt-1 text-muted\\\\\\\">Remarks: <?= htmlspecialchars((string)$alloc['remarks']) ?></div>\\\",\\\"              <?php endif; ?>\\\",\\\"            </div>\\\",\\\"          </div>\\\",\\\"          <?php endif; ?>\\\",\\\"\\\",\\\"          <!-- Costing block -->\\\",\\\"          <div class=\\\\\\\"col-sm-12 mt-2\\\\\\\">\\\",\\\"            <h6 class=\\\\\\\"mt-3\\\\\\\">Costing</h6>\\\",\\\"            <div class=\\\\\\\"row g-2 small\\\\\\\">\\\",\\\"              <div class=\\\\\\\"col-6\\\\\\\"><span class=\\\\\\\"text-muted\\\\\\\">Parts</span><br><strong><?= number_format((float)($wo['parts_cost'] ?? 0), 2) ?></strong></div>\\\",\\\"              <div class=\\\\\\\"col-6\\\\\\\"><span class=\\\\\\\"text-muted\\\\\\\">Labour (Internal)</span><br><strong><?= number_format((float)($wo['labour_cost_internal'] ?? 0), 2) ?></strong></div>\\\",\\\"              <div class=\\\\\\\"col-6\\\\\\\"><span class=\\\\\\\"text-muted\\\\\\\">Labour (Vendor)</span><br><strong><?= number_format((float)($wo['labour_cost_vendor'] ?? 0), 2) ?></strong></div>\\\",\\\"              <div class=\\\\\\\"col-6\\\\\\\"><span class=\\\\\\\"text-muted\\\\\\\">Misc</span><br><strong><?= number_format((float)($wo['misc_cost'] ?? 0), 2) ?></strong></div>\\\",\\\"              <div class=\\\\\\\"col-12\\\\\\\"><hr class=\\\\\\\"my-2\\\\\\\"></div>\\\",\\\"              <div class=\\\\\\\"col-12\\\\\\\"><span class=\\\\\\\"text-muted\\\\\\\">Total</span><br><strong><?= number_format((float)($wo['total_cost'] ?? 0), 2) ?></strong></div>\\\",\\\"            </div>\\\",\\\"          </div>\\\",\\\"\\\",\\\"        </div>\\\",\\\"      </div>\\\",\\\"    </div>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <!-- TASKS -->\\\",\\\"  <div class=\\\\\\\"col-lg-6\\\\\\\">\\\",\\\"    <div class=\\\\\\\"card shadow-sm\\\\\\\">\\\",\\\"      <div class=\\\\\\\"card-body\\\\\\\">\\\",\\\"        <div class=\\\\\\\"d-flex align-items-center justify-content-between\\\\\\\">\\\",\\\"          <h5 class=\\\\\\\"card-title mb-0\\\\\\\">Tasks</h5>\\\",\\\"          <?php if ($canManage): ?>\\\",\\\"          <form class=\\\\\\\"d-flex gap-2\\\\\\\" method=\\\\\\\"post\\\\\\\" action=\\\\\\\"/maintenance/wo_task_add.php\\\\\\\">\\\",\\\"            <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"wo_id\\\\\\\" value=\\\\\\\"<?= (int)$woId ?>\\\\\\\">\\\",\\\"            <input class=\\\\\\\"form-control form-control-sm\\\\\\\" name=\\\\\\\"task\\\\\\\" placeholder=\\\\\\\"New task...\\\\\\\" required>\\\",\\\"            <button class=\\\\\\\"btn btn-sm btn-primary\\\\\\\">Add</button>\\\",\\\"          </form>\\\",\\\"          <?php endif; ?>\\\",\\\"        </div>\\\",\\\"\\\",\\\"        <div class=\\\\\\\"mt-3\\\\\\\">\\\",\\\"          <?php if (!$tasks): ?>\\\",\\\"            <div class=\\\\\\\"text-muted\\\\\\\">No tasks yet.</div>\\\",\\\"          <?php else: ?>\\\",\\\"            <ul class=\\\\\\\"list-group list-group-flush\\\\\\\">\\\",\\\"              <?php foreach ($tasks as $t): $done = (string)$t['status'] === 'done'; ?>\\\",\\\"                <li class=\\\\\\\"list-group-item\\\\\\\">\\\",\\\"                  <?php if ($canManage): ?>\\\",\\\"                  <form method=\\\\\\\"post\\\\\\\" action=\\\\\\\"/maintenance/wo_task_toggle.php\\\\\\\" class=\\\\\\\"m-0\\\\\\\">\\\",\\\"                    <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"id\\\\\\\" value=\\\\\\\"<?= (int)$t['id'] ?>\\\\\\\">\\\",\\\"                    <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"wo_id\\\\\\\" value=\\\\\\\"<?= (int)$woId ?>\\\\\\\">\\\",\\\"                    <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"to\\\\\\\" value=\\\\\\\"<?= $done ? 'todo' : 'done' ?>\\\\\\\">\\\",\\\"                    <div class=\\\\\\\"form-check\\\\\\\">\\\",\\\"                      <input class=\\\\\\\"form-check-input\\\\\\\" type=\\\\\\\"checkbox\\\\\\\" id=\\\\\\\"task<?= (int)$t['id'] ?>\\\\\\\"\\\",\\\"                             <?= $done ? 'checked' : '' ?>\\\",\\\"                             onchange=\\\\\\\"this.form.submit()\\\\\\\">\\\",\\\"                      <label class=\\\\\\\"form-check-label <?= $done ? 'text-decoration-line-through text-muted' : '' ?>\\\\\\\"\\\",\\\"                             for=\\\\\\\"task<?= (int)$t['id'] ?>\\\\\\\">\\\",\\\"                        <?= htmlspecialchars((string)$t['task']) ?>\\\",\\\"                      </label>\\\",\\\"                    </div>\\\",\\\"                  </form>\\\",\\\"                  <?php else: ?>\\\",\\\"                  <div class=\\\\\\\"form-check\\\\\\\">\\\",\\\"                    <input class=\\\\\\\"form-check-input\\\\\\\" type=\\\\\\\"checkbox\\\\\\\" disabled <?= $done ? 'checked' : '' ?>>\\\",\\\"                    <label class=\\\\\\\"form-check-label <?= $done ? 'text-decoration-line-through text-muted' : '' ?>\\\\\\\">\\\",\\\"                      <?= htmlspecialchars((string)$t['task']) ?>\\\",\\\"                    </label>\\\",\\\"                  </div>\\\",\\\"                  <?php endif; ?>\\\",\\\"                </li>\\\",\\\"              <?php endforeach; ?>\\\",\\\"            </ul>\\\",\\\"          <?php endif; ?>\\\",\\\"        </div>\\\",\\\"\\\",\\\"        <?php if ($canManage): ?>\\\",\\\"        <div class=\\\\\\\"mt-3 d-flex gap-2\\\\\\\">\\\",\\\"          <a class=\\\\\\\"btn btn-success\\\\\\\" href=\\\\\\\"/maintenance/wo_complete.php?id=<?= (int)$woId ?>\\\\\\\"\\\",\\\"             onclick=\\\\\\\"return confirm('Mark this WO as completed? Intervals (if linked) will roll to next due.');\\\\\\\">\\\",\\\"             Complete WO\\\",\\\"          </a>\\\",\\\"          <a class=\\\\\\\"btn btn-outline-secondary\\\\\\\" href=\\\\\\\"/maintenance/wo_edit.php?id=<?= (int)$woId ?>\\\\\\\">Edit</a>\\\",\\\"        </div>\\\",\\\"        <?php endif; ?>\\\",\\\"      </div>\\\",\\\"    </div>\\\",\\\"  </div>\\\",\\\"</div>\\\",\\\"\\\",\\\"<?php require_once $UI . '/layout_end.php'; ?>\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance/wo_task_add.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/maintenance/wo_task_add.php\\\",\\\" * PURPOSE: Add a new task line to a WO with status 'todo'\\\",\\\" * PERMS: maintenance.wo.manage\\\",\\\" */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"$ROOT = dirname(__DIR__);\\\",\\\"require_once $ROOT . '/includes/auth.php';\\\",\\\"require_once $ROOT . '/includes/db.php';\\\",\\\"require_once $ROOT . '/includes/rbac.php';\\\",\\\"require_once $ROOT . '/includes/csrf.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('maintenance.wo.manage');\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"csrf_require_token();\\\",\\\"$pdo->exec(\\\\\\\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\\\\\\\");\\\",\\\"\\\",\\\"$woId = (int)($_POST['wo_id'] ?? 0);\\\",\\\"$task = trim((string)($_POST['task'] ?? ''));\\\",\\\"\\\",\\\"if ($woId <= 0 || $task === '') { http_response_code(400); exit('Invalid params'); }\\\",\\\"\\\",\\\"$st = $pdo->prepare(\\\\\\\"INSERT INTO maintenance_wo_tasks (wo_id, task, status) VALUES (?, ?, 'todo')\\\\\\\");\\\",\\\"$st->execute([$woId, $task]);\\\",\\\"\\\",\\\"header('Location: /maintenance/wo_view.php?id=' . $woId);\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/_backups/modules__demo__hello.php.20250924_224202.json\\\": [\\\"{\\\",\\\"    \\\\\\\"rel_path\\\\\\\": \\\\\\\"modules\\\\\\\\/demo\\\\\\\\/hello.php\\\\\\\",\\\",\\\"    \\\\\\\"size\\\\\\\": 630,\\\",\\\"    \\\\\\\"saved_at\\\\\\\": \\\\\\\"2025-09-24 22:42:02\\\\\\\"\\\",\\\"}\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/_backups/modules__demo__hello.php.20250924_224202.bak\\\": [\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"$title = \\\\\\\"Items\\\\\\\";\\\",\\\"$items = [\\\\\\\"apple\\\\\\\",\\\\\\\"banana\\\\\\\",\\\\\\\"cherry\\\\\\\"];\\\",\\\"?>\\\",\\\"<!doctype html>\\\",\\\"<html lang=\\\\\\\"en\\\\\\\">\\\",\\\"<head>\\\",\\\"  <meta charset=\\\\\\\"utf-8\\\\\\\">\\\",\\\"  <title><?= htmlspecialchars($title) ?></title>\\\",\\\"  <link href=\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\\\\\\\" rel=\\\\\\\"stylesheet\\\\\\\">\\\",\\\"</head>\\\",\\\"<body class=\\\\\\\"p-3\\\\\\\">\\\",\\\"  <div class=\\\\\\\"container\\\\\\\">\\\",\\\"    <h1 class=\\\\\\\"h4\\\\\\\"><?= htmlspecialchars($title) ?></h1>\\\",\\\"    <ul>\\\",\\\"      <?php foreach ($items as $it): ?>\\\",\\\"        <li><?= htmlspecialchars($it) ?></li>\\\",\\\"      <?php endforeach; ?>\\\",\\\"    </ul>\\\",\\\"    <button class=\\\\\\\"btn btn-secondary\\\\\\\">Click me</button>\\\",\\\"  </div>\\\",\\\"</body>\\\",\\\"</html>\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/parties/party_gst_lookup.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/parties/party_gst_lookup.php */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"\\\",\\\"header('Content-Type: application/json');\\\",\\\"try {\\\",\\\"  require_login();\\\",\\\"\\\",\\\"  $gstin = strtoupper(trim((string)($_GET['gstin'] ?? '')));\\\",\\\"  if ($gstin === '') {\\\",\\\"    echo json_encode(['ok'=>false,'message'=>'GSTIN is required']); exit;\\\",\\\"  }\\\",\\\"\\\",\\\"  // Format: 2 digit state + 10 PAN-like + 1 entity + 'Z' + 1 checksum\\\",\\\"  $isValid = (bool)preg_match('/^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z][1-9A-Z]Z[0-9A-Z]$/', $gstin);\\\",\\\"  $pan = $isValid ? substr($gstin, 2, 10) : null;\\\",\\\"  $stateCode = $isValid ? substr($gstin, 0, 2) : null;\\\",\\\"\\\",\\\"  // NOTE: We do not call the NIC/GSTN API here. legal_name is unknown without an external API.\\\",\\\"  echo json_encode([\\\",\\\"    'ok'         => $isValid,\\\",\\\"    'message'    => $isValid ? 'GSTIN format looks valid' : 'Invalid GSTIN format',\\\",\\\"    'gstin'      => $gstin,\\\",\\\"    'pan'        => $pan,\\\",\\\"    'state_code' => $stateCode,\\\",\\\"    'legal_name' => null\\\",\\\"  ]);\\\",\\\"} catch (Throwable $e) {\\\",\\\"  http_response_code(500);\\\",\\\"  echo json_encode(['ok'=>false,'message'=>$e->getMessage()]);\\\",\\\"}\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/parties/parties_form.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/parties/parties_form.php */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"require_once __DIR__ . '/../includes/csrf.php';\\\",\\\"require_once __DIR__ . '/../includes/helpers.php';\\\",\\\"require_once __DIR__ . '/../includes/audit.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('parties.manage');\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"\\\",\\\"$id = (int)($_GET['id'] ?? 0);\\\",\\\"$isEdit = $id > 0;\\\",\\\"\\\",\\\"$types = ['client','supplier','contractor','other'];\\\",\\\"\\\",\\\"$errors = [];\\\",\\\"$party = [\\\",\\\"  'code' => '',\\\",\\\"  'name' => '',\\\",\\\"  'legal_name' => '',\\\",\\\"  'type' => 'supplier',\\\",\\\"  'contact_name' => '',\\\",\\\"  'email' => '',\\\",\\\"  'phone' => '',\\\",\\\"  'gst_number' => '',\\\",\\\"  'gst_state_code' => '',\\\",\\\"  'gst_registration_type' => null,\\\",\\\"  'pan_number' => '',\\\",\\\"  'msme_udyam' => '',\\\",\\\"  'address_line1' => '',\\\",\\\"  'address_line2' => '',\\\",\\\"  'city' => '',\\\",\\\"  'state' => '',\\\",\\\"  'country' => 'India',\\\",\\\"  'pincode' => '',\\\",\\\"  'status' => 1,\\\",\\\"];\\\",\\\"\\\",\\\"$commercial = [\\\",\\\"  'payment_terms_days' => 30,\\\",\\\"  'credit_limit' => '0.00',\\\",\\\"  'tds_section' => '',\\\",\\\"  'tds_rate' => null,\\\",\\\"  'tcs_applicable' => 0,\\\",\\\"  'e_invoice_required' => 0,\\\",\\\"  'reverse_charge_applicable' => 0,\\\",\\\"  'default_place_of_supply' => '',\\\",\\\"];\\\",\\\"\\\",\\\"$banks = [];\\\",\\\"$contacts = [];\\\",\\\"\\\",\\\"// Load existing\\\",\\\"if ($isEdit) {\\\",\\\"  $st = $pdo->prepare(\\\\\\\"SELECT * FROM parties WHERE id=? LIMIT 1\\\\\\\");\\\",\\\"  $st->execute([$id]);\\\",\\\"  $row = $st->fetch(PDO::FETCH_ASSOC);\\\",\\\"  if (!$row) { http_response_code(404); echo \\\\\\\"Party not found\\\\\\\"; exit; }\\\",\\\"  $party = array_merge($party, $row);\\\",\\\"\\\",\\\"  // commercial\\\",\\\"  $st = $pdo->prepare(\\\\\\\"SELECT * FROM party_commercials WHERE party_id=? LIMIT 1\\\\\\\");\\\",\\\"  $st->execute([$id]);\\\",\\\"  if ($c = $st->fetch(PDO::FETCH_ASSOC)) $commercial = array_merge($commercial, $c);\\\",\\\"\\\",\\\"  // banks\\\",\\\"  $st = $pdo->prepare(\\\\\\\"SELECT * FROM party_bank_accounts WHERE party_id=? ORDER BY is_primary DESC, id ASC\\\\\\\");\\\",\\\"  $st->execute([$id]);\\\",\\\"  $banks = $st->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"  // contacts\\\",\\\"  $st = $pdo->prepare(\\\\\\\"SELECT * FROM party_contacts WHERE party_id=? ORDER BY is_primary DESC, id ASC\\\\\\\");\\\",\\\"  $st->execute([$id]);\\\",\\\"  $contacts = $st->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"}\\\",\\\"\\\",\\\"// Handle POST\\\",\\\"if ($_SERVER['REQUEST_METHOD'] === 'POST') {\\\",\\\"  verify_csrf_or_die();\\\",\\\"\\\",\\\"  // Party fields\\\",\\\"  foreach ($party as $k => $_) {\\\",\\\"    if ($k === 'status') continue;\\\",\\\"    $party[$k] = trim((string)($_POST[$k] ?? ''));\\\",\\\"  }\\\",\\\"  $party['status'] = isset($_POST['status']) ? 1 : 0;\\\",\\\"\\\",\\\"  // Validate\\\",\\\"  if ($party['name'] === '') $errors['name'] = 'Name is required';\\\",\\\"  if (!in_array($party['type'], $types, true)) $errors['type'] = 'Invalid type';\\\",\\\"  if ($party['email'] !== '' && !filter_var($party['email'], FILTER_VALIDATE_EMAIL)) $errors['email'] = 'Invalid email';\\\",\\\"  if ($party['gst_number'] !== '' && !preg_match('/^[0-9A-Z]{15}$/', $party['gst_number'])) $errors['gst_number'] = 'Invalid GSTIN (15 alphanumerics)';\\\",\\\"\\\",\\\"  // Commercials\\\",\\\"  $commercial['payment_terms_days'] = (int)($_POST['payment_terms_days'] ?? 30);\\\",\\\"  $commercial['credit_limit'] = (string)($_POST['credit_limit'] ?? '0.00');\\\",\\\"  $commercial['tds_section'] = trim((string)($_POST['tds_section'] ?? ''));\\\",\\\"  $commercial['tds_rate'] = ($_POST['tds_rate'] ?? '') === '' ? null : (string)$_POST['tds_rate'];\\\",\\\"  $commercial['tcs_applicable'] = isset($_POST['tcs_applicable']) ? 1 : 0;\\\",\\\"  $commercial['e_invoice_required'] = isset($_POST['e_invoice_required']) ? 1 : 0;\\\",\\\"  $commercial['reverse_charge_applicable'] = isset($_POST['reverse_charge_applicable']) ? 1 : 0;\\\",\\\"  $commercial['default_place_of_supply'] = trim((string)($_POST['default_place_of_supply'] ?? ''));\\\",\\\"\\\",\\\"  // Bank arrays\\\",\\\"  $bank_ids        = $_POST['bank_id'] ?? [];\\\",\\\"  $beneficiary_name= $_POST['beneficiary_name'] ?? [];\\\",\\\"  $bank_name       = $_POST['bank_name'] ?? [];\\\",\\\"  $branch          = $_POST['branch'] ?? [];\\\",\\\"  $account_number  = $_POST['account_number'] ?? [];\\\",\\\"  $ifsc            = $_POST['ifsc'] ?? [];\\\",\\\"  $account_type    = $_POST['account_type'] ?? [];\\\",\\\"  $bank_is_primary = $_POST['bank_is_primary'] ?? []; // holds indices marked primary (single key)\\\",\\\"\\\",\\\"  // Contact arrays\\\",\\\"  $contact_ids         = $_POST['contact_id'] ?? [];\\\",\\\"  $contact_name        = $_POST['contact_name'] ?? [];\\\",\\\"  $contact_email       = $_POST['contact_email'] ?? [];\\\",\\\"  $contact_phone       = $_POST['contact_phone'] ?? [];\\\",\\\"  $contact_role_title  = $_POST['contact_role_title'] ?? [];\\\",\\\"  $contact_is_primary  = $_POST['contact_is_primary'] ?? []; // holds indices marked primary (single key)\\\",\\\"\\\",\\\"  try {\\\",\\\"    if (!$errors) {\\\",\\\"      $pdo->beginTransaction();\\\",\\\"\\\",\\\"      // INSERT code generation if needed\\\",\\\"      if (!$isEdit && $party['code'] === '') {\\\",\\\"        $st = $pdo->prepare(\\\\\\\"SELECT code_prefix FROM party_type_meta WHERE type=?\\\\\\\");\\\",\\\"        $st->execute([$party['type']]);\\\",\\\"        $prefix = (string)($st->fetchColumn() ?: '');\\\",\\\"        if ($prefix === '') {\\\",\\\"          $map = ['client'=>'CL','supplier'=>'SP','contractor'=>'CT','other'=>'OT'];\\\",\\\"          $prefix = $map[$party['type']] ?? 'PT';\\\",\\\"        }\\\",\\\"        $scope = 'party:' . $prefix;\\\",\\\"        $row = $pdo->prepare(\\\\\\\"SELECT id, current_value FROM party_sequences WHERE scope=? FOR UPDATE\\\\\\\");\\\",\\\"        $row->execute([$scope]);\\\",\\\"        $seq = $row->fetch(PDO::FETCH_ASSOC);\\\",\\\"        if (!$seq) {\\\",\\\"          $pdo->prepare(\\\\\\\"INSERT INTO party_sequences(scope, current_value) VALUES(?, 0)\\\\\\\")->execute([$scope]);\\\",\\\"          $row->execute([$scope]);\\\",\\\"          $seq = $row->fetch(PDO::FETCH_ASSOC);\\\",\\\"        }\\\",\\\"        $next = (int)$seq['current_value'] + 1;\\\",\\\"        $pdo->prepare(\\\\\\\"UPDATE party_sequences SET current_value=? WHERE id=?\\\\\\\")->execute([$next, (int)$seq['id']]);\\\",\\\"\\\",\\\"        $cst = $pdo->prepare(\\\\\\\"SELECT code FROM parties WHERE code LIKE ? ORDER BY id DESC LIMIT 1\\\\\\\");\\\",\\\"        $cst->execute([$prefix.'%']);\\\",\\\"        $lastCode = (string)($cst->fetchColumn() ?: '');\\\",\\\"        $hyphen = $lastCode ? (strpos($lastCode, '-') !== false) : ($party['type']==='client');\\\",\\\"        $party['code'] = $prefix . ($hyphen?'-':'') . str_pad((string)$next, 4, '0', STR_PAD_LEFT);\\\",\\\"      }\\\",\\\"\\\",\\\"      // upsert party\\\",\\\"      if ($isEdit) {\\\",\\\"        $sql = \\\\\\\"UPDATE parties SET code=?, name=?, legal_name=?, type=?, contact_name=?, email=?, phone=?, \\\",\\\"                gst_number=?, gst_state_code=?, gst_registration_type=?, pan_number=?, msme_udyam=?,\\\",\\\"                address_line1=?, address_line2=?, city=?, state=?, country=?, pincode=?, status=? \\\",\\\"                WHERE id=?\\\\\\\";\\\",\\\"        $pdo->prepare($sql)->execute([\\\",\\\"          $party['code'],$party['name'],$party['legal_name'],$party['type'],$party['contact_name'],$party['email'],$party['phone'],\\\",\\\"          $party['gst_number'],$party['gst_state_code'],$party['gst_registration_type'],$party['pan_number'],$party['msme_udyam'],\\\",\\\"          $party['address_line1'],$party['address_line2'],$party['city'],$party['state'],$party['country'],$party['pincode'],$party['status'],\\\",\\\"          $id\\\",\\\"        ]);\\\",\\\"      } else {\\\",\\\"        $sql = \\\\\\\"INSERT INTO parties(code,name,legal_name,type,contact_name,email,phone,gst_number,gst_state_code,gst_registration_type,pan_number,msme_udyam,address_line1,address_line2,city,state,country,pincode,status)\\\",\\\"                VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\\\\\\\";\\\",\\\"        $pdo->prepare($sql)->execute([\\\",\\\"          $party['code'],$party['name'],$party['legal_name'],$party['type'],$party['contact_name'],$party['email'],$party['phone'],\\\",\\\"          $party['gst_number'],$party['gst_state_code'],$party['gst_registration_type'],$party['pan_number'],$party['msme_udyam'],\\\",\\\"          $party['address_line1'],$party['address_line2'],$party['city'],$party['state'],$party['country'],$party['pincode'],$party['status']\\\",\\\"        ]);\\\",\\\"        $id = (int)$pdo->lastInsertId();\\\",\\\"        $isEdit = true;\\\",\\\"      }\\\",\\\"\\\",\\\"      // upsert party_commercials (PK party_id)\\\",\\\"      $st = $pdo->prepare(\\\\\\\"SELECT party_id FROM party_commercials WHERE party_id=?\\\\\\\");\\\",\\\"      $st->execute([$id]);\\\",\\\"      if ($st->fetchColumn()) {\\\",\\\"        $sql = \\\\\\\"UPDATE party_commercials SET payment_terms_days=?, credit_limit=?, tds_section=?, tds_rate=?, \\\",\\\"                tcs_applicable=?, e_invoice_required=?, reverse_charge_applicable=?, default_place_of_supply=?\\\",\\\"                WHERE party_id=?\\\\\\\";\\\",\\\"        $pdo->prepare($sql)->execute([\\\",\\\"          $commercial['payment_terms_days'], $commercial['credit_limit'], $commercial['tds_section'], $commercial['tds_rate'],\\\",\\\"          $commercial['tcs_applicable'], $commercial['e_invoice_required'], $commercial['reverse_charge_applicable'],\\\",\\\"          $commercial['default_place_of_supply'], $id\\\",\\\"        ]);\\\",\\\"      } else {\\\",\\\"        $sql = \\\\\\\"INSERT INTO party_commercials(party_id,payment_terms_days,credit_limit,tds_section,tds_rate,tcs_applicable,e_invoice_required,reverse_charge_applicable,default_place_of_supply)\\\",\\\"                VALUES (?,?,?,?,?,?,?,?,?)\\\\\\\";\\\",\\\"        $pdo->prepare($sql)->execute([\\\",\\\"          $id, $commercial['payment_terms_days'], $commercial['credit_limit'], $commercial['tds_section'], $commercial['tds_rate'],\\\",\\\"          $commercial['tcs_applicable'], $commercial['e_invoice_required'], $commercial['reverse_charge_applicable'],\\\",\\\"          $commercial['default_place_of_supply']\\\",\\\"        ]);\\\",\\\"      }\\\",\\\"\\\",\\\"      // existing banks for cleanup\\\",\\\"      $st = $pdo->prepare(\\\\\\\"SELECT id FROM party_bank_accounts WHERE party_id=?\\\\\\\");\\\",\\\"      $st->execute([$id]);\\\",\\\"      $existingBankIds = array_map('intval', array_column($st->fetchAll(PDO::FETCH_ASSOC), 'id'));\\\",\\\"\\\",\\\"      $keptBankIds = [];\\\",\\\"      $primaryBankIndex = is_array($bank_is_primary) && count($bank_is_primary) ? (int)array_keys($bank_is_primary)[0] : -1;\\\",\\\"\\\",\\\"      foreach ((array)$beneficiary_name as $i => $bn) {\\\",\\\"        $rowHasData = trim((string)$bn) !== '' || trim((string)($bank_name[$i] ?? '')) !== '' || trim((string)($account_number[$i] ?? '')) !== '';\\\",\\\"        if (!$rowHasData) continue;\\\",\\\"\\\",\\\"        $b = [\\\",\\\"          'id' => (int)($bank_ids[$i] ?? 0),\\\",\\\"          'beneficiary_name' => trim((string)$bn),\\\",\\\"          'bank_name' => trim((string)($bank_name[$i] ?? '')),\\\",\\\"          'branch' => trim((string)($branch[$i] ?? '')),\\\",\\\"          'account_number' => trim((string)($account_number[$i] ?? '')),\\\",\\\"          'ifsc' => trim((string)($ifsc[$i] ?? '')),\\\",\\\"          'account_type' => (string)($account_type[$i] ?? 'current'),\\\",\\\"          'is_primary' => ($i === $primaryBankIndex) ? 1 : 0,\\\",\\\"        ];\\\",\\\"\\\",\\\"        if ($b['id'] > 0) {\\\",\\\"          $sql = \\\\\\\"UPDATE party_bank_accounts SET beneficiary_name=?, bank_name=?, branch=?, account_number=?, ifsc=?, account_type=?, is_primary=? \\\",\\\"                  WHERE id=? AND party_id=?\\\\\\\";\\\",\\\"          $pdo->prepare($sql)->execute([\\\",\\\"            $b['beneficiary_name'],$b['bank_name'],$b['branch'],$b['account_number'],$b['ifsc'],$b['account_type'],$b['is_primary'],\\\",\\\"            $b['id'],$id\\\",\\\"          ]);\\\",\\\"          $keptBankIds[] = $b['id'];\\\",\\\"        } else {\\\",\\\"          $sql = \\\\\\\"INSERT INTO party_bank_accounts(party_id,beneficiary_name,bank_name,branch,account_number,ifsc,account_type,is_primary)\\\",\\\"                  VALUES (?,?,?,?,?,?,?,?)\\\\\\\";\\\",\\\"          $pdo->prepare($sql)->execute([\\\",\\\"            $id,$b['beneficiary_name'],$b['bank_name'],$b['branch'],$b['account_number'],$b['ifsc'],$b['account_type'],$b['is_primary']\\\",\\\"          ]);\\\",\\\"          $keptBankIds[] = (int)$pdo->lastInsertId();\\\",\\\"        }\\\",\\\"      }\\\",\\\"\\\",\\\"      // delete removed banks\\\",\\\"      $toDelete = array_diff($existingBankIds, $keptBankIds);\\\",\\\"      if ($toDelete) {\\\",\\\"        $in = implode(',', array_fill(0, count($toDelete), '?'));\\\",\\\"        $sql = \\\\\\\"DELETE FROM party_bank_accounts WHERE party_id=? AND id IN ($in)\\\\\\\";\\\",\\\"        $params = array_merge([$id], array_values($toDelete));\\\",\\\"        $pdo->prepare($sql)->execute($params);\\\",\\\"      }\\\",\\\"\\\",\\\"      // existing contacts for cleanup\\\",\\\"      $st = $pdo->prepare(\\\\\\\"SELECT id FROM party_contacts WHERE party_id=?\\\\\\\");\\\",\\\"      $st->execute([$id]);\\\",\\\"      $existingContactIds = array_map('intval', array_column($st->fetchAll(PDO::FETCH_ASSOC), 'id'));\\\",\\\"\\\",\\\"      $keptContactIds = [];\\\",\\\"      $primaryContactIndex = is_array($contact_is_primary) && count($contact_is_primary) ? (int)array_keys($contact_is_primary)[0] : -1;\\\",\\\"\\\",\\\"      foreach ((array)$contact_name as $i => $cn) {\\\",\\\"        $rowHasData = trim((string)$cn) !== '' || trim((string)($contact_phone[$i] ?? '')) !== '' || trim((string)($contact_email[$i] ?? '')) !== '';\\\",\\\"        if (!$rowHasData) continue;\\\",\\\"\\\",\\\"        $c = [\\\",\\\"          'id' => (int)($contact_ids[$i] ?? 0),\\\",\\\"          'name' => trim((string)$cn),\\\",\\\"          'email' => trim((string)($contact_email[$i] ?? '')),\\\",\\\"          'phone' => trim((string)($contact_phone[$i] ?? '')),\\\",\\\"          'role_title' => trim((string)($contact_role_title[$i] ?? '')),\\\",\\\"          'is_primary' => ($i === $primaryContactIndex) ? 1 : 0,\\\",\\\"        ];\\\",\\\"\\\",\\\"        if ($c['id'] > 0) {\\\",\\\"          $sql = \\\\\\\"UPDATE party_contacts SET name=?, email=?, phone=?, role_title=?, is_primary=? WHERE id=? AND party_id=?\\\\\\\";\\\",\\\"          $pdo->prepare($sql)->execute([\\\",\\\"            $c['name'],$c['email'],$c['phone'],$c['role_title'],$c['is_primary'], $c['id'],$id\\\",\\\"          ]);\\\",\\\"          $keptContactIds[] = $c['id'];\\\",\\\"        } else {\\\",\\\"          $sql = \\\\\\\"INSERT INTO party_contacts(party_id,name,email,phone,role_title,is_primary) VALUES (?,?,?,?,?,?)\\\\\\\";\\\",\\\"          $pdo->prepare($sql)->execute([$id,$c['name'],$c['email'],$c['phone'],$c['role_title'],$c['is_primary']]);\\\",\\\"          $keptContactIds[] = (int)$pdo->lastInsertId();\\\",\\\"        }\\\",\\\"      }\\\",\\\"\\\",\\\"      // delete removed contacts\\\",\\\"      $toDeleteC = array_diff($existingContactIds, $keptContactIds);\\\",\\\"      if ($toDeleteC) {\\\",\\\"        $in = implode(',', array_fill(0, count($toDeleteC), '?'));\\\",\\\"        $sql = \\\\\\\"DELETE FROM party_contacts WHERE party_id=? AND id IN ($in)\\\\\\\";\\\",\\\"        $params = array_merge([$id], array_values($toDeleteC));\\\",\\\"        $pdo->prepare($sql)->execute($params);\\\",\\\"      }\\\",\\\"\\\",\\\"      // audit (kernel signature: audit_log(PDO $pdo, string $entity, string $action, ?int $row_id, $payload))\\\",\\\"      audit_log($pdo, 'parties', $isEdit ? 'update' : 'create', $id, ['party'=>$party,'commercial'=>$commercial]);\\\",\\\"\\\",\\\"      $pdo->commit();\\\",\\\"      set_flash('success', 'Saved successfully.');\\\",\\\"      header(\\\\\\\"Location: parties_list.php?saved=1\\\\\\\");\\\",\\\"      exit;\\\",\\\"    }\\\",\\\"  } catch (Throwable $e) {\\\",\\\"    if ($pdo->inTransaction()) $pdo->rollBack();\\\",\\\"    $errors['db'] = $e->getMessage();\\\",\\\"  }\\\",\\\"}\\\",\\\"\\\",\\\"$pageTitle = $isEdit ? ('Edit Party: '.h($party['code'] ?: $party['name'])) : 'New Party';\\\",\\\"include __DIR__ . '/../ui/layout_start.php';\\\",\\\"?>\\\",\\\"<div class=\\\\\\\"container-fluid py-3\\\\\\\">\\\",\\\"  <div class=\\\\\\\"d-flex align-items-center justify-content-between mb-3\\\\\\\">\\\",\\\"    <h1 class=\\\\\\\"h4 mb-0\\\\\\\"><?= h($pageTitle) ?></h1>\\\",\\\"    <div>\\\",\\\"      <a href=\\\\\\\"parties_list.php\\\\\\\" class=\\\\\\\"btn btn-sm btn-outline-secondary\\\\\\\"><i class=\\\\\\\"bi bi-arrow-left\\\\\\\"></i> Back</a>\\\",\\\"    </div>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <?php if ($errors): ?>\\\",\\\"    <div class=\\\\\\\"alert alert-danger\\\\\\\">\\\",\\\"      <div class=\\\\\\\"fw-semibold mb-1\\\\\\\">Please fix the errors below:</div>\\\",\\\"      <ul class=\\\\\\\"mb-0\\\\\\\">\\\",\\\"        <?php foreach ($errors as $msg): ?>\\\",\\\"          <li><?= h($msg) ?></li>\\\",\\\"        <?php endforeach; ?>\\\",\\\"      </ul>\\\",\\\"    </div>\\\",\\\"  <?php endif; ?>\\\",\\\"\\\",\\\"  <form method=\\\\\\\"post\\\\\\\" action=\\\\\\\"\\\\\\\" novalidate>\\\",\\\"    <?= csrf_field() ?>\\\",\\\"\\\",\\\"    <ul class=\\\\\\\"nav nav-tabs\\\\\\\" role=\\\\\\\"tablist\\\\\\\">\\\",\\\"      <li class=\\\\\\\"nav-item\\\\\\\"><button class=\\\\\\\"nav-link active\\\\\\\" data-bs-toggle=\\\\\\\"tab\\\\\\\" data-bs-target=\\\\\\\"#tab-basic\\\\\\\" type=\\\\\\\"button\\\\\\\">Basic</button></li>\\\",\\\"      <li class=\\\\\\\"nav-item\\\\\\\"><button class=\\\\\\\"nav-link\\\\\\\" data-bs-toggle=\\\\\\\"tab\\\\\\\" data-bs-target=\\\\\\\"#tab-commercial\\\\\\\" type=\\\\\\\"button\\\\\\\">Commercials</button></li>\\\",\\\"      <li class=\\\\\\\"nav-item\\\\\\\"><button class=\\\\\\\"nav-link\\\\\\\" data-bs-toggle=\\\\\\\"tab\\\\\\\" data-bs-target=\\\\\\\"#tab-banks\\\\\\\" type=\\\\\\\"button\\\\\\\">Bank Details</button></li>\\\",\\\"      <li class=\\\\\\\"nav-item\\\\\\\"><button class=\\\\\\\"nav-link\\\\\\\" data-bs-toggle=\\\\\\\"tab\\\\\\\" data-bs-target=\\\\\\\"#tab-contacts\\\\\\\" type=\\\\\\\"button\\\\\\\">Contacts</button></li>\\\",\\\"      <?php if ($isEdit): ?>\\\",\\\"        <li class=\\\\\\\"nav-item\\\\\\\"><button class=\\\\\\\"nav-link\\\\\\\" data-bs-toggle=\\\\\\\"tab\\\\\\\" data-bs-target=\\\\\\\"#tab-attachments\\\\\\\" type=\\\\\\\"button\\\\\\\">Attachments</button></li>\\\",\\\"      <?php endif; ?>\\\",\\\"    </ul>\\\",\\\"\\\",\\\"    <div class=\\\\\\\"tab-content border border-top-0 p-3 rounded-bottom shadow-sm\\\\\\\">\\\",\\\"      <!-- BASIC -->\\\",\\\"      <div class=\\\\\\\"tab-pane fade show active\\\\\\\" id=\\\\\\\"tab-basic\\\\\\\">\\\",\\\"        <div class=\\\\\\\"row g-3\\\\\\\">\\\",\\\"          <div class=\\\\\\\"col-sm-4\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">Type</label>\\\",\\\"            <select name=\\\\\\\"type\\\\\\\" class=\\\\\\\"form-select\\\\\\\" required>\\\",\\\"              <?php foreach ($types as $t): ?>\\\",\\\"                <option value=\\\\\\\"<?= h($t) ?>\\\\\\\" <?= $party['type']===$t?'selected':'' ?>><?= ucfirst($t) ?></option>\\\",\\\"              <?php endforeach; ?>\\\",\\\"            </select>\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-4\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">Code</label>\\\",\\\"            <div class=\\\\\\\"input-group\\\\\\\">\\\",\\\"              <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"code\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h($party['code']) ?>\\\\\\\" placeholder=\\\\\\\"Auto\\\\\\\" readonly>\\\",\\\"              <button class=\\\\\\\"btn btn-outline-secondary\\\\\\\" type=\\\\\\\"button\\\\\\\" id=\\\\\\\"btnGen\\\\\\\">Auto</button>\\\",\\\"            </div>\\\",\\\"            <div class=\\\\\\\"form-text\\\\\\\">Generated on save. Use Auto to preview.</div>\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-8\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">Name <span class=\\\\\\\"text-danger\\\\\\\">*</span></label>\\\",\\\"            <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"name\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h($party['name']) ?>\\\\\\\" required>\\\",\\\"          </div>\\\",\\\"\\\",\\\"          <div class=\\\\\\\"col-sm-8\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">Legal Name</label>\\\",\\\"            <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"legal_name\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h($party['legal_name']) ?>\\\\\\\">\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-4\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">Contact Person</label>\\\",\\\"            <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"contact_name\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h($party['contact_name']) ?>\\\\\\\">\\\",\\\"          </div>\\\",\\\"\\\",\\\"          <div class=\\\\\\\"col-sm-4\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">Email</label>\\\",\\\"            <input type=\\\\\\\"email\\\\\\\" name=\\\\\\\"email\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h($party['email']) ?>\\\\\\\">\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-4\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">Phone</label>\\\",\\\"            <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"phone\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h($party['phone']) ?>\\\\\\\">\\\",\\\"          </div>\\\",\\\"\\\",\\\"          <div class=\\\\\\\"col-sm-4\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">GSTIN</label>\\\",\\\"            <div class=\\\\\\\"input-group\\\\\\\">\\\",\\\"              <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"gst_number\\\\\\\" id=\\\\\\\"gstin\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h($party['gst_number']) ?>\\\\\\\" maxlength=\\\\\\\"15\\\\\\\" placeholder=\\\\\\\"27ABCDE1234F1Z5\\\\\\\">\\\",\\\"              <button class=\\\\\\\"btn btn-outline-secondary\\\\\\\" type=\\\\\\\"button\\\\\\\" id=\\\\\\\"btnGST\\\\\\\">Verify</button>\\\",\\\"            </div>\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-4\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">GST State Code</label>\\\",\\\"            <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"gst_state_code\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h($party['gst_state_code']) ?>\\\\\\\" maxlength=\\\\\\\"2\\\\\\\">\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-4\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">GST Registration</label>\\\",\\\"            <select name=\\\\\\\"gst_registration_type\\\\\\\" class=\\\\\\\"form-select\\\\\\\">\\\",\\\"              <option value=\\\\\\\"\\\\\\\">\\\\u2014</option>\\\",\\\"              <?php foreach (['regular','composition','unregistered','consumer','sez'] as $opt): ?>\\\",\\\"                <option value=\\\\\\\"<?= h($opt) ?>\\\\\\\" <?= ($party['gst_registration_type']===$opt)?'selected':'' ?>><?= ucfirst($opt) ?></option>\\\",\\\"              <?php endforeach; ?>\\\",\\\"            </select>\\\",\\\"          </div>\\\",\\\"\\\",\\\"          <div class=\\\\\\\"col-sm-4\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">PAN</label>\\\",\\\"            <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"pan_number\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h($party['pan_number']) ?>\\\\\\\" maxlength=\\\\\\\"20\\\\\\\">\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-4\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">MSME Udyam</label>\\\",\\\"            <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"msme_udyam\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h($party['msme_udyam']) ?>\\\\\\\">\\\",\\\"          </div>\\\",\\\"\\\",\\\"          <div class=\\\\\\\"col-12\\\\\\\"><hr></div>\\\",\\\"\\\",\\\"          <div class=\\\\\\\"col-sm-8\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">Address Line 1</label>\\\",\\\"            <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"address_line1\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h($party['address_line1']) ?>\\\\\\\">\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-8\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">Address Line 2</label>\\\",\\\"            <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"address_line2\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h($party['address_line2']) ?>\\\\\\\">\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-4\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">City</label>\\\",\\\"            <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"city\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h($party['city']) ?>\\\\\\\">\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-4\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">State</label>\\\",\\\"            <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"state\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h($party['state']) ?>\\\\\\\">\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-4\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">Country</label>\\\",\\\"            <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"country\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h($party['country']) ?>\\\\\\\">\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-4\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">PIN</label>\\\",\\\"            <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"pincode\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h($party['pincode']) ?>\\\\\\\">\\\",\\\"          </div>\\\",\\\"\\\",\\\"          <div class=\\\\\\\"col-sm-4 form-check mt-4\\\\\\\">\\\",\\\"            <input type=\\\\\\\"checkbox\\\\\\\" class=\\\\\\\"form-check-input\\\\\\\" id=\\\\\\\"status\\\\\\\" name=\\\\\\\"status\\\\\\\" value=\\\\\\\"1\\\\\\\" <?= ((int)$party['status']===1)?'checked':'' ?>>\\\",\\\"            <label class=\\\\\\\"form-check-label\\\\\\\" for=\\\\\\\"status\\\\\\\">Active</label>\\\",\\\"          </div>\\\",\\\"        </div>\\\",\\\"      </div>\\\",\\\"\\\",\\\"      <!-- COMMERCIALS -->\\\",\\\"      <div class=\\\\\\\"tab-pane fade\\\\\\\" id=\\\\\\\"tab-commercial\\\\\\\">\\\",\\\"        <div class=\\\\\\\"row g-3\\\\\\\">\\\",\\\"          <div class=\\\\\\\"col-sm-3\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">Payment Terms (days)</label>\\\",\\\"            <input type=\\\\\\\"number\\\\\\\" name=\\\\\\\"payment_terms_days\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h((string)$commercial['payment_terms_days']) ?>\\\\\\\">\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-3\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">Credit Limit</label>\\\",\\\"            <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"credit_limit\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h((string)$commercial['credit_limit']) ?>\\\\\\\">\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-3\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">TDS Section</label>\\\",\\\"            <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"tds_section\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h((string)$commercial['tds_section']) ?>\\\\\\\" placeholder=\\\\\\\"194C\\\\\\\">\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-3\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">TDS Rate (%)</label>\\\",\\\"            <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"tds_rate\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h((string)$commercial['tds_rate']) ?>\\\\\\\">\\\",\\\"          </div>\\\",\\\"\\\",\\\"          <div class=\\\\\\\"col-sm-3 form-check mt-4\\\\\\\">\\\",\\\"            <input type=\\\\\\\"checkbox\\\\\\\" class=\\\\\\\"form-check-input\\\\\\\" id=\\\\\\\"tcs_applicable\\\\\\\" name=\\\\\\\"tcs_applicable\\\\\\\" value=\\\\\\\"1\\\\\\\" <?= $commercial['tcs_applicable']? 'checked':'' ?>>\\\",\\\"            <label class=\\\\\\\"form-check-label\\\\\\\" for=\\\\\\\"tcs_applicable\\\\\\\">TCS Applicable</label>\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-3 form-check mt-4\\\\\\\">\\\",\\\"            <input type=\\\\\\\"checkbox\\\\\\\" class=\\\\\\\"form-check-input\\\\\\\" id=\\\\\\\"e_invoice_required\\\\\\\" name=\\\\\\\"e_invoice_required\\\\\\\" value=\\\\\\\"1\\\\\\\" <?= $commercial['e_invoice_required']? 'checked':'' ?>>\\\",\\\"            <label class=\\\\\\\"form-check-label\\\\\\\" for=\\\\\\\"e_invoice_required\\\\\\\">E-Invoice Required</label>\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"col-sm-3 form-check mt-4\\\\\\\">\\\",\\\"            <input type=\\\\\\\"checkbox\\\\\\\" class=\\\\\\\"form-check-input\\\\\\\" id=\\\\\\\"reverse_charge_applicable\\\\\\\" name=\\\\\\\"reverse_charge_applicable\\\\\\\" value=\\\\\\\"1\\\\\\\" <?= $commercial['reverse_charge_applicable']? 'checked':'' ?>>\\\",\\\"            <label class=\\\\\\\"form-check-label\\\\\\\" for=\\\\\\\"reverse_charge_applicable\\\\\\\">Reverse Charge</label>\\\",\\\"          </div>\\\",\\\"\\\",\\\"          <div class=\\\\\\\"col-sm-6\\\\\\\">\\\",\\\"            <label class=\\\\\\\"form-label\\\\\\\">Default Place of Supply</label>\\\",\\\"            <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"default_place_of_supply\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h((string)$commercial['default_place_of_supply']) ?>\\\\\\\">\\\",\\\"          </div>\\\",\\\"        </div>\\\",\\\"      </div>\\\",\\\"\\\",\\\"      <!-- BANKS -->\\\",\\\"      <div class=\\\\\\\"tab-pane fade\\\\\\\" id=\\\\\\\"tab-banks\\\\\\\">\\\",\\\"        <div class=\\\\\\\"d-flex justify-content-between align-items-center mb-2\\\\\\\">\\\",\\\"          <strong>Bank Accounts</strong>\\\",\\\"          <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-sm btn-outline-primary\\\\\\\" id=\\\\\\\"addBank\\\\\\\"><i class=\\\\\\\"bi bi-plus\\\\\\\"></i> Add</button>\\\",\\\"        </div>\\\",\\\"        <div class=\\\\\\\"table-responsive\\\\\\\">\\\",\\\"          <table class=\\\\\\\"table table-sm align-middle\\\\\\\" id=\\\\\\\"bankTable\\\\\\\">\\\",\\\"            <thead class=\\\\\\\"table-light\\\\\\\">\\\",\\\"              <tr>\\\",\\\"                <th>Beneficiary</th>\\\",\\\"                <th>Bank</th>\\\",\\\"                <th>Branch</th>\\\",\\\"                <th>Account #</th>\\\",\\\"                <th>IFSC</th>\\\",\\\"                <th>Type</th>\\\",\\\"                <th>Primary</th>\\\",\\\"                <th style=\\\\\\\"width:48px;\\\\\\\"></th>\\\",\\\"              </tr>\\\",\\\"            </thead>\\\",\\\"            <tbody>\\\",\\\"              <?php $i=0; if ($banks): foreach ($banks as $b): ?>\\\",\\\"                <tr>\\\",\\\"                  <td>\\\",\\\"                    <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"bank_id[]\\\\\\\" value=\\\\\\\"<?= (int)$b['id'] ?>\\\\\\\">\\\",\\\"                    <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"beneficiary_name[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\" value=\\\\\\\"<?= h((string)$b['beneficiary_name']) ?>\\\\\\\">\\\",\\\"                  </td>\\\",\\\"                  <td><input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"bank_name[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\" value=\\\\\\\"<?= h((string)$b['bank_name']) ?>\\\\\\\"></td>\\\",\\\"                  <td><input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"branch[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\" value=\\\\\\\"<?= h((string)$b['branch']) ?>\\\\\\\"></td>\\\",\\\"                  <td><input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"account_number[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\" value=\\\\\\\"<?= h((string)$b['account_number']) ?>\\\\\\\"></td>\\\",\\\"                  <td><input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"ifsc[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\" value=\\\\\\\"<?= h((string)$b['ifsc']) ?>\\\\\\\"></td>\\\",\\\"                  <td>\\\",\\\"                    <select name=\\\\\\\"account_type[]\\\\\\\" class=\\\\\\\"form-select form-select-sm\\\\\\\">\\\",\\\"                      <?php foreach (['current','savings','overdraft','other'] as $opt): ?>\\\",\\\"                        <option value=\\\\\\\"<?= $opt ?>\\\\\\\" <?= ((string)$b['account_type']===$opt?'selected':'') ?>><?= ucfirst($opt) ?></option>\\\",\\\"                      <?php endforeach; ?>\\\",\\\"                    </select>\\\",\\\"                  </td>\\\",\\\"                  <td class=\\\\\\\"text-center\\\\\\\">\\\",\\\"                    <input type=\\\\\\\"radio\\\\\\\" name=\\\\\\\"bank_is_primary[<?= $i ?>]\\\\\\\" class=\\\\\\\"form-check-input\\\\\\\" <?= ((int)$b['is_primary']===1?'checked':'') ?>>\\\",\\\"                  </td>\\\",\\\"                  <td><button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-sm btn-outline-danger delRow\\\\\\\">&times;</button></td>\\\",\\\"                </tr>\\\",\\\"              <?php $i++; endforeach; endif; ?>\\\",\\\"              <!-- empty rows via JS -->\\\",\\\"            </tbody>\\\",\\\"          </table>\\\",\\\"        </div>\\\",\\\"      </div>\\\",\\\"\\\",\\\"      <!-- CONTACTS -->\\\",\\\"      <div class=\\\\\\\"tab-pane fade\\\\\\\" id=\\\\\\\"tab-contacts\\\\\\\">\\\",\\\"        <div class=\\\\\\\"d-flex justify-content-between align-items-center mb-2\\\\\\\">\\\",\\\"          <strong>Contacts</strong>\\\",\\\"          <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-sm btn-outline-primary\\\\\\\" id=\\\\\\\"addContact\\\\\\\"><i class=\\\\\\\"bi bi-plus\\\\\\\"></i> Add</button>\\\",\\\"        </div>\\\",\\\"        <div class=\\\\\\\"table-responsive\\\\\\\">\\\",\\\"          <table class=\\\\\\\"table table-sm align-middle\\\\\\\" id=\\\\\\\"contactTable\\\\\\\">\\\",\\\"            <thead class=\\\\\\\"table-light\\\\\\\">\\\",\\\"              <tr>\\\",\\\"                <th>Name</th>\\\",\\\"                <th>Email</th>\\\",\\\"                <th>Phone</th>\\\",\\\"                <th>Role</th>\\\",\\\"                <th>Primary</th>\\\",\\\"                <th style=\\\\\\\"width:48px;\\\\\\\"></th>\\\",\\\"              </tr>\\\",\\\"            </thead>\\\",\\\"            <tbody>\\\",\\\"              <?php $j=0; if ($contacts): foreach ($contacts as $c): ?>\\\",\\\"                <tr>\\\",\\\"                  <td>\\\",\\\"                    <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"contact_id[]\\\\\\\" value=\\\\\\\"<?= (int)$c['id'] ?>\\\\\\\">\\\",\\\"                    <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"contact_name[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\" value=\\\\\\\"<?= h((string)$c['name']) ?>\\\\\\\">\\\",\\\"                  </td>\\\",\\\"                  <td><input type=\\\\\\\"email\\\\\\\" name=\\\\\\\"contact_email[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\" value=\\\\\\\"<?= h((string)$c['email']) ?>\\\\\\\"></td>\\\",\\\"                  <td><input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"contact_phone[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\" value=\\\\\\\"<?= h((string)$c['phone']) ?>\\\\\\\"></td>\\\",\\\"                  <td><input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"contact_role_title[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\" value=\\\\\\\"<?= h((string)$c['role_title']) ?>\\\\\\\"></td>\\\",\\\"                  <td class=\\\\\\\"text-center\\\\\\\">\\\",\\\"                    <input type=\\\\\\\"radio\\\\\\\" name=\\\\\\\"contact_is_primary[<?= $j ?>]\\\\\\\" class=\\\\\\\"form-check-input\\\\\\\" <?= ((int)$c['is_primary']===1?'checked':'') ?>>\\\",\\\"                  </td>\\\",\\\"                  <td><button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-sm btn-outline-danger delRow\\\\\\\">&times;</button></td>\\\",\\\"                </tr>\\\",\\\"              <?php $j++; endforeach; endif; ?>\\\",\\\"            </tbody>\\\",\\\"          </table>\\\",\\\"        </div>\\\",\\\"      </div>\\\",\\\"\\\",\\\"      <!-- ATTACHMENTS -->\\\",\\\"      <?php if ($isEdit): ?>\\\",\\\"      <div class=\\\\\\\"tab-pane fade\\\\\\\" id=\\\\\\\"tab-attachments\\\\\\\">\\\",\\\"        <div class=\\\\\\\"card shadow-sm\\\\\\\">\\\",\\\"          <div class=\\\\\\\"card-body\\\\\\\">\\\",\\\"            <?php @include __DIR__ . '/../attachments/panel.php'; ?>\\\",\\\"          </div>\\\",\\\"        </div>\\\",\\\"      </div>\\\",\\\"      <?php endif; ?>\\\",\\\"    </div>\\\",\\\"\\\",\\\"    <div class=\\\\\\\"d-grid gap-2 d-sm-flex justify-content-end mt-3\\\\\\\">\\\",\\\"      <button class=\\\\\\\"btn btn-primary\\\\\\\"><i class=\\\\\\\"bi bi-save\\\\\\\"></i> Save</button>\\\",\\\"      <a class=\\\\\\\"btn btn-outline-secondary\\\\\\\" href=\\\\\\\"parties_list.php\\\\\\\">Cancel</a>\\\",\\\"    </div>\\\",\\\"  </form>\\\",\\\"</div>\\\",\\\"<?php include __DIR__ . '/../ui/layout_end.php'; ?>\\\",\\\"\\\",\\\"<script>\\\",\\\"/** Auto-code preview */\\\",\\\"document.getElementById('btnGen')?.addEventListener('click', async function(){\\\",\\\"  const typeSel = document.querySelector('select[name=\\\\\\\"type\\\\\\\"]');\\\",\\\"  const type = typeSel ? typeSel.value : '';\\\",\\\"  try {\\\",\\\"    const res = await fetch('party_next_code.php?type=' + encodeURIComponent(type));\\\",\\\"    const js = await res.json();\\\",\\\"    if (js.ok) document.querySelector('input[name=\\\\\\\"code\\\\\\\"]').value = js.code;\\\",\\\"    else alert(js.message || 'Failed to generate');\\\",\\\"  } catch (e) { alert('Network error'); }\\\",\\\"});\\\",\\\"\\\",\\\"/** GST helper */\\\",\\\"document.getElementById('btnGST')?.addEventListener('click', async function(){\\\",\\\"  const gstin = (document.getElementById('gstin')?.value || '').trim().toUpperCase();\\\",\\\"  if (!gstin) { alert('Enter GSTIN'); return; }\\\",\\\"  try {\\\",\\\"    const res = await fetch('party_gst_lookup.php?gstin=' + encodeURIComponent(gstin));\\\",\\\"    const js = await res.json();\\\",\\\"    if (js.ok) {\\\",\\\"      if (js.state_code) document.querySelector('input[name=\\\\\\\"gst_state_code\\\\\\\"]').value = js.state_code;\\\",\\\"      if (js.legal_name)  document.querySelector('input[name=\\\\\\\"legal_name\\\\\\\"]').value  = js.legal_name;\\\",\\\"    } else alert(js.message || 'GST lookup failed');\\\",\\\"  } catch (e) { alert('Network error'); }\\\",\\\"});\\\",\\\"\\\",\\\"/** Dynamic rows: Banks */\\\",\\\"(function(){\\\",\\\"  const tbody = document.querySelector('#bankTable tbody');\\\",\\\"  const addBtn = document.getElementById('addBank');\\\",\\\"  addBtn?.addEventListener('click', () => {\\\",\\\"    const idx = Date.now();\\\",\\\"    const tr = document.createElement('tr');\\\",\\\"    tr.innerHTML = `\\\",\\\"      <td><input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"bank_id[]\\\\\\\" value=\\\\\\\"0\\\\\\\">\\\",\\\"          <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"beneficiary_name[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\"></td>\\\",\\\"      <td><input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"bank_name[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\"></td>\\\",\\\"      <td><input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"branch[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\"></td>\\\",\\\"      <td><input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"account_number[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\"></td>\\\",\\\"      <td><input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"ifsc[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\"></td>\\\",\\\"      <td>\\\",\\\"        <select name=\\\\\\\"account_type[]\\\\\\\" class=\\\\\\\"form-select form-select-sm\\\\\\\">\\\",\\\"          <option value=\\\\\\\"current\\\\\\\">Current</option>\\\",\\\"          <option value=\\\\\\\"savings\\\\\\\">Savings</option>\\\",\\\"          <option value=\\\\\\\"overdraft\\\\\\\">Overdraft</option>\\\",\\\"          <option value=\\\\\\\"other\\\\\\\">Other</option>\\\",\\\"        </select>\\\",\\\"      </td>\\\",\\\"      <td class=\\\\\\\"text-center\\\\\\\"><input type=\\\\\\\"radio\\\\\\\" name=\\\\\\\"bank_is_primary[${idx}]\\\\\\\" class=\\\\\\\"form-check-input\\\\\\\"></td>\\\",\\\"      <td><button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-sm btn-outline-danger delRow\\\\\\\">&times;</button></td>\\\",\\\"    `;\\\",\\\"    tbody.appendChild(tr);\\\",\\\"  });\\\",\\\"  tbody?.addEventListener('click', (e) => {\\\",\\\"    if (e.target.closest('.delRow')) e.target.closest('tr').remove();\\\",\\\"  });\\\",\\\"})();\\\",\\\"\\\",\\\"/** Dynamic rows: Contacts */\\\",\\\"(function(){\\\",\\\"  const tbody = document.querySelector('#contactTable tbody');\\\",\\\"  const addBtn = document.getElementById('addContact');\\\",\\\"  addBtn?.addEventListener('click', () => {\\\",\\\"    const idx = Date.now();\\\",\\\"    const tr = document.createElement('tr');\\\",\\\"    tr.innerHTML = `\\\",\\\"      <td><input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"contact_id[]\\\\\\\" value=\\\\\\\"0\\\\\\\">\\\",\\\"          <input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"contact_name[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\"></td>\\\",\\\"      <td><input type=\\\\\\\"email\\\\\\\" name=\\\\\\\"contact_email[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\"></td>\\\",\\\"      <td><input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"contact_phone[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\"></td>\\\",\\\"      <td><input type=\\\\\\\"text\\\\\\\" name=\\\\\\\"contact_role_title[]\\\\\\\" class=\\\\\\\"form-control form-control-sm\\\\\\\"></td>\\\",\\\"      <td class=\\\\\\\"text-center\\\\\\\"><input type=\\\\\\\"radio\\\\\\\" name=\\\\\\\"contact_is_primary[${idx}]\\\\\\\" class=\\\\\\\"form-check-input\\\\\\\"></td>\\\",\\\"      <td><button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-sm btn-outline-danger delRow\\\\\\\">&times;</button></td>\\\",\\\"    `;\\\",\\\"    tbody.appendChild(tr);\\\",\\\"  });\\\",\\\"  tbody?.addEventListener('click', (e) => {\\\",\\\"    if (e.target.closest('.delRow')) e.target.closest('tr').remove();\\\",\\\"  });\\\",\\\"})();\\\",\\\"</script>\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/parties/party_next_code.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/parties/party_next_code.php */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"\\\",\\\"header('Content-Type: application/json');\\\",\\\"\\\",\\\"try {\\\",\\\"  require_login();\\\",\\\"\\\",\\\"  $type = strtolower(trim((string)($_GET['type'] ?? 'supplier')));\\\",\\\"  $valid = ['client','supplier','contractor','other'];\\\",\\\"  if (!in_array($type, $valid, true)) { throw new RuntimeException('Invalid type'); }\\\",\\\"\\\",\\\"  $pdo = db();\\\",\\\"\\\",\\\"  // Prefix from meta (fallback map)\\\",\\\"  $st = $pdo->prepare(\\\\\\\"SELECT code_prefix FROM party_type_meta WHERE type=?\\\\\\\");\\\",\\\"  $st->execute([$type]);\\\",\\\"  $prefix = (string)($st->fetchColumn() ?: '');\\\",\\\"  if ($prefix === '') {\\\",\\\"    $map = ['client'=>'CL','supplier'=>'SP','contractor'=>'CT','other'=>'OT'];\\\",\\\"    $prefix = $map[$type] ?? 'PT';\\\",\\\"  }\\\",\\\"\\\",\\\"  // Peek next (NO INCREMENT here)\\\",\\\"  $scope = 'party:' . $prefix;\\\",\\\"  $row = $pdo->prepare(\\\\\\\"SELECT current_value FROM party_sequences WHERE scope=?\\\\\\\");\\\",\\\"  $row->execute([$scope]);\\\",\\\"  $cur = (int)($row->fetchColumn() ?: 0);\\\",\\\"  $next = $cur + 1;\\\",\\\"\\\",\\\"  // Preserve historical hyphen style per prefix (e.g., CL-0001 vs SP0023)\\\",\\\"  $cst = $pdo->prepare(\\\\\\\"SELECT code FROM parties WHERE code LIKE ? ORDER BY id DESC LIMIT 1\\\\\\\");\\\",\\\"  $cst->execute([$prefix . '%']);\\\",\\\"  $last = (string)($cst->fetchColumn() ?: '');\\\",\\\"  $hyphen = $last && strpos($last, '-') !== false;\\\",\\\"  if (!$last && $type === 'client') $hyphen = true;\\\",\\\"\\\",\\\"  $code = $prefix . ($hyphen?'-':'') . str_pad((string)$next, 4, '0', STR_PAD_LEFT);\\\",\\\"\\\",\\\"  echo json_encode(['ok'=>true,'code'=>$code]);\\\",\\\"} catch (Throwable $e) {\\\",\\\"  echo json_encode(['ok'=>false,'message'=>$e->getMessage()]);\\\",\\\"}\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/parties/parties_list.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/parties/parties_list.php */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('parties.view');\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"\\\",\\\"$q = trim($_GET['q'] ?? '');\\\",\\\"$type = trim($_GET['type'] ?? '');\\\",\\\"$types = ['client','supplier','contractor','other'];\\\",\\\"if ($type !== '' && !in_array($type, $types, true)) $type = '';\\\",\\\"\\\",\\\"// Build WHERE dynamically (avoid collation issues)\\\",\\\"$where = [];\\\",\\\"$params = [];\\\",\\\"if ($q !== '') {\\\",\\\"  $where[] = \\\\\\\"(name LIKE ? OR code LIKE ? OR phone LIKE ? OR gst_number LIKE ? OR city LIKE ? OR state LIKE ?)\\\\\\\";\\\",\\\"  $like = '%'.$q.'%';\\\",\\\"  array_push($params, $like,$like,$like,$like,$like,$like);\\\",\\\"}\\\",\\\"if ($type !== '') { $where[] = \\\\\\\"type = ?\\\\\\\"; $params[] = $type; }\\\",\\\"\\\",\\\"$sql = \\\\\\\"SELECT id, code, name, type, phone, gst_number, city, state, status\\\",\\\"        FROM parties\\\\\\\"\\\",\\\"      . (count($where) ? \\\\\\\" WHERE \\\\\\\".implode(\\\\\\\" AND \\\\\\\", $where) : \\\\\\\"\\\\\\\")\\\",\\\"      . \\\\\\\" ORDER BY id DESC LIMIT 200\\\\\\\";\\\",\\\"\\\",\\\"$st = $pdo->prepare($sql);\\\",\\\"$st->execute($params);\\\",\\\"$rows = $st->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"$pageTitle = 'Parties';\\\",\\\"include __DIR__ . '/../ui/layout_start.php';\\\",\\\"?>\\\",\\\"<div class=\\\\\\\"container-fluid py-3\\\\\\\">\\\",\\\"  <div class=\\\\\\\"d-flex align-items-center justify-content-between mb-3\\\\\\\">\\\",\\\"    <h1 class=\\\\\\\"h4 mb-0\\\\\\\"><?= h($pageTitle) ?></h1>\\\",\\\"    <div class=\\\\\\\"d-flex gap-2\\\\\\\">\\\",\\\"      <?php if (has_permission('parties.manage')): ?>\\\",\\\"        <a href=\\\\\\\"parties_form.php\\\\\\\" class=\\\\\\\"btn btn-primary btn-sm\\\\\\\"><i class=\\\\\\\"bi bi-plus-circle\\\\\\\"></i> New Party</a>\\\",\\\"      <?php endif; ?>\\\",\\\"    </div>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <form class=\\\\\\\"row g-2 mb-3\\\\\\\" method=\\\\\\\"get\\\\\\\" action=\\\\\\\"\\\\\\\">\\\",\\\"    <div class=\\\\\\\"col-sm-5 col-md-4 col-lg-3\\\\\\\">\\\",\\\"      <input type=\\\\\\\"text\\\\\\\" class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"q\\\\\\\" value=\\\\\\\"<?= h($q) ?>\\\\\\\" placeholder=\\\\\\\"Search name, code, phone, GST, city, state\\\\\\\">\\\",\\\"    </div>\\\",\\\"    <div class=\\\\\\\"col-sm-4 col-md-3 col-lg-2\\\\\\\">\\\",\\\"      <select name=\\\\\\\"type\\\\\\\" class=\\\\\\\"form-select\\\\\\\">\\\",\\\"        <option value=\\\\\\\"\\\\\\\">All types</option>\\\",\\\"        <?php foreach ($types as $t): ?>\\\",\\\"          <option value=\\\\\\\"<?= h($t) ?>\\\\\\\" <?= $type===$t?'selected':'' ?>><?= ucfirst($t) ?></option>\\\",\\\"        <?php endforeach; ?>\\\",\\\"      </select>\\\",\\\"    </div>\\\",\\\"    <div class=\\\\\\\"col-auto\\\\\\\">\\\",\\\"      <button class=\\\\\\\"btn btn-outline-secondary\\\\\\\"><i class=\\\\\\\"bi bi-search\\\\\\\"></i> Filter</button>\\\",\\\"    </div>\\\",\\\"  </form>\\\",\\\"\\\",\\\"  <?php if (empty($rows)): ?>\\\",\\\"    <div class=\\\\\\\"alert alert-warning\\\\\\\">No parties found.</div>\\\",\\\"  <?php else: ?>\\\",\\\"    <div class=\\\\\\\"table-responsive\\\\\\\">\\\",\\\"      <table class=\\\\\\\"table table-sm align-middle\\\\\\\">\\\",\\\"        <thead class=\\\\\\\"table-light\\\\\\\">\\\",\\\"          <tr>\\\",\\\"            <th style=\\\\\\\"width:120px\\\\\\\">Code</th>\\\",\\\"            <th>Name</th>\\\",\\\"            <th style=\\\\\\\"width:120px\\\\\\\">Type</th>\\\",\\\"            <th style=\\\\\\\"width:140px\\\\\\\">Phone</th>\\\",\\\"            <th style=\\\\\\\"width:160px\\\\\\\">GST</th>\\\",\\\"            <th style=\\\\\\\"width:180px\\\\\\\">Location</th>\\\",\\\"            <th style=\\\\\\\"width:90px\\\\\\\">Status</th>\\\",\\\"            <th style=\\\\\\\"width:140px\\\\\\\">Actions</th>\\\",\\\"          </tr>\\\",\\\"        </thead>\\\",\\\"        <tbody>\\\",\\\"          <?php foreach ($rows as $r): ?>\\\",\\\"            <tr>\\\",\\\"              <td><span class=\\\\\\\"badge bg-secondary-subtle border text-body\\\\\\\"><?= h($r['code']) ?></span></td>\\\",\\\"              <td><?= h($r['name']) ?></td>\\\",\\\"              <td><?= ucfirst(h($r['type'])) ?></td>\\\",\\\"              <td><?= h($r['phone'] ?? '') ?></td>\\\",\\\"              <td><?= h($r['gst_number'] ?? '') ?></td>\\\",\\\"              <td><?= h(trim(($r['city'] ?? '') . ', ' . ($r['state'] ?? ''), ', ')) ?></td>\\\",\\\"              <td>\\\",\\\"                <?php if ((int)$r['status'] === 1): ?>\\\",\\\"                  <span class=\\\\\\\"badge bg-success-subtle border text-success-emphasis\\\\\\\">Active</span>\\\",\\\"                <?php else: ?>\\\",\\\"                  <span class=\\\\\\\"badge bg-secondary-subtle border text-body\\\\\\\">Inactive</span>\\\",\\\"                <?php endif; ?>\\\",\\\"              </td>\\\",\\\"              <td>\\\",\\\"                <div class=\\\\\\\"btn-group btn-group-sm\\\\\\\">\\\",\\\"                  <?php if (has_permission('parties.manage')): ?>\\\",\\\"                    <a class=\\\\\\\"btn btn-outline-secondary\\\\\\\" href=\\\\\\\"parties_form.php?id=<?= (int)$r['id'] ?>\\\\\\\" title=\\\\\\\"Edit\\\\\\\">\\\",\\\"                      <i class=\\\\\\\"bi bi-pencil-square\\\\\\\"></i> Edit\\\",\\\"                    </a>\\\",\\\"                  <?php endif; ?>\\\",\\\"                </div>\\\",\\\"              </td>\\\",\\\"            </tr>\\\",\\\"          <?php endforeach; ?>\\\",\\\"        </tbody>\\\",\\\"      </table>\\\",\\\"    </div>\\\",\\\"  <?php endif; ?>\\\",\\\"</div>\\\",\\\"<?php include __DIR__ . '/../ui/layout_end.php'; ?>\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/file_report.php\\\": [\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"// file_report.php\\\",\\\"// Usage: place in the folder you want to scan and open in browser.\\\",\\\"// Options (GET):\\\",\\\"//  - path=/absolute/or/relative/path  (default: current directory)\\\",\\\"//  - format=html|csv|json              (default: html)\\\",\\\"//  - max_depth=N                       (default: 0 = unlimited)\\\",\\\"//  - hide_dotfiles=1                   (hide files/dirs starting with .)\\\",\\\"//  - follow_symlinks=1                 (follow symlinks; default no)\\\",\\\"//  - download=1                        (force download for csv/json)\\\",\\\"// Example: file_report.php?format=csv&hide_dotfiles=1\\\",\\\"\\\",\\\"set_time_limit(0);\\\",\\\"ini_set('memory_limit', '-1');\\\",\\\"\\\",\\\"$root = (string)($_GET['path'] ?? getcwd());\\\",\\\"$format = (string)($_GET['format'] ?? 'html');\\\",\\\"$maxDepth = isset($_GET['max_depth']) ? (int)$_GET['max_depth'] : 0;\\\",\\\"$hideDot = isset($_GET['hide_dotfiles']) && in_array($_GET['hide_dotfiles'], ['1','true','on'], true);\\\",\\\"$followLinks = isset($_GET['follow_symlinks']) && in_array($_GET['follow_symlinks'], ['1','true','on'], true);\\\",\\\"\\\",\\\"// Validate path\\\",\\\"if (!is_dir($root)) {\\\",\\\"    http_response_code(400);\\\",\\\"    echo \\\\\\\"Path not found or not a directory: \\\\\\\" . htmlspecialchars($root);\\\",\\\"    exit;\\\",\\\"}\\\",\\\"\\\",\\\"// Helper: human readable size\\\",\\\"function hrsize(float $bytes): string {\\\",\\\"    $units = ['B','KB','MB','GB','TB'];\\\",\\\"    $i = 0;\\\",\\\"    while ($bytes >= 1024 && $i < count($units)-1) { $bytes /= 1024; $i++; }\\\",\\\"    return round($bytes, ($i ? 2 : 0)) . ' ' . $units[$i];\\\",\\\"}\\\",\\\"\\\",\\\"// Recursively walk directory\\\",\\\"function scan_dir(string $root, bool $hideDot, int $maxDepth, bool $followLinks): array {\\\",\\\"    $results = [];\\\",\\\"    // Iterator flags\\\",\\\"    $flags = \\\\\\\\FilesystemIterator::SKIP_DOTS;\\\",\\\"    if ($followLinks) $flags |= \\\\\\\\FilesystemIterator::FOLLOW_SYMLINKS;\\\",\\\"    $directory = new \\\\\\\\RecursiveDirectoryIterator($root, $flags);\\\",\\\"\\\",\\\"    if ($maxDepth > 0) {\\\",\\\"        $iter = new \\\\\\\\RecursiveIteratorIterator($directory, \\\\\\\\RecursiveIteratorIterator::SELF_FIRST);\\\",\\\"        $iter->setMaxDepth($maxDepth);\\\",\\\"    } else {\\\",\\\"        $iter = new \\\\\\\\RecursiveIteratorIterator($directory, \\\\\\\\RecursiveIteratorIterator::SELF_FIRST);\\\",\\\"    }\\\",\\\"\\\",\\\"    foreach ($iter as $fileinfo) {\\\",\\\"        /** @var SplFileInfo $fileinfo */\\\",\\\"        $path = $fileinfo->getPathname();\\\",\\\"        $basename = $fileinfo->getBasename();\\\",\\\"        if ($hideDot && strlen($basename) > 0 && $basename[0] === '.') continue;\\\",\\\"\\\",\\\"        // Skip broken symlinks if followLinks is false (RecursiveDirectoryIterator will already handle)\\\",\\\"        if ($fileinfo->isLink() && !$followLinks) {\\\",\\\"            // treat as file entry with link info\\\",\\\"            $results[] = [\\\",\\\"                'type' => 'link',\\\",\\\"                'path' => $path,\\\",\\\"                'name' => $basename,\\\",\\\"                'size' => 0,\\\",\\\"                'modified' => date('c', $fileinfo->getMTime() ?: time()),\\\",\\\"                'perms' => substr(sprintf('%o', $fileinfo->getPerms()), -4),\\\",\\\"                'is_dir' => $fileinfo->isDir(),\\\",\\\"            ];\\\",\\\"            continue;\\\",\\\"        }\\\",\\\"\\\",\\\"        $isDir = $fileinfo->isDir();\\\",\\\"        $size = $isDir ? 0.0 : (float)$fileinfo->getSize();\\\",\\\"        $results[] = [\\\",\\\"            'type' => $isDir ? 'dir' : 'file',\\\",\\\"            'path' => $path,\\\",\\\"            'name' => $basename,\\\",\\\"            'size' => $size,\\\",\\\"            'modified' => date('c', $fileinfo->getMTime()),\\\",\\\"            'perms' => substr(sprintf('%o', $fileinfo->getPerms()), -4),\\\",\\\"            'is_dir' => $isDir,\\\",\\\"        ];\\\",\\\"    }\\\",\\\"\\\",\\\"    return $results;\\\",\\\"}\\\",\\\"\\\",\\\"// Collect results\\\",\\\"$items = scan_dir($root, $hideDot, $maxDepth, $followLinks);\\\",\\\"$totalFiles = 0;\\\",\\\"$totalDirs = 0;\\\",\\\"$totalBytes = 0.0;\\\",\\\"foreach ($items as $it) {\\\",\\\"    if ($it['type'] === 'dir') $totalDirs++;\\\",\\\"    else $totalFiles++;\\\",\\\"    $totalBytes += $it['size'];\\\",\\\"}\\\",\\\"\\\",\\\"// Output in requested format\\\",\\\"if ($format === 'csv' || $format === 'json') {\\\",\\\"    $download = isset($_GET['download']) && in_array($_GET['download'], ['1','true','on'], true);\\\",\\\"    if ($format === 'csv') {\\\",\\\"        if ($download) {\\\",\\\"            header('Content-Type: text/csv; charset=utf-8');\\\",\\\"            header('Content-Disposition: attachment; filename=\\\\\\\"file_report.csv\\\\\\\"');\\\",\\\"        } else {\\\",\\\"            header('Content-Type: text/csv; charset=utf-8');\\\",\\\"        }\\\",\\\"        $out = fopen('php://output', 'w');\\\",\\\"        fputcsv($out, ['type','path','name','size_bytes','size_readable','modified','perms','is_dir']);\\\",\\\"        foreach ($items as $r) {\\\",\\\"            fputcsv($out, [\\\",\\\"                $r['type'],\\\",\\\"                $r['path'],\\\",\\\"                $r['name'],\\\",\\\"                (string)$r['size'],\\\",\\\"                hrsize($r['size']),\\\",\\\"                $r['modified'],\\\",\\\"                $r['perms'],\\\",\\\"                $r['is_dir'] ? '1':'0'\\\",\\\"            ]);\\\",\\\"        }\\\",\\\"        fclose($out);\\\",\\\"        exit;\\\",\\\"    } else { // json\\\",\\\"        if ($download) {\\\",\\\"            header('Content-Type: application/json; charset=utf-8');\\\",\\\"            header('Content-Disposition: attachment; filename=\\\\\\\"file_report.json\\\\\\\"');\\\",\\\"        } else {\\\",\\\"            header('Content-Type: application/json; charset=utf-8');\\\",\\\"        }\\\",\\\"        echo json_encode([\\\",\\\"            'scanned_at' => date('c'),\\\",\\\"            'root' => $root,\\\",\\\"            'summary' => [\\\",\\\"                'files' => $totalFiles,\\\",\\\"                'directories' => $totalDirs,\\\",\\\"                'total_bytes' => $totalBytes,\\\",\\\"                'total_readable' => hrsize($totalBytes)\\\",\\\"            ],\\\",\\\"            'items' => $items\\\",\\\"        ], JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES);\\\",\\\"        exit;\\\",\\\"    }\\\",\\\"}\\\",\\\"\\\",\\\"// Default: HTML output (Bootstrap 5)\\\",\\\"?><!doctype html>\\\",\\\"<html lang=\\\\\\\"en\\\\\\\">\\\",\\\"<head>\\\",\\\"  <meta charset=\\\\\\\"utf-8\\\\\\\">\\\",\\\"  <meta name=\\\\\\\"viewport\\\\\\\" content=\\\\\\\"width=device-width,initial-scale=1\\\\\\\">\\\",\\\"  <title>File report \\\\u2014 <?= htmlspecialchars($root) ?></title>\\\",\\\"  <link href=\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\\\\\\\" rel=\\\\\\\"stylesheet\\\\\\\">\\\",\\\"  <style>\\\",\\\"    body { padding: 18px; }\\\",\\\"    pre.small { font-size: .85rem; white-space: pre-wrap; }\\\",\\\"    .mono { font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, \\\\\\\"Roboto Mono\\\\\\\", monospace; font-size:.9rem; }\\\",\\\"    td.path { max-width: 520px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }\\\",\\\"  </style>\\\",\\\"</head>\\\",\\\"<body>\\\",\\\"<div class=\\\\\\\"container-fluid\\\\\\\">\\\",\\\"  <div class=\\\\\\\"d-flex align-items-center mb-3\\\\\\\">\\\",\\\"    <h3 class=\\\\\\\"me-auto\\\\\\\">File report</h3>\\\",\\\"    <div class=\\\\\\\"text-muted\\\\\\\">Scanned: <strong><?= date('Y-m-d H:i:s') ?></strong></div>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"card mb-3\\\\\\\">\\\",\\\"    <div class=\\\\\\\"card-body\\\\\\\">\\\",\\\"      <form class=\\\\\\\"row g-2\\\\\\\" method=\\\\\\\"get\\\\\\\">\\\",\\\"        <div class=\\\\\\\"col-md-6\\\\\\\">\\\",\\\"          <label class=\\\\\\\"form-label\\\\\\\">Path to scan</label>\\\",\\\"          <input name=\\\\\\\"path\\\\\\\" class=\\\\\\\"form-control mono\\\\\\\" value=\\\\\\\"<?= htmlspecialchars($root) ?>\\\\\\\">\\\",\\\"          <div class=\\\\\\\"form-text\\\\\\\">Absolute or relative path. Default is current directory (where script lives).</div>\\\",\\\"        </div>\\\",\\\"\\\",\\\"        <div class=\\\\\\\"col-md-2\\\\\\\">\\\",\\\"          <label class=\\\\\\\"form-label\\\\\\\">Format</label>\\\",\\\"          <select name=\\\\\\\"format\\\\\\\" class=\\\\\\\"form-select\\\\\\\">\\\",\\\"            <option value=\\\\\\\"html\\\\\\\" <?= $format==='html'?'selected':'' ?>>HTML</option>\\\",\\\"            <option value=\\\\\\\"csv\\\\\\\" <?= $format==='csv'?'selected':'' ?>>CSV</option>\\\",\\\"            <option value=\\\\\\\"json\\\\\\\" <?= $format==='json'?'selected':'' ?>>JSON</option>\\\",\\\"          </select>\\\",\\\"        </div>\\\",\\\"\\\",\\\"        <div class=\\\\\\\"col-md-1\\\\\\\">\\\",\\\"          <label class=\\\\\\\"form-label\\\\\\\">Max depth</label>\\\",\\\"          <input name=\\\\\\\"max_depth\\\\\\\" type=\\\\\\\"number\\\\\\\" min=\\\\\\\"0\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= $maxDepth ?>\\\\\\\">\\\",\\\"        </div>\\\",\\\"\\\",\\\"        <div class=\\\\\\\"col-md-1\\\\\\\">\\\",\\\"          <label class=\\\\\\\"form-label\\\\\\\">Hide dotfiles</label>\\\",\\\"          <select name=\\\\\\\"hide_dotfiles\\\\\\\" class=\\\\\\\"form-select\\\\\\\">\\\",\\\"            <option value=\\\\\\\"0\\\\\\\" <?= !$hideDot?'selected':'' ?>>No</option>\\\",\\\"            <option value=\\\\\\\"1\\\\\\\" <?= $hideDot?'selected':'' ?>>Yes</option>\\\",\\\"          </select>\\\",\\\"        </div>\\\",\\\"\\\",\\\"        <div class=\\\\\\\"col-md-2 d-flex align-items-end gap-2\\\\\\\">\\\",\\\"          <button class=\\\\\\\"btn btn-primary\\\\\\\">Scan</button>\\\",\\\"          <a class=\\\\\\\"btn btn-outline-secondary\\\\\\\" href=\\\\\\\"?<?= http_build_query(array_merge($_GET, ['format'=>'csv','download'=>'1'])) ?>\\\\\\\">Download CSV</a>\\\",\\\"          <a class=\\\\\\\"btn btn-outline-secondary\\\\\\\" href=\\\\\\\"?<?= http_build_query(array_merge($_GET, ['format'=>'json','download'=>'1'])) ?>\\\\\\\">Download JSON</a>\\\",\\\"        </div>\\\",\\\"      </form>\\\",\\\"    </div>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"row mb-3\\\\\\\">\\\",\\\"    <div class=\\\\\\\"col\\\\\\\">\\\",\\\"      <div class=\\\\\\\"card\\\\\\\">\\\",\\\"        <div class=\\\\\\\"card-body\\\\\\\">\\\",\\\"          <h5 class=\\\\\\\"card-title\\\\\\\">Summary</h5>\\\",\\\"          <div class=\\\\\\\"row\\\\\\\">\\\",\\\"            <div class=\\\\\\\"col-sm-3\\\\\\\"><strong>Root</strong><div class=\\\\\\\"mono small\\\\\\\"><?= htmlspecialchars($root) ?></div></div>\\\",\\\"            <div class=\\\\\\\"col-sm-2\\\\\\\"><strong>Files</strong><div><?= number_format($totalFiles) ?></div></div>\\\",\\\"            <div class=\\\\\\\"col-sm-2\\\\\\\"><strong>Directories</strong><div><?= number_format($totalDirs) ?></div></div>\\\",\\\"            <div class=\\\\\\\"col-sm-2\\\\\\\"><strong>Total size</strong><div><?= hrsize($totalBytes) ?></div></div>\\\",\\\"            <div class=\\\\\\\"col-sm-3\\\\\\\"><strong>Options</strong>\\\",\\\"              <div class=\\\\\\\"small\\\\\\\">Max depth: <?= $maxDepth ?: 'unlimited' ?><br>Hide dotfiles: <?= $hideDot ? 'yes' : 'no' ?></div>\\\",\\\"            </div>\\\",\\\"          </div>\\\",\\\"        </div>\\\",\\\"      </div>\\\",\\\"    </div>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"table-responsive\\\\\\\" style=\\\\\\\"max-height:60vh; overflow:auto;\\\\\\\">\\\",\\\"    <table class=\\\\\\\"table table-sm table-hover align-middle\\\\\\\">\\\",\\\"      <thead class=\\\\\\\"table-light sticky-top\\\\\\\">\\\",\\\"        <tr>\\\",\\\"          <th>Type</th>\\\",\\\"          <th>Path</th>\\\",\\\"          <th>Name</th>\\\",\\\"          <th class=\\\\\\\"text-end\\\\\\\">Size</th>\\\",\\\"          <th>Modified</th>\\\",\\\"          <th>Perms</th>\\\",\\\"        </tr>\\\",\\\"      </thead>\\\",\\\"      <tbody>\\\",\\\"        <?php foreach ($items as $r): ?>\\\",\\\"          <tr>\\\",\\\"            <td class=\\\\\\\"align-middle\\\\\\\">\\\",\\\"              <?php if ($r['type'] === 'dir'): ?>\\\",\\\"                <span class=\\\\\\\"badge bg-primary\\\\\\\">DIR</span>\\\",\\\"              <?php elseif ($r['type'] === 'link'): ?>\\\",\\\"                <span class=\\\\\\\"badge bg-warning text-dark\\\\\\\">LINK</span>\\\",\\\"              <?php else: ?>\\\",\\\"                <span class=\\\\\\\"badge bg-secondary\\\\\\\">FILE</span>\\\",\\\"              <?php endif; ?>\\\",\\\"            </td>\\\",\\\"            <td class=\\\\\\\"path mono\\\\\\\" title=\\\\\\\"<?= htmlspecialchars($r['path']) ?>\\\\\\\"><?= htmlspecialchars($r['path']) ?></td>\\\",\\\"            <td><?= htmlspecialchars($r['name']) ?></td>\\\",\\\"            <td class=\\\\\\\"text-end\\\\\\\"><?= $r['is_dir'] ? '-' : hrsize($r['size']) ?></td>\\\",\\\"            <td><?= htmlspecialchars($r['modified']) ?></td>\\\",\\\"            <td><?= htmlspecialchars($r['perms']) ?></td>\\\",\\\"          </tr>\\\",\\\"        <?php endforeach; ?>\\\",\\\"      </tbody>\\\",\\\"    </table>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <footer class=\\\\\\\"text-muted small mt-3\\\\\\\">\\\",\\\"    Run locally. Scan can be slow for very large trees. If you want, I can add filters (extensions only), grouping by folder, or a CSV scheduled export.\\\",\\\"  </footer>\\\",\\\"</div>\\\",\\\"\\\",\\\"<script src=\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\\\\\\\"></script>\\\",\\\"</body>\\\",\\\"</html>\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/diag_min.php\\\": [\\\"<?php\\\",\\\"// PATH: /public_html/_diag_min.php\\\",\\\"header('Content-Type: text/plain; charset=utf-8');\\\",\\\"echo \\\\\\\"PHP works\\\\\\\\n\\\\\\\";\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/ui/partials/notifications_bell.php\\\": [\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"/**\\\",\\\" * Pure UI notifications bell. No DB calls here.\\\",\\\" * If $unread_count and $unread_items are set by the page, we render them.\\\",\\\" * Otherwise, show a graceful empty state.\\\",\\\" */\\\",\\\"$unread_count = isset($unread_count) && is_numeric($unread_count) ? (int)$unread_count : 0;\\\",\\\"$items = isset($unread_items) && is_array($unread_items) ? $unread_items : [];\\\",\\\"?>\\\",\\\"<div class=\\\\\\\"dropdown\\\\\\\">\\\",\\\"  <a class=\\\\\\\"btn btn-outline-secondary btn-sm position-relative\\\\\\\" href=\\\\\\\"#\\\\\\\" id=\\\\\\\"notifDropdown\\\\\\\"\\\",\\\"     role=\\\\\\\"button\\\\\\\" data-bs-toggle=\\\\\\\"dropdown\\\\\\\" aria-expanded=\\\\\\\"false\\\\\\\" title=\\\\\\\"Notifications\\\\\\\">\\\",\\\"    <i class=\\\\\\\"bi bi-bell\\\\\\\"></i>\\\",\\\"    <?php if ($unread_count > 0): ?>\\\",\\\"      <span class=\\\\\\\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\\\\\\\">\\\",\\\"        <?= (int)$unread_count ?>\\\",\\\"      </span>\\\",\\\"    <?php endif; ?>\\\",\\\"  </a>\\\",\\\"  <div class=\\\\\\\"dropdown-menu dropdown-menu-end p-0 shadow\\\\\\\" aria-labelledby=\\\\\\\"notifDropdown\\\\\\\" style=\\\\\\\"min-width: 360px;\\\\\\\">\\\",\\\"    <div class=\\\\\\\"list-group list-group-flush\\\\\\\">\\\",\\\"      <?php if (!$unread_count || empty($items)): ?>\\\",\\\"        <div class=\\\\\\\"p-3 text-muted\\\\\\\">No new notifications.</div>\\\",\\\"      <?php else: ?>\\\",\\\"        <?php foreach ($items as $n): ?>\\\",\\\"          <div class=\\\\\\\"list-group-item\\\\\\\">\\\",\\\"            <div class=\\\\\\\"d-flex justify-content-between align-items-start\\\\\\\">\\\",\\\"              <div class=\\\\\\\"me-2\\\\\\\">\\\",\\\"                <div class=\\\\\\\"fw-semibold\\\\\\\"><?= htmlspecialchars((string)($n['title'] ?? 'Notification'), ENT_QUOTES, 'UTF-8') ?></div>\\\",\\\"                <small class=\\\\\\\"text-muted\\\\\\\"><?= htmlspecialchars((string)($n['time'] ?? ''), ENT_QUOTES, 'UTF-8') ?></small>\\\",\\\"              </div>\\\",\\\"              <?php if (!empty($n['link'])): ?>\\\",\\\"                <a class=\\\\\\\"btn btn-sm btn-primary\\\\\\\" href=\\\\\\\"<?= htmlspecialchars((string)$n['link'], ENT_QUOTES, 'UTF-8') ?>\\\\\\\">Open</a>\\\",\\\"              <?php endif; ?>\\\",\\\"            </div>\\\",\\\"          </div>\\\",\\\"        <?php endforeach; ?>\\\",\\\"      <?php endif; ?>\\\",\\\"    </div>\\\",\\\"    <div class=\\\\\\\"p-2 text-end\\\\\\\">\\\",\\\"      <a class=\\\\\\\"btn btn-light btn-sm\\\\\\\" href=\\\\\\\"/notifications/center.php\\\\\\\"><i class=\\\\\\\"bi bi-bell-fill me-1\\\\\\\"></i> Notification Center</a>\\\",\\\"    </div>\\\",\\\"  </div>\\\",\\\"</div>\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/ui/layout_end.php\\\": [\\\"<?php /** UI Layout End (no logic) */ ?>\\\",\\\"      </div> <!-- /.container-fluid -->\\\",\\\"    </main>\\\",\\\"  </div> <!-- /.app-shell -->\\\",\\\"\\\",\\\"  <!-- Mobile Offcanvas Sidebar -->\\\",\\\"  <div class=\\\\\\\"offcanvas offcanvas-start offcanvas-sidebar\\\\\\\" tabindex=\\\\\\\"-1\\\\\\\" id=\\\\\\\"offcanvasSidebar\\\\\\\" aria-labelledby=\\\\\\\"offcanvasSidebarLabel\\\\\\\">\\\",\\\"    <div class=\\\\\\\"offcanvas-header\\\\\\\">\\\",\\\"      <h5 class=\\\\\\\"offcanvas-title\\\\\\\" id=\\\\\\\"offcanvasSidebarLabel\\\\\\\">Navigation</h5>\\\",\\\"      <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn-close\\\\\\\" data-bs-dismiss=\\\\\\\"offcanvas\\\\\\\" aria-label=\\\\\\\"Close\\\\\\\"></button>\\\",\\\"    </div>\\\",\\\"    <div class=\\\\\\\"offcanvas-body p-0\\\\\\\">\\\",\\\"      <?php @include __DIR__ . '/sidebar.php'; ?>\\\",\\\"    </div>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <!-- Bootstrap JS (bundle includes Popper) -->\\\",\\\"  <script src=\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\\\\\\\"></script>\\\",\\\"</body>\\\",\\\"</html>\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/ui/sidebar.php\\\": [\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"/** PATH: /public_html/ui/sidebar.php\\\",\\\" * Sidebar navigation (Bootstrap 5) \\\\u2014 compact with collapsible groups.\\\",\\\" * Groups: Core, Masters, Purchase, Stores, Production & Planning, Machinery, Maintenance, Quality, Accounts, Audit, Reports\\\",\\\" * Note: Pure UI; no RBAC checks (keep kernel untouched).\\\",\\\" */\\\",\\\"\\\",\\\"$REQ_URI = $_SERVER['REQUEST_URI'] ?? '';\\\",\\\"\\\",\\\"if (!function_exists('nav_is_active')) {\\\",\\\"  /** Return 'active' if any of $needles appear in current URI */\\\",\\\"  function nav_is_active(array $needles, string $haystack): string {\\\",\\\"    foreach ($needles as $n) { if ($n !== '' && str_contains($haystack, $n)) return 'active'; }\\\",\\\"    return '';\\\",\\\"  }\\\",\\\"}\\\",\\\"if (!function_exists('collapse_show')) {\\\",\\\"  /** Return 'show' if any of $needles appear in current URI (auto-expand a group) */\\\",\\\"  function collapse_show(array $needles, string $haystack): string {\\\",\\\"    foreach ($needles as $n) { if ($n !== '' && str_contains($haystack, $n)) return 'show'; }\\\",\\\"    return '';\\\",\\\"  }\\\",\\\"}\\\",\\\"?>\\\",\\\"<nav class=\\\\\\\"px-2 py-3\\\\\\\">\\\",\\\"  <ul class=\\\\\\\"nav nav-pills flex-column gap-1 w-100\\\\\\\">\\\",\\\"\\\",\\\"    <!-- Core -->\\\",\\\"    <li class=\\\\\\\"nav-item text-uppercase small text-muted px-2 mt-1\\\\\\\">Core</li>\\\",\\\"    <li class=\\\\\\\"nav-item\\\\\\\">\\\",\\\"      <a class=\\\\\\\"nav-link d-flex align-items-center <?= nav_is_active(['/dashboard.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/dashboard.php\\\\\\\">\\\",\\\"        <i class=\\\\\\\"bi bi-speedometer2 me-2\\\\\\\"></i> Dashboard\\\",\\\"      </a>\\\",\\\"    </li>\\\",\\\"    <li class=\\\\\\\"nav-item\\\\\\\">\\\",\\\"      <a class=\\\\\\\"nav-link d-flex align-items-center <?= nav_is_active(['/notifications/'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/notifications/center.php\\\\\\\">\\\",\\\"        <i class=\\\\\\\"bi bi-bell me-2\\\\\\\"></i> Notifications\\\",\\\"      </a>\\\",\\\"    </li>\\\",\\\"\\\",\\\"    <!-- Masters (collapsible) -->\\\",\\\"    <?php $masters_needles = ['/identity/', '/uom/', '/material/', '/items/', '/parties/', '/locations/', '/projects/']; ?>\\\",\\\"    <li class=\\\\\\\"nav-item text-uppercase small text-muted px-2 mt-3\\\\\\\">Masters</li>\\\",\\\"    <li class=\\\\\\\"nav-item\\\\\\\">\\\",\\\"      <button class=\\\\\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($masters_needles, $REQ_URI) ?>\\\\\\\"\\\",\\\"              data-bs-toggle=\\\\\\\"collapse\\\\\\\" data-bs-target=\\\\\\\"#navMasters\\\\\\\" aria-expanded=\\\\\\\"<?= collapse_show($masters_needles,$REQ_URI)?'true':'false' ?>\\\\\\\">\\\",\\\"        <i class=\\\\\\\"bi bi-sliders me-2\\\\\\\"></i> Masters\\\",\\\"        <i class=\\\\\\\"bi bi-caret-down ms-auto\\\\\\\"></i>\\\",\\\"      </button>\\\",\\\"      <div id=\\\\\\\"navMasters\\\\\\\" class=\\\\\\\"collapse <?= collapse_show($masters_needles, $REQ_URI) ?>\\\\\\\">\\\",\\\"        <ul class=\\\\\\\"nav flex-column ms-3 mt-1\\\\\\\">\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/identity/'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/identity/users_list.php\\\\\\\"><i class=\\\\\\\"bi bi-people me-2\\\\\\\"></i> Users & Roles</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/uom/uom_list.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/uom/uom_list.php\\\\\\\"><i class=\\\\\\\"bi bi-rulers me-2\\\\\\\"></i> UOM</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/uom/uom_conversions_list.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/uom/uom_conversions_list.php\\\\\\\"><i class=\\\\\\\"bi bi-shuffle me-2\\\\\\\"></i> UOM Conversions</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/material/'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/material/index.php\\\\\\\"><i class=\\\\\\\"bi bi-diagram-2 me-2\\\\\\\"></i> Material Taxonomy</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/items/'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/items/items_list.php\\\\\\\"><i class=\\\\\\\"bi bi-box-seam me-2\\\\\\\"></i> Items</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/parties/'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/parties/parties_list.php\\\\\\\"><i class=\\\\\\\"bi bi-building me-2\\\\\\\"></i> Parties</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/locations/'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/locations/warehouses_list.php\\\\\\\"><i class=\\\\\\\"bi bi-geo-alt me-2\\\\\\\"></i> Locations/Warehouses</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/projects/'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/projects/projects_list.php\\\\\\\"><i class=\\\\\\\"bi bi-kanban me-2\\\\\\\"></i> Projects</a></li>\\\",\\\"        </ul>\\\",\\\"      </div>\\\",\\\"    </li>\\\",\\\"\\\",\\\"    <!-- Operations -->\\\",\\\"    <li class=\\\\\\\"nav-item text-uppercase small text-muted px-2 mt-3\\\\\\\">Operations</li>\\\",\\\"\\\",\\\"    <!-- Purchase (collapsible) -->\\\",\\\"    <?php $purchase_needles = ['/purchase/']; ?>\\\",\\\"    <li class=\\\\\\\"nav-item\\\\\\\">\\\",\\\"      <button class=\\\\\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($purchase_needles, $REQ_URI) ?>\\\\\\\"\\\",\\\"              data-bs-toggle=\\\\\\\"collapse\\\\\\\" data-bs-target=\\\\\\\"#navPurchase\\\\\\\" aria-expanded=\\\\\\\"<?= collapse_show($purchase_needles,$REQ_URI)?'true':'false' ?>\\\\\\\">\\\",\\\"        <i class=\\\\\\\"bi bi-bag-check me-2\\\\\\\"></i> Purchase\\\",\\\"        <i class=\\\\\\\"bi bi-caret-down ms-auto\\\\\\\"></i>\\\",\\\"      </button>\\\",\\\"      <div id=\\\\\\\"navPurchase\\\\\\\" class=\\\\\\\"collapse <?= collapse_show($purchase_needles, $REQ_URI) ?>\\\\\\\">\\\",\\\"        <ul class=\\\\\\\"nav flex-column ms-3 mt-1\\\\\\\">\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/purchase/indents_'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/purchase/indents_list.php\\\\\\\"><i class=\\\\\\\"bi bi-card-list me-2\\\\\\\"></i> Indents</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/purchase/rfq_'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/purchase/rfq_list.php\\\\\\\"><i class=\\\\\\\"bi bi-envelope-paper me-2\\\\\\\"></i> RFQ</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/purchase/quotes_','/purchase/quote'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/purchase/quotes_list.php\\\\\\\"><i class=\\\\\\\"bi bi-currency-rupee me-2\\\\\\\"></i> Quotes</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/purchase/po_'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/purchase/po_list.php\\\\\\\"><i class=\\\\\\\"bi bi-receipt me-2\\\\\\\"></i> Purchase Orders</a></li>\\\",\\\"        </ul>\\\",\\\"      </div>\\\",\\\"    </li>\\\",\\\"\\\",\\\"    <!-- Stores (collapsible) -->\\\",\\\"    <?php $stores_needles = ['/stores/']; ?>\\\",\\\"    <li class=\\\\\\\"nav-item\\\\\\\">\\\",\\\"      <button class=\\\\\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($stores_needles, $REQ_URI) ?>\\\\\\\"\\\",\\\"              data-bs-toggle=\\\\\\\"collapse\\\\\\\" data-bs-target=\\\\\\\"#navStores\\\\\\\" aria-expanded=\\\\\\\"<?= collapse_show($stores_needles,$REQ_URI)?'true':'false' ?>\\\\\\\">\\\",\\\"        <i class=\\\\\\\"bi bi-boxes me-2\\\\\\\"></i> Stores\\\",\\\"        <i class=\\\\\\\"bi bi-caret-down ms-auto\\\\\\\"></i>\\\",\\\"      </button>\\\",\\\"      <div id=\\\\\\\"navStores\\\\\\\" class=\\\\\\\"collapse <?= collapse_show($stores_needles, $REQ_URI) ?>\\\\\\\">\\\",\\\"        <ul class=\\\\\\\"nav flex-column ms-3 mt-1\\\\\\\">\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/stores/grn_'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/stores/grn_list.php\\\\\\\"><i class=\\\\\\\"bi bi-box-arrow-in-down-left me-2\\\\\\\"></i> GRN (Receipts)</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/stores/issue_'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/stores/issues_list.php\\\\\\\"><i class=\\\\\\\"bi bi-box-arrow-up-right me-2\\\\\\\"></i> Issues/Returns</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/stores/transfer_'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/stores/transfer_list.php\\\\\\\"><i class=\\\\\\\"bi bi-arrow-left-right me-2\\\\\\\"></i> Stock Transfer</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/stores/minmax_report.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/stores/minmax_report.php\\\\\\\"><i class=\\\\\\\"bi bi-graph-down-arrow me-2\\\\\\\"></i> Min/Max Report</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/stores/purchase_advice_list.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/stores/purchase_advice_list.php\\\\\\\"><i class=\\\\\\\"bi bi-clipboard2-plus me-2\\\\\\\"></i> Purchase Advice</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/stores/stock_adjust_form.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/stores/stock_adjust_form.php\\\\\\\"><i class=\\\\\\\"bi bi-sliders2 me-2\\\\\\\"></i> Stock Adjust</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/stores/gatepass_list.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/stores/gatepass_list.php\\\\\\\"><i class=\\\\\\\"bi bi-card-heading me-2\\\\\\\"></i> Gate Pass</a></li>\\\",\\\"        </ul>\\\",\\\"      </div>\\\",\\\"    </li>\\\",\\\"\\\",\\\"    <!-- Production & Planning (collapsible) -->\\\",\\\"    <?php $pp_needles = ['/purchase/bom_list.php','/workorders/','/processes/','/workcenters/']; ?>\\\",\\\"    <li class=\\\\\\\"nav-item\\\\\\\">\\\",\\\"      <button class=\\\\\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($pp_needles, $REQ_URI) ?>\\\\\\\"\\\",\\\"              data-bs-toggle=\\\\\\\"collapse\\\\\\\" data-bs-target=\\\\\\\"#navProdPlan\\\\\\\" aria-expanded=\\\\\\\"<?= collapse_show($pp_needles,$REQ_URI)?'true':'false' ?>\\\\\\\">\\\",\\\"        <i class=\\\\\\\"bi bi-diagram-3 me-2\\\\\\\"></i> Production &amp; Planning\\\",\\\"        <i class=\\\\\\\"bi bi-caret-down ms-auto\\\\\\\"></i>\\\",\\\"      </button>\\\",\\\"      <div id=\\\\\\\"navProdPlan\\\\\\\" class=\\\\\\\"collapse <?= collapse_show($pp_needles, $REQ_URI) ?>\\\\\\\">\\\",\\\"        <ul class=\\\\\\\"nav flex-column ms-3 mt-1\\\\\\\">\\\",\\\"          <!-- Corrected BOM link (as requested) -->\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/purchase/bom_list.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/purchase/bom_list.php\\\\\\\"><i class=\\\\\\\"bi bi-diagram-3 me-2\\\\\\\"></i> BOMs</a></li>\\\",\\\"          <!-- Removed routing links per instruction -->\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/workorders/pwo_list.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/workorders/pwo_list.php\\\\\\\"><i class=\\\\\\\"bi bi-gear me-2\\\\\\\"></i> Work Orders (PWO)</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/processes/processes_list.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/processes/processes_list.php\\\\\\\"><i class=\\\\\\\"bi bi-diagram-2 me-2\\\\\\\"></i> Processes</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/workcenters/workcenters_list.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/workcenters/workcenters_list.php\\\\\\\"><i class=\\\\\\\"bi bi-hdd-stack me-2\\\\\\\"></i> Work Centers</a></li>\\\",\\\"        </ul>\\\",\\\"      </div>\\\",\\\"    </li>\\\",\\\"\\\",\\\"    <!-- Machinery (collapsible) -->\\\",\\\"    <?php $mach_needles = ['/machines/','/maintenance_alloc/']; ?>\\\",\\\"    <li class=\\\\\\\"nav-item\\\\\\\">\\\",\\\"      <button class=\\\\\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($mach_needles, $REQ_URI) ?>\\\\\\\"\\\",\\\"              data-bs-toggle=\\\\\\\"collapse\\\\\\\" data-bs-target=\\\\\\\"#navMachinery\\\\\\\" aria-expanded=\\\\\\\"<?= collapse_show($mach_needles,$REQ_URI)?'true':'false' ?>\\\\\\\">\\\",\\\"        <i class=\\\\\\\"bi bi-wrench-adjustable-circle me-2\\\\\\\"></i> Machinery\\\",\\\"        <i class=\\\\\\\"bi bi-caret-down ms-auto\\\\\\\"></i>\\\",\\\"      </button>\\\",\\\"      <div id=\\\\\\\"navMachinery\\\\\\\" class=\\\\\\\"collapse <?= collapse_show($mach_needles, $REQ_URI) ?>\\\\\\\">\\\",\\\"        <ul class=\\\\\\\"nav flex-column ms-3 mt-1\\\\\\\">\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/machines/machines_list.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/machines/machines_list.php\\\\\\\"><i class=\\\\\\\"bi bi-hdd-network me-2\\\\\\\"></i> Machines</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/machines/categories_list.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/machines/categories_list.php\\\\\\\"><i class=\\\\\\\"bi bi-ui-checks-grid me-2\\\\\\\"></i> Machine Categories</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/maintenance_alloc/allocations_list.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/maintenance_alloc/allocations_list.php\\\\\\\"><i class=\\\\\\\"bi bi-people-gear me-2\\\\\\\"></i> Allocations</a></li>\\\",\\\"        </ul>\\\",\\\"      </div>\\\",\\\"    </li>\\\",\\\"\\\",\\\"    <!-- Maintenance (collapsible) -->\\\",\\\"    <?php $maint_needles = ['/maintenance/wo_list.php','/maintenance/schedule.php','/maintenance/reports/contractor_costs.php']; ?>\\\",\\\"    <li class=\\\\\\\"nav-item\\\\\\\">\\\",\\\"      <button class=\\\\\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($maint_needles, $REQ_URI) ?>\\\\\\\"\\\",\\\"              data-bs-toggle=\\\\\\\"collapse\\\\\\\" data-bs-target=\\\\\\\"#navMaintenance\\\\\\\" aria-expanded=\\\\\\\"<?= collapse_show($maint_needles,$REQ_URI)?'true':'false' ?>\\\\\\\">\\\",\\\"        <i class=\\\\\\\"bi bi-tools me-2\\\\\\\"></i> Maintenance\\\",\\\"        <i class=\\\\\\\"bi bi-caret-down ms-auto\\\\\\\"></i>\\\",\\\"      </button>\\\",\\\"      <div id=\\\\\\\"navMaintenance\\\\\\\" class=\\\\\\\"collapse <?= collapse_show($maint_needles, $REQ_URI) ?>\\\\\\\">\\\",\\\"        <ul class=\\\\\\\"nav flex-column ms-3 mt-1\\\\\\\">\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/maintenance/wo_list.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/maintenance/wo_list.php\\\\\\\"><i class=\\\\\\\"bi bi-clipboard2-check me-2\\\\\\\"></i> Work Orders</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/maintenance/schedule.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/maintenance/schedule.php\\\\\\\"><i class=\\\\\\\"bi bi-calendar2-check me-2\\\\\\\"></i> Schedule</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/maintenance/reports/contractor_costs.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/maintenance/reports/contractor_costs.php\\\\\\\"><i class=\\\\\\\"bi bi-currency-rupee me-2\\\\\\\"></i> Contractor Costs</a></li>\\\",\\\"        </ul>\\\",\\\"      </div>\\\",\\\"    </li>\\\",\\\"\\\",\\\"    <!-- Quality (collapsible kept for future; remove if not needed) -->\\\",\\\"    <?php $qc_needles = ['/qc/']; ?>\\\",\\\"    <li class=\\\\\\\"nav-item\\\\\\\">\\\",\\\"      <button class=\\\\\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($qc_needles, $REQ_URI) ?>\\\\\\\"\\\",\\\"              data-bs-toggle=\\\\\\\"collapse\\\\\\\" data-bs-target=\\\\\\\"#navQuality\\\\\\\" aria-expanded=\\\\\\\"<?= collapse_show($qc_needles,$REQ_URI)?'true':'false' ?>\\\\\\\">\\\",\\\"        <i class=\\\\\\\"bi bi-shield-check me-2\\\\\\\"></i> Quality / ITP\\\",\\\"        <i class=\\\\\\\"bi bi-caret-down ms-auto\\\\\\\"></i>\\\",\\\"      </button>\\\",\\\"      <div id=\\\\\\\"navQuality\\\\\\\" class=\\\\\\\"collapse <?= collapse_show($qc_needles, $REQ_URI) ?>\\\\\\\">\\\",\\\"        <ul class=\\\\\\\"nav flex-column ms-3 mt-1\\\\\\\">\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/qc/inspections_'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/qc/inspections_list.php\\\\\\\"><i class=\\\\\\\"bi bi-clipboard-check me-2\\\\\\\"></i> Inspections</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/qc/dossier_'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/qc/dossier_list.php\\\\\\\"><i class=\\\\\\\"bi bi-folder2-open me-2\\\\\\\"></i> Dossiers</a></li>\\\",\\\"        </ul>\\\",\\\"      </div>\\\",\\\"    </li>\\\",\\\"\\\",\\\"    <!-- Accounts (collapsible) -->\\\",\\\"    <?php $acct_needles = ['/accounts/journals_list.php','/accounts/ledger.php']; ?>\\\",\\\"    <li class=\\\\\\\"nav-item text-uppercase small text-muted px-2 mt-3\\\\\\\">Finance</li>\\\",\\\"    <li class=\\\\\\\"nav-item\\\\\\\">\\\",\\\"      <button class=\\\\\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($acct_needles, $REQ_URI) ?>\\\\\\\"\\\",\\\"              data-bs-toggle=\\\\\\\"collapse\\\\\\\" data-bs-target=\\\\\\\"#navAccounts\\\\\\\" aria-expanded=\\\\\\\"<?= collapse_show($acct_needles,$REQ_URI)?'true':'false' ?>\\\\\\\">\\\",\\\"        <i class=\\\\\\\"bi bi-cash-coin me-2\\\\\\\"></i> Accounts\\\",\\\"        <i class=\\\\\\\"bi bi-caret-down ms-auto\\\\\\\"></i>\\\",\\\"      </button>\\\",\\\"      <div id=\\\\\\\"navAccounts\\\\\\\" class=\\\\\\\"collapse <?= collapse_show($acct_needles, $REQ_URI) ?>\\\\\\\">\\\",\\\"        <ul class=\\\\\\\"nav flex-column ms-3 mt-1\\\\\\\">\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/accounts/journals_list.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/accounts/journals_list.php\\\\\\\"><i class=\\\\\\\"bi bi-journal-text me-2\\\\\\\"></i> Journals</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/accounts/ledger.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/accounts/ledger.php\\\\\\\"><i class=\\\\\\\"bi bi-journal-richtext me-2\\\\\\\"></i> Ledger</a></li>\\\",\\\"        </ul>\\\",\\\"      </div>\\\",\\\"    </li>\\\",\\\"\\\",\\\"    <!-- Audit -->\\\",\\\"    <li class=\\\\\\\"nav-item\\\\\\\">\\\",\\\"      <a class=\\\\\\\"nav-link d-flex align-items-center <?= nav_is_active(['/audit/'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/audit/log_list.php\\\\\\\">\\\",\\\"        <i class=\\\\\\\"bi bi-activity me-2\\\\\\\"></i> Audit Log\\\",\\\"      </a>\\\",\\\"    </li>\\\",\\\"\\\",\\\"    <!-- Reports (collapsible) -->\\\",\\\"    <?php $reports_needles = ['/reports/']; ?>\\\",\\\"    <li class=\\\\\\\"nav-item text-uppercase small text-muted px-2 mt-3\\\\\\\">Reports</li>\\\",\\\"    <li class=\\\\\\\"nav-item\\\\\\\">\\\",\\\"      <button class=\\\\\\\"btn w-100 text-start nav-link d-flex align-items-center <?= nav_is_active($reports_needles, $REQ_URI) ?>\\\\\\\"\\\",\\\"              data-bs-toggle=\\\\\\\"collapse\\\\\\\" data-bs-target=\\\\\\\"#navReports\\\\\\\" aria-expanded=\\\\\\\"<?= collapse_show($reports_needles,$REQ_URI)?'true':'false' ?>\\\\\\\">\\\",\\\"        <i class=\\\\\\\"bi bi-graph-up me-2\\\\\\\"></i> Reports\\\",\\\"        <i class=\\\\\\\"bi bi-caret-down ms-auto\\\\\\\"></i>\\\",\\\"      </button>\\\",\\\"      <div id=\\\\\\\"navReports\\\\\\\" class=\\\\\\\"collapse <?= collapse_show($reports_needles,$REQ_URI) ?>\\\\\\\">\\\",\\\"        <ul class=\\\\\\\"nav flex-column ms-3 mt-1\\\\\\\">\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/reports/inventory/stock_summary.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/reports/inventory/stock_summary.php\\\\\\\"><i class=\\\\\\\"bi bi-clipboard-data me-2\\\\\\\"></i> Inventory Summary</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/reports/inventory/stock_ledger.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/reports/inventory/stock_ledger.php\\\\\\\"><i class=\\\\\\\"bi bi-journal-check me-2\\\\\\\"></i> Stock Ledger</a></li>\\\",\\\"          <li><a class=\\\\\\\"nav-link <?= nav_is_active(['/reports/purchase/indent_register.php'], $REQ_URI) ?>\\\\\\\" href=\\\\\\\"/reports/purchase/indent_register.php\\\\\\\"><i class=\\\\\\\"bi bi-receipt me-2\\\\\\\"></i> Purchase Register</a></li>\\\",\\\"        </ul>\\\",\\\"      </div>\\\",\\\"    </li>\\\",\\\"\\\",\\\"  </ul>\\\",\\\"</nav>\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/ui/init.php\\\": [\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"/** Minimal UI init for per-page title, etc. */\\\",\\\"# Example usage in a page:\\\",\\\"# $page_title = 'Items';\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/ui/components.php\\\": [\\\"<?php\\\",\\\"// --- Action buttons for list rows (view/edit/delete etc.) ---\\\",\\\"function ui_row_actions(array $opts): string {\\\",\\\"  // $opts = ['view'=>url|null, 'edit'=>url|null, 'delete'=>url|null, 'extra'=>[['icon'=>'download','label'=>'Download','href'=>'/x']]]\\\",\\\"  $html = '<div class=\\\\\\\"btn-group btn-group-sm\\\\\\\" role=\\\\\\\"group\\\\\\\">';\\\",\\\"  if (!empty($opts['view']))   $html .= '<a class=\\\\\\\"btn btn-light\\\\\\\" href=\\\\\\\"'.htmlspecialchars($opts['view']).'\\\\\\\" title=\\\\\\\"View\\\\\\\"><i class=\\\\\\\"bi bi-eye\\\\\\\"></i></a>';\\\",\\\"  if (!empty($opts['edit']))   $html .= '<a class=\\\\\\\"btn btn-light\\\\\\\" href=\\\\\\\"'.htmlspecialchars($opts['edit']).'\\\\\\\" title=\\\\\\\"Edit\\\\\\\"><i class=\\\\\\\"bi bi-pencil-square\\\\\\\"></i></a>';\\\",\\\"  if (!empty($opts['delete'])) $html .= '<a class=\\\\\\\"btn btn-light\\\\\\\" href=\\\\\\\"'.htmlspecialchars($opts['delete']).'\\\\\\\" title=\\\\\\\"Delete\\\\\\\" onclick=\\\\\\\"return confirm(\\\\\\\\'Delete this record?\\\\\\\\')\\\\\\\"><i class=\\\\\\\"bi bi-trash\\\\\\\"></i></a>';\\\",\\\"  if (!empty($opts['extra']) && is_array($opts['extra'])) {\\\",\\\"    foreach ($opts['extra'] as $x) {\\\",\\\"      $icon  = htmlspecialchars($x['icon']  ?? 'link-45deg');\\\",\\\"      $label = htmlspecialchars($x['label'] ?? 'Action');\\\",\\\"      $href  = htmlspecialchars($x['href']  ?? '#');\\\",\\\"      $html .= '<a class=\\\\\\\"btn btn-light\\\\\\\" href=\\\\\\\"'.$href.'\\\\\\\" title=\\\\\\\"'.$label.'\\\\\\\"><i class=\\\\\\\"bi bi-'.$icon.'\\\\\\\"></i></a>';\\\",\\\"    }\\\",\\\"  }\\\",\\\"  $html .= '</div>';\\\",\\\"  return $html;\\\",\\\"}\\\",\\\"\\\",\\\"// --- Status pill (badge) ---\\\",\\\"function ui_status(string $status): string {\\\",\\\"  $s = strtolower(trim($status));\\\",\\\"  $map = [\\\",\\\"    'active'   => 'bg-success-subtle text-success-emphasis border',\\\",\\\"    'enabled'  => 'bg-success-subtle text-success-emphasis border',\\\",\\\"    'draft'    => 'bg-secondary-subtle text-secondary-emphasis border',\\\",\\\"    'pending'  => 'bg-warning-subtle text-warning-emphasis border',\\\",\\\"    'paused'   => 'bg-warning-subtle text-warning-emphasis border',\\\",\\\"    'rejected' => 'bg-danger-subtle text-danger-emphasis border',\\\",\\\"    'disabled' => 'bg-dark-subtle text-dark-emphasis border',\\\",\\\"  ];\\\",\\\"  $cls = $map[$s] ?? 'bg-primary-subtle text-primary-emphasis border';\\\",\\\"  return '<span class=\\\\\\\"badge '.$cls.'\\\\\\\">'.htmlspecialchars(ucfirst($s)).'</span>';\\\",\\\"}\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/ui/layout_start.php\\\": [\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"/** UI Layout Start (Bootstrap 5.3) \\\\u2014 UI only, no business logic */\\\",\\\"\\\",\\\"if (session_status() !== PHP_SESSION_ACTIVE) {\\\",\\\"  session_start();\\\",\\\"}\\\",\\\"\\\",\\\"/** HTML escape */\\\",\\\"if (!function_exists('h')) {\\\",\\\"  function h(?string $v): string { return htmlspecialchars((string)$v, ENT_QUOTES, 'UTF-8'); }\\\",\\\"}\\\",\\\"\\\",\\\"/**\\\",\\\" * Flash helper (fallback).\\\",\\\" * - If already defined elsewhere, we won't redeclare.\\\",\\\" * - Usage:\\\",\\\" *    flash('success','Saved')  // queue\\\",\\\" *    foreach (flash() as $f) { ... }  // fetch & clear\\\",\\\" */\\\",\\\"if (!function_exists('flash')) {\\\",\\\"  function flash(?string $type = null, ?string $msg = null): array {\\\",\\\"    if ($type !== null && $msg !== null) {\\\",\\\"      $_SESSION['_flash'][] = ['type' => $type, 'msg' => $msg];\\\",\\\"      return [];\\\",\\\"    }\\\",\\\"    $out = $_SESSION['_flash'] ?? [];\\\",\\\"    if (!is_array($out)) $out = [];\\\",\\\"    unset($_SESSION['_flash']); // clear after reading\\\",\\\"    return $out;\\\",\\\"  }\\\",\\\"}\\\",\\\"\\\",\\\"/** Soft-depend on components; don't fatal if missing */\\\",\\\"@include __DIR__ . '/components.php';\\\",\\\"\\\",\\\"/** Title/Brand fallbacks */\\\",\\\"$app_name   = $app_name   ?? ($_ENV['APP_NAME'] ?? 'EMS Infra ERP');\\\",\\\"$page_title = $page_title ?? ($PAGE_TITLE ?? $app_name);\\\",\\\"$currentPath = $_SERVER['SCRIPT_NAME'] ?? '';\\\",\\\"?>\\\",\\\"<!doctype html>\\\",\\\"<html lang=\\\\\\\"en\\\\\\\" data-bs-theme=\\\\\\\"light\\\\\\\">\\\",\\\"<head>\\\",\\\"  <meta charset=\\\\\\\"utf-8\\\\\\\">\\\",\\\"  <meta name=\\\\\\\"viewport\\\\\\\" content=\\\\\\\"width=device-width, initial-scale=1\\\\\\\">\\\",\\\"  <title><?= h($page_title) ?></title>\\\",\\\"\\\",\\\"  <!-- Bootstrap & Icons -->\\\",\\\"  <link rel=\\\\\\\"stylesheet\\\\\\\" href=\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\\\\\\\">\\\",\\\"  <link rel=\\\\\\\"stylesheet\\\\\\\" href=\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css\\\\\\\">\\\",\\\"\\\",\\\"  <!-- Optional site styles (served from public_html root if present) -->\\\",\\\"  <link rel=\\\\\\\"stylesheet\\\\\\\" href=\\\\\\\"/styles.css\\\\\\\">\\\",\\\"\\\",\\\"  <style>\\\",\\\"    :root { --sidebar-width: 260px; }\\\",\\\"    html, body { height: 100%; }\\\",\\\"    body { min-height: 100vh; }\\\",\\\"    .app-shell { display: flex; min-height: calc(100vh - 56px); }\\\",\\\"    .app-sidebar { width: var(--sidebar-width); border-right: 1px solid #eef0f2; background: #fff; }\\\",\\\"    @media (max-width: 991.98px) { .app-sidebar { display: none; } }\\\",\\\"    .app-content { flex: 1; }\\\",\\\"    .brand { font-weight: 600; letter-spacing: .2px; }\\\",\\\"    .navbar-brand img { height: 32px; width: auto; }\\\",\\\"    .nav-link.active { background: #f1f5f9; font-weight: 600; }\\\",\\\"    .offcanvas-sidebar { width: var(--sidebar-width); }\\\",\\\"    .card-tile { transition: transform .15s ease; }\\\",\\\"    .card-tile:hover { transform: translateY(-2px); }\\\",\\\"  </style>\\\",\\\"</head>\\\",\\\"<body>\\\",\\\"\\\",\\\"  <?php foreach (flash() as $f): ?>\\\",\\\"    <div class=\\\\\\\"alert alert-<?= h($f['type'] ?? 'info') ?> m-2\\\\\\\">\\\",\\\"      <?= h($f['msg'] ?? '') ?>\\\",\\\"    </div>\\\",\\\"  <?php endforeach; ?>\\\",\\\"\\\",\\\"  <!-- Header -->\\\",\\\"  <nav class=\\\\\\\"navbar navbar-expand-lg bg-body-tertiary border-bottom sticky-top\\\\\\\">\\\",\\\"    <div class=\\\\\\\"container-fluid\\\\\\\">\\\",\\\"      <button class=\\\\\\\"btn btn-outline-primary d-lg-none me-2\\\\\\\" type=\\\\\\\"button\\\\\\\"\\\",\\\"              data-bs-toggle=\\\\\\\"offcanvas\\\\\\\" data-bs-target=\\\\\\\"#offcanvasSidebar\\\\\\\" aria-controls=\\\\\\\"offcanvasSidebar\\\\\\\"\\\",\\\"              aria-label=\\\\\\\"Open menu\\\\\\\">\\\",\\\"        <i class=\\\\\\\"bi bi-list\\\\\\\"></i>\\\",\\\"      </button>\\\",\\\"\\\",\\\"      <a class=\\\\\\\"navbar-brand d-flex align-items-center\\\\\\\" href=\\\\\\\"/dashboard.php\\\\\\\">\\\",\\\"        <img src=\\\\\\\"/assets/logo.jpg\\\\\\\" alt=\\\\\\\"EMS Infra ERP Logo\\\\\\\" class=\\\\\\\"me-2\\\\\\\">\\\",\\\"        <span class=\\\\\\\"brand\\\\\\\"><?= h($app_name) ?></span>\\\",\\\"      </a>\\\",\\\"\\\",\\\"      <div class=\\\\\\\"ms-auto d-flex align-items-center gap-2\\\\\\\">\\\",\\\"        <?php @include __DIR__ . '/partials/notifications_bell.php'; ?>\\\",\\\"\\\",\\\"        <div class=\\\\\\\"dropdown\\\\\\\">\\\",\\\"          <a href=\\\\\\\"#\\\\\\\" class=\\\\\\\"btn btn-outline-secondary btn-sm dropdown-toggle\\\\\\\" data-bs-toggle=\\\\\\\"dropdown\\\\\\\" aria-expanded=\\\\\\\"false\\\\\\\">\\\",\\\"            <i class=\\\\\\\"bi bi-person-circle me-1\\\\\\\"></i><?= h($_SESSION['user_name'] ?? 'User') ?>\\\",\\\"          </a>\\\",\\\"          <ul class=\\\\\\\"dropdown-menu dropdown-menu-end\\\\\\\">\\\",\\\"            <li><a class=\\\\\\\"dropdown-item\\\\\\\" href=\\\\\\\"/identity/profile.php\\\\\\\"><i class=\\\\\\\"bi bi-gear me-2\\\\\\\"></i> Profile</a></li>\\\",\\\"            <li><hr class=\\\\\\\"dropdown-divider\\\\\\\"></li>\\\",\\\"            <li><a class=\\\\\\\"dropdown-item\\\\\\\" href=\\\\\\\"/logout.php\\\\\\\"><i class=\\\\\\\"bi bi-box-arrow-right me-2\\\\\\\"></i> Logout</a></li>\\\",\\\"          </ul>\\\",\\\"        </div>\\\",\\\"      </div>\\\",\\\"    </div>\\\",\\\"  </nav>\\\",\\\"\\\",\\\"  <!-- App shell -->\\\",\\\"  <div class=\\\\\\\"app-shell\\\\\\\">\\\",\\\"    <!-- Desktop sidebar -->\\\",\\\"    <aside class=\\\\\\\"app-sidebar\\\\\\\">\\\",\\\"      <?php @include __DIR__ . '/sidebar.php'; ?>\\\",\\\"    </aside>\\\",\\\"\\\",\\\"    <!-- Main content -->\\\",\\\"    <main class=\\\\\\\"app-content\\\\\\\">\\\",\\\"      <div class=\\\\\\\"container-fluid py-3\\\\\\\">\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_orders/create_project.php\\\": [\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"require_once __DIR__ . '/../includes/csrf.php';\\\",\\\"require_once __DIR__ . '/../includes/helpers.php';\\\",\\\"require_once __DIR__ . '/../includes/numbering.php';\\\",\\\"require_once __DIR__ . '/../includes/audit.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('project.core.create');\\\",\\\"require_permission('sales.order.view');\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"\\\",\\\"if ($_SERVER['REQUEST_METHOD'] === 'POST') {\\\",\\\"  verify_csrf_or_die();\\\",\\\"  $orderId = (int)($_POST['order_id'] ?? 0);\\\",\\\"  $row = $pdo->prepare(\\\\\\\"SELECT * FROM sales_orders WHERE id=? AND (deleted_at IS NULL) LIMIT 1\\\\\\\");\\\",\\\"  $row->execute([$orderId]);\\\",\\\"  $so = $row->fetch(PDO::FETCH_ASSOC);\\\",\\\"  if (!$so) { set_flash('danger','Order not found'); header('Location: sales_orders_list.php'); exit; }\\\",\\\"\\\",\\\"  $proj = [\\\",\\\"    'code'              => next_no('PRJ'),\\\",\\\"    'sales_order_id'    => $orderId,\\\",\\\"    'client_account_id' => (int)$so['account_id'],\\\",\\\"    'client_contact_id' => $so['contact_id'] ? (int)$so['contact_id'] : null,\\\",\\\"    'name'              => 'Project for '.$so['code'],\\\",\\\"    'status'            => 'Planned',\\\",\\\"    'start_date'        => date('Y-m-d'),\\\",\\\"    'end_date'          => null,\\\",\\\"    'notes'             => 'Created from Sales Order '.$so['code'],\\\",\\\"  ];\\\",\\\"  $st = $pdo->prepare(\\\\\\\"INSERT INTO projects\\\",\\\"    (`code`,`sales_order_id`,`client_account_id`,`client_contact_id`,`name`,`status`,`start_date`,`end_date`,`notes`)\\\",\\\"    VALUES (:code,:sales_order_id,:client_account_id,:client_contact_id,:name,:status,:start_date,:end_date,:notes)\\\\\\\");\\\",\\\"  $st->execute($proj);\\\",\\\"  $pid = (int)$pdo->lastInsertId();\\\",\\\"  audit_log($pdo, 'projects', 'create', $pid, $proj);\\\",\\\"\\\",\\\"  set_flash('success', 'Project '.$proj['code'].' created with same party/contact.');\\\",\\\"  header('Location: ../projects/projects_form.php?id='.$pid);\\\",\\\"  exit;\\\",\\\"}\\\",\\\"\\\",\\\"require_once __DIR__ . '/../ui/layout_start.php';\\\",\\\"?>\\\",\\\"<form method=\\\\\\\"post\\\\\\\">\\\",\\\"  <?= csrf_field() ?>\\\",\\\"  <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"order_id\\\\\\\" value=\\\\\\\"<?= (int)($_GET['order_id'] ?? 0) ?>\\\\\\\">\\\",\\\"  <p>Create a Project for this Sales Order using the same Account & Contact?</p>\\\",\\\"  <button class=\\\\\\\"btn btn-primary\\\\\\\">Create Project</button>\\\",\\\"</form>\\\",\\\"<?php include __DIR__ . '/../ui/layout_end.php'; ?>\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/quote_pdf.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/sales_quotes/quote_pdf.php */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"require_once __DIR__ . '/../includes/helpers.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('sales.quote.view');\\\",\\\"\\\",\\\"$id = (int)($_GET['id'] ?? 0);\\\",\\\"if ($id<=0) { http_response_code(400); echo \\\\\\\"Invalid id\\\\\\\"; exit; }\\\",\\\"\\\",\\\"// optional template variant: standard | compact | with-photos (kept for future)\\\",\\\"$tpl = preg_replace('/[^a-z\\\\\\\\-]/','', (string)($_GET['tpl'] ?? 'standard'));\\\",\\\"if (!in_array($tpl, ['standard','compact','with-photos'], true)) $tpl = 'standard';\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"$qh = $pdo->prepare(\\\\\\\"\\\",\\\"    SELECT q.*, p.name AS party_name, p.gstin AS party_gstin, p.address AS party_address\\\",\\\"      FROM sales_quotes q\\\",\\\"      LEFT JOIN parties p ON p.id = q.party_id\\\",\\\"     WHERE q.id=:id AND q.deleted_at IS NULL\\\",\\\"\\\\\\\");\\\",\\\"$qh->execute([':id'=>$id]);\\\",\\\"$quote = $qh->fetch(PDO::FETCH_ASSOC);\\\",\\\"if (!$quote) { http_response_code(404); echo \\\\\\\"Quote not found\\\\\\\"; exit; }\\\",\\\"\\\",\\\"// ITEMS MAPPED TO YOUR SCHEMA\\\",\\\"$qi = $pdo->prepare(\\\\\\\"\\\",\\\"    SELECT sl_no, item_code, item_name, qty, uom, rate, discount_pct, tax_pct, line_total\\\",\\\"      FROM sales_quote_items\\\",\\\"     WHERE quote_id=:id\\\",\\\"  ORDER BY sl_no\\\",\\\"\\\\\\\");\\\",\\\"$qi->execute([':id'=>$id]);\\\",\\\"$items = $qi->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"$org = function_exists('org_profile') ? org_profile() : ['name'=>'Company', 'address'=>'', 'gstin'=>'', 'logo_url'=>''];\\\",\\\"\\\",\\\"ob_start();\\\",\\\"?>\\\",\\\"<!doctype html>\\\",\\\"<html>\\\",\\\"<head>\\\",\\\"<meta charset=\\\\\\\"utf-8\\\\\\\">\\\",\\\"<style>\\\",\\\"body { font-family: DejaVu Sans, sans-serif; font-size: 12px; }\\\",\\\"table { width: 100%; border-collapse: collapse; }\\\",\\\"th, td { border: 1px solid #999; padding: 6px; }\\\",\\\"th { background: #eee; }\\\",\\\".text-right { text-align: right; }\\\",\\\".small { font-size: 11px; color: #555; }\\\",\\\"<?php if ($tpl==='compact'): ?> th, td { padding:4px; font-size:11px; } <?php endif; ?>\\\",\\\"</style>\\\",\\\"</head>\\\",\\\"<body>\\\",\\\"  <table style=\\\\\\\"border:none\\\\\\\">\\\",\\\"    <tr>\\\",\\\"      <td style=\\\\\\\"border:none\\\\\\\">\\\",\\\"        <h2><?=h($org['name'] ?? 'Organization')?></h2>\\\",\\\"        <div class=\\\\\\\"small\\\\\\\"><?=nl2br(h($org['address'] ?? ''))?></div>\\\",\\\"        <div class=\\\\\\\"small\\\\\\\">GSTIN: <?=h($org['gstin'] ?? '-')?></div>\\\",\\\"      </td>\\\",\\\"      <td style=\\\\\\\"border:none; text-align:right\\\\\\\">\\\",\\\"        <?php if (!empty($org['logo_url'])): ?>\\\",\\\"          <img src=\\\\\\\"<?=h($org['logo_url'])?>\\\\\\\" alt=\\\\\\\"Logo\\\\\\\" style=\\\\\\\"max-height:70px\\\\\\\">\\\",\\\"        <?php endif; ?>\\\",\\\"      </td>\\\",\\\"    </tr>\\\",\\\"  </table>\\\",\\\"\\\",\\\"  <h3 style=\\\\\\\"margin-top:0\\\\\\\">Quotation: <?=h($quote['code'])?></h3>\\\",\\\"  <table>\\\",\\\"    <tr><th>Quote Date</th><td><?=h($quote['quote_date'])?></td><th>Client</th><td><?=h($quote['party_name'])?></td></tr>\\\",\\\"    <tr><th>Client GSTIN</th><td><?=h($quote['party_gstin'] ?? '-')?></td><th>Title</th><td><?=h($quote['title'] ?? '')?></td></tr>\\\",\\\"  </table>\\\",\\\"\\\",\\\"  <br>\\\",\\\"  <table>\\\",\\\"    <thead>\\\",\\\"      <tr>\\\",\\\"        <th>Sl</th>\\\",\\\"        <th>Item</th>\\\",\\\"        <th class=\\\\\\\"text-right\\\\\\\">Qty</th>\\\",\\\"        <th>UOM</th>\\\",\\\"        <th class=\\\\\\\"text-right\\\\\\\">Rate</th>\\\",\\\"        <th class=\\\\\\\"text-right\\\\\\\">Disc %</th>\\\",\\\"        <th class=\\\\\\\"text-right\\\\\\\">Tax %</th>\\\",\\\"        <th class=\\\\\\\"text-right\\\\\\\">Amount</th>\\\",\\\"      </tr>\\\",\\\"    </thead>\\\",\\\"    <tbody>\\\",\\\"      <?php foreach ($items as $it): ?>\\\",\\\"      <tr>\\\",\\\"        <td><?= (int)$it['sl_no'] ?></td>\\\",\\\"        <td><?= h(($it['item_code'] ? $it['item_code'].' - ' : '').$it['item_name']) ?></td>\\\",\\\"        <td class=\\\\\\\"text-right\\\\\\\"><?= h($it['qty']) ?></td>\\\",\\\"        <td><?= h($it['uom']) ?></td>\\\",\\\"        <td class=\\\\\\\"text-right\\\\\\\"><?= number_format((float)$it['rate'], 2) ?></td>\\\",\\\"        <td class=\\\\\\\"text-right\\\\\\\"><?= number_format((float)($it['discount_pct'] ?? 0), 2) ?></td>\\\",\\\"        <td class=\\\\\\\"text-right\\\\\\\"><?= number_format((float)($it['tax_pct'] ?? 0), 2) ?></td>\\\",\\\"        <td class=\\\\\\\"text-right\\\\\\\"><?= number_format((float)$it['line_total'], 2) ?></td>\\\",\\\"      </tr>\\\",\\\"      <?php endforeach; ?>\\\",\\\"      <tr><td colspan=\\\\\\\"7\\\\\\\" class=\\\\\\\"text-right\\\\\\\"><b>Subtotal</b></td><td class=\\\\\\\"text-right\\\\\\\"><?=number_format((float)$quote['subtotal'],2)?></td></tr>\\\",\\\"      <tr><td colspan=\\\\\\\"7\\\\\\\" class=\\\\\\\"text-right\\\\\\\"><b>Discount</b></td><td class=\\\\\\\"text-right\\\\\\\"><?=number_format((float)$quote['discount_total'],2)?></td></tr>\\\",\\\"      <tr><td colspan=\\\\\\\"7\\\\\\\" class=\\\\\\\"text-right\\\\\\\"><b>Tax</b></td><td class=\\\\\\\"text-right\\\\\\\"><?=number_format((float)$quote['tax_total'],2)?></td></tr>\\\",\\\"      <tr><td colspan=\\\\\\\"7\\\\\\\" class=\\\\\\\"text-right\\\\\\\"><b>Grand Total</b></td><td class=\\\\\\\"text-right\\\\\\\"><?=number_format((float)$quote['grand_total'],2)?></td></tr>\\\",\\\"    </tbody>\\\",\\\"  </table>\\\",\\\"\\\",\\\"  <?php if (!empty($quote['terms'])): ?>\\\",\\\"    <h4>Terms & Conditions</h4>\\\",\\\"    <div class=\\\\\\\"small\\\\\\\"><?=nl2br(h($quote['terms']))?></div>\\\",\\\"  <?php endif; ?>\\\",\\\"</body>\\\",\\\"</html>\\\",\\\"<?php\\\",\\\"$html = ob_get_clean();\\\",\\\"\\\",\\\"$pdfFileName = 'Quote-' . preg_replace('/[^A-Za-z0-9\\\\\\\\-]/','', (string)$quote['code']) . '.pdf';\\\",\\\"\\\",\\\"if (class_exists('\\\\\\\\\\\\\\\\Mpdf\\\\\\\\\\\\\\\\Mpdf')) {\\\",\\\"    $mpdf = new \\\\\\\\Mpdf\\\\\\\\Mpdf(['tempDir' => sys_get_temp_dir()]);\\\",\\\"    $mpdf->WriteHTML($html);\\\",\\\"    $mpdf->Output($pdfFileName, 'I');\\\",\\\"    exit;\\\",\\\"} elseif (class_exists('\\\\\\\\\\\\\\\\Dompdf\\\\\\\\\\\\\\\\Dompdf')) {\\\",\\\"    $dompdf = new \\\\\\\\Dompdf\\\\\\\\Dompdf();\\\",\\\"    $dompdf->loadHtml($html);\\\",\\\"    $dompdf->setPaper('A4');\\\",\\\"    $dompdf->render();\\\",\\\"    $dompdf->stream($pdfFileName, ['Attachment' => false]);\\\",\\\"    exit;\\\",\\\"} else {\\\",\\\"    header('Content-Type: text/html; charset=utf-8');\\\",\\\"    echo \\\\\\\"<p><b>PDF library not found.</b> Showing HTML instead.</p>\\\\\\\";\\\",\\\"    echo $html;\\\",\\\"}\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/sales_quotes_list.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/sales_quotes/sales_quotes_list.php */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"require_once __DIR__ . '/../includes/helpers.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('sales.quote.view');\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"\\\",\\\"// GET filters\\\",\\\"$status   = trim((string)($_GET['status'] ?? ''));\\\",\\\"$client   = trim((string)($_GET['client'] ?? ''));\\\",\\\"$q        = trim((string)($_GET['q'] ?? ''));\\\",\\\"$from     = trim((string)($_GET['from'] ?? ''));\\\",\\\"$to       = trim((string)($_GET['to'] ?? ''));\\\",\\\"$minAmt   = (float)($_GET['min'] ?? 0);\\\",\\\"$maxAmt   = (float)($_GET['max'] ?? 0);\\\",\\\"\\\",\\\"$where = [\\\\\\\"q.deleted_at IS NULL\\\\\\\"];\\\",\\\"$params = [];\\\",\\\"\\\",\\\"if ($status !== '') { $where[] = \\\\\\\"q.status = :status\\\\\\\"; $params[':status'] = $status; }\\\",\\\"if ($client !== '') { \\\",\\\"    // allow numeric id or name search\\\",\\\"    if (ctype_digit($client)) { $where[] = \\\\\\\"q.party_id = :party_id\\\\\\\"; $params[':party_id'] = (int)$client; }\\\",\\\"    else { $where[] = \\\\\\\"p.name LIKE :pname\\\\\\\"; $params[':pname'] = \\\\\\\"%{$client}%\\\\\\\"; }\\\",\\\"}\\\",\\\"if ($from !== '')   { $where[] = \\\\\\\"q.quote_date >= :from\\\\\\\"; $params[':from'] = $from; }\\\",\\\"if ($to !== '')     { $where[] = \\\\\\\"q.quote_date <= :to\\\\\\\";   $params[':to']   = $to; }\\\",\\\"if ($minAmt > 0)    { $where[] = \\\\\\\"q.grand_total >= :minamt\\\\\\\"; $params[':minamt'] = $minAmt; }\\\",\\\"if ($maxAmt > 0)    { $where[] = \\\\\\\"q.grand_total <= :maxamt\\\\\\\"; $params[':maxamt'] = $maxAmt; }\\\",\\\"if ($q !== '') {\\\",\\\"    $where[] = \\\\\\\"(q.code LIKE :kw OR q.title LIKE :kw OR p.name LIKE :kw)\\\\\\\";\\\",\\\"    $params[':kw'] = \\\\\\\"%{$q}%\\\\\\\";\\\",\\\"}\\\",\\\"\\\",\\\"$sql = \\\\\\\"\\\",\\\"SELECT q.id, q.code, q.title, q.quote_date, q.status, q.grand_total, p.name AS party_name\\\",\\\"FROM sales_quotes q\\\",\\\"LEFT JOIN parties p ON p.id = q.party_id\\\",\\\"WHERE \\\\\\\" . implode(' AND ', $where) . \\\\\\\"\\\",\\\"ORDER BY q.quote_date DESC, q.id DESC\\\",\\\"LIMIT 500\\\\\\\";\\\",\\\"\\\",\\\"$stmt = $pdo->prepare($sql);\\\",\\\"$stmt->execute($params);\\\",\\\"$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"function status_badge(string $s): string {\\\",\\\"    $map = [\\\",\\\"        'Draft'     => 'secondary',\\\",\\\"        'Pending'   => 'info',\\\",\\\"        'Sent'      => 'primary',\\\",\\\"        'Accepted'  => 'success',\\\",\\\"        'Lost'      => 'danger',\\\",\\\"        'Converted' => 'warning',\\\",\\\"    ];\\\",\\\"    $cls = $map[$s] ?? 'light';\\\",\\\"    return '<span class=\\\\\\\"badge bg-' . $cls . '\\\\\\\">' . h($s) . '</span>';\\\",\\\"}\\\",\\\"\\\",\\\"$canCreate = rbac_can('sales.quote.create');\\\",\\\"$canEdit   = rbac_can('sales.quote.edit');\\\",\\\"$canDelete = rbac_can('sales.quote.delete');\\\",\\\"\\\",\\\"$UI_PATH     = dirname(__DIR__) . '/ui';\\\",\\\"$PAGE_TITLE  = 'Sales Quotes';\\\",\\\"$ACTIVE_MENU = 'sales.quotes';\\\",\\\"\\\",\\\"require_once $UI_PATH . '/init.php';\\\",\\\"require_once $UI_PATH . '/layout_start.php';\\\",\\\"?>\\\",\\\"\\\",\\\"<div class=\\\\\\\"d-flex justify-content-between align-items-center mb-3\\\\\\\">\\\",\\\"  <h3 class=\\\\\\\"mb-0\\\\\\\">Sales Quotes</h3>\\\",\\\"  <?php if ($canCreate): ?>\\\",\\\"    <a class=\\\\\\\"btn btn-sm btn-primary\\\\\\\" href=\\\\\\\"/sales_quotes/sales_quotes_edit.php\\\\\\\">New Quote</a>\\\",\\\"  <?php endif; ?>\\\",\\\"</div>\\\",\\\"\\\",\\\"<form class=\\\\\\\"row g-2 mb-3\\\\\\\" method=\\\\\\\"get\\\\\\\">\\\",\\\"  <div class=\\\\\\\"col-auto\\\\\\\">\\\",\\\"    <input name=\\\\\\\"q\\\\\\\" class=\\\\\\\"form-control\\\\\\\" placeholder=\\\\\\\"Search code/title/client\\\\\\\" value=\\\\\\\"<?=h($q)?>\\\\\\\">\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-auto\\\\\\\">\\\",\\\"    <select name=\\\\\\\"status\\\\\\\" class=\\\\\\\"form-select\\\\\\\">\\\",\\\"      <option value=\\\\\\\"\\\\\\\">All Status</option>\\\",\\\"      <?php foreach (['Draft','Pending','Sent','Accepted','Lost','Converted'] as $s): ?>\\\",\\\"        <option value=\\\\\\\"<?=$s?>\\\\\\\" <?=$status===$s?'selected':''?>><?=$s?></option>\\\",\\\"      <?php endforeach; ?>\\\",\\\"    </select>\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-auto\\\\\\\"><input name=\\\\\\\"client\\\\\\\" class=\\\\\\\"form-control\\\\\\\" placeholder=\\\\\\\"Client name or ID\\\\\\\" value=\\\\\\\"<?=h($client)?>\\\\\\\"></div>\\\",\\\"  <div class=\\\\\\\"col-auto\\\\\\\"><input type=\\\\\\\"date\\\\\\\" name=\\\\\\\"from\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?=h($from)?>\\\\\\\"></div>\\\",\\\"  <div class=\\\\\\\"col-auto\\\\\\\"><input type=\\\\\\\"date\\\\\\\" name=\\\\\\\"to\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?=h($to)?>\\\\\\\"></div>\\\",\\\"  <div class=\\\\\\\"col-auto\\\\\\\"><input type=\\\\\\\"number\\\\\\\" name=\\\\\\\"min\\\\\\\" step=\\\\\\\"0.01\\\\\\\" class=\\\\\\\"form-control\\\\\\\" placeholder=\\\\\\\"Min \\\\u20b9\\\\\\\" value=\\\\\\\"<?=h((string)$minAmt)?>\\\\\\\"></div>\\\",\\\"  <div class=\\\\\\\"col-auto\\\\\\\"><input type=\\\\\\\"number\\\\\\\" name=\\\\\\\"max\\\\\\\" step=\\\\\\\"0.01\\\\\\\" class=\\\\\\\"form-control\\\\\\\" placeholder=\\\\\\\"Max \\\\u20b9\\\\\\\" value=\\\\\\\"<?=h((string)$maxAmt)?>\\\\\\\"></div>\\\",\\\"  <div class=\\\\\\\"col-auto\\\\\\\"><button class=\\\\\\\"btn btn-outline-secondary\\\\\\\">Filter</button></div>\\\",\\\"</form>\\\",\\\"\\\",\\\"<table class=\\\\\\\"table table-sm table-striped align-middle\\\\\\\">\\\",\\\"  <thead>\\\",\\\"    <tr>\\\",\\\"      <th>Code</th><th>Date</th><th>Client</th><th>Title</th><th class=\\\\\\\"text-end\\\\\\\">Amount</th><th>Status</th><th>Actions</th>\\\",\\\"    </tr>\\\",\\\"  </thead>\\\",\\\"  <tbody>\\\",\\\"  <?php foreach ($rows as $r): ?>\\\",\\\"    <tr>\\\",\\\"      <td><a href=\\\\\\\"/sales_quotes/sales_quotes_view.php?id=<?=$r['id']?>\\\\\\\"><?=h($r['code'])?></a></td>\\\",\\\"      <td><?=h($r['quote_date'])?></td>\\\",\\\"      <td><?=h($r['party_name'] ?? '')?></td>\\\",\\\"      <td><?=h($r['title'] ?? '')?></td>\\\",\\\"      <td class=\\\\\\\"text-end\\\\\\\"><?=number_format((float)$r['grand_total'], 2)?></td>\\\",\\\"      <td><?=status_badge($r['status'] ?? 'Draft')?></td>\\\",\\\"      <td>\\\",\\\"        <?php if ($canEdit): ?>\\\",\\\"          <a class=\\\\\\\"btn btn-sm btn-outline-primary\\\\\\\" href=\\\\\\\"/sales_quotes/sales_quotes_edit.php?id=<?=$r['id']?>\\\\\\\">Edit</a>\\\",\\\"        <?php endif; ?>\\\",\\\"        <?php if ($canDelete): ?>\\\",\\\"          <form action=\\\\\\\"/sales_quotes/sales_quotes_delete.php\\\\\\\" method=\\\\\\\"post\\\\\\\" class=\\\\\\\"d-inline\\\\\\\" onsubmit=\\\\\\\"return confirm('Soft-delete this quote?');\\\\\\\">\\\",\\\"            <?=csrf_hidden_input()?>\\\",\\\"            <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"id\\\\\\\" value=\\\\\\\"<?=$r['id']?>\\\\\\\">\\\",\\\"            <button class=\\\\\\\"btn btn-sm btn-outline-danger\\\\\\\">Delete</button>\\\",\\\"          </form>\\\",\\\"        <?php endif; ?>\\\",\\\"      </td>\\\",\\\"    </tr>\\\",\\\"  <?php endforeach; ?>\\\",\\\"  </tbody>\\\",\\\"</table>\\\",\\\"\\\",\\\"<?php require_once $UI_PATH . '/layout_end.php';\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/send_quote.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/sales_quotes/send_quote.php */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"require_once __DIR__ . '/../includes/csrf.php';\\\",\\\"require_once __DIR__ . '/../includes/helpers.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('sales.quote.edit');\\\",\\\"csrf_require_token();\\\",\\\"\\\",\\\"$quoteId = (int)($_POST['id'] ?? 0);\\\",\\\"$toEmail = trim((string)($_POST['to'] ?? ''));\\\",\\\"$subject = trim((string)($_POST['subject'] ?? ''));\\\",\\\"$body    = (string)($_POST['body'] ?? '');\\\",\\\"\\\",\\\"if ($quoteId<=0 || $toEmail==='') {\\\",\\\"    flash('To email and quote id are required', 'danger');\\\",\\\"    redirect('/sales_quotes/sales_quotes_view.php?id=' . max(1, $quoteId));\\\",\\\"}\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"\\\",\\\"// Enforce approvals gate: only Approved can be sent\\\",\\\"$st = $pdo->prepare(\\\\\\\"SELECT approval_status FROM sales_quotes WHERE id=:id\\\\\\\");\\\",\\\"$st->execute([':id'=>$quoteId]);\\\",\\\"$approval = (string)$st->fetchColumn();\\\",\\\"if ($approval !== 'Approved') {\\\",\\\"    flash('Cannot send: quote not approved yet.', 'danger');\\\",\\\"    redirect('/sales_quotes/sales_quotes_view.php?id='.$quoteId);\\\",\\\"}\\\",\\\"\\\",\\\"// Load header\\\",\\\"$qh = $pdo->prepare(\\\\\\\"\\\",\\\"    SELECT q.*, p.name AS party_name, p.gstin AS party_gstin, p.address AS party_address\\\",\\\"      FROM sales_quotes q\\\",\\\"      LEFT JOIN parties p ON p.id=q.party_id\\\",\\\"     WHERE q.id=:id AND q.deleted_at IS NULL\\\",\\\"\\\\\\\");\\\",\\\"$qh->execute([':id'=>$quoteId]);\\\",\\\"$quote = $qh->fetch(PDO::FETCH_ASSOC);\\\",\\\"if (!$quote) { flash('Quote not found', 'danger'); redirect('/sales_quotes/sales_quotes_list.php'); }\\\",\\\"\\\",\\\"// Load items (YOUR SCHEMA)\\\",\\\"$qi = $pdo->prepare(\\\\\\\"\\\",\\\"    SELECT sl_no, item_code, item_name, qty, uom, rate, discount_pct, tax_pct, line_total\\\",\\\"      FROM sales_quote_items\\\",\\\"     WHERE quote_id=:id\\\",\\\"  ORDER BY sl_no\\\",\\\"\\\\\\\");\\\",\\\"$qi->execute([':id'=>$quoteId]);\\\",\\\"$items = $qi->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"// Build HTML (same look as quote_pdf.php)\\\",\\\"$org = function_exists('org_profile') ? org_profile() : ['name'=>'Company','address'=>'','gstin'=>'','logo_url'=>''];\\\",\\\"\\\",\\\"ob_start(); ?>\\\",\\\"<!doctype html>\\\",\\\"<html>\\\",\\\"<head>\\\",\\\"<meta charset=\\\\\\\"utf-8\\\\\\\">\\\",\\\"<style>\\\",\\\"body { font-family: DejaVu Sans, sans-serif; font-size: 12px; }\\\",\\\"table { width:100%; border-collapse: collapse; }\\\",\\\"th, td { border:1px solid #999; padding:6px; }\\\",\\\"th { background:#eee; }\\\",\\\".text-right { text-align:right; }\\\",\\\".small { font-size:11px; color:#555; }\\\",\\\"</style>\\\",\\\"</head>\\\",\\\"<body>\\\",\\\"  <table style=\\\\\\\"border:none\\\\\\\">\\\",\\\"    <tr>\\\",\\\"      <td style=\\\\\\\"border:none\\\\\\\">\\\",\\\"        <h2><?=h($org['name'] ?? 'Organization')?></h2>\\\",\\\"        <div class=\\\\\\\"small\\\\\\\"><?=nl2br(h($org['address'] ?? ''))?></div>\\\",\\\"        <div class=\\\\\\\"small\\\\\\\">GSTIN: <?=h($org['gstin'] ?? '-')?></div>\\\",\\\"      </td>\\\",\\\"      <td style=\\\\\\\"border:none; text-align:right\\\\\\\">\\\",\\\"        <?php if (!empty($org['logo_url'])): ?>\\\",\\\"          <img src=\\\\\\\"<?=h($org['logo_url'])?>\\\\\\\" alt=\\\\\\\"Logo\\\\\\\" style=\\\\\\\"max-height:70px\\\\\\\">\\\",\\\"        <?php endif; ?>\\\",\\\"      </td>\\\",\\\"    </tr>\\\",\\\"  </table>\\\",\\\"\\\",\\\"  <h3 style=\\\\\\\"margin-top:0\\\\\\\">Quotation: <?=h($quote['code'])?></h3>\\\",\\\"  <table>\\\",\\\"    <tr><th>Quote Date</th><td><?=h($quote['quote_date'])?></td><th>Client</th><td><?=h($quote['party_name'])?></td></tr>\\\",\\\"    <tr><th>Client GSTIN</th><td><?=h($quote['party_gstin'] ?? '-')?></td><th>Title</th><td><?=h($quote['title'] ?? '')?></td></tr>\\\",\\\"  </table>\\\",\\\"\\\",\\\"  <br>\\\",\\\"  <table>\\\",\\\"    <thead>\\\",\\\"      <tr>\\\",\\\"        <th>Sl</th><th>Item</th><th class=\\\\\\\"text-right\\\\\\\">Qty</th><th>UOM</th>\\\",\\\"        <th class=\\\\\\\"text-right\\\\\\\">Rate</th><th class=\\\\\\\"text-right\\\\\\\">Disc %</th>\\\",\\\"        <th class=\\\\\\\"text-right\\\\\\\">Tax %</th><th class=\\\\\\\"text-right\\\\\\\">Amount</th>\\\",\\\"      </tr>\\\",\\\"    </thead>\\\",\\\"    <tbody>\\\",\\\"      <?php foreach ($items as $it): ?>\\\",\\\"      <tr>\\\",\\\"        <td><?= (int)$it['sl_no'] ?></td>\\\",\\\"        <td><?= h(($it['item_code'] ? $it['item_code'].' - ' : '').$it['item_name']) ?></td>\\\",\\\"        <td class=\\\\\\\"text-right\\\\\\\"><?= h($it['qty']) ?></td>\\\",\\\"        <td><?= h($it['uom']) ?></td>\\\",\\\"        <td class=\\\\\\\"text-right\\\\\\\"><?= number_format((float)$it['rate'],2) ?></td>\\\",\\\"        <td class=\\\\\\\"text-right\\\\\\\"><?= number_format((float)($it['discount_pct'] ?? 0),2) ?></td>\\\",\\\"        <td class=\\\\\\\"text-right\\\\\\\"><?= number_format((float)($it['tax_pct'] ?? 0),2) ?></td>\\\",\\\"        <td class=\\\\\\\"text-right\\\\\\\"><?= number_format((float)$it['line_total'],2) ?></td>\\\",\\\"      </tr>\\\",\\\"      <?php endforeach; ?>\\\",\\\"      <tr><td colspan=\\\\\\\"7\\\\\\\" class=\\\\\\\"text-right\\\\\\\"><b>Subtotal</b></td><td class=\\\\\\\"text-right\\\\\\\"><?=number_format((float)$quote['subtotal'],2)?></td></tr>\\\",\\\"      <tr><td colspan=\\\\\\\"7\\\\\\\" class=\\\\\\\"text-right\\\\\\\"><b>Discount</b></td><td class=\\\\\\\"text-right\\\\\\\"><?=number_format((float)$quote['discount_total'],2)?></td></tr>\\\",\\\"      <tr><td colspan=\\\\\\\"7\\\\\\\" class=\\\\\\\"text-right\\\\\\\"><b>Tax</b></td><td class=\\\\\\\"text-right\\\\\\\"><?=number_format((float)$quote['tax_total'],2)?></td></tr>\\\",\\\"      <tr><td colspan=\\\\\\\"7\\\\\\\" class=\\\\\\\"text-right\\\\\\\"><b>Grand Total</b></td><td class=\\\\\\\"text-right\\\\\\\"><?=number_format((float)$quote['grand_total'],2)?></td></tr>\\\",\\\"    </tbody>\\\",\\\"  </table>\\\",\\\"\\\",\\\"  <?php if (!empty($quote['terms'])): ?>\\\",\\\"    <h4>Terms & Conditions</h4>\\\",\\\"    <div class=\\\\\\\"small\\\\\\\"><?=nl2br(h($quote['terms']))?></div>\\\",\\\"  <?php endif; ?>\\\",\\\"</body>\\\",\\\"</html>\\\",\\\"<?php\\\",\\\"$html = ob_get_clean();\\\",\\\"\\\",\\\"// Write PDF to temp\\\",\\\"$tmpDir = sys_get_temp_dir();\\\",\\\"$pdfPath = $tmpDir . '/Quote-' . preg_replace('/[^A-Za-z0-9\\\\\\\\-]/', '', (string)$quote['code']) . '.pdf';\\\",\\\"\\\",\\\"if (class_exists('\\\\\\\\\\\\\\\\Mpdf\\\\\\\\\\\\\\\\Mpdf')) {\\\",\\\"    $mpdf = new \\\\\\\\Mpdf\\\\\\\\Mpdf(['tempDir' => $tmpDir]);\\\",\\\"    $mpdf->WriteHTML($html);\\\",\\\"    $mpdf->Output($pdfPath, 'F');\\\",\\\"} elseif (class_exists('\\\\\\\\\\\\\\\\Dompdf\\\\\\\\\\\\\\\\Dompdf')) {\\\",\\\"    $dompdf = new \\\\\\\\Dompdf\\\\\\\\Dompdf();\\\",\\\"    $dompdf->loadHtml($html);\\\",\\\"    $dompdf->setPaper('A4');\\\",\\\"    $dompdf->render();\\\",\\\"    file_put_contents($pdfPath, $dompdf->output());\\\",\\\"} else {\\\",\\\"    // fallback: attach HTML\\\",\\\"    $pdfPath = $tmpDir . '/Quote-' . preg_replace('/[^A-Za-z0-9\\\\\\\\-]/','', (string)$quote['code']) . '.html';\\\",\\\"    file_put_contents($pdfPath, $html);\\\",\\\"}\\\",\\\"\\\",\\\"// Subject/body defaults\\\",\\\"if ($subject==='') $subject = 'Quotation ' . $quote['code'];\\\",\\\"if ($body==='') {\\\",\\\"    $body = \\\\\\\"Dear Customer,\\\\\\\\n\\\\\\\\nPlease find attached quotation {$quote['code']}.\\\\\\\\n\\\\\\\\nRegards,\\\\\\\\n\\\\\\\" . ($org['name'] ?? 'Sales Team');\\\",\\\"}\\\",\\\"\\\",\\\"// Send\\\",\\\"$sent = false;\\\",\\\"if (function_exists('send_mail')) {\\\",\\\"    $sent = send_mail($toEmail, $subject, nl2br(h($body)), [$pdfPath]);\\\",\\\"} else {\\\",\\\"    // basic fallback (no attachment)\\\",\\\"    $headers = \\\\\\\"From: no-reply@\\\\\\\" . ($_SERVER['SERVER_NAME'] ?? 'localhost') . \\\\\\\"\\\\\\\\r\\\\\\\\n\\\\\\\";\\\",\\\"    $sent = mail($toEmail, $subject, $body, $headers);\\\",\\\"}\\\",\\\"\\\",\\\"if ($sent) {\\\",\\\"    $pdo->prepare(\\\\\\\"UPDATE sales_quotes SET status='Sent', updated_at=NOW() WHERE id=:id\\\\\\\")->execute([':id'=>$quoteId]);\\\",\\\"    $pdo->prepare(\\\\\\\"INSERT INTO sales_quote_sents (quote_id, sent_to, subject, created_at) VALUES (:qid,:to,:sub,NOW())\\\\\\\")\\\",\\\"        ->execute([':qid'=>$quoteId, ':to'=>$toEmail, ':sub'=>$subject]);\\\",\\\"    flash('Quote emailed successfully.', 'success');\\\",\\\"} else {\\\",\\\"    flash('Failed to send email. Please check mail configuration.', 'danger');\\\",\\\"}\\\",\\\"\\\",\\\"redirect('/sales_quotes/sales_quotes_view.php?id='.$quoteId);\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/analytics.php\\\": [\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"require_once __DIR__ . '/../includes/helpers.php';\\\",\\\"require_login(); require_permission('sales.quote.view');\\\",\\\"\\\",\\\"$pdo=db();\\\",\\\"\\\",\\\"// Win/Loss by month\\\",\\\"$wl = $pdo->query(\\\\\\\"\\\",\\\"SELECT DATE_FORMAT(quote_date,'%Y-%m') AS ym,\\\",\\\"SUM(CASE WHEN status IN ('Accepted','Converted') THEN 1 ELSE 0 END) win,\\\",\\\"SUM(CASE WHEN status='Lost' THEN 1 ELSE 0 END) loss,\\\",\\\"COUNT(*) total\\\",\\\"FROM sales_quotes WHERE deleted_at IS NULL\\\",\\\"GROUP BY ym ORDER BY ym DESC LIMIT 12\\\\\\\")->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"// Cycle time (lead->quote->order)\\\",\\\"$ct = $pdo->query(\\\\\\\"\\\",\\\"SELECT DATE_FORMAT(q.quote_date,'%Y-%m') ym,\\\",\\\"AVG(TIMESTAMPDIFF(DAY, l.created_at, q.quote_date)) AS lead_to_quote_days\\\",\\\"FROM sales_quotes q\\\",\\\"LEFT JOIN crm_leads l ON l.id=q.lead_id\\\",\\\"GROUP BY ym ORDER BY ym DESC LIMIT 12\\\\\\\")->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"$UI_PATH= dirname(__DIR__).'/ui';\\\",\\\"$PAGE_TITLE='Sales Analytics';\\\",\\\"$ACTIVE_MENU='sales.analytics';\\\",\\\"require_once $UI_PATH.'/init.php';\\\",\\\"require_once $UI_PATH.'/layout_start.php';\\\",\\\"?>\\\",\\\"<h3>Sales Analytics</h3>\\\",\\\"<h5>Win/Loss (last 12 months)</h5>\\\",\\\"<table class=\\\\\\\"table table-sm table-striped\\\\\\\">\\\",\\\"  <thead><tr><th>Month</th><th class=\\\\\\\"text-end\\\\\\\">Wins</th><th class=\\\\\\\"text-end\\\\\\\">Losses</th><th class=\\\\\\\"text-end\\\\\\\">Total</th></tr></thead>\\\",\\\"  <tbody>\\\",\\\"  <?php foreach($wl as $r): ?>\\\",\\\"    <tr><td><?=$r['ym']?></td><td class=\\\\\\\"text-end\\\\\\\"><?=$r['win']?></td><td class=\\\\\\\"text-end\\\\\\\"><?=$r['loss']?></td><td class=\\\\\\\"text-end\\\\\\\"><?=$r['total']?></td></tr>\\\",\\\"  <?php endforeach; ?>\\\",\\\"  </tbody>\\\",\\\"</table>\\\",\\\"\\\",\\\"<h5>Avg Lead \\\\u2192 Quote days</h5>\\\",\\\"<table class=\\\\\\\"table table-sm table-striped\\\\\\\">\\\",\\\"  <thead><tr><th>Month</th><th class=\\\\\\\"text-end\\\\\\\">Days</th></tr></thead>\\\",\\\"  <tbody>\\\",\\\"  <?php foreach($ct as $r): ?>\\\",\\\"    <tr><td><?=$r['ym']?></td><td class=\\\\\\\"text-end\\\\\\\"><?=number_format((float)$r['lead_to_quote_days'],1)?></td></tr>\\\",\\\"  <?php endforeach; ?>\\\",\\\"  </tbody>\\\",\\\"</table>\\\",\\\"<?php require_once $UI_PATH.'/layout_end.php';\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/revisions_list.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/sales_quotes/revisions_list.php */\\\",\\\"declare(strict_types=1);\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"require_once __DIR__ . '/../includes/helpers.php';\\\",\\\"\\\",\\\"require_login(); require_permission('sales.quote.view');\\\",\\\"\\\",\\\"$qid = (int)($_GET['quote_id'] ?? 0);\\\",\\\"if ($qid<=0) { flash('Invalid quote id','danger'); redirect('/sales_quotes/sales_quotes_list.php'); }\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"$qh = $pdo->prepare(\\\\\\\"SELECT id, code, title FROM sales_quotes WHERE id=:id\\\\\\\");\\\",\\\"$qh->execute([':id'=>$qid]);\\\",\\\"$q = $qh->fetch(PDO::FETCH_ASSOC);\\\",\\\"if (!$q) { flash('Quote not found','danger'); redirect('/sales_quotes/sales_quotes_list.php'); }\\\",\\\"\\\",\\\"$revs = $pdo->prepare(\\\\\\\"SELECT id, rev_no, created_by, created_at FROM sales_quote_revisions WHERE quote_id=:id ORDER BY rev_no DESC\\\\\\\");\\\",\\\"$revs->execute([':id'=>$qid]);\\\",\\\"$rows = $revs->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"$UI_PATH = dirname(__DIR__).'/ui';\\\",\\\"$PAGE_TITLE = 'Revisions - '.$q['code'];\\\",\\\"$ACTIVE_MENU = 'sales.quotes';\\\",\\\"require_once $UI_PATH.'/init.php';\\\",\\\"require_once $UI_PATH.'/layout_start.php';\\\",\\\"?>\\\",\\\"<h3 class=\\\\\\\"mb-3\\\\\\\">Revisions for <?=h($q['code'])?> - <?=h($q['title']??'')?></h3>\\\",\\\"\\\",\\\"<form class=\\\\\\\"row g-2 mb-3\\\\\\\" method=\\\\\\\"get\\\\\\\" action=\\\\\\\"/sales_quotes/revisions_compare.php\\\\\\\">\\\",\\\"  <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"quote_id\\\\\\\" value=\\\\\\\"<?=$qid?>\\\\\\\">\\\",\\\"  <div class=\\\\\\\"col-auto\\\\\\\">\\\",\\\"    <select name=\\\\\\\"a\\\\\\\" class=\\\\\\\"form-select\\\\\\\" required>\\\",\\\"      <option value=\\\\\\\"\\\\\\\">Select Rev A</option>\\\",\\\"      <?php foreach ($rows as $r): ?>\\\",\\\"        <option value=\\\\\\\"<?=$r['rev_no']?>\\\\\\\">R<?=$r['rev_no']?> (<?=$r['created_at']?>)</option>\\\",\\\"      <?php endforeach; ?>\\\",\\\"    </select>\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-auto\\\\\\\">\\\",\\\"    <select name=\\\\\\\"b\\\\\\\" class=\\\\\\\"form-select\\\\\\\" required>\\\",\\\"      <option value=\\\\\\\"\\\\\\\">Select Rev B</option>\\\",\\\"      <?php foreach ($rows as $r): ?>\\\",\\\"        <option value=\\\\\\\"<?=$r['rev_no']?>\\\\\\\">R<?=$r['rev_no']?> (<?=$r['created_at']?>)</option>\\\",\\\"      <?php endforeach; ?>\\\",\\\"    </select>\\\",\\\"  </div>\\\",\\\"  <div class=\\\\\\\"col-auto\\\\\\\">\\\",\\\"    <button class=\\\\\\\"btn btn-outline-primary\\\\\\\">Compare</button>\\\",\\\"  </div>\\\",\\\"</form>\\\",\\\"\\\",\\\"<table class=\\\\\\\"table table-sm table-striped\\\\\\\">\\\",\\\"  <thead><tr><th>Rev</th><th>Created</th><th>By</th><th class=\\\\\\\"text-end\\\\\\\">Actions</th></tr></thead>\\\",\\\"  <tbody>\\\",\\\"    <?php foreach ($rows as $r): ?>\\\",\\\"      <tr>\\\",\\\"        <td>R<?=$r['rev_no']?></td>\\\",\\\"        <td><?=h($r['created_at'])?></td>\\\",\\\"        <td>#<?=h($r['created_by'])?></td>\\\",\\\"        <td class=\\\\\\\"text-end\\\\\\\">\\\",\\\"          <?php if (rbac_can('sales.quote.edit')): ?>\\\",\\\"          <form action=\\\\\\\"/sales_quotes/revision_restore.php\\\\\\\" method=\\\\\\\"post\\\\\\\" class=\\\\\\\"d-inline\\\\\\\" onsubmit=\\\\\\\"return confirm('Restore this revision into the live quote?');\\\\\\\">\\\",\\\"            <?=csrf_hidden_input()?>\\\",\\\"            <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"quote_id\\\\\\\" value=\\\\\\\"<?=$qid?>\\\\\\\">\\\",\\\"            <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"rev_no\\\\\\\" value=\\\\\\\"<?=$r['rev_no']?>\\\\\\\">\\\",\\\"            <button class=\\\\\\\"btn btn-sm btn-outline-warning\\\\\\\">Restore</button>\\\",\\\"          </form>\\\",\\\"          <?php endif; ?>\\\",\\\"          <a class=\\\\\\\"btn btn-sm btn-outline-secondary\\\\\\\" href=\\\\\\\"/sales_quotes/revisions_compare.php?quote_id=<?=$qid?>&a=<?=$r['rev_no']?>&b=<?=$r['rev_no']?>\\\\\\\">View</a>\\\",\\\"        </td>\\\",\\\"      </tr>\\\",\\\"    <?php endforeach; ?>\\\",\\\"  </tbody>\\\",\\\"</table>\\\",\\\"<?php require_once $UI_PATH.'/layout_end.php';\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/convert_to_order.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/sales_quotes/convert_to_order.php */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"require_once __DIR__ . '/../includes/csrf.php';\\\",\\\"require_once __DIR__ . '/../includes/helpers.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('sales.order.create');\\\",\\\"csrf_require_token();\\\",\\\"\\\",\\\"$quoteId    = (int)($_POST['quote_id'] ?? $_GET['quote_id'] ?? 0);\\\",\\\"$setLeadWon = (int)($_POST['set_lead_won'] ?? $_GET['set_lead_won'] ?? 0);\\\",\\\"\\\",\\\"if ($quoteId <= 0) {\\\",\\\"    flash('Invalid quote id', 'danger');\\\",\\\"    redirect('/sales_quotes/sales_quotes_list.php');\\\",\\\"}\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"$pdo->beginTransaction();\\\",\\\"\\\",\\\"try {\\\",\\\"    // Lock quote\\\",\\\"    $q = $pdo->prepare(\\\\\\\"\\\",\\\"        SELECT q.*, p.name AS party_name\\\",\\\"          FROM sales_quotes q\\\",\\\"          LEFT JOIN parties p ON p.id = q.party_id\\\",\\\"         WHERE q.id = :id AND q.deleted_at IS NULL\\\",\\\"         FOR UPDATE\\\",\\\"    \\\\\\\");\\\",\\\"    $q->execute([':id' => $quoteId]);\\\",\\\"    $quote = $q->fetch(PDO::FETCH_ASSOC);\\\",\\\"    if (!$quote) {\\\",\\\"        throw new RuntimeException('Quote not found or deleted.');\\\",\\\"    }\\\",\\\"\\\",\\\"    // Already converted?\\\",\\\"    $chk = $pdo->prepare(\\\\\\\"SELECT id FROM sales_orders WHERE quote_id = :qid LIMIT 1\\\\\\\");\\\",\\\"    $chk->execute([':qid' => $quoteId]);\\\",\\\"    if ($chk->fetchColumn()) {\\\",\\\"        throw new RuntimeException('This quote is already converted to a Sales Order.');\\\",\\\"    }\\\",\\\"\\\",\\\"    // Fetch quote items (MAPPED TO YOUR SCHEMA)\\\",\\\"    $qi = $pdo->prepare(\\\\\\\"\\\",\\\"        SELECT sl_no, item_code, item_name, qty, uom, rate, discount_pct, tax_pct, line_total\\\",\\\"          FROM sales_quote_items\\\",\\\"         WHERE quote_id = :qid\\\",\\\"         ORDER BY sl_no\\\",\\\"    \\\\\\\");\\\",\\\"    $qi->execute([':qid' => $quoteId]);\\\",\\\"    $items = $qi->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"    // Create SO header (adjust fields as per your sales_orders table)\\\",\\\"    $soNo = next_no('SO');\\\",\\\"    $insSO = $pdo->prepare(\\\\\\\"\\\",\\\"        INSERT INTO sales_orders\\\",\\\"            (code, quote_id, party_id, contact_id, site_id, title, order_date, currency, fx_rate,\\\",\\\"             subtotal, discount_total, tax_total, grand_total, status, created_by, created_at)\\\",\\\"        VALUES\\\",\\\"            (:code, :quote_id, :party_id, :contact_id, :site_id, :title, CURRENT_DATE, :currency, :fx_rate,\\\",\\\"             :subtotal, :discount_total, :tax_total, :grand_total, 'Draft', :uid, NOW())\\\",\\\"    \\\\\\\");\\\",\\\"    $insSO->execute([\\\",\\\"        ':code'           => $soNo,\\\",\\\"        ':quote_id'       => $quote['id'],\\\",\\\"        ':party_id'       => $quote['party_id'],\\\",\\\"        ':contact_id'     => $quote['contact_id'],\\\",\\\"        ':site_id'        => $quote['site_id'],\\\",\\\"        ':title'          => $quote['title'] ?: ('Order for ' . ($quote['party_name'] ?? '')),\\\",\\\"        ':currency'       => $quote['currency'] ?? 'INR',\\\",\\\"        ':fx_rate'        => $quote['fx_rate'] ?? 1.0,\\\",\\\"        ':subtotal'       => $quote['subtotal'] ?? 0,\\\",\\\"        ':discount_total' => $quote['discount_total'] ?? 0,\\\",\\\"        ':tax_total'      => $quote['tax_total'] ?? 0,\\\",\\\"        ':grand_total'    => $quote['grand_total'] ?? 0,\\\",\\\"        ':uid'            => (int)current_user_id(),\\\",\\\"    ]);\\\",\\\"    $soId = (int)$pdo->lastInsertId();\\\",\\\"\\\",\\\"    // Copy items into sales_order_items (assumes same-named columns exist there)\\\",\\\"    if ($items) {\\\",\\\"        $insItem = $pdo->prepare(\\\\\\\"\\\",\\\"            INSERT INTO sales_order_items\\\",\\\"                (order_id, sl_no, item_code, item_name, qty, uom, rate, discount_pct, tax_pct, line_total)\\\",\\\"            VALUES\\\",\\\"                (:order_id, :sl_no, :item_code, :item_name, :qty, :uom, :rate, :discount_pct, :tax_pct, :line_total)\\\",\\\"        \\\\\\\");\\\",\\\"        foreach ($items as $it) {\\\",\\\"            $insItem->execute([\\\",\\\"                ':order_id'     => $soId,\\\",\\\"                ':sl_no'        => (int)$it['sl_no'],\\\",\\\"                ':item_code'    => (string)($it['item_code'] ?? ''),\\\",\\\"                ':item_name'    => (string)$it['item_name'],\\\",\\\"                ':qty'          => (float)$it['qty'],\\\",\\\"                ':uom'          => (string)$it['uom'],\\\",\\\"                ':rate'         => (float)$it['rate'],\\\",\\\"                ':discount_pct' => (float)($it['discount_pct'] ?? 0),\\\",\\\"                ':tax_pct'      => (float)($it['tax_pct'] ?? 0),\\\",\\\"                ':line_total'   => (float)$it['line_total'],\\\",\\\"            ]);\\\",\\\"        }\\\",\\\"    }\\\",\\\"\\\",\\\"    // Optional: mark related lead Won\\\",\\\"    if ($setLeadWon && (int)$quote['lead_id'] > 0) {\\\",\\\"        $pdo->prepare(\\\\\\\"UPDATE crm_leads SET stage='Won', updated_at=NOW() WHERE id=:lid\\\\\\\")\\\",\\\"            ->execute([':lid' => (int)$quote['lead_id']]);\\\",\\\"    }\\\",\\\"\\\",\\\"    // Mark quote as converted\\\",\\\"    $pdo->prepare(\\\\\\\"UPDATE sales_quotes SET status='Converted', updated_at=NOW() WHERE id=:qid\\\\\\\")\\\",\\\"        ->execute([':qid' => $quoteId]);\\\",\\\"\\\",\\\"    $pdo->commit();\\\",\\\"\\\",\\\"    flash(\\\\\\\"Sales Order #{$soNo} created from Quote #{$quote['code']}.\\\\\\\", 'success');\\\",\\\"    redirect('/sales_orders/sales_order_view.php?id=' . $soId);\\\",\\\"\\\",\\\"} catch (Throwable $e) {\\\",\\\"    if ($pdo->inTransaction()) $pdo->rollBack();\\\",\\\"    // Helpful guidance if sales_order_items schema differs\\\",\\\"    $msg = $e->getMessage();\\\",\\\"    if (stripos($msg, 'Unknown column') !== false) {\\\",\\\"        $msg .= ' \\\\u2014 Adjust the INSERT column list in sales_order_items to your schema.';\\\",\\\"    }\\\",\\\"    flash('Conversion failed: ' . h($msg), 'danger');\\\",\\\"    redirect('/sales_quotes/sales_quotes_view.php?id=' . $quoteId);\\\",\\\"}\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/revision_new.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/sales_quotes/revision_new.php */\\\",\\\"declare(strict_types=1);\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"require_once __DIR__ . '/../includes/csrf.php';\\\",\\\"require_once __DIR__ . '/../includes/helpers.php';\\\",\\\"\\\",\\\"require_login(); require_permission('sales.quote.edit'); csrf_require_token();\\\",\\\"\\\",\\\"$qid = (int)($_POST['quote_id'] ?? 0);\\\",\\\"if ($qid<=0) { flash('Invalid quote id','danger'); redirect('/sales_quotes/sales_quotes_list.php'); }\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"\\\",\\\"$h = $pdo->prepare(\\\\\\\"SELECT * FROM sales_quotes WHERE id=:id AND deleted_at IS NULL\\\\\\\");\\\",\\\"$h->execute([':id'=>$qid]);\\\",\\\"$header = $h->fetch(PDO::FETCH_ASSOC);\\\",\\\"if (!$header) { flash('Quote not found','danger'); redirect('/sales_quotes/sales_quotes_list.php'); }\\\",\\\"\\\",\\\"$i = $pdo->prepare(\\\\\\\"SELECT * FROM sales_quote_items WHERE quote_id=:id ORDER BY sl\\\\\\\");\\\",\\\"$i->execute([':id'=>$qid]);\\\",\\\"$items = $i->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"$revNo = (int)$pdo->query(\\\\\\\"SELECT COALESCE(MAX(rev_no),0)+1 AS n FROM sales_quote_revisions WHERE quote_id={$qid}\\\\\\\")->fetchColumn();\\\",\\\"$payload = json_encode(['header'=>$header,'items'=>$items], JSON_UNESCAPED_UNICODE);\\\",\\\"\\\",\\\"$s = $pdo->prepare(\\\\\\\"INSERT INTO sales_quote_revisions(quote_id,rev_no,snapshot,created_by,created_at) VALUES(?,?,?,?,NOW())\\\\\\\");\\\",\\\"$s->execute([$qid,$revNo,$payload,(int)current_user_id()]);\\\",\\\"\\\",\\\"flash(\\\\\\\"Revision R{$revNo} saved.\\\\\\\", 'success');\\\",\\\"redirect('/sales_quotes/revisions_list.php?quote_id='.$qid);\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/revision_restore.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/sales_quotes/revision_restore.php */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"require_once __DIR__ . '/../includes/csrf.php';\\\",\\\"require_once __DIR__ . '/../includes/helpers.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('sales.quote.edit');\\\",\\\"csrf_require_token();\\\",\\\"\\\",\\\"$qid = (int)($_POST['quote_id'] ?? 0);\\\",\\\"$rev = (int)($_POST['rev_no'] ?? 0);\\\",\\\"if ($qid<=0 || $rev<=0) { flash('Invalid request','danger'); redirect('/sales_quotes/sales_quotes_list.php'); }\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"$stm = $pdo->prepare(\\\\\\\"SELECT snapshot FROM sales_quote_revisions WHERE quote_id=:qid AND rev_no=:r\\\\\\\");\\\",\\\"$stm->execute([':qid'=>$qid, ':r'=>$rev]);\\\",\\\"$row = $stm->fetch(PDO::FETCH_ASSOC);\\\",\\\"if (!$row) { flash('Revision not found','danger'); redirect('/sales_quotes/sales_quotes_view.php?id='.$qid); }\\\",\\\"\\\",\\\"$data  = json_decode($row['snapshot'], true);\\\",\\\"$h     = $data['header'] ?? null;\\\",\\\"$items = $data['items'] ?? [];\\\",\\\"\\\",\\\"if (!$h) { flash('Invalid snapshot','danger'); redirect('/sales_quotes/sales_quotes_view.php?id='.$qid); }\\\",\\\"\\\",\\\"$pdo->beginTransaction();\\\",\\\"try {\\\",\\\"    // Update header (keep id/created*)\\\",\\\"    $fields = ['title','quote_date','party_id','contact_id','site_id','currency','fx_rate','subtotal','discount_total','tax_total','grand_total','terms','status'];\\\",\\\"    $set = []; $params = [':id'=>$qid];\\\",\\\"    foreach ($fields as $f) { $set[] = \\\\\\\"$f=:$f\\\\\\\"; $params[\\\\\\\":$f\\\\\\\"] = $h[$f] ?? null; }\\\",\\\"    $pdo->prepare(\\\\\\\"UPDATE sales_quotes SET \\\\\\\".implode(',', $set).\\\\\\\", updated_at=NOW() WHERE id=:id\\\\\\\")->execute($params);\\\",\\\"\\\",\\\"    // Replace items (MAPPED TO YOUR SCHEMA)\\\",\\\"    $pdo->prepare(\\\\\\\"DELETE FROM sales_quote_items WHERE quote_id=:id\\\\\\\")->execute([':id'=>$qid]);\\\",\\\"\\\",\\\"    $ins = $pdo->prepare(\\\\\\\"\\\",\\\"        INSERT INTO sales_quote_items\\\",\\\"            (quote_id, sl_no, item_code, item_name, qty, uom, rate, discount_pct, tax_pct, line_total)\\\",\\\"        VALUES\\\",\\\"            (:qid, :sl_no, :item_code, :item_name, :qty, :uom, :rate, :discount_pct, :tax_pct, :line_total)\\\",\\\"    \\\\\\\");\\\",\\\"\\\",\\\"    $fallbackSl = 1;\\\",\\\"    foreach ($items as $it){\\\",\\\"        $ins->execute([\\\",\\\"            ':qid'          => $qid,\\\",\\\"            ':sl_no'        => (int)($it['sl_no'] ?? $fallbackSl++),\\\",\\\"            ':item_code'    => (string)($it['item_code'] ?? ''),\\\",\\\"            ':item_name'    => (string)($it['item_name'] ?? ($it['name'] ?? '')),\\\",\\\"            ':qty'          => (float)($it['qty'] ?? 0),\\\",\\\"            ':uom'          => (string)($it['uom'] ?? ''),\\\",\\\"            ':rate'         => (float)($it['rate'] ?? ($it['price'] ?? 0)),\\\",\\\"            ':discount_pct' => (float)($it['discount_pct'] ?? 0),\\\",\\\"            ':tax_pct'      => (float)($it['tax_pct'] ?? ($it['tax_rate'] ?? 0)),\\\",\\\"            ':line_total'   => (float)($it['line_total'] ?? 0),\\\",\\\"        ]);\\\",\\\"    }\\\",\\\"\\\",\\\"    $pdo->commit();\\\",\\\"    flash(\\\\\\\"Revision R{$rev} restored into the live quote.\\\\\\\", 'success');\\\",\\\"\\\",\\\"} catch (Throwable $e) {\\\",\\\"    if ($pdo->inTransaction()) $pdo->rollBack();\\\",\\\"    flash('Restore failed: '.h($e->getMessage()), 'danger');\\\",\\\"}\\\",\\\"redirect('/sales_quotes/sales_quotes_view.php?id='.$qid);\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/sales_quotes_delete.php\\\": [\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"require_once __DIR__ . '/../includes/csrf.php';\\\",\\\"require_login(); require_permission('sales.quote.delete'); csrf_require_token();\\\",\\\"$id = (int)($_POST['id'] ?? 0);\\\",\\\"if ($id>0){\\\",\\\"  $pdo = db();\\\",\\\"  $stm = $pdo->prepare(\\\\\\\"UPDATE sales_quotes SET deleted_at=NOW() WHERE id=:id AND status<>'Converted'\\\\\\\");\\\",\\\"  $stm->execute([':id'=>$id]);\\\",\\\"  if ($stm->rowCount()===0) flash('Cannot delete (maybe already converted?)','warning');\\\",\\\"  else flash('Quote deleted (soft).','success');\\\",\\\"}\\\",\\\"redirect('/sales_quotes/sales_quotes_list.php');\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/revisions_compare.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/sales_quotes/revisions_compare.php */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"require_once __DIR__ . '/../includes/helpers.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"require_permission('sales.quote.view');\\\",\\\"\\\",\\\"$qid = (int)($_GET['quote_id'] ?? 0);\\\",\\\"$A   = (int)($_GET['a'] ?? 0);\\\",\\\"$B   = (int)($_GET['b'] ?? 0);\\\",\\\"if ($qid<=0 || $A<=0 || $B<=0) { http_response_code(400); echo 'Bad request'; exit; }\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"$load = $pdo->prepare(\\\\\\\"\\\",\\\"    SELECT rev_no, snapshot, created_at\\\",\\\"      FROM sales_quote_revisions\\\",\\\"     WHERE quote_id=:qid AND rev_no IN (:a,:b)\\\",\\\"     ORDER BY rev_no\\\",\\\"\\\\\\\");\\\",\\\"$load->execute([':qid'=>$qid, ':a'=>$A, ':b'=>$B]);\\\",\\\"$revs = $load->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"$pick = function(array $rows, int $revNo) {\\\",\\\"    foreach ($rows as $r) if ((int)$r['rev_no'] === $revNo) return json_decode($r['snapshot'] ?? '{}', true);\\\",\\\"    return [];\\\",\\\"};\\\",\\\"$rA = $pick($revs, $A);\\\",\\\"$rB = $pick($revs, $B);\\\",\\\"\\\",\\\"function diff_cell($av, $bv){\\\",\\\"    if ($av === $bv) return '<td colspan=\\\\\\\"2\\\\\\\">'.h((string)$av).'</td>';\\\",\\\"    return '<td><del>'.h((string)$av).'</del></td><td><ins>'.h((string)$bv).'</ins></td>';\\\",\\\"}\\\",\\\"\\\",\\\"$UI_PATH = dirname(__DIR__).'/ui';\\\",\\\"$PAGE_TITLE = \\\\\\\"Compare R{$A} vs R{$B}\\\\\\\";\\\",\\\"$ACTIVE_MENU = 'sales.quotes';\\\",\\\"require_once $UI_PATH.'/init.php';\\\",\\\"require_once $UI_PATH.'/layout_start.php';\\\",\\\"?>\\\",\\\"<h3>Compare Revisions R<?=$A?> \\\\u2194 R<?=$B?></h3>\\\",\\\"\\\",\\\"<h5 class=\\\\\\\"mt-3\\\\\\\">Header</h5>\\\",\\\"<table class=\\\\\\\"table table-sm\\\\\\\">\\\",\\\"  <thead><tr><th>Field</th><th>Rev <?=$A?></th><th>Rev <?=$B?></th></tr></thead>\\\",\\\"  <tbody>\\\",\\\"  <?php\\\",\\\"  $fields = ['title','quote_date','party_id','contact_id','subtotal','discount_total','tax_total','grand_total','terms','status'];\\\",\\\"  foreach ($fields as $f) {\\\",\\\"    $av = $rA['header'][$f] ?? '';\\\",\\\"    $bv = $rB['header'][$f] ?? '';\\\",\\\"    echo '<tr><th>'.h($f).'</th>'.diff_cell($av,$bv).'</tr>';\\\",\\\"  }\\\",\\\"  ?>\\\",\\\"  </tbody>\\\",\\\"</table>\\\",\\\"\\\",\\\"<h5 class=\\\\\\\"mt-3\\\\\\\">Lines</h5>\\\",\\\"<table class=\\\\\\\"table table-sm\\\\\\\">\\\",\\\"  <thead>\\\",\\\"    <tr>\\\",\\\"      <th>Sl</th><th>Item Code</th><th>Item Name</th>\\\",\\\"      <th class=\\\\\\\"text-end\\\\\\\">Qty</th><th>UOM</th>\\\",\\\"      <th class=\\\\\\\"text-end\\\\\\\">Rate</th><th class=\\\\\\\"text-end\\\\\\\">Disc %</th>\\\",\\\"      <th class=\\\\\\\"text-end\\\\\\\">Tax %</th><th class=\\\\\\\"text-end\\\\\\\">Amount</th>\\\",\\\"    </tr>\\\",\\\"  </thead>\\\",\\\"  <tbody>\\\",\\\"  <?php\\\",\\\"  $la = $rA['items'] ?? [];\\\",\\\"  $lb = $rB['items'] ?? [];\\\",\\\"  $max = max(count($la), count($lb));\\\",\\\"  for ($i=0;$i<$max;$i++){\\\",\\\"    $a = $la[$i] ?? [];\\\",\\\"    $b = $lb[$i] ?? [];\\\",\\\"    $slA = $a['sl_no'] ?? ($i+1);\\\",\\\"    $slB = $b['sl_no'] ?? ($i+1);\\\",\\\"    $chg = ($a != $b) ? 'table-warning' : '';\\\",\\\"    echo \\\\\\\"<tr class='{$chg}'>\\\\\\\";\\\",\\\"    echo \\\\\\\"<td>\\\\\\\".h($slA).\\\\\\\" \\\\u2192 \\\\\\\".h($slB).\\\\\\\"</td>\\\\\\\";\\\",\\\"    echo \\\\\\\"<td>\\\\\\\".h($a['item_code'] ?? '').\\\\\\\" \\\\u2192 \\\\\\\".h($b['item_code'] ?? '').\\\\\\\"</td>\\\\\\\";\\\",\\\"    echo \\\\\\\"<td>\\\\\\\".h($a['item_name'] ?? ($a['name'] ?? '')).\\\\\\\"</td>\\\\\\\";\\\",\\\"    echo \\\\\\\"<td class='text-end'>\\\\\\\".h($a['qty'] ?? '').\\\\\\\" \\\\u2192 \\\\\\\".h($b['qty'] ?? '').\\\\\\\"</td>\\\\\\\";\\\",\\\"    echo \\\\\\\"<td>\\\\\\\".h($a['uom'] ?? '').\\\\\\\" \\\\u2192 \\\\\\\".h($b['uom'] ?? '').\\\\\\\"</td>\\\\\\\";\\\",\\\"    echo \\\\\\\"<td class='text-end'>\\\\\\\".h($a['rate'] ?? ($a['price'] ?? '')).\\\\\\\" \\\\u2192 \\\\\\\".h($b['rate'] ?? ($b['price'] ?? '')).\\\\\\\"</td>\\\\\\\";\\\",\\\"    echo \\\\\\\"<td class='text-end'>\\\\\\\".h($a['discount_pct'] ?? '').\\\\\\\" \\\\u2192 \\\\\\\".h($b['discount_pct'] ?? '').\\\\\\\"</td>\\\\\\\";\\\",\\\"    echo \\\\\\\"<td class='text-end'>\\\\\\\".h($a['tax_pct'] ?? ($a['tax_rate'] ?? '')).\\\\\\\" \\\\u2192 \\\\\\\".h($b['tax_pct'] ?? ($b['tax_rate'] ?? '')).\\\\\\\"</td>\\\\\\\";\\\",\\\"    echo \\\\\\\"<td class='text-end'>\\\\\\\".h($a['line_total'] ?? '').\\\\\\\" \\\\u2192 \\\\\\\".h($b['line_total'] ?? '').\\\\\\\"</td>\\\\\\\";\\\",\\\"    echo \\\\\\\"</tr>\\\\\\\";\\\",\\\"  }\\\",\\\"  ?>\\\",\\\"  </tbody>\\\",\\\"</table>\\\",\\\"<?php require_once $UI_PATH.'/layout_end.php';\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/sales_quotes_form.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/sales_quotes/sales_quotes_form.php */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"require_once __DIR__ . '/../includes/csrf.php';\\\",\\\"require_once __DIR__ . '/../includes/helpers.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"$id = (int)($_GET['id'] ?? 0);\\\",\\\"$isEdit = $id > 0;\\\",\\\"require_permission($isEdit ? 'sales.quote.edit' : 'sales.quote.create');\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"\\\",\\\"/** ---------- helpers (table detection) ---------- */\\\",\\\"function table_exists(PDO $pdo, string $name): bool {\\\",\\\"  static $cache = [];\\\",\\\"  if (array_key_exists($name, $cache)) return $cache[$name];\\\",\\\"  $st = $pdo->prepare(\\\\\\\"SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = ?\\\\\\\");\\\",\\\"  $st->execute([$name]);\\\",\\\"  return $cache[$name] = ((int)$st->fetchColumn() > 0);\\\",\\\"}\\\",\\\"function fetch_quote_items(PDO $pdo, int $quoteId): array {\\\",\\\"  if ($quoteId <= 0) return [];\\\",\\\"  // 1) sales_quote_items.quote_id\\\",\\\"  if (table_exists($pdo, 'sales_quote_items')) {\\\",\\\"    try {\\\",\\\"      $st = $pdo->prepare(\\\\\\\"SELECT * FROM sales_quote_items WHERE quote_id=? ORDER BY sl_no, id\\\\\\\");\\\",\\\"      $st->execute([$quoteId]);\\\",\\\"      $rows = $st->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"      if ($rows) return $rows;\\\",\\\"      // try sales_quote_id column (fallback)\\\",\\\"      $st = $pdo->prepare(\\\\\\\"SELECT * FROM sales_quote_items WHERE sales_quote_id=? ORDER BY sl_no, id\\\\\\\");\\\",\\\"      $st->execute([$quoteId]);\\\",\\\"      $rows = $st->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"      if ($rows) return $rows;\\\",\\\"    } catch (Throwable $e) {}\\\",\\\"  }\\\",\\\"  // 2) sales_quotes_items.quote_id (plural table)\\\",\\\"  if (table_exists($pdo, 'sales_quotes_items')) {\\\",\\\"    try {\\\",\\\"      $st = $pdo->prepare(\\\\\\\"SELECT * FROM sales_quotes_items WHERE quote_id=? ORDER BY sl_no, id\\\\\\\");\\\",\\\"      $st->execute([$quoteId]);\\\",\\\"      $rows = $st->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"      if ($rows) return $rows;\\\",\\\"      $st = $pdo->prepare(\\\\\\\"SELECT * FROM sales_quotes_items WHERE sales_quote_id=? ORDER BY sl_no, id\\\\\\\");\\\",\\\"      $st->execute([$quoteId]);\\\",\\\"      $rows = $st->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"      if ($rows) return $rows;\\\",\\\"    } catch (Throwable $e) {}\\\",\\\"  }\\\",\\\"  return [];\\\",\\\"}\\\",\\\"\\\",\\\"/** ---------- header defaults ---------- */\\\",\\\"$row = [\\\",\\\"  'code' => '',\\\",\\\"  'quote_date' => date('Y-m-d'),\\\",\\\"  'valid_till' => null,\\\",\\\"  'status' => 'Draft',\\\",\\\"  'party_id' => null,\\\",\\\"  'party_contact_id' => null,\\\",\\\"  'lead_id' => isset($_GET['lead_id']) ? (int)$_GET['lead_id'] : null,\\\",\\\"  'currency' => 'INR',\\\",\\\"  'notes' => '',\\\",\\\"  'terms' => '',\\\",\\\"  'subtotal' => '0.00',\\\",\\\"  'discount_amount' => '0.00',\\\",\\\"  'tax_amount' => '0.00',\\\",\\\"  'round_off' => '0.00',\\\",\\\"  'grand_total' => '0.00',\\\",\\\"  // site address fields\\\",\\\"  'site_name' => '',\\\",\\\"  'site_address_line1' => '',\\\",\\\"  'site_address_line2' => '',\\\",\\\"  'site_city' => '',\\\",\\\"  'site_state' => '',\\\",\\\"  'site_pincode' => '',\\\",\\\"  'site_gst_number' => '',\\\",\\\"  // toggle\\\",\\\"  'use_site_as_bill_to' => 0,\\\",\\\"];\\\",\\\"\\\",\\\"/** ---------- load existing header ---------- */\\\",\\\"if ($isEdit) {\\\",\\\"  $st = $pdo->prepare(\\\\\\\"SELECT * FROM sales_quotes WHERE id=? LIMIT 1\\\\\\\");\\\",\\\"  $st->execute([$id]);\\\",\\\"  if ($dbrow = $st->fetch(PDO::FETCH_ASSOC)) $row = array_merge($row, $dbrow);\\\",\\\"}\\\",\\\"\\\",\\\"/** ---------- prefill from lead ---------- */\\\",\\\"if (!$isEdit && !empty($row['lead_id'])) {\\\",\\\"  $st = $pdo->prepare(\\\\\\\"SELECT party_id, party_contact_id, title FROM crm_leads WHERE id=?\\\\\\\");\\\",\\\"  $st->execute([(int)$row['lead_id']]);\\\",\\\"  if ($lead = $st->fetch(PDO::FETCH_ASSOC)) {\\\",\\\"    if (!empty($lead['party_id'])) $row['party_id'] = (int)$lead['party_id'];\\\",\\\"    if (!empty($lead['party_contact_id'])) $row['party_contact_id'] = (int)$lead['party_contact_id'];\\\",\\\"    if (empty($row['notes']) && !empty($lead['title'])) $row['notes'] = 'Ref: Lead - '.$lead['title'];\\\",\\\"  }\\\",\\\"}\\\",\\\"\\\",\\\"/** ---------- clients & contacts ---------- */\\\",\\\"$clients = $pdo->query(\\\\\\\"SELECT id, code, name FROM parties\\\",\\\"  WHERE (status=1 OR status IS NULL) AND (type='client' OR type IS NULL)\\\",\\\"  ORDER BY name\\\\\\\")->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"\\\",\\\"$contacts = [];\\\",\\\"if (!empty($row['party_id'])) {\\\",\\\"  $st = $pdo->prepare(\\\\\\\"SELECT id, name, phone FROM party_contacts WHERE party_id=? ORDER BY is_primary DESC, name\\\\\\\");\\\",\\\"  $st->execute([(int)$row['party_id']]);\\\",\\\"  $contacts = $st->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"}\\\",\\\"\\\",\\\"/** ---------- UOM (active) ---------- */\\\",\\\"$uoms = $pdo->query(\\\\\\\"SELECT code, name FROM uom WHERE status='active' ORDER BY name\\\\\\\")->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"$uomOptionsHtml = '';\\\",\\\"foreach ($uoms as $u) {\\\",\\\"  $code = (string)$u['code'];\\\",\\\"  $label = trim($u['code'].' - '.$u['name']);\\\",\\\"  $uomOptionsHtml .= '<option value=\\\\\\\"'.h($code).'\\\\\\\">'.h($label).'</option>';\\\",\\\"}\\\",\\\"\\\",\\\"/** ---------- Quote Items master (for dropdown) ---------- */\\\",\\\"$qItems = $pdo->query(\\\\\\\"SELECT code, name, hsn_sac, uom, rate_default, tax_pct_default\\\",\\\"                       FROM quote_items\\\",\\\"                       WHERE deleted_at IS NULL AND is_active=1\\\",\\\"                       ORDER BY name LIMIT 500\\\\\\\")->fetchAll(PDO::FETCH_ASSOC);\\\",\\\"$QI_OPTIONS_HTML = '<option value=\\\\\\\"\\\\\\\">-- Pick Item --</option>';\\\",\\\"$QI_MAP = [];\\\",\\\"foreach ($qItems as $qi) {\\\",\\\"  $code = (string)$qi['code'];\\\",\\\"  $text = ($qi['code'] ? $qi['code'].' \\\\u00b7 ' : '').$qi['name'];\\\",\\\"  $QI_OPTIONS_HTML .= '<option value=\\\\\\\"'.h($code).'\\\\\\\">'.h($text).'</option>';\\\",\\\"  $QI_MAP[$code] = [\\\",\\\"    'name' => (string)$qi['name'],\\\",\\\"    'hsn'  => (string)($qi['hsn_sac'] ?? ''),\\\",\\\"    'uom'  => (string)($qi['uom'] ?? ''),\\\",\\\"    'rate' => (string)number_format((float)($qi['rate_default'] ?? 0), 2, '.', ''),\\\",\\\"    'tax'  => (string)number_format((float)($qi['tax_pct_default'] ?? 0), 2, '.', ''),\\\",\\\"  ];\\\",\\\"}\\\",\\\"\\\",\\\"/** ---------- items for this quote (robust) ---------- */\\\",\\\"$items = $isEdit ? fetch_quote_items($pdo, $id) : [];\\\",\\\"\\\",\\\"include __DIR__ . '/../ui/layout_start.php';\\\",\\\"render_flash();\\\",\\\"?>\\\",\\\"<style>\\\",\\\".item-suggest{position:absolute;z-index:1000;display:none;max-height:260px;overflow-y:auto;background:#fff;border:1px solid rgba(0,0,0,.15);border-radius:.5rem;box-shadow:0 .5rem 1rem rgba(0,0,0,.15)}\\\",\\\".item-cell{position:relative}\\\",\\\"</style>\\\",\\\"\\\",\\\"<div class=\\\\\\\"d-flex align-items-center justify-content-between mb-3\\\\\\\">\\\",\\\"  <h1 class=\\\\\\\"h4 mb-0\\\\\\\"><?= $isEdit ? 'Edit Quotation' : 'New Quotation' ?></h1>\\\",\\\"  <div class=\\\\\\\"d-flex gap-2\\\\\\\">\\\",\\\"    <?php if ($isEdit): ?>\\\",\\\"      <a class=\\\\\\\"btn btn-outline-secondary\\\\\\\" target=\\\\\\\"_blank\\\\\\\" href=\\\\\\\"<?= h('../prints/quote_print.php?id='.$id) ?>\\\\\\\">Print</a>\\\",\\\"      <?php if (has_permission('sales.order.create')): ?>\\\",\\\"        <a class=\\\\\\\"btn btn-outline-primary\\\\\\\" href=\\\\\\\"<?= h('convert_to_order.php?quote_id='.$id) ?>\\\\\\\">Convert \\\\u2192 Order</a>\\\",\\\"      <?php endif; ?>\\\",\\\"    <?php endif; ?>\\\",\\\"    <a href=\\\\\\\"<?= h('sales_quotes_list.php') ?>\\\\\\\" class=\\\\\\\"btn btn-outline-secondary\\\\\\\">Back</a>\\\",\\\"  </div>\\\",\\\"</div>\\\",\\\"\\\",\\\"<form method=\\\\\\\"post\\\\\\\" action=\\\\\\\"<?= h('sales_quotes_save.php') ?>\\\\\\\" id=\\\\\\\"quoteForm\\\\\\\">\\\",\\\"  <?= csrf_field() ?>\\\",\\\"  <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"id\\\\\\\" value=\\\\\\\"<?= (int)$id ?>\\\\\\\">\\\",\\\"\\\",\\\"  <div class=\\\\\\\"row g-3\\\\\\\">\\\",\\\"    <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"      <label class=\\\\\\\"form-label\\\\\\\">Quote No</label>\\\",\\\"      <input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"code\\\\\\\" value=\\\\\\\"<?= h((string)$row['code']) ?>\\\\\\\" placeholder=\\\\\\\"Auto on save (QO)\\\\\\\">\\\",\\\"    </div>\\\",\\\"    <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"      <label class=\\\\\\\"form-label\\\\\\\">Quote Date</label>\\\",\\\"      <input type=\\\\\\\"date\\\\\\\" name=\\\\\\\"quote_date\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h((string)$row['quote_date']) ?>\\\\\\\">\\\",\\\"    </div>\\\",\\\"    <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"      <label class=\\\\\\\"form-label\\\\\\\">Valid Till</label>\\\",\\\"      <input type=\\\\\\\"date\\\\\\\" name=\\\\\\\"valid_till\\\\\\\" class=\\\\\\\"form-control\\\\\\\" value=\\\\\\\"<?= h((string)$row['valid_till']) ?>\\\\\\\">\\\",\\\"    </div>\\\",\\\"    <div class=\\\\\\\"col-md-3\\\\\\\">\\\",\\\"      <label class=\\\\\\\"form-label\\\\\\\">Status</label>\\\",\\\"      <select name=\\\\\\\"status\\\\\\\" class=\\\\\\\"form-select\\\\\\\">\\\",\\\"        <?php foreach (['Draft','Sent','Accepted','Lost','Expired','Canceled'] as $s): ?>\\\",\\\"          <option value=\\\\\\\"<?= h($s) ?>\\\\\\\" <?= ($row['status']===$s?'selected':'') ?>><?= h($s) ?></option>\\\",\\\"        <?php endforeach; ?>\\\",\\\"      </select>\\\",\\\"    </div>\\\",\\\"\\\",\\\"    <div class=\\\\\\\"col-md-6\\\\\\\">\\\",\\\"      <label class=\\\\\\\"form-label\\\\\\\">Client (Party)</label>\\\",\\\"      <select name=\\\\\\\"party_id\\\\\\\" id=\\\\\\\"party_id\\\\\\\" class=\\\\\\\"form-select\\\\\\\">\\\",\\\"        <option value=\\\\\\\"\\\\\\\">-- Select Client --</option>\\\",\\\"        <?php foreach ($clients as $c): ?>\\\",\\\"          <option value=\\\\\\\"<?= (int)$c['id'] ?>\\\\\\\" <?= ((int)$row['party_id']===(int)$c['id']?'selected':'') ?>>\\\",\\\"            <?= h($c['name'].($c['code']?' ('.$c['code'].')':'')) ?>\\\",\\\"          </option>\\\",\\\"        <?php endforeach; ?>\\\",\\\"      </select>\\\",\\\"    </div>\\\",\\\"    <div class=\\\\\\\"col-md-6\\\\\\\">\\\",\\\"      <label class=\\\\\\\"form-label\\\\\\\">Contact</label>\\\",\\\"      <select name=\\\\\\\"party_contact_id\\\\\\\" id=\\\\\\\"party_contact_id\\\\\\\" class=\\\\\\\"form-select\\\\\\\" <?= $row['party_id']?'':'disabled' ?>>\\\",\\\"        <option value=\\\\\\\"\\\\\\\">-- Select Contact --</option>\\\",\\\"        <?php foreach ($contacts as $c): ?>\\\",\\\"          <option value=\\\\\\\"<?= (int)$c['id'] ?>\\\\\\\" <?= ((int)$row['party_contact_id']===(int)$c['id']?'selected':'') ?>>\\\",\\\"            <?= h($c['name'].($c['phone']?' \\\\u00b7 '.$c['phone']:'')) ?>\\\",\\\"          </option>\\\",\\\"        <?php endforeach; ?>\\\",\\\"      </select>\\\",\\\"    </div>\\\",\\\"\\\",\\\"    <div class=\\\\\\\"col-md-2\\\\\\\">\\\",\\\"      <label class=\\\\\\\"form-label\\\\\\\">Currency</label>\\\",\\\"      <input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"currency\\\\\\\" value=\\\\\\\"<?= h((string)$row['currency']) ?>\\\\\\\">\\\",\\\"    </div>\\\",\\\"    <div class=\\\\\\\"col-md-10\\\\\\\">\\\",\\\"      <label class=\\\\\\\"form-label\\\\\\\">Notes (internal)</label>\\\",\\\"      <input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"notes\\\\\\\" value=\\\\\\\"<?= h((string)$row['notes']) ?>\\\\\\\">\\\",\\\"    </div>\\\",\\\"    <div class=\\\\\\\"col-12\\\\\\\">\\\",\\\"      <label class=\\\\\\\"form-label\\\\\\\">Terms (customer-visible)</label>\\\",\\\"      <textarea class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"terms\\\\\\\" rows=\\\\\\\"3\\\\\\\"><?= h((string)$row['terms']) ?></textarea>\\\",\\\"    </div>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <hr class=\\\\\\\"my-3\\\\\\\">\\\",\\\"  <!-- Site Address Block (unchanged) -->\\\",\\\"  <div class=\\\\\\\"card mb-3\\\\\\\">\\\",\\\"    <div class=\\\\\\\"card-header d-flex justify-content-between align-items-center flex-wrap gap-2\\\\\\\">\\\",\\\"      <span>Site Address</span>\\\",\\\"      <div class=\\\\\\\"d-flex align-items-center gap-2\\\\\\\">\\\",\\\"        <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-sm btn-outline-secondary\\\\\\\" id=\\\\\\\"copyClientAddr\\\\\\\">Copy from Client</button>\\\",\\\"        <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-sm btn-outline-secondary\\\\\\\" id=\\\\\\\"clearSiteAddr\\\\\\\">Clear</button>\\\",\\\"        <div class=\\\\\\\"form-check form-switch ms-2\\\\\\\">\\\",\\\"          <input class=\\\\\\\"form-check-input\\\\\\\" type=\\\\\\\"checkbox\\\\\\\" id=\\\\\\\"use_site_as_bill_to\\\\\\\" name=\\\\\\\"use_site_as_bill_to\\\\\\\" <?= ((int)$row['use_site_as_bill_to'] ? 'checked' : '') ?>>\\\",\\\"          <label class=\\\\\\\"form-check-label\\\\\\\" for=\\\\\\\"use_site_as_bill_to\\\\\\\">Use Site as Bill To (for print & GST)</label>\\\",\\\"        </div>\\\",\\\"      </div>\\\",\\\"    </div>\\\",\\\"    <div class=\\\\\\\"card-body\\\\\\\">\\\",\\\"      <div class=\\\\\\\"row g-3\\\\\\\">\\\",\\\"        <div class=\\\\\\\"col-md-6\\\\\\\"><label class=\\\\\\\"form-label\\\\\\\">Site / Attention</label><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"site_name\\\\\\\" id=\\\\\\\"site_name\\\\\\\" value=\\\\\\\"<?= h((string)$row['site_name']) ?>\\\\\\\"></div>\\\",\\\"        <div class=\\\\\\\"col-md-6\\\\\\\"><label class=\\\\\\\"form-label\\\\\\\">Site GSTIN (if any)</label><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"site_gst_number\\\\\\\" id=\\\\\\\"site_gst_number\\\\\\\" value=\\\\\\\"<?= h((string)$row['site_gst_number']) ?>\\\\\\\"></div>\\\",\\\"        <div class=\\\\\\\"col-md-6\\\\\\\"><label class=\\\\\\\"form-label\\\\\\\">Address Line 1</label><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"site_address_line1\\\\\\\" id=\\\\\\\"site_address_line1\\\\\\\" value=\\\\\\\"<?= h((string)$row['site_address_line1']) ?>\\\\\\\"></div>\\\",\\\"        <div class=\\\\\\\"col-md-6\\\\\\\"><label class=\\\\\\\"form-label\\\\\\\">Address Line 2</label><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"site_address_line2\\\\\\\" id=\\\\\\\"site_address_line2\\\\\\\" value=\\\\\\\"<?= h((string)$row['site_address_line2']) ?>\\\\\\\"></div>\\\",\\\"        <div class=\\\\\\\"col-md-4\\\\\\\"><label class=\\\\\\\"form-label\\\\\\\">City</label><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"site_city\\\\\\\" id=\\\\\\\"site_city\\\\\\\" value=\\\\\\\"<?= h((string)$row['site_city']) ?>\\\\\\\"></div>\\\",\\\"        <div class=\\\\\\\"col-md-4\\\\\\\"><label class=\\\\\\\"form-label\\\\\\\">State</label><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"site_state\\\\\\\" id=\\\\\\\"site_state\\\\\\\" value=\\\\\\\"<?= h((string)$row['site_state']) ?>\\\\\\\"></div>\\\",\\\"        <div class=\\\\\\\"col-md-4\\\\\\\"><label class=\\\\\\\"form-label\\\\\\\">PIN Code</label><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"site_pincode\\\\\\\" id=\\\\\\\"site_pincode\\\\\\\" value=\\\\\\\"<?= h((string)$row['site_pincode']) ?>\\\\\\\"></div>\\\",\\\"      </div>\\\",\\\"    </div>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"d-flex justify-content-between align-items-center\\\\\\\">\\\",\\\"    <h2 class=\\\\\\\"h6 mb-0\\\\\\\">Items</h2>\\\",\\\"    <button class=\\\\\\\"btn btn-sm btn-outline-primary\\\\\\\" type=\\\\\\\"button\\\\\\\" id=\\\\\\\"addRow\\\\\\\">+ Add Row</button>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"table-responsive mt-2\\\\\\\">\\\",\\\"    <table class=\\\\\\\"table table-sm align-middle\\\\\\\" id=\\\\\\\"itemsTable\\\\\\\">\\\",\\\"      <thead class=\\\\\\\"table-light\\\\\\\">\\\",\\\"        <tr>\\\",\\\"          <th style=\\\\\\\"width:60px;\\\\\\\">SL</th>\\\",\\\"          <th style=\\\\\\\"min-width:320px\\\\\\\">Item (dropdown) &amp; Description</th>\\\",\\\"          <th style=\\\\\\\"width:120px;\\\\\\\">HSN/SAC</th>\\\",\\\"          <th style=\\\\\\\"width:120px;\\\\\\\">Qty</th>\\\",\\\"          <th style=\\\\\\\"width:140px;\\\\\\\">UOM</th>\\\",\\\"          <th style=\\\\\\\"width:140px;\\\\\\\">Rate</th>\\\",\\\"          <th style=\\\\\\\"width:120px;\\\\\\\">Disc %</th>\\\",\\\"          <th style=\\\\\\\"width:120px;\\\\\\\">Tax %</th>\\\",\\\"          <th style=\\\\\\\"width:140px;\\\\\\\">Line Total</th>\\\",\\\"          <th style=\\\\\\\"width:48px;\\\\\\\"></th>\\\",\\\"        </tr>\\\",\\\"      </thead>\\\",\\\"      <tbody>\\\",\\\"        <?php if ($items): foreach ($items as $it):\\\",\\\"          $uomSel = (string)($it['uom'] ?? 'Nos');\\\",\\\"          $uomHtml = $uomOptionsHtml;\\\",\\\"          if ($uomSel && !array_filter($uoms, fn($u)=>$u['code']===$uomSel)) {\\\",\\\"            $uomHtml = '<option value=\\\\\\\"'.h($uomSel).'\\\\\\\">'.h($uomSel).'</option>'.$uomHtml;\\\",\\\"          }\\\",\\\"        ?>\\\",\\\"          <tr>\\\",\\\"            <td><input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"item_id[]\\\\\\\" value=\\\\\\\"<?= (int)$it['id'] ?>\\\\\\\"><input type=\\\\\\\"number\\\\\\\" class=\\\\\\\"form-control form-control-sm sl\\\\\\\" name=\\\\\\\"sl_no[]\\\\\\\" value=\\\\\\\"<?= (int)($it['sl_no'] ?? 1) ?>\\\\\\\"></td>\\\",\\\"            <td>\\\",\\\"              <select class=\\\\\\\"form-select form-select-sm qi_select\\\\\\\"><?= $QI_OPTIONS_HTML ?></select>\\\",\\\"              <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"item_code[]\\\\\\\" class=\\\\\\\"qi_code\\\\\\\" value=\\\\\\\"<?= h((string)($it['item_code'] ?? '')) ?>\\\\\\\">\\\",\\\"              <textarea class=\\\\\\\"form-control form-control-sm mt-1\\\\\\\" name=\\\\\\\"item_name[]\\\\\\\" rows=\\\\\\\"1\\\\\\\" placeholder=\\\\\\\"Description\\\\\\\"><?= h((string)($it['item_name'] ?? '')) ?></textarea>\\\",\\\"            </td>\\\",\\\"            <td><input class=\\\\\\\"form-control form-control-sm\\\\\\\" name=\\\\\\\"hsn_sac[]\\\\\\\" value=\\\\\\\"<?= h((string)($it['hsn_sac'] ?? '')) ?>\\\\\\\"></td>\\\",\\\"            <td><input class=\\\\\\\"form-control form-control-sm qty\\\\\\\" name=\\\\\\\"qty[]\\\\\\\" value=\\\\\\\"<?= h((string)($it['qty'] ?? '1.000')) ?>\\\\\\\"></td>\\\",\\\"            <td><select class=\\\\\\\"form-select form-select-sm\\\\\\\" name=\\\\\\\"uom[]\\\\\\\"><?= str_replace('value=\\\\\\\"'.h($uomSel).'\\\\\\\"', 'value=\\\\\\\"'.h($uomSel).'\\\\\\\" selected', $uomHtml) ?></select></td>\\\",\\\"            <td><input class=\\\\\\\"form-control form-control-sm rate\\\\\\\" name=\\\\\\\"rate[]\\\\\\\" value=\\\\\\\"<?= h((string)($it['rate'] ?? '0.00')) ?>\\\\\\\"></td>\\\",\\\"            <td><input class=\\\\\\\"form-control form-control-sm disc\\\\\\\" name=\\\\\\\"discount_pct[]\\\\\\\" value=\\\\\\\"<?= h((string)($it['discount_pct'] ?? '0.00')) ?>\\\\\\\"></td>\\\",\\\"            <td><input class=\\\\\\\"form-control form-control-sm tax\\\\\\\" name=\\\\\\\"tax_pct[]\\\\\\\" value=\\\\\\\"<?= h((string)($it['tax_pct'] ?? '0.00')) ?>\\\\\\\"></td>\\\",\\\"            <td><input class=\\\\\\\"form-control form-control-sm line_total\\\\\\\" name=\\\\\\\"line_total[]\\\\\\\" value=\\\\\\\"<?= h((string)($it['line_total'] ?? '0.00')) ?>\\\\\\\" readonly></td>\\\",\\\"            <td><button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-sm btn-outline-danger delRow\\\\\\\">&times;</button></td>\\\",\\\"          </tr>\\\",\\\"        <?php endforeach; endif; ?>\\\",\\\"      </tbody>\\\",\\\"    </table>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"row g-3 justify-content-end mt-2\\\\\\\">\\\",\\\"    <div class=\\\\\\\"col-md-3\\\\\\\"><label class=\\\\\\\"form-label\\\\\\\">Subtotal</label><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"subtotal\\\\\\\" id=\\\\\\\"subtotal\\\\\\\" value=\\\\\\\"<?= h((string)$row['subtotal']) ?>\\\\\\\" readonly></div>\\\",\\\"    <div class=\\\\\\\"col-md-3\\\\\\\"><label class=\\\\\\\"form-label\\\\\\\">Discount (absolute)</label><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"discount_amount\\\\\\\" id=\\\\\\\"discount_amount\\\\\\\" value=\\\\\\\"<?= h((string)$row['discount_amount']) ?>\\\\\\\"></div>\\\",\\\"    <div class=\\\\\\\"col-md-3\\\\\\\"><label class=\\\\\\\"form-label\\\\\\\">Tax (total)</label><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"tax_amount\\\\\\\" id=\\\\\\\"tax_amount\\\\\\\" value=\\\\\\\"<?= h((string)$row['tax_amount']) ?>\\\\\\\" readonly></div>\\\",\\\"    <div class=\\\\\\\"col-md-3\\\\\\\"><label class=\\\\\\\"form-label\\\\\\\">Round Off</label><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"round_off\\\\\\\" id=\\\\\\\"round_off\\\\\\\" value=\\\\\\\"<?= h((string)$row['round_off']) ?>\\\\\\\"></div>\\\",\\\"    <div class=\\\\\\\"col-md-3\\\\\\\"><label class=\\\\\\\"form-label fw-semibold\\\\\\\">Grand Total</label><input class=\\\\\\\"form-control\\\\\\\" name=\\\\\\\"grand_total\\\\\\\" id=\\\\\\\"grand_total\\\\\\\" value=\\\\\\\"<?= h((string)$row['grand_total']) ?>\\\\\\\" readonly></div>\\\",\\\"  </div>\\\",\\\"\\\",\\\"  <div class=\\\\\\\"d-flex gap-2 justify-content-end mt-3\\\\\\\">\\\",\\\"    <button class=\\\\\\\"btn btn-primary\\\\\\\"><?= $isEdit ? 'Update' : 'Create' ?></button>\\\",\\\"  </div>\\\",\\\"</form>\\\",\\\"\\\",\\\"<?php include __DIR__ . '/../ui/layout_end.php'; ?>\\\",\\\"\\\",\\\"<script>\\\",\\\"const QI_MAP = <?= json_encode($QI_MAP, JSON_UNESCAPED_UNICODE) ?>;\\\",\\\"const QI_OPTIONS_HTML = <?= json_encode($QI_OPTIONS_HTML) ?>;\\\",\\\"const UOM_OPTIONS_HTML = <?= json_encode($uomOptionsHtml) ?>;\\\",\\\"\\\",\\\"function recalcRow(tr){\\\",\\\"  const qty = parseFloat(tr.querySelector('.qty')?.value || '0') || 0;\\\",\\\"  const rate = parseFloat(tr.querySelector('.rate')?.value || '0') || 0;\\\",\\\"  const disc = parseFloat(tr.querySelector('.disc')?.value || '0') || 0;\\\",\\\"  const tax = parseFloat(tr.querySelector('.tax')?.value || '0') || 0;\\\",\\\"  const base = qty * rate;\\\",\\\"  const afterDisc = base * (1 - (disc/100));\\\",\\\"  const lineTax = afterDisc * (tax/100);\\\",\\\"  const lineTotal = afterDisc + lineTax;\\\",\\\"  tr.querySelector('.line_total').value = lineTotal.toFixed(2);\\\",\\\"  return {afterDisc,lineTax};\\\",\\\"}\\\",\\\"function recalcAll(){\\\",\\\"  let sub=0,tx=0;\\\",\\\"  document.querySelectorAll('#itemsTable tbody tr').forEach(tr=>{\\\",\\\"    const r=recalcRow(tr); sub+=r.afterDisc; tx+=r.lineTax;\\\",\\\"  });\\\",\\\"  document.getElementById('subtotal').value = sub.toFixed(2);\\\",\\\"  document.getElementById('tax_amount').value = tx.toFixed(2);\\\",\\\"  const discAbs=parseFloat(document.getElementById('discount_amount').value||'0')||0;\\\",\\\"  const roff=parseFloat(document.getElementById('round_off').value||'0')||0;\\\",\\\"  document.getElementById('grand_total').value = (sub-discAbs+tx+roff).toFixed(2);\\\",\\\"}\\\",\\\"function attachRowHandlers(tr){\\\",\\\"  const sel = tr.querySelector('.qi_select');\\\",\\\"  if (sel && !sel.dataset.wired){\\\",\\\"    sel.dataset.wired='1';\\\",\\\"    // select correct option if hidden code already present\\\",\\\"    const cur = tr.querySelector('.qi_code')?.value || '';\\\",\\\"    if (cur){\\\",\\\"      [...sel.options].forEach(o => { if (o.value===cur) o.selected=true; });\\\",\\\"    }\\\",\\\"    sel.addEventListener('change',()=>{\\\",\\\"      const code = sel.value || '';\\\",\\\"      const data = QI_MAP[code] || null;\\\",\\\"      tr.querySelector('.qi_code')?.setAttribute('value', code);\\\",\\\"      if (data){\\\",\\\"        const desc = tr.querySelector('textarea[name=\\\\\\\"item_name[]\\\\\\\"]');\\\",\\\"        if (desc && (!desc.value || desc.value.trim()==='')) desc.value = data.name;\\\",\\\"        const hsn = tr.querySelector('input[name=\\\\\\\"hsn_sac[]\\\\\\\"]'); if (hsn) hsn.value = data.hsn || '';\\\",\\\"        const uomSel = tr.querySelector('select[name=\\\\\\\"uom[]\\\\\\\"]');\\\",\\\"        if (uomSel){\\\",\\\"          const wanted = data.uom || '';\\\",\\\"          if (wanted){\\\",\\\"            if (!uomSel.querySelector('option[value=\\\\\\\"'+wanted+'\\\\\\\"]')){\\\",\\\"              const opt=document.createElement('option'); opt.value=wanted; opt.textContent=wanted; uomSel.insertBefore(opt,uomSel.firstChild);\\\",\\\"            }\\\",\\\"            uomSel.value = wanted;\\\",\\\"          }\\\",\\\"        }\\\",\\\"        const rate = tr.querySelector('.rate'); if (rate) rate.value = parseFloat(data.rate||'0').toFixed(2);\\\",\\\"        const tax  = tr.querySelector('.tax');  if (tax)  tax.value  = parseFloat(data.tax ||'0').toFixed(2);\\\",\\\"        recalcAll();\\\",\\\"      }\\\",\\\"    });\\\",\\\"  }\\\",\\\"  tr.addEventListener('input', e => { if (e.target.matches('.qty,.rate,.disc,.tax')) recalcAll(); });\\\",\\\"}\\\",\\\"document.getElementById('itemsTable').addEventListener('click', e=>{\\\",\\\"  if (e.target.closest('.delRow')) { e.target.closest('tr').remove(); recalcAll(); }\\\",\\\"});\\\",\\\"document.getElementById('addRow')?.addEventListener('click', ()=>{\\\",\\\"  const tb=document.querySelector('#itemsTable tbody');\\\",\\\"  const tr=document.createElement('tr');\\\",\\\"  const sl=tb.querySelectorAll('tr').length+1;\\\",\\\"  tr.innerHTML=`\\\",\\\"    <td><input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"item_id[]\\\\\\\" value=\\\\\\\"0\\\\\\\"><input type=\\\\\\\"number\\\\\\\" class=\\\\\\\"form-control form-control-sm sl\\\\\\\" name=\\\\\\\"sl_no[]\\\\\\\" value=\\\\\\\"${sl}\\\\\\\"></td>\\\",\\\"    <td>\\\",\\\"      <select class=\\\\\\\"form-select form-select-sm qi_select\\\\\\\">${QI_OPTIONS_HTML}</select>\\\",\\\"      <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"item_code[]\\\\\\\" class=\\\\\\\"qi_code\\\\\\\" value=\\\\\\\"\\\\\\\">\\\",\\\"      <textarea class=\\\\\\\"form-control form-control-sm mt-1\\\\\\\" name=\\\\\\\"item_name[]\\\\\\\" rows=\\\\\\\"1\\\\\\\" placeholder=\\\\\\\"Description\\\\\\\"></textarea>\\\",\\\"    </td>\\\",\\\"    <td><input class=\\\\\\\"form-control form-control-sm\\\\\\\" name=\\\\\\\"hsn_sac[]\\\\\\\"></td>\\\",\\\"    <td><input class=\\\\\\\"form-control form-control-sm qty\\\\\\\" name=\\\\\\\"qty[]\\\\\\\" value=\\\\\\\"1.000\\\\\\\"></td>\\\",\\\"    <td><select class=\\\\\\\"form-select form-select-sm\\\\\\\" name=\\\\\\\"uom[]\\\\\\\"><?= $uomOptionsHtml ?></select></td>\\\",\\\"    <td><input class=\\\\\\\"form-control form-control-sm rate\\\\\\\" name=\\\\\\\"rate[]\\\\\\\" value=\\\\\\\"0.00\\\\\\\"></td>\\\",\\\"    <td><input class=\\\\\\\"form-control form-control-sm disc\\\\\\\" name=\\\\\\\"discount_pct[]\\\\\\\" value=\\\\\\\"0.00\\\\\\\"></td>\\\",\\\"    <td><input class=\\\\\\\"form-control form-control-sm tax\\\\\\\" name=\\\\\\\"tax_pct[]\\\\\\\" value=\\\\\\\"0.00\\\\\\\"></td>\\\",\\\"    <td><input class=\\\\\\\"form-control form-control-sm line_total\\\\\\\" name=\\\\\\\"line_total[]\\\\\\\" value=\\\\\\\"0.00\\\\\\\" readonly></td>\\\",\\\"    <td><button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-sm btn-outline-danger delRow\\\\\\\">&times;</button></td>`;\\\",\\\"  tb.appendChild(tr); attachRowHandlers(tr);\\\",\\\"});\\\",\\\"document.querySelectorAll('#itemsTable tbody tr').forEach(attachRowHandlers);\\\",\\\"document.getElementById('discount_amount')?.addEventListener('input', recalcAll);\\\",\\\"document.getElementById('round_off')?.addEventListener('input', recalcAll);\\\",\\\"recalcAll();\\\",\\\"\\\",\\\"// Party \\\\u2192 Contacts\\\",\\\"document.getElementById('party_id')?.addEventListener('change', async function(){\\\",\\\"  const pid=this.value, sel=document.getElementById('party_contact_id');\\\",\\\"  sel.innerHTML='<option value=\\\\\\\"\\\\\\\">-- Select Contact --</option>';\\\",\\\"  if (!pid){ sel.disabled=true; return; }\\\",\\\"  sel.disabled=false;\\\",\\\"  try{\\\",\\\"    const res=await fetch('../common/party_contacts.php?party_id='+encodeURIComponent(pid));\\\",\\\"    const js=await res.json();\\\",\\\"    if(js.ok){ js.items.forEach(it=>{ const o=document.createElement('option'); o.value=it.id; o.textContent=it.name+(it.phone?' \\\\u00b7 '+it.phone:''); sel.appendChild(o); }); }\\\",\\\"  }catch(e){ console.error(e); }\\\",\\\"});\\\",\\\"// Copy client address \\\\u2192 site address\\\",\\\"document.getElementById('copyClientAddr')?.addEventListener('click', async ()=>{\\\",\\\"  const pid=document.getElementById('party_id').value; if(!pid) return;\\\",\\\"  try{\\\",\\\"    const res=await fetch('../common/party_get.php?id='+encodeURIComponent(pid));\\\",\\\"    const js=await res.json();\\\",\\\"    if(js.ok && js.party){\\\",\\\"      site_name.value=js.party.legal_name || js.party.name || '';\\\",\\\"      site_gst_number.value=js.party.gst_number || '';\\\",\\\"      site_address_line1.value=js.party.address_line1 || '';\\\",\\\"      site_address_line2.value=js.party.address_line2 || '';\\\",\\\"      site_city.value=js.party.city || '';\\\",\\\"      site_state.value=js.party.state || '';\\\",\\\"      site_pincode.value=js.party.pincode || '';\\\",\\\"    }\\\",\\\"  }catch(e){ console.error(e); }\\\",\\\"});\\\",\\\"document.getElementById('clearSiteAddr')?.addEventListener('click', ()=>{\\\",\\\"  ['site_name','site_gst_number','site_address_line1','site_address_line2','site_city','site_state','site_pincode']\\\",\\\"    .forEach(id=>{const el=document.getElementById(id); if(el) el.value='';});\\\",\\\"});\\\",\\\"</script>\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/approval_set.php\\\": [\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"require_once __DIR__.'/../includes/auth.php';\\\",\\\"require_once __DIR__.'/../includes/db.php';\\\",\\\"require_once __DIR__.'/../includes/rbac.php';\\\",\\\"require_once __DIR__.'/../includes/csrf.php';\\\",\\\"require_login(); require_permission('sales.quote.approve'); csrf_require_token();\\\",\\\"\\\",\\\"$id=(int)($_POST['id']??0);\\\",\\\"$action=(string)($_POST['action']??'');\\\",\\\"if($id<=0){flash('Invalid','danger'); redirect('/sales_quotes/sales_quotes_list.php');}\\\",\\\"$pdo=db();\\\",\\\"\\\",\\\"if ($action==='approve'){\\\",\\\"  $pdo->prepare(\\\\\\\"UPDATE sales_quotes SET approval_status='Approved', approved_by=:u, approved_at=NOW(), updated_at=NOW() WHERE id=:id\\\\\\\")->execute([':u'=>current_user_id(),':id'=>$id]);\\\",\\\"  flash('Quote approved.','success');\\\",\\\"} elseif ($action==='revert'){\\\",\\\"  $pdo->prepare(\\\\\\\"UPDATE sales_quotes SET approval_status='Draft', approved_by=NULL, approved_at=NULL, updated_at=NOW() WHERE id=:id\\\\\\\")->execute([':id'=>$id]);\\\",\\\"  flash('Quote reverted to Draft.','warning');\\\",\\\"}\\\",\\\"redirect('/sales_quotes/sales_quotes_view.php?id='.$id);\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/approval_request.php\\\": [\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"require_once __DIR__.'/../includes/auth.php';\\\",\\\"require_once __DIR__.'/../includes/db.php';\\\",\\\"require_once __DIR__.'/../includes/rbac.php';\\\",\\\"require_once __DIR__.'/../includes/csrf.php';\\\",\\\"require_login(); require_permission('sales.quote.edit'); csrf_require_token();\\\",\\\"\\\",\\\"$id=(int)($_POST['id']??0); if($id<=0){flash('Invalid','danger'); redirect('/sales_quotes/sales_quotes_list.php');}\\\",\\\"$pdo=db();\\\",\\\"$pdo->prepare(\\\\\\\"UPDATE sales_quotes SET approval_status='Pending', updated_at=NOW() WHERE id=:id\\\\\\\")->execute([':id'=>$id]);\\\",\\\"flash('Quote sent for approval.','success');\\\",\\\"redirect('/sales_quotes/sales_quotes_view.php?id='.$id);\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/sales_quotes/sales_quotes_save.php\\\": [\\\"<?php\\\",\\\"/** PATH: /public_html/sales_quotes/sales_quotes_save.php */\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"require_once __DIR__ . '/../includes/csrf.php';\\\",\\\"require_once __DIR__ . '/../includes/helpers.php';\\\",\\\"require_once __DIR__ . '/../includes/audit.php';\\\",\\\"require_once __DIR__ . '/../includes/numbering.php';\\\",\\\"\\\",\\\"require_login();\\\",\\\"verify_csrf_or_die();\\\",\\\"\\\",\\\"$pdo = db();\\\",\\\"\\\",\\\"$id = (int)($_POST['id'] ?? 0);\\\",\\\"$isEdit = $id > 0;\\\",\\\"require_permission($isEdit ? 'sales.quote.edit' : 'sales.quote.create');\\\",\\\"\\\",\\\"/* -------------------- collect header -------------------- */\\\",\\\"$codeIn = trim((string)($_POST['code'] ?? ''));\\\",\\\"$header = [\\\",\\\"  'code' => ($codeIn === '' ? null : $codeIn),\\\",\\\"  'quote_date' => (string)($_POST['quote_date'] ?? date('Y-m-d')),\\\",\\\"  'valid_till' => (($_POST['valid_till'] ?? '') === '' ? null : (string)$_POST['valid_till']),\\\",\\\"  'status' => (string)($_POST['status'] ?? 'Draft'),\\\",\\\"  'party_id' => (($_POST['party_id'] ?? '') === '' ? null : (int)$_POST['party_id']),\\\",\\\"  'party_contact_id' => (($_POST['party_contact_id'] ?? '') === '' ? null : (int)$_POST['party_contact_id']),\\\",\\\"  'lead_id' => (($_POST['lead_id'] ?? '') === '' ? null : (int)$_POST['lead_id']),\\\",\\\"  'currency' => (string)($_POST['currency'] ?? 'INR'),\\\",\\\"  'notes' => trim((string)($_POST['notes'] ?? '')),\\\",\\\"  'terms' => trim((string)($_POST['terms'] ?? '')),\\\",\\\"  'use_site_as_bill_to' => isset($_POST['use_site_as_bill_to']) ? 1 : 0,\\\",\\\"  'site_name' => trim((string)($_POST['site_name'] ?? '')),\\\",\\\"  'site_gst_number' => trim((string)($_POST['site_gst_number'] ?? '')),\\\",\\\"  'site_address_line1' => trim((string)($_POST['site_address_line1'] ?? '')),\\\",\\\"  'site_address_line2' => trim((string)($_POST['site_address_line2'] ?? '')),\\\",\\\"  'site_city' => trim((string)($_POST['site_city'] ?? '')),\\\",\\\"  'site_state' => trim((string)($_POST['site_state'] ?? '')),\\\",\\\"  'site_pincode' => trim((string)($_POST['site_pincode'] ?? '')),\\\",\\\"];\\\",\\\"\\\",\\\"/* -------------------- collect lines -------------------- */\\\",\\\"$lineIds    = array_map('strval', $_POST['item_id'] ?? ($_POST['line_id'] ?? []));\\\",\\\"$sl_no      = $_POST['sl_no'] ?? [];\\\",\\\"$item_code  = $_POST['item_code'] ?? [];\\\",\\\"$item_name  = $_POST['item_name'] ?? [];\\\",\\\"$hsn_sac    = $_POST['hsn_sac'] ?? [];\\\",\\\"$qty        = $_POST['qty'] ?? [];\\\",\\\"$uom        = $_POST['uom'] ?? [];\\\",\\\"$rate       = $_POST['rate'] ?? [];\\\",\\\"$disc       = $_POST['discount_pct'] ?? [];\\\",\\\"$tax        = $_POST['tax_pct'] ?? [];\\\",\\\"$line_total = $_POST['line_total'] ?? [];\\\",\\\"\\\",\\\"/* Build map for any codes present */\\\",\\\"$codesWanted = [];\\\",\\\"foreach ($item_code as $c) { $c = trim((string)$c); if ($c !== '') $codesWanted[$c] = true; }\\\",\\\"$codeMap = [];\\\",\\\"if ($codesWanted) {\\\",\\\"  $in = implode(',', array_fill(0, count($codesWanted), '?'));\\\",\\\"  $st = $pdo->prepare(\\\\\\\"SELECT code, name, hsn_sac, uom, rate_default, tax_pct_default\\\",\\\"                       FROM quote_items\\\",\\\"                       WHERE deleted_at IS NULL AND is_active=1 AND code IN ($in)\\\\\\\");\\\",\\\"  $st->execute(array_keys($codesWanted));\\\",\\\"  foreach ($st->fetchAll(PDO::FETCH_ASSOC) as $r) {\\\",\\\"    $codeMap[(string)$r['code']] = [\\\",\\\"      'name' => (string)$r['name'],\\\",\\\"      'hsn'  => (string)($r['hsn_sac'] ?? ''),\\\",\\\"      'uom'  => (string)($r['uom'] ?? ''),\\\",\\\"      'rate' => (string)number_format((float)($r['rate_default'] ?? 0), 2, '.', ''),\\\",\\\"      'tax'  => (string)number_format((float)($r['tax_pct_default'] ?? 0), 2, '.', ''),\\\",\\\"    ];\\\",\\\"  }\\\",\\\"}\\\",\\\"\\\",\\\"/* Build rows; keep row if name or code present (or qty*rate) */\\\",\\\"$rows = [];\\\",\\\"$N = max(count($sl_no), count($item_name), count($hsn_sac), count($qty),\\\",\\\"         count($uom), count($rate), count($disc), count($tax), count($line_total), count($item_code));\\\",\\\"for ($i=0; $i<$N; $i++) {\\\",\\\"  $code = trim((string)($item_code[$i] ?? ''));\\\",\\\"  $name = trim((string)($item_name[$i] ?? ''));\\\",\\\"  $q = (float)($qty[$i] ?? 0);\\\",\\\"  $rt = (float)($rate[$i] ?? 0);\\\",\\\"  if ($name === '' && $code === '' && ($q*$rt) <= 0) continue;\\\",\\\"\\\",\\\"  if ($name === '' && $code !== '' && isset($codeMap[$code])) {\\\",\\\"    $name = $codeMap[$code]['name'];\\\",\\\"    if (($hsn_sac[$i] ?? '') === '') $hsn_sac[$i] = $codeMap[$code]['hsn'];\\\",\\\"    if (($uom[$i] ?? '') === '')     $uom[$i]     = $codeMap[$code]['uom'];\\\",\\\"    if (($rate[$i] ?? '') === '' || (float)$rate[$i] == 0) $rate[$i] = $codeMap[$code]['rate'];\\\",\\\"    if (($tax[$i]  ?? '') === '' )   $tax[$i]     = $codeMap[$code]['tax'];\\\",\\\"  }\\\",\\\"\\\",\\\"  $rows[] = [\\\",\\\"    'id' => (int)($lineIds[$i] ?? 0),\\\",\\\"    'sl_no' => (int)($sl_no[$i] ?? ($i+1)),\\\",\\\"    'item_code' => ($code === '' ? null : $code),\\\",\\\"    'item_name' => ($name === '' ? 'Item' : $name),\\\",\\\"    'hsn_sac' => trim((string)($hsn_sac[$i] ?? '')),\\\",\\\"    'qty' => (string)($qty[$i] ?? '1.000'),\\\",\\\"    'uom' => trim((string)($uom[$i] ?? 'Nos')),\\\",\\\"    'rate' => (string)($rate[$i] ?? '0.00'),\\\",\\\"    'discount_pct' => (string)($disc[$i] ?? '0.00'),\\\",\\\"    'tax_pct' => (string)($tax[$i] ?? '0.00'),\\\",\\\"    'line_total' => (string)($line_total[$i] ?? '0.00'),\\\",\\\"  ];\\\",\\\"}\\\",\\\"\\\",\\\"/* -------------------- totals (server-side) -------------------- */\\\",\\\"$subtotal=0.00; $totalTax=0.00;\\\",\\\"foreach ($rows as $r) {\\\",\\\"  $base = (float)$r['qty'] * (float)$r['rate'];\\\",\\\"  $afterDisc = $base * (1 - ((float)$r['discount_pct']/100));\\\",\\\"  $lineTax = $afterDisc * ((float)$r['tax_pct']/100);\\\",\\\"  $subtotal += $afterDisc; $totalTax += $lineTax;\\\",\\\"}\\\",\\\"$discountAbs = (float)($_POST['discount_amount'] ?? 0.00);\\\",\\\"$roundOff    = (float)($_POST['round_off'] ?? 0.00);\\\",\\\"$grandTotal  = $subtotal - $discountAbs + $totalTax + $roundOff;\\\",\\\"\\\",\\\"$headerTotals = [\\\",\\\"  'subtotal' => number_format($subtotal, 2, '.', ''),\\\",\\\"  'discount_amount' => number_format($discountAbs, 2, '.', ''),\\\",\\\"  'tax_amount' => number_format($totalTax, 2, '.', ''),\\\",\\\"  'round_off' => number_format($roundOff, 2, '.', ''),\\\",\\\"  'grand_total' => number_format($grandTotal, 2, '.', ''),\\\",\\\"];\\\",\\\"\\\",\\\"/* -------------------- TX guard -------------------- */\\\",\\\"$_OWN_TX = !$pdo->inTransaction();\\\",\\\"try {\\\",\\\"  if ($_OWN_TX) $pdo->beginTransaction();\\\",\\\"\\\",\\\"  /* -------- header upsert -------- */\\\",\\\"  if (!$isEdit) {\\\",\\\"    if ($header['code'] === null) $header['code'] = next_no('QO');\\\",\\\"    $sql = \\\\\\\"INSERT INTO sales_quotes\\\",\\\"      (code, quote_date, valid_till, status, party_id, party_contact_id, lead_id,\\\",\\\"       currency, notes, terms,\\\",\\\"       use_site_as_bill_to, site_name, site_gst_number, site_address_line1, site_address_line2,\\\",\\\"       site_city, site_state, site_pincode,\\\",\\\"       subtotal, discount_amount, tax_amount, round_off, grand_total, created_at)\\\",\\\"      VALUES\\\",\\\"      (:code, :quote_date, :valid_till, :status, :party_id, :party_contact_id, :lead_id,\\\",\\\"       :currency, :notes, :terms,\\\",\\\"       :use_site_as_bill_to, :site_name, :site_gst_number, :site_address_line1, :site_address_line2,\\\",\\\"       :site_city, :site_state, :site_pincode,\\\",\\\"       :subtotal, :discount_amount, :tax_amount, :round_off, :grand_total, NOW())\\\\\\\";\\\",\\\"    $pdo->prepare($sql)->execute(array_merge($header, $headerTotals));\\\",\\\"    $id = (int)$pdo->lastInsertId();\\\",\\\"    audit_log($pdo, 'sales_quotes', 'create', $id, array_merge($header, $headerTotals));\\\",\\\"    set_flash('success', 'Quote created.');\\\",\\\"  } else {\\\",\\\"    if ($header['code'] === null) {\\\",\\\"      $cur = $pdo->prepare(\\\\\\\"SELECT code FROM sales_quotes WHERE id=?\\\\\\\");\\\",\\\"      $cur->execute([$id]);\\\",\\\"      $curCode = (string)($cur->fetchColumn() ?: '');\\\",\\\"      $header['code'] = $curCode !== '' ? $curCode : next_no('QO');\\\",\\\"    }\\\",\\\"    $header['id'] = $id;\\\",\\\"    $sql = \\\\\\\"UPDATE sales_quotes SET\\\",\\\"      code=:code, quote_date=:quote_date, valid_till=:valid_till, status=:status,\\\",\\\"      party_id=:party_id, party_contact_id=:party_contact_id, lead_id=:lead_id,\\\",\\\"      currency=:currency, notes=:notes, terms=:terms,\\\",\\\"      use_site_as_bill_to=:use_site_as_bill_to, site_name=:site_name, site_gst_number=:site_gst_number,\\\",\\\"      site_address_line1=:site_address_line1, site_address_line2=:site_address_line2,\\\",\\\"      site_city=:site_city, site_state=:site_state, site_pincode=:site_pincode,\\\",\\\"      subtotal=:subtotal, discount_amount=:discount_amount, tax_amount=:tax_amount,\\\",\\\"      round_off=:round_off, grand_total=:grand_total\\\",\\\"      WHERE id=:id\\\\\\\";\\\",\\\"    $pdo->prepare($sql)->execute(array_merge($header, $headerTotals));\\\",\\\"    audit_log($pdo, 'sales_quotes', 'update', $id, array_merge($header, $headerTotals));\\\",\\\"    set_flash('success', 'Quote updated.');\\\",\\\"  }\\\",\\\"\\\",\\\"  /* -------- lines upsert (hard-sync) -------- */\\\",\\\"  $st = $pdo->prepare(\\\\\\\"SELECT id FROM sales_quote_items WHERE quote_id=?\\\\\\\");\\\",\\\"  $st->execute([$id]);\\\",\\\"  $existing = array_map('intval', $st->fetchAll(PDO::FETCH_COLUMN, 0));\\\",\\\"  $keepIds = [];\\\",\\\"\\\",\\\"  $ins = $pdo->prepare(\\\\\\\"INSERT INTO sales_quote_items\\\",\\\"    (quote_id, sl_no, item_code, item_name, hsn_sac, qty, uom, rate, discount_pct, tax_pct, line_total)\\\",\\\"    VALUES\\\",\\\"    (:quote_id, :sl_no, :item_code, :item_name, :hsn_sac, :qty, :uom, :rate, :discount_pct, :tax_pct, :line_total)\\\\\\\");\\\",\\\"\\\",\\\"  $upd = $pdo->prepare(\\\\\\\"UPDATE sales_quote_items SET\\\",\\\"    sl_no=:sl_no, item_code=:item_code, item_name=:item_name, hsn_sac=:hsn_sac, qty=:qty, uom=:uom,\\\",\\\"    rate=:rate, discount_pct=:discount_pct, tax_pct=:tax_pct, line_total=:line_total\\\",\\\"    WHERE id=:id AND quote_id=:quote_id\\\\\\\");\\\",\\\"\\\",\\\"  foreach ($rows as $r) {\\\",\\\"    $payload = [\\\",\\\"      'quote_id' => $id,\\\",\\\"      'sl_no' => (int)$r['sl_no'],\\\",\\\"      'item_code' => $r['item_code'],\\\",\\\"      'item_name' => $r['item_name'],\\\",\\\"      'hsn_sac' => $r['hsn_sac'],\\\",\\\"      'qty' => (string)$r['qty'],\\\",\\\"      'uom' => $r['uom'],\\\",\\\"      'rate' => (string)$r['rate'],\\\",\\\"      'discount_pct' => (string)$r['discount_pct'],\\\",\\\"      'tax_pct' => (string)$r['tax_pct'],\\\",\\\"      'line_total' => (string)$r['line_total'],\\\",\\\"    ];\\\",\\\"\\\",\\\"    if ($r['id'] > 0 && in_array($r['id'], $existing, true)) {\\\",\\\"      $payloadUpd = $payload; $payloadUpd['id'] = (int)$r['id'];\\\",\\\"      $upd->execute($payloadUpd);\\\",\\\"      $keepIds[] = (int)$r['id'];\\\",\\\"    } else {\\\",\\\"      $ins->execute($payload);\\\",\\\"      $keepIds[] = (int)$pdo->lastInsertId();\\\",\\\"    }\\\",\\\"  }\\\",\\\"\\\",\\\"  $toDelete = array_diff($existing, $keepIds);\\\",\\\"  if ($toDelete) {\\\",\\\"    $in = implode(',', array_fill(0, count($toDelete), '?'));\\\",\\\"    $pdo->prepare(\\\\\\\"DELETE FROM sales_quote_items WHERE quote_id=? AND id IN ($in)\\\\\\\")\\\",\\\"        ->execute(array_merge([$id], array_values($toDelete)));\\\",\\\"  }\\\",\\\"\\\",\\\"  if ($_OWN_TX) $pdo->commit();\\\",\\\"  header('Location: sales_quotes_form.php?id='.$id);\\\",\\\"  exit;\\\",\\\"\\\",\\\"} catch (Throwable $e) {\\\",\\\"  if ($_OWN_TX && $pdo->inTransaction()) $pdo->rollBack();\\\",\\\"  set_flash('danger', $e->getMessage());\\\",\\\"  header('Location: sales_quotes_form.php'.($isEdit?('?id='.$id):'')); exit;\\\",\\\"}\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/store_patch_packager.php\\\": [\\\"<?php\\\",\\\"/**\\\",\\\" * EMS Infra ERP \\\\u2014 Store Module Patch Packager\\\",\\\" * Writes replacement endpoints, the StockLedger adapter include, and a migration SQL,\\\",\\\" * then creates store_module_patch.zip for easy download.\\\",\\\" *\\\",\\\" * Usage:\\\",\\\" * 1) Upload this file to your server (e.g., /var/www/html or your PHP tools dir)\\\",\\\" * 2) Open it in a browser OR run: php store_patch_packager.php\\\",\\\" * 3) It will create ./store_module_patch/ and ./store_module_patch.zip in the same folder\\\",\\\" * 4) Download the zip, then delete this script for safety\\\",\\\" */\\\",\\\"\\\",\\\"date_default_timezone_set('Asia/Kolkata');\\\",\\\"\\\",\\\"$baseDir = __DIR__ . '/store_module_patch';\\\",\\\"$includesDir = $baseDir . '/includes';\\\",\\\"$migrationsDir = $baseDir . '/migrations';\\\",\\\"\\\",\\\"@mkdir($baseDir, 0775, true);\\\",\\\"@mkdir($includesDir, 0775, true);\\\",\\\"@mkdir($migrationsDir, 0775, true);\\\",\\\"\\\",\\\"$TS = date('Y-m-d H:i:s');\\\",\\\"\\\",\\\"function writeFileStrict($path, $content) {\\\",\\\"    $dir = dirname($path);\\\",\\\"    if (!is_dir($dir)) mkdir($dir, 0775, true);\\\",\\\"    $ok = file_put_contents($path, $content);\\\",\\\"    if ($ok === false) {\\\",\\\"        throw new RuntimeException(\\\\\\\"Failed writing file: $path\\\\\\\");\\\",\\\"    }\\\",\\\"}\\\",\\\"\\\",\\\"/* ------------------ File contents ------------------ */\\\",\\\"\\\",\\\"$REQ_POST_ISSUE = <<<'PHP'\\\",\\\"<?php\\\",\\\"/**\\\",\\\" * Material Requisition \\\\u2192 Issue POST\\\",\\\" * - Creates material_issues header + lines\\\",\\\" * - Posts OUT movements via StockMoveWriter\\\",\\\" * - NEW: Calls ValuationService::onIssue and mirrors to stock_ledger\\\",\\\" */\\\",\\\"require_once __DIR__ . '/includes/db.php';\\\",\\\"require_once __DIR__ . '/includes/rbac.php';\\\",\\\"require_once __DIR__ . '/includes/csrf.php';\\\",\\\"require_once __DIR__ . '/includes/audit.php';\\\",\\\"require_once __DIR__ . '/includes/helpers.php';\\\",\\\"\\\",\\\"require_once __DIR__ . '/includes/NumberingService.php';\\\",\\\"require_once __DIR__ . '/includes/StockMoveWriter.php';\\\",\\\"require_once __DIR__ . '/includes/ValuationService.php';\\\",\\\"require_once __DIR__ . '/includes/StockLedgerAdapter.php';\\\",\\\"\\\",\\\"header('Content-Type: application/json');\\\",\\\"\\\",\\\"try {\\\",\\\"    require_permission('stores.issue.manage');\\\",\\\"\\\",\\\"    // Accept either JSON or form\\\",\\\"    $raw = file_get_contents('php://input');\\\",\\\"    $input = json_decode($raw, true);\\\",\\\"    if (!$input) $input = $_POST;\\\",\\\"\\\",\\\"    // Optional CSRF (only if you post from a form)\\\",\\\"    if (!empty($_POST)) {\\\",\\\"        csrf_require_token($_POST['csrf_token'] ?? '');\\\",\\\"    }\\\",\\\"\\\",\\\"    $userId = (int)($_SESSION['user_id'] ?? 0);\\\",\\\"    $now = date('Y-m-d H:i:s');\\\",\\\"\\\",\\\"    $reqId        = (int)($input['req_id'] ?? 0);\\\",\\\"    $warehouseId  = (int)($input['warehouse_id'] ?? 0);\\\",\\\"    $projectId    = isset($input['project_id']) ? (int)$input['project_id'] : null;\\\",\\\"    $remarks      = trim($input['remarks'] ?? '');\\\",\\\"    $lines        = $input['lines'] ?? [];\\\",\\\"\\\",\\\"    if ($warehouseId <= 0 || empty($lines)) {\\\",\\\"        http_response_code(422);\\\",\\\"        echo json_encode(['ok' => false, 'error' => 'warehouse_id and lines are required']);\\\",\\\"        exit;\\\",\\\"    }\\\",\\\"\\\",\\\"    $pdo = db();\\\",\\\"    $pdo->beginTransaction();\\\",\\\"\\\",\\\"    // Generate Issue number\\\",\\\"    $issueNo = NumberingService::next($pdo, 'ISS'); // e.g., ISS-2025-000123\\\",\\\"\\\",\\\"    // Create header\\\",\\\"    $stmt = $pdo->prepare(\\\\\\\"INSERT INTO material_issues\\\",\\\"        (issue_no, req_id, warehouse_id, project_id, remarks, status, created_by, created_at)\\\",\\\"        VALUES (:issue_no, :req_id, :warehouse_id, :project_id, :remarks, 'POSTED', :created_by, :created_at)\\\\\\\");\\\",\\\"    $stmt->execute([\\\",\\\"        ':issue_no'     => $issueNo,\\\",\\\"        ':req_id'       => $reqId ?: null,\\\",\\\"        ':warehouse_id' => $warehouseId,\\\",\\\"        ':project_id'   => $projectId,\\\",\\\"        ':remarks'      => $remarks,\\\",\\\"        ':created_by'   => $userId,\\\",\\\"        ':created_at'   => $now,\\\",\\\"    ]);\\\",\\\"    $issueId = (int)$pdo->lastInsertId();\\\",\\\"\\\",\\\"    // Prepare line insert\\\",\\\"    $insLine = $pdo->prepare(\\\\\\\"INSERT INTO material_issue_items\\\",\\\"        (issue_id, line_no, item_id, uom_id, qty, bin_id, batch_id, remarks)\\\",\\\"        VALUES (:issue_id, :line_no, :item_id, :uom_id, :qty, :bin_id, :batch_id, :remarks)\\\\\\\");\\\",\\\"\\\",\\\"    $lineNo = 0;\\\",\\\"    foreach ($lines as $ln) {\\\",\\\"        $lineNo++;\\\",\\\"        $itemId     = (int)($ln['item_id'] ?? 0);\\\",\\\"        $uomId      = isset($ln['uom_id']) ? (int)$ln['uom_id'] : null;\\\",\\\"        $qty        = (float)($ln['qty'] ?? 0);\\\",\\\"        $binId      = isset($ln['bin_id']) ? (int)$ln['bin_id'] : null;\\\",\\\"        $batchId    = isset($ln['batch_id']) ? (int)$ln['batch_id'] : null;\\\",\\\"        $lnRemarks  = trim($ln['remarks'] ?? '');\\\",\\\"\\\",\\\"        if ($itemId <= 0 || $qty <= 0) {\\\",\\\"            throw new RuntimeException(\\\\\\\"Invalid line at #{$lineNo}\\\\\\\");\\\",\\\"        }\\\",\\\"\\\",\\\"        // Insert issue line\\\",\\\"        $insLine->execute([\\\",\\\"            ':issue_id' => $issueId,\\\",\\\"            ':line_no'  => $lineNo,\\\",\\\"            ':item_id'  => $itemId,\\\",\\\"            ':uom_id'   => $uomId,\\\",\\\"            ':qty'      => $qty,\\\",\\\"            ':bin_id'   => $binId,\\\",\\\"            ':batch_id' => $batchId,\\\",\\\"            ':remarks'  => $lnRemarks,\\\",\\\"        ]);\\\",\\\"\\\",\\\"        // Build writer payload (mirror your existing shape)\\\",\\\"        $payload = [\\\",\\\"            'txn_type'     => 'ISS',\\\",\\\"            'txn_no'       => $issueNo,\\\",\\\"            'txn_date'     => $now,\\\",\\\"            'item_id'      => $itemId,\\\",\\\"            'uom_id'       => $uomId,\\\",\\\"            'warehouse_id' => $warehouseId,\\\",\\\"            'bin_id'       => $binId,\\\",\\\"            'batch_id'     => $batchId,\\\",\\\"            'project_id'   => $projectId,\\\",\\\"            'qty'          => $qty,            // positive here; writer will store negative in stock_moves\\\",\\\"            'unit_cost'    => (float)($ln['unit_cost'] ?? 0), // optional; not used for WA on issue\\\",\\\"            'ref_table'    => 'material_issues',\\\",\\\"            'ref_id'       => $issueId,\\\",\\\"            'created_by'   => $userId,\\\",\\\"        ];\\\",\\\"\\\",\\\"        // Post OUT to stock\\\",\\\"        StockMoveWriter::postOut($pdo, $payload);\\\",\\\"\\\",\\\"        // NEW: Valuation basis reduce + ledger mirror\\\",\\\"        ValuationService::onIssue($pdo, $itemId, $warehouseId, $qty);\\\",\\\"        StockLedgerAdapter::mirror($pdo, $payload);\\\",\\\"    }\\\",\\\"\\\",\\\"    // Optional: close requisition if fully issued (business rule as before)\\\",\\\"    if ($reqId > 0) {\\\",\\\"        $pdo->prepare(\\\\\\\"UPDATE material_requisitions SET status = 'CLOSED', updated_at = NOW()\\\",\\\"                       WHERE id = :id AND status <> 'CLOSED'\\\\\\\")\\\",\\\"            ->execute([':id' => $reqId]);\\\",\\\"    }\\\",\\\"\\\",\\\"    audit_log('material_issues', $issueId, 'POST', null, ['issue_no' => $issueNo, 'lines' => count($lines)]);\\\",\\\"    $pdo->commit();\\\",\\\"\\\",\\\"    echo json_encode(['ok' => true, 'issue_id' => $issueId, 'issue_no' => $issueNo]);\\\",\\\"\\\",\\\"} catch (Throwable $e) {\\\",\\\"    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();\\\",\\\"    error_log($e);\\\",\\\"    http_response_code(400);\\\",\\\"    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);\\\",\\\"}\\\",\\\"PHP;\\\",\\\"\\\",\\\"$STOCK_ADJUST_POST = <<<'PHP'\\\",\\\"<?php\\\",\\\"/**\\\",\\\" * Stock Adjustment POST\\\",\\\" * - Creates adjustment header + lines\\\",\\\" * - Posts IN or OUT via StockMoveWriter\\\",\\\" * - NEW: Calls ValuationService and mirrors to stock_ledger\\\",\\\" */\\\",\\\"require_once __DIR__ . '/includes/db.php';\\\",\\\"require_once __DIR__ . '/includes/rbac.php';\\\",\\\"require_once __DIR__ . '/includes/csrf.php';\\\",\\\"require_once __DIR__ . '/includes/audit.php';\\\",\\\"require_once __DIR__ . '/includes/helpers.php';\\\",\\\"\\\",\\\"require_once __DIR__ . '/includes/NumberingService.php';\\\",\\\"require_once __DIR__ . '/includes/StockMoveWriter.php';\\\",\\\"require_once __DIR__ . '/includes/ValuationService.php';\\\",\\\"require_once __DIR__ . '/includes/StockLedgerAdapter.php';\\\",\\\"\\\",\\\"header('Content-Type: application/json');\\\",\\\"\\\",\\\"try {\\\",\\\"    require_permission('stocks.adjust.manage');\\\",\\\"\\\",\\\"    $raw = file_get_contents('php://input');\\\",\\\"    $input = json_decode($raw, true);\\\",\\\"    if (!$input) $input = $_POST;\\\",\\\"\\\",\\\"    if (!empty($_POST)) {\\\",\\\"        csrf_require_token($_POST['csrf_token'] ?? '');\\\",\\\"    }\\\",\\\"\\\",\\\"    $userId = (int)($_SESSION['user_id'] ?? 0);\\\",\\\"    $now = date('Y-m-d H:i:s');\\\",\\\"\\\",\\\"    $warehouseId = (int)($input['warehouse_id'] ?? 0);\\\",\\\"    $mode        = strtoupper(trim($input['mode'] ?? '')); // IN or OUT\\\",\\\"    $reasonCode  = trim($input['reason_code'] ?? '');\\\",\\\"    $remarks     = trim($input['remarks'] ?? '');\\\",\\\"    $lines       = $input['lines'] ?? [];\\\",\\\"\\\",\\\"    if ($warehouseId <= 0 || !in_array($mode, ['IN', 'OUT'], true) || empty($lines)) {\\\",\\\"        http_response_code(422);\\\",\\\"        echo json_encode(['ok' => false, 'error' => 'warehouse_id, mode (IN/OUT) and lines are required']);\\\",\\\"        exit;\\\",\\\"    }\\\",\\\"\\\",\\\"    $pdo = db();\\\",\\\"    $pdo->beginTransaction();\\\",\\\"\\\",\\\"    $adjNo = NumberingService::next($pdo, 'ADJ'); // e.g., ADJ-2025-001234\\\",\\\"\\\",\\\"    // Header\\\",\\\"    $pdo->prepare(\\\\\\\"INSERT INTO stock_adjustments\\\",\\\"            (adj_no, warehouse_id, mode, reason_code, remarks, status, created_by, created_at)\\\",\\\"            VALUES (:adj_no, :warehouse_id, :mode, :reason_code, :remarks, 'POSTED', :created_by, :created_at)\\\\\\\")\\\",\\\"        ->execute([\\\",\\\"            ':adj_no'       => $adjNo,\\\",\\\"            ':warehouse_id' => $warehouseId,\\\",\\\"            ':mode'         => $mode,\\\",\\\"            ':reason_code'  => $reasonCode,\\\",\\\"            ':remarks'      => $remarks,\\\",\\\"            ':created_by'   => $userId,\\\",\\\"            ':created_at'   => $now,\\\",\\\"        ]);\\\",\\\"    $adjId = (int)$pdo->lastInsertId();\\\",\\\"\\\",\\\"    $insLine = $pdo->prepare(\\\\\\\"INSERT INTO stock_adjustment_items\\\",\\\"        (adjustment_id, line_no, item_id, uom_id, qty, unit_cost, bin_id, batch_id, remarks)\\\",\\\"        VALUES (:adjustment_id, :line_no, :item_id, :uom_id, :qty, :unit_cost, :bin_id, :batch_id, :remarks)\\\\\\\");\\\",\\\"\\\",\\\"    $lineNo = 0;\\\",\\\"    foreach ($lines as $ln) {\\\",\\\"        $lineNo++;\\\",\\\"        $itemId    = (int)($ln['item_id'] ?? 0);\\\",\\\"        $uomId     = isset($ln['uom_id']) ? (int)$ln['uom_id'] : null;\\\",\\\"        $qty       = (float)($ln['qty'] ?? 0);\\\",\\\"        $binId     = isset($ln['bin_id']) ? (int)$ln['bin_id'] : null;\\\",\\\"        $batchId   = isset($ln['batch_id']) ? (int)$ln['batch_id'] : null;\\\",\\\"        $lnRemarks = trim($ln['remarks'] ?? '');\\\",\\\"        $unitCost  = (float)($ln['unit_cost'] ?? 0); // required for IN valuation\\\",\\\"\\\",\\\"        if ($itemId <= 0 || $qty <= 0) {\\\",\\\"            throw new RuntimeException(\\\\\\\"Invalid line #{$lineNo}\\\\\\\");\\\",\\\"        }\\\",\\\"\\\",\\\"        $insLine->execute([\\\",\\\"            ':adjustment_id' => $adjId,\\\",\\\"            ':line_no'       => $lineNo,\\\",\\\"            ':item_id'       => $itemId,\\\",\\\"            ':uom_id'        => $uomId,\\\",\\\"            ':qty'           => $qty,\\\",\\\"            ':unit_cost'     => $unitCost,\\\",\\\"            ':bin_id'        => $binId,\\\",\\\"            ':batch_id'      => $batchId,\\\",\\\"            ':remarks'       => $lnRemarks,\\\",\\\"        ]);\\\",\\\"\\\",\\\"        $payload = [\\\",\\\"            'txn_type'     => 'ADJ',\\\",\\\"            'txn_no'       => $adjNo,\\\",\\\"            'txn_date'     => $now,\\\",\\\"            'item_id'      => $itemId,\\\",\\\"            'uom_id'       => $uomId,\\\",\\\"            'warehouse_id' => $warehouseId,\\\",\\\"            'bin_id'       => $binId,\\\",\\\"            'batch_id'     => $batchId,\\\",\\\"            'project_id'   => null,\\\",\\\"            'qty'          => $qty,         // positive\\\",\\\"            'unit_cost'    => $unitCost,    // pre-tax basic\\\",\\\"            'ref_table'    => 'stock_adjustments',\\\",\\\"            'ref_id'       => $adjId,\\\",\\\"            'created_by'   => $userId,\\\",\\\"        ];\\\",\\\"\\\",\\\"        if ($mode === 'IN') {\\\",\\\"            StockMoveWriter::postIn($pdo, $payload);\\\",\\\"            ValuationService::onReceipt($pdo, $itemId, $warehouseId, $qty, $unitCost);\\\",\\\"            StockLedgerAdapter::mirror($pdo, $payload);\\\",\\\"        } else { // OUT\\\",\\\"            StockMoveWriter::postOut($pdo, $payload);\\\",\\\"            ValuationService::onIssue($pdo, $itemId, $warehouseId, $qty);\\\",\\\"            StockLedgerAdapter::mirror($pdo, $payload);\\\",\\\"        }\\\",\\\"    }\\\",\\\"\\\",\\\"    audit_log('stock_adjustments', $adjId, 'POST', null, ['adj_no' => $adjNo, 'mode' => $mode, 'lines' => count($lines)]);\\\",\\\"    $pdo->commit();\\\",\\\"\\\",\\\"    echo json_encode(['ok' => true, 'adjustment_id' => $adjId, 'adj_no' => $adjNo]);\\\",\\\"\\\",\\\"} catch (Throwable $e) {\\\",\\\"    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();\\\",\\\"    error_log($e);\\\",\\\"    http_response_code(400);\\\",\\\"    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);\\\",\\\"}\\\",\\\"PHP;\\\",\\\"\\\",\\\"$GP_CREATE_POST = <<<'PHP'\\\",\\\"<?php\\\",\\\"/**\\\",\\\" * Gate Pass CREATE\\\",\\\" * - Creates GP header + lines\\\",\\\" * - For non-returnable lines that are dispatched now: posts OUT\\\",\\\" * - NEW: Valuation on OUT + mirror to stock_ledger\\\",\\\" */\\\",\\\"require_once __DIR__ . '/includes/db.php';\\\",\\\"require_once __DIR__ . '/includes/rbac.php';\\\",\\\"require_once __DIR__ . '/includes/csrf.php';\\\",\\\"require_once __DIR__ . '/includes/audit.php';\\\",\\\"require_once __DIR__ . '/includes/helpers.php';\\\",\\\"\\\",\\\"require_once __DIR__ . '/includes/NumberingService.php';\\\",\\\"require_once __DIR__ . '/includes/StockMoveWriter.php';\\\",\\\"require_once __DIR__ . '/includes/ValuationService.php';\\\",\\\"require_once __DIR__ . '/includes/StockLedgerAdapter.php';\\\",\\\"\\\",\\\"header('Content-Type: application/json');\\\",\\\"\\\",\\\"try {\\\",\\\"    require_permission('stores.gatepass.manage');\\\",\\\"\\\",\\\"    $raw = file_get_contents('php://input');\\\",\\\"    $input = json_decode($raw, true);\\\",\\\"    if (!$input) $input = $_POST;\\\",\\\"\\\",\\\"    if (!empty($_POST)) {\\\",\\\"        csrf_require_token($_POST['csrf_token'] ?? '');\\\",\\\"    }\\\",\\\"\\\",\\\"    $userId = (int)($_SESSION['user_id'] ?? 0);\\\",\\\"    $now = date('Y-m-d H:i:s');\\\",\\\"\\\",\\\"    $sourceWhId   = (int)($input['warehouse_id'] ?? 0);\\\",\\\"    $destWhId     = isset($input['to_warehouse_id']) ? (int)$input['to_warehouse_id'] : null; // optional\\\",\\\"    $partyId      = isset($input['party_id']) ? (int)$input['party_id'] : null;               // optional (jobwork/site)\\\",\\\"    $projectId    = isset($input['project_id']) ? (int)$input['project_id'] : null;\\\",\\\"    $returnable   = (int)($input['returnable'] ?? 0); // 1/0\\\",\\\"    $expectedRet  = !empty($input['expected_return_date']) ? $input['expected_return_date'] : null;\\\",\\\"    $vehicleNo    = trim($input['vehicle_no'] ?? '');\\\",\\\"    $contactName  = trim($input['contact_name'] ?? '');\\\",\\\"    $remarks      = trim($input['remarks'] ?? '');\\\",\\\"    $lines        = $input['lines'] ?? [];\\\",\\\"\\\",\\\"    if ($sourceWhId <= 0 || empty($lines)) {\\\",\\\"        http_response_code(422);\\\",\\\"        echo json_encode(['ok' => false, 'error' => 'warehouse_id and lines are required']);\\\",\\\"        exit;\\\",\\\"    }\\\",\\\"\\\",\\\"    $pdo = db();\\\",\\\"    $pdo->beginTransaction();\\\",\\\"\\\",\\\"    $gpNo = NumberingService::next($pdo, 'GP');\\\",\\\"\\\",\\\"    // Header\\\",\\\"    $stmt = $pdo->prepare(\\\\\\\"INSERT INTO gatepasses\\\",\\\"        (gp_no, warehouse_id, to_warehouse_id, party_id, project_id, returnable, expected_return_date,\\\",\\\"         vehicle_no, contact_name, remarks, status, created_by, created_at)\\\",\\\"        VALUES\\\",\\\"        (:gp_no, :warehouse_id, :to_warehouse_id, :party_id, :project_id, :returnable, :expected_return_date,\\\",\\\"         :vehicle_no, :contact_name, :remarks, :status, :created_by, :created_at)\\\\\\\");\\\",\\\"    $stmt->execute([\\\",\\\"        ':gp_no'                => $gpNo,\\\",\\\"        ':warehouse_id'         => $sourceWhId,\\\",\\\"        ':to_warehouse_id'      => $destWhId,\\\",\\\"        ':party_id'             => $partyId,\\\",\\\"        ':project_id'           => $projectId,\\\",\\\"        ':returnable'           => $returnable,\\\",\\\"        ':expected_return_date' => $expectedRet,\\\",\\\"        ':vehicle_no'           => $vehicleNo,\\\",\\\"        ':contact_name'         => $contactName,\\\",\\\"        ':remarks'              => $remarks,\\\",\\\"        ':status'               => ($returnable ? 'OPEN' : 'CLOSED'),\\\",\\\"        ':created_by'           => $userId,\\\",\\\"        ':created_at'           => $now,\\\",\\\"    ]);\\\",\\\"    $gpId = (int)$pdo->lastInsertId();\\\",\\\"\\\",\\\"    $insLine = $pdo->prepare(\\\\\\\"INSERT INTO gatepass_items\\\",\\\"        (gp_id, line_no, item_id, uom_id, qty, bin_id, batch_id, remarks, returned_qty)\\\",\\\"        VALUES (:gp_id, :line_no, :item_id, :uom_id, :qty, :bin_id, :batch_id, :remarks, 0)\\\\\\\");\\\",\\\"\\\",\\\"    $lineNo = 0;\\\",\\\"    foreach ($lines as $ln) {\\\",\\\"        $lineNo++;\\\",\\\"        $itemId    = (int)($ln['item_id'] ?? 0);\\\",\\\"        $uomId     = isset($ln['uom_id']) ? (int)$ln['uom_id'] : null;\\\",\\\"        $qty       = (float)($ln['qty'] ?? 0);\\\",\\\"        $binId     = isset($ln['bin_id']) ? (int)$ln['bin_id'] : null;\\\",\\\"        $batchId   = isset($ln['batch_id']) ? (int)$ln['batch_id'] : null;\\\",\\\"        $lnRemarks = trim($ln['remarks'] ?? '');\\\",\\\"        $unitCost  = (float)($ln['unit_cost'] ?? 0);\\\",\\\"\\\",\\\"        if ($itemId <= 0 || $qty <= 0) {\\\",\\\"            throw new RuntimeException(\\\\\\\"Invalid line #{$lineNo}\\\\\\\");\\\",\\\"        }\\\",\\\"\\\",\\\"        $insLine->execute([\\\",\\\"            ':gp_id'   => $gpId,\\\",\\\"            ':line_no' => $lineNo,\\\",\\\"            ':item_id' => $itemId,\\\",\\\"            ':uom_id'  => $uomId,\\\",\\\"            ':qty'     => $qty,\\\",\\\"            ':bin_id'  => $binId,\\\",\\\"            ':batch_id'=> $batchId,\\\",\\\"            ':remarks' => $lnRemarks,\\\",\\\"        ]);\\\",\\\"\\\",\\\"        // If NON-RETURNABLE, we post OUT right now.\\\",\\\"        if (!$returnable) {\\\",\\\"            $payload = [\\\",\\\"                'txn_type'     => 'GP',\\\",\\\"                'txn_no'       => $gpNo,\\\",\\\"                'txn_date'     => $now,\\\",\\\"                'item_id'      => $itemId,\\\",\\\"                'uom_id'       => $uomId,\\\",\\\"                'warehouse_id' => $sourceWhId,\\\",\\\"                'bin_id'       => $binId,\\\",\\\"                'batch_id'     => $batchId,\\\",\\\"                'project_id'   => $projectId,\\\",\\\"                'qty'          => $qty,\\\",\\\"                'unit_cost'    => $unitCost,\\\",\\\"                'ref_table'    => 'gatepasses',\\\",\\\"                'ref_id'       => $gpId,\\\",\\\"                'created_by'   => $userId,\\\",\\\"            ];\\\",\\\"\\\",\\\"            StockMoveWriter::postOut($pdo, $payload);\\\",\\\"            ValuationService::onIssue($pdo, $itemId, $sourceWhId, $qty);\\\",\\\"            StockLedgerAdapter::mirror($pdo, $payload);\\\",\\\"        }\\\",\\\"    }\\\",\\\"\\\",\\\"    audit_log('gatepasses', $gpId, 'CREATE', null, ['gp_no' => $gpNo, 'returnable' => $returnable, 'lines' => count($lines)]);\\\",\\\"    $pdo->commit();\\\",\\\"\\\",\\\"    echo json_encode(['ok' => true, 'gp_id' => $gpId, 'gp_no' => $gpNo]);\\\",\\\"\\\",\\\"} catch (Throwable $e) {\\\",\\\"    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();\\\",\\\"    error_log($e);\\\",\\\"    http_response_code(400);\\\",\\\"    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);\\\",\\\"}\\\",\\\"PHP;\\\",\\\"\\\",\\\"$GP_RETURN_POST = <<<'PHP'\\\",\\\"<?php\\\",\\\"/**\\\",\\\" * Gate Pass RETURN\\\",\\\" * - Validates returnable GP and outstanding qty\\\",\\\" * - Posts IN movements\\\",\\\" * - NEW: Calls ValuationService::onReceipt and mirrors to stock_ledger\\\",\\\" */\\\",\\\"require_once __DIR__ . '/includes/db.php';\\\",\\\"require_once __DIR__ . '/includes/rbac.php';\\\",\\\"require_once __DIR__ . '/includes/csrf.php';\\\",\\\"require_once __DIR__ . '/includes/audit.php';\\\",\\\"require_once __DIR__ . '/includes/helpers.php';\\\",\\\"\\\",\\\"require_once __DIR__ . '/includes/NumberingService.php';\\\",\\\"require_once __DIR__ . '/includes/StockMoveWriter.php';\\\",\\\"require_once __DIR__ . '/includes/ValuationService.php';\\\",\\\"require_once __DIR__ . '/includes/StockLedgerAdapter.php';\\\",\\\"\\\",\\\"header('Content-Type: application/json');\\\",\\\"\\\",\\\"try {\\\",\\\"    require_permission('stores.gatepass.manage');\\\",\\\"\\\",\\\"    $raw = file_get_contents('php://input');\\\",\\\"    $input = json_decode($raw, true);\\\",\\\"    if (!$input) $input = $_POST;\\\",\\\"\\\",\\\"    if (!empty($_POST)) {\\\",\\\"        csrf_require_token($_POST['csrf_token'] ?? '');\\\",\\\"    }\\\",\\\"\\\",\\\"    $userId = (int)($_SESSION['user_id'] ?? 0);\\\",\\\"    $now = date('Y-m-d H:i:s');\\\",\\\"\\\",\\\"    $gpId   = (int)($input['gp_id'] ?? 0);\\\",\\\"    $lines  = $input['lines'] ?? []; // each: gp_line_id, qty, unit_cost?, bin_id?, batch_id?\\\",\\\"    if ($gpId <= 0 || empty($lines)) {\\\",\\\"        http_response_code(422);\\\",\\\"        echo json_encode(['ok' => false, 'error' => 'gp_id and lines are required']);\\\",\\\"        exit;\\\",\\\"    }\\\",\\\"\\\",\\\"    $pdo = db();\\\",\\\"    $pdo->beginTransaction();\\\",\\\"\\\",\\\"    // Load GP header, ensure returnable\\\",\\\"    $h = $pdo->prepare(\\\\\\\"SELECT gp_no, warehouse_id, returnable, status FROM gatepasses WHERE id = :id FOR UPDATE\\\\\\\");\\\",\\\"    $h->execute([':id' => $gpId]);\\\",\\\"    $hdr = $h->fetch(PDO::FETCH_ASSOC);\\\",\\\"    if (!$hdr) throw new RuntimeException('Gate Pass not found');\\\",\\\"    if ((int)$hdr['returnable'] !== 1) throw new RuntimeException('Gate Pass is not returnable');\\\",\\\"\\\",\\\"    $gpNo       = $hdr['gp_no'];\\\",\\\"    $warehouseId= (int)$hdr['warehouse_id'];\\\",\\\"\\\",\\\"    // Load lines outstanding\\\",\\\"    $lnQ = $pdo->prepare(\\\\\\\"SELECT id, line_no, item_id, uom_id, qty, returned_qty, bin_id, batch_id FROM gatepass_items WHERE gp_id = :id\\\\\\\");\\\",\\\"    $lnQ->execute([':id' => $gpId]);\\\",\\\"    $existing = [];\\\",\\\"    while ($r = $lnQ->fetch(PDO::FETCH_ASSOC)) {\\\",\\\"        $existing[(int)$r['id']] = $r;\\\",\\\"    }\\\",\\\"\\\",\\\"    // Generate return number\\\",\\\"    $gprNo = NumberingService::next($pdo, 'GPR');\\\",\\\"\\\",\\\"    foreach ($lines as $ln) {\\\",\\\"        $gpLineId = (int)($ln['gp_line_id'] ?? 0);\\\",\\\"        $retQty   = (float)($ln['qty'] ?? 0);\\\",\\\"        $unitCost = (float)($ln['unit_cost'] ?? 0);\\\",\\\"        $binId    = isset($ln['bin_id']) ? (int)$ln['bin_id'] : ($existing[$gpLineId]['bin_id'] ?? null);\\\",\\\"        $batchId  = isset($ln['batch_id']) ? (int)$ln['batch_id'] : ($existing[$gpLineId]['batch_id'] ?? null);\\\",\\\"\\\",\\\"        if ($gpLineId <= 0 || $retQty <= 0) {\\\",\\\"            throw new RuntimeException(\\\\\\\"Invalid return line\\\\\\\");\\\",\\\"        }\\\",\\\"        if (!isset($existing[$gpLineId])) {\\\",\\\"            throw new RuntimeException(\\\\\\\"Gate Pass line not found: {$gpLineId}\\\\\\\");\\\",\\\"        }\\\",\\\"        $ex = $existing[$gpLineId];\\\",\\\"        $outstanding = (float)$ex['qty'] - (float)$ex['returned_qty'];\\\",\\\"        if ($retQty > $outstanding + 1e-9) {\\\",\\\"            throw new RuntimeException(\\\\\\\"Return qty exceeds outstanding on line {$ex['line_no']}\\\\\\\");\\\",\\\"        }\\\",\\\"\\\",\\\"        // Update returned qty\\\",\\\"        $pdo->prepare(\\\\\\\"UPDATE gatepass_items SET returned_qty = returned_qty + :r WHERE id = :id\\\\\\\")\\\",\\\"            ->execute([':r' => $retQty, ':id' => $gpLineId]);\\\",\\\"\\\",\\\"        // Build payload\\\",\\\"        $payload = [\\\",\\\"            'txn_type'     => 'GPR',\\\",\\\"            'txn_no'       => $gprNo,       // return doc number\\\",\\\"            'txn_date'     => $now,\\\",\\\"            'item_id'      => (int)$ex['item_id'],\\\",\\\"            'uom_id'       => (int)$ex['uom_id'],\\\",\\\"            'warehouse_id' => $warehouseId,\\\",\\\"            'bin_id'       => $binId,\\\",\\\"            'batch_id'     => $batchId,\\\",\\\"            'project_id'   => null,\\\",\\\"            'qty'          => $retQty,      // positive IN\\\",\\\"            'unit_cost'    => $unitCost,    // pre-tax\\\",\\\"            'ref_table'    => 'gatepasses',\\\",\\\"            'ref_id'       => $gpId,\\\",\\\"            'created_by'   => $userId,\\\",\\\"        ];\\\",\\\"\\\",\\\"        StockMoveWriter::postIn($pdo, $payload);\\\",\\\"        ValuationService::onReceipt($pdo, (int)$ex['item_id'], $warehouseId, $retQty, $unitCost);\\\",\\\"        StockLedgerAdapter::mirror($pdo, $payload);\\\",\\\"    }\\\",\\\"\\\",\\\"    // Close GP if fully returned\\\",\\\"    $c = $pdo->prepare(\\\\\\\"SELECT SUM(qty) as t_qty, SUM(returned_qty) as t_ret FROM gatepass_items WHERE gp_id = :id\\\\\\\");\\\",\\\"    $c->execute([':id' => $gpId]);\\\",\\\"    $row = $c->fetch(PDO::FETCH_ASSOC);\\\",\\\"    if ($row && (float)$row['t_qty'] <= (float)$row['t_ret'] + 1e-9) {\\\",\\\"        $pdo->prepare(\\\\\\\"UPDATE gatepasses SET status = 'CLOSED', updated_at = NOW() WHERE id = :id\\\\\\\")\\\",\\\"            ->execute([':id' => $gpId]);\\\",\\\"    }\\\",\\\"\\\",\\\"    audit_log('gatepasses', $gpId, 'RETURN', null, ['gpr_no' => $gprNo, 'lines' => count($lines)]);\\\",\\\"    $pdo->commit();\\\",\\\"\\\",\\\"    echo json_encode(['ok' => true, 'gp_id' => $gpId, 'gpr_no' => $gprNo]);\\\",\\\"\\\",\\\"} catch (Throwable $e) {\\\",\\\"    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();\\\",\\\"    error_log($e);\\\",\\\"    http_response_code(400);\\\",\\\"    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);\\\",\\\"}\\\",\\\"PHP;\\\",\\\"\\\",\\\"$STOCK_LEDGER_ADAPTER = <<<'PHP'\\\",\\\"<?php\\\",\\\"// includes/StockLedgerAdapter.php\\\",\\\"require_once __DIR__ . '/db.php';\\\",\\\"\\\",\\\"class StockLedgerAdapter\\\",\\\"{\\\",\\\"    public static function mirror(PDO $pdo, array $payload): void\\\",\\\"    {\\\",\\\"        if (!$payload) return;\\\",\\\"\\\",\\\"        $txnDate     = $payload['txn_date'] ?? date('Y-m-d H:i:s');\\\",\\\"        $txnType     = $payload['txn_type'] ?? 'NA';\\\",\\\"        $txnNo       = $payload['txn_no'] ?? '';\\\",\\\"        $itemId      = (int)($payload['item_id'] ?? 0);\\\",\\\"        $warehouseId = (int)($payload['warehouse_id'] ?? 0);\\\",\\\"        $projectId   = isset($payload['project_id']) ? (int)$payload['project_id'] : null;\\\",\\\"        $binId       = isset($payload['bin_id']) ? (int)$payload['bin_id'] : null;\\\",\\\"        $batchId     = isset($payload['batch_id']) ? (int)$payload['batch_id'] : null;\\\",\\\"        $qty         = (float)($payload['qty'] ?? 0);\\\",\\\"        $unitCost    = isset($payload['unit_cost']) ? (float)$payload['unit_cost'] : 0.0;\\\",\\\"        $uomId       = isset($payload['uom_id']) ? (int)$payload['uom_id'] : null;\\\",\\\"        $refTable    = $payload['ref_table'] ?? null;\\\",\\\"        $refId       = isset($payload['ref_id']) ? (int)$payload['ref_id'] : null;\\\",\\\"        $createdBy   = isset($payload['created_by']) ? (int)$payload['created_by'] : null;\\\",\\\"\\\",\\\"        if ($qty == 0 || $itemId <= 0 || $warehouseId <= 0) {\\\",\\\"            return;\\\",\\\"        }\\\",\\\"\\\",\\\"        // Determine WA for OUT from stock_avg (optional but recommended)\\\",\\\"        $rate = $unitCost;\\\",\\\"        if (in_array(($payload['txn_type'] ?? ''), ['ADJ','GP','ISS'], true)) {\\\",\\\"            $q = $pdo->prepare('SELECT avg_cost FROM stock_avg WHERE item_id = :i AND warehouse_id = :w');\\\",\\\"            $q->execute([':i' => $itemId, ':w' => $warehouseId]);\\\",\\\"            $r = $q->fetch(PDO::FETCH_ASSOC);\\\",\\\"            if ($r && isset($r['avg_cost']) && (float)$r['avg_cost'] > 0) {\\\",\\\"                $rate = (float)$r['avg_cost'];\\\",\\\"            }\\\",\\\"        }\\\",\\\"\\\",\\\"        $stmt = $pdo->prepare('INSERT INTO stock_ledger\\\",\\\"            (txn_date, txn_type, txn_no, item_id, warehouse_id, project_id, bin_id, batch_id,\\\",\\\"             qty, rate, uom_id, ref_table, ref_id, created_by, created_at)\\\",\\\"            VALUES\\\",\\\"            (:txn_date, :txn_type, :txn_no, :item_id, :warehouse_id, :project_id, :bin_id, :batch_id,\\\",\\\"             :qty, :rate, :uom_id, :ref_table, :ref_id, :created_by, NOW(6))');\\\",\\\"\\\",\\\"        $stmt->execute([\\\",\\\"            ':txn_date'     => $txnDate,\\\",\\\"            ':txn_type'     => $txnType,\\\",\\\"            ':txn_no'       => $txnNo,\\\",\\\"            ':item_id'      => $itemId,\\\",\\\"            ':warehouse_id' => $warehouseId,\\\",\\\"            ':project_id'   => $projectId,\\\",\\\"            ':bin_id'       => $binId,\\\",\\\"            ':batch_id'     => $batchId,\\\",\\\"            ':qty'          => $qty,\\\",\\\"            ':rate'         => $rate,\\\",\\\"            ':uom_id'       => $uomId,\\\",\\\"            ':ref_table'    => $refTable,\\\",\\\"            ':ref_id'       => $refId,\\\",\\\"            ':created_by'   => $createdBy,\\\",\\\"        ]);\\\",\\\"    }\\\",\\\"}\\\",\\\"PHP;\\\",\\\"\\\",\\\"$MIGRATION = <<<'SQL'\\\",\\\"-- migrations/001_add_stock_ledger.sql\\\",\\\"CREATE TABLE IF NOT EXISTS stock_ledger (\\\",\\\"  id                BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,\\\",\\\"  txn_date          DATETIME(6)     NOT NULL,\\\",\\\"  txn_type          VARCHAR(16)     NOT NULL,\\\",\\\"  txn_no            VARCHAR(50)     NOT NULL,\\\",\\\"  item_id           BIGINT          NOT NULL,\\\",\\\"  warehouse_id      BIGINT          NOT NULL,\\\",\\\"  project_id        BIGINT          NULL,\\\",\\\"  bin_id            BIGINT          NULL,\\\",\\\"  batch_id          BIGINT          NULL,\\\",\\\"  qty               DECIMAL(18,6)   NOT NULL,\\\",\\\"  rate              DECIMAL(18,6)   NOT NULL,\\\",\\\"  amount            DECIMAL(18,2)   AS (qty * rate) STORED,\\\",\\\"  uom_id            BIGINT          NULL,\\\",\\\"  ref_table         VARCHAR(64)     NULL,\\\",\\\"  ref_id            BIGINT          NULL,\\\",\\\"  created_by        BIGINT          NULL,\\\",\\\"  created_at        DATETIME(6)     NOT NULL DEFAULT CURRENT_TIMESTAMP(6),\\\",\\\"  PRIMARY KEY (id),\\\",\\\"  KEY idx_ledger_date (txn_date),\\\",\\\"  KEY idx_ledger_item_wh (item_id, warehouse_id),\\\",\\\"  KEY idx_ledger_txn (txn_type, txn_no)\\\",\\\");\\\",\\\"SQL;\\\",\\\"\\\",\\\"$README = <<<TXT\\\",\\\"EMS Infra ERP \\\\u2014 Store Module Patch\\\",\\\"Generated: {$TS}\\\",\\\"\\\",\\\"Contents\\\",\\\"--------\\\",\\\"- req_post_issue.php            (full replacement)\\\",\\\"- stock_adjust_post.php         (full replacement)\\\",\\\"- gp_create_post.php            (full replacement)\\\",\\\"- gp_return_post.php            (full replacement)\\\",\\\"- includes/StockLedgerAdapter.php (new include)\\\",\\\"- migrations/001_add_stock_ledger.sql (new table)\\\",\\\"\\\",\\\"Instructions\\\",\\\"------------\\\",\\\"1) Run the migration:\\\",\\\"   - Execute migrations/001_add_stock_ledger.sql on your MySQL DB.\\\",\\\"\\\",\\\"2) Copy the new include:\\\",\\\"   - Place includes/StockLedgerAdapter.php into your project's includes/ folder.\\\",\\\"\\\",\\\"3) Replace endpoints:\\\",\\\"   - Backup your existing files.\\\",\\\"   - Replace the following with the provided versions:\\\",\\\"       req_post_issue.php\\\",\\\"       stock_adjust_post.php\\\",\\\"       gp_create_post.php\\\",\\\"       gp_return_post.php\\\",\\\"\\\",\\\"4) Clear opcode cache if enabled (php-fpm/apcu/opcache).\\\",\\\"\\\",\\\"5) Test:\\\",\\\"   - Post a small Issue (OUT): verify stock_ledger receives rows and stock_avg basis reduces.\\\",\\\"   - Create a non-returnable GP: verify OUT mirror in stock_ledger.\\\",\\\"   - Return on a returnable GP: verify IN mirror and valuation on receipt.\\\",\\\"   - Adjustment IN/OUT: verify both valuation and ledger entries.\\\",\\\"\\\",\\\"Notes\\\",\\\"-----\\\",\\\"- No UI changes. Payload shapes are preserved.\\\",\\\"- Rates are pre-tax (basic). Taxes remain in AP.\\\",\\\"- The adapter reads current WA for OUT from stock_avg; ensure your ValuationService keeps stock_avg updated.\\\",\\\"TXT;\\\",\\\"\\\",\\\"/* ------------- Write files ------------- */\\\",\\\"writeFileStrict($baseDir . '/req_post_issue.php', $REQ_POST_ISSUE);\\\",\\\"writeFileStrict($baseDir . '/stock_adjust_post.php', $STOCK_ADJUST_POST);\\\",\\\"writeFileStrict($baseDir . '/gp_create_post.php', $GP_CREATE_POST);\\\",\\\"writeFileStrict($baseDir . '/gp_return_post.php', $GP_RETURN_POST);\\\",\\\"\\\",\\\"writeFileStrict($includesDir . '/StockLedgerAdapter.php', $STOCK_LEDGER_ADAPTER);\\\",\\\"writeFileStrict($migrationsDir . '/001_add_stock_ledger.sql', $MIGRATION);\\\",\\\"writeFileStrict($baseDir . '/README.txt', $README);\\\",\\\"\\\",\\\"/* ------------- Zip it ------------- */\\\",\\\"$zipPath = __DIR__ . '/store_module_patch.zip';\\\",\\\"$zip = new ZipArchive();\\\",\\\"if ($zip->open($zipPath, ZipArchive::CREATE | ZipArchive::OVERWRITE) !== true) {\\\",\\\"    throw new RuntimeException(\\\\\\\"Unable to create zip at $zipPath\\\\\\\");\\\",\\\"}\\\",\\\"$rii = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($baseDir, FilesystemIterator::SKIP_DOTS));\\\",\\\"foreach ($rii as $file) {\\\",\\\"    $filePath = $file->getPathname();\\\",\\\"    $local = substr($filePath, strlen($baseDir) + 1);\\\",\\\"    $zip->addFile($filePath, $local);\\\",\\\"}\\\",\\\"$zip->close();\\\",\\\"\\\",\\\"/* ------------- Output ------------- */\\\",\\\"$isCli = (php_sapi_name() === 'cli');\\\",\\\"$msg = \\\\\\\"OK: Created folder 'store_module_patch' and 'store_module_patch.zip' in \\\\\\\" . __DIR__ . \\\\\\\"\\\\\\\\n\\\\\\\";\\\",\\\"if ($isCli) {\\\",\\\"    echo $msg;\\\",\\\"} else {\\\",\\\"    echo nl2br(htmlentities($msg));\\\",\\\"    echo \\\\\\\"<br><a href='store_module_patch.zip' download>Download store_module_patch.zip</a>\\\\\\\";\\\",\\\"}\\\",\\\"PHP;\\\",\\\"\\\",\\\"/* ------------------ Write everything and finish ------------------ */\\\",\\\"try {\\\",\\\"    writeFileStrict($baseDir . '/README.txt', $README); // ensure base exists\\\",\\\"    // Re-write all files (already done above in content-section)\\\",\\\"    // but here we just ensure the script writes itself ZIP after all files.\\\",\\\"    // done in code.\\\",\\\"\\\",\\\"    // Actually, files were already written above.\\\",\\\"    // No action here.\\\",\\\"\\\",\\\"} catch (Throwable $e) {\\\",\\\"    http_response_code(500);\\\",\\\"    echo \\\\\\\"ERROR: \\\\\\\" . htmlspecialchars($e->getMessage());\\\",\\\"    exit;\\\",\\\"}\\\",\\\"\\\",\\\"echo \\\\\\\"Packager file generated successfully at \\\\\\\" . __FILE__ . \\\\\\\"\\\\\\\\n\\\\\\\";\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/login.php\\\": [\\\"<?php\\\",\\\"// PATH: /public_html/login.php\\\",\\\"declare(strict_types=1);\\\",\\\"\\\",\\\"require_once __DIR__ . '/config.php';\\\",\\\"if (session_status() === PHP_SESSION_NONE) session_start();\\\",\\\"require_once __DIR__ . '/includes/csrf.php';\\\",\\\"\\\",\\\"// app_url() fallback\\\",\\\"if (!function_exists('app_url')) {\\\",\\\"  function app_url(): string { return '/'; }\\\",\\\"}\\\",\\\"?>\\\",\\\"<!doctype html>\\\",\\\"<html lang=\\\\\\\"en\\\\\\\">\\\",\\\"<head>\\\",\\\"  <meta charset=\\\\\\\"utf-8\\\\\\\">\\\",\\\"  <title>EMS Infra ERP \\\\u2014 Login</title>\\\",\\\"  <meta name=\\\\\\\"viewport\\\\\\\" content=\\\\\\\"width=device-width, initial-scale=1\\\\\\\">\\\",\\\"  <link href=\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\\\\\\\" rel=\\\\\\\"stylesheet\\\\\\\">\\\",\\\"  <style>\\\",\\\"    body {\\\",\\\"      background: #f8f9fa;\\\",\\\"      min-height: 100vh;\\\",\\\"      display: flex;\\\",\\\"      align-items: center;\\\",\\\"    }\\\",\\\"    .login-card {\\\",\\\"      border-radius: 1rem;\\\",\\\"    }\\\",\\\"    .logo {\\\",\\\"      max-width: 120px;\\\",\\\"      margin-bottom: 1rem;\\\",\\\"    }\\\",\\\"  </style>\\\",\\\"</head>\\\",\\\"<body>\\\",\\\"  <div class=\\\\\\\"container\\\\\\\">\\\",\\\"    <div class=\\\\\\\"row justify-content-center\\\\\\\">\\\",\\\"      <div class=\\\\\\\"col-sm-10 col-md-6 col-lg-4\\\\\\\">\\\",\\\"        <div class=\\\\\\\"card shadow-sm login-card\\\\\\\">\\\",\\\"          <div class=\\\\\\\"card-body p-4\\\\\\\">\\\",\\\"            <div class=\\\\\\\"text-center\\\\\\\">\\\",\\\"              <img src=\\\\\\\"/assets/logo.jpg\\\\\\\" alt=\\\\\\\"EMS Infra Logo\\\\\\\" class=\\\\\\\"logo rounded-circle shadow-sm\\\\\\\">\\\",\\\"              <h4 class=\\\\\\\"fw-bold\\\\\\\">EMS Infra ERP</h4>\\\",\\\"              <p class=\\\\\\\"text-muted small mb-4\\\\\\\">Secure Access Portal</p>\\\",\\\"            </div>\\\",\\\"\\\",\\\"            <?php if (!empty($_SESSION['flash_error'])): ?>\\\",\\\"              <div class=\\\\\\\"alert alert-danger\\\\\\\">\\\",\\\"                <?= htmlspecialchars($_SESSION['flash_error']) ?>\\\",\\\"              </div>\\\",\\\"              <?php unset($_SESSION['flash_error']); ?>\\\",\\\"            <?php endif; ?>\\\",\\\"\\\",\\\"            <form method=\\\\\\\"post\\\\\\\" action=\\\\\\\"login_handler.php\\\\\\\" autocomplete=\\\\\\\"off\\\\\\\">\\\",\\\"              <?= csrf_field(); ?>\\\",\\\"              <div class=\\\\\\\"mb-3\\\\\\\">\\\",\\\"                <label class=\\\\\\\"form-label\\\\\\\">Username or Email</label>\\\",\\\"                <input name=\\\\\\\"username\\\\\\\" class=\\\\\\\"form-control form-control-lg\\\\\\\" required>\\\",\\\"              </div>\\\",\\\"              <div class=\\\\\\\"mb-3\\\\\\\">\\\",\\\"                <label class=\\\\\\\"form-label\\\\\\\">Password</label>\\\",\\\"                <input name=\\\\\\\"password\\\\\\\" type=\\\\\\\"password\\\\\\\" class=\\\\\\\"form-control form-control-lg\\\\\\\" required>\\\",\\\"              </div>\\\",\\\"              <button class=\\\\\\\"btn btn-primary w-100 btn-lg\\\\\\\">Login</button>\\\",\\\"            </form>\\\",\\\"          </div>\\\",\\\"          <div class=\\\\\\\"card-footer text-center small bg-light\\\\\\\">\\\",\\\"            <a href=\\\\\\\"<?= app_url(); ?>\\\\\\\" class=\\\\\\\"text-decoration-none\\\\\\\">\\\",\\\"              <?= parse_url(app_url(), PHP_URL_HOST) ?: 'Home' ?>\\\",\\\"            </a>\\\",\\\"          </div>\\\",\\\"        </div>\\\",\\\"      </div>\\\",\\\"    </div>\\\",\\\"  </div>\\\",\\\"  <script src=\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\\\\\\\"></script>\\\",\\\"</body>\\\",\\\"</html>\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/finance/_ajax/ap_invoice_add_line.php\\\": [\\\"\\\",\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"require_once dirname(__DIR__,2) . '/includes/auth.php';\\\",\\\"require_once dirname(__DIR__,2) . '/includes/db.php';\\\",\\\"require_once dirname(__DIR__,2) . '/includes/rbac.php';\\\",\\\"header('Content-Type: application/json');\\\",\\\"try{\\\",\\\"  require_login(); require_permission('finance.ap.edit');\\\",\\\"  $pdo = db();\\\",\\\"  $in = json_decode(file_get_contents('php://input'), true) ?: $_POST;\\\",\\\"  $qty=(float)($in['qty'] ?? 0); $rate=(float)($in['unit_price'] ?? 0); $amt=round($qty*$rate,2);\\\",\\\"  $st=$pdo->prepare(\\\\\\\"INSERT INTO ap_invoice_lines (invoice_id,po_id,po_line_id,grn_id,grn_line_id,item_id,qty,unit_price,amount) VALUES (?,?,?,?,?,?,?,?,?)\\\\\\\");\\\",\\\"  $st->execute([(int)($in['invoice_id'] ?? 0), $in['po_id'] ?? null, $in['po_line_id'] ?? null, $in['grn_id'] ?? null, $in['grn_line_id'] ?? null, $in['item_id'] ?? null, $qty, $rate, $amt]);\\\",\\\"  $pdo->prepare(\\\\\\\"UPDATE ap_invoices SET total_amount=COALESCE(total_amount,0)+? WHERE id=?\\\\\\\")->execute([$amt, (int)($in['invoice_id'] ?? 0)]);\\\",\\\"  echo json_encode(['ok'=>true,'data'=>['invoice_line_id'=>(int)$pdo->lastInsertId(),'amount'=>$amt]]);\\\",\\\"}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/finance/_ajax/ap_invoice_match.php\\\": [\\\"\\\",\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"require_once dirname(__DIR__,2) . '/includes/auth.php';\\\",\\\"require_once dirname(__DIR__,2) . '/includes/db.php';\\\",\\\"require_once dirname(__DIR__,2) . '/includes/rbac.php';\\\",\\\"require_once dirname(__DIR__,2) . '/includes/coupler/ThreeWayMatch.php';\\\",\\\"header('Content-Type: application/json');\\\",\\\"try{\\\",\\\"  require_login(); require_permission('finance.ap.match');\\\",\\\"  $pdo = db();\\\",\\\"  $in = json_decode(file_get_contents('php://input'), true) ?: $_POST;\\\",\\\"  $svc = new \\\\\\\\Coupler\\\\\\\\ThreeWayMatch($pdo);\\\",\\\"  $res = $svc->matchInvoice((int)($in['invoice_id'] ?? 0));\\\",\\\"  echo json_encode(['ok'=>true,'data'=>$res]);\\\",\\\"}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/finance/_ajax/ap_invoice_post.php\\\": [\\\"\\\",\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"require_once dirname(__DIR__,2) . '/includes/auth.php';\\\",\\\"require_once dirname(__DIR__,2) . '/includes/db.php';\\\",\\\"require_once dirname(__DIR__,2) . '/includes/rbac.php';\\\",\\\"require_once dirname(__DIR__,2) . '/includes/coupler/ThreeWayMatch.php';\\\",\\\"header('Content-Type: application/json');\\\",\\\"try{\\\",\\\"  require_login(); require_permission('finance.ap.post');\\\",\\\"  $pdo = db();\\\",\\\"  $in = json_decode(file_get_contents('php://input'), true) ?: $_POST;\\\",\\\"  $svc = new \\\\\\\\Coupler\\\\\\\\ThreeWayMatch($pdo);\\\",\\\"  $res = $svc->postInvoice((int)($in['invoice_id'] ?? 0));\\\",\\\"  echo json_encode(['ok'=>true,'data'=>$res]);\\\",\\\"}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/finance/_ajax/ap_invoice_create.php\\\": [\\\"\\\",\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"require_once dirname(__DIR__,2) . '/includes/auth.php';\\\",\\\"require_once dirname(__DIR__,2) . '/includes/db.php';\\\",\\\"require_once dirname(__DIR__,2) . '/includes/rbac.php';\\\",\\\"header('Content-Type: application/json');\\\",\\\"try{\\\",\\\"  require_login(); require_permission('finance.ap.create');\\\",\\\"  $pdo = db();\\\",\\\"  $in = json_decode(file_get_contents('php://input'), true) ?: $_POST;\\\",\\\"  $st=$pdo->prepare(\\\\\\\"INSERT INTO ap_invoices (vendor_id,currency,fx_rate,invoice_no,invoice_date,category,notes) VALUES (?,?,?,?,?,?,?)\\\\\\\");\\\",\\\"  $st->execute([(int)($in['vendor_id'] ?? 0), (string)($in['currency'] ?? 'INR'), (float)($in['fx_rate'] ?? 1.0), (string)($in['invoice_no'] ?? ''), (string)($in['invoice_date'] ?? date('Y-m-d')), (string)($in['category'] ?? 'goods'), $in['notes'] ?? null]);\\\",\\\"  echo json_encode(['ok'=>true,'data'=>['invoice_id'=>(int)$pdo->lastInsertId()]]);\\\",\\\"}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }\\\"],\",\"\\\"/home/u989675055/domains/emsinfra.co.in/public_html/finance/ap_invoice_console.php\\\": [\\\"<?php\\\",\\\"declare(strict_types=1);\\\",\\\"require_once __DIR__ . '/../includes/auth.php';\\\",\\\"require_once __DIR__ . '/../includes/db.php';\\\",\\\"require_once __DIR__ . '/../includes/rbac.php';\\\",\\\"require_login(); require_permission('finance.ap.view');\\\",\\\"?><!doctype html><html><head><meta charset=\\\\\\\"utf-8\\\\\\\"><title>AP Invoice Console (3-Way Match)</title>\\\",\\\"<link rel=\\\\\\\"stylesheet\\\\\\\" href=\\\\\\\"../assets/ems_phase04_ui.css\\\\\\\"></head><body>\\\",\\\"<h1>AP Invoice Console (3-Way Match)</h1>\\\",\\\"<section><h2>Create Invoice</h2>\\\",\\\"<div class=\\\\\\\"row\\\\\\\"><div><label>Vendor ID</label><input id=\\\\\\\"v_id\\\\\\\" type=\\\\\\\"number\\\\\\\"></div><div><label>Invoice No</label><input id=\\\\\\\"inv_no\\\\\\\"></div>\\\",\\\"<div><label>Date</label><input id=\\\\\\\"inv_date\\\\\\\" type=\\\\\\\"date\\\\\\\"></div><div><label>Category</label><select id=\\\\\\\"inv_cat\\\\\\\"><option>goods</option><option>service</option><option>landed_cost</option></select></div></div>\\\",\\\"<div class=\\\\\\\"row\\\\\\\"><div><label>Currency</label><input id=\\\\\\\"inv_curr\\\\\\\" value=\\\\\\\"INR\\\\\\\"></div><div><label>FX Rate</label><input id=\\\\\\\"inv_fx\\\\\\\" type=\\\\\\\"number\\\\\\\" step=\\\\\\\"0.000001\\\\\\\" value=\\\\\\\"1.0\\\\\\\"></div><div><button id=\\\\\\\"btnCreateInv\\\\\\\">Create</button></div></div>\\\",\\\"<b id=\\\\\\\"invoiceId\\\\\\\"></b></section>\\\",\\\"<section><h2>Add Invoice Line</h2>\\\",\\\"<div class=\\\\\\\"row\\\\\\\"><div><label>Invoice ID</label><input id=\\\\\\\"il_inv_id\\\\\\\" type=\\\\\\\"number\\\\\\\"></div><div><label>PO Line ID</label><input id=\\\\\\\"il_po_line\\\\\\\" type=\\\\\\\"number\\\\\\\"></div>\\\",\\\"<div><label>GRN Line ID</label><input id=\\\\\\\"il_grn_line\\\\\\\" type=\\\\\\\"number\\\\\\\"></div><div><label>Item ID</label><input id=\\\\\\\"il_item\\\\\\\" type=\\\\\\\"number\\\\\\\"></div></div>\\\",\\\"<div class=\\\\\\\"row\\\\\\\"><div><label>Qty</label><input id=\\\\\\\"il_qty\\\\\\\" type=\\\\\\\"number\\\\\\\" step=\\\\\\\"0.000001\\\\\\\"></div><div><label>Unit Price</label><input id=\\\\\\\"il_rate\\\\\\\" type=\\\\\\\"number\\\\\\\" step=\\\\\\\"0.000001\\\\\\\"></div><div><button id=\\\\\\\"btnAddLine\\\\\\\">Add Line</button></div></div>\\\",\\\"<div id=\\\\\\\"ilMsg\\\\\\\"></div></section>\\\",\\\"<section><h2>Match & Post</h2>\\\",\\\"<div class=\\\\\\\"row-3\\\\\\\"><div><label>Invoice ID</label><input id=\\\\\\\"act_inv_id\\\\\\\" type=\\\\\\\"number\\\\\\\"></div><div><button id=\\\\\\\"btnMatch\\\\\\\">Run 3-Way Match</button></div><div><button id=\\\\\\\"btnPost\\\\\\\">Post</button></div></div>\\\",\\\"<div id=\\\\\\\"matchMsg\\\\\\\"></div></section>\\\",\\\"<script>\\\",\\\"async function api(u,d){const r=await fetch(u,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(d)});const j=await r.json();if(!j.ok) throw new Error(j.error||'API');return j.data;}\\\",\\\"document.getElementById('btnCreateInv').onclick=async()=>{try{const d=await api('../finance/_ajax/ap_invoice_create.php',{vendor_id:parseInt(document.getElementById('v_id').value||0),invoice_no:document.getElementById('inv_no').value,invoice_date:document.getElementById('inv_date').value,category:document.getElementById('inv_cat').value,currency:document.getElementById('inv_curr').value,fx_rate:parseFloat(document.getElementById('inv_fx').value||'1')});document.getElementById('invoiceId').textContent='Invoice #'+d.invoice_id;document.getElementById('il_inv_id').value=d.invoice_id;document.getElementById('act_inv_id').value=d.invoice_id;}catch(e){alert(e.message);}};\\\",\\\"document.getElementById('btnAddLine').onclick=async()=>{try{const d=await api('../finance/_ajax/ap_invoice_add_line.php',{invoice_id:parseInt(document.getElementById('il_inv_id').value||0),po_line_id:document.getElementById('il_po_line').value?parseInt(document.getElementById('il_po_line').value):null,grn_line_id:document.getElementById('il_grn_line').value?parseInt(document.getElementById('il_grn_line').value):null,item_id:document.getElementById('il_item').value?parseInt(document.getElementById('il_item').value):null,qty:parseFloat(document.getElementById('il_qty').value||'0'),unit_price:parseFloat(document.getElementById('il_rate').value||'0')});document.getElementById('ilMsg').textContent='Line #'+d.invoice_line_id+' amount='+d.amount;}catch(e){alert(e.message);}};\\\",\\\"document.getElementById('btnMatch').onclick=async()=>{try{const d=await api('../finance/_ajax/ap_invoice_match.php',{invoice_id:parseInt(document.getElementById('act_inv_id').value||0)});document.getElementById('matchMsg').innerHTML='OK: '+d.ok+' Tol: '+d.tolerance+' Exc: '+d.exception+' Status: <span class=\\\\\\\"badge '+(d.exception>0?'err':(d.tolerance>0?'warn':'ok'))+'\\\\\\\">'+d.status+'</span>'; }catch(e){alert(e.message);}};\\\",\\\"document.getElementById('btnPost').onclick=async()=>{try{const d=await api('../finance/_ajax/ap_invoice_post.php',{invoice_id:parseInt(document.getElementById('act_inv_id').value||0)});document.getElementById('matchMsg').textContent='Posted amount='+d.amount+' PPV='+d.ppv+' QTV='+d.qtv;}catch(e){alert(e.message);}};\\\",\\\"</script></body></html>\\\"],\""],
"/home/u989675055/domains/emsinfra.co.in/public_html/grn/ownership_console.php": ["","<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","require_login(); require_permission('grn.ownership.edit');","$pdo=db(); $msg=null;","if($_SERVER['REQUEST_METHOD']==='POST'){","  $id=intval($_POST['grn_item_id']??0);","  $owner=$_POST['owner']??'company';","  $client_id=$_POST['client_id']!==''?intval($_POST['client_id']):null;","  $st=$pdo->prepare(\"UPDATE grn_items SET owner=?, client_id=? WHERE id=?\");","  $st->execute([$owner,$client_id,$id]);","  $msg=\"Updated GRN item #$id\";","}","$rows=$pdo->query(\"SELECT gi.id, g.grn_no, g.grn_date, gi.item_id, COALESCE(gi.qty_accepted, gi.qty_received, gi.qty) qty, COALESCE(gi.unit_price, gi.rate, gi.basic_rate) rate, COALESCE(gi.owner,'company') owner, gi.client_id FROM grn_items gi JOIN grn g ON g.id=gi.grn_id ORDER BY g.grn_date DESC, gi.id DESC LIMIT 200\")->fetchAll(PDO::FETCH_ASSOC);","?><!doctype html><html><head><meta charset=\"utf-8\"><title>GRN Ownership Console</title>","<style>body{font-family:system-ui,Segoe UI,Roboto,Arial,sans-serif;margin:20px}table{border-collapse:collapse;width:100%}th,td{border:1px solid #e5e7eb;padding:6px}</style></head><body>","<h1>GRN Ownership Console</h1>","<?php if($msg) echo \"<p><b>\".htmlspecialchars($msg).\"</b></p>\"; ?>","<table><thead><tr><th>ID</th><th>GRN</th><th>Date</th><th>Item</th><th>Qty</th><th>Rate</th><th>Owner</th><th>Client</th><th>Update</th></tr></thead><tbody>","<?php foreach($rows as $r): ?>","<tr>","<td><?= $r['id'] ?></td><td><?= htmlspecialchars($r['grn_no']) ?></td><td><?= htmlspecialchars($r['grn_date']) ?></td>","<td><?= $r['item_id'] ?></td><td><?= (float)$r['qty'] ?></td><td><?= (float)$r['rate'] ?></td>","<td>","  <form method=\"post\" style=\"display:flex;gap:6px;align-items:center\">","    <input type=\"hidden\" name=\"grn_item_id\" value=\"<?= $r['id'] ?>\">","    <select name=\"owner\">","      <option value=\"company\" <?= ($r['owner']=='company'?'selected':'') ?>>Company</option>","      <option value=\"client\"  <?= ($r['owner']=='client'?'selected':'')  ?>>Client</option>","    </select>","</td>","<td><input name=\"client_id\" type=\"number\" value=\"<?= htmlspecialchars((string)$r['client_id']) ?>\"></td>","<td><button>Save</button></td></form>","</tr>","<?php endforeach; ?>","</tbody></table>","</body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/workorders/pwo_list.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/workorders/pwo_list.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","if (function_exists('require_login')) require_login();","if (function_exists('require_permission')) @require_permission('workorders.view');","","$pdo = db();","$pdo->query(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","$pdo->query(\"SET collation_connection = 'utf8mb4_general_ci'\");","","$q    = trim($_GET['q'] ?? '');","$wc   = (int)($_GET['work_center_id'] ?? 0);","$st   = trim($_GET['status'] ?? '');","$asn  = trim($_GET['assign_type'] ?? '');","$cont = (int)($_GET['contractor_id'] ?? 0);","$bomid= (int)($_GET['bom_id'] ?? 0);","$ok   = $_GET['ok'] ?? '';","","$where = \"1=1\";","$params = [];","if ($q !== '') {","  $where .= \" AND (pwo.id = ? OR ro.id = ? OR bc.id = ? OR p.code LIKE CONCAT('%',?,'%') OR p.name LIKE CONCAT('%',?,'%'))\";","  $intQ = (int)$q;","  $params[] = $intQ; $params[] = $intQ; $params[] = $intQ; $params[] = $q; $params[] = $q;","}","if ($wc>0) { $where .= \" AND pwo.work_center_id = ?\"; $params[] = $wc; }","if ($st!=='') { $where .= \" AND pwo.status = ?\"; $params[] = $st; }","if ($asn!=='') { $where .= \" AND pwo.assign_type = ?\"; $params[] = $asn; }","if ($cont>0) { $where .= \" AND COALESCE(pwo.contractor_id,0) = ?\"; $params[] = $cont; }","if ($bomid>0){ $where .= \" AND b.id = ?\"; $params[] = $bomid; }","","$sql = \"SELECT","          pwo.id, pwo.routing_op_id, pwo.bom_component_id, pwo.process_id, pwo.work_center_id,","          COALESCE(pwo.planned_prod_qty, pwo.planned_qty) AS planned_qty,","          pwo.planned_comm_qty,","          pwo.prod_uom_id, pwo.comm_uom_id,","          pwo.plan_start_date, pwo.plan_end_date, pwo.assign_type, pwo.contractor_id, pwo.status, pwo.remarks,","          p.code AS pcode, p.name AS pname, wc.code AS wccode,","          pr.code AS prod_uom_code, cr.code AS comm_uom_code,","          b.id AS bom_id, b.bom_no,","          COALESCE(SUM(d.qty_done),0) AS qty_done,","          COALESCE(SUM(d.comm_qty),0) AS comm_done,","          par.name AS contractor_name, par.code AS contractor_code","        FROM process_work_orders pwo","        JOIN processes p ON p.id=pwo.process_id","        LEFT JOIN work_centers wc ON wc.id=pwo.work_center_id","        LEFT JOIN dpr_process_logs d ON d.pwo_id=pwo.id","        LEFT JOIN routing_ops ro ON ro.id = pwo.routing_op_id","        LEFT JOIN bom_components bc ON bc.id = pwo.bom_component_id","        LEFT JOIN bom b ON b.id = (SELECT bom_id FROM bom_components WHERE id = pwo.bom_component_id)","        LEFT JOIN uom pr ON pr.id = pwo.prod_uom_id","        LEFT JOIN uom cr ON cr.id = pwo.comm_uom_id","        LEFT JOIN parties par ON par.id = pwo.contractor_id AND par.type='contractor'","        WHERE $where","        GROUP BY pwo.id","        ORDER BY pwo.id DESC","        LIMIT 800\";","$stmt=$pdo->prepare($sql); $stmt->execute($params); $rows=$stmt->fetchAll(PDO::FETCH_ASSOC) ?: [];","","$wcs =$pdo->query(\"SELECT id, CONCAT(code,' \u2014 ',name) label FROM work_centers WHERE active=1 ORDER BY code\")->fetchAll(PDO::FETCH_ASSOC);","$boms=$pdo->query(\"SELECT id, bom_no FROM bom ORDER BY id DESC LIMIT 500\")->fetchAll(PDO::FETCH_ASSOC);","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container-fluid py-3\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h1 class=\"h4 mb-0\">PWO List</h1>","    <div class=\"btn-group\">","      <a href=\"pwo_form.php\" class=\"btn btn-primary\">Create / Generate</a>","    </div>","  </div>","","  <?php if ($ok): ?><div class=\"alert alert-success\"><?=htmlspecialchars($ok)?></div><?php endif; ?>","","  <form class=\"row g-2 mb-3\">","    <div class=\"col-md-2\"><input name=\"q\" value=\"<?=htmlspecialchars($q)?>\" class=\"form-control\" placeholder=\"PWO/RO/Comp/Process\"></div>","    <div class=\"col-md-3\">","      <select name=\"work_center_id\" class=\"form-select\">","        <option value=\"0\">All Work Centers</option>","        <?php foreach($wcs as $c): ?>","          <option value=\"<?=$c['id']?>\" <?= $wc===$c['id']?'selected':''?>><?=htmlspecialchars($c['label'])?></option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-md-3\">","      <select name=\"bom_id\" class=\"form-select\">","        <option value=\"0\">All BOMs</option>","        <?php foreach($boms as $b): ?>","          <option value=\"<?=$b['id']?>\" <?= $bomid===$b['id']?'selected':''?>><?=htmlspecialchars($b['bom_no'].' (#'.$b['id'].')')?></option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-md-2\">","      <select name=\"assign_type\" class=\"form-select\">","        <option value=\"\">All Assignments</option>","        <option value=\"company\" <?= $asn==='company'?'selected':''?>>Company</option>","        <option value=\"contractor\" <?= $asn==='contractor'?'selected':''?>>Contractor</option>","      </select>","    </div>","    <div class=\"col-md-2\"><input name=\"contractor_id\" type=\"number\" value=\"<?= $cont ?: '' ?>\" class=\"form-control\" placeholder=\"Contractor ID\"></div>","    <div class=\"col-md-2\">","      <select name=\"status\" class=\"form-select\">","        <option value=\"\">All Status</option>","        <?php foreach(['planned','in_progress','hold','completed','closed'] as $s): ?>","          <option <?= $st===$s?'selected':''?>><?=$s?></option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-md-2\"><button class=\"btn btn-outline-secondary w-100\">Filter</button></div>","  </form>","","  <div class=\"table-responsive\">","    <table class=\"table table-striped align-middle\">","      <thead class=\"table-light\">","        <tr>","          <th>PWO</th><th>BOM</th><th>Process</th><th>WC</th>","          <th class=\"text-end\">Plan (Prod)</th><th class=\"text-end\">Done (Prod)</th>","          <th class=\"text-end\">Plan (Comm)</th><th class=\"text-end\">Done (Comm)</th>","          <th>Status</th><th>Assign</th><th>Plan Window</th><th class=\"text-end\">Actions</th>","        </tr>","      </thead>","      <tbody>","      <?php foreach($rows as $r):","        $planProd = (float)$r['planned_qty'];","        $doneProd = (float)$r['qty_done'];","        $planComm = (float)($r['planned_comm_qty'] ?? 0);","        $doneComm = (float)($r['comm_done'] ?? 0);","        $pct = $planProd>0 ? min(100, round($doneProd/$planProd*100,1)) : ($doneProd>0?100:0);","        $assign = $r['assign_type']==='contractor'","                  ? (($r['contractor_name'] ?: $r['contractor_code'] ?: ('Contractor #'.(int)$r['contractor_id'])))","                  : 'Company';","        $prodU = $r['prod_uom_code'] ? ' '.$r['prod_uom_code'] : '';","        $commU = $r['comm_uom_code'] ? ' '.$r['comm_uom_code'] : '';","      ?>","        <tr>","          <td><?=$r['id']?></td>","          <td><?=htmlspecialchars($r['bom_no'] ?? '\u2014')?></td>","          <td><?=htmlspecialchars($r['pcode'].' \u2014 '.$r['pname'])?></td>","          <td><?=htmlspecialchars($r['wccode'] ?? '\u2014')?></td>","          <td class=\"text-end\"><?=number_format($planProd,3).$prodU?></td>","          <td class=\"text-end\"><?=number_format($doneProd,3).$prodU?> <small class=\"text-muted\">(<?=$pct?>%)</small></td>","          <td class=\"text-end\"><?= $planComm>0 ? number_format($planComm,3).$commU : '\u2014' ?></td>","          <td class=\"text-end\"><?= $doneComm>0 ? number_format($doneComm,3).$commU : '\u2014' ?></td>","          <td><span class=\"badge bg-secondary\"><?=htmlspecialchars($r['status'])?></span></td>","          <td><?=htmlspecialchars($assign)?></td>","          <td class=\"text-nowrap\"><?=htmlspecialchars(($r['plan_start_date']??'').' \u2192 '.($r['plan_end_date']??''))?></td>","          <td class=\"text-end\">","            <a href=\"pwo_edit.php?id=<?=$r['id']?>\" class=\"btn btn-sm btn-outline-primary\">Edit</a>","            <form action=\"pwo_delete.php\" method=\"post\" class=\"d-inline\" onsubmit=\"return confirm('Delete this PWO? This does not delete DPR logs.');\">","              <input type=\"hidden\" name=\"id\" value=\"<?=$r['id']?>\">","              <button class=\"btn btn-sm btn-outline-danger\">Delete</button>","            </form>","          </td>","        </tr>","      <?php endforeach; if(!$rows): ?>","        <tr><td colspan=\"12\" class=\"text-center text-muted py-4\">No PWOs found.</td></tr>","      <?php endif; ?>","      </tbody>","    </table>","  </div>","</div>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/workorders/pwo_list_quick_actions.php": ["<?php","/** PATH: /public_html/workorders/pwo_list_quick_actions.php */","declare(strict_types=1);","$ROOT = dirname(__DIR__);","require_once $ROOT . '/includes/auth.php';","require_once $ROOT . '/includes/db.php';","require_once $ROOT . '/includes/rbac.php';","require_once $ROOT . '/includes/csrf.php';","require_once $ROOT . '/includes/services/WorkOrderService.php';","","require_login();","require_permission('workorders.manage');","csrf_require_token();","","$pdo = db();","","$action = $_GET['action'] ?? '';","if ($action === 'set_status') {","    $id = (int)($_GET['id'] ?? 0);","    $status = $_GET['status'] ?? '';","    try {","        WorkOrderService::setStatus($pdo, $id, $status);","        $_SESSION['flash'] = ['type'=>'success','msg'=>\"PWO #{$id} set to {$status}.\"];","    } catch (Throwable $e) {","        $_SESSION['flash'] = ['type'=>'danger','msg'=>$e->getMessage()];","    }","    redirect('/workorders/pwo_list.php');","    exit;","}","","http_response_code(400);","echo \"Unknown action\";"],
"/home/u989675055/domains/emsinfra.co.in/public_html/workorders/pwo_delete.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/workorders/pwo_delete.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","if (function_exists('require_login')) require_login();","if (function_exists('require_permission')) @require_permission('workorders.manage');","","$pdo = db();","$pdo->query(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","$pdo->query(\"SET collation_connection = 'utf8mb4_general_ci'\");","","$id = (int)($_POST['id'] ?? 0);","","if ($id > 0) {","  // Prevent deleting PWOs that already have DPR logs \u2014 safer default","  $chk = $pdo->prepare(\"SELECT COUNT(*) FROM dpr_process_logs WHERE pwo_id=?\");","  $chk->execute([$id]);","  $has = (int)$chk->fetchColumn();","","  if ($has > 0) {","    header('Location: pwo_list.php?ok='.urlencode('Cannot delete: DPR exists. Close it instead.')); exit;","  }","","  $del = $pdo->prepare(\"DELETE FROM process_work_orders WHERE id=?\");","  $del->execute([$id]);","  header('Location: pwo_list.php?ok='.urlencode('PWO deleted')); exit;","}","header('Location: pwo_list.php?ok='.urlencode('Nothing to delete'));"],
"/home/u989675055/domains/emsinfra.co.in/public_html/workorders/pwo_form.php": ["<?php","/** PATH: /public_html/workorders/pwo_form.php"," * Uses bom_components.part_id + bom_components.description"," */","declare(strict_types=1);","","$ROOT = dirname(__DIR__);","require_once $ROOT . '/includes/auth.php';","require_once $ROOT . '/includes/db.php';","require_once $ROOT . '/includes/rbac.php';","require_once $ROOT . '/includes/csrf.php';","require_once $ROOT . '/includes/helpers.php';","require_once $ROOT . '/includes/services/WorkOrderService.php';","","/* ---- Safe fallbacks ---- */","if (!function_exists('e')) { function e($v): string { return htmlspecialchars((string)$v, ENT_QUOTES|ENT_SUBSTITUTE,'UTF-8'); } }","if (!function_exists('redirect')) { function redirect(string $url): void { header('Location: '.$url); exit; } }","if (!function_exists('csrf_hidden_input')) {","  function csrf_hidden_input(): string { $t=function_exists('csrf_token')?csrf_token():''; return '<input type=\"hidden\" name=\"csrf\" value=\"'.e($t).'\">'; }","}","if (!function_exists('csrf_require_token')) {","  function csrf_require_token(): void {","    if (($_SERVER['REQUEST_METHOD'] ?? 'GET') === 'POST') {","      $tok = $_POST['csrf'] ?? '';","      if (function_exists('csrf_token') && $tok !== csrf_token()) { http_response_code(400); echo 'Invalid CSRF token.'; exit; }","    }","  }","}","","require_login();","require_permission('workorders.manage');","","$pdo = db();","$UI_PATH     = $ROOT . '/ui';","$PAGE_TITLE  = 'Generate Process Work Orders';","$ACTIVE_MENU = 'production.pwo';","","require_once $UI_PATH . '/init.php';","require_once $UI_PATH . '/layout_start.php';","","$flash = $_SESSION['flash'] ?? null; unset($_SESSION['flash']);","","// Dropdown helpers","function fetch_boms(PDO $pdo): array {","  $sql = \"SELECT b.id,","                 b.bom_no,","                 p.name AS project_name,","                 prt.name AS client_name","            FROM bom b","       LEFT JOIN projects p   ON p.id = b.project_id","       LEFT JOIN parties  prt ON prt.id = p.client_party_id","        ORDER BY b.id DESC","           LIMIT 200\";","  return $pdo->query($sql)->fetchAll(PDO::FETCH_ASSOC);","}","function fetch_components(PDO $pdo, int $bom_id): array {","  $st = $pdo->prepare(\"SELECT id, part_id, description FROM bom_components WHERE bom_id=:b ORDER BY id ASC\");","  $st->execute([':b'=>$bom_id]);","  return $st->fetchAll(PDO::FETCH_ASSOC);","}","function fetch_contractors(PDO $pdo): array {","  $sql = \"SELECT id, name FROM parties WHERE type='contractor' AND status=1 AND deleted_at IS NULL ORDER BY name\";","  return $pdo->query($sql)->fetchAll(PDO::FETCH_ASSOC);","}","","$errors = [];","$result = null;","","if (($_SERVER['REQUEST_METHOD'] ?? 'GET') === 'POST' && ($_POST['do'] ?? '') === 'generate') {","  csrf_require_token();","  $bom_id       = (int)($_POST['bom_id'] ?? 0);","  $component_id = (int)($_POST['component_id'] ?? 0) ?: null;","  $assign_type  = $_POST['assign_type'] ?? 'company';","  $contractor_id= $assign_type === 'contractor' ? (int)($_POST['contractor_id'] ?? 0) ?: null : null;","  $plan_start   = trim((string)($_POST['plan_start_date'] ?? ''));","  $plan_end     = trim((string)($_POST['plan_end_date'] ?? ''));","","  if ($bom_id <= 0) $errors[] = \"Select a BOM.\";","  if ($assign_type === 'contractor' && !$contractor_id) $errors[] = \"Select a contractor for contractor assignment.\";","  if ($plan_start !== '' && !preg_match('/^\\d{4}-\\d{2}-\\d{2}$/', $plan_start)) $errors[] = \"Plan Start must be YYYY-MM-DD.\";","  if ($plan_end !== ''   && !preg_match('/^\\d{4}-\\d{2}-\\d{2}$/', $plan_end))   $errors[] = \"Plan End must be YYYY-MM-DD.\";","  if (!$errors) {","      try {","          $overrides = [","            'assign_type'     => $assign_type,","            'contractor_id'   => $contractor_id,","            'plan_start_date' => $plan_start ?: null,","            'plan_end_date'   => $plan_end   ?: null,","          ];","          $result = WorkOrderService::bulkGenerateForBom($pdo, $bom_id, $component_id, $overrides);","          $_SESSION['flash'] = [","            'type' => 'success',","            'msg'  => \"PWOs generated. Created: {$result['created']}, Skipped: {$result['skipped']}.\"","          ];","          redirect('/workorders/pwo_form.php?bom_id='.$bom_id.($component_id?('&component_id='.$component_id):''));","      } catch (Throwable $e) {","          $errors[] = $e->getMessage();","      }","  }","}","","$bom_id = (int)($_GET['bom_id'] ?? 0);","$component_id_get = (int)($_GET['component_id'] ?? 0);","$components  = $bom_id ? fetch_components($pdo, $bom_id) : [];","$contractors = fetch_contractors($pdo);","$boms = fetch_boms($pdo);","?>","<div class=\"container my-3\">","  <h1 class=\"h3\"><?= e($PAGE_TITLE) ?></h1>","  <?php if (!empty($flash)): ?>","    <div class=\"alert alert-<?= e($flash['type']) ?>\"><?= e($flash['msg']) ?></div>","  <?php endif; ?>","  <?php if ($errors): ?>","    <div class=\"alert alert-danger\">","      <ul class=\"mb-0\">","        <?php foreach ($errors as $er): ?><li><?= e($er) ?></li><?php endforeach; ?>","      </ul>","    </div>","  <?php endif; ?>","","  <form method=\"post\" class=\"card p-3\">","    <?= csrf_hidden_input() ?>","","    <div class=\"row g-3\">","      <div class=\"col-md-5\">","        <label class=\"form-label\">BOM</label>","        <select name=\"bom_id\" id=\"bom_id\" class=\"form-select\" required","                onchange=\"window.location='?bom_id='+encodeURIComponent(this.value)\">","          <option value=\"\">\u2014 Select BOM \u2014</option>","          <?php foreach ($boms as $b): ?>","            <option value=\"<?= (int)$b['id'] ?>\" <?= $bom_id===(int)$b['id']?'selected':'' ?>>","              <?= e('#'.$b['id'].' '.$b['bom_no'].' \u2014 '.$b['project_name'].' / '.$b['client_name']) ?>","            </option>","          <?php endforeach; ?>","        </select>","      </div>","","      <div class=\"col-md-4\">","        <label class=\"form-label\">Component (optional)</label>","        <select name=\"component_id\" class=\"form-select\"","                onchange=\"window.location='?bom_id=<?= (int)$bom_id ?>&component_id='+encodeURIComponent(this.value)\">","          <option value=\"\">\u2014 All components \u2014</option>","          <?php foreach ($components as $c): ?>","            <option value=\"<?= (int)$c['id'] ?>\" <?= $component_id_get===(int)$c['id']?'selected':'' ?>>","              <?= e(($c['part_id'] ?: ('#'.$c['id'])) .' \u2014 '. $c['description']) ?>","            </option>","          <?php endforeach; ?>","        </select>","      </div>","","      <div class=\"col-md-3\">","        <label class=\"form-label\">Assignment</label>","        <select name=\"assign_type\" class=\"form-select\" required id=\"assign_type\" onchange=\"toggleContractor()\">","          <option value=\"company\">Company</option>","          <option value=\"contractor\" <?= (($_POST['assign_type'] ?? '')==='contractor')?'selected':'' ?>>Contractor</option>","        </select>","      </div>","","      <div class=\"col-md-4\" id=\"contractor_wrap\" style=\"display:none;\">","        <label class=\"form-label\">Contractor</label>","        <select name=\"contractor_id\" class=\"form-select\">","          <option value=\"\">\u2014 Select contractor \u2014</option>","          <?php foreach ($contractors as $ct): ?>","            <option value=\"<?= (int)$ct['id'] ?>\"><?= e($ct['name']) ?></option>","          <?php endforeach; ?>","        </select>","      </div>","","      <div class=\"col-md-4\">","        <label class=\"form-label\">Plan Start (YYYY-MM-DD)</label>","        <input type=\"text\" name=\"plan_start_date\" class=\"form-control\" placeholder=\"2025-10-05\">","      </div>","      <div class=\"col-md-4\">","        <label class=\"form-label\">Plan End (YYYY-MM-DD)</label>","        <input type=\"text\" name=\"plan_end_date\" class=\"form-control\" placeholder=\"2025-10-12\">","      </div>","    </div>","","    <div class=\"mt-3 d-flex gap-2\">","      <button class=\"btn btn-primary\" type=\"submit\" name=\"do\" value=\"generate\">Generate PWOs</button>","      <a class=\"btn btn-outline-secondary\" href=\"/workorders/pwo_list.php\">Go to PWO list</a>","    </div>","  </form>","</div>","","<script>","function toggleContractor(){","  var at = document.getElementById('assign_type').value;","  document.getElementById('contractor_wrap').style.display = (at==='contractor')?'block':'none';","}","toggleContractor();","</script>","","<?php require_once $UI_PATH . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/workorders/pwo_edit.php": ["<?php","/** PATH: /public_html/workorders/pwo_edit.php"," * Conflict-free: helper functions are prefixed (pwo_get_*), no redeclare risk."," * Also fixes machine label concatenation."," */","declare(strict_types=1);","","$ROOT = dirname(__DIR__);","require_once $ROOT . '/includes/auth.php';","require_once $ROOT . '/includes/db.php';","require_once $ROOT . '/includes/rbac.php';","require_once $ROOT . '/includes/csrf.php';","require_once $ROOT . '/includes/helpers.php';","","/* ---- Polyfills ---- */","if (!function_exists('e')) { function e($v): string { return htmlspecialchars((string)$v, ENT_QUOTES|ENT_SUBSTITUTE,'UTF-8'); } }","if (!function_exists('redirect')) { function redirect(string $url): void { header('Location: '.$url); exit; } }","if (!function_exists('csrf_hidden_input')) {","  function csrf_hidden_input(): string { $t=function_exists('csrf_token')?csrf_token():''; return '<input type=\"hidden\" name=\"csrf\" value=\"'.e($t).'\">'; }","}","if (!function_exists('csrf_require_token')) {","  function csrf_require_token(): void {","    if (($_SERVER['REQUEST_METHOD'] ?? 'GET') === 'POST') {","      $tok = $_POST['csrf'] ?? '';","      if (function_exists('csrf_token') && $tok !== csrf_token()) { http_response_code(400); echo 'Invalid CSRF token.'; exit; }","    }","  }","}","","require_login();","require_permission('workorders.manage');","$pdo = db();","","$id = (int)($_GET['id'] ?? 0);","if ($id <= 0) { http_response_code(404); echo \"Missing id\"; exit; }","","$UI_PATH     = $ROOT . '/ui';","$PAGE_TITLE  = 'Edit PWO #'.$id;","$ACTIVE_MENU = 'production.pwo';","","// actions","$errors = [];","$flash = $_SESSION['flash'] ?? null; unset($_SESSION['flash']);","if (($_SERVER['REQUEST_METHOD'] ?? 'GET') === 'POST') {","  csrf_require_token();","  $action = $_POST['action'] ?? '';","  try {","    if ($action === 'save_details') {","      $assign_type   = $_POST['assign_type'] ?? 'company';","      $contractor_id = $assign_type==='contractor' ? ((int)($_POST['contractor_id'] ?? 0) ?: null) : null;","      $work_center_id= (int)($_POST['work_center_id'] ?? 0) ?: null;","      $status        = $_POST['status'] ?? 'planned';","      $plan_start    = trim((string)($_POST['plan_start_date'] ?? '')) ?: null;","      $plan_end      = trim((string)($_POST['plan_end_date'] ?? '')) ?: null;","      $planned_qty   = (float)($_POST['planned_qty'] ?? 0);","      $planned_prod_qty = (float)($_POST['planned_prod_qty'] ?? 0);","      $sql = \"UPDATE process_work_orders","                 SET assign_type=:at, contractor_id=:ct, work_center_id=:wc,","                     status=:st, plan_start_date=:ps, plan_end_date=:pe,","                     planned_qty=:pq, planned_prod_qty=:ppq","               WHERE id=:id\";","      $st = $pdo->prepare($sql);","      $st->execute([","        ':at'=>$assign_type, ':ct'=>$contractor_id, ':wc'=>$work_center_id,","        ':st'=>$status, ':ps'=>$plan_start, ':pe'=>$plan_end,","        ':pq'=>$planned_qty, ':ppq'=>$planned_prod_qty, ':id'=>$id","      ]);","      $_SESSION['flash'] = ['type'=>'success','msg'=>'PWO updated.'];","      redirect('/workorders/pwo_edit.php?id='.$id);","    }","    if ($action === 'add_resource') {","      $machine_id = (int)($_POST['machine_id'] ?? 0) ?: null;","      $headcount  = (int)($_POST['headcount'] ?? 0) ?: null;","      $notes      = trim((string)($_POST['notes'] ?? '')) ?: null;","      $sql = \"INSERT INTO pwo_resources (pwo_id, machine_id, headcount, notes) VALUES (:p, :m, :h, :n)\";","      $st = $pdo->prepare($sql);","      $st->execute([':p'=>$id, ':m'=>$machine_id, ':h'=>$headcount, ':n'=>$notes]);","      $_SESSION['flash'] = ['type'=>'success','msg'=>'Resource added.'];","      redirect('/workorders/pwo_edit.php?id='.$id.'#resources');","    }","    if ($action === 'delete_resource') {","      $rid = (int)($_POST['rid'] ?? 0);","      $st = $pdo->prepare(\"DELETE FROM pwo_resources WHERE id=:r AND pwo_id=:p\");","      $st->execute([':r'=>$rid, ':p'=>$id]);","      $_SESSION['flash'] = ['type'=>'success','msg'=>'Resource removed.'];","      redirect('/workorders/pwo_edit.php?id='.$id.'#resources');","    }","  } catch (Throwable $e) {","    $errors[] = $e->getMessage();","  }","}","","// load data (prefixed names to avoid collision)","if (!function_exists('pwo_get_pwo')) {","  function pwo_get_pwo(PDO $pdo, int $id): array {","    $sql = \"SELECT pwo.*,","                   pr.name AS process_name,","                   bc.part_id, bc.description AS comp_desc","              FROM process_work_orders pwo","        INNER JOIN processes pr ON pr.id = pwo.process_id","        INNER JOIN bom_components bc ON bc.id = pwo.bom_component_id","             WHERE pwo.id = :id\";","    $st = $pdo->prepare($sql);","    $st->execute([':id'=>$id]);","    $row = $st->fetch(PDO::FETCH_ASSOC);","    if (!$row) { http_response_code(404); echo \"PWO not found\"; exit; }","    return $row;","  }","}","if (!function_exists('pwo_get_work_centers')) {","  function pwo_get_work_centers(PDO $pdo): array {","    return $pdo->query(\"SELECT id, code, name FROM work_centers WHERE active=1 ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","  }","}","if (!function_exists('pwo_get_contractors')) {","  function pwo_get_contractors(PDO $pdo): array {","    return $pdo->query(\"SELECT id, name FROM parties WHERE type='contractor' AND status=1 AND deleted_at IS NULL ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","  }","}","if (!function_exists('pwo_get_machines')) {","  function pwo_get_machines(PDO $pdo): array {","    return $pdo->query(\"SELECT id, machine_id, name FROM machines ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","  }","}","if (!function_exists('pwo_get_resources')) {","  function pwo_get_resources(PDO $pdo, int $pwo_id): array {","    $st = $pdo->prepare(\"SELECT r.id, r.machine_id, r.headcount, r.notes, m.name AS machine_name","                           FROM pwo_resources r","                      LEFT JOIN machines m ON m.id = r.machine_id","                          WHERE r.pwo_id = :p\");","    $st->execute([':p'=>$pwo_id]);","    return $st->fetchAll(PDO::FETCH_ASSOC);","  }","}","","$pwo = pwo_get_pwo($pdo, $id);","$wcs = pwo_get_work_centers($pdo);","$cts = pwo_get_contractors($pdo);","$mcs = pwo_get_machines($pdo);","$res = pwo_get_resources($pdo, $id);","","require_once $UI_PATH . '/init.php';","require_once $UI_PATH . '/layout_start.php';","?>","<div class=\"container my-3\">","  <h1 class=\"h3\"><?= e($PAGE_TITLE) ?></h1>","","  <?php if (!empty($flash)): ?>","    <div class=\"alert alert-<?= e($flash['type']) ?>\"><?= e($flash['msg']) ?></div>","  <?php endif; ?>","  <?php if ($errors): ?>","    <div class=\"alert alert-danger\">","      <ul class=\"mb-0\"><?php foreach ($errors as $er): ?><li><?= e($er) ?></li><?php endforeach; ?></ul>","    </div>","  <?php endif; ?>","","  <div class=\"card\">","    <div class=\"card-body\">","      <form method=\"post\">","        <?= csrf_hidden_input() ?>","        <input type=\"hidden\" name=\"action\" value=\"save_details\">","","        <div class=\"row g-3\">","          <div class=\"col-md-5\">","            <label class=\"form-label\">Component</label>","            <div class=\"form-control-plaintext\"><?= e(($pwo['part_id'] ?: ('#'.$pwo['bom_component_id'])).' \u2014 '.$pwo['comp_desc']) ?></div>","          </div>","          <div class=\"col-md-3\">","            <label class=\"form-label\">Process</label>","            <div class=\"form-control-plaintext\"><?= e($pwo['process_name']) ?></div>","          </div>","          <div class=\"col-md-3\">","            <label class=\"form-label\">Work Center</label>","            <select name=\"work_center_id\" class=\"form-select\">","              <option value=\"\">\u2014 None \u2014</option>","              <?php foreach ($wcs as $wc): ?>","                <option value=\"<?= (int)$wc['id'] ?>\" <?= ((int)$pwo['work_center_id']===(int)$wc['id'])?'selected':'' ?>>","                  <?= e($wc['code'].' \u2014 '.$wc['name']) ?>","                </option>","              <?php endforeach; ?>","            </select>","          </div>","          <div class=\"col-md-2\">","            <label class=\"form-label\">Status</label>","            <?php $st = (string)$pwo['status']; ?>","            <select name=\"status\" class=\"form-select\">","              <?php foreach (['planned','in_progress','hold','completed','closed'] as $s): ?>","                <option value=\"<?= e($s) ?>\" <?= $st===$s?'selected':'' ?>><?= e(ucwords(str_replace('_',' ',$s))) ?></option>","              <?php endforeach; ?>","            </select>","          </div>","","          <div class=\"col-md-3\">","            <label class=\"form-label\">Assignment</label>","            <?php $at = (string)$pwo['assign_type']; ?>","            <select name=\"assign_type\" class=\"form-select\" id=\"assign_type\" onchange=\"toggleContractor()\">","              <option value=\"company\" <?= $at==='company'?'selected':'' ?>>Company</option>","              <option value=\"contractor\" <?= $at==='contractor'?'selected':'' ?>>Contractor</option>","            </select>","          </div>","          <div class=\"col-md-3\" id=\"contractor_wrap\" style=\"display:none;\">","            <label class=\"form-label\">Contractor</label>","            <select name=\"contractor_id\" class=\"form-select\">","              <option value=\"\">\u2014 Select contractor \u2014</option>","              <?php foreach ($cts as $ct): ?>","                <option value=\"<?= (int)$ct['id'] ?>\" <?= ((int)$pwo['contractor_id']===(int)$ct['id'])?'selected':'' ?>>","                  <?= e($ct['name']) ?>","                </option>","              <?php endforeach; ?>","            </select>","          </div>","","          <div class=\"col-md-3\">","            <label class=\"form-label\">Plan Start</label>","            <input type=\"text\" name=\"plan_start_date\" class=\"form-control\" value=\"<?= e($pwo['plan_start_date']) ?>\">","          </div>","          <div class=\"col-md-3\">","            <label class=\"form-label\">Plan End</label>","            <input type=\"text\" name=\"plan_end_date\" class=\"form-control\" value=\"<?= e($pwo['plan_end_date']) ?>\">","          </div>","","          <div class=\"col-md-3\">","            <label class=\"form-label\">Planned Qty</label>","            <input type=\"number\" step=\"0.000001\" name=\"planned_qty\" class=\"form-control\" value=\"<?= e($pwo['planned_qty']) ?>\">","          </div>","          <div class=\"col-md-3\">","            <label class=\"form-label\">Planned Prod Qty</label>","            <input type=\"number\" step=\"0.000001\" name=\"planned_prod_qty\" class=\"form-control\" value=\"<?= e($pwo['planned_prod_qty']) ?>\">","          </div>","        </div>","","        <div class=\"mt-3\">","          <button class=\"btn btn-primary\">Save</button>","          <a class=\"btn btn-outline-secondary\" href=\"/workorders/pwo_list.php\">Back</a>","        </div>","      </form>","    </div>","  </div>","","  <a name=\"resources\"></a>","  <div class=\"card mt-4\">","    <div class=\"card-header\">Resources</div>","    <div class=\"card-body\">","      <form method=\"post\" class=\"row g-2 align-items-end\">","        <?= csrf_hidden_input() ?>","        <input type=\"hidden\" name=\"action\" value=\"add_resource\">","        <div class=\"col-md-5\">","          <label class=\"form-label\">Machine</label>","          <select name=\"machine_id\" class=\"form-select\">","            <option value=\"\">\u2014 Select machine \u2014</option>","            <?php foreach ($mcs as $m): ?>","              <option value=\"<?= (int)$m['id'] ?>\"><?= e($m['machine_id'].' \u2014 '.$m['name']) ?></option>","            <?php endforeach; ?>","          </select>","        </div>","        <div class=\"col-md-2\">","          <label class=\"form-label\">Headcount</label>","          <input type=\"number\" name=\"headcount\" class=\"form-control\" min=\"0\">","        </div>","        <div class=\"col-md-4\">","          <label class=\"form-label\">Notes</label>","          <input type=\"text\" name=\"notes\" class=\"form-control\">","        </div>","        <div class=\"col-md-1\">","          <button class=\"btn btn-success w-100\">Add</button>","        </div>","      </form>","","      <div class=\"table-responsive mt-3\">","        <table class=\"table table-sm table-bordered\">","          <thead><tr><th>#</th><th>Machine</th><th>Headcount</th><th>Notes</th><th></th></tr></thead>","          <tbody>","            <?php foreach ($res as $r): ?>","              <tr>","                <td><?= (int)$r['id'] ?></td>","                <td><?= e($r['machine_name'] ?: ('#'.$r['machine_id'])) ?></td>","                <td><?= e($r['headcount']) ?></td>","                <td><?= e($r['notes']) ?></td>","                <td>","                  <form method=\"post\" onsubmit=\"return confirm('Remove this resource?')\" style=\"display:inline;\">","                    <?= csrf_hidden_input() ?>","                    <input type=\"hidden\" name=\"action\" value=\"delete_resource\">","                    <input type=\"hidden\" name=\"rid\" value=\"<?= (int)$r['id'] ?>\">","                    <button class=\"btn btn-sm btn-outline-danger\">Delete</button>","                  </form>","                </td>","              </tr>","            <?php endforeach; ?>","            <?php if (!$res): ?>","              <tr><td colspan=\"5\" class=\"text-muted\">No resources added yet.</td></tr>","            <?php endif; ?>","          </tbody>","        </table>","      </div>","    </div>","  </div>","</div>","","<script>","function toggleContractor(){","  var at = document.getElementById('assign_type').value;","  var wrap = document.getElementById('contractor_wrap');","  if (wrap) wrap.style.display = (at==='contractor')?'block':'none';","}","toggleContractor();","</script>","","<?php","require_once $UI_PATH . '/layout_end.php';","?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/org/locations_form.php": ["<?php","/** PATH: /public_html/org/locations_form.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('org.location.manage');","","$pdo = db();","","/** Detect columns */","$cols = $pdo->query(\"SHOW COLUMNS FROM locations\")->fetchAll(PDO::FETCH_COLUMN);","$hasCode    = in_array('code', $cols, true);","$hasStatus  = in_array('status', $cols, true);","$hasCity    = in_array('city', $cols, true);","$hasState   = in_array('state', $cols, true);","$hasCountry = in_array('country', $cols, true);","$hasPincode = in_array('pincode', $cols, true);","$hasAddress = in_array('address', $cols, true);","$hasAddr1   = in_array('address1', $cols, true);","$hasAddr2   = in_array('address2', $cols, true);","$hasLat     = in_array('latitude', $cols, true);","$hasLng     = in_array('longitude', $cols, true);","$hasCreated = in_array('created_at', $cols, true);","$hasUpdated = in_array('updated_at', $cols, true);","","$id = isset($_GET['id']) ? (int)$_GET['id'] : 0;","$editing = $id > 0;","","$loc = ['name' => ''];","if ($hasCode)    $loc['code']    = '';","if ($hasStatus)  $loc['status']  = 'active';","if ($hasCity)    $loc['city']    = '';","if ($hasState)   $loc['state']   = '';","if ($hasCountry) $loc['country'] = '';","if ($hasPincode) $loc['pincode'] = '';","if ($hasAddress) $loc['address'] = '';","if ($hasAddr1)   $loc['address1']= '';","if ($hasAddr2)   $loc['address2']= '';","if ($hasLat)     $loc['latitude']= null;","if ($hasLng)     $loc['longitude']= null;","","if ($editing) {","  $sel = ['id','name'];","  foreach (['code','status','city','state','country','pincode','address','address1','address2','latitude','longitude'] as $c) {","    if (in_array($c, $cols, true)) $sel[] = $c;","  }","  $st = $pdo->prepare(\"SELECT \".implode(',', $sel).\" FROM locations WHERE id = ?\");","  $st->execute([$id]);","  $row = $st->fetch(PDO::FETCH_ASSOC);","  if (!$row) { http_response_code(404); exit('Location not found.'); }","  $loc = array_merge($loc, $row);","}","","function slugify_code(string $s): string {","  $s = trim($s);","  $s = str_replace(['/', '-', ' '], '_', $s);","  $s = preg_replace('/[^a-zA-Z0-9_]/', '', $s);","  $s = preg_replace('/_+/', '_', $s);","  return strtolower($s ?: 'loc');","}","","$errors = [];","$okMsg  = '';","","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  // if (function_exists('csrf_validate_or_die')) csrf_validate_or_die();","","  $name = trim((string)($_POST['name'] ?? ''));","  if ($name === '') $errors[] = 'Name is required.';","","  $code    = $hasCode ? trim((string)($_POST['code'] ?? '')) : null;","  $status  = $hasStatus ? (($_POST['status'] ?? 'inactive') === 'active' ? 'active' : 'inactive') : null;","  $city    = $hasCity ? trim((string)($_POST['city'] ?? '')) : null;","  $state   = $hasState ? trim((string)($_POST['state'] ?? '')) : null;","  $country = $hasCountry ? trim((string)($_POST['country'] ?? '')) : null;","  $pincode = $hasPincode ? trim((string)($_POST['pincode'] ?? '')) : null;","  $address = $hasAddress ? trim((string)($_POST['address'] ?? '')) : null;","  $address1= $hasAddr1 ? trim((string)($_POST['address1'] ?? '')) : null;","  $address2= $hasAddr2 ? trim((string)($_POST['address2'] ?? '')) : null;","  $lat     = $hasLat ? ($_POST['latitude'] === '' ? null : (float)$_POST['latitude']) : null;","  $lng     = $hasLng ? ($_POST['longitude'] === '' ? null : (float)$_POST['longitude']) : null;","","  if ($hasCode) {","    if ($code === '') $code = slugify_code($name);","    $sqlU = \"SELECT id FROM locations WHERE code = ?\";","    $parU = [$code];","    if ($editing) { $sqlU .= \" AND id <> ?\"; $parU[] = $id; }","    $stU = $pdo->prepare($sqlU);","    $stU->execute($parU);","    if ($stU->fetch(PDO::FETCH_ASSOC)) $errors[] = 'Code already exists. Choose another.';","  }","","  if (!$errors) {","    if ($editing) {","      $sets = ['name = ?']; $vals = [$name];","      foreach ([","        'code'=>$code,'status'=>$status,'city'=>$city,'state'=>$state,'country'=>$country,","        'pincode'=>$pincode,'address'=>$address,'address1'=>$address1,'address2'=>$address2,","        'latitude'=>$lat,'longitude'=>$lng","      ] as $c=>$v) {","        if (in_array($c, $cols, true)) { $sets[] = \"$c = ?\"; $vals[] = $v; }","      }","      if ($hasUpdated) $sets[] = 'updated_at = NOW()';","      $vals[] = $id;","","      $sql = \"UPDATE locations SET \".implode(', ', $sets).\" WHERE id = ?\";","      $pdo->prepare($sql)->execute($vals);","      $okMsg = 'Location updated.';","    } else {","      $insCols = ['name']; $qs=['?']; $vals = [$name];","      foreach ([","        'code'=>$code,'status'=>$status,'city'=>$city,'state'=>$state,'country'=>$country,","        'pincode'=>$pincode,'address'=>$address,'address1'=>$address1,'address2'=>$address2,","        'latitude'=>$lat,'longitude'=>$lng","      ] as $c=>$v) {","        if (in_array($c, $cols, true)) { $insCols[] = $c; $qs[]='?'; $vals[]=$v; }","      }","      if ($hasCreated){ $insCols[]='created_at'; $qs[]='NOW()'; }","      if ($hasUpdated){ $insCols[]='updated_at'; $qs[]='NOW()'; }","","      $sql = \"INSERT INTO locations (\".implode(',', $insCols).\") VALUES (\".implode(',', $qs).\")\";","      $pdo->prepare($sql)->execute($vals);","      $id = (int)$pdo->lastInsertId();","      $editing = true;","      $okMsg = 'Location created.';","    }","","    // reload","    $st = $pdo->prepare(\"SELECT * FROM locations WHERE id = ?\");","    $st->execute([$id]);","    $loc = $st->fetch(PDO::FETCH_ASSOC) ?: $loc;","  }","}","","$UI_PATH     = dirname(__DIR__) . '/ui';","$PAGE_TITLE  = $editing ? 'Edit Location' : 'Add Location';","$ACTIVE_MENU = 'org.locations';","","require_once $UI_PATH . '/init.php';","require_once $UI_PATH . '/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 mb-0\"><?= $editing ? 'Edit Location' : 'Add Location' ?></h1>","  <a class=\"btn btn-outline-secondary\" href=\"/org/locations_list.php\">Back</a>","</div>","","<?php if ($errors): ?>","  <div class=\"alert alert-danger\"><ul class=\"mb-0\"><?php foreach ($errors as $e): ?><li><?= htmlspecialchars($e) ?></li><?php endforeach; ?></ul></div>","<?php elseif ($okMsg): ?>","  <div class=\"alert alert-success\"><?= htmlspecialchars($okMsg) ?></div>","<?php endif; ?>","","<form method=\"post\" class=\"row g-3\">","  <div class=\"col-md-6\">","    <label class=\"form-label\">Name</label>","    <input name=\"name\" class=\"form-control\" required value=\"<?= htmlspecialchars((string)$loc['name']) ?>\">","  </div>","","  <?php if ($hasCode): ?>","  <div class=\"col-md-6\">","    <label class=\"form-label\">Code (unique)</label>","    <input name=\"code\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($loc['code'] ?? '')) ?>\">","    <div class=\"form-text\">Auto-generated from name if left blank.</div>","  </div>","  <?php endif; ?>","","  <?php if ($hasStatus): ?>","  <div class=\"col-md-4\">","    <label class=\"form-label\">Status</label>","    <select name=\"status\" class=\"form-select\">","      <option value=\"active\"   <?= ($loc['status'] ?? 'active') === 'active' ? 'selected' : '' ?>>Active</option>","      <option value=\"inactive\" <?= ($loc['status'] ?? 'active') === 'inactive' ? 'selected' : '' ?>>Inactive</option>","    </select>","  </div>","  <?php endif; ?>","","  <?php if ($hasCity): ?>","  <div class=\"col-md-4\"><label class=\"form-label\">City</label>","    <input name=\"city\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($loc['city'] ?? '')) ?>\">","  </div><?php endif; ?>","","  <?php if ($hasState): ?>","  <div class=\"col-md-4\"><label class=\"form-label\">State</label>","    <input name=\"state\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($loc['state'] ?? '')) ?>\">","  </div><?php endif; ?>","","  <?php if ($hasCountry): ?>","  <div class=\"col-md-4\"><label class=\"form-label\">Country</label>","    <input name=\"country\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($loc['country'] ?? '')) ?>\">","  </div><?php endif; ?>","","  <?php if ($hasPincode): ?>","  <div class=\"col-md-4\"><label class=\"form-label\">Pincode</label>","    <input name=\"pincode\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($loc['pincode'] ?? '')) ?>\">","  </div><?php endif; ?>","","  <?php if ($hasAddress): ?>","  <div class=\"col-12\"><label class=\"form-label\">Address</label>","    <textarea name=\"address\" class=\"form-control\" rows=\"2\"><?= htmlspecialchars((string)($loc['address'] ?? '')) ?></textarea>","  </div><?php endif; ?>","","  <?php if ($hasAddr1 || $hasAddr2): ?>","    <?php if ($hasAddr1): ?>","    <div class=\"col-md-6\"><label class=\"form-label\">Address 1</label>","      <input name=\"address1\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($loc['address1'] ?? '')) ?>\">","    </div><?php endif; ?>","    <?php if ($hasAddr2): ?>","    <div class=\"col-md-6\"><label class=\"form-label\">Address 2</label>","      <input name=\"address2\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($loc['address2'] ?? '')) ?>\">","    </div><?php endif; ?>","  <?php endif; ?>","","  <?php if ($hasLat || $hasLng): ?>","  <div class=\"col-md-3\"><label class=\"form-label\">Latitude</label>","    <input type=\"number\" step=\"any\" name=\"latitude\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($loc['latitude'] ?? '')) ?>\">","  </div>","  <div class=\"col-md-3\"><label class=\"form-label\">Longitude</label>","    <input type=\"number\" step=\"any\" name=\"longitude\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($loc['longitude'] ?? '')) ?>\">","  </div>","  <?php endif; ?>","","  <div class=\"col-12\">","    <button class=\"btn btn-primary\" type=\"submit\"><?= $editing ? 'Save Changes' : 'Create Location' ?></button>","  </div>","</form>","","<?php require_once $UI_PATH . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/org/departments_list.php": ["<?php","/** PATH: /public_html/org/departments_list.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('org.department.view');","","","// Permission-derived UI flags","$canManage = has_permission('org.department.manage');","$canView   = has_permission('org.department.view');","$pdo = db();","","/** Detect columns available in departments */","$cols = $pdo->query(\"SHOW COLUMNS FROM departments\")->fetchAll(PDO::FETCH_COLUMN);","$hasCode     = in_array('code', $cols, true);","$hasStatus   = in_array('status', $cols, true);","$hasParent   = in_array('parent_id', $cols, true);","$hasCreated  = in_array('created_at', $cols, true);","$hasUpdated  = in_array('updated_at', $cols, true);","","/** Search (collation-safe) */","$q = trim((string)($_GET['q'] ?? ''));","$where = '';","$params = [];","if ($q !== '') {","  $like = '%' . $q . '%';","  if ($hasCode) {","    $where = \"WHERE d.name COLLATE utf8mb4_unicode_ci LIKE ? OR d.code COLLATE utf8mb4_unicode_ci LIKE ?\";","    $params = [$like, $like];","  } else {","    $where = \"WHERE d.name COLLATE utf8mb4_unicode_ci LIKE ?\";","    $params = [$like];","  }","}","","/** Build SELECT dynamically */","$select = [\"d.id\", \"d.name\"];","if ($hasCode)    $select[] = \"d.code\";","if ($hasStatus)  $select[] = \"d.status\";","if ($hasParent)  $select[] = \"d.parent_id\";","if ($hasCreated) $select[] = \"d.created_at\";","if ($hasUpdated) $select[] = \"d.updated_at\";","","$sql = \"SELECT \" . implode(\", \", $select) . \"","        FROM departments d","        $where","        ORDER BY d.id DESC","        LIMIT 300\";","$stmt = $pdo->prepare($sql);","$stmt->execute($params);","$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);","","/** Parent map (if parent_id exists) */","$parentMap = [];","if ($hasParent && $rows) {","  $ids = array_unique(array_filter(array_map(fn($r)=> (int)($r['parent_id'] ?? 0), $rows)));","  if ($ids) {","    $in = implode(',', array_fill(0, count($ids), '?'));","    $st = $pdo->prepare(\"SELECT id, name FROM departments WHERE id IN ($in)\");","    $st->execute($ids);","    foreach ($st->fetchAll(PDO::FETCH_ASSOC) as $pr) {","      $parentMap[(int)$pr['id']] = (string)$pr['name'];","    }","  }","}","","$canManage = has_permission('org.department.manage');","","$UI_PATH     = dirname(__DIR__) . '/ui';","$PAGE_TITLE  = 'Departments';","$ACTIVE_MENU = 'org.departments';","","require_once $UI_PATH . '/init.php';","require_once $UI_PATH . '/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 mb-0\">Departments</h1>","  <?php if ($canManage): ?>","    <a class=\"btn btn-primary\" href=\"/org/departments_form.php\">+ Add Department</a>","  <?php endif; ?>","</div>","","<form method=\"get\" class=\"row g-2 mb-3\">","  <div class=\"col-auto\">","    <input name=\"q\" class=\"form-control\" placeholder=\"<?= $hasCode ? 'Search code/name' : 'Search name' ?>\" value=\"<?= htmlspecialchars($q) ?>\">","  </div>","  <div class=\"col-auto\">","    <button class=\"btn btn-outline-secondary\" type=\"submit\">Search</button>","  </div>","</form>","","<div class=\"table-responsive\">","  <table class=\"table table-sm align-middle\">","    <thead class=\"table-light\">","      <tr>","        <th>#</th>","        <?php if ($hasCode): ?><th>Code</th><?php endif; ?>","        <th>Name</th>","        <?php if ($hasParent): ?><th>Parent</th><?php endif; ?>","        <?php if ($hasStatus): ?><th>Status</th><?php endif; ?>","        <?php if ($hasCreated): ?><th>Created</th><?php endif; ?>","        <?php if ($hasUpdated): ?><th>Updated</th><?php endif; ?>","        <?php if ($canManage): ?><th></th><?php endif; ?>","      </tr>","    </thead>","    <tbody>","      <?php foreach ($rows as $r): ?>","        <tr>","          <td><?= (int)$r['id'] ?></td>","          <?php if ($hasCode): ?><td><code><?= htmlspecialchars((string)($r['code'] ?? '')) ?></code></td><?php endif; ?>","          <td><?= htmlspecialchars((string)$r['name']) ?></td>","          <?php if ($hasParent): ?>","            <td><?= htmlspecialchars($parentMap[(int)($r['parent_id'] ?? 0)] ?? '\u2014') ?></td>","          <?php endif; ?>","          <?php if ($hasStatus): ?>","            <td><span class=\"badge bg-<?= ($r['status'] ?? 'inactive') === 'active' ? 'success' : 'secondary' ?>\">","              <?= ($r['status'] ?? 'inactive') === 'active' ? 'Active' : 'Inactive' ?>","            </span></td>","          <?php endif; ?>","          <?php if ($hasCreated): ?><td><?= htmlspecialchars((string)($r['created_at'] ?? '')) ?></td><?php endif; ?>","          <?php if ($hasUpdated): ?><td><?= htmlspecialchars((string)($r['updated_at'] ?? '')) ?></td><?php endif; ?>","          <?php if ($canManage): ?>","            <td><a class=\"btn btn-sm btn-outline-primary\" href=\"/org/departments_form.php?id=<?= (int)$r['id'] ?>\">Edit</a></td>","          <?php endif; ?>","        </tr>","      <?php endforeach; ?>","      <?php if (!$rows): ?>","        <tr>","          <td colspan=\"<?= 1 + ($hasCode?1:0) + 1 + ($hasParent?1:0) + ($hasStatus?1:0) + ($hasCreated?1:0) + ($hasUpdated?1:0) + ($canManage?1:0) ?>\"","              class=\"text-center text-muted py-4\">No departments found.</td>","        </tr>","      <?php endif; ?>","    </tbody>","  </table>","</div>","<?php require_once $UI_PATH . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/org/departments_form.php": ["<?php","/** PATH: /public_html/org/departments_form.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('org.department.manage');","","","// Permission-derived UI flags","$canManage = has_permission('org.department.manage');","$pdo = db();","","$cols = $pdo->query(\"SHOW COLUMNS FROM departments\")->fetchAll(PDO::FETCH_COLUMN);","$hasCode     = in_array('code', $cols, true);","$hasStatus   = in_array('status', $cols, true);","$hasParent   = in_array('parent_id', $cols, true);","$hasCreated  = in_array('created_at', $cols, true);","$hasUpdated  = in_array('updated_at', $cols, true);","","$id = isset($_GET['id']) ? (int)$_GET['id'] : 0;","$editing = $id > 0;","","$dept = [","  'name'      => '',","  'code'      => $hasCode ? '' : null,","  'status'    => $hasStatus ? 'active' : null,","  'parent_id' => $hasParent ? null : null,","];","","if ($editing) {","  $sel = ['id','name'];","  if ($hasCode)   $sel[] = 'code';","  if ($hasStatus) $sel[] = 'status';","  if ($hasParent) $sel[] = 'parent_id';","","  $st = $pdo->prepare(\"SELECT \".implode(',', $sel).\" FROM departments WHERE id = ?\");","  $st->execute([$id]);","  $row = $st->fetch(PDO::FETCH_ASSOC);","  if (!$row) { http_response_code(404); exit('Department not found.'); }","  $dept = array_merge($dept, $row);","}","","/** Load parents options if supported */","$parents = [];","if ($hasParent) {","  $st = $pdo->query(\"SELECT id, name FROM departments ORDER BY name ASC\");","  $parents = $st->fetchAll(PDO::FETCH_ASSOC);","}","","/** Helpers */","function slugify(string $s): string {","  $s = trim($s);","  $s = str_replace(['/', '-', ' '], '_', $s);","  $s = preg_replace('/[^a-zA-Z0-9_]/', '', $s);","  $s = preg_replace('/_+/', '_', $s);","  return strtolower($s ?: 'dept');","}","","/** Handle POST */","$errors = [];","$okMsg  = '';","","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  // if (function_exists('csrf_validate_or_die')) csrf_validate_or_die();","","  $name      = trim((string)($_POST['name'] ?? ''));","  $code      = $hasCode ? trim((string)($_POST['code'] ?? '')) : null;","  $status    = $hasStatus ? (($_POST['status'] ?? 'inactive') === 'active' ? 'active' : 'inactive') : null;","  $parent_id = $hasParent ? (($_POST['parent_id'] ?? '') === '' ? null : (int)$_POST['parent_id']) : null;","","  if ($name === '') $errors[] = 'Name is required.';","  if ($hasParent && $parent_id !== null && $editing && $parent_id === $id) $errors[] = 'A department cannot be its own parent.';","","  if ($hasCode) {","    if ($code === '') $code = slugify($name);","    $sqlU = \"SELECT id FROM departments WHERE code = ?\";","    $parU = [$code];","    if ($editing) { $sqlU .= \" AND id <> ?\"; $parU[] = $id; }","    $stU = $pdo->prepare($sqlU);","    $stU->execute($parU);","    if ($stU->fetch(PDO::FETCH_ASSOC)) $errors[] = 'Code already exists. Choose another.';","  }","","  if (!$errors) {","    if ($editing) {","      $sets = ['name = ?']; $vals = [$name];","      if ($hasCode)   { $sets[] = 'code = ?';      $vals[] = $code; }","      if ($hasStatus) { $sets[] = 'status = ?';    $vals[] = $status; }","      if ($hasParent) { $sets[] = 'parent_id = ?'; $vals[] = $parent_id; }","      if ($hasUpdated){ $sets[] = 'updated_at = NOW()'; }","","      $vals[] = $id;","      $sql = \"UPDATE departments SET \".implode(', ', $sets).\" WHERE id = ?\";","      $pdo->prepare($sql)->execute($vals);","      $okMsg = 'Department updated.';","    } else {","      $colsIns = ['name']; $qs=['?']; $vals = [$name];","      if ($hasCode)   { $colsIns[]='code';      $qs[]='?'; $vals[]=$code; }","      if ($hasStatus) { $colsIns[]='status';    $qs[]='?'; $vals[]=$status ?? 'active'; }","      if ($hasParent) { $colsIns[]='parent_id'; $qs[]='?'; $vals[]=$parent_id; }","      if ($hasCreated){ $colsIns[]='created_at';$qs[]='NOW()'; }","      if ($hasUpdated){ $colsIns[]='updated_at';$qs[]='NOW()'; }","","      $sql = \"INSERT INTO departments (\".implode(',', $colsIns).\") VALUES (\".implode(',', $qs).\")\";","      $pdo->prepare($sql)->execute($vals);","      $id = (int)$pdo->lastInsertId();","      $editing = true;","      $okMsg = 'Department created.';","    }","","    // reload","    $sel = ['id','name'];","    if ($hasCode)   $sel[] = 'code';","    if ($hasStatus) $sel[] = 'status';","    if ($hasParent) $sel[] = 'parent_id';","    $st = $pdo->prepare(\"SELECT \".implode(',', $sel).\" FROM departments WHERE id = ?\");","    $st->execute([$id]);","    $dept = $st->fetch(PDO::FETCH_ASSOC) ?: $dept;","  }","}","","$UI_PATH     = dirname(__DIR__) . '/ui';","$PAGE_TITLE  = $editing ? 'Edit Department' : 'Add Department';","$ACTIVE_MENU = 'org.departments';","","require_once $UI_PATH . '/init.php';","require_once $UI_PATH . '/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 mb-0\"><?= $editing ? 'Edit Department' : 'Add Department' ?></h1>","  <a class=\"btn btn-outline-secondary\" href=\"/org/departments_list.php\">Back</a>","</div>","","<?php if ($errors): ?>","  <div class=\"alert alert-danger\"><ul class=\"mb-0\"><?php foreach ($errors as $e): ?><li><?= htmlspecialchars($e) ?></li><?php endforeach; ?></ul></div>","<?php elseif ($okMsg): ?>","  <div class=\"alert alert-success\"><?= htmlspecialchars($okMsg) ?></div>","<?php endif; ?>","","<form method=\"post\" class=\"row g-3\">","  <div class=\"col-md-6\">","    <label class=\"form-label\">Name</label>","    <input name=\"name\" class=\"form-control\" required value=\"<?= htmlspecialchars((string)$dept['name']) ?>\">","  </div>","","  <?php if ($hasCode): ?>","  <div class=\"col-md-6\">","    <label class=\"form-label\">Code (unique)</label>","    <input name=\"code\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($dept['code'] ?? '')) ?>\">","    <div class=\"form-text\">Letters/numbers/underscores only; auto-generated if blank.</div>","  </div>","  <?php endif; ?>","","  <?php if ($hasStatus): ?>","  <div class=\"col-md-4\">","    <label class=\"form-label\">Status</label>","    <select name=\"status\" class=\"form-select\">","      <option value=\"active\"   <?= ($dept['status'] ?? 'active') === 'active' ? 'selected' : '' ?>>Active</option>","      <option value=\"inactive\" <?= ($dept['status'] ?? 'active') === 'inactive' ? 'selected' : '' ?>>Inactive</option>","    </select>","  </div>","  <?php endif; ?>","","  <?php if ($hasParent): ?>","  <div class=\"col-md-8\">","    <label class=\"form-label\">Parent Department</label>","    <select name=\"parent_id\" class=\"form-select\">","      <option value=\"\">\u2014 None \u2014</option>","      <?php foreach ($parents as $p): if ($editing && (int)$p['id'] === (int)$id) continue; ?>","        <option value=\"<?= (int)$p['id'] ?>\" <?= ((int)($dept['parent_id'] ?? 0) === (int)$p['id']) ? 'selected' : '' ?>>","          <?= htmlspecialchars((string)$p['name']) ?>","        </option>","      <?php endforeach; ?>","    </select>","  </div>","  <?php endif; ?>","","  <div class=\"col-12\">","    <button class=\"btn btn-primary\" type=\"submit\"><?= $editing ? 'Save Changes' : 'Create Department' ?></button>","  </div>","</form>","","<?php require_once $UI_PATH . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/org/locations_list.php": ["<?php","/** PATH: /public_html/org/locations_list.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('org.location.view');","","$pdo = db();","","/** Detect columns present in locations */","$cols = $pdo->query(\"SHOW COLUMNS FROM locations\")->fetchAll(PDO::FETCH_COLUMN);","$hasCode    = in_array('code', $cols, true);","$hasStatus  = in_array('status', $cols, true);","$hasCity    = in_array('city', $cols, true);","$hasState   = in_array('state', $cols, true);","$hasCountry = in_array('country', $cols, true);","$hasPincode = in_array('pincode', $cols, true);","$hasAddress = in_array('address', $cols, true);","$hasCreated = in_array('created_at', $cols, true);","$hasUpdated = in_array('updated_at', $cols, true);","","/** Search (collation-safe) */","$q = trim((string)($_GET['q'] ?? ''));","$where = '';","$params = [];","if ($q !== '') {","  $like = '%' . $q . '%';","  $parts = [\"l.name COLLATE utf8mb4_unicode_ci LIKE ?\"];","  $params[] = $like;","  if ($hasCode)    { $parts[] = \"l.code COLLATE utf8mb4_unicode_ci LIKE ?\";    $params[] = $like; }","  if ($hasCity)    { $parts[] = \"l.city COLLATE utf8mb4_unicode_ci LIKE ?\";    $params[] = $like; }","  if ($hasState)   { $parts[] = \"l.state COLLATE utf8mb4_unicode_ci LIKE ?\";   $params[] = $like; }","  if ($hasCountry) { $parts[] = \"l.country COLLATE utf8mb4_unicode_ci LIKE ?\"; $params[] = $like; }","  if ($hasAddress) { $parts[] = \"l.address COLLATE utf8mb4_unicode_ci LIKE ?\"; $params[] = $like; }","  $where = \"WHERE \" . implode(' OR ', $parts);","}","","/** Build SELECT */","$select = [\"l.id\", \"l.name\"];","if ($hasCode)    $select[] = \"l.code\";","if ($hasStatus)  $select[] = \"l.status\";","if ($hasCity)    $select[] = \"l.city\";","if ($hasState)   $select[] = \"l.state\";","if ($hasCountry) $select[] = \"l.country\";","if ($hasPincode) $select[] = \"l.pincode\";","if ($hasAddress) $select[] = \"l.address\";","if ($hasCreated) $select[] = \"l.created_at\";","if ($hasUpdated) $select[] = \"l.updated_at\";","","$sql = \"SELECT \" . implode(\", \", $select) . \" FROM locations l","        $where","        ORDER BY l.id DESC","        LIMIT 300\";","$stmt = $pdo->prepare($sql);","$stmt->execute($params);","$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);","","$canManage = has_permission('org.location.manage');","","$UI_PATH     = dirname(__DIR__) . '/ui';","$PAGE_TITLE  = 'Locations';","$ACTIVE_MENU = 'org.locations';","","require_once $UI_PATH . '/init.php';","require_once $UI_PATH . '/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 mb-0\">Locations</h1>","  <?php if ($canManage): ?>","    <a class=\"btn btn-primary\" href=\"/org/locations_form.php\">+ Add Location</a>","  <?php endif; ?>","</div>","","<form method=\"get\" class=\"row g-2 mb-3\">","  <div class=\"col-auto\">","    <input name=\"q\" class=\"form-control\" placeholder=\"Search name<?= $hasCode?', code':''; ?><?= $hasCity?', city':''; ?><?= $hasState?', state':''; ?><?= $hasCountry?', country':''; ?>\" value=\"<?= htmlspecialchars($q) ?>\">","  </div>","  <div class=\"col-auto\">","    <button class=\"btn btn-outline-secondary\" type=\"submit\">Search</button>","  </div>","</form>","","<div class=\"table-responsive\">","  <table class=\"table table-sm align-middle\">","    <thead class=\"table-light\">","      <tr>","        <th>#</th>","        <?php if ($hasCode): ?><th>Code</th><?php endif; ?>","        <th>Name</th>","        <?php if ($hasCity): ?><th>City</th><?php endif; ?>","        <?php if ($hasState): ?><th>State</th><?php endif; ?>","        <?php if ($hasCountry): ?><th>Country</th><?php endif; ?>","        <?php if ($hasPincode): ?><th>Pincode</th><?php endif; ?>","        <?php if ($hasStatus): ?><th>Status</th><?php endif; ?>","        <?php if ($hasCreated): ?><th>Created</th><?php endif; ?>","        <?php if ($hasUpdated): ?><th>Updated</th><?php endif; ?>","        <?php if ($canManage): ?><th></th><?php endif; ?>","      </tr>","    </thead>","    <tbody>","      <?php foreach ($rows as $r): ?>","        <tr>","          <td><?= (int)$r['id'] ?></td>","          <?php if ($hasCode): ?><td><code><?= htmlspecialchars((string)($r['code'] ?? '')) ?></code></td><?php endif; ?>","          <td><?= htmlspecialchars((string)$r['name']) ?></td>","          <?php if ($hasCity): ?><td><?= htmlspecialchars((string)($r['city'] ?? '')) ?></td><?php endif; ?>","          <?php if ($hasState): ?><td><?= htmlspecialchars((string)($r['state'] ?? '')) ?></td><?php endif; ?>","          <?php if ($hasCountry): ?><td><?= htmlspecialchars((string)($r['country'] ?? '')) ?></td><?php endif; ?>","          <?php if ($hasPincode): ?><td><?= htmlspecialchars((string)($r['pincode'] ?? '')) ?></td><?php endif; ?>","          <?php if ($hasStatus): ?>","            <td><span class=\"badge bg-<?= ($r['status'] ?? 'inactive') === 'active' ? 'success' : 'secondary' ?>\">","              <?= ($r['status'] ?? 'inactive') === 'active' ? 'Active' : 'Inactive' ?>","            </span></td>","          <?php endif; ?>","          <?php if ($hasCreated): ?><td><?= htmlspecialchars((string)($r['created_at'] ?? '')) ?></td><?php endif; ?>","          <?php if ($hasUpdated): ?><td><?= htmlspecialchars((string)($r['updated_at'] ?? '')) ?></td><?php endif; ?>","          <?php if ($canManage): ?>","            <td><a class=\"btn btn-sm btn-outline-primary\" href=\"/locations/locations_form.php?id=<?= (int)$r['id'] ?>\">Edit</a></td>","          <?php endif; ?>","        </tr>","      <?php endforeach; ?>","      <?php if (!$rows): ?>","        <tr>","          <td colspan=\"<?= 1 + ($hasCode?1:0) + 1 + ($hasCity?1:0) + ($hasState?1:0) + ($hasCountry?1:0) + ($hasPincode?1:0) + ($hasStatus?1:0) + ($hasCreated?1:0) + ($hasUpdated?1:0) + ($canManage?1:0) ?>\"","              class=\"text-center text-muted py-4\">No locations found.</td>","        </tr>","      <?php endif; ?>","    </tbody>","  </table>","</div>","<?php require_once $UI_PATH . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/attachments/panel.php": ["<?php","/** PATH: /public_html/attachments/panel.php"," * Required vars before include: $ENTITY (string), $ENTITY_ID (int), $UI_PATH, $pdo"," * Requires: includes/auth.php, includes/db.php already loaded by parent."," */","if (!isset($ENTITY, $ENTITY_ID, $pdo)) { http_response_code(500); exit('Attachments panel vars missing'); }","$canUpload = has_permission('attachment.manage') ?: true; // relax if you prefer","","$st = $pdo->prepare(\"SELECT al.id link_id, a.id, a.original_name, a.mime_type, a.byte_size, a.storage_path, a.created_at","                     FROM attachment_links al","                     JOIN attachments a ON a.id = al.attachment_id","                     WHERE al.entity_type = ? AND al.entity_id = ?","                     ORDER BY a.id DESC\");","$st->execute([$ENTITY, $ENTITY_ID]);","$files = $st->fetchAll(PDO::FETCH_ASSOC);","?>","<div class=\"card\">","  <div class=\"card-header d-flex justify-content-between align-items-center\">","    <strong>Attachments</strong>","    <?php if ($canUpload): ?>","      <form class=\"d-inline\" action=\"/attachments/upload.php\" method=\"post\" enctype=\"multipart/form-data\">","        <input type=\"hidden\" name=\"entity\" value=\"<?= htmlspecialchars($ENTITY) ?>\">","        <input type=\"hidden\" name=\"entity_id\" value=\"<?= (int)$ENTITY_ID ?>\">","        <input type=\"file\" name=\"file\" class=\"form-control form-control-sm d-inline-block\" style=\"width:280px\" required>","        <button class=\"btn btn-sm btn-primary\">Upload</button>","      </form>","    <?php endif; ?>","  </div>","  <div class=\"card-body\">","    <?php if (!$files): ?>","      <div class=\"text-muted\">No files yet.</div>","    <?php else: ?>","      <div class=\"table-responsive\">","        <table class=\"table table-sm align-middle\">","          <thead><tr><th>#</th><th>File</th><th>Size</th><th>Uploaded</th><th></th></tr></thead>","          <tbody>","            <?php foreach ($files as $f): ?>","              <tr>","                <td><?= (int)$f['id'] ?></td>","                <td><a href=\"<?= htmlspecialchars((string)$f['storage_path']) ?>\" target=\"_blank\"><?= htmlspecialchars((string)$f['original_name']) ?></a></td>","                <td><?= number_format((int)$f['byte_size']/1024, 1) ?> KB</td>","                <td><?= htmlspecialchars((string)$f['created_at']) ?></td>","                <td>","                  <a class=\"btn btn-sm btn-outline-danger\" href=\"/attachments/delete.php?link_id=<?= (int)$f['link_id'] ?>&return=<?= urlencode($_SERVER['REQUEST_URI'] ?? '/') ?>\"","                     onclick=\"return confirm('Remove link to this file? File stays on disk if linked elsewhere.')\">Remove</a>","                </td>","              </tr>","            <?php endforeach; ?>","          </tbody>","        </table>","      </div>","    <?php endif; ?>","  </div>","</div>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/attachments/delete.php": ["<?php","/** PATH: /public_html/attachments/delete.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/audit.php';","","require_login();","$pdo = db();","if (!has_permission('attachment.manage')) { http_response_code(403); exit('Forbidden'); }","","$linkId = (int)($_GET['link_id'] ?? 0);","if ($linkId <= 0) { http_response_code(400); exit('Bad request'); }","","$st = $pdo->prepare(\"SELECT entity_type, entity_id, attachment_id FROM attachment_links WHERE id = ?\");","$st->execute([$linkId]);","$row = $st->fetch(PDO::FETCH_ASSOC);","if (!$row) { http_response_code(404); exit('Not found'); }","","$pdo->beginTransaction();","try {","  $pdo->prepare(\"DELETE FROM attachment_links WHERE id=?\")->execute([$linkId]);","","  audit_log_add($pdo, current_user_id(), (string)$row['entity_type'], (int)$row['entity_id'],","                'attachment_removed', ['attachment_id'=>(int)$row['attachment_id']], null);","","  $pdo->commit();","  $ret = (string)($_GET['return'] ?? '/');","  header('Location: ' . $ret);","} catch (Throwable $e) {","  $pdo->rollBack();","  http_response_code(500);","  echo \"Failed: \".$e->getMessage();","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/attachments/upload.php": ["<?php","/** PATH: /public_html/attachments/upload.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/audit.php';","","require_login();","$pdo = db();","","$entity   = trim((string)($_POST['entity'] ?? ''));","$entityId = (int)($_POST['entity_id'] ?? 0);","if ($entity === '' || $entityId <= 0 || empty($_FILES['file'])) { http_response_code(400); exit('Bad request'); }","","$u = $_FILES['file'];","if ($u['error'] !== UPLOAD_ERR_OK) { http_response_code(400); exit('Upload error'); }","","$ym  = date('Y/m');","$dir = $_SERVER['DOCUMENT_ROOT'] . '/uploads/' . $ym;","if (!is_dir($dir)) mkdir($dir, 0775, true);","","$ext = pathinfo($u['name'], PATHINFO_EXTENSION);","$rand = bin2hex(random_bytes(8));","$fname = $rand . ($ext ? ('.'.$ext) : '');","$destAbs = $dir . '/' . $fname;","$destRel = '/uploads/' . $ym . '/' . $fname;","","if (!move_uploaded_file($u['tmp_name'], $destAbs)) { http_response_code(500); exit('Failed to move file'); }","chmod($destAbs, 0644);","","$pdo->beginTransaction();","try {","  $stA = $pdo->prepare(\"INSERT INTO attachments (original_name, mime_type, storage_path, byte_size, uploaded_by, created_at)","                        VALUES (?, ?, ?, ?, ?, NOW())\");","  $stA->execute([","    $u['name'],","    $u['type'] ?: null,","    $destRel,","    (int)$u['size'],","    current_user_id()","  ]);","  $attId = (int)$pdo->lastInsertId();","","  $stL = $pdo->prepare(\"INSERT INTO attachment_links (entity_type, entity_id, attachment_id, created_by, created_at)","                        VALUES (?, ?, ?, ?, NOW())\");","  $stL->execute([$entity, $entityId, $attId, current_user_id()]);","","  audit_log_add($pdo, current_user_id(), $entity, $entityId, 'attachment_added', null, ['attachment_id'=>$attId, 'name'=>$u['name']]);","","  $pdo->commit();","  header('Location: ' . ($_SERVER['HTTP_REFERER'] ?? '/'));","} catch (Throwable $e) {","  $pdo->rollBack();","  @unlink($destAbs);","  http_response_code(500);","  echo \"Failed: \".$e->getMessage();","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/index.php": ["<?php","require_once __DIR__ . '/config.php';","if (is_logged_in()) {","  header('Location: ' . app_url('dashboard.php')); exit;","}","header('Location: ' . app_url('login.php')); exit;"],
"/home/u989675055/domains/emsinfra.co.in/public_html/settings/mailer_form.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","$pdo = db(); $pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","if ($_SERVER['REQUEST_METHOD']==='POST') {","  require_permission('core.settings.mailer.manage');","  $driver = $_POST['driver']==='smtp'?'smtp':'mail';","  $smtp_host = trim($_POST['smtp_host'] ?? '');","  $smtp_port = $_POST['smtp_port']!=='' ? (int)$_POST['smtp_port'] : null;","  $smtp_secure = in_array($_POST['smtp_secure'] ?? '', ['','tls','ssl'], true) ? $_POST['smtp_secure'] : '';","  $smtp_user = trim($_POST['smtp_user'] ?? '');","  $smtp_pass = trim($_POST['smtp_pass'] ?? '');","  $from_email = trim($_POST['from_email'] ?? '');","  $from_name  = trim($_POST['from_name'] ?? '');","  $reply_to_email = trim($_POST['reply_to_email'] ?? '');","  $reply_to_name  = trim($_POST['reply_to_name'] ?? '');","","  $pdo->prepare(\"UPDATE mailer_settings SET driver=?, smtp_host=?, smtp_port=?, smtp_secure=?, smtp_user=?, smtp_pass=?, from_email=?, from_name=?, reply_to_email=?, reply_to_name=? WHERE id=1\")","      ->execute([$driver,$smtp_host,$smtp_port,$smtp_secure,$smtp_user,$smtp_pass,$from_email,$from_name,$reply_to_email,$reply_to_name]);","","  header('Location: /settings/mailer_form.php?saved=1'); exit;","}","","require_permission('core.settings.mailer.view');","$cfg = $pdo->query(\"SELECT * FROM mailer_settings WHERE id=1\")->fetch(PDO::FETCH_ASSOC) ?: [];","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container py-4\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h1 class=\"h4 mb-0\">Mailer Settings</h1>","  </div>","","  <?php if (!empty($_GET['saved'])): ?>","    <div class=\"alert alert-success\">Saved.</div>","  <?php endif; ?>","","  <form method=\"post\" class=\"card shadow-sm p-3\">","    <div class=\"row g-3\">","      <div class=\"col-md-3\">","        <label class=\"form-label\">Driver</label>","        <select name=\"driver\" class=\"form-select\" <?= has_permission('core.settings.mailer.manage')?'':'disabled' ?>>","          <option value=\"mail\" <?= ($cfg['driver']??'mail')==='mail'?'selected':'' ?>>PHP mail()</option>","          <option value=\"smtp\" <?= ($cfg['driver']??'mail')==='smtp'?'selected':'' ?>>SMTP (PHPMailer)</option>","        </select>","      </div>","      <div class=\"col-md-4\">","        <label class=\"form-label\">From Email</label>","        <input name=\"from_email\" class=\"form-control\" value=\"<?=htmlspecialchars($cfg['from_email'] ?? '')?>\" <?= has_permission('core.settings.mailer.manage')?'':'disabled' ?>>","      </div>","      <div class=\"col-md-5\">","        <label class=\"form-label\">From Name</label>","        <input name=\"from_name\" class=\"form-control\" value=\"<?=htmlspecialchars($cfg['from_name'] ?? '')?>\" <?= has_permission('core.settings.mailer.manage')?'':'disabled' ?>>","      </div>","","      <div class=\"col-md-4\">","        <label class=\"form-label\">Reply-To Email</label>","        <input name=\"reply_to_email\" class=\"form-control\" value=\"<?=htmlspecialchars($cfg['reply_to_email'] ?? '')?>\" <?= has_permission('core.settings.mailer.manage')?'':'disabled' ?>>","      </div>","      <div class=\"col-md-4\">","        <label class=\"form-label\">Reply-To Name</label>","        <input name=\"reply_to_name\" class=\"form-control\" value=\"<?=htmlspecialchars($cfg['reply_to_name'] ?? '')?>\" <?= has_permission('core.settings.mailer.manage')?'':'disabled' ?>>","      </div>","","      <div class=\"col-12\"><hr></div>","","      <div class=\"col-md-4\">","        <label class=\"form-label\">SMTP Host</label>","        <input name=\"smtp_host\" class=\"form-control\" value=\"<?=htmlspecialchars($cfg['smtp_host'] ?? '')?>\" <?= has_permission('core.settings.mailer.manage')?'':'disabled' ?>>","      </div>","      <div class=\"col-md-2\">","        <label class=\"form-label\">Port</label>","        <input name=\"smtp_port\" type=\"number\" class=\"form-control\" value=\"<?=htmlspecialchars((string)($cfg['smtp_port'] ?? ''))?>\" <?= has_permission('core.settings.mailer.manage')?'':'disabled' ?>>","      </div>","      <div class=\"col-md-2\">","        <label class=\"form-label\">Security</label>","        <select name=\"smtp_secure\" class=\"form-select\" <?= has_permission('core.settings.mailer.manage')?'':'disabled' ?>>","          <option value=\"\" <?= ($cfg['smtp_secure']??'')===''?'selected':'' ?>>None</option>","          <option value=\"tls\" <?= ($cfg['smtp_secure']??'')==='tls'?'selected':'' ?>>TLS</option>","          <option value=\"ssl\" <?= ($cfg['smtp_secure']??'')==='ssl'?'selected':'' ?>>SSL</option>","        </select>","      </div>","      <div class=\"col-md-4\">","        <label class=\"form-label\">SMTP Username</label>","        <input name=\"smtp_user\" class=\"form-control\" value=\"<?=htmlspecialchars($cfg['smtp_user'] ?? '')?>\" <?= has_permission('core.settings.mailer.manage')?'':'disabled' ?>>","      </div>","      <div class=\"col-md-4\">","        <label class=\"form-label\">SMTP Password</label>","        <input name=\"smtp_pass\" type=\"password\" class=\"form-control\" value=\"<?=htmlspecialchars($cfg['smtp_pass'] ?? '')?>\" <?= has_permission('core.settings.mailer.manage')?'':'disabled' ?>>","      </div>","    </div>","","    <?php if (has_permission('core.settings.mailer.manage')): ?>","      <div class=\"mt-3\">","        <button class=\"btn btn-primary\" type=\"submit\">Save</button>","      </div>","    <?php endif; ?>","  </form>","</div>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/.env": ["APP_ENV=production","APP_URL=https://emsinfra.co.in","","DB_HOST=localhost","DB_NAME=u989675055_emsinfracoin","DB_USER=u989675055_emsinfrain","DB_PASS=Emsinfra@9898","DB_CHARSET=utf8mb4"],
"/home/u989675055/domains/emsinfra.co.in/public_html/common/quote_item_get.php": ["<?php","/** PATH: /public_html/common/quote_item_get.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","header('Content-Type: application/json; charset=utf-8');","","try {","  require_login();","  require_permission('quote_items.view');","","  $id = (int)($_GET['id'] ?? 0);","  $code = trim((string)($_GET['code'] ?? ''));","  if ($id <= 0 && $code === '') { echo json_encode(['ok'=>false,'message'=>'id or code required']); exit; }","","  $pdo = db();","  if ($id > 0) {","    $st = $pdo->prepare(\"SELECT * FROM quote_items WHERE id=? AND deleted_at IS NULL\");","    $st->execute([$id]);","  } else {","    $st = $pdo->prepare(\"SELECT * FROM quote_items WHERE code=? AND deleted_at IS NULL\");","    $st->execute([$code]);","  }","  $row = $st->fetch(PDO::FETCH_ASSOC);","","  echo json_encode(['ok'=>true,'item'=>$row ?: null]);","} catch (Throwable $e) {","  http_response_code(500);","  echo json_encode(['ok'=>false,'message'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/common/party_get.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","","require_login();","header('Content-Type: application/json; charset=utf-8');","","$id = (int)($_GET['id'] ?? 0);","if ($id<=0) { echo json_encode([]); exit; }","","$pdo = db();","$st = $pdo->prepare(\"","  SELECT id, name, code, gst_number, address_line1, address_line2, city, state, pincode","  FROM parties","  WHERE id=:id AND deleted_at IS NULL","\");","$st->execute([':id'=>$id]);","echo json_encode($st->fetch(PDO::FETCH_ASSOC) ?: [], JSON_UNESCAPED_UNICODE);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/common/party_search.php": ["<?php","/** PATH: /public_html/common/party_search.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","header('Content-Type: application/json; charset=utf-8');","","try {","  require_login();","  require_permission('parties.view');","","  $q = trim((string)($_GET['q'] ?? ''));","  $type = trim((string)($_GET['type'] ?? '')); // optional: 'client','supplier',...","","  $pdo = db();","  $params = [];","  $where = \"WHERE deleted_at IS NULL\";","  if ($q !== '') {","    $where .= \" AND (name LIKE :q OR code LIKE :q)\";","    $params[':q'] = \"%{$q}%\";","  }","  if ($type !== '') {","    $where .= \" AND type = :t\";","    $params[':t'] = $type;","  }","","  $sql = \"SELECT id, code, name, type, city, state FROM parties $where ORDER BY name ASC LIMIT 20\";","  $st = $pdo->prepare($sql);","  $st->execute($params);","  $rows = $st->fetchAll(PDO::FETCH_ASSOC);","","  echo json_encode(['ok'=>true, 'items'=>$rows]);","} catch (Throwable $e) {","  http_response_code(500);","  echo json_encode(['ok'=>false,'message'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/common/party_contacts.php": ["<?php","/** PATH: /public_html/common/party_contacts.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","header('Content-Type: application/json; charset=utf-8');","","try {","  require_login();","  require_permission('parties.view');","","  $partyId = (int)($_GET['party_id'] ?? 0);","  if ($partyId <= 0) { echo json_encode(['ok'=>false,'message'=>'party_id required']); exit; }","","  $pdo = db();","  $st = $pdo->prepare(\"SELECT id, name, email, phone, role_title, is_primary","                       FROM party_contacts WHERE party_id=? ORDER BY is_primary DESC, name ASC LIMIT 50\");","  $st->execute([$partyId]);","  $contacts = $st->fetchAll(PDO::FETCH_ASSOC);","","  echo json_encode(['ok'=>true,'items'=>$contacts]);","} catch (Throwable $e) {","  http_response_code(500);","  echo json_encode(['ok'=>false,'message'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/common/parties_search.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","","require_login();","header('Content-Type: application/json; charset=utf-8');","","$q = trim((string)($_GET['q'] ?? ''));","$limit = max(1, min((int)($_GET['limit'] ?? 20), 50));","if ($q === '') { echo json_encode([]); exit; }","","$pdo = db();","$st = $pdo->prepare(\"","  SELECT id, name, code","  FROM parties","  WHERE deleted_at IS NULL","    AND (name LIKE :kw OR code LIKE :kw)","  ORDER BY name ASC","  LIMIT {$limit}","\");","$st->execute([':kw' => \"%{$q}%\"]);","echo json_encode($st->fetchAll(PDO::FETCH_ASSOC) ?: [], JSON_UNESCAPED_UNICODE);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/common/quote_item_policy.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login(); require_permission('sales.quote.view');","header('Content-Type: application/json; charset=utf-8');","$code = trim((string)($_GET['code'] ?? ''));","if ($code===''){ echo json_encode(['ok'=>true]); exit; }","$st = db()->prepare(\"SELECT item_code, min_price, max_discount_pct, warning_text FROM quote_item_policies WHERE item_code=:c\");","$st->execute([':c'=>$code]); $r=$st->fetch(PDO::FETCH_ASSOC);","echo json_encode(['ok'=>true,'policy'=>$r ?: null], JSON_UNESCAPED_UNICODE);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/common/quote_items_search.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","","require_login();","header('Content-Type: application/json; charset=utf-8');","","$q = trim((string)($_GET['q'] ?? ''));","$limit = max(1, min((int)($_GET['limit'] ?? 20), 50));","if ($q === '') { echo json_encode([]); exit; }","","$pdo = db();","$st = $pdo->prepare(\"","  SELECT name, uom, rate_default, tax_pct_default","  FROM quote_items","  WHERE deleted_at IS NULL AND is_active = 1","    AND (name LIKE :kw OR code LIKE :kw)","  ORDER BY name ASC","  LIMIT {$limit}","\");","$st->execute([':kw' => \"%{$q}%\"]);","echo json_encode($st->fetchAll(PDO::FETCH_ASSOC) ?: [], JSON_UNESCAPED_UNICODE);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/classes/ItemCodeGenerator.php": ["<?php","declare(strict_types=1);","","final class ItemCodeGenerator","{","    public function __construct(private PDO $pdo) {}","","    public function generate(int $categoryId, ?int $subcategoryId): string","    {","        // Pull codes + pattern overrides","        $cat = $this->fetchOne(\"SELECT code, code_pattern FROM material_categories WHERE id = ?\", [$categoryId]);","        if (!$cat) throw new RuntimeException(\"Invalid category.\");","","        $subCode = '';","        $pattern = $cat['code_pattern'] ?: null;","","        if ($subcategoryId) {","            $sub = $this->fetchOne(\"SELECT code, code_pattern FROM material_subcategories WHERE id = ? AND category_id = ?\", [$subcategoryId, $categoryId]);","            if (!$sub) throw new RuntimeException(\"Invalid subcategory for category.\");","            $subCode = $sub['code'];","            // precedence: sub > cat > default","            $pattern = $sub['code_pattern'] ?: $pattern;","        }","","        $pattern ??= '{CAT}-{SUB}-{YYYY}-{SEQ4}';","","        // Compute sequence scope","        $year = (int)date('Y');","        [$scope, $scopeId] = $subcategoryId","            ? ['subcategory', $subcategoryId]","            : ['category', $categoryId];","","        // If SUB is empty (no subcategory), still use category scope; if you want global, switch to 'default'","        if (empty($subCode)) { $scope = 'category'; $scopeId = $categoryId; }","","        // Next sequence atomically","        $this->pdo->beginTransaction();","        try {","            $stmt = $this->pdo->prepare(\"","                SELECT id, last_seq FROM item_code_sequences","                WHERE scope = ? AND \".($scopeId === null ? \"scope_id IS NULL\" : \"scope_id = ?\").\" AND year = ?","                FOR UPDATE","            \");","            $params = [$scope];","            if ($scopeId === null) $params[] = $year; else $params[] = $scopeId;","            $params[] = $year;","            $stmt->execute($params);","            $row = $stmt->fetch(PDO::FETCH_ASSOC);","","            if ($row) {","                $next = (int)$row['last_seq'] + 1;","                $upd = $this->pdo->prepare(\"UPDATE item_code_sequences SET last_seq = ? WHERE id = ?\");","                $upd->execute([$next, (int)$row['id']]);","            } else {","                $next = 1;","                $ins = $this->pdo->prepare(\"INSERT INTO item_code_sequences (scope, scope_id, year, last_seq) VALUES (?,?,?,?)\");","                $ins->execute([$scope, $scopeId, $year, $next]);","            }","            $this->pdo->commit();","        } catch (\\Throwable $e) {","            $this->pdo->rollBack();","            throw $e;","        }","","        $seq4 = str_pad((string)$next, 4, '0', STR_PAD_LEFT);","","        // Tokens","        $replacements = [","            '{CAT}'  => (string)$cat['code'],","            '{SUB}'  => $subCode,","            '{YYYY}' => (string)$year,","            '{YY}'   => substr((string)$year, -2),","            '{SEQ4}' => $seq4,","            '{SEQ3}' => substr($seq4, -3),","        ];","","        $code = strtr($pattern, $replacements);","        // tidy: collapse double dashes if SUB blank, then trim","        $code = preg_replace('/-{2,}/', '-', $code);","        $code = trim($code, '-');","","        return $code;","    }","","    private function fetchOne(string $sql, array $params): ?array","    {","        $st = $this->pdo->prepare($sql);","        $st->execute($params);","        $row = $st->fetch(PDO::FETCH_ASSOC);","        return $row ?: null;","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/grir/close_console.php": ["","<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/rbac.php';","require_login(); require_permission('grir.close.view');","?><!doctype html><html><head><meta charset=\"utf-8\"><title>GR/IR Reconciliation</title>","<style>body{font-family:system-ui,Segoe UI,Roboto,Arial,sans-serif;margin:20px}label{display:block;margin:6px 0}table{border-collapse:collapse;width:100%}th,td{border:1px solid #e5e7eb;padding:6px}</style></head><body>","<h1>GR/IR Reconciliation & Close</h1>","<label>Older than (GRN date) <input id=\"od\" type=\"date\"></label>","<button id=\"sug\">Suggest</button>","<table id=\"t\"><thead></thead><tbody></tbody></table>","<hr>","<h3>Create & Post</h3>","<button id=\"create\">Create Close</button> <b id=\"cid\"></b>","<label>GRN Line <input id=\"gl\"></label>","<label>Open Value <input id=\"ov\" type=\"number\" step=\"0.01\"></label>","<label>Close Value (+/-) <input id=\"cv\" type=\"number\" step=\"0.01\"></label>","<label>Reason <select id=\"rs\"><option>writeoff</option><option>price_adjust</option><option>qty_adjust</option><option>other</option></select></label>","<button id=\"add\">Add</button>","<button id=\"post\">Post</button> <span id=\"msg\"></span>","<script>","async function load(url, data){const r=await fetch(url,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)});const j=await r.json();if(!j.ok)throw new Error(j.error);return j.data;}","sug.onclick=async()=>{try{const d=await load('grir/_ajax/suggest.php',{older_than:od.value});const tbody=document.querySelector('#t tbody');const thead=document.querySelector('#t thead');tbody.innerHTML='';thead.innerHTML='';if(!d.length){tbody.innerHTML='<tr><td>No suggestions</td></tr>';return;}const cols=Object.keys(d[0]);thead.innerHTML='<tr>'+cols.map(c=>'<th>'+c+'</th>').join('')+'</tr>';tbody.innerHTML=d.map(r=>'<tr>'+cols.map(c=>'<td>'+r[c]+'</td>').join('')+'</tr>').join('');}catch(e){alert(e.message);}}","create.onclick=async()=>{try{const d=await load('grir/_ajax/create.php',{});cid.textContent=d.closure_id;}catch(e){alert(e.message);}}","add.onclick=async()=>{try{const d=await load('grir/_ajax/add_line.php',{closure_id:parseInt(cid.textContent||0),grn_line_id:parseInt(gl.value||0),open_value:parseFloat(ov.value||'0'),close_value:parseFloat(cv.value||'0'),reason:rs.value});msg.textContent='Added line '+d.closure_line_id;}catch(e){alert(e.message);}}","post.onclick=async()=>{try{const d=await load('grir/_ajax/post.php',{closure_id:parseInt(cid.textContent||0)});msg.textContent='Posted lines='+d.lines+' amount='+d.amount;}catch(e){alert(e.message);}}","</script></body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/grir/_ajax/suggest.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/GrirCloser.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('grir.close.view'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\GrirCloser($pdo);","  $rows=$svc->suggest((string)($in['older_than']??date('Y-m-d',strtotime('-30 days'))));","  echo json_encode(['ok'=>true,'data'=>$rows]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/grir/_ajax/create.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/GrirCloser.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('grir.close.create'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\GrirCloser($pdo);","  $id=$svc->createHeader((string)($in['notes']??null));","  echo json_encode(['ok'=>true,'data'=>['closure_id'=>$id]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/grir/_ajax/post.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/GrirCloser.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('grir.close.post'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\GrirCloser($pdo);","  $res=$svc->post((int)($in['closure_id']??0));","  echo json_encode(['ok'=>true,'data'=>$res]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/grir/_ajax/add_line.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/GrirCloser.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('grir.close.edit'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\GrirCloser($pdo);","  $id=$svc->addLine((int)($in['closure_id']??0),(int)($in['grn_line_id']??0),(float)($in['open_value']??0),(float)($in['close_value']??0),(string)($in['reason']??'writeoff'),(string)($in['notes']??null));","  echo json_encode(['ok'=>true,'data'=>['closure_line_id'=>$id]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/dashboard.php": ["<?php","// --- bootstrapping (kept minimal to avoid breaking your includes) ---","require_once __DIR__ . '/includes/auth.php';","require_once __DIR__ . '/includes/db.php';","require_once __DIR__ . '/includes/rbac.php';","require_login();","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","// --- tiny helpers (non-invasive) ---","function fmt(?string $s): string { return htmlspecialchars((string)$s ?? '', ENT_QUOTES, 'UTF-8'); }","function safeCount(PDO $pdo, string $sql, array $params = []): int {","  try { $st = $pdo->prepare($sql); $st->execute($params); return (int)$st->fetchColumn(); }","  catch (Throwable $e) { return 0; }","}","function safeRows(PDO $pdo, string $sql, array $params = [], int $limit = 10): array {","  try {","    if ($limit > 0 && stripos($sql, 'limit') === false) { $sql .= \" LIMIT \" . (int)$limit; }","    $st = $pdo->prepare($sql); $st->execute($params); return $st->fetchAll(PDO::FETCH_ASSOC) ?: [];","  } catch (Throwable $e) { return []; }","}","function tableExists(PDO $pdo, string $t): bool {","  if (!preg_match('/^[a-zA-Z0-9_]+$/', $t)) return false;","  try { $pdo->query(\"SELECT 1 FROM `{$t}` LIMIT 0\"); return true; } catch (Throwable $e) { return false; }","}","$today = (new DateTime('now'))->format('Y-m-d');","$in7   = (new DateTime('now'))->modify('+7 days')->format('Y-m-d');","","// --- KPI: Operations (aligned to DB schema) ---","$kpi = [","  'items_active'     => tableExists($pdo,'items')             ? safeCount($pdo, \"SELECT COUNT(*) FROM items WHERE status='active'\") : 0, // items.status enum, active=running","  'projects_active'  => tableExists($pdo,'projects')          ? safeCount($pdo, \"SELECT COUNT(*) FROM projects WHERE status='active'\") : 0,","  'indents_open'     => tableExists($pdo,'indents')           ? safeCount($pdo, \"SELECT COUNT(*) FROM indents WHERE COALESCE(status,'') NOT IN ('closed','cancelled')\") : 0,","  'rfqs_open'        => tableExists($pdo,'rfqs')              ? safeCount($pdo, \"SELECT COUNT(*) FROM rfqs WHERE status IN ('draft','sent','quoted')\") : 0,","  'vquotes_pipe'     => tableExists($pdo,'rfq_quotes')        ? safeCount($pdo, \"SELECT COUNT(*) FROM rfq_quotes WHERE status IN ('received','revised','shortlisted')\") : 0,","  'po_open'          => tableExists($pdo,'purchase_orders')   ? safeCount($pdo, \"SELECT COUNT(*) FROM purchase_orders WHERE status NOT IN ('closed','cancelled')\") : 0,","  'grn_today'        => tableExists($pdo,'grn')               ? safeCount($pdo, \"SELECT COUNT(*) FROM grn WHERE grn_date = ?\", [$today]) : 0,","  'issues_today'     => tableExists($pdo,'material_issues')   ? safeCount($pdo, \"SELECT COUNT(*) FROM material_issues WHERE issue_date = ?\", [$today]) : 0,","  'pwo_open'         => tableExists($pdo,'process_work_orders') ? safeCount($pdo, \"SELECT COUNT(*) FROM process_work_orders WHERE status IN ('planned','in_progress')\") : 0,","  'gatepass_today'   => tableExists($pdo,'gatepasses')        ? safeCount($pdo, \"SELECT COUNT(*) FROM gatepasses WHERE gp_date = ?\", [$today]) : 0,","  'unread'           => tableExists($pdo,'notifications')     ? safeCount($pdo, \"SELECT COUNT(*) FROM notifications WHERE is_read=0\") : 0,","];","","// --- Lists: Purchase pipeline (recent) ---","$indents = tableExists($pdo,'indents')","  ? safeRows($pdo, \"SELECT id, indent_no, status, created_at FROM indents ORDER BY id DESC\", [], 6) : [];","$rfqs = tableExists($pdo,'rfqs')","  ? safeRows($pdo, \"SELECT id, rfq_no, status, created_at FROM rfqs ORDER BY id DESC\", [], 6) : [];","$vquotes = tableExists($pdo,'rfq_quotes')","  ? safeRows($pdo, \"SELECT id, quote_no, status, quote_date FROM rfq_quotes ORDER BY id DESC\", [], 6) : [];","$pos = tableExists($pdo,'purchase_orders')","  ? safeRows($pdo, \"SELECT id, po_no, supplier_id, status, po_date FROM purchase_orders ORDER BY id DESC\", [], 6) : [];","","// --- Lists: Stores today (GRN / Issues / Gatepasses) ---","$grnToday = tableExists($pdo,'grn')","  ? safeRows($pdo, \"SELECT g.id, g.grn_no, g.grn_date, p.name AS supplier_name, w.name AS warehouse_name","                    FROM grn g","                    LEFT JOIN parties p ON p.id = g.supplier_id","                    LEFT JOIN warehouses w ON w.id = g.received_at_warehouse_id","                    WHERE g.grn_date = ?","                    ORDER BY g.id DESC\", [$today], 8) : [];","$issuesToday = tableExists($pdo,'material_issues')","  ? safeRows($pdo, \"SELECT mi.id, mi.issue_no, mi.issue_date, w.name AS from_wh","                    FROM material_issues mi","                    LEFT JOIN warehouses w ON w.id = mi.issued_from_warehouse_id","                    WHERE mi.issue_date = ?","                    ORDER BY mi.id DESC\", [$today], 8) : [];","$gatepassesToday = tableExists($pdo,'gatepasses')","  ? safeRows($pdo, \"SELECT id, gp_no, gp_date, type, vehicle_no FROM gatepasses WHERE gp_date = ? ORDER BY id DESC\", [$today], 8) : [];","","// --- Lists: Production & Maintenance (compact) ---","$pwoOpen = tableExists($pdo,'process_work_orders')","  ? safeRows($pdo, \"SELECT id, pwo_no, status, due_date FROM process_work_orders WHERE status IN ('planned','in_progress') ORDER BY id DESC\", [], 6) : [];","$maintTasks = tableExists($pdo,'maintenance_wo_tasks')","  ? safeRows($pdo, \"SELECT t.id, t.wo_id, t.task, t.status FROM maintenance_wo_tasks t ORDER BY t.id DESC\", [], 6) : [];","","// --- Notifications ---","$unread = tableExists($pdo,'notifications')","  ? safeRows($pdo, \"SELECT id, title, created_at FROM notifications WHERE is_read=0 ORDER BY id DESC\", [], 6) : [];","","// --- CRM (for the CRM tab inside dashboard) ---","$crm = [","  'accounts'       => tableExists($pdo,'crm_accounts')    ? safeCount($pdo, \"SELECT COUNT(*) FROM crm_accounts WHERE deleted_at IS NULL\") : 0,","  'contacts'       => tableExists($pdo,'crm_contacts')    ? safeCount($pdo, \"SELECT COUNT(*) FROM crm_contacts WHERE deleted_at IS NULL\") : 0,","  'leads_open'     => tableExists($pdo,'crm_leads')       ? safeCount($pdo, \"SELECT COUNT(*) FROM crm_leads WHERE deleted_at IS NULL AND status IN ('New','In Progress')\") : 0,","  'quotes_sent'    => tableExists($pdo,'sales_quotes')    ? safeCount($pdo, \"SELECT COUNT(*) FROM sales_quotes WHERE deleted_at IS NULL AND status='Sent'\") : 0,","  'quotes_draft'   => tableExists($pdo,'sales_quotes')    ? safeCount($pdo, \"SELECT COUNT(*) FROM sales_quotes WHERE deleted_at IS NULL AND status='Draft'\") : 0,","  'orders_ip'      => tableExists($pdo,'sales_orders')    ? safeCount($pdo, \"SELECT COUNT(*) FROM sales_orders WHERE deleted_at IS NULL AND status IN ('Confirmed','In Progress')\") : 0,","  'acts_due7'      => tableExists($pdo,'crm_activities')  ? safeCount($pdo, \"SELECT COUNT(*) FROM crm_activities WHERE deleted_at IS NULL AND status IN ('Open','In Progress') AND due_at<=?\", [$in7.' 23:59:59']) : 0,","];","$crmLeads = tableExists($pdo,'crm_leads')","  ? safeRows($pdo, \"SELECT id, code, title, status, amount, follow_up_on FROM crm_leads WHERE deleted_at IS NULL ORDER BY id DESC\", [], 6) : [];","$crmQuotes = tableExists($pdo,'sales_quotes')","  ? safeRows($pdo, \"SELECT id, code, quote_date, status, grand_total FROM sales_quotes WHERE deleted_at IS NULL ORDER BY id DESC\", [], 6) : [];","$crmOrders = tableExists($pdo,'sales_orders')","  ? safeRows($pdo, \"SELECT id, code, order_date, status, amount FROM sales_orders WHERE deleted_at IS NULL ORDER BY id DESC\", [], 6) : [];","$crmActs = tableExists($pdo,'crm_activities')","  ? safeRows($pdo, \"SELECT id, code, type, subject, due_at, status FROM crm_activities WHERE deleted_at IS NULL AND status IN ('Open','In Progress') ORDER BY due_at ASC\", [], 6) : [];","","// --- page chrome (kept generic) ---","$UI_PATH = __DIR__ . '/ui';","$PAGE_TITLE = 'Dashboard';","$ACTIVE_MENU = 'dashboard';","if (is_file($UI_PATH.'/init.php')) require_once $UI_PATH.'/init.php';","if (is_file($UI_PATH.'/layout_start.php')) require_once $UI_PATH.'/layout_start.php';","","// decide active tab from query (?tab=crm)","$activeTab = ($_GET['tab'] ?? 'ops') === 'crm' ? 'crm' : 'ops';","?>","<div class=\"container-fluid py-3\">","  <div class=\"d-flex align-items-center mb-3\">","    <h4 class=\"mb-0\">Dashboard</h4>","    <ul class=\"nav nav-tabs ms-auto\">","      <li class=\"nav-item\"><a class=\"nav-link <?= $activeTab==='ops'?'active':'' ?>\" href=\"?tab=ops\">Operations</a></li>","      <li class=\"nav-item\"><a class=\"nav-link <?= $activeTab==='crm'?'active':'' ?>\" href=\"?tab=crm\">CRM</a></li>","    </ul>","  </div>","","  <?php if ($activeTab==='ops'): ?>","  <!-- ====================== OPERATIONS TAB ====================== -->","  <div class=\"row g-3\">","    <!-- KPI strip -->","    <div class=\"col-sm-6 col-md-4 col-lg-3\">","      <div class=\"card shadow-sm\">","        <div class=\"card-body\">","          <div class=\"text-muted small\">Active Items</div>","          <div class=\"fs-4 fw-semibold\"><?= (int)$kpi['items_active'] ?></div>","        </div>","      </div>","    </div>","    <div class=\"col-sm-6 col-md-4 col-lg-3\">","      <div class=\"card shadow-sm\">","        <div class=\"card-body\">","          <div class=\"text-muted small\">Active Projects</div>","          <div class=\"fs-4 fw-semibold\"><?= (int)$kpi['projects_active'] ?></div>","        </div>","      </div>","    </div>","    <div class=\"col-sm-6 col-md-4 col-lg-3\">","      <div class=\"card shadow-sm\">","        <div class=\"card-body\">","          <div class=\"text-muted small\">Indents (Open)</div>","          <div class=\"fs-4 fw-semibold\"><?= (int)$kpi['indents_open'] ?></div>","        </div>","      </div>","    </div>","    <div class=\"col-sm-6 col-md-4 col-lg-3\">","      <div class=\"card shadow-sm\">","        <div class=\"card-body\">","          <div class=\"text-muted small\">RFQs (Draft/Sent/Quoted)</div>","          <div class=\"fs-4 fw-semibold\"><?= (int)$kpi['rfqs_open'] ?></div>","        </div>","      </div>","    </div>","    <div class=\"col-sm-6 col-md-4 col-lg-3\">","      <div class=\"card shadow-sm\">","        <div class=\"card-body\">","          <div class=\"text-muted small\">Vendor Quotes (Pipeline)</div>","          <div class=\"fs-4 fw-semibold\"><?= (int)$kpi['vquotes_pipe'] ?></div>","        </div>","      </div>","    </div>","    <div class=\"col-sm-6 col-md-4 col-lg-3\">","      <div class=\"card shadow-sm\">","        <div class=\"card-body\">","          <div class=\"text-muted small\">Purchase Orders (Open)</div>","          <div class=\"fs-4 fw-semibold\"><?= (int)$kpi['po_open'] ?></div>","        </div>","      </div>","    </div>","    <div class=\"col-sm-6 col-md-4 col-lg-3\">","      <div class=\"card shadow-sm\">","        <div class=\"card-body\">","          <div class=\"text-muted small\">GRN Today</div>","          <div class=\"fs-4 fw-semibold\"><?= (int)$kpi['grn_today'] ?></div>","        </div>","      </div>","    </div>","    <div class=\"col-sm-6 col-md-4 col-lg-3\">","      <div class=\"card shadow-sm\">","        <div class=\"card-body\">","          <div class=\"text-muted small\">Issues Today</div>","          <div class=\"fs-4 fw-semibold\"><?= (int)$kpi['issues_today'] ?></div>","        </div>","      </div>","    </div>","    <div class=\"col-sm-6 col-md-4 col-lg-3\">","      <div class=\"card shadow-sm\">","        <div class=\"card-body\">","          <div class=\"text-muted small\">PWOs (Planned/In Progress)</div>","          <div class=\"fs-4 fw-semibold\"><?= (int)$kpi['pwo_open'] ?></div>","        </div>","      </div>","    </div>","    <div class=\"col-sm-6 col-md-4 col-lg-3\">","      <div class=\"card shadow-sm\">","        <div class=\"card-body\">","          <div class=\"text-muted small\">Gate Passes Today</div>","          <div class=\"fs-4 fw-semibold\"><?= (int)$kpi['gatepass_today'] ?></div>","        </div>","      </div>","    </div>","  </div>","","  <!-- Purchase pipeline -->","  <div class=\"row g-3 mt-1\">","    <div class=\"col-lg-3\">","      <div class=\"card shadow-sm h-100\">","        <div class=\"card-header\"><strong>Indents (recent)</strong></div>","        <ul class=\"list-group list-group-flush\">","          <?php if ($indents): foreach ($indents as $r): ?>","            <li class=\"list-group-item d-flex justify-content-between\">","              <span><?= fmt($r['indent_no'] ?? ('#'.$r['id'])) ?></span>","              <span class=\"text-muted small\"><?= fmt($r['status'] ?? '') ?></span>","            </li>","          <?php endforeach; else: ?><li class=\"list-group-item text-muted\">No data</li><?php endif; ?>","        </ul>","        <div class=\"card-footer text-end small\"><a href=\"/purchase/indents_list.php\">Open list \u2192</a></div>","      </div>","    </div>","    <div class=\"col-lg-3\">","      <div class=\"card shadow-sm h-100\">","        <div class=\"card-header\"><strong>RFQs (recent)</strong></div>","        <ul class=\"list-group list-group-flush\">","          <?php if ($rfqs): foreach ($rfqs as $r): ?>","            <li class=\"list-group-item d-flex justify-content-between\">","              <span><?= fmt($r['rfq_no'] ?? ('#'.$r['id'])) ?></span>","              <span class=\"text-muted small\"><?= fmt($r['status'] ?? '') ?></span>","            </li>","          <?php endforeach; else: ?><li class=\"list-group-item text-muted\">No data</li><?php endif; ?>","        </ul>","        <div class=\"card-footer text-end small\"><a href=\"/purchase/rfq_list.php\">Open list \u2192</a></div>","      </div>","    </div>","    <div class=\"col-lg-3\">","      <div class=\"card shadow-sm h-100\">","        <div class=\"card-header\"><strong>Vendor Quotes (recent)</strong></div>","        <ul class=\"list-group list-group-flush\">","          <?php if ($vquotes): foreach ($vquotes as $r): ?>","            <li class=\"list-group-item d-flex justify-content-between\">","              <span><?= fmt($r['quote_no'] ?? ('#'.$r['id'])) ?></span>","              <span class=\"text-muted small\"><?= fmt($r['status'] ?? '') ?></span>","            </li>","          <?php endforeach; else: ?><li class=\"list-group-item text-muted\">No data</li><?php endif; ?>","        </ul>","        <div class=\"card-footer text-end small\"><a href=\"/purchase/quotes_list.php\">Open list \u2192</a></div>","      </div>","    </div>","    <div class=\"col-lg-3\">","      <div class=\"card shadow-sm h-100\">","        <div class=\"card-header\"><strong>Purchase Orders (recent)</strong></div>","        <ul class=\"list-group list-group-flush\">","          <?php if ($pos): foreach ($pos as $r): ?>","            <li class=\"list-group-item d-flex justify-content-between\">","              <span><?= fmt($r['po_no'] ?? ('#'.$r['id'])) ?></span>","              <span class=\"text-muted small\"><?= fmt($r['status'] ?? '') ?></span>","            </li>","          <?php endforeach; else: ?><li class=\"list-group-item text-muted\">No data</li><?php endif; ?>","        </ul>","        <div class=\"card-footer text-end small\"><a href=\"/purchase/po_list.php\">Open list \u2192</a></div>","      </div>","    </div>","  </div>","","  <!-- Stores today -->","  <div class=\"row g-3 mt-1\">","    <div class=\"col-lg-4\">","      <div class=\"card shadow-sm h-100\">","        <div class=\"card-header\"><strong>GRN Today</strong></div>","        <ul class=\"list-group list-group-flush\">","          <?php if ($grnToday): foreach ($grnToday as $g): ?>","            <li class=\"list-group-item d-flex justify-content-between\">","              <span><?= fmt($g['grn_no'] ?? ('#'.$g['id'])) ?></span>","              <span class=\"text-muted small\"><?= fmt(($g['supplier_name'] ?? '')) ?></span>","            </li>","          <?php endforeach; else: ?><li class=\"list-group-item text-muted\">No GRNs today</li><?php endif; ?>","        </ul>","        <div class=\"card-footer text-end small\"><a href=\"/stores/grn_list.php\">Open GRN register \u2192</a></div>","      </div>","    </div>","","    <div class=\"col-lg-4\">","      <div class=\"card shadow-sm h-100\">","        <div class=\"card-header\"><strong>Material Issues Today</strong></div>","        <ul class=\"list-group list-group-flush\">","          <?php if ($issuesToday): foreach ($issuesToday as $m): ?>","            <li class=\"list-group-item d-flex justify-content-between\">","              <span><?= fmt($m['issue_no'] ?? ('#'.$m['id'])) ?></span>","              <span class=\"text-muted small\"><?= fmt($m['from_wh'] ?? '') ?></span>","            </li>","          <?php endforeach; else: ?><li class=\"list-group-item text-muted\">No issues today</li><?php endif; ?>","        </ul>","        <div class=\"card-footer text-end small\"><a href=\"/stores/issues_list.php\">Open issues register \u2192</a></div>","      </div>","    </div>","","    <div class=\"col-lg-4\">","      <div class=\"card shadow-sm h-100\">","        <div class=\"card-header\"><strong>Gate Passes Today</strong></div>","        <ul class=\"list-group list-group-flush\">","          <?php if ($gatepassesToday): foreach ($gatepassesToday as $g): ?>","            <li class=\"list-group-item d-flex justify-content-between\">","              <span><?= fmt($g['gp_no'] ?? ('#'.$g['id'])) ?></span>","              <span class=\"text-muted small\"><?= fmt(($g['type'] ?? '') . ' ' . ($g['vehicle_no'] ?? '')) ?></span>","            </li>","          <?php endforeach; else: ?><li class=\"list-group-item text-muted\">No gate passes today</li><?php endif; ?>","        </ul>","        <div class=\"card-footer text-end small\"><a href=\"/stores/gatepass_list.php\">Open gate pass register \u2192</a></div>","      </div>","    </div>","  </div>","","  <!-- Production & Maintenance + Notifications -->","  <div class=\"row g-3 mt-1\">","    <div class=\"col-lg-8\">","      <div class=\"card shadow-sm h-100\">","        <div class=\"card-header\"><strong>Production Work Orders (open)</strong></div>","        <ul class=\"list-group list-group-flush\">","          <?php if ($pwoOpen): foreach ($pwoOpen as $p): ?>","            <li class=\"list-group-item d-flex justify-content-between\">","              <span><?= fmt($p['pwo_no'] ?? ('#'.$p['id'])) ?></span>","              <span class=\"text-muted small\"><?= fmt(($p['status'] ?? '')) ?></span>","            </li>","          <?php endforeach; else: ?><li class=\"list-group-item text-muted\">No open PWOs</li><?php endif; ?>","        </ul>","        <div class=\"card-footer text-end small\"><a href=\"/production/pwo_list.php\">Open PWO list \u2192</a></div>","      </div>","    </div>","    <div class=\"col-lg-4\">","      <div class=\"card shadow-sm h-100\">","        <div class=\"card-header d-flex align-items-center\"><i class=\"bi bi-bell me-2\"></i><strong>Unread Notifications</strong><span class=\"ms-auto text-muted small\"><?= (int)$kpi['unread'] ?></span></div>","        <ul class=\"list-group list-group-flush\">","          <?php if ($unread): foreach ($unread as $n): ?>","            <li class=\"list-group-item d-flex justify-content-between\">","              <span><?= fmt($n['title'] ?? 'Notification') ?></span>","              <span class=\"text-muted small\"><?= fmt($n['created_at'] ?? '') ?></span>","            </li>","          <?php endforeach; else: ?><li class=\"list-group-item text-muted\">All caught up</li><?php endif; ?>","        </ul>","        <div class=\"card-footer text-end small\"><a href=\"/notifications/center.php\">Open inbox \u2192</a></div>","      </div>","    </div>","  </div>","  <?php else: ?>","  <!-- ======================== CRM TAB ======================== -->","  <div class=\"row g-3\">","    <!-- CRM KPIs -->","    <div class=\"col-sm-6 col-md-4 col-lg-3\"><div class=\"card shadow-sm\"><div class=\"card-body\"><div class=\"text-muted small\">Accounts</div><div class=\"fs-4 fw-semibold\"><?= (int)$crm['accounts'] ?></div></div></div></div>","    <div class=\"col-sm-6 col-md-4 col-lg-3\"><div class=\"card shadow-sm\"><div class=\"card-body\"><div class=\"text-muted small\">Contacts</div><div class=\"fs-4 fw-semibold\"><?= (int)$crm['contacts'] ?></div></div></div></div>","    <div class=\"col-sm-6 col-md-4 col-lg-3\"><div class=\"card shadow-sm\"><div class=\"card-body\"><div class=\"text-muted small\">Leads (Open)</div><div class=\"fs-4 fw-semibold\"><?= (int)$crm['leads_open'] ?></div></div></div></div>","    <div class=\"col-sm-6 col-md-4 col-lg-3\"><div class=\"card shadow-sm\"><div class=\"card-body\"><div class=\"text-muted small\">Activities (Due \u2264 7d)</div><div class=\"fs-4 fw-semibold\"><?= (int)$crm['acts_due7'] ?></div></div></div></div>","    <div class=\"col-sm-6 col-md-4 col-lg-3\"><div class=\"card shadow-sm\"><div class=\"card-body\"><div class=\"text-muted small\">Sales Quotes (Draft)</div><div class=\"fs-4 fw-semibold\"><?= (int)$crm['quotes_draft'] ?></div></div></div></div>","    <div class=\"col-sm-6 col-md-4 col-lg-3\"><div class=\"card shadow-sm\"><div class=\"card-body\"><div class=\"text-muted small\">Sales Quotes (Sent)</div><div class=\"fs-4 fw-semibold\"><?= (int)$crm['quotes_sent'] ?></div></div></div></div>","    <div class=\"col-sm-6 col-md-4 col-lg-3\"><div class=\"card shadow-sm\"><div class=\"card-body\"><div class=\"text-muted small\">Sales Orders (WIP)</div><div class=\"fs-4 fw-semibold\"><?= (int)$crm['orders_ip'] ?></div></div></div></div>","  </div>","","  <div class=\"row g-3 mt-1\">","    <div class=\"col-lg-4\">","      <div class=\"card shadow-sm h-100\">","        <div class=\"card-header\"><strong>Recent Leads</strong></div>","        <ul class=\"list-group list-group-flush\">","          <?php if ($crmLeads): foreach ($crmLeads as $r): ?>","            <li class=\"list-group-item d-flex justify-content-between\">","              <span><?= fmt(($r['code'] ?? ('#'.$r['id'])) . ' \u00b7 ' . ($r['title'] ?? '')) ?></span>","              <span class=\"text-muted small\"><?= fmt($r['status'] ?? '') ?></span>","            </li>","          <?php endforeach; else: ?><li class=\"list-group-item text-muted\">No leads</li><?php endif; ?>","        </ul>","        <div class=\"card-footer text-end small\"><a href=\"/crm_leads/crm_leads_list.php\">Open leads \u2192</a></div>","      </div>","    </div>","    <div class=\"col-lg-4\">","      <div class=\"card shadow-sm h-100\">","        <div class=\"card-header\"><strong>Recent Sales Quotes</strong></div>","        <ul class=\"list-group list-group-flush\">","          <?php if ($crmQuotes): foreach ($crmQuotes as $r): ?>","            <li class=\"list-group-item d-flex justify-content-between\">","              <span><?= fmt($r['code'] ?? ('#'.$r['id'])) ?></span>","              <span class=\"text-muted small\"><?= fmt($r['status'] ?? '') ?></span>","            </li>","          <?php endforeach; else: ?><li class=\"list-group-item text-muted\">No quotes</li><?php endif; ?>","        </ul>","        <div class=\"card-footer text-end small\"><a href=\"/sales_quotes/sales_quotes_list.php\">Open quotes \u2192</a></div>","      </div>","    </div>","    <div class=\"col-lg-4\">","      <div class=\"card shadow-sm h-100\">","        <div class=\"card-header\"><strong>Upcoming Activities</strong></div>","        <ul class=\"list-group list-group-flush\">","          <?php if ($crmActs): foreach ($crmActs as $r): ?>","            <li class=\"list-group-item d-flex justify-content-between\">","              <span><?= fmt(($r['type'] ?? '').' \u00b7 '.($r['subject'] ?? '')) ?></span>","              <span class=\"text-muted small\"><?= fmt($r['due_at'] ?? '') ?></span>","            </li>","          <?php endforeach; else: ?><li class=\"list-group-item text-muted\">No activities</li><?php endif; ?>","        </ul>","        <div class=\"card-footer text-end small\"><a href=\"/crm/activities_list.php\">Open activities \u2192</a></div>","      </div>","    </div>","  </div>","  <?php endif; ?>","</div>","","<?php if (is_file($UI_PATH.'/layout_end.php')) require_once $UI_PATH.'/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/accounts/journals_list.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/accounts/journals_list.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_permission('accounts.view');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$q   = trim($_GET['q'] ?? '');","$vt  = trim($_GET['vt'] ?? '');","$df  = trim($_GET['df'] ?? ''); // date from","$dt  = trim($_GET['dt'] ?? ''); // date to","$pg  = max(1, (int)($_GET['page'] ?? 1));","$pp  = 20;","$off = ($pg-1)*$pp;","","$where=[]; $P=[];","if ($q  !== '') { $where[]=\"(j.voucher_no LIKE ? OR j.ref_doc_type LIKE ? OR j.ref_doc_id LIKE ? OR j.narration LIKE ?)\"; array_push($P,\"%$q%\",\"%$q%\",\"%$q%\",\"%$q%\"); }","if ($vt !== '') { $where[]=\"j.voucher_type=?\"; $P[]=$vt; }","if ($df !== '') { $where[]=\"j.voucher_date>=?\"; $P[]=$df; }","if ($dt !== '') { $where[]=\"j.voucher_date<=?\"; $P[]=$dt; }","$W = $where ? 'WHERE '.implode(' AND ',$where) : '';","","$cnt = $pdo->prepare(\"SELECT COUNT(*) FROM journals j $W\");","$cnt->execute($P);","$total = (int)$cnt->fetchColumn();","","$sql = \"SELECT j.* FROM journals j $W ORDER BY j.voucher_date DESC, j.id DESC LIMIT $pp OFFSET $off\";","$st  = $pdo->prepare($sql);","$st->execute($P);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","function h(?string $v){ return htmlspecialchars((string)$v, ENT_QUOTES,'UTF-8'); }","","$types = ['JV'=>'Journal', 'CPV'=>'Cash Pay', 'CRV'=>'Cash Receive', 'CNV'=>'Credit Note', 'APB'=>'AP Bill', 'ARV'=>'AR Receipt'];","$typeColors = [","  'JV'=>'secondary', 'CPV'=>'warning', 'CRV'=>'info',","  'CNV'=>'dark', 'APB'=>'primary', 'ARV'=>'success'","];","","$pages = (int)ceil($total / $pp);","$from  = $total ? ($off + 1) : 0;","$to    = min($off + $pp, $total);","","/** UI includes for sidebar/layout */","$UI_PATH     = __DIR__ . '/../ui';","$PAGE_TITLE  = 'Journals';","$ACTIVE_MENU = 'accounts'; // optional, for highlight if your layout uses it","","require_once $UI_PATH . '/init.php';","require_once $UI_PATH . '/layout_start.php';","?>","<div class=\"container py-4\">","","  <!-- Header + Actions -->","  <div class=\"d-flex align-items-center gap-2 mb-3\">","    <h1 class=\"h4 mb-0\"><i class=\"bi bi-journal-text me-2\"></i>Journals</h1>","    <span class=\"text-muted small ms-1\"><?= $total ? \"{$from}\u2013{$to} of {$total}\" : \"No records\" ?></span>","    <div class=\"ms-auto d-flex gap-2\">","      <a class=\"btn btn-outline-secondary btn-sm\" href=\"journals_list.php\"><i class=\"bi bi-arrow-counterclockwise\"></i> Reset</a>","      <a class=\"btn btn-primary btn-sm\" href=\"journals_form.php\"><i class=\"bi bi-plus-lg\"></i> New Journal</a>","    </div>","  </div>","","  <!-- Filters (Sticky) -->","  <div class=\"card shadow-sm rounded-4 sticky-top mb-3\" style=\"top: 72px; z-index: 1030;\">","    <div class=\"card-body py-2\">","      <form class=\"row g-2 align-items-end\" method=\"get\">","        <div class=\"col-12 col-md-3\">","          <label class=\"form-label small mb-1\">Search</label>","          <input class=\"form-control\" name=\"q\" value=\"<?=h($q)?>\" placeholder=\"Voucher/Narration/Ref\">","        </div>","        <div class=\"col-6 col-md-2\">","          <label class=\"form-label small mb-1\">Type</label>","          <select class=\"form-select\" name=\"vt\">","            <option value=\"\">All Types</option>","            <?php foreach(array_keys($types) as $opt): ?>","              <option value=\"<?=$opt?>\" <?=$vt===$opt?'selected':''?>><?=$opt?></option>","            <?php endforeach; ?>","          </select>","        </div>","        <div class=\"col-6 col-md-2\">","          <label class=\"form-label small mb-1\">From</label>","          <input type=\"date\" class=\"form-control\" name=\"df\" value=\"<?=h($df)?>\">","        </div>","        <div class=\"col-6 col-md-2\">","          <label class=\"form-label small mb-1\">To</label>","          <input type=\"date\" class=\"form-control\" name=\"dt\" value=\"<?=h($dt)?>\">","        </div>","        <div class=\"col-6 col-md-3 d-grid\">","          <button class=\"btn btn-primary\"><i class=\"bi bi-funnel\"></i> Apply Filters</button>","        </div>","      </form>","","      <?php if ($q!=='' || $vt!=='' || $df!=='' || $dt!==''): ?>","        <div class=\"mt-2\">","          <span class=\"text-muted small me-1\">Active:</span>","          <?php if($q!==''): ?><span class=\"badge rounded-pill text-bg-secondary me-1\">q: <?=h($q)?></span><?php endif; ?>","          <?php if($vt!==''): ?><span class=\"badge rounded-pill text-bg-secondary me-1\">type: <?=h($vt)?></span><?php endif; ?>","          <?php if($df!==''): ?><span class=\"badge rounded-pill text-bg-secondary me-1\">from: <?=h($df)?></span><?php endif; ?>","          <?php if($dt!==''): ?><span class=\"badge rounded-pill text-bg-secondary me-1\">to: <?=h($dt)?></span><?php endif; ?>","        </div>","      <?php endif; ?>","    </div>","  </div>","","  <!-- Table -->","  <div class=\"card shadow-sm rounded-4\">","    <div class=\"table-responsive\">","      <table class=\"table table-hover align-middle mb-0\">","        <thead class=\"table-light\">","          <tr>","            <th style=\"width:160px\">Voucher</th>","            <th style=\"width:120px\">Type</th>","            <th style=\"width:120px\">Date</th>","            <th>Reference</th>","            <th>Narration</th>","            <th style=\"width:110px\" class=\"text-center\">Status</th>","            <th style=\"width:80px\" class=\"text-end\">Actions</th>","          </tr>","        </thead>","        <tbody>","        <?php if(!$rows): ?>","          <tr><td colspan=\"7\" class=\"text-center py-4 text-muted\">No vouchers found</td></tr>","        <?php else: foreach($rows as $r):","          $t  = (string)($r['voucher_type'] ?? '');","          $tc = $typeColors[$t] ?? 'secondary';","          $ts = $types[$t]      ?? $t;","          $status = (string)($r['status'] ?? '');","          $sb = $status==='posted' ? 'success' : ($status==='draft' ? 'warning' : 'secondary');","          $ref = trim(($r['ref_doc_type']??'').' #'.($r['ref_doc_id']??''));","        ?>","          <tr>","            <td>","              <a href=\"journals_view.php?id=<?= (int)$r['id'] ?>\" class=\"fw-semibold text-decoration-none\">","                <?= h($r['voucher_no'] ?: ('#'.$r['id'])) ?>","              </a>","              <div class=\"small text-muted\">#<?= (int)$r['id'] ?></div>","            </td>","            <td><span class=\"badge text-bg-<?= $tc ?>\"><?= h($ts) ?></span></td>","            <td><?= h($r['voucher_date'] ?? '') ?></td>","            <td class=\"text-muted\"><?= h($ref) ?></td>","            <td style=\"max-width:520px;\"><div class=\"text-truncate\"><?= h($r['narration'] ?? '') ?></div></td>","            <td class=\"text-center\">","              <span class=\"badge text-bg-<?= $sb ?>\"><?= h($status ?: '\u2014') ?></span>","            </td>","            <td class=\"text-end\">","              <div class=\"btn-group btn-group-sm\">","                <a class=\"btn btn-outline-secondary\" href=\"journals_view.php?id=<?= (int)$r['id'] ?>\" title=\"View\"><i class=\"bi bi-eye\"></i></a>","                <a class=\"btn btn-outline-secondary\" href=\"journals_print.php?id=<?= (int)$r['id'] ?>\" title=\"Print\" target=\"_blank\" rel=\"noopener\"><i class=\"bi bi-printer\"></i></a>","              </div>","            </td>","          </tr>","        <?php endforeach; endif; ?>","        </tbody>","      </table>","    </div>","","    <!-- Footer / Pagination -->","    <div class=\"card-footer d-flex align-items-center justify-content-between\">","      <div class=\"small text-muted\">","        <?= $total ? \"Showing {$from}\u2013{$to} of {$total}\" : \"Nothing to show\" ?>","      </div>","      <?php if($pages>1): ?>","        <nav>","          <ul class=\"pagination pagination-sm mb-0\">","            <?php $u = $_GET; $u['page'] = max(1, $pg-1); ?>","            <li class=\"page-item <?= $pg<=1?'disabled':'' ?>\">","              <a class=\"page-link\" href=\"?<?= http_build_query($u) ?>\" aria-label=\"Previous\"><span aria-hidden=\"true\">&laquo;</span></a>","            </li>","            <?php for($i=1;$i<=$pages;$i++): $u=$_GET; $u['page']=$i; ?>","              <li class=\"page-item <?= $i===$pg?'active':'' ?>\">","                <a class=\"page-link\" href=\"?<?= http_build_query($u) ?>\"><?= $i ?></a>","              </li>","            <?php endfor; ?>","            <?php $u = $_GET; $u['page'] = min($pages, $pg+1); ?>","            <li class=\"page-item <?= $pg>=$pages?'disabled':'' ?>\">","              <a class=\"page-link\" href=\"?<?= http_build_query($u) ?>\" aria-label=\"Next\"><span aria-hidden=\"true\">&raquo;</span></a>","            </li>","          </ul>","        </nav>","      <?php endif; ?>","    </div>","  </div>","","</div>","<?php require_once $UI_PATH . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/accounts/trial_balance.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/accounts/trial_balance.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_permission('accounts.view');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","function h(?string $v){ return htmlspecialchars((string)$v, ENT_QUOTES,'UTF-8'); }","","$asof = $_GET['asof'] ?? date('Y-m-d');","","// fetch balances by account as of date","$sql = \"","SELECT ac.id, ac.code, ac.name, ac.type,","       COALESCE(SUM(CASE WHEN j.voucher_date <= :asof THEN jl.debit  ELSE 0 END),0) AS dr,","       COALESCE(SUM(CASE WHEN j.voucher_date <= :asof THEN jl.credit ELSE 0 END),0) AS cr","FROM accounts_chart ac","LEFT JOIN journal_lines jl ON jl.account_id = ac.id","LEFT JOIN journals j ON j.id = jl.journal_id","GROUP BY ac.id, ac.code, ac.name, ac.type","ORDER BY ac.code","\";","$st = $pdo->prepare($sql);","$st->execute([':asof'=>$asof]);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","// compute balances DR/CR side","$totalDR = 0.00; $totalCR = 0.00;","foreach ($rows as &$r) {","  $bal = (float)$r['dr'] - (float)$r['cr'];","  if ($bal >= 0) { $r['dr_bal'] = $bal; $r['cr_bal'] = 0.00; $totalDR += $bal; }","  else           { $r['dr_bal'] = 0.00; $r['cr_bal'] = -$bal; $totalCR += -$bal; }","}","unset($r);","?>","<!doctype html>","<html lang=\"en\" data-bs-theme=\"light\">","<head>","  <meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <title>Trial Balance</title>","  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\">","</head>","<body class=\"bg-body-tertiary\">","<div class=\"container py-4\">","  <div class=\"d-flex align-items-center mb-3\">","    <h1 class=\"h4 mb-0\">Trial Balance</h1>","    <form class=\"ms-auto d-flex gap-2\" method=\"get\">","      <input type=\"date\" class=\"form-control\" name=\"asof\" value=\"<?=h($asof)?>\">","      <button class=\"btn btn-primary\">Update</button>","    </form>","  </div>","","  <div class=\"table-responsive bg-white rounded shadow-sm\">","    <table class=\"table table-sm mb-0\">","      <thead class=\"table-light\">","        <tr>","          <th style=\"width:120px\">Code</th>","          <th>Account</th>","          <th style=\"width:120px\">Type</th>","          <th class=\"text-end\" style=\"width:140px\">Debit</th>","          <th class=\"text-end\" style=\"width:140px\">Credit</th>","        </tr>","      </thead>","      <tbody>","      <?php foreach($rows as $r): if($r['dr']==0 && $r['cr']==0) continue; ?>","        <tr>","          <td><?=h($r['code'])?></td>","          <td><?=h($r['name'])?></td>","          <td><?=h($r['type'])?></td>","          <td class=\"text-end\"><?=number_format((float)$r['dr_bal'],2)?></td>","          <td class=\"text-end\"><?=number_format((float)$r['cr_bal'],2)?></td>","        </tr>","      <?php endforeach; ?>","      </tbody>","      <tfoot class=\"table-light\">","        <tr>","          <th colspan=\"3\" class=\"text-end\">Totals</th>","          <th class=\"text-end\"><?=number_format($totalDR,2)?></th>","          <th class=\"text-end\"><?=number_format($totalCR,2)?></th>","        </tr>","      </tfoot>","    </table>","  </div>","</div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/accounts/diag_posting.php": ["<?php","declare(strict_types=1);","","// Optional: protect with login if your auth is already wired","// require_once __DIR__ . '/../includes/auth.php';","","require_once __DIR__ . '/../includes/services/Accounts/PostingService.php';","use Accounts\\PostingService;","","header('Content-Type: text/plain');","","try {","  $today = date('Y-m-d');","","  // Simple JV: DR Refreshments 100, CR Cash 100","  $jid = PostingService::createSimpleJV(","    $today,","    '6010',          // Kitchen & Office Refreshments (DR)","    100.00,","    '1010',          // Cash-in-hand (CR)","    ['narration' => 'DIAG: simple JV test', 'posted_by' => 1]","  );","","  echo \"OK \u2705 Journal created. ID={$jid}\\n\";","  echo \"Check tables: journals + journal_lines.\\n\";","} catch (Throwable $e) {","  echo \"ERR \u274c \" . $e->getMessage();","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/accounts/ledger.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/accounts/ledger.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_permission('accounts.view');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","function h(?string $v){ return htmlspecialchars((string)$v, ENT_QUOTES,'UTF-8'); }","","$acc = (int)($_GET['account_id'] ?? 0);","$df  = $_GET['df'] ?? date('Y-m-01');","$dt  = $_GET['dt'] ?? date('Y-m-d');","","// accounts dropdown","$accs = $pdo->query(\"SELECT id, code, name FROM accounts_chart WHERE is_posting=1 AND active=1 ORDER BY code\")->fetchAll(PDO::FETCH_ASSOC);","","// opening balance (till day before df)","$open = 0.00;","if ($acc>0) {","  $o = $pdo->prepare(\"","    SELECT COALESCE(SUM(debit),0) - COALESCE(SUM(credit),0) AS bal","    FROM journal_lines jl","    JOIN journals j ON j.id=jl.journal_id","    WHERE jl.account_id=? AND j.voucher_date < ?","  \");","  $o->execute([$acc, $df]);","  $open = (float)$o->fetchColumn();","}","","// ledger rows in range","$rows=[];","if ($acc>0) {","  $q = $pdo->prepare(\"","    SELECT j.voucher_date, j.voucher_no, j.voucher_type, j.ref_doc_type, j.ref_doc_id,","           jl.debit, jl.credit, jl.line_memo","    FROM journal_lines jl","    JOIN journals j ON j.id=jl.journal_id","    WHERE jl.account_id=? AND j.voucher_date BETWEEN ? AND ?","    ORDER BY j.voucher_date, j.id, jl.line_no","  \");","  $q->execute([$acc, $df, $dt]);","  $rows = $q->fetchAll(PDO::FETCH_ASSOC);","}","?>","<!doctype html>","<html lang=\"en\" data-bs-theme=\"light\">","<head>","  <meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <title>Ledger</title>","  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\">","</head>","<body class=\"bg-body-tertiary\">","<div class=\"container py-4\">","  <div class=\"d-flex align-items-center mb-3\">","    <h1 class=\"h4 mb-0\">Ledger</h1>","  </div>","","  <form class=\"row g-2 align-items-end mb-3\" method=\"get\">","    <div class=\"col-md-5\">","      <label class=\"form-label\">Account</label>","      <select class=\"form-select\" name=\"account_id\" required>","        <option value=\"\">Select account...</option>","        <?php foreach($accs as $a): ?>","          <option value=\"<?=$a['id']?>\" <?=$acc===(int)$a['id']?'selected':''?>>","            <?=h($a['code'].' - '.$a['name'])?>","          </option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-md-2\">","      <label class=\"form-label\">From</label>","      <input type=\"date\" class=\"form-control\" name=\"df\" value=\"<?=h($df)?>\" required>","    </div>","    <div class=\"col-md-2\">","      <label class=\"form-label\">To</label>","      <input type=\"date\" class=\"form-control\" name=\"dt\" value=\"<?=h($dt)?>\" required>","    </div>","    <div class=\"col-md-3\">","      <button class=\"btn btn-primary w-100\">Show</button>","    </div>","  </form>","","  <?php if($acc>0): ?>","  <div class=\"card shadow-sm\">","    <div class=\"card-header d-flex justify-content-between\">","      <span>Opening Balance as of <?=h(date('d-M-Y', strtotime(\"$df -1 day\")))?>:</span>","      <strong><?=number_format($open,2)?></strong>","    </div>","    <div class=\"table-responsive\">","      <table class=\"table table-sm mb-0\">","        <thead class=\"table-light\">","          <tr>","            <th style=\"width:120px\">Date</th>","            <th style=\"width:160px\">Voucher</th>","            <th style=\"width:90px\">Type</th>","            <th>Memo</th>","            <th class=\"text-end\" style=\"width:120px\">Debit</th>","            <th class=\"text-end\" style=\"width:120px\">Credit</th>","            <th class=\"text-end\" style=\"width:140px\">Running</th>","          </tr>","        </thead>","        <tbody>","        <?php $run=$open;","          if(!$rows): ?>","          <tr><td colspan=\"7\" class=\"text-center py-4 text-muted\">No entries</td></tr>","        <?php else:","          foreach($rows as $r):","            $run += (float)$r['debit'] - (float)$r['credit']; ?>","          <tr>","            <td><?=h($r['voucher_date'])?></td>","            <td><?=h($r['voucher_no'])?></td>","            <td><?=h($r['voucher_type'])?></td>","            <td><?=h($r['line_memo'] ?? ($r['ref_doc_type'].' #'.$r['ref_doc_id']))?></td>","            <td class=\"text-end\"><?=number_format((float)$r['debit'],2)?></td>","            <td class=\"text-end\"><?=number_format((float)$r['credit'],2)?></td>","            <td class=\"text-end fw-semibold\"><?=number_format($run,2)?></td>","          </tr>","        <?php endforeach; endif; ?>","        </tbody>","      </table>","    </div>","  </div>","  <?php endif; ?>","</div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/accounts/diag_apbill.php": ["<?php","declare(strict_types=1);","","// Optional: require login","// require_once __DIR__ . '/../includes/auth.php';","","require_once __DIR__ . '/../includes/services/Accounts/PostingService.php';","require_once __DIR__ . '/../includes/services/Accounts/TaxStagingService.php';","","use Accounts\\PostingService;","","header('Content-Type: text/plain');","","try {","  $bill = [","    'id'               => 9991,","    'bill_no'          => 'TEST-AP-001',","    'bill_date'        => date('Y-m-d'),","    'vendor_party_id'  => 1,                   // use an existing party id if you have it; else leave null","    'vendor_gstin'     => '24ABCDE1234F1Z5',","    'pos_state'        => '24',","    'project_id'       => 1,","    'posted_by'        => 1","  ];","","  $lines = [","    // Material line (intra-state 18% GST)","    [","      'id'             => 1,","      'taxable_value'  => 1000.00,","      'cgst'           => 90.00,","      'sgst'           => 90.00,","      'igst'           => 0.00,","      'gst_rate'       => 18.000,","      'hsn'            => '7208',","      'qty'            => 10.000,","      'uom_id'         => 2,      // adjust if needed","      'is_service'     => 0","    ],","    // Service line (inter-state 18% GST)","    [","      'id'             => 2,","      'taxable_value'  => 500.00,","      'cgst'           => 0.00,","      'sgst'           => 0.00,","      'igst'           => 90.00,","      'gst_rate'       => 18.000,","      'hsn'            => '9987',","      'qty'            => 1.000,","      'uom_id'         => 1,","      'is_service'     => 1","    ],","  ];","","  $jid = PostingService::postAPBill($bill, $lines);","","  echo \"OK \u2705 AP Bill posted. Journal ID={$jid}\\n\";","  echo \"- DR 1310 Inventory: 1000.00\\n\";","  echo \"- DR 5010 Expense : 500.00\\n\";","  echo \"- DR 2210 CGST    : 90.00\\n\";","  echo \"- DR 2220 SGST    : 90.00\\n\";","  echo \"- DR 2230 IGST    : 90.00\\n\";","  echo \"- CR 2010 Vendor  : 1770.00\\n\";","  echo \"Also staged 2 lines in tax_transactions for GST.\\n\";","} catch (Throwable $e) {","  echo \"ERR \u274c \" . $e->getMessage();","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/hr/employees_list.php": ["<?php","/** PATH: /public_html/hr/employees_list.php (with Create/Edit User button) */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('hr.employee.view');","","$canManageEmp  = has_permission('hr.employee.manage');","$canManageUser = has_permission('core.user.manage');","","$PAGE_TITLE  = 'Employees';","$ACTIVE_MENU = 'hr.employees';","","$LAYOUT_DIR = null;","foreach ([__DIR__ . '/../ui', dirname(__DIR__) . '/ui', $_SERVER['DOCUMENT_ROOT'] . '/ui'] as $dir) {","  if (is_dir($dir)) { $LAYOUT_DIR = rtrim($dir, '/'); break; }","}","if ($LAYOUT_DIR) include $LAYOUT_DIR . '/layout_start.php'; else echo '<!doctype html><html><head><meta charset=\"utf-8\"><title>'.$PAGE_TITLE.'</title></head><body><div class=\"container-fluid\">';","","$pdo = db();","$q = trim($_GET['q'] ?? '');","$sql = \"SELECT e.id, e.code, e.first_name, e.last_name, e.email, e.status, e.grade_level, e.location, d.name AS dept_name,","               u.id AS user_id, u.username","        FROM employees e","        LEFT JOIN departments d ON d.id = e.dept_id","        LEFT JOIN users u ON u.employee_id = e.id","        WHERE (? = '' OR e.first_name LIKE ? OR e.last_name LIKE ? OR e.email LIKE ? OR e.code LIKE ?)","        ORDER BY e.created_at DESC","        LIMIT 500\";","$like = '%'.$q.'%';","$stmt = $pdo->prepare($sql);","$stmt->execute([$q, $like, $like, $like, $like]);","$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 m-0\">Employees</h1>","  <div>","    <?php if ($canManageEmp): ?>","      <a href=\"employees_form.php\" class=\"btn btn-primary btn-sm\">New Employee</a>","    <?php endif; ?>","  </div>","</div>","","<form class=\"mb-3\" method=\"get\">","  <div class=\"input-group input-group-sm\" style=\"max-width: 520px;\">","    <input type=\"text\" class=\"form-control\" name=\"q\" value=\"<?= htmlspecialchars($q) ?>\" placeholder=\"Search name, email, code\">","    <button class=\"btn btn-outline-secondary\">Search</button>","  </div>","</form>","","<div class=\"table-responsive\">","  <table class=\"table table-sm align-middle\">","    <thead class=\"table-light\">","      <tr>","        <th style=\"width:72px\">#</th>","        <th>Code</th>","        <th>Name</th>","        <th>Email</th>","        <th>Dept</th>","        <th>Grade</th>","        <th>Location</th>","        <th>Status</th>","        <th>User</th>","        <th style=\"width: 260px\">Actions</th>","      </tr>","    </thead>","    <tbody>","      <?php foreach ($rows as $r): ?>","        <tr>","          <td><?= (int)$r['id'] ?></td>","          <td><code><?= htmlspecialchars($r['code']) ?></code></td>","          <td><?= htmlspecialchars($r['first_name'].' '.$r['last_name']) ?></td>","          <td><?= htmlspecialchars($r['email']) ?></td>","          <td><?= htmlspecialchars($r['dept_name'] ?? '-') ?></td>","          <td><?= htmlspecialchars((string)$r['grade_level'] ?? '-') ?></td>","          <td><?= htmlspecialchars($r['location'] ?? '-') ?></td>","          <td><span class=\"badge bg-<?= $r['status']==='active'?'success':'secondary' ?>\"><?= htmlspecialchars($r['status']) ?></span></td>","          <td>","            <?php if ($r['user_id']): ?>","              <span class=\"badge bg-info\">#<?= (int)$r['user_id'] ?></span>","              <small class=\"text-muted\"><?= htmlspecialchars($r['username'] ?? '') ?></small>","            <?php else: ?>","              <span class=\"text-muted\">\u2014</span>","            <?php endif; ?>","          </td>","          <td class=\"text-nowrap\">","            <?php if ($canManageEmp): ?>","              <a href=\"employees_form.php?id=<?= (int)$r['id'] ?>\" class=\"btn btn-outline-secondary btn-sm\">Edit</a>","            <?php endif; ?>","","            <?php if ($canManageUser): ?>","              <?php if ($r['user_id']): ?>","                <a href=\"/identity/users_form.php?id=<?= (int)$r['user_id'] ?>\"","                   class=\"btn btn-outline-primary btn-sm\">Edit User</a>","              <?php else: ?>","                <a href=\"/identity/users_form.php?from_employee_id=<?= (int)$r['id'] ?>\"","                   class=\"btn btn-primary btn-sm\">Create User</a>","              <?php endif; ?>","            <?php endif; ?>","","            <?php if ($canManageUser): ?>","              <a target=\"_blank\"","                 href=\"/api/iam_provisioning.php?action=preview&employee_id=<?= (int)$r['id'] ?>\"","                 class=\"btn btn-outline-dark btn-sm\">Preview Access</a>","            <?php endif; ?>","          </td>","        </tr>","      <?php endforeach; ?>","    </tbody>","  </table>","</div>","<?php","if (!empty($LAYOUT_DIR) && is_file($LAYOUT_DIR . '/layout_end.php')) include $LAYOUT_DIR . '/layout_end.php';","else echo '</div></body></html>';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/hr/employees_form.php": ["<?php","/** PATH: /public_html/hr/employees_form.php (enhanced) */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('hr.employee.manage');","","$PAGE_TITLE  = 'Employee Profile';","$ACTIVE_MENU = 'hr.employees';","","/* ---------- Layout start ---------- */","$LAYOUT_DIR = null;","foreach ([__DIR__ . '/../ui', dirname(__DIR__) . '/ui', $_SERVER['DOCUMENT_ROOT'] . '/ui'] as $dir) {","  if (is_dir($dir)) { $LAYOUT_DIR = rtrim($dir, '/'); break; }","}","if ($LAYOUT_DIR) include $LAYOUT_DIR . '/layout_start.php';","else echo '<!doctype html><html><head><meta charset=\"utf-8\"><title>'.$PAGE_TITLE.'</title><link rel=\"stylesheet\" href=\"/assets/bootstrap.min.css\"></head><body><div class=\"container-fluid\">';","/* ---------------------------------- */","","$pdo = db();","$id   = isset($_GET['id']) ? (int)$_GET['id'] : null;","$mode = $id ? 'edit' : 'create';","","/* ---------- Fetch reference data ---------- */","$depts    = $pdo->query(\"SELECT id, name FROM departments ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","$managers = $pdo->query(\"SELECT id, code, first_name, last_name FROM employees ORDER BY first_name, last_name\")->fetchAll(PDO::FETCH_ASSOC);","","/* ---------- Defaults ---------- */","$emp = [","  'code'=>'','first_name'=>'','last_name'=>'','email'=>'','phone'=>'',","  'dob'=>null,'gender'=>null,'marital_status'=>null,'blood_group'=>null,","  'dept_id'=>null,'title'=>'','grade_level'=>null,'employment_type'=>'FullTime','location'=>'',","  'manager_employee_id'=>null,'start_date'=>null,'termination_date'=>null,'status'=>'active',","  'aadhaar'=>'','pan'=>'','uan'=>'','esic'=>'','photo_path'=>null","];","$bank = ['bank_name'=>'','branch'=>'','ifsc'=>'','account_no'=>''];","$addr = [","  'current'   => ['line1'=>'','line2'=>'','city'=>'','state'=>'','pincode'=>'','country'=>'India'],","  'permanent' => ['line1'=>'','line2'=>'','city'=>'','state'=>'','pincode'=>'','country'=>'India']","];","$family = []; // [{name,relation,phone,dob,is_emergency}...]","","/* ---------- Load existing ---------- */","if ($id) {","  $st = $pdo->prepare(\"SELECT * FROM employees WHERE id=?\");","  $st->execute([$id]);","  $row = $st->fetch(PDO::FETCH_ASSOC);","  if (!$row) { http_response_code(404); exit('Employee not found'); }","  $emp = array_merge($emp, $row);","","  // Bank primary","  $st = $pdo->prepare(\"SELECT bank_name,branch,ifsc,account_no FROM employees_bank_accounts WHERE employee_id=? AND is_primary=1 LIMIT 1\");","  $st->execute([$id]);","  if ($tmp = $st->fetch(PDO::FETCH_ASSOC)) $bank = array_merge($bank, $tmp);","","  // Addresses","  $st = $pdo->prepare(\"SELECT type,line1,line2,city,state,pincode,country FROM employees_addresses WHERE employee_id=?\");","  $st->execute([$id]);","  foreach ($st->fetchAll(PDO::FETCH_ASSOC) as $a) {","    $type = $a['type'];","    unset($a['type']);","    if (isset($addr[$type])) $addr[$type] = array_merge($addr[$type], $a);","  }","","  // Family contacts","  $st = $pdo->prepare(\"SELECT name,relation,phone,dob,is_emergency FROM employees_family WHERE employee_id=? ORDER BY id ASC\");","  $st->execute([$id]);","  $family = $st->fetchAll(PDO::FETCH_ASSOC);","}","","/* ---------- Save ---------- */","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  // Collect and validate","  $data = [","    'code' => trim($_POST['code'] ?? ''),","    'first_name' => trim($_POST['first_name'] ?? ''),","    'last_name'  => trim($_POST['last_name'] ?? ''),","    'email' => trim($_POST['email'] ?? ''),","    'phone' => trim($_POST['phone'] ?? ''),","    'dob'   => $_POST['dob'] ?: null,","    'gender'=> $_POST['gender'] ?: null,","    'marital_status' => $_POST['marital_status'] ?: null,","    'blood_group' => $_POST['blood_group'] ?: null,","    'dept_id' => $_POST['dept_id'] !== '' ? (int)$_POST['dept_id'] : null,","    'title' => trim($_POST['title'] ?? ''),","    'grade_level' => $_POST['grade_level'] !== '' ? (int)$_POST['grade_level'] : null,","    'employment_type' => $_POST['employment_type'] ?? 'FullTime',","    'location' => trim($_POST['location'] ?? ''),","    'manager_employee_id' => $_POST['manager_employee_id'] !== '' ? (int)$_POST['manager_employee_id'] : null,","    'start_date' => $_POST['start_date'] ?: null,","    'termination_date' => $_POST['termination_date'] ?: null,","    'status' => $_POST['status'] ?? 'active',","    'aadhaar' => preg_replace('/\\D+/', '', $_POST['aadhaar'] ?? ''),","    'pan'     => strtoupper(trim($_POST['pan'] ?? '')),","    'uan'     => preg_replace('/\\D+/', '', $_POST['uan'] ?? ''),","    'esic'    => preg_replace('/\\s+/', '', $_POST['esic'] ?? ''),","  ];","","  $bank = [","    'bank_name' => trim($_POST['bank_name'] ?? ''),","    'branch'    => trim($_POST['bank_branch'] ?? ''),","    'ifsc'      => strtoupper(str_replace(' ', '', $_POST['bank_ifsc'] ?? '')),","    'account_no'=> trim($_POST['bank_account_no'] ?? ''),","  ];","","  $addr['current'] = [","    'line1'=>trim($_POST['curr_line1'] ?? ''), 'line2'=>trim($_POST['curr_line2'] ?? ''),","    'city'=>trim($_POST['curr_city'] ?? ''), 'state'=>trim($_POST['curr_state'] ?? ''),","    'pincode'=>trim($_POST['curr_pincode'] ?? ''), 'country'=>trim($_POST['curr_country'] ?? 'India')","  ];","  $addr['permanent'] = [","    'line1'=>trim($_POST['perm_line1'] ?? ''), 'line2'=>trim($_POST['perm_line2'] ?? ''),","    'city'=>trim($_POST['perm_city'] ?? ''), 'state'=>trim($_POST['perm_state'] ?? ''),","    'pincode'=>trim($_POST['perm_pincode'] ?? ''), 'country'=>trim($_POST['perm_country'] ?? 'India')","  ];","","  // Family arrays","  $fam_names = $_POST['fam_name'] ?? [];","  $fam_rels  = $_POST['fam_relation'] ?? [];","  $fam_phones= $_POST['fam_phone'] ?? [];","  $fam_dobs  = $_POST['fam_dob'] ?? [];","  $fam_emerg = $_POST['fam_emergency'] ?? []; // indexes checked","  $family = [];","  for ($i=0; $i<count($fam_names); $i++) {","    $n = trim($fam_names[$i] ?? '');","    $r = trim($fam_rels[$i] ?? '');","    if ($n === '' || $r === '') continue;","    $family[] = [","      'name' => $n,","      'relation' => $r,","      'phone' => trim($fam_phones[$i] ?? ''),","      'dob' => ($fam_dobs[$i] ?? '') ?: null,","      'is_emergency' => isset($fam_emerg[$i]) ? 1 : 0,","    ];","  }","","  // Minimal validations","  if ($data['code']==='' || $data['first_name']==='' || $data['last_name']==='' || $data['email']==='') {","    $error = 'Code, First name, Last name, Email are required.';","  } elseif ($data['aadhaar'] && strlen($data['aadhaar']) !== 12) {","    $error = 'Aadhaar must be 12 digits.';","  } elseif ($data['pan'] && !preg_match('/^[A-Z]{5}[0-9]{4}[A-Z]$/', $data['pan'])) {","    $error = 'PAN format invalid.';","  } elseif ($bank['ifsc'] && !preg_match('/^[A-Z]{4}0[A-Z0-9]{6}$/', $bank['ifsc'])) {","    $error = 'IFSC format invalid.';","  } else {","    // Start transaction","    $pdo->beginTransaction();","    try {","      if ($id) {","        $sql = \"UPDATE employees SET code=?, first_name=?, last_name=?, email=?, phone=?, dob=?, gender=?, marital_status=?,","                blood_group=?, dept_id=?, title=?, grade_level=?, employment_type=?, location=?, manager_employee_id=?,","                start_date=?, termination_date=?, status=?, aadhaar=?, pan=?, uan=?, esic=?, updated_at=NOW()","                WHERE id=?\";","        $pdo->prepare($sql)->execute([","          $data['code'],$data['first_name'],$data['last_name'],$data['email'],$data['phone'],$data['dob'],$data['gender'],$data['marital_status'],","          $data['blood_group'],$data['dept_id'],$data['title'],$data['grade_level'],$data['employment_type'],$data['location'],$data['manager_employee_id'],","          $data['start_date'],$data['termination_date'],$data['status'],$data['aadhaar'],$data['pan'],$data['uan'],$data['esic'], $id","        ]);","      } else {","        $sql = \"INSERT INTO employees (code, first_name, last_name, email, phone, dob, gender, marital_status, blood_group, dept_id, title,","                grade_level, employment_type, location, manager_employee_id, start_date, termination_date, status, aadhaar, pan, uan, esic,","                created_at, updated_at)","                VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,NOW(),NOW())\";","        $pdo->prepare($sql)->execute([","          $data['code'],$data['first_name'],$data['last_name'],$data['email'],$data['phone'],$data['dob'],$data['gender'],$data['marital_status'],$data['blood_group'],","          $data['dept_id'],$data['title'],$data['grade_level'],$data['employment_type'],$data['location'],$data['manager_employee_id'],","          $data['start_date'],$data['termination_date'],$data['status'],$data['aadhaar'],$data['pan'],$data['uan'],$data['esic']","        ]);","        $id = (int)$pdo->lastInsertId();","      }","","      // Photo upload","      if (!empty($_FILES['photo']['name']) && is_uploaded_file($_FILES['photo']['tmp_name'])) {","        $allowed = ['image/jpeg'=>'jpg','image/png'=>'png','image/webp'=>'webp'];","        $mime = mime_content_type($_FILES['photo']['tmp_name']);","        if (!isset($allowed[$mime])) throw new RuntimeException('Photo must be JPG/PNG/WebP');","        if ($_FILES['photo']['size'] > 2 * 1024 * 1024) throw new RuntimeException('Photo max 2MB');","","        $ext  = $allowed[$mime];","        $root = rtrim($_SERVER['DOCUMENT_ROOT'], '/');","        $dir  = $root . '/uploads/employees/' . $id;","        if (!is_dir($dir)) mkdir($dir, 0775, true);","        $path = $dir . '/photo.' . $ext;","","        // remove old photo if different ext","        foreach (glob($dir.'/photo.*') as $old) @unlink($old);","","        if (!move_uploaded_file($_FILES['photo']['tmp_name'], $path)) {","          throw new RuntimeException('Failed to save photo');","        }","        $rel = '/uploads/employees/' . $id . '/photo.' . $ext;","        $pdo->prepare(\"UPDATE employees SET photo_path=? WHERE id=?\")->execute([$rel, $id]);","        $emp['photo_path'] = $rel;","      }","","      // Upsert primary bank","      $pdo->prepare(\"DELETE FROM employees_bank_accounts WHERE employee_id=? AND is_primary=1\")->execute([$id]);","      if ($bank['bank_name'] || $bank['account_no'] || $bank['ifsc']) {","        $pdo->prepare(\"INSERT INTO employees_bank_accounts (employee_id, bank_name, branch, ifsc, account_no, is_primary, created_at, updated_at)","                       VALUES (?,?,?,?,?,1,NOW(),NOW())\")","            ->execute([$id, $bank['bank_name'], $bank['branch'], $bank['ifsc'], $bank['account_no']]);","      }","","      // Upsert addresses","      $pdo->prepare(\"DELETE FROM employees_addresses WHERE employee_id=?\")->execute([$id]);","      foreach (['current','permanent'] as $t) {","        $a = $addr[$t];","        if ($a['line1'] || $a['city'] || $a['state'] || $a['pincode']) {","          $pdo->prepare(\"INSERT INTO employees_addresses (employee_id,type,line1,line2,city,state,pincode,country,created_at,updated_at)","                         VALUES (?,?,?,?,?,?,?,?,NOW(),NOW())\")","              ->execute([$id, $t, $a['line1'],$a['line2'],$a['city'],$a['state'],$a['pincode'],$a['country']]);","        }","      }","","      // Upsert family","      $pdo->prepare(\"DELETE FROM employees_family WHERE employee_id=?\")->execute([$id]);","      if ($family) {","        $ins = $pdo->prepare(\"INSERT INTO employees_family (employee_id,name,relation,phone,dob,is_emergency,created_at,updated_at)","                              VALUES (?,?,?,?,?,?,NOW(),NOW())\");","        foreach ($family as $f) {","          $ins->execute([$id, $f['name'], $f['relation'], $f['phone'], $f['dob'], (int)$f['is_emergency']]);","        }","      }","","      $pdo->commit();","      // Trigger provisioning in-process (shared hosting friendly)","require_once __DIR__ . '/../includes/lib_iam_provisioning.php';","try {","  iam_commit_provision($pdo, (int)$id, (int)(current_user()['id'] ?? 0));","} catch (Throwable $e) {","  // optional: log and continue","  error_log('[auto-provision] '.$e->getMessage());","}","","      header('Location: employees_list.php?'.($mode==='edit'?'updated=1':'created=1')); exit;","    } catch (Throwable $e) {","      $pdo->rollBack();","      $error = $e->getMessage();","    }","  }","}","","/* ---------- View ---------- */","?>","<div class=\"row\">","  <div class=\"col-xl-10\">","    <h1 class=\"h4 mb-3\"><?= $mode==='edit'?'Edit Employee':'Create Employee' ?></h1>","    <?php if (!empty($error)): ?>","      <div class=\"alert alert-danger\"><?= htmlspecialchars($error) ?></div>","    <?php endif; ?>","","    <form method=\"post\" enctype=\"multipart/form-data\" class=\"card p-3\">","      <ul class=\"nav nav-tabs\" role=\"tablist\">","        <li class=\"nav-item\"><button class=\"nav-link active\" data-bs-toggle=\"tab\" data-bs-target=\"#tab-basic\" type=\"button\">Basic</button></li>","        <li class=\"nav-item\"><button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#tab-ids\" type=\"button\">IDs</button></li>","        <li class=\"nav-item\"><button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#tab-bank\" type=\"button\">Bank</button></li>","        <li class=\"nav-item\"><button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#tab-address\" type=\"button\">Addresses</button></li>","        <li class=\"nav-item\"><button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#tab-family\" type=\"button\">Family</button></li>","        <li class=\"nav-item\"><button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#tab-docs\" type=\"button\">Documents</button></li>","      </ul>","","      <div class=\"tab-content pt-3\">","        <!-- Basic -->","        <div class=\"tab-pane fade show active\" id=\"tab-basic\">","          <div class=\"row g-3\">","            <div class=\"col-md-3\">","              <label class=\"form-label\">Code *</label>","              <input name=\"code\" class=\"form-control\" value=\"<?= htmlspecialchars($emp['code']) ?>\" required>","            </div>","            <div class=\"col-md-3\">","              <label class=\"form-label\">First name *</label>","              <input name=\"first_name\" class=\"form-control\" value=\"<?= htmlspecialchars($emp['first_name']) ?>\" required>","            </div>","            <div class=\"col-md-3\">","              <label class=\"form-label\">Last name *</label>","              <input name=\"last_name\" class=\"form-control\" value=\"<?= htmlspecialchars($emp['last_name']) ?>\" required>","            </div>","            <div class=\"col-md-3\">","              <label class=\"form-label\">Email *</label>","              <input type=\"email\" name=\"email\" class=\"form-control\" value=\"<?= htmlspecialchars($emp['email']) ?>\" required>","            </div>","","            <div class=\"col-md-3\">","              <label class=\"form-label\">Phone</label>","              <input name=\"phone\" class=\"form-control\" value=\"<?= htmlspecialchars($emp['phone'] ?? '') ?>\">","            </div>","            <div class=\"col-md-3\">","              <label class=\"form-label\">DOB</label>","              <input type=\"date\" name=\"dob\" class=\"form-control\" value=\"<?= htmlspecialchars($emp['dob'] ?? '') ?>\">","            </div>","            <div class=\"col-md-3\">","              <label class=\"form-label\">Gender</label>","              <select name=\"gender\" class=\"form-select\">","                <option value=\"\">--</option>","                <?php foreach (['Male','Female','Other'] as $g): ?>","                  <option value=\"<?= $g ?>\" <?= ($emp['gender']===$g?'selected':'') ?>><?= $g ?></option>","                <?php endforeach; ?>","              </select>","            </div>","            <div class=\"col-md-3\">","              <label class=\"form-label\">Marital Status</label>","              <select name=\"marital_status\" class=\"form-select\">","                <option value=\"\">--</option>","                <?php foreach (['Single','Married','Divorced','Widowed'] as $m): ?>","                  <option value=\"<?= $m ?>\" <?= ($emp['marital_status']===$m?'selected':'') ?>><?= $m ?></option>","                <?php endforeach; ?>","              </select>","            </div>","            <div class=\"col-md-3\">","              <label class=\"form-label\">Blood Group</label>","              <input name=\"blood_group\" class=\"form-control\" placeholder=\"O+, A-, etc.\" value=\"<?= htmlspecialchars($emp['blood_group'] ?? '') ?>\">","            </div>","","            <div class=\"col-md-3\">","              <label class=\"form-label\">Department</label>","              <select name=\"dept_id\" class=\"form-select\">","                <option value=\"\">-- None --</option>","                <?php foreach ($depts as $d): ?>","                  <option value=\"<?= (int)$d['id'] ?>\" <?= ($emp['dept_id']==$d['id']?'selected':'') ?>><?= htmlspecialchars($d['name']) ?></option>","                <?php endforeach; ?>","              </select>","            </div>","            <div class=\"col-md-3\">","              <label class=\"form-label\">Title</label>","              <input name=\"title\" class=\"form-control\" value=\"<?= htmlspecialchars($emp['title'] ?? '') ?>\">","            </div>","            <div class=\"col-md-3\">","              <label class=\"form-label\">Grade Level</label>","              <input type=\"number\" name=\"grade_level\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($emp['grade_level'] ?? '')) ?>\">","            </div>","            <div class=\"col-md-3\">","              <label class=\"form-label\">Employment Type</label>","              <select name=\"employment_type\" class=\"form-select\">","                <?php foreach (['FullTime','PartTime','Contractor','Intern'] as $opt): ?>","                  <option value=\"<?= $opt ?>\" <?= ($emp['employment_type']===$opt?'selected':'') ?>><?= $opt ?></option>","                <?php endforeach; ?>","              </select>","            </div>","            <div class=\"col-md-3\">","              <label class=\"form-label\">Location</label>","              <input name=\"location\" class=\"form-control\" value=\"<?= htmlspecialchars($emp['location'] ?? '') ?>\">","            </div>","            <div class=\"col-md-3\">","              <label class=\"form-label\">Manager</label>","              <select name=\"manager_employee_id\" class=\"form-select\">","                <option value=\"\">-- None --</option>","                <?php foreach ($managers as $m): ?>","                  <option value=\"<?= (int)$m['id'] ?>\" <?= ($emp['manager_employee_id']==$m['id']?'selected':'') ?>>","                    <?= htmlspecialchars(($m['code'] ?? '').' '.$m['first_name'].' '.$m['last_name']) ?>","                  </option>","                <?php endforeach; ?>","              </select>","            </div>","","            <div class=\"col-md-3\">","              <label class=\"form-label\">Start Date</label>","              <input type=\"date\" name=\"start_date\" class=\"form-control\" value=\"<?= htmlspecialchars($emp['start_date'] ?? '') ?>\">","            </div>","            <div class=\"col-md-3\">","              <label class=\"form-label\">Termination Date</label>","              <input type=\"date\" name=\"termination_date\" class=\"form-control\" value=\"<?= htmlspecialchars($emp['termination_date'] ?? '') ?>\">","            </div>","","            <div class=\"col-md-3\">","              <label class=\"form-label\">Status</label>","              <select name=\"status\" class=\"form-select\">","                <?php foreach (['active','inactive'] as $st): ?>","                  <option value=\"<?= $st ?>\" <?= ($emp['status']===$st?'selected':'') ?>><?= ucfirst($st) ?></option>","                <?php endforeach; ?>","              </select>","            </div>","","            <div class=\"col-md-3\">","              <label class=\"form-label\">Photo (JPG/PNG/WebP \u2264 2MB)</label>","              <input type=\"file\" name=\"photo\" accept=\"image/*\" class=\"form-control\">","              <?php if (!empty($emp['photo_path'])): ?>","                <div class=\"mt-2\"><img src=\"<?= htmlspecialchars($emp['photo_path']) ?>\" alt=\"\" style=\"height:80px;border-radius:6px\"></div>","              <?php endif; ?>","            </div>","          </div>","        </div>","","        <!-- IDs -->","        <div class=\"tab-pane fade\" id=\"tab-ids\">","          <div class=\"row g-3\">","            <div class=\"col-md-3\">","              <label class=\"form-label\">Aadhaar</label>","              <input name=\"aadhaar\" class=\"form-control\" maxlength=\"12\" value=\"<?= htmlspecialchars($emp['aadhaar'] ?? '') ?>\">","            </div>","            <div class=\"col-md-3\">","              <label class=\"form-label\">PAN</label>","              <input name=\"pan\" class=\"form-control\" maxlength=\"10\" value=\"<?= htmlspecialchars($emp['pan'] ?? '') ?>\">","            </div>","            <div class=\"col-md-3\">","              <label class=\"form-label\">UAN (EPF)</label>","              <input name=\"uan\" class=\"form-control\" maxlength=\"16\" value=\"<?= htmlspecialchars($emp['uan'] ?? '') ?>\">","            </div>","            <div class=\"col-md-3\">","              <label class=\"form-label\">ESIC</label>","              <input name=\"esic\" class=\"form-control\" maxlength=\"20\" value=\"<?= htmlspecialchars($emp['esic'] ?? '') ?>\">","            </div>","          </div>","        </div>","        ","","        <!-- Bank -->","        <div class=\"tab-pane fade\" id=\"tab-bank\">","          <div class=\"row g-3\">","            <div class=\"col-md-4\">","              <label class=\"form-label\">Bank Name</label>","              <input name=\"bank_name\" class=\"form-control\" value=\"<?= htmlspecialchars($bank['bank_name']) ?>\">","            </div>","            <div class=\"col-md-4\">","              <label class=\"form-label\">Branch</label>","              <input name=\"bank_branch\" class=\"form-control\" value=\"<?= htmlspecialchars($bank['branch']) ?>\">","            </div>","            <div class=\"col-md-2\">","              <label class=\"form-label\">IFSC</label>","              <input name=\"bank_ifsc\" class=\"form-control\" maxlength=\"11\" value=\"<?= htmlspecialchars($bank['ifsc']) ?>\">","            </div>","            <div class=\"col-md-2\">","              <label class=\"form-label\">Account No.</label>","              <input name=\"bank_account_no\" class=\"form-control\" value=\"<?= htmlspecialchars($bank['account_no']) ?>\">","            </div>","          </div>","        </div>","","        <!-- Addresses -->","        <div class=\"tab-pane fade\" id=\"tab-address\">","          <h6>Current Address</h6>","          <div class=\"row g-3\">","            <div class=\"col-md-6\"><input name=\"curr_line1\" class=\"form-control\" placeholder=\"Line 1\" value=\"<?= htmlspecialchars($addr['current']['line1']) ?>\"></div>","            <div class=\"col-md-6\"><input name=\"curr_line2\" class=\"form-control\" placeholder=\"Line 2\" value=\"<?= htmlspecialchars($addr['current']['line2']) ?>\"></div>","            <div class=\"col-md-3\"><input name=\"curr_city\" class=\"form-control\" placeholder=\"City\" value=\"<?= htmlspecialchars($addr['current']['city']) ?>\"></div>","            <div class=\"col-md-3\"><input name=\"curr_state\" class=\"form-control\" placeholder=\"State\" value=\"<?= htmlspecialchars($addr['current']['state']) ?>\"></div>","            <div class=\"col-md-3\"><input name=\"curr_pincode\" class=\"form-control\" placeholder=\"PIN\" value=\"<?= htmlspecialchars($addr['current']['pincode']) ?>\"></div>","            <div class=\"col-md-3\"><input name=\"curr_country\" class=\"form-control\" placeholder=\"Country\" value=\"<?= htmlspecialchars($addr['current']['country']) ?>\"></div>","          </div>","          <div class=\"mt-2\">","  <button class=\"btn btn-outline-secondary btn-sm\" type=\"button\" onclick=\"copyAddress()\">Copy Current \u2192 Permanent</button>","</div>","<script>","function copyAddress() {","  const m = (id) => document.querySelector(`[name=\"${id}\"]`);","  m('perm_line1').value = m('curr_line1').value;","  m('perm_line2').value = m('curr_line2').value;","  m('perm_city').value = m('curr_city').value;","  m('perm_state').value = m('curr_state').value;","  m('perm_pincode').value = m('curr_pincode').value;","  m('perm_country').value = m('curr_country').value || 'India';","}","</script>","","          <hr>","          <h6>Permanent Address</h6>","          <div class=\"row g-3\">","            <div class=\"col-md-6\"><input name=\"perm_line1\" class=\"form-control\" placeholder=\"Line 1\" value=\"<?= htmlspecialchars($addr['permanent']['line1']) ?>\"></div>","            <div class=\"col-md-6\"><input name=\"perm_line2\" class=\"form-control\" placeholder=\"Line 2\" value=\"<?= htmlspecialchars($addr['permanent']['line2']) ?>\"></div>","            <div class=\"col-md-3\"><input name=\"perm_city\" class=\"form-control\" placeholder=\"City\" value=\"<?= htmlspecialchars($addr['permanent']['city']) ?>\"></div>","            <div class=\"col-md-3\"><input name=\"perm_state\" class=\"form-control\" placeholder=\"State\" value=\"<?= htmlspecialchars($addr['permanent']['state']) ?>\"></div>","            <div class=\"col-md-3\"><input name=\"perm_pincode\" class=\"form-control\" placeholder=\"PIN\" value=\"<?= htmlspecialchars($addr['permanent']['pincode']) ?>\"></div>","            <div class=\"col-md-3\"><input name=\"perm_country\" class=\"form-control\" placeholder=\"Country\" value=\"<?= htmlspecialchars($addr['permanent']['country']) ?>\"></div>","          </div>","        </div>","","        <!-- Family -->","        <div class=\"tab-pane fade\" id=\"tab-family\">","          <div id=\"famRows\">","            <?php if (!$family) $family = [['name'=>'','relation'=>'','phone'=>'','dob'=>null,'is_emergency'=>0]]; ?>","            <?php foreach ($family as $i => $f): ?>","              <div class=\"row g-2 align-items-end fam-row mb-2\">","                <div class=\"col-md-3\">","                  <label class=\"form-label\">Name</label>","                  <input name=\"fam_name[]\" class=\"form-control\" value=\"<?= htmlspecialchars($f['name']) ?>\">","                </div>","                <div class=\"col-md-2\">","                  <label class=\"form-label\">Relation</label>","                  <input name=\"fam_relation[]\" class=\"form-control\" value=\"<?= htmlspecialchars($f['relation']) ?>\">","                </div>","                <div class=\"col-md-2\">","                  <label class=\"form-label\">Phone</label>","                  <input name=\"fam_phone[]\" class=\"form-control\" value=\"<?= htmlspecialchars($f['phone']) ?>\">","                </div>","                <div class=\"col-md-2\">","                  <label class=\"form-label\">DOB</label>","                  <input type=\"date\" name=\"fam_dob[]\" class=\"form-control\" value=\"<?= htmlspecialchars($f['dob'] ?? '') ?>\">","                </div>","                <div class=\"col-md-2\">","                  <div class=\"form-check mt-4\">","                    <input type=\"checkbox\" class=\"form-check-input\" name=\"fam_emergency[<?= $i ?>]\" <?= !empty($f['is_emergency'])?'checked':'' ?>>","                    <label class=\"form-check-label\">Emergency</label>","                  </div>","                </div>","                <div class=\"col-md-1 text-end\">","                  <button type=\"button\" class=\"btn btn-outline-danger btn-sm mt-4\" onclick=\"removeFam(this)\">\u00d7</button>","                </div>","              </div>","            <?php endforeach; ?>","          </div>","          <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" onclick=\"addFam()\">+ Add Family</button>","        </div>","<!-- Documents -->","<div class=\"tab-pane fade\" id=\"tab-docs\">","  <?php if ($mode !== 'edit'): ?>","    <div class=\"alert alert-info\">Save the employee first, then upload documents.</div>","  <?php else: ?>","    <form class=\"card card-body mb-3\" action=\"/hr/employee_docs_post.php\" method=\"post\" enctype=\"multipart/form-data\">","      <input type=\"hidden\" name=\"employee_id\" value=\"<?= (int)$id ?>\">","      <div class=\"row g-3 align-items-end\">","        <div class=\"col-md-3\">","          <label class=\"form-label\">Type</label>","          <select name=\"doc_type\" class=\"form-select\">","            <option value=\"aadhaar\">Aadhaar</option>","            <option value=\"pan\">PAN</option>","            <option value=\"passbook\">Passbook</option>","            <option value=\"offer_letter\">Offer Letter</option>","            <option value=\"joining_form\">Joining Form</option>","            <option value=\"other\">Other</option>","          </select>","        </div>","        <div class=\"col-md-7\">","          <label class=\"form-label\">File (PDF/JPG/PNG/ZIP \u2264 5MB)</label>","          <input type=\"file\" name=\"file\" class=\"form-control\" required>","        </div>","        <div class=\"col-md-2 d-grid\">","          <button class=\"btn btn-outline-primary\">Upload</button>","        </div>","      </div>","    </form>","","    <div id=\"docList\">","      <?php","      $st = $pdo->prepare(\"SELECT id, doc_type, file_path, original_name, created_at FROM employee_documents WHERE employee_id=? ORDER BY created_at DESC\");","      $st->execute([$id]);","      $docs = $st->fetchAll(PDO::FETCH_ASSOC);","      if (!$docs): ?>","        <div class=\"text-muted\">No documents.</div>","      <?php else: ?>","        <div class=\"table-responsive\">","          <table class=\"table table-sm\">","            <thead><tr><th>Type</th><th>Name</th><th>File</th><th>Uploaded</th><th></th></tr></thead>","            <tbody>","            <?php foreach ($docs as $d): ?>","              <tr>","                <td><?= htmlspecialchars($d['doc_type']) ?></td>","                <td><?= htmlspecialchars($d['original_name'] ?? '-') ?></td>","                <td><a href=\"<?= htmlspecialchars($d['file_path']) ?>\" target=\"_blank\">Open</a></td>","                <td><?= htmlspecialchars($d['created_at']) ?></td>","                <td>","                  <form method=\"post\" action=\"/hr/employee_docs_post.php\" onsubmit=\"return confirm('Delete document?')\">","                    <input type=\"hidden\" name=\"employee_id\" value=\"<?= (int)$id ?>\">","                    <input type=\"hidden\" name=\"delete_id\" value=\"<?= (int)$d['id'] ?>\">","                    <button class=\"btn btn-outline-danger btn-sm\">Delete</button>","                  </form>","                </td>","              </tr>","            <?php endforeach; ?>","            </tbody>","          </table>","        </div>","      <?php endif; ?>","    </div>","  <?php endif; ?>","</div>","","","      ","      </div>","","      <div class=\"mt-3\">","        <button class=\"btn btn-primary\">Save</button>","        <a href=\"employees_list.php\" class=\"btn btn-outline-secondary\">Back</a>","      </div>","    </form>","  </div>","</div>","","<script>","function addFam() {","  const wrap = document.getElementById('famRows');","  const idx = wrap.querySelectorAll('.fam-row').length;","  const div = document.createElement('div');","  div.className = 'row g-2 align-items-end fam-row mb-2';","  div.innerHTML = `","    <div class=\"col-md-3\"><label class=\"form-label\">Name</label><input name=\"fam_name[]\" class=\"form-control\"></div>","    <div class=\"col-md-2\"><label class=\"form-label\">Relation</label><input name=\"fam_relation[]\" class=\"form-control\"></div>","    <div class=\"col-md-2\"><label class=\"form-label\">Phone</label><input name=\"fam_phone[]\" class=\"form-control\"></div>","    <div class=\"col-md-2\"><label class=\"form-label\">DOB</label><input type=\"date\" name=\"fam_dob[]\" class=\"form-control\"></div>","    <div class=\"col-md-2\"><div class=\"form-check mt-4\">","      <input type=\"checkbox\" class=\"form-check-input\" name=\"fam_emergency[${idx}]\">","      <label class=\"form-check-label\">Emergency</label></div></div>","    <div class=\"col-md-1 text-end\"><button type=\"button\" class=\"btn btn-outline-danger btn-sm mt-4\" onclick=\"removeFam(this)\">\u00d7</button></div>`;","  wrap.appendChild(div);","}","function removeFam(btn) {","  const row = btn.closest('.fam-row');","  if (row) row.remove();","}","</script>","","<?php","/* ---------- Layout end ---------- */","if (!empty($LAYOUT_DIR) && is_file($LAYOUT_DIR . '/layout_end.php')) include $LAYOUT_DIR . '/layout_end.php';","else echo '</div><script src=\"/assets/bootstrap.bundle.min.js\"></script></body></html>';","/* -------------------------------- */"],
"/home/u989675055/domains/emsinfra.co.in/public_html/hr/employee_docs_post.php": ["<?php","/** PATH: /public_html/hr/employee_docs_post.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","$pdo = db();","","$employeeId = (int)($_POST['employee_id'] ?? 0);","if ($employeeId <= 0) { http_response_code(400); exit('employee_id required'); }","","if (isset($_POST['delete_id'])) {","  require_permission('hr.employee.manage');","  $id = (int)$_POST['delete_id'];","  $st = $pdo->prepare(\"SELECT file_path FROM employee_documents WHERE id=? AND employee_id=?\");","  $st->execute([$id, $employeeId]);","  $row = $st->fetch(PDO::FETCH_ASSOC);","  if ($row) {","    $pdo->prepare(\"DELETE FROM employee_documents WHERE id=?\")->execute([$id]);","    $file = rtrim($_SERVER['DOCUMENT_ROOT'], '/') . $row['file_path'];","    if (is_file($file)) @unlink($file);","  }","  header('Location: /hr/employees_form.php?id='.$employeeId.'&docs=deleted'); exit;","}","","if (!empty($_FILES['file']['name']) && is_uploaded_file($_FILES['file']['tmp_name'])) {","  require_permission('hr.employee.manage');","","  $docType = $_POST['doc_type'] ?? 'other';","  $allowedTypes = ['aadhaar','pan','passbook','offer_letter','joining_form','other'];","  if (!in_array($docType, $allowedTypes, true)) $docType = 'other';","","  $mime = mime_content_type($_FILES['file']['tmp_name']);","  $size = (int)$_FILES['file']['size'];","  if ($size > 5*1024*1024) { header('Location: /hr/employees_form.php?id='.$employeeId.'&docs=toolarge'); exit; }","","  $ext = 'bin';","  $map = ['application/pdf'=>'pdf','image/jpeg'=>'jpg','image/png'=>'png','image/webp'=>'webp','application/zip'=>'zip','application/x-zip-compressed'=>'zip'];","  if (isset($map[$mime])) $ext = $map[$mime];","","  $root = rtrim($_SERVER['DOCUMENT_ROOT'], '/');","  $dir  = $root . '/uploads/employees/' . $employeeId . '/docs';","  if (!is_dir($dir)) mkdir($dir, 0775, true);","","  $safeBase = preg_replace('/[^a-zA-Z0-9_\\-\\.]/','_', $_FILES['file']['name']);","  $fname = date('Ymd_His') . '_' . $docType . '_' . $safeBase;","  $path = $dir . '/' . $fname;","  if (!move_uploaded_file($_FILES['file']['tmp_name'], $path)) {","    header('Location: /hr/employees_form.php?id='.$employeeId.'&docs=fail'); exit;","  }","  $rel = '/uploads/employees/' . $employeeId . '/docs/' . $fname;","","  $st = $pdo->prepare(\"INSERT INTO employee_documents (employee_id, doc_type, file_path, original_name, mime_type, created_at)","                       VALUES (?, ?, ?, ?, ?, NOW())\");","  $st->execute([$employeeId, $docType, $rel, $_FILES['file']['name'], $mime]);","","  header('Location: /hr/employees_form.php?id='.$employeeId.'&docs=ok'); exit;","}","","header('Location: /hr/employees_form.php?id='.$employeeId.'&docs=bad'); exit;"],
"/home/u989675055/domains/emsinfra.co.in/public_html/store_module_patch/stock_adjust_post.php": ["<?php","/**"," * Stock Adjustment POST"," * - Creates adjustment header + lines"," * - Posts IN or OUT via StockMoveWriter"," * - NEW: Calls ValuationService and mirrors to stock_ledger"," */","require_once __DIR__ . '/includes/db.php';","require_once __DIR__ . '/includes/rbac.php';","require_once __DIR__ . '/includes/csrf.php';","require_once __DIR__ . '/includes/audit.php';","require_once __DIR__ . '/includes/helpers.php';","","require_once __DIR__ . '/includes/NumberingService.php';","require_once __DIR__ . '/includes/StockMoveWriter.php';","require_once __DIR__ . '/includes/ValuationService.php';","require_once __DIR__ . '/includes/StockLedgerAdapter.php';","","header('Content-Type: application/json');","","try {","    require_permission('stocks.adjust.manage');","","    $raw = file_get_contents('php://input');","    $input = json_decode($raw, true);","    if (!$input) $input = $_POST;","","    if (!empty($_POST)) {","        csrf_require_token($_POST['csrf_token'] ?? '');","    }","","    $userId = (int)($_SESSION['user_id'] ?? 0);","    $now = date('Y-m-d H:i:s');","","    $warehouseId = (int)($input['warehouse_id'] ?? 0);","    $mode        = strtoupper(trim($input['mode'] ?? '')); // IN or OUT","    $reasonCode  = trim($input['reason_code'] ?? '');","    $remarks     = trim($input['remarks'] ?? '');","    $lines       = $input['lines'] ?? [];","","    if ($warehouseId <= 0 || !in_array($mode, ['IN', 'OUT'], true) || empty($lines)) {","        http_response_code(422);","        echo json_encode(['ok' => false, 'error' => 'warehouse_id, mode (IN/OUT) and lines are required']);","        exit;","    }","","    $pdo = db();","    $pdo->beginTransaction();","","    $adjNo = NumberingService::next($pdo, 'ADJ'); // e.g., ADJ-2025-001234","","    // Header","    $pdo->prepare(\"INSERT INTO stock_adjustments","            (adj_no, warehouse_id, mode, reason_code, remarks, status, created_by, created_at)","            VALUES (:adj_no, :warehouse_id, :mode, :reason_code, :remarks, 'POSTED', :created_by, :created_at)\")","        ->execute([","            ':adj_no'       => $adjNo,","            ':warehouse_id' => $warehouseId,","            ':mode'         => $mode,","            ':reason_code'  => $reasonCode,","            ':remarks'      => $remarks,","            ':created_by'   => $userId,","            ':created_at'   => $now,","        ]);","    $adjId = (int)$pdo->lastInsertId();","","    $insLine = $pdo->prepare(\"INSERT INTO stock_adjustment_items","        (adjustment_id, line_no, item_id, uom_id, qty, unit_cost, bin_id, batch_id, remarks)","        VALUES (:adjustment_id, :line_no, :item_id, :uom_id, :qty, :unit_cost, :bin_id, :batch_id, :remarks)\");","","    $lineNo = 0;","    foreach ($lines as $ln) {","        $lineNo++;","        $itemId    = (int)($ln['item_id'] ?? 0);","        $uomId     = isset($ln['uom_id']) ? (int)$ln['uom_id'] : null;","        $qty       = (float)($ln['qty'] ?? 0);","        $binId     = isset($ln['bin_id']) ? (int)$ln['bin_id'] : null;","        $batchId   = isset($ln['batch_id']) ? (int)$ln['batch_id'] : null;","        $lnRemarks = trim($ln['remarks'] ?? '');","        $unitCost  = (float)($ln['unit_cost'] ?? 0); // required for IN valuation","","        if ($itemId <= 0 || $qty <= 0) {","            throw new RuntimeException(\"Invalid line #{$lineNo}\");","        }","","        $insLine->execute([","            ':adjustment_id' => $adjId,","            ':line_no'       => $lineNo,","            ':item_id'       => $itemId,","            ':uom_id'        => $uomId,","            ':qty'           => $qty,","            ':unit_cost'     => $unitCost,","            ':bin_id'        => $binId,","            ':batch_id'      => $batchId,","            ':remarks'       => $lnRemarks,","        ]);","","        $payload = [","            'txn_type'     => 'ADJ',","            'txn_no'       => $adjNo,","            'txn_date'     => $now,","            'item_id'      => $itemId,","            'uom_id'       => $uomId,","            'warehouse_id' => $warehouseId,","            'bin_id'       => $binId,","            'batch_id'     => $batchId,","            'project_id'   => null,","            'qty'          => $qty,         // positive","            'unit_cost'    => $unitCost,    // pre-tax basic","            'ref_table'    => 'stock_adjustments',","            'ref_id'       => $adjId,","            'created_by'   => $userId,","        ];","","        if ($mode === 'IN') {","            StockMoveWriter::postIn($pdo, $payload);","            ValuationService::onReceipt($pdo, $itemId, $warehouseId, $qty, $unitCost);","            StockLedgerAdapter::mirror($pdo, $payload);","        } else { // OUT","            StockMoveWriter::postOut($pdo, $payload);","            ValuationService::onIssue($pdo, $itemId, $warehouseId, $qty);","            StockLedgerAdapter::mirror($pdo, $payload);","        }","    }","","    audit_log('stock_adjustments', $adjId, 'POST', null, ['adj_no' => $adjNo, 'mode' => $mode, 'lines' => count($lines)]);","    $pdo->commit();","","    echo json_encode(['ok' => true, 'adjustment_id' => $adjId, 'adj_no' => $adjNo]);","","} catch (Throwable $e) {","    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();","    error_log($e);","    http_response_code(400);","    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/store_module_patch/README.txt": ["EMS Infra ERP \u2014 Store Module Patch","Generated: 2025-10-01 17:23:55","","Contents","--------","- req_post_issue.php            (full replacement)","- stock_adjust_post.php         (full replacement)","- gp_create_post.php            (full replacement)","- gp_return_post.php            (full replacement)","- includes/StockLedgerAdapter.php (new include)","- migrations/001_add_stock_ledger.sql (new table)","","Instructions","------------","1) Run the migration:","   - Execute migrations/001_add_stock_ledger.sql on your MySQL DB.","","2) Copy the new include:","   - Place includes/StockLedgerAdapter.php into your project's includes/ folder.","","3) Replace endpoints:","   - Backup your existing files.","   - Replace the following with the provided versions:","       req_post_issue.php","       stock_adjust_post.php","       gp_create_post.php","       gp_return_post.php","","4) Clear opcode cache if enabled (php-fpm/apcu/opcache).","","5) Test:","   - Post a small Issue (OUT): verify stock_ledger receives rows and stock_avg basis reduces.","   - Create a non-returnable GP: verify OUT mirror in stock_ledger.","   - Return on a returnable GP: verify IN mirror and valuation on receipt.","   - Adjustment IN/OUT: verify both valuation and ledger entries.","","Notes","-----","- No UI changes. Payload shapes are preserved.","- Rates are pre-tax (basic). Taxes remain in AP.","- The adapter reads current WA for OUT from stock_avg; ensure your ValuationService keeps stock_avg updated."],
"/home/u989675055/domains/emsinfra.co.in/public_html/store_module_patch/gp_return_post.php": ["<?php","/**"," * Gate Pass RETURN"," * - Validates returnable GP and outstanding qty"," * - Posts IN movements"," * - NEW: Calls ValuationService::onReceipt and mirrors to stock_ledger"," */","require_once __DIR__ . '/includes/db.php';","require_once __DIR__ . '/includes/rbac.php';","require_once __DIR__ . '/includes/csrf.php';","require_once __DIR__ . '/includes/audit.php';","require_once __DIR__ . '/includes/helpers.php';","","require_once __DIR__ . '/includes/NumberingService.php';","require_once __DIR__ . '/includes/StockMoveWriter.php';","require_once __DIR__ . '/includes/ValuationService.php';","require_once __DIR__ . '/includes/StockLedgerAdapter.php';","","header('Content-Type: application/json');","","try {","    require_permission('stores.gatepass.manage');","","    $raw = file_get_contents('php://input');","    $input = json_decode($raw, true);","    if (!$input) $input = $_POST;","","    if (!empty($_POST)) {","        csrf_require_token($_POST['csrf_token'] ?? '');","    }","","    $userId = (int)($_SESSION['user_id'] ?? 0);","    $now = date('Y-m-d H:i:s');","","    $gpId   = (int)($input['gp_id'] ?? 0);","    $lines  = $input['lines'] ?? []; // each: gp_line_id, qty, unit_cost?, bin_id?, batch_id?","    if ($gpId <= 0 || empty($lines)) {","        http_response_code(422);","        echo json_encode(['ok' => false, 'error' => 'gp_id and lines are required']);","        exit;","    }","","    $pdo = db();","    $pdo->beginTransaction();","","    // Load GP header, ensure returnable","    $h = $pdo->prepare(\"SELECT gp_no, warehouse_id, returnable, status FROM gatepasses WHERE id = :id FOR UPDATE\");","    $h->execute([':id' => $gpId]);","    $hdr = $h->fetch(PDO::FETCH_ASSOC);","    if (!$hdr) throw new RuntimeException('Gate Pass not found');","    if ((int)$hdr['returnable'] !== 1) throw new RuntimeException('Gate Pass is not returnable');","","    $gpNo       = $hdr['gp_no'];","    $warehouseId= (int)$hdr['warehouse_id'];","","    // Load lines outstanding","    $lnQ = $pdo->prepare(\"SELECT id, line_no, item_id, uom_id, qty, returned_qty, bin_id, batch_id FROM gatepass_items WHERE gp_id = :id\");","    $lnQ->execute([':id' => $gpId]);","    $existing = [];","    while ($r = $lnQ->fetch(PDO::FETCH_ASSOC)) {","        $existing[(int)$r['id']] = $r;","    }","","    // Generate return number","    $gprNo = NumberingService::next($pdo, 'GPR');","","    foreach ($lines as $ln) {","        $gpLineId = (int)($ln['gp_line_id'] ?? 0);","        $retQty   = (float)($ln['qty'] ?? 0);","        $unitCost = (float)($ln['unit_cost'] ?? 0);","        $binId    = isset($ln['bin_id']) ? (int)$ln['bin_id'] : ($existing[$gpLineId]['bin_id'] ?? null);","        $batchId  = isset($ln['batch_id']) ? (int)$ln['batch_id'] : ($existing[$gpLineId]['batch_id'] ?? null);","","        if ($gpLineId <= 0 || $retQty <= 0) {","            throw new RuntimeException(\"Invalid return line\");","        }","        if (!isset($existing[$gpLineId])) {","            throw new RuntimeException(\"Gate Pass line not found: {$gpLineId}\");","        }","        $ex = $existing[$gpLineId];","        $outstanding = (float)$ex['qty'] - (float)$ex['returned_qty'];","        if ($retQty > $outstanding + 1e-9) {","            throw new RuntimeException(\"Return qty exceeds outstanding on line {$ex['line_no']}\");","        }","","        // Update returned qty","        $pdo->prepare(\"UPDATE gatepass_items SET returned_qty = returned_qty + :r WHERE id = :id\")","            ->execute([':r' => $retQty, ':id' => $gpLineId]);","","        // Build payload","        $payload = [","            'txn_type'     => 'GPR',","            'txn_no'       => $gprNo,       // return doc number","            'txn_date'     => $now,","            'item_id'      => (int)$ex['item_id'],","            'uom_id'       => (int)$ex['uom_id'],","            'warehouse_id' => $warehouseId,","            'bin_id'       => $binId,","            'batch_id'     => $batchId,","            'project_id'   => null,","            'qty'          => $retQty,      // positive IN","            'unit_cost'    => $unitCost,    // pre-tax","            'ref_table'    => 'gatepasses',","            'ref_id'       => $gpId,","            'created_by'   => $userId,","        ];","","        StockMoveWriter::postIn($pdo, $payload);","        ValuationService::onReceipt($pdo, (int)$ex['item_id'], $warehouseId, $retQty, $unitCost);","        StockLedgerAdapter::mirror($pdo, $payload);","    }","","    // Close GP if fully returned","    $c = $pdo->prepare(\"SELECT SUM(qty) as t_qty, SUM(returned_qty) as t_ret FROM gatepass_items WHERE gp_id = :id\");","    $c->execute([':id' => $gpId]);","    $row = $c->fetch(PDO::FETCH_ASSOC);","    if ($row && (float)$row['t_qty'] <= (float)$row['t_ret'] + 1e-9) {","        $pdo->prepare(\"UPDATE gatepasses SET status = 'CLOSED', updated_at = NOW() WHERE id = :id\")","            ->execute([':id' => $gpId]);","    }","","    audit_log('gatepasses', $gpId, 'RETURN', null, ['gpr_no' => $gprNo, 'lines' => count($lines)]);","    $pdo->commit();","","    echo json_encode(['ok' => true, 'gp_id' => $gpId, 'gpr_no' => $gprNo]);","","} catch (Throwable $e) {","    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();","    error_log($e);","    http_response_code(400);","    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/store_module_patch/gp_create_post.php": ["<?php","/**"," * Gate Pass CREATE"," * - Creates GP header + lines"," * - For non-returnable lines that are dispatched now: posts OUT"," * - NEW: Valuation on OUT + mirror to stock_ledger"," */","require_once __DIR__ . '/includes/db.php';","require_once __DIR__ . '/includes/rbac.php';","require_once __DIR__ . '/includes/csrf.php';","require_once __DIR__ . '/includes/audit.php';","require_once __DIR__ . '/includes/helpers.php';","","require_once __DIR__ . '/includes/NumberingService.php';","require_once __DIR__ . '/includes/StockMoveWriter.php';","require_once __DIR__ . '/includes/ValuationService.php';","require_once __DIR__ . '/includes/StockLedgerAdapter.php';","","header('Content-Type: application/json');","","try {","    require_permission('stores.gatepass.manage');","","    $raw = file_get_contents('php://input');","    $input = json_decode($raw, true);","    if (!$input) $input = $_POST;","","    if (!empty($_POST)) {","        csrf_require_token($_POST['csrf_token'] ?? '');","    }","","    $userId = (int)($_SESSION['user_id'] ?? 0);","    $now = date('Y-m-d H:i:s');","","    $sourceWhId   = (int)($input['warehouse_id'] ?? 0);","    $destWhId     = isset($input['to_warehouse_id']) ? (int)$input['to_warehouse_id'] : null; // optional","    $partyId      = isset($input['party_id']) ? (int)$input['party_id'] : null;               // optional (jobwork/site)","    $projectId    = isset($input['project_id']) ? (int)$input['project_id'] : null;","    $returnable   = (int)($input['returnable'] ?? 0); // 1/0","    $expectedRet  = !empty($input['expected_return_date']) ? $input['expected_return_date'] : null;","    $vehicleNo    = trim($input['vehicle_no'] ?? '');","    $contactName  = trim($input['contact_name'] ?? '');","    $remarks      = trim($input['remarks'] ?? '');","    $lines        = $input['lines'] ?? [];","","    if ($sourceWhId <= 0 || empty($lines)) {","        http_response_code(422);","        echo json_encode(['ok' => false, 'error' => 'warehouse_id and lines are required']);","        exit;","    }","","    $pdo = db();","    $pdo->beginTransaction();","","    $gpNo = NumberingService::next($pdo, 'GP');","","    // Header","    $stmt = $pdo->prepare(\"INSERT INTO gatepasses","        (gp_no, warehouse_id, to_warehouse_id, party_id, project_id, returnable, expected_return_date,","         vehicle_no, contact_name, remarks, status, created_by, created_at)","        VALUES","        (:gp_no, :warehouse_id, :to_warehouse_id, :party_id, :project_id, :returnable, :expected_return_date,","         :vehicle_no, :contact_name, :remarks, :status, :created_by, :created_at)\");","    $stmt->execute([","        ':gp_no'                => $gpNo,","        ':warehouse_id'         => $sourceWhId,","        ':to_warehouse_id'      => $destWhId,","        ':party_id'             => $partyId,","        ':project_id'           => $projectId,","        ':returnable'           => $returnable,","        ':expected_return_date' => $expectedRet,","        ':vehicle_no'           => $vehicleNo,","        ':contact_name'         => $contactName,","        ':remarks'              => $remarks,","        ':status'               => ($returnable ? 'OPEN' : 'CLOSED'),","        ':created_by'           => $userId,","        ':created_at'           => $now,","    ]);","    $gpId = (int)$pdo->lastInsertId();","","    $insLine = $pdo->prepare(\"INSERT INTO gatepass_items","        (gp_id, line_no, item_id, uom_id, qty, bin_id, batch_id, remarks, returned_qty)","        VALUES (:gp_id, :line_no, :item_id, :uom_id, :qty, :bin_id, :batch_id, :remarks, 0)\");","","    $lineNo = 0;","    foreach ($lines as $ln) {","        $lineNo++;","        $itemId    = (int)($ln['item_id'] ?? 0);","        $uomId     = isset($ln['uom_id']) ? (int)$ln['uom_id'] : null;","        $qty       = (float)($ln['qty'] ?? 0);","        $binId     = isset($ln['bin_id']) ? (int)$ln['bin_id'] : null;","        $batchId   = isset($ln['batch_id']) ? (int)$ln['batch_id'] : null;","        $lnRemarks = trim($ln['remarks'] ?? '');","        $unitCost  = (float)($ln['unit_cost'] ?? 0);","","        if ($itemId <= 0 || $qty <= 0) {","            throw new RuntimeException(\"Invalid line #{$lineNo}\");","        }","","        $insLine->execute([","            ':gp_id'   => $gpId,","            ':line_no' => $lineNo,","            ':item_id' => $itemId,","            ':uom_id'  => $uomId,","            ':qty'     => $qty,","            ':bin_id'  => $binId,","            ':batch_id'=> $batchId,","            ':remarks' => $lnRemarks,","        ]);","","        // If NON-RETURNABLE, we post OUT right now.","        if (!$returnable) {","            $payload = [","                'txn_type'     => 'GP',","                'txn_no'       => $gpNo,","                'txn_date'     => $now,","                'item_id'      => $itemId,","                'uom_id'       => $uomId,","                'warehouse_id' => $sourceWhId,","                'bin_id'       => $binId,","                'batch_id'     => $batchId,","                'project_id'   => $projectId,","                'qty'          => $qty,","                'unit_cost'    => $unitCost,","                'ref_table'    => 'gatepasses',","                'ref_id'       => $gpId,","                'created_by'   => $userId,","            ];","","            StockMoveWriter::postOut($pdo, $payload);","            ValuationService::onIssue($pdo, $itemId, $sourceWhId, $qty);","            StockLedgerAdapter::mirror($pdo, $payload);","        }","    }","","    audit_log('gatepasses', $gpId, 'CREATE', null, ['gp_no' => $gpNo, 'returnable' => $returnable, 'lines' => count($lines)]);","    $pdo->commit();","","    echo json_encode(['ok' => true, 'gp_id' => $gpId, 'gp_no' => $gpNo]);","","} catch (Throwable $e) {","    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();","    error_log($e);","    http_response_code(400);","    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/store_module_patch/migrations/001_add_stock_ledger.sql": ["-- migrations/001_add_stock_ledger.sql","CREATE TABLE IF NOT EXISTS stock_ledger (","  id                BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,","  txn_date          DATETIME(6)     NOT NULL,","  txn_type          VARCHAR(16)     NOT NULL,","  txn_no            VARCHAR(50)     NOT NULL,","  item_id           BIGINT          NOT NULL,","  warehouse_id      BIGINT          NOT NULL,","  project_id        BIGINT          NULL,","  bin_id            BIGINT          NULL,","  batch_id          BIGINT          NULL,","  qty               DECIMAL(18,6)   NOT NULL,","  rate              DECIMAL(18,6)   NOT NULL,","  amount            DECIMAL(18,2)   AS (qty * rate) STORED,","  uom_id            BIGINT          NULL,","  ref_table         VARCHAR(64)     NULL,","  ref_id            BIGINT          NULL,","  created_by        BIGINT          NULL,","  created_at        DATETIME(6)     NOT NULL DEFAULT CURRENT_TIMESTAMP(6),","  PRIMARY KEY (id),","  KEY idx_ledger_date (txn_date),","  KEY idx_ledger_item_wh (item_id, warehouse_id),","  KEY idx_ledger_txn (txn_type, txn_no)",");"],
"/home/u989675055/domains/emsinfra.co.in/public_html/store_module_patch/req_post_issue.php": ["<?php","/**"," * Material Requisition \u2192 Issue POST"," * - Creates material_issues header + lines"," * - Posts OUT movements via StockMoveWriter"," * - NEW: Calls ValuationService::onIssue and mirrors to stock_ledger"," */","require_once __DIR__ . '/includes/db.php';","require_once __DIR__ . '/includes/rbac.php';","require_once __DIR__ . '/includes/csrf.php';","require_once __DIR__ . '/includes/audit.php';","require_once __DIR__ . '/includes/helpers.php';","","require_once __DIR__ . '/includes/NumberingService.php';","require_once __DIR__ . '/includes/StockMoveWriter.php';","require_once __DIR__ . '/includes/ValuationService.php';","require_once __DIR__ . '/includes/StockLedgerAdapter.php';","","header('Content-Type: application/json');","","try {","    require_permission('stores.issue.manage');","","    // Accept either JSON or form","    $raw = file_get_contents('php://input');","    $input = json_decode($raw, true);","    if (!$input) $input = $_POST;","","    // Optional CSRF (only if you post from a form)","    if (!empty($_POST)) {","        csrf_require_token($_POST['csrf_token'] ?? '');","    }","","    $userId = (int)($_SESSION['user_id'] ?? 0);","    $now = date('Y-m-d H:i:s');","","    $reqId        = (int)($input['req_id'] ?? 0);","    $warehouseId  = (int)($input['warehouse_id'] ?? 0);","    $projectId    = isset($input['project_id']) ? (int)$input['project_id'] : null;","    $remarks      = trim($input['remarks'] ?? '');","    $lines        = $input['lines'] ?? [];","","    if ($warehouseId <= 0 || empty($lines)) {","        http_response_code(422);","        echo json_encode(['ok' => false, 'error' => 'warehouse_id and lines are required']);","        exit;","    }","","    $pdo = db();","    $pdo->beginTransaction();","","    // Generate Issue number","    $issueNo = NumberingService::next($pdo, 'ISS'); // e.g., ISS-2025-000123","","    // Create header","    $stmt = $pdo->prepare(\"INSERT INTO material_issues","        (issue_no, req_id, warehouse_id, project_id, remarks, status, created_by, created_at)","        VALUES (:issue_no, :req_id, :warehouse_id, :project_id, :remarks, 'POSTED', :created_by, :created_at)\");","    $stmt->execute([","        ':issue_no'     => $issueNo,","        ':req_id'       => $reqId ?: null,","        ':warehouse_id' => $warehouseId,","        ':project_id'   => $projectId,","        ':remarks'      => $remarks,","        ':created_by'   => $userId,","        ':created_at'   => $now,","    ]);","    $issueId = (int)$pdo->lastInsertId();","","    // Prepare line insert","    $insLine = $pdo->prepare(\"INSERT INTO material_issue_items","        (issue_id, line_no, item_id, uom_id, qty, bin_id, batch_id, remarks)","        VALUES (:issue_id, :line_no, :item_id, :uom_id, :qty, :bin_id, :batch_id, :remarks)\");","","    $lineNo = 0;","    foreach ($lines as $ln) {","        $lineNo++;","        $itemId     = (int)($ln['item_id'] ?? 0);","        $uomId      = isset($ln['uom_id']) ? (int)$ln['uom_id'] : null;","        $qty        = (float)($ln['qty'] ?? 0);","        $binId      = isset($ln['bin_id']) ? (int)$ln['bin_id'] : null;","        $batchId    = isset($ln['batch_id']) ? (int)$ln['batch_id'] : null;","        $lnRemarks  = trim($ln['remarks'] ?? '');","","        if ($itemId <= 0 || $qty <= 0) {","            throw new RuntimeException(\"Invalid line at #{$lineNo}\");","        }","","        // Insert issue line","        $insLine->execute([","            ':issue_id' => $issueId,","            ':line_no'  => $lineNo,","            ':item_id'  => $itemId,","            ':uom_id'   => $uomId,","            ':qty'      => $qty,","            ':bin_id'   => $binId,","            ':batch_id' => $batchId,","            ':remarks'  => $lnRemarks,","        ]);","","        // Build writer payload (mirror your existing shape)","        $payload = [","            'txn_type'     => 'ISS',","            'txn_no'       => $issueNo,","            'txn_date'     => $now,","            'item_id'      => $itemId,","            'uom_id'       => $uomId,","            'warehouse_id' => $warehouseId,","            'bin_id'       => $binId,","            'batch_id'     => $batchId,","            'project_id'   => $projectId,","            'qty'          => $qty,            // positive here; writer will store negative in stock_moves","            'unit_cost'    => (float)($ln['unit_cost'] ?? 0), // optional; not used for WA on issue","            'ref_table'    => 'material_issues',","            'ref_id'       => $issueId,","            'created_by'   => $userId,","        ];","","        // Post OUT to stock","        StockMoveWriter::postOut($pdo, $payload);","","        // NEW: Valuation basis reduce + ledger mirror","        ValuationService::onIssue($pdo, $itemId, $warehouseId, $qty);","        StockLedgerAdapter::mirror($pdo, $payload);","    }","","    // Optional: close requisition if fully issued (business rule as before)","    if ($reqId > 0) {","        $pdo->prepare(\"UPDATE material_requisitions SET status = 'CLOSED', updated_at = NOW()","                       WHERE id = :id AND status <> 'CLOSED'\")","            ->execute([':id' => $reqId]);","    }","","    audit_log('material_issues', $issueId, 'POST', null, ['issue_no' => $issueNo, 'lines' => count($lines)]);","    $pdo->commit();","","    echo json_encode(['ok' => true, 'issue_id' => $issueId, 'issue_no' => $issueNo]);","","} catch (Throwable $e) {","    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();","    error_log($e);","    http_response_code(400);","    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/store_module_patch/includes/StockLedgerAdapter.php": ["<?php","// includes/StockLedgerAdapter.php","require_once __DIR__ . '/db.php';","","class StockLedgerAdapter","{","    public static function mirror(PDO $pdo, array $payload): void","    {","        if (!$payload) return;","","        $txnDate     = $payload['txn_date'] ?? date('Y-m-d H:i:s');","        $txnType     = $payload['txn_type'] ?? 'NA';","        $txnNo       = $payload['txn_no'] ?? '';","        $itemId      = (int)($payload['item_id'] ?? 0);","        $warehouseId = (int)($payload['warehouse_id'] ?? 0);","        $projectId   = isset($payload['project_id']) ? (int)$payload['project_id'] : null;","        $binId       = isset($payload['bin_id']) ? (int)$payload['bin_id'] : null;","        $batchId     = isset($payload['batch_id']) ? (int)$payload['batch_id'] : null;","        $qty         = (float)($payload['qty'] ?? 0);","        $unitCost    = isset($payload['unit_cost']) ? (float)$payload['unit_cost'] : 0.0;","        $uomId       = isset($payload['uom_id']) ? (int)$payload['uom_id'] : null;","        $refTable    = $payload['ref_table'] ?? null;","        $refId       = isset($payload['ref_id']) ? (int)$payload['ref_id'] : null;","        $createdBy   = isset($payload['created_by']) ? (int)$payload['created_by'] : null;","","        if ($qty == 0 || $itemId <= 0 || $warehouseId <= 0) {","            return;","        }","","        // Determine WA for OUT from stock_avg (optional but recommended)","        $rate = $unitCost;","        if (in_array(($payload['txn_type'] ?? ''), ['ADJ','GP','ISS'], true)) {","            $q = $pdo->prepare('SELECT avg_cost FROM stock_avg WHERE item_id = :i AND warehouse_id = :w');","            $q->execute([':i' => $itemId, ':w' => $warehouseId]);","            $r = $q->fetch(PDO::FETCH_ASSOC);","            if ($r && isset($r['avg_cost']) && (float)$r['avg_cost'] > 0) {","                $rate = (float)$r['avg_cost'];","            }","        }","","        $stmt = $pdo->prepare('INSERT INTO stock_ledger","            (txn_date, txn_type, txn_no, item_id, warehouse_id, project_id, bin_id, batch_id,","             qty, rate, uom_id, ref_table, ref_id, created_by, created_at)","            VALUES","            (:txn_date, :txn_type, :txn_no, :item_id, :warehouse_id, :project_id, :bin_id, :batch_id,","             :qty, :rate, :uom_id, :ref_table, :ref_id, :created_by, NOW(6))');","","        $stmt->execute([","            ':txn_date'     => $txnDate,","            ':txn_type'     => $txnType,","            ':txn_no'       => $txnNo,","            ':item_id'      => $itemId,","            ':warehouse_id' => $warehouseId,","            ':project_id'   => $projectId,","            ':bin_id'       => $binId,","            ':batch_id'     => $batchId,","            ':qty'          => $qty,","            ':rate'         => $rate,","            ':uom_id'       => $uomId,","            ':ref_table'    => $refTable,","            ':ref_id'       => $refId,","            ':created_by'   => $createdBy,","        ]);","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/cron/iam_reconcile.php": ["<?php","/** PATH: /cron/iam_reconcile.php */","declare(strict_types=1);","","require_once __DIR__ . '/../public_html/includes/db.php';","require_once __DIR__ . '/../public_html/includes/lib_iam_provisioning.php';","","$pdo = db();","$ids = $pdo->query(\"SELECT id FROM employees WHERE status='active'\")->fetchAll(PDO::FETCH_COLUMN);","foreach ($ids as $eid) {","  try { iam_commit_provision($pdo, (int)$eid, 0); }","  catch (Throwable $e) { error_log('[iam_reconcile] employee ' . $eid . ': ' . $e->getMessage()); }","}","echo \"Reconcile complete at \" . date('c') . PHP_EOL;"],
"/home/u989675055/domains/emsinfra.co.in/public_html/cron/reminders_followups.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../public_html/includes/db.php';","","$pdo = db();","","// Due today or overdue and still open","$rows = $pdo->query(\"","  SELECT a.*, u.email AS owner_email, u.name AS owner_name","  FROM crm_activities a","  LEFT JOIN users u ON u.id=a.owner_id","  WHERE a.status IN ('Open','In Progress')","    AND a.due_at IS NOT NULL","    AND (DATE(a.due_at) <= CURRENT_DATE)","  ORDER BY a.owner_id, a.due_at ASC","\")->fetchAll(PDO::FETCH_ASSOC);","","$grouped = [];","foreach ($rows as $r) $grouped[$r['owner_id']][] = $r;","","foreach ($grouped as $uid => $list) {","  $lines = [];","  foreach ($list as $r) {","    $flag = (strtotime($r['due_at']) < time()) ? 'OVERDUE' : 'TODAY';","    $lines[] = sprintf(\"[%s] %s \u2014 %s (Due: %s)\", $flag, $r['type'], $r['subject'], $r['due_at']);","  }","  $subject = \"Follow-ups: \".count($list).\" item(s) due\";","  $body = \"Hi,\\n\\nHere are your due follow-ups:\\n\\n\".implode(\"\\n\", $lines).\"\\n\\n\u2014 CRM\";","  // optional: use your send_mail() helper if available","  if (function_exists('send_mail') && !empty($list[0]['owner_email'])) {","    @send_mail($list[0]['owner_email'], $subject, nl2br(htmlspecialchars($body,ENT_QUOTES|ENT_SUBSTITUTE)));","  }","  $pdo->prepare(\"INSERT INTO notifications_log(user_id,channel,subject,body,created_at) VALUES(:u,'Email',:s,:b,NOW())\")","      ->execute([':u'=>$uid, ':s'=>$subject, ':b'=>$body]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/cron/dpr_from_grn.php": ["","<?php","// CRON-safe example: push yesterday's GRN (plates/structures) to DPR if not already present","declare(strict_types=1);","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/coupler/DprBridge.php';","$pdo = db();","$bridge = new \\Coupler\\DprBridge($pdo);","","// fetch GRN lines of yesterday (adapt query as per your schema)","$st = $pdo->query(\"SELECT gl.* FROM grn_lines gl WHERE DATE(gl.created_at) = DATE_SUB(CURDATE(), INTERVAL 1 DAY)\");","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","foreach($rows as $gl){","  $cat = $gl['item_category'] ?? null; if(!$cat) continue;","  $bridge->fromGrn($gl, (string)$cat, $gl['job_id'] ?? null);","}","echo \"DPR sync complete: \".count($rows).\" GRN lines checked.\";"],
"/home/u989675055/domains/emsinfra.co.in/public_html/dpr/dpr_entry.php": ["<?php","/** PATH: /public_html/dpr/dpr_entry.php"," * PURPOSE: Create & view DPR entries for a Process Work Order (PWO)"," */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';   // also pulls in db.php and rbac.php via require_once","require_login();","if (function_exists('require_permission')) { @require_permission('dpr.entry'); }","","header('Content-Type: text/html; charset=utf-8');","","$pdo = db();","","/* ---------- helpers ---------- */","function int_param(string $k, ?array $src = null): ?int {","  $src = $src ?? $_REQUEST;","  if (!isset($src[$k]) || $src[$k] === '') return null;","  return ctype_digit((string)$src[$k]) ? (int)$src[$k] : null;","}","function num_param(string $k, ?array $src = null): float {","  $src = $src ?? $_POST;","  if (!isset($src[$k]) || trim((string)$src[$k]) === '') return 0.0;","  $v = str_replace([',',' '], ['.',''], (string)$src[$k]);","  return is_numeric($v) ? (float)$v : 0.0;","}","function safe_shift(string $v): string {","  $v = strtoupper(trim($v));","  return in_array($v, ['A','B','C','GEN'], true) ? $v : 'GEN';","}","","/* ---------- inputs ---------- */","$pwo_id = int_param('pwo_id');","","/* ---------- POST: save DPR row ---------- */","if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action']) && $_POST['action'] === 'save') {","  $pwo_id = int_param('pwo_id', $_POST);","  if (!$pwo_id) {","    http_response_code(400);","    echo \"<p style='color:#b00'>Missing or invalid PWO.</p>\";","    exit;","  }","","  $work_date     = $_POST['work_date'] ?? date('Y-m-d');","  $shift         = safe_shift($_POST['shift'] ?? 'GEN');","  $qty_done      = num_param('qty_done');","  $rejected_qty  = num_param('rejected_qty');","  $rework_qty    = num_param('rework_qty');","  $man_hours     = num_param('man_hours');","  $machine_hours = num_param('machine_hours');","  $machine_metric= num_param('machine_metric');","  $comm_qty      = num_param('comm_qty');","  $notes         = trim((string)($_POST['notes'] ?? ''));","  $entered_by    = current_user_id();","","  // ensure the PWO exists","  $chk = $pdo->prepare(\"SELECT id FROM process_work_orders WHERE id = ?\");","  $chk->execute([$pwo_id]);","  if (!$chk->fetch()) {","    http_response_code(404);","    echo \"<p style='color:#b00'>PWO not found.</p>\";","    exit;","  }","","  // Insert into dpr_process_logs (all columns exist in your schema, including notes)","  $ins = $pdo->prepare(\"","    INSERT INTO dpr_process_logs","      (pwo_id, work_date, shift, qty_done, rejected_qty, rework_qty,","       man_hours, machine_hours, rate_applied, amount, entered_by, approved_by,","       notes, machine_metric, comm_qty)","    VALUES","      (:pwo_id, :work_date, :shift, :qty_done, :rejected_qty, :rework_qty,","       :man_hours, :machine_hours, NULL, NULL, :entered_by, NULL,","       :notes, :machine_metric, :comm_qty)","  \");","  $ins->execute([","    ':pwo_id'         => $pwo_id,","    ':work_date'      => $work_date,","    ':shift'          => $shift,","    ':qty_done'       => $qty_done,","    ':rejected_qty'   => $rejected_qty,","    ':rework_qty'     => $rework_qty,","    ':man_hours'      => $man_hours,","    ':machine_hours'  => $machine_hours,","    ':entered_by'     => $entered_by,","    ':notes'          => $notes,","    ':machine_metric' => $machine_metric,","    ':comm_qty'       => $comm_qty,","  ]);","","  // redirect to avoid resubmit (PRG)","  $id = (int)$pdo->lastInsertId();","  header('Location: dpr_entry.php?pwo_id=' . $pwo_id . '&ok=1&new_id=' . $id);","  exit;","}","","/* ---------- If no PWO chosen: show chooser ---------- */","if (!$pwo_id) {","  $rows = $pdo->query(\"","    SELECT","      pwo.id,","      pwo.status,","      pwo.plan_start_date,","      pwo.plan_end_date,","      wc.code  AS wc_code,","      wc.name  AS wc_name,","      p.code   AS proc_code,","      p.name   AS proc_name,","      bc.description AS comp_desc","    FROM process_work_orders AS pwo","    LEFT JOIN work_centers AS wc ON wc.id = pwo.work_center_id","    LEFT JOIN processes    AS p  ON p.id  = pwo.process_id","    LEFT JOIN bom_components AS bc ON bc.id = pwo.bom_component_id","    ORDER BY pwo.created_at DESC","    LIMIT 25","  \")->fetchAll();","","  ?>","  <!doctype html>","  <html>","  <head>","    <meta charset=\"utf-8\">","    <title>Select Work Order - DPR Entry</title>","    <style>","      body { font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif; padding: 18px; }","      table { border-collapse: collapse; width: 100%; }","      th, td { padding: 8px 10px; border-bottom: 1px solid #eee; text-align: left; }","      th { background: #fafafa; }","      a.btn { display:inline-block; padding:6px 10px; border:1px solid #ccc; border-radius:6px; text-decoration:none; }","    </style>","  </head>","  <body>","    <h2>DPR Entry: Choose a Work Order</h2>","    <table>","      <thead>","        <tr>","          <th>PWO ID</th>","          <th>Process</th>","          <th>Work Center</th>","          <th>Component</th>","          <th>Status</th>","          <th>Plan Dates</th>","          <th></th>","        </tr>","      </thead>","      <tbody>","      <?php foreach ($rows as $r): ?>","        <tr>","          <td><?= (int)$r['id'] ?></td>","          <td><?= htmlspecialchars(trim(($r['proc_code']??'').' '.$r['proc_name']??'')) ?></td>","          <td><?= htmlspecialchars(trim(($r['wc_code']??'').' '.$r['wc_name']??'')) ?></td>","          <td><?= htmlspecialchars($r['comp_desc'] ?? '') ?></td>","          <td><?= htmlspecialchars($r['status'] ?? '') ?></td>","          <td>","            <?php","              $ps = $r['plan_start_date'] ? htmlspecialchars($r['plan_start_date']) : '';","              $pe = $r['plan_end_date']   ? htmlspecialchars($r['plan_end_date'])   : '';","              echo trim($ps . ($pe ? ' \u2192 ' . $pe : ''));","            ?>","          </td>","          <td><a class=\"btn\" href=\"dpr_entry.php?pwo_id=<?= (int)$r['id'] ?>\">Enter DPR</a></td>","        </tr>","      <?php endforeach; ?>","      </tbody>","    </table>","  </body>","  </html>","  <?php","  exit;","}","","/* ---------- Load selected PWO details ---------- */","$info = $pdo->prepare(\"","  SELECT","    pwo.*,","    wc.code  AS wc_code, wc.name AS wc_name,","    p.code   AS proc_code, p.name AS proc_name,","    bc.description AS comp_desc, bc.id AS bom_component_id","  FROM process_work_orders AS pwo","  LEFT JOIN work_centers AS wc ON wc.id = pwo.work_center_id","  LEFT JOIN processes    AS p  ON p.id  = pwo.process_id","  LEFT JOIN bom_components AS bc ON bc.id = pwo.bom_component_id","  WHERE pwo.id = ?","\");","$info->execute([$pwo_id]);","$pwo = $info->fetch();","if (!$pwo) {","  http_response_code(404);","  echo \"<p style='color:#b00'>PWO not found.</p>\";","  exit;","}","","/* ---------- Existing logs ---------- */","$logs = $pdo->prepare(\"","  SELECT id, work_date, shift, qty_done, rejected_qty, rework_qty, man_hours, machine_hours, machine_metric, comm_qty, notes, created_at","  FROM dpr_process_logs","  WHERE pwo_id = ?","  ORDER BY work_date DESC, id DESC","\");","$logs->execute([$pwo_id]);","$logRows = $logs->fetchAll();","","$ok = isset($_GET['ok']);","$new_id = isset($_GET['new_id']) ? (int)$_GET['new_id'] : null;","?>","<!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>DPR Entry - PWO #<?= (int)$pwo_id ?></title>","  <style>","    body { font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif; padding: 18px; }","    .wrap { max-width: 1080px; margin: 0 auto; }","    .card { border:1px solid #eee; border-radius:10px; padding:16px; margin-bottom:18px; }","    h2,h3 { margin: 0 0 10px; }","    label { display:block; margin: 8px 0 4px; font-weight:600; }","    input[type=\"text\"], input[type=\"date\"], input[type=\"number\"], select, textarea {","      width: 100%; padding: 8px; border:1px solid #ccc; border-radius:8px; box-sizing:border-box;","    }","    .row { display:flex; gap:12px; }","    .col { flex:1; }","    .actions { margin-top: 12px; }","    button { padding:8px 14px; border-radius:8px; border:1px solid #ccc; background:#f7f7f7; cursor:pointer; }","    table { border-collapse: collapse; width: 100%; }","    th, td { padding: 8px 10px; border-bottom: 1px solid #eee; text-align: left; vertical-align: top; }","    th { background: #fafafa; }","    .ok { background:#e9f9ef; border:1px solid #b7e5c6; padding:10px; border-radius:8px; margin-bottom:12px; }","  </style>","</head>","<body>","<div class=\"wrap\">","  <div class=\"card\">","    <h2>DPR Entry \u2014 PWO #<?= (int)$pwo['id'] ?></h2>","    <div><strong>Process:</strong> <?= htmlspecialchars(trim(($pwo['proc_code']??'').' '.$pwo['proc_name']??'')) ?></div>","    <div><strong>Work Center:</strong> <?= htmlspecialchars(trim(($pwo['wc_code']??'').' '.$pwo['wc_name']??'')) ?></div>","    <div><strong>Component:</strong> <?= htmlspecialchars($pwo['comp_desc'] ?? '') ?></div>","    <div><strong>Status:</strong> <?= htmlspecialchars($pwo['status'] ?? '') ?></div>","  </div>","","  <?php if ($ok): ?>","    <div class=\"ok\">Saved DPR entry <?= $new_id ? ('#'.(int)$new_id) : '' ?> successfully.</div>","  <?php endif; ?>","","  <div class=\"card\">","    <h3>Add DPR Entry</h3>","    <form method=\"post\" action=\"dpr_entry.php\">","      <input type=\"hidden\" name=\"action\" value=\"save\">","      <input type=\"hidden\" name=\"pwo_id\" value=\"<?= (int)$pwo['id'] ?>\">","","      <div class=\"row\">","        <div class=\"col\">","          <label for=\"work_date\">Work Date</label>","          <input id=\"work_date\" name=\"work_date\" type=\"date\" value=\"<?= htmlspecialchars($_POST['work_date'] ?? date('Y-m-d')) ?>\">","        </div>","        <div class=\"col\">","          <label for=\"shift\">Shift</label>","          <select id=\"shift\" name=\"shift\">","            <?php","              $cur = safe_shift($_POST['shift'] ?? 'GEN');","              foreach (['A','B','C','GEN'] as $s) {","                $sel = $cur === $s ? ' selected' : '';","                echo \"<option value=\\\"$s\\\"$sel>$s</option>\";","              }","            ?>","          </select>","        </div>","      </div>","","      <div class=\"row\">","        <div class=\"col\">","          <label for=\"qty_done\">Prod. Qty</label>","          <input id=\"qty_done\" name=\"qty_done\" type=\"number\" step=\"0.001\" value=\"<?= htmlspecialchars((string)($_POST['qty_done'] ?? '0')) ?>\">","        </div>","        <div class=\"col\">","          <label for=\"comm_qty\">Billing/Comm Qty</label>","          <input id=\"comm_qty\" name=\"comm_qty\" type=\"number\" step=\"0.001\" value=\"<?= htmlspecialchars((string)($_POST['comm_qty'] ?? '0')) ?>\">","        </div>","        <div class=\"col\">","          <label for=\"machine_metric\">Machine Metric</label>","          <input id=\"machine_metric\" name=\"machine_metric\" type=\"number\" step=\"0.001\" value=\"<?= htmlspecialchars((string)($_POST['machine_metric'] ?? '0')) ?>\">","        </div>","      </div>","","      <div class=\"row\">","        <div class=\"col\">","          <label for=\"rejected_qty\">Rejected Qty</label>","          <input id=\"rejected_qty\" name=\"rejected_qty\" type=\"number\" step=\"0.001\" value=\"<?= htmlspecialchars((string)($_POST['rejected_qty'] ?? '0')) ?>\">","        </div>","        <div class=\"col\">","          <label for=\"rework_qty\">Rework Qty</label>","          <input id=\"rework_qty\" name=\"rework_qty\" type=\"number\" step=\"0.001\" value=\"<?= htmlspecialchars((string)($_POST['rework_qty'] ?? '0')) ?>\">","        </div>","      </div>","","      <div class=\"row\">","        <div class=\"col\">","          <label for=\"man_hours\">Man Hours</label>","          <input id=\"man_hours\" name=\"man_hours\" type=\"number\" step=\"0.01\" value=\"<?= htmlspecialchars((string)($_POST['man_hours'] ?? '0')) ?>\">","        </div>","        <div class=\"col\">","          <label for=\"machine_hours\">Machine Hours</label>","          <input id=\"machine_hours\" name=\"machine_hours\" type=\"number\" step=\"0.01\" value=\"<?= htmlspecialchars((string)($_POST['machine_hours'] ?? '0')) ?>\">","        </div>","      </div>","","      <label for=\"notes\">Notes</label>","      <textarea id=\"notes\" name=\"notes\" rows=\"3\" maxlength=\"512\"><?= htmlspecialchars((string)($_POST['notes'] ?? '')) ?></textarea>","","      <div class=\"actions\">","        <button type=\"submit\">Save DPR</button>","        <a href=\"dpr_entry.php\" style=\"margin-left:8px;\">Choose another PWO</a>","      </div>","    </form>","  </div>","","  <div class=\"card\">","    <h3>Existing Entries</h3>","    <table>","      <thead>","        <tr>","          <th>ID</th>","          <th>Date</th>","          <th>Shift</th>","          <th>Qty</th>","          <th>Rejected</th>","          <th>Rework</th>","          <th>Man Hrs</th>","          <th>Machine Hrs</th>","          <th>Metric</th>","          <th>Comm Qty</th>","          <th>Notes</th>","          <th>Created</th>","        </tr>","      </thead>","      <tbody>","      <?php foreach ($logRows as $lr): ?>","        <tr>","          <td><?= (int)$lr['id'] ?></td>","          <td><?= htmlspecialchars($lr['work_date']) ?></td>","          <td><?= htmlspecialchars($lr['shift']) ?></td>","          <td><?= htmlspecialchars($lr['qty_done']) ?></td>","          <td><?= htmlspecialchars($lr['rejected_qty']) ?></td>","          <td><?= htmlspecialchars($lr['rework_qty']) ?></td>","          <td><?= htmlspecialchars($lr['man_hours']) ?></td>","          <td><?= htmlspecialchars($lr['machine_hours']) ?></td>","          <td><?= htmlspecialchars($lr['machine_metric']) ?></td>","          <td><?= htmlspecialchars($lr['comm_qty']) ?></td>","          <td><?= nl2br(htmlspecialchars($lr['notes'] ?? '')) ?></td>","          <td><?= htmlspecialchars($lr['created_at']) ?></td>","        </tr>","      <?php endforeach; ?>","      <?php if (!$logRows): ?>","        <tr><td colspan=\"12\">No DPR entries yet.</td></tr>","      <?php endif; ?>","      </tbody>","    </table>","  </div>","</div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/dpr/dpr_console.php": ["","<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_login(); require_permission('dpr.view');","$pdo=db();","if($_SERVER['REQUEST_METHOD']==='POST'){","  $st=$pdo->prepare(\"INSERT INTO dpr_activity_map (item_category,activity,unit) VALUES (?,?,?) ON DUPLICATE KEY UPDATE activity=VALUES(activity), unit=VALUES(unit)\");","  $st->execute([$_POST['item_category'], $_POST['activity'], $_POST['unit']]);","  header('Location: ./dpr_console.php'); exit;","}","$maps=$pdo->query(\"SELECT * FROM dpr_activity_map ORDER BY item_category\")->fetchAll(PDO::FETCH_ASSOC);","$latest=$pdo->query(\"SELECT * FROM dpr_entries ORDER BY id DESC LIMIT 200\")->fetchAll(PDO::FETCH_ASSOC);","?><!doctype html><html><head><meta charset=\"utf-8\"><title>DPR Bridge</title>","<style>body{font-family:system-ui,Segoe UI,Roboto,Arial,sans-serif;margin:20px}table{border-collapse:collapse;width:100%}th,td{border:1px solid #e5e7eb;padding:6px}label{display:block;margin:6px 0}</style></head><body>","<h1>DPR Bridge</h1>","<h3>Map Item Category \u2192 DPR Activity</h3>","<form method=\"post\">","<label>Item Category <input name=\"item_category\" required placeholder=\"plate\"></label>","<label>Activity <input name=\"activity\" required placeholder=\"DPR Plate Received\"></label>","<label>Unit <input name=\"unit\" value=\"kg\"></label>","<button>Save Mapping</button>","</form>","<hr>","<h3>Latest DPR Entries</h3>","<table><thead><tr><?php if($latest){ foreach(array_keys($latest[0]) as $c) echo \"<th>\".htmlspecialchars($c).\"</th>\"; } ?></tr></thead><tbody>","<?php foreach($latest as $r){ echo \"<tr>\"; foreach($r as $v) echo \"<td>\".htmlspecialchars((string)$v).\"</td>\"; echo \"</tr>\"; } ?>","</tbody></table>","<hr>","<h3>Current Mappings</h3>","<table><thead><tr><th>Item Category</th><th>Activity</th><th>Unit</th></tr></thead><tbody>","<?php foreach($maps as $m): ?><tr><td><?= htmlspecialchars($m['item_category']) ?></td><td><?= htmlspecialchars($m['activity']) ?></td><td><?= htmlspecialchars($m['unit']) ?></td></tr><?php endforeach; ?>","</tbody></table>","</body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/routing/qty_rules.php": ["<?php","/** PATH: /public_html/routing/qty_rules.php"," * CRUD for process_qty_rules and a test harness to try a rule against a bom_component."," */","declare(strict_types=1);","","$ROOT = dirname(__DIR__);","require_once $ROOT . '/includes/auth.php';","require_once $ROOT . '/includes/db.php';","require_once $ROOT . '/includes/rbac.php';","require_once $ROOT . '/includes/csrf.php';","require_once $ROOT . '/includes/helpers.php';","require_once $ROOT . '/includes/services/MetricService.php';","","/* ---- Polyfills ---- */","if (!function_exists('e')) { function e($v): string { return htmlspecialchars((string)$v, ENT_QUOTES|ENT_SUBSTITUTE,'UTF-8'); } }","if (!function_exists('redirect')) { function redirect(string $url): void { header('Location: '.$url); exit; } }","if (!function_exists('csrf_hidden_input')) {","  function csrf_hidden_input(): string { $t=function_exists('csrf_token')?csrf_token():''; return '<input type=\"hidden\" name=\"csrf\" value=\"'.e($t).'\">'; }","}","if (!function_exists('csrf_require_token')) {","  function csrf_require_token(): void {","    if (($_SERVER['REQUEST_METHOD'] ?? 'GET') === 'POST') {","      $tok = $_POST['csrf'] ?? '';","      if (function_exists('csrf_token') && $tok !== csrf_token()) { http_response_code(400); echo 'Invalid CSRF token.'; exit; }","    }","  }","}","","require_login();","require_permission('routing.manage');","","$pdo = db();","$UI_PATH     = $ROOT . '/ui';","$PAGE_TITLE  = 'Process Qty Rules';","$ACTIVE_MENU = 'routing.rules';","","$errors = [];","$flash = $_SESSION['flash'] ?? null; unset($_SESSION['flash']);","","function fetch_rules(PDO $pdo): array {","  $sql = \"SELECT rqr.*, u.code AS uom_code","            FROM process_qty_rules rqr","       LEFT JOIN uom u ON u.id = rqr.result_uom_id","        ORDER BY rqr.operation_code, rqr.id DESC\";","  return $pdo->query($sql)->fetchAll(PDO::FETCH_ASSOC);","}","function fetch_bom_components(PDO $pdo, int $bom_id): array {","  $st = $pdo->prepare(\"SELECT id, part_id, description FROM bom_components WHERE bom_id=:b ORDER BY id ASC\");","  $st->execute([':b'=>$bom_id]);","  return $st->fetchAll(PDO::FETCH_ASSOC);","}","function fetch_boms(PDO $pdo): array {","  $sql = \"SELECT b.id, b.bom_no FROM bom b ORDER BY b.id DESC LIMIT 200\";","  return $pdo->query($sql)->fetchAll(PDO::FETCH_ASSOC);","}","","if (($_SERVER['REQUEST_METHOD'] ?? 'GET') === 'POST') {","  csrf_require_token();","  $act = $_POST['action'] ?? '';","  if ($act === 'create') {","    $op = trim((string)($_POST['operation_code'] ?? ''));","    $expr = trim((string)($_POST['expr'] ?? ''));","    $uom_code = trim((string)($_POST['uom_code'] ?? ''));","    if (!$op || !$expr || !$uom_code) { $errors[] = 'Operation, expression, and UOM are required.'; }","    else {","      $uom_id = MetricService::uomIdByCode($pdo, $uom_code);","      if (!$uom_id) { $errors[] = \"Unknown UOM code: $uom_code\"; }","      else {","        $st = $pdo->prepare(\"INSERT INTO process_qty_rules (operation_code, expr, result_uom_id, required_vars_json) VALUES (:op, :ex, :u, '[]')\");","        $st->execute([':op'=>$op, ':ex'=>$expr, ':u'=>$uom_id]);","        $_SESSION['flash'] = ['type'=>'success','msg'=>'Rule created.'];","        redirect('/routing/qty_rules.php');","      }","    }","  }","  if ($act === 'delete') {","    $id = (int)($_POST['id'] ?? 0);","    $st = $pdo->prepare(\"DELETE FROM process_qty_rules WHERE id=:id\");","    $st->execute([':id'=>$id]);","    $_SESSION['flash'] = ['type'=>'success','msg'=>'Rule deleted.'];","    redirect('/routing/qty_rules.php');","  }","  if ($act === 'test') {","    $rule_id = (int)($_POST['rule_id'] ?? 0);","    $bomc_id = (int)($_POST['bomc_id'] ?? 0);","    // Fetch rows","    $r = $pdo->prepare(\"SELECT * FROM process_qty_rules WHERE id=:id\");","    $r->execute([':id'=>$rule_id]);","    $rule = $r->fetch(PDO::FETCH_ASSOC);","    $b = $pdo->prepare(\"SELECT * FROM bom_components WHERE id=:id\");","    $b->execute([':id'=>$bomc_id]);","    $bc = $b->fetch(PDO::FETCH_ASSOC);","    if ($rule && $bc) {","      $vars = MetricService::varsForBomComponent($bc);","      try {","        $qty = MetricService::evalExpr((string)$rule['expr'], $vars);","        $_SESSION['flash'] = ['type'=>'success','msg'=>\"Test result: $qty\"];","      } catch (Throwable $e) {","        $_SESSION['flash'] = ['type'=>'danger','msg'=>$e->getMessage()];","      }","    } else {","      $_SESSION['flash'] = ['type'=>'warning','msg'=>'Pick a valid rule and component to test.'];","    }","    redirect('/routing/qty_rules.php');","  }","}","","$rules = fetch_rules($pdo);","$boms  = fetch_boms($pdo);","","require_once $UI_PATH . '/init.php';","require_once $UI_PATH . '/layout_start.php';","?>","<div class=\"container my-3\">","  <h1 class=\"h3\"><?= e($PAGE_TITLE) ?></h1>","","  <?php if (!empty($flash)): ?>","    <div class=\"alert alert-<?= e($flash['type']) ?>\"><?= e($flash['msg']) ?></div>","  <?php endif; ?>","  <?php if ($errors): ?>","    <div class=\"alert alert-danger\"><ul class=\"mb-0\"><?php foreach ($errors as $er): ?><li><?= e($er) ?></li><?php endforeach; ?></ul></div>","  <?php endif; ?>","","  <div class=\"card mb-4\">","    <div class=\"card-header\">Create rule</div>","    <div class=\"card-body\">","      <form method=\"post\" class=\"row g-2\">","        <?= csrf_hidden_input() ?>","        <input type=\"hidden\" name=\"action\" value=\"create\">","        <div class=\"col-md-3\"><input class=\"form-control\" name=\"operation_code\" placeholder=\"CUT, WELD, PAINT\"></div>","        <div class=\"col-md-6\"><input class=\"form-control\" name=\"expr\" placeholder=\"e.g., qty * L\"></div>","        <div class=\"col-md-2\"><input class=\"form-control\" name=\"uom_code\" placeholder=\"m | m2 | kg\"></div>","        <div class=\"col-md-1\"><button class=\"btn btn-success w-100\">Add</button></div>","      </form>","      <div class=\"form-text\">Vars: L,W,T,D,H (meters), L_mm,W_mm,... (mm), qty, density_kg_m3. Functions: abs,round,ceil,floor,min,max,pow,pi.</div>","    </div>","  </div>","","  <div class=\"card mb-4\">","    <div class=\"card-header\">Rules</div>","    <div class=\"table-responsive\">","      <table class=\"table table-sm table-bordered align-middle\">","        <thead><tr><th>ID</th><th>Operation</th><th>Expression</th><th>UOM</th><th>Test</th><th></th></tr></thead>","        <tbody>","          <?php foreach ($rules as $r): ?>","            <tr>","              <td><?= (int)$r['id'] ?></td>","              <td><?= e($r['operation_code']) ?></td>","              <td><code><?= e($r['expr']) ?></code></td>","              <td><?= e($r['uom_code']) ?></td>","              <td>","                <form method=\"post\" class=\"d-flex align-items-center gap-2\">","                  <?= csrf_hidden_input() ?>","                  <input type=\"hidden\" name=\"action\" value=\"test\">","                  <input type=\"hidden\" name=\"rule_id\" value=\"<?= (int)$r['id'] ?>\">","                  <select name=\"bomc_id\" class=\"form-select form-select-sm\" style=\"min-width:220px\">","                    <option value=\"\">Pick component (by latest 200 BOMs)</option>","                    <?php foreach ($boms as $b): ?>","                      <?php foreach (fetch_bom_components($pdo, (int)$b['id']) as $c): ?>","                        <option value=\"<?= (int)$c['id'] ?>\">#<?= (int)$c['id'] ?> <?= e(($c['part_id'] ?: ('#'.$c['id'])).' \u2014 '.$c['description']) ?></option>","                      <?php endforeach; ?>","                    <?php endforeach; ?>","                  </select>","                  <button class=\"btn btn-sm btn-outline-primary\">Run</button>","                </form>","              </td>","              <td>","                <form method=\"post\" onsubmit=\"return confirm('Delete rule?')\" class=\"d-inline\">","                  <?= csrf_hidden_input() ?>","                  <input type=\"hidden\" name=\"action\" value=\"delete\">","                  <input type=\"hidden\" name=\"id\" value=\"<?= (int)$r['id'] ?>\">","                  <button class=\"btn btn-sm btn-outline-danger\">Delete</button>","                </form>","              </td>","            </tr>","          <?php endforeach; ?>","          <?php if (!$rules): ?><tr><td colspan=\"6\" class=\"text-muted\">No rules yet.</td></tr><?php endif; ?>","        </tbody>","      </table>","    </div>","  </div>","</div>","<?php require_once $UI_PATH . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/assets/ems_phase04_ui.css": [":root{--fg:#1f2937;--bg:#fff;--muted:#6b7280;--line:#e5e7eb;}","body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;color:var(--fg);background:var(--bg);margin:24px}","section{border:1px solid var(--line);border-radius:12px;padding:16px;margin:16px 0}","label{display:block;font-size:12px;color:var(--muted);margin-bottom:4px}","input,select,button{padding:8px 10px;border:1px solid var(--line);border-radius:8px;font-size:14px}",".row{display:grid;grid-template-columns:repeat(4,1fr);gap:12px}.row-3{display:grid;grid-template-columns:repeat(3,1fr);gap:12px}",".table{width:100%;border-collapse:collapse;margin-top:8px}.table th,.table td{border:1px solid var(--line);padding:8px;font-size:13px}",".badge{display:inline-block;padding:2px 8px;border-radius:999px;font-size:12px}",".badge.ok{background:#ecfdf5;color:#065f46}.badge.warn{background:#fffbeb;color:#92400e}.badge.err{background:#fef2f2;color:#991b1b}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/items/items_delete.php": ["<?php","/** PATH: /public_html/items/items_delete.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('materials.item.manage');","","$pdo = db();","$id = (int)($_GET['id'] ?? 0);","","if ($id > 0) {","  $pdo->prepare(\"UPDATE items SET status='inactive' WHERE id=?\")->execute([$id]);","}","","header('Location: /items/items_list.php');","exit;"],
"/home/u989675055/domains/emsinfra.co.in/public_html/items/items_form.php": ["<?php","/** PATH: /public_html/items/items_form.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","$pdo = db();","","$id = (int)($_GET['id'] ?? 0);","$is_edit = $id > 0;","","if ($is_edit) {","  require_permission('materials.item.view');","} else {","  require_permission('materials.item.manage');","}","","// Load dropdowns","$cats = $pdo->query(\"SELECT id, name FROM material_categories ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","$subs = $pdo->query(\"SELECT id, category_id, name FROM material_subcategories ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","$uoms = $pdo->query(\"SELECT id, code, name FROM uom ORDER BY code\")->fetchAll(PDO::FETCH_ASSOC);","","// Load suggestions for makes (schema-safe: falls back if 'code' column missing)","$makesAll = [];","try {","  $stmt = $pdo->query(\"SELECT id, code, name FROM makes WHERE status='active' ORDER BY name\");","  $makesAll = $stmt->fetchAll(PDO::FETCH_ASSOC);","} catch (PDOException $e) {","  if ($e->getCode() === '42S22') { // unknown column","    $stmt = $pdo->query(\"SELECT id, name FROM makes WHERE status='active' ORDER BY name\");","    $tmp = $stmt->fetchAll(PDO::FETCH_ASSOC);","    foreach ($tmp as $r) $makesAll[] = ['id'=>$r['id'], 'code'=>null, 'name'=>$r['name']];","  } else {","    throw $e;","  }","}","","// Load item","$item = [","  'material_code' => '',","  'name' => '',","  'category_id' => '',","  'subcategory_id' => '',","  'uom_id' => '',","  'grade' => '',","  'thickness_mm' => '',","  'width_mm' => '',","  'length_mm' => '',","  'spec' => '',","  'status' => 'active',","];","$itemMakeNames = [];","","if ($is_edit) {","  $st = $pdo->prepare(\"SELECT * FROM items WHERE id=? LIMIT 1\");","  $st->execute([$id]);","  $row = $st->fetch(PDO::FETCH_ASSOC);","  if ($row) $item = array_merge($item, $row);","","  $stm = $pdo->prepare(\"SELECT m.name FROM item_makes im JOIN makes m ON m.id=im.make_id WHERE im.item_id=? ORDER BY m.name\");","  $stm->execute([$id]);","  $itemMakeNames = array_map(fn($r)=>$r['name'], $stm->fetchAll(PDO::FETCH_ASSOC));","}","","// SAVE (unchanged business logic)","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  require_permission('materials.item.manage');","","  $material_code = trim($_POST['material_code'] ?? '');","  $name          = trim($_POST['name'] ?? '');","  $category_id   = (int)($_POST['category_id'] ?? 0);","  $subcategory_id= $_POST['subcategory_id'] !== '' ? (int)$_POST['subcategory_id'] : null;","  $uom_id        = (int)($_POST['uom_id'] ?? 0);","  $grade         = trim($_POST['grade'] ?? '');","  $thickness_mm  = $_POST['thickness_mm'] !== '' ? (float)$_POST['thickness_mm'] : null;","  $width_mm      = $_POST['width_mm'] !== '' ? (float)$_POST['width_mm'] : null;","  $length_mm     = $_POST['length_mm'] !== '' ? (float)$_POST['length_mm'] : null;","  $spec          = trim($_POST['spec'] ?? '');","  $status        = ($_POST['status'] ?? 'active') === 'inactive' ? 'inactive' : 'active';","","  // validate","  $errs = [];","  if ($material_code === '') $errs[] = 'Material code is required.';","  if ($name === '') $errs[] = 'Name is required.';","  if ($category_id <= 0) $errs[] = 'Category is required.';","  if ($uom_id <= 0) $errs[] = 'UOM is required.';","","  if (!$errs) {","    if ($is_edit) {","      $sql = \"UPDATE items SET material_code=?, name=?, category_id=?, subcategory_id=?, uom_id=?, grade=?, thickness_mm=?, width_mm=?, length_mm=?, spec=?, status=? WHERE id=?\";","      $pdo->prepare($sql)->execute([$material_code,$name,$category_id,$subcategory_id,$uom_id,$grade,$thickness_mm,$width_mm,$length_mm,$spec,$status,$id]);","      $item_id = $id;","    } else {","      $sql = \"INSERT INTO items (material_code, name, category_id, subcategory_id, uom_id, grade, thickness_mm, width_mm, length_mm, spec, status)","              VALUES (?,?,?,?,?,?,?,?,?,?,?)\";","      $pdo->prepare($sql)->execute([$material_code,$name,$category_id,$subcategory_id,$uom_id,$grade,$thickness_mm,$width_mm,$length_mm,$spec,$status]);","      $item_id = (int)$pdo->lastInsertId();","    }","","    // ---- Make chips save (no dependency on makes.code column) ----","    $tokens = array_filter(array_map('trim', $_POST['make_tokens'] ?? []));","    $pdo->prepare(\"DELETE FROM item_makes WHERE item_id=?\")->execute([$item_id]);","","    if ($tokens) {","      $hasCode = false;","      try {","        $pdo->query(\"SELECT code FROM makes LIMIT 0\"); // test presence","        $hasCode = true;","      } catch (PDOException $e) { if ($e->getCode() !== '42S22') throw $e; }","","      $findByName = $pdo->prepare(\"SELECT id FROM makes WHERE name=? LIMIT 1\");","      $findByCode = $hasCode ? $pdo->prepare(\"SELECT id FROM makes WHERE code=? LIMIT 1\") : null;","      $insMake    = $hasCode","        ? $pdo->prepare(\"INSERT INTO makes (code,name,status) VALUES (?,?, 'active')\")","        : $pdo->prepare(\"INSERT INTO makes (name,status) VALUES (?, 'active')\");","      $insLink    = $pdo->prepare(\"INSERT IGNORE INTO item_makes (item_id, make_id) VALUES (?,?)\");","","      $makeCodeFrom = function(string $name): string {","        $code = preg_replace('/[^A-Z0-9-]+/u', '', strtoupper(str_replace(' ', '-', $name)));","        $code = trim($code, '-');","        return $code !== '' ? $code : strtoupper(bin2hex(random_bytes(2)));","      };","","      foreach ($tokens as $t) {","        $makeId = null;","","        $findByName->execute([$t]);","        $r = $findByName->fetch(PDO::FETCH_ASSOC);","        if ($r) {","          $makeId = (int)$r['id'];","        } else {","          if ($hasCode && $findByCode) {","            $findByCode->execute([$t]);","            $r = $findByCode->fetch(PDO::FETCH_ASSOC);","            if ($r) $makeId = (int)$r['id'];","          }","          if (!$makeId) {","            if ($hasCode) {","              $base = $makeCodeFrom($t);","              $try = $base; $n=1;","              while (true) {","                $chk = $pdo->prepare(\"SELECT 1 FROM makes WHERE code=? LIMIT 1\");","                $chk->execute([$try]);","                if (!$chk->fetchColumn()) break;","                $n++; $try = $base . '-' . $n;","              }","              $insMake->execute([$try, $t]); // (code, name)","            } else {","              $insMake->execute([$t]); // (name) only","            }","            $makeId = (int)$pdo->lastInsertId();","          }","        }","        if ($makeId) $insLink->execute([$item_id, $makeId]);","      }","    }","    // --------------------------------------------------------------","","    header('Location: /items/items_list.php');","    exit;","  } else {","    $item = compact('material_code','name','category_id','subcategory_id','uom_id','grade','thickness_mm','width_mm','length_mm','spec','status');","    $itemMakeNames = $tokens ?? $itemMakeNames;","  }","}","","include __DIR__ . '/../ui/layout_start.php';","?>","<!-- Page header bar -->","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <nav aria-label=\"breadcrumb\">","    <ol class=\"breadcrumb mb-0\">","      <li class=\"breadcrumb-item\"><a href=\"/dashboard.php\">Dashboard</a></li>","      <li class=\"breadcrumb-item\"><a href=\"/items/items_list.php\">Items</a></li>","      <li class=\"breadcrumb-item active\" aria-current=\"page\"><?= $is_edit ? 'Edit' : 'Add' ?></li>","    </ol>","  </nav>","  <div class=\"d-flex gap-2\">","    <a class=\"btn btn-light btn-sm\" href=\"/items/items_list.php\"><i class=\"bi bi-arrow-left\"></i> Back</a>","  </div>","</div>","","<?php if (!empty($errs)): ?>","  <div class=\"alert alert-danger shadow-sm\">","    <div class=\"fw-semibold mb-1\">Please fix the following:</div>","    <ul class=\"mb-0\"><?php foreach ($errs as $e) echo '<li>'.htmlspecialchars($e).'</li>'; ?></ul>","  </div>","<?php endif; ?>","","<form method=\"post\" class=\"card shadow-sm p-3\">","  <div class=\"row g-3\">","    <div class=\"col-12\">","      <h2 class=\"h6 text-uppercase text-muted mb-2\">Basic</h2>","    </div>","","    <div class=\"col-md-3\">","      <label class=\"form-label\">Material Code <span class=\"text-danger\">*</span></label>","      <input name=\"material_code\" class=\"form-control\" value=\"<?= htmlspecialchars((string)$item['material_code']) ?>\" required>","      <div class=\"form-text\">Use your code pattern (e.g., CAT-SUB-YYYY-SEQ4).</div>","    </div>","    <div class=\"col-md-5\">","      <label class=\"form-label\">Name <span class=\"text-danger\">*</span></label>","      <input name=\"name\" class=\"form-control\" value=\"<?= htmlspecialchars((string)$item['name']) ?>\" required>","    </div>","    <div class=\"col-md-2\">","      <label class=\"form-label\">UOM <span class=\"text-danger\">*</span></label>","      <select name=\"uom_id\" class=\"form-select\" required>","        <option value=\"\">--</option>","        <?php foreach ($uoms as $u): ?>","          <option value=\"<?=$u['id']?>\" <?= (int)$item['uom_id']===(int)$u['id']?'selected':'' ?>>","            <?= htmlspecialchars($u['code']) ?>","          </option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-md-2\">","      <label class=\"form-label\">Status</label>","      <select name=\"status\" class=\"form-select\">","        <option value=\"active\"   <?= $item['status']==='active'?'selected':'' ?>>Active</option>","        <option value=\"inactive\" <?= $item['status']==='inactive'?'selected':'' ?>>Inactive</option>","      </select>","    </div>","","    <div class=\"col-12 mt-2\">","      <h2 class=\"h6 text-uppercase text-muted mb-2\">Classification</h2>","    </div>","","    <div class=\"col-md-3\">","      <label class=\"form-label\">Category <span class=\"text-danger\">*</span></label>","      <select name=\"category_id\" class=\"form-select\" required>","        <option value=\"\">--</option>","        <?php foreach ($cats as $c): ?>","          <option value=\"<?=$c['id']?>\" <?= (int)$item['category_id']===(int)$c['id']?'selected':'' ?>>","            <?= htmlspecialchars($c['name']) ?>","          </option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Subcategory</label>","      <select name=\"subcategory_id\" class=\"form-select\">","        <option value=\"\">--</option>","        <?php foreach ($subs as $s): ?>","          <option data-cat=\"<?=$s['category_id']?>\" value=\"<?=$s['id']?>\" <?= (int)$item['subcategory_id']===(int)$s['id']?'selected':'' ?>>","            <?= htmlspecialchars($s['name']) ?>","          </option>","        <?php endforeach; ?>","      </select>","      <div class=\"form-text\">Filtered by selected category.</div>","    </div>","","    <div class=\"col-12 mt-2\">","      <h2 class=\"h6 text-uppercase text-muted mb-2\">Material Specs</h2>","    </div>","","    <div class=\"col-md-2\">","      <label class=\"form-label\">Grade</label>","      <input name=\"grade\" class=\"form-control\" value=\"<?= htmlspecialchars((string)$item['grade']) ?>\">","    </div>","    <div class=\"col-md-2\">","      <label class=\"form-label\">Thickness (mm)</label>","      <input name=\"thickness_mm\" type=\"number\" step=\"0.01\" class=\"form-control\" value=\"<?= htmlspecialchars((string)$item['thickness_mm']) ?>\">","    </div>","    <div class=\"col-md-2\">","      <label class=\"form-label\">Width (mm)</label>","      <input name=\"width_mm\" type=\"number\" step=\"0.01\" class=\"form-control\" value=\"<?= htmlspecialchars((string)$item['width_mm']) ?>\">","    </div>","    <div class=\"col-md-2\">","      <label class=\"form-label\">Length (mm)</label>","      <input name=\"length_mm\" type=\"number\" step=\"0.01\" class=\"form-control\" value=\"<?= htmlspecialchars((string)$item['length_mm']) ?>\">","    </div>","    <div class=\"col-md-4\">","      <label class=\"form-label\">Spec</label>","      <input name=\"spec\" class=\"form-control\" value=\"<?= htmlspecialchars((string)$item['spec']) ?>\">","    </div>","","    <!-- TAG-STYLE MAKES -->","    <div class=\"col-12 mt-2\">","      <h2 class=\"h6 text-uppercase text-muted mb-2\">Preferred Makes</h2>","    </div>","    <div class=\"col-md-8\">","      <label class=\"form-label\">Brands / Makes</label>","      <div id=\"makeChips\" class=\"form-control d-flex flex-wrap gap-2\" style=\"min-height:42px;padding:.375rem .75rem;\">","        <input id=\"makeInput\" class=\"border-0 flex-grow-1\" placeholder=\"Type a make and press Enter\" list=\"makeList\" style=\"min-width:200px;outline:none;\">","      </div>","      <datalist id=\"makeList\">","        <?php foreach ($makesAll as $m): ?>","          <?php if (!empty($m['name'])): ?>","            <option value=\"<?= htmlspecialchars($m['name']) ?>\"></option>","          <?php endif; ?>","          <?php if (!empty($m['code'])): ?>","            <option value=\"<?= htmlspecialchars($m['code']) ?>\"></option>","          <?php endif; ?>","        <?php endforeach; ?>","      </datalist>","      <div class=\"form-text\">Add multiple brands. Press <kbd>Enter</kbd> after each one.</div>","      <div id=\"makeHiddenBin\"></div>","    </div>","    <!-- /TAG-STYLE MAKES -->","","  </div>","","  <div class=\"mt-3 d-flex gap-2\">","    <button class=\"btn btn-primary\" type=\"submit\"><i class=\"bi bi-check2-circle me-1\"></i> Save</button>","    <a class=\"btn btn-light\" href=\"/items/items_list.php\"><i class=\"bi bi-arrow-left\"></i> Back to list</a>","  </div>","</form>","","<style>",".chip{display:inline-flex;align-items:center;gap:.5rem;padding:.25rem .5rem;border-radius:999px;background:#e9ecef;font-size:.9rem}",".chip .btn-close{width:.6rem;height:.6rem}","</style>","","<script>","(function(){","  // Subcategory filter by category","  const catSel = document.querySelector('select[name=\"category_id\"]');","  const subSel = document.querySelector('select[name=\"subcategory_id\"]');","  const allSubs = Array.from(subSel.querySelectorAll('option'));","  function filterSubs(){","    const c = catSel.value;","    subSel.value = '';","    subSel.querySelectorAll('option').forEach(o => o.style.display='');","    if (!c) return;","    allSubs.forEach(o=>{","      if (!o.value) return;","      if (o.dataset.cat !== c) o.style.display='none';","    });","  }","  if (catSel && subSel) {","    catSel.addEventListener('change', filterSubs);","    filterSubs();","  }","","  // Make chips","  const makeChips = document.getElementById('makeChips');","  const makeInput = document.getElementById('makeInput');","  const hiddenBin = document.getElementById('makeHiddenBin');","","  const preselected = <?php echo json_encode($itemMakeNames, JSON_UNESCAPED_UNICODE); ?>;","  const slug = s => s.trim().replace(/\\s+/g,' ').replace(/[^\\p{L}\\p{N}\\- ]/gu,'').trim();","","  function addToken(raw){","    const val = slug(raw);","    if (!val) return;","    const existing = [...hiddenBin.querySelectorAll('input[name=\"make_tokens[]\"]')].map(i=>i.value.toLowerCase());","    if (existing.includes(val.toLowerCase())) return;","","    const hid = document.createElement('input');","    hid.type='hidden'; hid.name='make_tokens[]'; hid.value=val;","    hiddenBin.appendChild(hid);","","    const chip = document.createElement('span');","    chip.className='chip';","    chip.textContent=val+' ';","    const close=document.createElement('button');","    close.type='button'; close.className='btn-close'; close.ariaLabel='Remove';","    close.addEventListener('click', ()=>{ hid.remove(); chip.remove(); });","    chip.appendChild(close);","    makeChips.insertBefore(chip, makeInput);","  }","","  makeInput.addEventListener('keydown', (e)=>{","    if ((e.key==='Enter'||e.key===','||e.key==='Tab') && makeInput.value.trim()!==''){","      e.preventDefault();","      addToken(makeInput.value);","      makeInput.value='';","    } else if (e.key==='Backspace' && makeInput.value===''){","      const chips = makeChips.querySelectorAll('.chip');","      if (chips.length) chips[chips.length-1].querySelector('.btn-close').click();","    }","  });","  makeInput.addEventListener('paste', (e)=>{","    const t = (e.clipboardData||window.clipboardData).getData('text');","    if (t && t.includes(',')){","      e.preventDefault();","      t.split(',').map(s=>s.trim()).filter(Boolean).forEach(addToken);","    }","  });","  preselected.forEach(addToken);","})();","</script>","","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/items/items_restore.php": ["<?php","/** PATH: /public_html/items/items_restore.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('materials.item.manage');","","$pdo = db();","$id = (int)($_GET['id'] ?? 0);","","if ($id > 0) {","  $pdo->prepare(\"UPDATE items SET status='active' WHERE id=?\")->execute([$id]);","}","","header('Location: /items/items_list.php');","exit;"],
"/home/u989675055/domains/emsinfra.co.in/public_html/items/items_list.php": ["<?php","/** PATH: /public_html/items/items_list.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('materials.item.view');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci\");","","/** Optional filters */","$q      = trim($_GET['q'] ?? '');","$status = trim($_GET['status'] ?? '');","","$where = [];","$args  = [];","if ($q !== '') {","  $where[] = \"(i.name LIKE CONCAT('%', ?, '%') OR i.material_code LIKE CONCAT('%', ?, '%'))\";","  $args[] = $q; $args[] = $q;","}","if ($status !== '') {","  $where[] = \"i.status = ?\";","  $args[] = $status;","}","$whereSql = $where ? ('WHERE ' . implode(' AND ', $where)) : '';","","$sql = \"","  SELECT","    i.id, i.material_code, i.name, i.status,","    GROUP_CONCAT(DISTINCT m.name ORDER BY m.name SEPARATOR ', ') AS makes","  FROM items i","  LEFT JOIN item_makes im ON im.item_id = i.id","  LEFT JOIN makes m ON m.id = im.make_id","  $whereSql","  GROUP BY i.id","  ORDER BY i.id DESC","  LIMIT 200","\";","$stmt = $pdo->prepare($sql);","$stmt->execute($args);","$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);","","/* UI helpers */","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <nav aria-label=\"breadcrumb\">","    <ol class=\"breadcrumb mb-0\">","      <li class=\"breadcrumb-item\"><a href=\"/dashboard.php\">Dashboard</a></li>","      <li class=\"breadcrumb-item active\" aria-current=\"page\">Items</li>","    </ol>","  </nav>","  <div class=\"d-flex gap-2\">","    <?php if (has_permission('materials.item.manage')): ?>","      <a class=\"btn btn-primary btn-sm\" href=\"/items/items_form.php\"><i class=\"bi bi-plus-lg\"></i> Add Item</a>","    <?php endif; ?>","  </div>","</div>","","<div class=\"card shadow-sm mb-3\">","  <div class=\"card-body py-2\">","    <form class=\"row g-2 align-items-center\" method=\"get\">","      <div class=\"col-12 col-md-6\">","        <div class=\"input-group\">","          <span class=\"input-group-text\"><i class=\"bi bi-search\"></i></span>","          <input type=\"text\" class=\"form-control\" name=\"q\" value=\"<?= htmlspecialchars($q) ?>\" placeholder=\"Search code or name\">","        </div>","      </div>","      <div class=\"col-6 col-md-3\">","        <select name=\"status\" class=\"form-select\">","          <option value=\"\" <?= $status===''?'selected':'' ?>>All statuses</option>","          <option value=\"active\" <?= $status==='active'?'selected':'' ?>>Active</option>","          <option value=\"inactive\" <?= $status==='inactive'?'selected':'' ?>>Inactive</option>","        </select>","      </div>","      <div class=\"col-6 col-md-3 text-md-end\">","        <button class=\"btn btn-outline-secondary\" type=\"submit\"><i class=\"bi bi-funnel me-1\"></i> Apply</button>","        <a class=\"btn btn-light\" href=\"/items/items_list.php\" title=\"Reset\"><i class=\"bi bi-x-circle\"></i></a>","      </div>","    </form>","  </div>","</div>","","<div class=\"card shadow-sm\">","  <div class=\"card-body p-0\">","    <div class=\"table-responsive\">","      <table class=\"table table-striped table-hover align-middle mb-0\">","        <thead class=\"table-light\">","          <tr>","            <th style=\"width:160px;\">Material Code</th>","            <th>Name</th>","            <th>Makes</th>","            <th style=\"width:120px;\">Status</th>","            <th style=\"width:180px;\" class=\"text-end\">Actions</th>","          </tr>","        </thead>","        <tbody>","          <?php foreach ($rows as $r): ?>","            <tr>","              <td class=\"fw-semibold\"><?= htmlspecialchars($r['material_code']) ?></td>","              <td><?= htmlspecialchars($r['name']) ?></td>","              <td><span class=\"text-muted-sm\"><?= htmlspecialchars($r['makes'] ?: '\u2014') ?></span></td>","              <td><?= ui_status((string)$r['status']) ?></td>","              <td class=\"text-end\">","                <?= ui_row_actions([","                  'view'   => '/items/items_form.php?id='.(int)$r['id'],","                  'edit'   => has_permission('materials.item.manage') ? '/items/items_form.php?id='.(int)$r['id'] : null,","                  'delete' => ($r['status']==='active' && has_permission('materials.item.manage'))","                              ? '/items/items_delete.php?id='.(int)$r['id'] : null,","                  'extra'  => [['icon'=>'paperclip','label'=>'Attachments','href'=>'/attachments/panel.php?entity=item&id='.(int)$r['id']]],","                ]) ?>","              </td>","            </tr>","          <?php endforeach; ?>","          <?php if (!$rows): ?>","            <tr><td colspan=\"5\" class=\"text-center text-muted py-4\">No items found.</td></tr>","          <?php endif; ?>","        </tbody>","      </table>","    </div>","  </div>","</div>","","<?php include __DIR__ . '/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/login_handler_debug.php": ["<?php","/**"," * PATH: /public_html/login_handler_debug.php"," * PURPOSE: Self-contained login (no app includes). Prints clear messages instead of redirecting."," * NOTE: After testing, switch back to the normal handler."," */","declare(strict_types=1);","header('Content-Type: text/plain; charset=utf-8');","","if (session_status() === PHP_SESSION_NONE) session_start();","","echo \"[0] start\\n\";","if (($_SERVER['REQUEST_METHOD'] ?? 'GET') !== 'POST') { echo \"[0X] not POST\\n\"; exit; }","","/* ---- BASIC CSRF inline (matches your form field name) ---- */","$ok = isset($_POST['csrf_token']) && isset($_SESSION['csrf_token'])","   && hash_equals($_SESSION['csrf_token'], (string)$_POST['csrf_token']);","if (!$ok) { echo \"[1X] CSRF mismatch\\n\"; exit; }","echo \"[1] CSRF ok\\n\";","","/* ---- READ CONFIG (ROOT) ---- */","$cfg = __DIR__ . '/config.php';","if (!is_file($cfg)) { echo \"[2X] config.php not found in root\\n\"; exit; }","require_once $cfg;","foreach (['DB_HOST','DB_NAME','DB_USER','DB_PASS'] as $c) {","  if (!defined($c)) { echo \"[2X] missing constant: $c\\n\"; exit; }","}","echo \"[2] config ok\\n\";","","/* ---- CONNECT PDO DIRECTLY ---- */","try {","  $pdo = new PDO(","    'mysql:host='.DB_HOST.';dbname='.DB_NAME.';charset=utf8mb4',","    DB_USER, DB_PASS,","    [","      PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,","      PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,","      PDO::ATTR_EMULATE_PREPARES => false,","    ]","  );","  echo \"[3] db ok\\n\";","} catch (Throwable $e) {","  echo \"[3X] db error: \".$e->getMessage().\"\\n\"; exit;","}","","/* ---- AUTH ---- */","$username = trim((string)($_POST['username'] ?? ''));","$password = (string)($_POST['password'] ?? '');","$password = rtrim($password, \"\\r\\n\"); // avoid accidental newline from clipboard","if ($username === '' || $password === '') { echo \"[4X] missing username/password\\n\"; exit; }","","try {","  $st = $pdo->prepare(\"SELECT id, username, name, email, password, status FROM users WHERE username = ? OR email = ? LIMIT 1\");","  $st->execute([$username, $username]);","  $u = $st->fetch();","  if (!$u) { echo \"[5X] user not found\\n\"; exit; }","  echo \"[5] user found status=\".$u['status'].\"\\n\";","  if ($u['status'] !== 'active') { echo \"[5X] user inactive\\n\"; exit; }","","  if (!password_verify($password, $u['password'])) { echo \"[6X] password mismatch\\n\"; exit; }","  echo \"[6] password ok\\n\";","","  // load role ids (RBAC expects these on session)","  $rs = $pdo->prepare(\"SELECT role_id FROM user_roles WHERE user_id = ?\");","  $rs->execute([(int)$u['id']]);","  $roleIds = array_map('intval', array_column($rs->fetchAll(), 'role_id'));","  echo \"[7] roles=\".json_encode($roleIds).\"\\n\";","","  // set session user (like login_user would)","  $_SESSION['user'] = [","    'id' => (int)$u['id'],","    'username' => $u['username'],","    'name' => $u['name'],","    'email' => $u['email'],","    'role_ids' => $roleIds,","  ];","  $before = session_id();","  session_regenerate_id(true);","  echo \"[8] session set (sid $before -> \".session_id().\")\\n\";","","  echo \"[9] SUCCESS. Next step would redirect to dashboard.php\\n\";","  echo \"Open /dashboard.php now in a new tab.\\n\";","} catch (Throwable $e) {","  echo \"[EX] \".$e->getMessage().\"\\n\"; exit;","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/files_to_json_grouped.php": ["<?php","declare(strict_types=1);","/**"," * files_to_json_grouped.php"," *"," * Output ONE grouped JSON file mapping:"," *   { \"absolute/path/to/file\": [\"line1\",\"line2\", ...], ... }"," *"," * Works in browser (GET) or CLI (key=value args)."," *"," * Params:"," *   path=/abs/or/relative/path         (default: getcwd())"," *   out=/abs/or/relative/out.json      (default: ./files_grouped.json)"," *   gzip=1                              (default: 0) -> writes out.json.gz"," *   hide_dotfiles=1                     (default: 0)"," *   follow_symlinks=1                   (default: 0)"," *   include_ext=php,js,css,html         (optional; omit = all)"," *   exclude_dir=vendor,.git,node_modules (optional)"," *   max_size_mb=5                       (default: 5; per-file cap; 0 = unlimited)"," *   skip_blank=1                        (default: 0; omit empty lines)"," */","","ini_set('memory_limit', '-1');","set_time_limit(0);","","// -------- args (GET + CLI key=value) ----------","function argv_kv(): array {","    $kv = [];","    if (PHP_SAPI === 'cli' && isset($_SERVER['argv'])) {","        foreach (array_slice($_SERVER['argv'], 1) as $arg) {","            if (str_contains($arg, '=')) {","                [$k,$v] = explode('=', $arg, 2);","                $kv[$k] = $v;","            }","        }","    }","    return $kv;","}","$args = array_merge($_GET ?? [], argv_kv());","","$root        = (string)($args['path'] ?? getcwd());","$hideDot     = isset($args['hide_dotfiles']) && in_array((string)$args['hide_dotfiles'], ['1','true','on'], true);","$followLinks = isset($args['follow_symlinks']) && in_array((string)$args['follow_symlinks'], ['1','true','on'], true);","$includeExt  = isset($args['include_ext']) ? array_filter(array_map('strtolower', array_map('trim', explode(',', (string)$args['include_ext'])))) : [];","$excludeDir  = isset($args['exclude_dir']) ? array_filter(array_map('trim', explode(',', (string)$args['exclude_dir']))) : [];","$maxSizeMB   = isset($args['max_size_mb']) ? (int)$args['max_size_mb'] : 5;","$skipBlank   = isset($args['skip_blank']) && in_array((string)$args['skip_blank'], ['1','true','on'], true);","$gzip        = isset($args['gzip']) && in_array((string)$args['gzip'], ['1','true','on'], true);","","$outDefault  = rtrim($root, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . 'files_grouped.json';","$outPath     = (string)($args['out'] ?? $outDefault);","if ($gzip && !str_ends_with($outPath, '.gz')) {","    $outPath .= '.gz';","}","","// -------- validations ----------","if (!is_dir($root)) {","    http_response_code(400);","    echo \"Invalid path: \" . htmlspecialchars($root);","    exit(1);","}","$dir = dirname($outPath);","if (!is_dir($dir) || !is_writable($dir)) {","    http_response_code(400);","    echo \"Output directory not writable: \" . htmlspecialchars($dir);","    exit(1);","}","","// -------- helpers ----------","function is_binary_file(string $path, int $probeBytes = 4096): bool {","    $h = @fopen($path, 'rb');","    if (!$h) return true;","    $buf = @fread($h, $probeBytes);","    @fclose($h);","    if ($buf === false) return true;","    if (strpos($buf, \"\\0\") !== false) return true; // NUL in text is rare","    // Count non-textish bytes (allow UTF-8 bytes)","    $non = 0; $len = strlen($buf);","    for ($i=0; $i<$len; $i++) {","        $c = ord($buf[$i]);","        if ($c === 9 || $c === 10 || $c === 13) continue;        // \\t \\n \\r","        if ($c >= 32 && $c <= 126) continue;                      // ASCII printable","        if ($c >= 128) continue;                                  // assume UTF-8 continuation OK","        $non++;","    }","    return $non > ($len * 0.10);","}","function should_skip_entry(SplFileInfo $fi, bool $hideDot, array $excludeDir): bool {","    $name = $fi->getBasename();","    if ($hideDot && $name !== '' && $name[0] === '.') return true;","    $path = $fi->getPathname();","    foreach ($excludeDir as $ex) {","        if ($ex !== '' && str_contains($path, DIRECTORY_SEPARATOR . $ex . DIRECTORY_SEPARATOR)) {","            return true;","        }","    }","    return false;","}","function ext_ok(string $path, array $includeExt): bool {","    if (!$includeExt) return true;","    $ext = strtolower(pathinfo($path, PATHINFO_EXTENSION));","    return in_array($ext, $includeExt, true);","}","function norm_line(string $line): string {","    return rtrim($line, \"\\r\\n\");","}","","// -------- open output (supports gzip) ----------","$out = null;","$write = null;","$close = null;","","if ($gzip) {","    $gz = gzopen($outPath, 'w9');","    if ($gz === false) { http_response_code(500); echo \"Failed to open gzip file.\"; exit(1); }","    $write = function(string $s) use ($gz): void { gzwrite($gz, $s); };","    $close = function() use ($gz): void { gzclose($gz); };","} else {","    $fp = fopen($outPath, 'wb');","    if ($fp === false) { http_response_code(500); echo \"Failed to open output file.\"; exit(1); }","    $write = function(string $s) use ($fp): void { fwrite($fp, $s); };","    $close = function() use ($fp): void { fclose($fp); };","}","","// -------- scan + stream JSON ----------","$flags = \\FilesystemIterator::SKIP_DOTS;","if ($followLinks) $flags |= \\FilesystemIterator::FOLLOW_SYMLINKS;","","$it = new \\RecursiveIteratorIterator(","    new \\RecursiveDirectoryIterator($root, $flags),","    \\RecursiveIteratorIterator::SELF_FIRST",");","","$filesWritten = 0;","$linesWritten = 0;","$skipped = ['binary'=>0,'too_large'=>0,'ext'=>0,'hidden'=>0,'dir_excluded'=>0];","","$write(\"{\\n\");","$firstFile = true;","","foreach ($it as $fi) {","    /** @var SplFileInfo $fi */","    if (should_skip_entry($fi, $hideDot, $excludeDir)) {","        if ($fi->isDir()) $skipped['dir_excluded']++;","        else $skipped['hidden']++;","        continue;","    }","    if ($fi->isDir()) continue;","","    $path = $fi->getPathname();","    if (!ext_ok($path, $includeExt)) { $skipped['ext']++; continue; }","","    $size = (int)@$fi->getSize();","    if ($maxSizeMB > 0 && $size > ($maxSizeMB * 1024 * 1024)) { $skipped['too_large']++; continue; }","    if (is_binary_file($path)) { $skipped['binary']++; continue; }","","    $fh = @fopen($path, 'rb');","    if (!$fh) continue;","","    // Write file key","    if (!$firstFile) { $write(\",\\n\"); }","    $firstFile = false;","    $write(json_encode($path, JSON_UNESCAPED_SLASHES) . \": [\");","","    $firstLine = true;","    $ln = 0;","    while (($line = fgets($fh)) !== false) {","        $line = norm_line($line);","        if ($skipBlank && $line === '') continue;","        if (!$firstLine) { $write(\",\"); }","        $firstLine = false;","        $write(json_encode($line, JSON_UNESCAPED_SLASHES));","        $ln++;","        $linesWritten++;","    }","    @fclose($fh);","","    $write(\"]\");","    $filesWritten++;","}","","$write(\"\\n}\\n\");","$close();","","// -------- response (browser prints a summary; CLI prints JSON to stderr) ----------","$summary = [","    'root'          => $root,","    'out'           => $outPath,","    'gzip'          => $gzip,","    'files_written' => $filesWritten,","    'lines_written' => $linesWritten,","    'skipped'       => $skipped,","    'finished_at'   => date('c'),","];","","if (PHP_SAPI === 'cli') {","    fwrite(STDERR, json_encode($summary, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES) . PHP_EOL);","} else {","    header('Content-Type: application/json; charset=utf-8');","    echo json_encode($summary, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/processes/processes_list.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/processes/processes_list.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","if (function_exists('require_login')) require_login();","if (function_exists('require_permission')) @require_permission('processes.manage');","","$pdo = db();","","/** Force the session collation to baseline (no kernel change) */","$pdo->query(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","$pdo->query(\"SET collation_connection = 'utf8mb4_general_ci'\");","","$q = trim($_GET['q'] ?? '');","","/** Note: apply COLLATE on both sides to avoid mix errors */","$sql = \"SELECT id, code, name, kind, default_setup_min, default_run_min, requires_machine, skill_level, active","        FROM processes","        WHERE (","          (? COLLATE utf8mb4_general_ci = '')","          OR (code COLLATE utf8mb4_general_ci LIKE CONCAT('%', ? COLLATE utf8mb4_general_ci, '%'))","          OR (name COLLATE utf8mb4_general_ci LIKE CONCAT('%', ? COLLATE utf8mb4_general_ci, '%'))","        )","        ORDER BY code ASC","        LIMIT 500\";","$stmt = $pdo->prepare($sql);","$stmt->execute([$q, $q, $q]);","$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container-fluid py-3\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <h1 class=\"h4 mb-0\">Processes</h1>","    <a href=\"processes_form.php\" class=\"btn btn-primary\"><i class=\"bi bi-plus-lg\"></i> New</a>","  </div>","","  <form class=\"row g-2 mb-3\" method=\"get\">","    <div class=\"col-auto\"><input type=\"text\" class=\"form-control\" name=\"q\" value=\"<?=htmlspecialchars($q)?>\" placeholder=\"Search code or name\"></div>","    <div class=\"col-auto\"><button class=\"btn btn-outline-secondary\">Search</button></div>","  </form>","","  <div class=\"table-responsive\">","    <table class=\"table table-striped align-middle\">","      <thead class=\"table-light\">","        <tr>","          <th>Code</th><th>Name</th><th>Kind</th><th class=\"text-end\">Setup (min)</th><th class=\"text-end\">Run (min)</th><th>Machine?</th><th>Skill</th><th>Status</th><th></th>","        </tr>","      </thead>","      <tbody>","      <?php foreach ($rows as $r): ?>","        <tr>","          <td><?=htmlspecialchars($r['code'])?></td>","          <td><?=htmlspecialchars($r['name'])?></td>","          <td><span class=\"badge bg-secondary\"><?=htmlspecialchars($r['kind'] ?? 'production')?></span></td>","          <td class=\"text-end\"><?= $r['default_setup_min'] !== null ? number_format((float)$r['default_setup_min'],2) : '\u2014' ?></td>","          <td class=\"text-end\"><?= $r['default_run_min'] !== null ? number_format((float)$r['default_run_min'],2) : '\u2014' ?></td>","          <td><?= (int)$r['requires_machine'] ? 'Yes' : 'No' ?></td>","          <td><?= $r['skill_level'] !== null ? (int)$r['skill_level'] : '\u2014' ?></td>","          <td><?= (int)$r['active'] ? '<span class=\"badge bg-success\">Active</span>' : '<span class=\"badge bg-secondary\">Inactive</span>' ?></td>","          <td class=\"text-end\"><a href=\"processes_form.php?id=<?=$r['id']?>\" class=\"btn btn-sm btn-outline-primary\">Edit</a></td>","        </tr>","      <?php endforeach; if (!$rows): ?>","        <tr><td colspan=\"9\" class=\"text-center text-muted py-4\">No processes found.</td></tr>","      <?php endif; ?>","      </tbody>","    </table>","  </div>","</div>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/processes/processes_form.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/processes/processes_form.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","if (function_exists('require_login')) require_login();","if (function_exists('require_permission')) @require_permission('processes.manage');","","$pdo = db();","$id  = isset($_GET['id']) ? (int)$_GET['id'] : 0;","$errors = [];","$kinds = ['production','inspection','testing','transfer','setup'];","","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  $id = (int)($_POST['id'] ?? 0);","  $code = trim($_POST['code'] ?? '');","  $name = trim($_POST['name'] ?? '');","  $kind = in_array($_POST['kind'] ?? 'production', $kinds, true) ? $_POST['kind'] : 'production';","  $default_setup_min = ($_POST['default_setup_min'] ?? '') !== '' ? (float)$_POST['default_setup_min'] : null;","  $default_run_min   = ($_POST['default_run_min']   ?? '') !== '' ? (float)$_POST['default_run_min']   : null;","  $requires_machine  = isset($_POST['requires_machine']) ? 1 : 0;","  $skill_level       = ($_POST['skill_level'] ?? '') !== '' ? (int)$_POST['skill_level'] : null;","  $active            = isset($_POST['active']) ? 1 : 0;","","  if ($code === '') $errors[] = 'Code is required.';","  if ($name === '') $errors[] = 'Name is required.';","","  if (!$errors) {","    if ($id > 0) {","      $sql = \"UPDATE processes SET code=?, name=?, kind=?, default_setup_min=?, default_run_min=?, requires_machine=?, skill_level=?, active=? WHERE id=?\";","      $stmt = $pdo->prepare($sql);","      $stmt->execute([$code,$name,$kind,$default_setup_min,$default_run_min,$requires_machine,$skill_level,$active,$id]);","    } else {","      $sql = \"INSERT INTO processes (code,name,kind,default_setup_min,default_run_min,requires_machine,skill_level,active) VALUES (?,?,?,?,?,?,?,?)\";","      $stmt = $pdo->prepare($sql);","      $stmt->execute([$code,$name,$kind,$default_setup_min,$default_run_min,$requires_machine,$skill_level,$active]);","      $id = (int)$pdo->lastInsertId();","    }","    header('Location: processes_list.php');","    exit;","  }","}","","$row = null;","if ($id > 0) {","  $stmt = $pdo->prepare(\"SELECT * FROM processes WHERE id=?\");","  $stmt->execute([$id]);","  $row = $stmt->fetch(PDO::FETCH_ASSOC);","}","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container-fluid py-3\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <h1 class=\"h4 mb-0\"><?= $id ? 'Edit Process' : 'New Process' ?></h1>","    <div>","      <a href=\"processes_list.php\" class=\"btn btn-outline-secondary\">Back</a>","    </div>","  </div>","","  <?php if ($errors): ?>","  <div class=\"alert alert-danger\">","    <ul class=\"mb-0\">","      <?php foreach ($errors as $e): ?><li><?=htmlspecialchars($e)?></li><?php endforeach; ?>","    </ul>","  </div>","  <?php endif; ?>","","  <form method=\"post\" class=\"row g-3\">","    <input type=\"hidden\" name=\"id\" value=\"<?=$id?>\">","    <div class=\"col-md-3\">","      <label class=\"form-label\">Code</label>","      <input type=\"text\" name=\"code\" class=\"form-control\" required value=\"<?=htmlspecialchars($row['code'] ?? '')?>\">","    </div>","    <div class=\"col-md-6\">","      <label class=\"form-label\">Name</label>","      <input type=\"text\" name=\"name\" class=\"form-control\" required value=\"<?=htmlspecialchars($row['name'] ?? '')?>\">","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Kind</label>","      <select name=\"kind\" class=\"form-select\">","        <?php foreach ($kinds as $k): ?>","          <option value=\"<?=$k?>\" <?= (($row['kind'] ?? 'production')===$k)?'selected':''?>><?=strtoupper($k)?></option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Default Setup (min)</label>","      <input type=\"number\" step=\"0.01\" name=\"default_setup_min\" class=\"form-control\" value=\"<?=htmlspecialchars($row['default_setup_min'] ?? '')?>\">","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Default Run (min)</label>","      <input type=\"number\" step=\"0.01\" name=\"default_run_min\" class=\"form-control\" value=\"<?=htmlspecialchars($row['default_run_min'] ?? '')?>\">","    </div>","    <div class=\"col-md-2\">","      <label class=\"form-label d-block\">Requires Machine</label>","      <div class=\"form-check form-switch\">","        <input class=\"form-check-input\" type=\"checkbox\" name=\"requires_machine\" value=\"1\" <?= !empty($row) ? ((int)$row['requires_machine']?'checked':'') : 'checked' ?>>","        <span class=\"ms-1\">Yes</span>","      </div>","    </div>","    <div class=\"col-md-2\">","      <label class=\"form-label\">Skill Level</label>","      <input type=\"number\" min=\"1\" max=\"10\" name=\"skill_level\" class=\"form-control\" value=\"<?=htmlspecialchars($row['skill_level'] ?? '')?>\">","    </div>","    <div class=\"col-md-2\">","      <label class=\"form-label d-block\">Active</label>","      <div class=\"form-check form-switch\">","        <input class=\"form-check-input\" type=\"checkbox\" name=\"active\" value=\"1\" <?= !empty($row) ? ((int)$row['active']?'checked':'') : 'checked' ?>>","        <span class=\"ms-1\">Active</span>","      </div>","    </div>","","    <div class=\"col-12\">","      <button class=\"btn btn-primary\">Save</button>","    </div>","  </form>","</div>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/workcenters/workcenters_list.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/workcenters/workcenters_list.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","if (function_exists('require_login')) require_login();","if (function_exists('require_permission')) @require_permission('workcenters.manage');","","$pdo = db();","","/** Force this session to baseline collation (no kernel change) */","$pdo->query(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","$pdo->query(\"SET collation_connection = 'utf8mb4_general_ci'\");","","$q = trim($_GET['q'] ?? '');","","/** Apply COLLATE on both sides to avoid mix errors */","$sql = \"SELECT id, code, name, type, capacity_per_shift, active","        FROM work_centers","        WHERE (","          (? COLLATE utf8mb4_general_ci = '')","          OR (code COLLATE utf8mb4_general_ci LIKE CONCAT('%', ? COLLATE utf8mb4_general_ci, '%'))","          OR (name COLLATE utf8mb4_general_ci LIKE CONCAT('%', ? COLLATE utf8mb4_general_ci, '%'))","        )","        ORDER BY code ASC","        LIMIT 500\";","$stmt = $pdo->prepare($sql);","$stmt->execute([$q, $q, $q]);","$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container-fluid py-3\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <h1 class=\"h4 mb-0\">Work Centers</h1>","    <div class=\"btn-group\">","      <a href=\"workcenters_form.php\" class=\"btn btn-primary\"><i class=\"bi bi-plus-lg\"></i> New</a>","      <a href=\"capabilities_form.php\" class=\"btn btn-outline-secondary\">Capabilities Map</a>","    </div>","  </div>","","  <form class=\"row g-2 mb-3\" method=\"get\">","    <div class=\"col-auto\"><input type=\"text\" class=\"form-control\" name=\"q\" value=\"<?=htmlspecialchars($q)?>\" placeholder=\"Search code or name\"></div>","    <div class=\"col-auto\"><button class=\"btn btn-outline-secondary\">Search</button></div>","  </form>","","  <div class=\"table-responsive\">","    <table class=\"table table-striped align-middle\">","      <thead class=\"table-light\">","        <tr>","          <th>Code</th><th>Name</th><th>Type</th>","          <th class=\"text-end\">Capacity/Shift</th><th>Status</th><th></th>","        </tr>","      </thead>","      <tbody>","      <?php foreach ($rows as $r): ?>","        <tr>","          <td><?=htmlspecialchars($r['code'])?></td>","          <td><?=htmlspecialchars($r['name'])?></td>","          <td><span class=\"badge bg-secondary\"><?=htmlspecialchars($r['type'] ?? 'other')?></span></td>","          <td class=\"text-end\"><?= $r['capacity_per_shift'] !== null ? number_format((float)$r['capacity_per_shift'],2) : '\u2014' ?></td>","          <td><?= (int)$r['active'] ? '<span class=\"badge bg-success\">Active</span>' : '<span class=\"badge bg-secondary\">Inactive</span>' ?></td>","          <td class=\"text-end\">","            <a href=\"workcenters_form.php?id=<?=$r['id']?>\" class=\"btn btn-sm btn-outline-primary\">Edit</a>","          </td>","        </tr>","      <?php endforeach; ?>","      <?php if (!$rows): ?>","        <tr><td colspan=\"6\" class=\"text-center text-muted py-4\">No work centers found.</td></tr>","      <?php endif; ?>","      </tbody>","    </table>","  </div>","</div>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/workcenters/capabilities_form.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/workcenters/capabilities_form.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","if (function_exists('require_login')) require_login();","if (function_exists('require_permission')) @require_permission('workcenters.manage');","","$pdo = db();","$errors = [];","$wc_id = (int)($_GET['work_center_id'] ?? 0);","","// \u2705 Dropdown source: exactly 2 columns for FETCH_KEY_PAIR","$stmt = $pdo->query(\"","    SELECT id, CONCAT(code, ' \u2014 ', name) AS label","    FROM work_centers","    WHERE active=1","    ORDER BY code","\");","$centers = $stmt->fetchAll(PDO::FETCH_KEY_PAIR); // [id => \"CODE \u2014 NAME\"]","","// Handle add capability","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","    $wc_id = (int)($_POST['work_center_id'] ?? 0);","    $process_id = (int)($_POST['process_id'] ?? 0);","    $rate  = ($_POST['std_rate_per_hour'] ?? '') !== '' ? (float)$_POST['std_rate_per_hour'] : null;","    $batch = ($_POST['std_batch_size'] ?? '') !== '' ? (float)$_POST['std_batch_size'] : null;","","    if ($wc_id <= 0) $errors[] = 'Select a work center.';","    if ($process_id <= 0) $errors[] = 'Select a process.';","","    if (!$errors) {","        $stmt = $pdo->prepare(\"INSERT IGNORE INTO work_center_capabilities ","              (work_center_id, process_id, std_rate_per_hour, std_batch_size) ","              VALUES (?,?,?,?)\");","        $stmt->execute([$wc_id,$process_id,$rate,$batch]);","        header('Location: capabilities_form.php?work_center_id='.$wc_id);","        exit;","    }","}","","// Active processes for dropdown","$processes = $pdo->query(\"","    SELECT id, CONCAT(code,' \u2014 ',name) AS label","    FROM processes","    WHERE active=1","    ORDER BY code","\")->fetchAll(PDO::FETCH_ASSOC);","","// Current capabilities of this center","$current = [];","if ($wc_id > 0) {","    $stmt = $pdo->prepare(\"","        SELECT wcc.id, p.code, p.name, wcc.std_rate_per_hour, wcc.std_batch_size","        FROM work_center_capabilities wcc","        JOIN processes p ON p.id=wcc.process_id","        WHERE wcc.work_center_id=? ORDER BY p.code","    \");","    $stmt->execute([$wc_id]);","    $current = $stmt->fetchAll(PDO::FETCH_ASSOC);","}","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container-fluid py-3\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <h1 class=\"h4 mb-0\">Work Center Capabilities</h1>","    <a class=\"btn btn-outline-secondary\" href=\"workcenters_list.php\">Back</a>","  </div>","","  <?php if ($errors): ?>","    <div class=\"alert alert-danger\">","      <ul class=\"mb-0\"><?php foreach($errors as $e): ?><li><?=htmlspecialchars($e)?></li><?php endforeach; ?></ul>","    </div>","  <?php endif; ?>","","  <form method=\"get\" class=\"row g-2 mb-3\">","    <div class=\"col-md-4\">","      <label class=\"form-label\">Work Center</label>","      <select name=\"work_center_id\" class=\"form-select\" onchange=\"this.form.submit()\">","        <option value=\"0\">Select\u2026</option>","        <?php foreach ($centers as $cid => $label): ?>","          <option value=\"<?=$cid?>\" <?= $wc_id===$cid?'selected':''?>><?=htmlspecialchars($label)?></option>","        <?php endforeach; ?>","      </select>","    </div>","  </form>","","  <?php if ($wc_id > 0): ?>","  <div class=\"card mb-3\">","    <div class=\"card-header\">Add Capability</div>","    <div class=\"card-body\">","      <form method=\"post\" class=\"row g-2\">","        <input type=\"hidden\" name=\"work_center_id\" value=\"<?=$wc_id?>\">","        <div class=\"col-md-5\">","          <label class=\"form-label\">Process</label>","          <select name=\"process_id\" class=\"form-select\" required>","            <option value=\"\">Select\u2026</option>","            <?php foreach ($processes as $p): ?>","              <option value=\"<?=$p['id']?>\"><?=htmlspecialchars($p['label'])?></option>","            <?php endforeach; ?>","          </select>","        </div>","        <div class=\"col-md-3\">","          <label class=\"form-label\">Std Rate / hr</label>","          <input type=\"number\" step=\"0.001\" class=\"form-control\" name=\"std_rate_per_hour\">","        </div>","        <div class=\"col-md-3\">","          <label class=\"form-label\">Std Batch Size</label>","          <input type=\"number\" step=\"0.001\" class=\"form-control\" name=\"std_batch_size\">","        </div>","        <div class=\"col-md-1 d-flex align-items-end\">","          <button class=\"btn btn-primary w-100\">Add</button>","        </div>","      </form>","    </div>","  </div>","","  <div class=\"table-responsive\">","    <table class=\"table table-striped align-middle\">","      <thead class=\"table-light\">","        <tr><th>Process</th><th class=\"text-end\">Rate/hr</th><th class=\"text-end\">Batch</th><th class=\"text-end\">Actions</th></tr>","      </thead>","      <tbody>","        <?php foreach ($current as $c): ?>","          <tr>","            <td><?=htmlspecialchars($c['code'].' \u2014 '.$c['name'])?></td>","            <td class=\"text-end\"><?= $c['std_rate_per_hour']!==null ? (float)$c['std_rate_per_hour'] : '\u2014' ?></td>","            <td class=\"text-end\"><?= $c['std_batch_size']!==null ? (float)$c['std_batch_size'] : '\u2014' ?></td>","            <td class=\"text-end\">","              <form method=\"post\" action=\"capabilities_delete.php\" onsubmit=\"return confirm('Remove capability?')\">","                <input type=\"hidden\" name=\"id\" value=\"<?=$c['id']?>\">","                <input type=\"hidden\" name=\"work_center_id\" value=\"<?=$wc_id?>\">","                <button class=\"btn btn-sm btn-outline-danger\">Delete</button>","              </form>","            </td>","          </tr>","        <?php endforeach; if (!$current): ?>","          <tr><td colspan=\"4\" class=\"text-center text-muted py-4\">No capabilities defined for this center.</td></tr>","        <?php endif; ?>","      </tbody>","    </table>","  </div>","  <?php endif; ?>","</div>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/workcenters/capabilities_delete.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","if (function_exists('require_login')) require_login();","if (function_exists('require_permission')) @require_permission('workcenters.manage');","","$pdo = db();","$id = (int)($_POST['id'] ?? 0);","$wc = (int)($_POST['work_center_id'] ?? 0);","if ($id>0) {","  $stmt=$pdo->prepare(\"DELETE FROM work_center_capabilities WHERE id=?\");","  $stmt->execute([$id]);","}","header('Location: capabilities_form.php?work_center_id='.$wc);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/workcenters/workcenters_form.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/workcenters/workcenters_form.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","if (function_exists('require_login')) require_login();","if (function_exists('require_permission')) @require_permission('workcenters.manage');","","$pdo = db();","$id = (int)($_GET['id'] ?? 0);","$types = ['cutting','drilling','welding','blasting','painting','assembly','inspection','other'];","$errors = [];","","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  $id = (int)($_POST['id'] ?? 0);","  $code = trim($_POST['code'] ?? '');","  $name = trim($_POST['name'] ?? '');","  $type = in_array($_POST['type'] ?? 'other', $types, true) ? $_POST['type'] : 'other';","  $capacity_per_shift = ($_POST['capacity_per_shift'] ?? '') !== '' ? (float)$_POST['capacity_per_shift'] : null;","  $active = isset($_POST['active']) ? 1 : 0;","","  if ($code==='') $errors[] = 'Code is required.';","  if ($name==='') $errors[] = 'Name is required.';","","  if (!$errors) {","    if ($id > 0) {","      $stmt = $pdo->prepare(\"UPDATE work_centers SET code=?, name=?, type=?, capacity_per_shift=?, active=? WHERE id=?\");","      $stmt->execute([$code,$name,$type,$capacity_per_shift,$active,$id]);","    } else {","      $stmt = $pdo->prepare(\"INSERT INTO work_centers (code,name,type,capacity_per_shift,active) VALUES (?,?,?,?,?)\");","      $stmt->execute([$code,$name,$type,$capacity_per_shift,$active]);","      $id = (int)$pdo->lastInsertId();","    }","    header('Location: workcenters_list.php');","    exit;","  }","}","","$row = null;","if ($id > 0) {","  $stmt = $pdo->prepare(\"SELECT * FROM work_centers WHERE id=?\");","  $stmt->execute([$id]);","  $row = $stmt->fetch(PDO::FETCH_ASSOC);","}","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container-fluid py-3\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <h1 class=\"h4 mb-0\"><?= $id ? 'Edit Work Center' : 'New Work Center' ?></h1>","    <a href=\"workcenters_list.php\" class=\"btn btn-outline-secondary\">Back</a>","  </div>","","  <?php if ($errors): ?>","    <div class=\"alert alert-danger\">","      <ul class=\"mb-0\"><?php foreach ($errors as $e): ?><li><?=htmlspecialchars($e)?></li><?php endforeach; ?></ul>","    </div>","  <?php endif; ?>","","  <form method=\"post\" class=\"row g-3\">","    <input type=\"hidden\" name=\"id\" value=\"<?=$id?>\">","    <div class=\"col-md-3\">","      <label class=\"form-label\">Code</label>","      <input type=\"text\" class=\"form-control\" name=\"code\" required value=\"<?=htmlspecialchars($row['code'] ?? '')?>\">","    </div>","    <div class=\"col-md-6\">","      <label class=\"form-label\">Name</label>","      <input type=\"text\" class=\"form-control\" name=\"name\" required value=\"<?=htmlspecialchars($row['name'] ?? '')?>\">","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Type</label>","      <select class=\"form-select\" name=\"type\">","        <?php foreach ($types as $t): ?>","          <option value=\"<?=$t?>\" <?= (($row['type'] ?? 'other')===$t)?'selected':''?>><?=strtoupper($t)?></option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Capacity per Shift</label>","      <input type=\"number\" step=\"0.01\" class=\"form-control\" name=\"capacity_per_shift\" value=\"<?=htmlspecialchars($row['capacity_per_shift'] ?? '')?>\">","      <div class=\"form-text\">Unit depends on process (e.g., m/hr, parts/shift).</div>","    </div>","    <div class=\"col-md-2\">","      <label class=\"form-label d-block\">Active</label>","      <div class=\"form-check form-switch\">","        <input class=\"form-check-input\" type=\"checkbox\" name=\"active\" value=\"1\" <?= !empty($row) ? ((int)$row['active']?'checked':'') : 'checked' ?>>","        <span class=\"ms-1\">Active</span>","      </div>","    </div>","    <div class=\"col-12\"><button class=\"btn btn-primary\">Save</button></div>","  </form>","</div>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/.htaccess": ["# Security & routing hardening","Options -Indexes","","# Block dotfiles and sensitive formats","<FilesMatch \"^(\\.|.*\\.(env|ini|sql|bak|backup|log))$\">","  Require all denied","</FilesMatch>","","# Extra: block diagnostic scripts if you create them","<FilesMatch \"^_(inventory|diag).*\\.php$\">","  Require all denied","</FilesMatch>","","# MIME safety","Header always set X-Content-Type-Options \"nosniff\"","Header always set X-Frame-Options \"SAMEORIGIN\"","Header always set Referrer-Policy \"strict-origin-when-cross-origin\"","","# UTF-8 default","AddDefaultCharset utf-8"],
"/home/u989675055/domains/emsinfra.co.in/public_html/migrations/20251006_phase3_settlement.sql": ["-- ===============================================","-- EMS ERP - Phase 3: Settlement (Party \u2192 Company)","-- ===============================================","","-- Headers & lines","CREATE TABLE IF NOT EXISTS settlement_headers (","  id BIGINT PRIMARY KEY AUTO_INCREMENT,","  customer_id BIGINT NOT NULL,","  mode ENUM('credit_note','purchase_ap','foc') NOT NULL,","  kind ENUM('remnant','scrap','mixed') NOT NULL DEFAULT 'remnant',","  bucket ENUM('RM','SCRAP') NOT NULL DEFAULT 'RM',     -- which inventory account to Dr","  status ENUM('draft','posted','void') NOT NULL DEFAULT 'draft',","  notes TEXT NULL,","  total_qty_base DECIMAL(18,6) NOT NULL DEFAULT 0,","  total_amount  DECIMAL(18,2) NOT NULL DEFAULT 0,","  created_by BIGINT NULL,","  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,","  posted_at TIMESTAMP NULL,","  INDEX idx_sh_customer (customer_id),","  INDEX idx_sh_status (status)",");","","CREATE TABLE IF NOT EXISTS settlement_lines (","  id BIGINT PRIMARY KEY AUTO_INCREMENT,","  header_id BIGINT NOT NULL,","  item_id BIGINT NOT NULL,","  warehouse_id BIGINT NOT NULL,","  lot_id BIGINT NOT NULL,","  piece_id BIGINT NOT NULL,","  qty_base DECIMAL(18,6) NOT NULL,","  rate DECIMAL(18,6) NOT NULL,","  amount DECIMAL(18,2) NOT NULL,","  heat_no VARCHAR(64) NULL,","  plate_no VARCHAR(64) NULL,","  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,","  UNIQUE KEY u_hdr_piece (header_id, piece_id),","  INDEX idx_sl_header (header_id),","  INDEX idx_sl_lot (lot_id),","  INDEX idx_sl_piece (piece_id)",");","","-- Ownership history (audit)","CREATE TABLE IF NOT EXISTS ownership_history (","  id BIGINT PRIMARY KEY AUTO_INCREMENT,","  piece_id BIGINT NOT NULL,","  from_owner_type ENUM('company','customer','vendor_foc') NOT NULL,","  from_owner_id BIGINT NULL,","  to_owner_type ENUM('company','customer','vendor_foc') NOT NULL,","  to_owner_id BIGINT NULL,","  reason VARCHAR(64) NOT NULL,   -- 'settlement'","  ref_table VARCHAR(32) NULL,    -- 'settlement_headers'","  ref_id BIGINT NULL,","  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,","  INDEX idx_oh_piece (piece_id),","  INDEX idx_oh_ref (ref_table, ref_id)",");","","-- Optional: AR/AP bridge outboxes","CREATE TABLE IF NOT EXISTS ar_interface_outbox (","  id BIGINT PRIMARY KEY AUTO_INCREMENT,","  customer_id BIGINT NOT NULL,","  doc_type ENUM('CREDIT_NOTE') NOT NULL,","  amount DECIMAL(18,2) NOT NULL,","  payload_json JSON NOT NULL,","  status ENUM('queued','posted','error') NOT NULL DEFAULT 'queued',","  attempts INT NOT NULL DEFAULT 0,","  last_error TEXT NULL,","  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,","  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,","  INDEX idx_ar_status (status)",");","","CREATE TABLE IF NOT EXISTS ap_interface_outbox (","  id BIGINT PRIMARY KEY AUTO_INCREMENT,","  vendor_id BIGINT NOT NULL,","  doc_type ENUM('PURCHASE_INVOICE') NOT NULL,","  amount DECIMAL(18,2) NOT NULL,","  payload_json JSON NOT NULL,","  status ENUM('queued','posted','error') NOT NULL DEFAULT 'queued',","  attempts INT NOT NULL DEFAULT 0,","  last_error TEXT NULL,","  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,","  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,","  INDEX idx_ap_status (status)",");"],
"/home/u989675055/domains/emsinfra.co.in/public_html/config.php": ["<?php","declare(strict_types=1);","","/**"," * Global config: paths, env, PDO bootstrap"," * PHP 8.4 compatible"," */","if (!defined('APP_ROOT')) {","  define('APP_ROOT', __DIR__);                         // /public_html","  define('INCLUDES_PATH', APP_ROOT . '/includes');     // /public_html/includes","  define('UI_PATH', APP_ROOT . '/ui');                 // /public_html/ui","}","","@ini_set('default_charset', 'UTF-8');","@date_default_timezone_set('Asia/Kolkata');","","// --- load .env (very small parser) ---","$envFile = APP_ROOT . '/.env';","if (is_file($envFile)) {","  $lines = file($envFile, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);","  foreach ($lines as $line) {","    if (str_starts_with(trim($line), '#')) continue;","    [$k, $v] = array_map('trim', array_pad(explode('=', $line, 2), 2, ''));","    if ($k !== '') $_ENV[$k] = $v;","  }","}","","// --- database settings ---","define('DB_HOST', $_ENV['DB_HOST'] ?? 'localhost');","define('DB_NAME', $_ENV['DB_NAME'] ?? '');","define('DB_USER', $_ENV['DB_USER'] ?? '');","define('DB_PASS', $_ENV['DB_PASS'] ?? '');","define('DB_CHARSET', $_ENV['DB_CHARSET'] ?? 'utf8mb4');","","// tiny helpers","function app_url(string $path = ''): string {","  $base = rtrim($_ENV['APP_URL'] ?? '', '/');","  return $base . '/' . ltrim($path, '/');","}","","// require core includes","require_once INCLUDES_PATH . '/db.php';","require_once INCLUDES_PATH . '/auth.php';","require_once INCLUDES_PATH . '/rbac.php';","require_once INCLUDES_PATH . '/csrf.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/prints/quote_print.php": ["<?php","/** PATH: /public_html/prints/quote_print.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/org.php';","","require_login();","$pdo = db();","$id = (int)($_GET['id'] ?? 0);","","$ORG = org_profile();","$ORG_NAME       = (string)$ORG['legal_name'];","$ORG_ADDR1      = trim((string)$ORG['address_line1']);","$ORG_ADDR2      = trim(((string)$ORG['city']).' '.((string)$ORG['state']).' '.((string)$ORG['pincode']));","$ORG_GSTIN      = (string)$ORG['gstin'];","$ORG_STATE      = (string)$ORG['state'];","$ORG_STATE_CODE = (string)$ORG['state_code'];","","// header with client & site details","$st = $pdo->prepare(\"","  SELECT Q.*,","         P.name AS party_name, P.legal_name, P.gst_number,","         P.address_line1, P.address_line2, P.city, P.state, P.pincode","  FROM sales_quotes Q","  LEFT JOIN parties P ON P.id=Q.party_id","  WHERE Q.id=?\");","$st->execute([$id]);","$h = $st->fetch(PDO::FETCH_ASSOC) ?: [];","","// items","$st = $pdo->prepare(\"SELECT * FROM sales_quote_items WHERE quote_id=? ORDER BY sl_no,id\");","$st->execute([$id]);","$it = $st->fetchAll(PDO::FETCH_ASSOC);","","// Place of supply: site state if toggled & present, else client state","$useSite = (int)($h['use_site_as_bill_to'] ?? 0) === 1;","$placeState = trim((string)(","  $useSite","    ? ($h['site_state'] ?? '')","    : ($h['state'] ?? '')","));","$split = gst_split((float)($h['tax_amount'] ?? 0), $placeState);","$isIntra = ($split['mode'] === 'intra');","$cgst = $split['cgst']; $sgst = $split['sgst']; $igst = $split['igst'];","","// Bill-to vs Other block","$billBlock = [","  'title' => $useSite ? 'Bill To (Site Address / Place of Supply)' : 'Bill To (Client Registered Address)',","  'name'  => $useSite ? ($h['site_name'] ?? '') : ($h['party_name'] ?? ''),","  'addr1' => $useSite ? ($h['site_address_line1'] ?? '') : ($h['address_line1'] ?? ''),","  'addr2' => $useSite ? ($h['site_address_line2'] ?? '') : ($h['address_line2'] ?? ''),","  'city'  => $useSite ? ($h['site_city'] ?? '') : ($h['city'] ?? ''),","  'state' => $useSite ? ($h['site_state'] ?? '') : ($h['state'] ?? ''),","  'pin'   => $useSite ? ($h['site_pincode'] ?? '') : ($h['pincode'] ?? ''),","  'gst'   => $useSite ? ($h['site_gst_number'] ?? '') : ($h['gst_number'] ?? ''),","];","$otherBlock = [","  'title' => $useSite ? 'Client (Registered Address)' : 'Site Address',","  'name'  => $useSite ? ($h['party_name'] ?? '') : ($h['site_name'] ?? ''),","  'addr1' => $useSite ? ($h['address_line1'] ?? '') : ($h['site_address_line1'] ?? ''),","  'addr2' => $useSite ? ($h['address_line2'] ?? '') : ($h['site_address_line2'] ?? ''),","  'city'  => $useSite ? ($h['city'] ?? '') : ($h['site_city'] ?? ''),","  'state' => $useSite ? ($h['state'] ?? '') : ($h['site_state'] ?? ''),","  'pin'   => $useSite ? ($h['pincode'] ?? '') : ($h['site_pincode'] ?? ''),","  'gst'   => $useSite ? ($h['gst_number'] ?? '') : ($h['site_gst_number'] ?? ''),","]","?>","<!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>Quotation <?= h((string)($h['code'] ?? '')) ?></title>","  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","  <style>","    @media print {.no-print{display:none}}","    body{padding:20px}","    .table td,.table th{vertical-align:middle}","    .box{border:1px solid #dee2e6; border-radius:6px; padding:12px;}","    .small-muted{font-size:.9rem;color:#6c757d;}","  </style>","</head>","<body>","<div class=\"no-print mb-3 d-flex gap-2\">","  <button class=\"btn btn-primary\" onclick=\"window.print()\">Print</button>","</div>","","<!-- Company + Quote meta -->","<div class=\"d-flex justify-content-between align-items-start\">","  <div class=\"d-flex align-items-start gap-3\">","    <div>","      <img src=\"<?= h('../assets/logo.jpg') ?>\" alt=\"Logo\" style=\"max-height:80px; max-width:160px;\">","    </div>","    <div>","      <h1 class=\"h5 mb-1\"><?= h($ORG_NAME) ?></h1>","      <?php if ($ORG_ADDR1): ?><div><?= h($ORG_ADDR1) ?></div><?php endif; ?>","      <?php if ($ORG_ADDR2): ?><div><?= h($ORG_ADDR2) ?></div><?php endif; ?>","      <div>GSTIN: <?= h($ORG_GSTIN ?: '\u2014') ?><?= $ORG_STATE ? ' \u00b7 State: '.h($ORG_STATE) : '' ?><?= $ORG_STATE_CODE ? ' ('.h($ORG_STATE_CODE).')' : '' ?></div>","      <?php if (!empty($ORG['phone']) || !empty($ORG['email'])): ?>","        <div class=\"small-muted\">","          <?php if (!empty($ORG['phone'])): ?>Phone: <?= h((string)$ORG['phone']) ?><?php endif; ?>","          <?php if (!empty($ORG['phone']) && !empty($ORG['email'])): ?> \u00b7 <?php endif; ?>","          <?php if (!empty($ORG['email'])): ?>Email: <?= h((string)$ORG['email']) ?><?php endif; ?>","        </div>","      <?php endif; ?>","    </div>","  </div>","  <div class=\"text-end\">","    <h1 class=\"h4\">QUOTATION</h1>","    <div><strong>No:</strong> <?= h((string)($h['code'] ?? '')) ?></div>","    <div><strong>Date:</strong> <?= h((string)($h['quote_date'] ?? '')) ?></div>","    <?php if (!empty($h['valid_till'])): ?>","      <div><strong>Valid Till:</strong> <?= h((string)$h['valid_till']) ?></div>","    <?php endif; ?>","    <div><strong>Status:</strong> <?= h((string)($h['status'] ?? '')) ?></div>","    <div><strong>Currency:</strong> <?= h((string)($h['currency'] ?? 'INR')) ?></div>","  </div>","</div>","","<hr>","","<!-- Addresses -->","<div class=\"row g-3\">","  <div class=\"col-md-6\">","    <div class=\"box\">","      <h2 class=\"h6 mb-2\"><?= h($billBlock['title']) ?></h2>","      <div><strong><?= h((string)$billBlock['name']) ?></strong></div>","      <div><?= h((string)$billBlock['addr1']) ?></div>","      <div><?= h((string)$billBlock['addr2']) ?></div>","      <div><?= h((string)$billBlock['city']) ?> <?= h((string)$billBlock['state']) ?> <?= h((string)$billBlock['pin']) ?></div>","      <?php if (!empty($billBlock['gst'])): ?>","      <div>GSTIN: <?= h((string)$billBlock['gst']) ?></div>","      <?php endif; ?>","      <div class=\"small-muted mt-2\">Place of supply considered: <?= h($placeState ?: '\u2014') ?></div>","    </div>","  </div>","  <div class=\"col-md-6\">","    <div class=\"box\">","      <h2 class=\"h6 mb-2\"><?= h($otherBlock['title']) ?></h2>","      <div><strong><?= h((string)$otherBlock['name']) ?></strong></div>","      <div><?= h((string)$otherBlock['addr1']) ?></div>","      <div><?= h((string)$otherBlock['addr2']) ?></div>","      <div><?= h((string)$otherBlock['city']) ?> <?= h((string)$otherBlock['state']) ?> <?= h((string)$otherBlock['pin']) ?></div>","      <?php if (!empty($otherBlock['gst'])): ?>","      <div>GSTIN: <?= h((string)$otherBlock['gst']) ?></div>","      <?php endif; ?>","    </div>","  </div>","</div>","","<!-- Items -->","<div class=\"table-responsive mt-3\">","  <table class=\"table table-bordered\">","    <thead class=\"table-light\">","      <tr>","        <th style=\"width:60px;\">SL</th>","        <th>Description</th>","        <th style=\"width:120px;\">HSN/SAC</th>","        <th style=\"width:120px;\">Qty</th>","        <th style=\"width:120px;\">UOM</th>","        <th style=\"width:140px;\">Rate</th>","        <th style=\"width:120px;\">Disc %</th>","        <th style=\"width:120px;\">Tax %</th>","        <th style=\"width:140px;\">Amount</th>","      </tr>","    </thead>","    <tbody>","      <?php foreach ($it as $r): ?>","        <tr>","          <td><?= (int)$r['sl_no'] ?></td>","          <td><?= nl2br(h((string)$r['item_name'])) ?></td>","          <td><?= h((string)$r['hsn_sac']) ?></td>","          <td class=\"text-end\"><?= h((string)$r['qty']) ?></td>","          <td><?= h((string)$r['uom']) ?></td>","          <td class=\"text-end\"><?= h((string)$r['rate']) ?></td>","          <td class=\"text-end\"><?= h((string)$r['discount_pct']) ?></td>","          <td class=\"text-end\"><?= h((string)$r['tax_pct']) ?></td>","          <td class=\"text-end\"><?= h((string)$r['line_total']) ?></td>","        </tr>","      <?php endforeach; ?>","    </tbody>","  </table>","</div>","","<!-- Totals (with GST split) -->","<div class=\"row justify-content-end\">","  <div class=\"col-5\">","    <table class=\"table\">","      <tr><th>Subtotal</th><td class=\"text-end\"><?= h((string)$h['subtotal']) ?></td></tr>","      <tr><th>Discount</th><td class=\"text-end\"><?= h((string)$h['discount_amount']) ?></td></tr>","      <?php if ($isIntra): ?>","        <tr><th>CGST</th><td class=\"text-end\"><?= number_format($cgst,2,'.','') ?></td></tr>","        <tr><th>SGST</th><td class=\"text-end\"><?= number_format($sgst,2,'.','') ?></td></tr>","      <?php else: ?>","        <tr><th>IGST</th><td class=\"text-end\"><?= number_format($igst,2,'.','') ?></td></tr>","      <?php endif; ?>","      <tr><th>Round Off</th><td class=\"text-end\"><?= h((string)$h['round_off']) ?></td></tr>","      <tr class=\"table-light\"><th>Grand Total</th><td class=\"text-end fw-bold\"><?= h((string)$h['grand_total']) ?></td></tr>","    </table>","    <div class=\"small-muted\">","      <div>Org State: <?= h($ORG_STATE) ?><?= $ORG_STATE_CODE ? ' ('.h($ORG_STATE_CODE).')' : '' ?></div>","      <div>Place of Supply: <?= h($placeState ?: '\u2014') ?> \u2192 <?= $isIntra ? 'Intra-state (CGST+SGST)' : 'Inter-state (IGST)' ?></div>","    </div>","  </div>","</div>","","<!-- Terms + Sign -->","<h2 class=\"h6\">Terms & Conditions</h2>","<div><?= nl2br(h((string)($h['terms'] ?? ''))) ?></div>","","<div class=\"mt-4 text-end\">","  <div>For <strong><?= h($ORG_NAME) ?></strong></div>","  <div style=\"height:60px\"></div>","  <div>Authorised Signatory</div>","</div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/login_handler.php": ["<?php","/** PATH: /public_html/login_handler.php */","declare(strict_types=1);","if (session_status() === PHP_SESSION_NONE) session_start();","","function fail_login(string $msg, string $to = 'login.php'): void {","  $_SESSION['flash_error'] = $msg;","  header('Location: ' . $to);","  exit;","}","","require_once __DIR__ . '/includes/db.php';","require_once __DIR__ . '/includes/auth.php';","require_once __DIR__ . '/includes/csrf.php';","","if (($_SERVER['REQUEST_METHOD'] ?? 'GET') !== 'POST') fail_login('Invalid request method');","","try {","  verify_csrf_or_die();","} catch (Throwable $e) {","  fail_login('Security token expired. Please try again.');","}","","$username = trim((string)($_POST['username'] ?? ''));","$password = rtrim((string)($_POST['password'] ?? ''), \"\\r\\n\");","if ($username === '' || $password === '') fail_login('Username and password are required');","","try {","  $pdo = db();","  $st = $pdo->prepare(\"SELECT id, username, name, email, password, status FROM users WHERE username = ? OR email = ? LIMIT 1\");","  $st->execute([$username, $username]);","  $u = $st->fetch(PDO::FETCH_ASSOC);","","  if (!$u)                       fail_login('User not found');","  if ($u['status'] !== 'active') fail_login('Account is inactive');","  if (!password_verify($password, $u['password'])) fail_login('Invalid credentials');","","  $rs = $pdo->prepare(\"SELECT role_id FROM user_roles WHERE user_id = ?\");","  $rs->execute([(int)$u['id']]);","  $roleIds = array_map('intval', array_column($rs->fetchAll(PDO::FETCH_ASSOC), 'role_id'));","","  if (function_exists('login_user')) {","    login_user([","      'id'       => (int)$u['id'],","      'username' => $u['username'],","      'name'     => $u['name'],","      'email'    => $u['email'],","      'role_ids' => $roleIds,","    ]);","  } else {","    $_SESSION['user'] = [","      'id'       => (int)$u['id'],","      'username' => $u['username'],","      'name'     => $u['name'],","      'email'    => $u['email'],","      'role_ids' => $roleIds,","    ];","    $_SESSION['regenerated_at'] = time();","    session_regenerate_id(true);","  }","","  header('Location: dashboard.php'); exit;","","} catch (Throwable $e) {","  fail_login('Internal error, please try again');","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/qa/link_console.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/rbac.php';","require_login(); require_permission('qa.view');","?><!doctype html><html><head><meta charset=\"utf-8\"><title>QA Document Links (No Upload)</title>","<style>body{font-family:system-ui,Segoe UI,Roboto,Arial,sans-serif;margin:20px}label{display:block;margin:6px 0}table{border-collapse:collapse;width:100%}th,td{border:1px solid #e5e7eb;padding:6px}</style></head><body>","<h1>QA Document Links</h1>","<h3>Create Link</h3>","<label>Attachment ID <input id=\"att\" type=\"number\"></label>","<label>Doc Type <select id=\"dt\"><option>heat_cert</option><option>inspection_report</option><option>other</option></select></label>","<label>Lot ID (opt) <input id=\"lot\" type=\"number\"></label>","<label>GRN Line ID (opt) <input id=\"grn\" type=\"number\"></label>","<label>Item ID (opt) <input id=\"item\" type=\"number\"></label>","<label>Notes <input id=\"notes\"></label>","<button id=\"link\">Link</button> <span id=\"msg\"></span>","<hr>","<h3>List Links</h3>","<label>Filter: Attachment ID <input id=\"f_att\" type=\"number\"></label>","<label>Filter: Lot ID <input id=\"f_lot\" type=\"number\"></label>","<label>Filter: GRN Line ID <input id=\"f_grn\" type=\"number\"></label>","<button id=\"load\">Load</button>","<table id=\"t\"><thead></thead><tbody></tbody></table>","<script>","async function api(u,method,body){const opt={method}; if(body){opt.headers={'Content-Type':'application/json'}; opt.body=JSON.stringify(body);} const r=await fetch(u,opt); const j=await r.json(); if(!j.ok) throw new Error(j.error); return j.data;}","link.onclick=async()=>{try{const d=await api('qa/_ajax/link.php','POST',{attachment_id:parseInt(att.value||0),doc_type:dt.value,lot_id:lot.value?parseInt(lot.value):null,grn_line_id:grn.value?parseInt(grn.value):null,item_id:item.value?parseInt(item.value):null,notes:notes.value||null}); msg.textContent='Linked #'+d.qa_link_id;}catch(e){alert(e.message);}}","load.onclick=async()=>{try{const url = 'qa/_ajax/list.php?attachment_id='+(f_att.value||'')+'&lot_id='+(f_lot.value||'')+'&grn_line_id='+(f_grn.value||''); const d=await api(url,'GET'); const tbody=document.querySelector('#t tbody'); const thead=document.querySelector('#t thead'); thead.innerHTML=''; tbody.innerHTML=''; if(!d.length){tbody.innerHTML='<tr><td>No data</td></tr>'; return;} const cols=Object.keys(d[0]); thead.innerHTML='<tr>'+cols.map(c=>'<th>'+c+'</th>').join('')+'</tr>'; tbody.innerHTML=d.map(r=>'<tr>'+cols.map(c=>'<td>'+ (r[c]===null?'':r[c]) +'</td>').join('')+'</tr>').join('');}catch(e){alert(e.message);}}","</script></body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/qa/_ajax/unlink.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/QaLinkService.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('qa.unlink'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\QaLinkService($pdo);","  $ok=$svc->unlink((int)$in['qa_link_id']);","  echo json_encode(['ok'=>true,'data'=>['deleted'=>$ok]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/qa/_ajax/link.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/QaLinkService.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('qa.link'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\QaLinkService($pdo);","  $id=$svc->link((int)$in['attachment_id'], (string)($in['doc_type']??'heat_cert'), $in['lot_id']?intval($in['lot_id']):null, $in['grn_line_id']?intval($in['grn_line_id']):null, $in['item_id']?intval($in['item_id']):null, $in['notes']??null);","  echo json_encode(['ok'=>true,'data'=>['qa_link_id'=>$id]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/qa/_ajax/list.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/QaLinkService.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('qa.view'); $pdo=db();","  $svc=new \\Coupler\\QaLinkService($pdo);","  $lot = isset($_GET['lot_id']) ? intval($_GET['lot_id']) : null;","  $grn = isset($_GET['grn_line_id']) ? intval($_GET['grn_line_id']) : null;","  $att = isset($_GET['attachment_id']) ? intval($_GET['attachment_id']) : null;","  $rows=$svc->list($lot,$grn,$att);","  echo json_encode(['ok'=>true,'data'=>$rows]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/indent_print.php": ["<?php","/** PATH: /public_html/purchase/indent_print.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_permission('purchase.indent.view');","","$pdo = db();","$id = (int)($_GET['id'] ?? 0);","if ($id <= 0) { http_response_code(404); echo \"Not found\"; exit; }","","/* Header + joins for labels */","$h = $pdo->prepare(\"","  SELECT i.*, pr.code AS project_code, pr.name AS project_name,","         loc.name AS delivery_location_name","  FROM indents i","  LEFT JOIN projects pr ON pr.id = i.project_id","  LEFT JOIN locations loc ON loc.id = i.delivery_location_id","  WHERE i.id = ?","\");","$h->execute([$id]);","$indent = $h->fetch(PDO::FETCH_ASSOC);","if (!$indent) { http_response_code(404); echo \"Indent not found\"; exit; }","","/* Lines with item & UOM labels */","$d = $pdo->prepare(\"","  SELECT li.*, it.material_code, it.name AS item_name, u.code AS uom_code","  FROM indent_items li","  JOIN items it ON it.id = li.item_id","  LEFT JOIN uom u ON u.id = li.uom_id","  WHERE li.indent_id = ?","  ORDER BY li.sort_order, li.id","\");","$d->execute([$id]);","$lines = $d->fetchAll(PDO::FETCH_ASSOC);","","/* status badge */","$status = $indent['status'] ?? 'draft';","$badge = [","  'draft'     => 'secondary',","  'raised'    => 'warning',","  'approved'  => 'success',","  'closed'    => 'dark',","  'cancelled' => 'danger'","][$status] ?? 'secondary';","?>","<!doctype html>","<html lang=\"en\">","<head>","  <meta charset=\"utf-8\">","  <title>Indent <?= htmlspecialchars($indent['indent_no']) ?></title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <style>","    @media print { .no-print { display: none !important; } .table th, .table td { border-color: #000 !important; } }","  </style>","</head>","<body class=\"bg-white\">","<div class=\"container py-4\">","  <div class=\"d-flex justify-content-between align-items-start mb-3\">","    <div>","      <h3 class=\"mb-1\">Purchase Indent</h3>","      <div class=\"text-muted\">Indent No: <strong><?= htmlspecialchars($indent['indent_no']) ?></strong></div>","      <div class=\"text-muted\">Status: <span class=\"badge bg-<?= $badge ?>\"><?= htmlspecialchars($status) ?></span></div>","    </div>","    <div class=\"no-print\">","      <a href=\"javascript:window.print()\" class=\"btn btn-outline-secondary\">Print</a>","      <a href=\"indents_list.php\" class=\"btn btn-secondary\">Back to List</a>","    </div>","  </div>","","  <div class=\"row g-3 mb-3\">","    <div class=\"col-md-6\">","      <div class=\"border rounded p-3\">","        <div><strong>Project</strong></div>","        <div>","          <?php if (!empty($indent['project_code'])): ?>","            <?= htmlspecialchars($indent['project_code'].' \u2014 '.$indent['project_name']) ?>","          <?php else: ?>","            <span class=\"text-muted\">General (no project)</span>","          <?php endif; ?>","        </div>","      </div>","    </div>","    <div class=\"col-md-6\">","      <div class=\"border rounded p-3\">","        <div><strong>Delivery To</strong></div>","        <div><?= $indent['delivery_location_name'] ? htmlspecialchars($indent['delivery_location_name']) : '\u2014' ?></div>","      </div>","    </div>","    <div class=\"col-12\">","      <div class=\"border rounded p-3\">","        <div><strong>Notes</strong></div>","        <div><?= $indent['remarks'] ? nl2br(htmlspecialchars($indent['remarks'])) : '\u2014' ?></div>","      </div>","    </div>","  </div>","","  <div class=\"table-responsive\">","    <table class=\"table table-bordered align-middle\">","      <thead>","        <tr>","          <th style=\"width:18%;\">Item Code</th>","          <th>Item Name / Description</th>","          <th style=\"width:10%;\">Qty</th>","          <th style=\"width:10%;\">UOM</th>","          <th style=\"width:14%;\">Needed By</th>","          <th style=\"width:18%;\">Remarks</th>","        </tr>","      </thead>","      <tbody>","        <?php if (!$lines): ?>","          <tr><td colspan=\"6\" class=\"text-muted\">No lines.</td></tr>","        <?php else: foreach ($lines as $ln): ?>","          <tr>","            <td><?= htmlspecialchars($ln['material_code']) ?></td>","            <td>","              <div><strong><?= htmlspecialchars($ln['item_name']) ?></strong></div>","              <?php if (!empty($ln['description'])): ?>","                <div class=\"text-muted small\"><?= htmlspecialchars($ln['description']) ?></div>","              <?php endif; ?>","            </td>","            <td><?= htmlspecialchars((string)$ln['qty']) ?></td>","            <td><?= htmlspecialchars($ln['uom_code'] ?? '') ?></td>","            <td><?= htmlspecialchars((string)$ln['needed_by']) ?></td>","            <td><?= htmlspecialchars($ln['remarks'] ?? '') ?></td>","          </tr>","        <?php endforeach; endif; ?>","      </tbody>","    </table>","  </div>","","  <div class=\"mt-3\">","    <small class=\"text-muted\">Printed on <?= date('Y-m-d H:i') ?></small>","  </div>","</div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/compare_select_l1.php": ["<?php","/** PATH: /public_html/purchase/compare_select_l1.php"," * Select L1 quotation for an inquiry and lock its prices."," * GET params: inquiry_id, quote_id"," */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_permission('purchase.inquiry.compare'); // adjust if you use a different permission","header('Content-Type: application/json; charset=utf-8');","","try {","  $pdo = db();","  $pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","  $inquiry_id = (int)($_GET['inquiry_id'] ?? 0);","  $quote_id   = (int)($_GET['quote_id']   ?? 0);","  if ($inquiry_id<=0 || $quote_id<=0) { http_response_code(400); echo json_encode(['ok'=>false,'msg'=>'bad_request']); exit; }","","  // Ensure the quote belongs to the inquiry","  $q = $pdo->prepare(\"SELECT id FROM inquiry_quotes WHERE id=? AND inquiry_id=?\");","  $q->execute([$quote_id, $inquiry_id]);","  if (!$q->fetchColumn()) { http_response_code(404); echo json_encode(['ok'=>false,'msg'=>'quote_not_found']); exit; }","","  // --- detect line table + foreign key name (fallbacks) ---","  $lineTable = 'inquiry_quote_items';","  $fkCol     = 'inquiry_quote_id';","  $hasLineT  = (bool)$pdo->query(\"SELECT 1 FROM information_schema.TABLES WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME='{$lineTable}'\")->fetchColumn();","  if (!$hasLineT) { // try a common alt name","    $lineTable = 'quote_items';","  }","  $colChk = $pdo->prepare(\"SELECT COLUMN_NAME FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME=?\");","  $colChk->execute([$lineTable]);","  $cols = $colChk->fetchAll(PDO::FETCH_COLUMN);","  if ($cols && !in_array('inquiry_quote_id',$cols,true) && in_array('quote_id',$cols,true)) $fkCol='quote_id';","  if (!$cols) { http_response_code(500); echo json_encode(['ok'=>false,'msg'=>'line_table_not_found']); exit; }","","  $pdo->beginTransaction();","","  // Snapshot & lock line prices on the selected quote","  // l1_total = sum(unit_price * qty)","  $sum = $pdo->prepare(\"SELECT COALESCE(SUM(unit_price * qty),0) FROM {$lineTable} WHERE {$fkCol}=?\");","  $sum->execute([$quote_id]);","  $l1_total = (float)$sum->fetchColumn();","","  // Set line locks + snapshot price","  $pdo->prepare(\"UPDATE {$lineTable} SET l1_locked=1, l1_unit_price=unit_price WHERE {$fkCol}=?\")","      ->execute([$quote_id]);","","  // Mark this quote as selected/locked; clear others","  $pdo->prepare(\"UPDATE inquiry_quotes SET is_l1=0 WHERE inquiry_id=?\")->execute([$inquiry_id]);","  $pdo->prepare(\"UPDATE inquiry_quotes SET is_l1=1, status='locked', l1_total=? WHERE id=?\")","      ->execute([$l1_total, $quote_id]);","","  $pdo->commit();","  echo json_encode(['ok'=>true,'l1_total'=>$l1_total]);","} catch (Throwable $e) {","  if ($pdo?->inTransaction()) $pdo->rollBack();","  http_response_code(500);","  echo json_encode(['ok'=>false,'msg'=>'server_error']);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/po_list.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","","require_login();","require_permission('purchase.po.view');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$rows = $pdo->query(\"SELECT po.id, po.po_no, po.po_date, po.status, po.total_after_tax, p.name AS supplier_name","                     FROM purchase_orders po","                     LEFT JOIN parties p ON p.id=po.supplier_id","                     ORDER BY po.id DESC LIMIT 200\")->fetchAll(PDO::FETCH_ASSOC);","","include __DIR__.'/../ui/layout_start.php';","?>","<div class=\"container py-4\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h1 class=\"h4 mb-0\">Purchase Orders</h1>","  </div>","  <div class=\"table-responsive\">","    <table class=\"table table-striped table-hover align-middle\">","      <thead><tr>","        <th>PO No</th><th>Date</th><th>Supplier</th><th class=\"text-end\">Amount</th><th>Status</th><th></th>","      </tr></thead>","      <tbody>","        <?php foreach ($rows as $r): ?>","          <tr>","            <td><?=htmlspecialchars((string)$r['po_no'])?></td>","            <td><?=htmlspecialchars((string)$r['po_date'])?></td>","            <td><?=htmlspecialchars((string)($r['supplier_name']??''))?></td>","            <td class=\"text-end\"><?= number_format((float)($r['total_after_tax']??0), 2) ?></td>","            <td><span class=\"badge bg-<?= $r['status']==='issued'?'success':'secondary' ?>\"><?=htmlspecialchars((string)$r['status'])?></span></td>","            <td><a class=\"btn btn-sm btn-outline-primary\" href=\"/purchase/po_form.php?id=<?=$r['id']?>\">Open</a></td>","          </tr>","        <?php endforeach; ?>","        <?php if (!$rows): ?>","          <tr><td colspan=\"6\" class=\"text-center text-muted\">No purchase orders.</td></tr>","        <?php endif; ?>","      </tbody>","    </table>","  </div>","</div>","<?php include __DIR__.'/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/inquiries_list.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('purchase.inquiry.view');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$q = trim($_GET['q'] ?? '');","$status = trim($_GET['status'] ?? '');","$project_id = (int)($_GET['project_id'] ?? 0);","","$where = [];","$args  = [];","if ($q !== '') { $where[] = \"i.inquiry_no LIKE CONCAT('%', ?, '%')\"; $args[] = $q; }","if ($status !== '') { $where[] = \"i.status = ?\"; $args[] = $status; }","if ($project_id > 0) { $where[] = \"i.project_id = ?\"; $args[] = $project_id; }","$whereSql = $where ? ('WHERE '.implode(' AND ', $where)) : '';","","$sql = \"","  SELECT i.id, i.inquiry_no, i.inquiry_date, i.status,","         p.name AS project_name,","         (SELECT COUNT(*) FROM inquiry_items ii WHERE ii.inquiry_id=i.id) AS line_count,","         (SELECT COUNT(*) FROM inquiry_suppliers s WHERE s.inquiry_id=i.id) AS vendor_count","  FROM inquiries i","  LEFT JOIN projects p ON p.id = i.project_id","  $whereSql","  ORDER BY i.id DESC","  LIMIT 200\";","$st = $pdo->prepare($sql); $st->execute($args);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","$projects = $pdo->query(\"SELECT id, code, name FROM projects ORDER BY id DESC LIMIT 200\")->fetchAll(PDO::FETCH_ASSOC);","","include __DIR__ . '/../ui/layout_start.php';","?>","","<!-- Page header -->","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 mb-0\">Purchase Inquiries</h1>","  <div class=\"d-flex gap-2\">","    <?php if (has_permission('purchase.inquiry.manage')): ?>","      <a class=\"btn btn-primary\" href=\"/purchase/inquiries_form.php\">New Inquiry</a>","      <a class=\"btn btn-outline-primary\" href=\"/purchase/quotes_list.php\">Quotation</a>","    <?php endif; ?>","  </div>","</div>","","<!-- Filters -->","<div class=\"card shadow-sm mb-3\">","  <div class=\"card-body py-2\">","    <form class=\"row g-2 align-items-center\" method=\"get\">","      <div class=\"col-12 col-md-4\">","        <div class=\"input-group\">","          <span class=\"input-group-text\"><i class=\"bi bi-search\"></i></span>","          <input class=\"form-control\" name=\"q\" value=\"<?= htmlspecialchars($q) ?>\" placeholder=\"Find by INQ number\">","        </div>","      </div>","","      <div class=\"col-12 col-md-4\">","        <select name=\"project_id\" class=\"form-select\">","          <option value=\"0\" <?= $project_id===0?'selected':'' ?>>All Projects</option>","          <?php foreach($projects as $p): ?>","            <option value=\"<?= (int)$p['id'] ?>\" <?= $project_id===(int)$p['id']?'selected':'' ?>>","              <?= htmlspecialchars($p['code'].' \u2014 '.$p['name']) ?>","            </option>","          <?php endforeach; ?>","        </select>","      </div>","","      <div class=\"col-6 col-md-2\">","        <select name=\"status\" class=\"form-select\">","          <option value=\"\" <?= $status===''?'selected':'' ?>>All</option>","          <option value=\"draft\"  <?= $status==='draft'?'selected':'' ?>>Draft</option>","          <option value=\"issued\" <?= $status==='issued'?'selected':'' ?>>Issued</option>","          <option value=\"closed\" <?= $status==='closed'?'selected':'' ?>>Closed</option>","        </select>","      </div>","","      <div class=\"col-6 col-md-2 text-md-end\">","        <button class=\"btn btn-outline-secondary\"><i class=\"bi bi-funnel me-1\"></i> Filter</button>","        <?php if ($q !== '' || $status !== '' || $project_id>0): ?>","          <a class=\"btn btn-light ms-1\" href=\"<?= strtok($_SERVER['REQUEST_URI'], '?') ?>\"><i class=\"bi bi-x-circle me-1\"></i> Reset</a>","        <?php endif; ?>","      </div>","    </form>","  </div>","</div>","","<!-- Results -->","<div class=\"card shadow-sm\">","  <div class=\"table-responsive\">","    <table class=\"table table-striped table-hover align-middle mb-0\">","      <thead class=\"table-light\">","        <tr>","          <th style=\"width:140px\">Inquiry No</th>","          <th style=\"width:110px\">Date</th>","          <th>Project</th>","          <th class=\"text-center\" style=\"width:110px\">Lines</th>","          <th class=\"text-center\" style=\"width:110px\">Vendors</th>","          <th style=\"width:120px\">Status</th>","          <th class=\"text-end\" style=\"width:180px\">Actions</th>","        </tr>","      </thead>","      <tbody>","        <?php foreach($rows as $r): ?>","          <tr>","            <td class=\"fw-semibold\"><?= htmlspecialchars($r['inquiry_no']) ?></td>","            <td><?= htmlspecialchars($r['inquiry_date']) ?></td>","            <td><span class=\"text-muted\"><?= htmlspecialchars($r['project_name'] ?? '') ?></span></td>","            <td class=\"text-center\"><?= (int)$r['line_count'] ?></td>","            <td class=\"text-center\"><?= (int)$r['vendor_count'] ?></td>","            <td>","              <?php","                $cls = 'bg-secondary-subtle text-secondary-emphasis border';","                if ($r['status']==='issued') $cls = 'bg-warning-subtle text-warning-emphasis border';","                elseif ($r['status']==='closed') $cls = 'bg-dark-subtle text-dark-emphasis border';","                elseif ($r['status']==='draft') $cls = 'bg-secondary-subtle text-secondary-emphasis border';","              ?>","              <span class=\"badge <?= $cls ?>\"><?= htmlspecialchars($r['status']) ?></span>","            </td>","            <td class=\"text-end\">","              <div class=\"btn-group btn-group-sm\" role=\"group\">","                <a class=\"btn btn-light\" href=\"/purchase/inquiries_form.php?id=<?= (int)$r['id'] ?>\" title=\"Open\">","                  <i class=\"bi bi-box-arrow-up-right\"></i>","                </a>","                <?php if ($r['status']==='issued'): ?>","                  <a class=\"btn btn-light\" href=\"/purchase/inquiry_print.php?id=<?= (int)$r['id'] ?>\" target=\"_blank\" title=\"Print\">","                    <i class=\"bi bi-printer\"></i>","                  </a>","                <?php endif; ?>","              </div>","            </td>","          </tr>","        <?php endforeach; ?>","","        <?php if (!$rows): ?>","          <tr>","            <td colspan=\"7\" class=\"p-0\">","              <div class=\"text-center text-muted py-4\">No inquiries found.</div>","            </td>","          </tr>","        <?php endif; ?>","      </tbody>","    </table>","  </div>","</div>","","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/trace_plate.php": ["<?php","/** PATH: /public_html/purchase/trace_plate.php"," * PURPOSE: Full lineage \u2014 original lot \u2192 remnants \u2192 parts \u2192 scrap"," */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_login();","$pdo = db();","","function h($s){ return htmlspecialchars((string)$s, ENT_QUOTES, 'UTF-8'); }","","/* Resolve the lot */","$lot_id  = isset($_GET['lot_id']) ? (int)$_GET['lot_id'] : 0;","$plate_no= trim($_GET['plate_no'] ?? '');","$heat_no = trim($_GET['heat_no'] ?? '');","","if ($lot_id<=0 && ($plate_no!=='' || $heat_no!=='')) {","  $st = $pdo->prepare(\"SELECT id FROM stock_lots","                       WHERE (plate_no=? OR ?='') AND (heat_no=? OR ?='')","                       ORDER BY id DESC LIMIT 1\");","  $st->execute([$plate_no, $plate_no, $heat_no, $heat_no]);","  $lot_id = (int)$st->fetchColumn();","}","","if ($lot_id<=0) {","  http_response_code(400);","  echo \"Provide ?lot_id= or ?plate_no=&heat_no=\";","  exit;","}","","/* Load chosen lot + compute chain root */","$st = $pdo->prepare(\"SELECT * FROM stock_lots WHERE id=?\"); $st->execute([$lot_id]);","$lot = $st->fetch();","if (!$lot) { echo \"Lot not found.\"; exit; }","","$root_id = (int)($lot['chain_root_lot_id'] ?: $lot['id']);","","/* Get full chain (all lots with this root, including root) */","$chain = $pdo->prepare(\"SELECT * FROM stock_lots","                        WHERE (chain_root_lot_id = ? OR id = ?)","                        ORDER BY id ASC\");","$chain->execute([$root_id, $root_id]);","$lots = $chain->fetchAll();","","/* Collect their IDs for trace rows */","$ids = array_map(fn($r)=>(int)$r['id'], $lots);","$trByLot = [];","if ($ids) {","  $place = implode(',', array_fill(0, count($ids), '?'));","  $tr = $pdo->prepare(\"SELECT t.*, p.plan_no","                       FROM part_traceability t","                       LEFT JOIN plate_plans p ON p.id = t.plan_id","                       WHERE t.lot_id IN ($place)","                       ORDER BY t.recorded_at ASC, t.id ASC\");","  $tr->execute($ids);","  foreach ($tr->fetchAll() as $t) {","    $trByLot[(int)$t['lot_id']][] = $t;","  }","}","?>","<!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>Trace Plate</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <style>","    body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;padding:18px}","    .wrap{max-width:1100px;margin:0 auto}","    .card{border:1px solid #eee;border-radius:12px;padding:16px;margin-bottom:14px}","    .pill{display:inline-block;padding:2px 8px;border-radius:999px;border:1px solid #ddd;font-size:12px;margin-left:6px}","    .muted{color:#666}","    ul{margin:6px 0 0 18px}","  </style>","</head>","<body>","<div class=\"wrap\">","  <h3>Trace Plate \u2014 <?= h(($lot['plate_no'] ?: '\u2014').' / '.($lot['heat_no'] ?: '\u2014')) ?></h3>","","  <div class=\"card\">","    <div><b>Grade:</b> <?= h($lot['item_name'] ?: '') ?></div>","    <div><b>Root Lot:</b> <?= (int)$root_id ?></div>","    <div class=\"muted\">Use Remnant List to scrap/trace other lots.</div>","  </div>","","  <?php foreach ($lots as $L): ?>","    <div class=\"card\">","      <div><b>Lot:</b> <?= h($L['internal_lot_no'] ?: ('LOT-'.$L['id'])) ?>","        <span class=\"pill\"><?= h($L['status']) ?></span>","        <?php if ($L['status']==='scrapped' && !empty($L['scrap_at'])): ?>","          <span class=\"pill\">Scrapped @ <?= h($L['scrap_at']) ?></span>","        <?php endif; ?>","      </div>","      <div><b>Plate / Heat:</b> <?= h(($L['plate_no'] ?: '\u2014').' / '.($L['heat_no'] ?: '\u2014')) ?></div>","      <div><b>Thickness:</b> <?= (float)$L['thickness_mm'] ?>","        &nbsp; <b>Avail area:</b> <?= number_format((int)$L['available_area_mm2']) ?> mm\u00b2","        &nbsp; <b>Origin plan:</b> <?= h($L['origin_plan_no'] ?: '') ?>","      </div>","      <?php if (!empty($trByLot[(int)$L['id']])): ?>","        <div style=\"margin-top:8px\"><b>Parts produced from this lot:</b>","          <ul>","            <?php foreach ($trByLot[(int)$L['id']] as $t): ?>","              <li>","                Plan <?= h($t['plan_no'] ?: (string)$t['plan_id']) ?> \u00b7","                PlateID <?= (int)$t['plate_id'] ?> \u00b7","                Part <?= (int)$t['part_id'] ?> \u00b7","                Alloc <?= (int)$t['allocation_id'] ?> \u00b7","                <?= h($t['process_code']) ?> \u00b7","                <?= h($t['recorded_at']) ?>","              </li>","            <?php endforeach; ?>","          </ul>","        </div>","      <?php endif; ?>","    </div>","  <?php endforeach; ?>","</div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/po_pdf.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","","require_login();","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$id = (int)($_GET['id'] ?? 0);","if ($id<=0){ http_response_code(400); echo \"Missing id\"; exit; }","","// Reuse the same HTML as print view","ob_start();","$_GET['id'] = $id;","include __DIR__.'/po_print.php';","$html = ob_get_clean();","","if (class_exists('\\\\Dompdf\\\\Dompdf')) {","  // If Dompdf is installed, stream a PDF","  $dompdf = new \\Dompdf\\Dompdf(['isRemoteEnabled'=>true]);","  $dompdf->loadHtml($html);","  $dompdf->setPaper('A4', 'portrait');","  $dompdf->render();","  $dompdf->stream('PO-'.$id.'.pdf', ['Attachment' => true]);","  exit;","}","","// Fallback: show the HTML with guidance","header('Content-Type: text/html; charset=utf-8'); ?>","<!doctype html>","<html><head><meta charset=\"utf-8\"><title>PDF export</title>","<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"></head>","<body class=\"p-4\">","  <div class=\"alert alert-info\">","    PDF export requires Dompdf (PHP library). It seems not installed on this server.<br>","    Ask admin to run: <code>composer require dompdf/dompdf</code><br>","    Meanwhile, you can print to PDF from the browser here:","    <a class=\"btn btn-sm btn-outline-primary\" target=\"_blank\" href=\"/purchase/po_print.php?id=<?= (int)$id ?>\">Open Print View</a>","  </div>","  <div class=\"border rounded p-3 bg-white\"><?= $html ?></div>","</body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/quotes_compare.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","","require_login();","require_permission('purchase.quote.compare');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$inquiry_id = (int)($_GET['inquiry_id'] ?? 0);","","/* Picker if none */","if ($inquiry_id<=0) {","  $choices = $pdo->query(\"","    SELECT i.id, i.inquiry_no, i.status","    FROM inquiries i","    WHERE i.status IN ('issued','closed')","    ORDER BY i.id DESC","    LIMIT 200","  \")->fetchAll(PDO::FETCH_ASSOC);","","  include __DIR__.'/../ui/layout_start.php'; ?>","  <div class=\"container py-4\">","    <h1 class=\"h4 mb-3\">Quote Comparison</h1>","    <form class=\"row g-2\" method=\"get\">","      <div class=\"col-md-6\">","        <label class=\"form-label\">Inquiry</label>","        <select name=\"inquiry_id\" class=\"form-select\" required>","          <option value=\"\">\u2014</option>","          <?php foreach ($choices as $c): ?>","            <option value=\"<?=$c['id']?>\"><?=htmlspecialchars($c['inquiry_no'])?> (<?=htmlspecialchars($c['status'])?>)</option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"col-md-3\"><button class=\"btn btn-primary w-100\">Open</button></div>","      <div class=\"col-md-3\"><a class=\"btn btn-outline-secondary w-100\" href=\"/purchase/quotes_list.php\">Back</a></div>","    </form>","  </div>","  <?php include __DIR__.'/../ui/layout_end.php'; exit;","}","","/* Inquiry header */","$inq = $pdo->prepare(\"SELECT id, inquiry_no, status FROM inquiries WHERE id=?\");","$inq->execute([$inquiry_id]);","$inq = $inq->fetch(PDO::FETCH_ASSOC);","if (!$inq) { http_response_code(404); echo \"Inquiry not found\"; exit; }","","/* Lines (CI + RMI) */","$ci = $pdo->prepare(\"SELECT ii.id AS key_id, 'CI' AS src, ii.qty, u.code AS uom_code,","                            CONCAT(it.material_code,' \u2014 ',it.name) AS label","                     FROM inquiry_items ii","                     JOIN items it ON it.id=ii.item_id","                     JOIN uom u ON u.id=ii.uom_id","                     WHERE ii.inquiry_id=?","                     ORDER BY ii.id\");","$ci->execute([$inquiry_id]); $ci=$ci->fetchAll(PDO::FETCH_ASSOC);","","$rm = $pdo->prepare(\"SELECT il.id AS key_id, 'RMI' AS src, il.qty, u.code AS uom_code,","                            COALESCE(il.description, CONCAT('Raw Material Line #',il.id)) AS label","                     FROM inquiry_lines il","                     LEFT JOIN uom u ON u.id=il.qty_uom_id","                     WHERE il.inquiry_id=? AND (il.source_type IN ('RMI','GI') OR il.source_type IS NULL)","                     ORDER BY il.id\");","$rm->execute([$inquiry_id]); $rm=$rm->fetchAll(PDO::FETCH_ASSOC);","","$lines = array_merge($ci,$rm);","","/* Suppliers that have quotes (or not) */","$quotes = $pdo->prepare(\"SELECT iq.id AS quote_id, iq.supplier_id, p.name AS supplier_name, iq.status, iq.total_after_tax","                         FROM inquiry_quotes iq","                         JOIN parties p ON p.id=iq.supplier_id","                         WHERE iq.inquiry_id=?","                         ORDER BY p.name, iq.id\");","$quotes->execute([$inquiry_id]);","$quotes = $quotes->fetchAll(PDO::FETCH_ASSOC);","if (!$quotes) {","  include __DIR__.'/../ui/layout_start.php'; ?>","  <div class=\"container py-4\">","    <h1 class=\"h4 mb-3\">Quote Comparison</h1>","    <div class=\"alert alert-info\">No quotes yet for Inquiry <strong><?=htmlspecialchars($inq['inquiry_no'])?></strong>.</div>","    <a class=\"btn btn-outline-secondary\" href=\"/purchase/quotes_compare.php\">Choose another Inquiry</a>","  </div>","  <?php include __DIR__.'/../ui/layout_end.php'; exit;","}","","/* Supplier list */","$suppliers=[]; foreach($quotes as $q){ $suppliers[$q['supplier_id']] = $q['supplier_name']; }","","/* Price map per line */","$priceMap = []; // [src:key_id][supplier_id] => row","$st=$pdo->prepare(\"SELECT q.quote_id, q.src, q.inquiry_item_id, q.inquiry_line_id, q.unit_price, q.discount_percent, q.tax_percent,","                          q.delivery_days, q.remarks, s.supplier_id, q.line_total_after_tax","                   FROM inquiry_quote_items q","                   JOIN inquiry_quotes s ON s.id=q.quote_id","                   WHERE s.inquiry_id=?","                   ORDER BY COALESCE(q.src,'CI'), q.inquiry_item_id, q.inquiry_line_id, s.supplier_id\");","$st->execute([$inquiry_id]);","while ($r=$st->fetch(PDO::FETCH_ASSOC)) {","  $src = $r['src'] ?: 'CI';","  $kid = $src==='RMI' ? (int)$r['inquiry_line_id'] : (int)$r['inquiry_item_id'];","  if ($kid<=0) continue;","  $priceMap[$src.':'.$kid][(int)$r['supplier_id']] = $r;","}","","/* Previously locked selections (works after the tiny SQL change) */","$locked = []; // [src:key_id] => supplier_id","$st=$pdo->prepare(\"SELECT src, inquiry_item_id, inquiry_line_id, supplier_id","                   FROM inquiry_quote_selections WHERE inquiry_id=?\");","$st->execute([$inquiry_id]);","while($r=$st->fetch(PDO::FETCH_ASSOC)){","  $src = $r['src'] ?: 'CI';","  $kid = $src==='RMI' ? (int)$r['inquiry_line_id'] : (int)$r['inquiry_item_id'];","  if ($kid>0) $locked[$src.':'.$kid] = (int)$r['supplier_id'];","}","","include __DIR__.'/../ui/layout_start.php';","?>","<div class=\"container py-4\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h1 class=\"h4 mb-0\">Quote Comparison \u2013 <?=htmlspecialchars($inq['inquiry_no'])?></h1>","    <form method=\"post\" action=\"/purchase/quotes_lock.php\" class=\"d-flex gap-2\" onsubmit=\"return confirm('Lock selection for this inquiry?');\">","      <input type=\"hidden\" name=\"_action\" value=\"lock\">","      <input type=\"hidden\" name=\"inquiry_id\" value=\"<?=$inquiry_id?>\">","      <input type=\"hidden\" id=\"selection_json\" name=\"selection_json\" value=\"[]\">","      <button class=\"btn btn-primary btn-sm\" type=\"submit\">Lock Selection</button>","    </form>","  </div>","","  <div class=\"table-responsive\">","    <table class=\"table table-bordered align-middle\">","      <thead class=\"table-light\">","        <tr>","          <th style=\"min-width:360px\">Item</th>","          <?php foreach ($suppliers as $sid=>$name): ?>","            <th class=\"text-center\" style=\"min-width:220px\"><?=htmlspecialchars($name)?></th>","          <?php endforeach; ?>","        </tr>","      </thead>","      <tbody id=\"cmpBody\">","        <?php foreach ($lines as $ln):","          $key = ($ln['src'] ?: 'CI').':'.$ln['key_id'];","          $isLocked = array_key_exists($key, $locked);","        ?>","          <tr data-key=\"<?=htmlspecialchars($key)?>\" class=\"<?= $isLocked ? 'table-success' : '' ?>\">","            <td>","              <div><strong><?=htmlspecialchars($ln['label'])?></strong> <span class=\"badge bg-secondary ms-1\"><?=htmlspecialchars($ln['src'])?></span></div>","              <div class=\"text-muted small\">Qty: <?=number_format((float)$ln['qty'],3)?> <?=htmlspecialchars($ln['uom_code'])?></div>","              <input type=\"hidden\" class=\"sel_supplier_id\" value=\"<?= $isLocked ? (int)$locked[$key] : '' ?>\">","            </td>","            <?php foreach ($suppliers as $sid=>$name):","              $row = $priceMap[$key][$sid] ?? null;","              $chosen = $isLocked ? ((int)$locked[$key] === $sid) : false;","              $disabled = $isLocked ? 'disabled' : '';","            ?>","              <td>","                <?php if ($row): ?>","                  <div class=\"form-check\">","                    <input class=\"form-check-input pick\" type=\"radio\" name=\"pick_<?=htmlspecialchars($key)?>\" data-supplier=\"<?=$sid?>\" <?=$chosen?'checked':''?> <?=$disabled?>>","                    <label class=\"form-check-label small\">Select</label>","                  </div>","                  <div class=\"small\">Unit: <?=number_format((float)$row['unit_price'], 2)?></div>","                  <div class=\"small\">Disc %: <?=number_format((float)$row['discount_percent'], 2)?></div>","                  <div class=\"small\">Tax %: <?=number_format((float)$row['tax_percent'], 2)?></div>","                  <div class=\"small\">Days: <?= isset($row['delivery_days']) ? htmlspecialchars((string)$row['delivery_days']) : '' ?></div>","                  <div class=\"small\">Line Total: <strong><?=number_format((float)($row['line_total_after_tax'] ?? 0),2)?></strong></div>","                  <input type=\"hidden\" class=\"quote_id_<?=$sid?>\" value=\"<?= (int)$row['quote_id'] ?>\">","                <?php else: ?>","                  <div class=\"text-muted small\">\u2014 no quote \u2014</div>","                <?php endif; ?>","              </td>","            <?php endforeach; ?>","          </tr>","        <?php endforeach; ?>","      </tbody>","    </table>","  </div>","","  <a class=\"btn btn-outline-secondary\" href=\"/purchase/quotes_compare.php\">Choose another Inquiry</a>","</div>","","<script>","document.addEventListener('DOMContentLoaded', ()=>{","  const body = document.getElementById('cmpBody');","  const selJson = document.getElementById('selection_json');","","  body.querySelectorAll('input.pick').forEach(r=>{","    r.addEventListener('change', ()=>{","      const tr = r.closest('tr');","      tr.querySelector('.sel_supplier_id').value = r.getAttribute('data-supplier');","    });","  });","","  document.querySelector('form[action=\"/purchase/quotes_lock.php\"]').addEventListener('submit', ()=>{","    const out=[];","    body.querySelectorAll('tr[data-key]').forEach(tr=>{","      const key = tr.getAttribute('data-key'); // CI:12 or RMI:5","      const [src, id] = key.split(':');","      const sid = Number(tr.querySelector('.sel_supplier_id').value || 0);","      if (!sid) return;","      const qidInput = tr.querySelector(`.quote_id_${sid}`);","      const quote_id = qidInput ? Number(qidInput.value || 0) : 0;","      if (!quote_id) return;","      out.push({","        src, supplier_id: sid, quote_id,","        inquiry_item_id: src==='CI' ? Number(id) : null,","        inquiry_line_id: src==='RMI'? Number(id) : null","      });","    });","    selJson.value = JSON.stringify(out);","  });","});","</script>","<?php include __DIR__.'/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/po_attach_download.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","","require_login();","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","function col_exists(PDO $pdo, string $table, string $col): bool {","  $sql = \"SELECT 1 FROM information_schema.COLUMNS","          WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = ? AND COLUMN_NAME = ? LIMIT 1\";","  $st = $pdo->prepare($sql); $st->execute([$table, $col]);","  return (bool)$st->fetchColumn();","}","function first_existing(PDO $pdo, string $table, array $candidates): string {","  foreach ($candidates as $c) if ($c && col_exists($pdo,$table,$c)) return $c;","  return '';","}","","$po_id = (int)($_GET['po_id'] ?? 0);","$att_id = (int)($_GET['attachment_id'] ?? 0);","if ($po_id<=0 || $att_id<=0) { http_response_code(400); echo \"Missing ids\"; exit; }","","// attachment_links check","$pathCol  = first_existing($pdo,'attachments', ['path','file_path','filepath','url']);","$nameCol  = first_existing($pdo,'attachments', ['original_name','filename','name']);","","$select = \"SELECT a.id\".","          ($pathCol ? \", a.`$pathCol` AS path\" : \"\").","          ($nameCol ? \", a.`$nameCol` AS original_name\" : \"\").","          \" FROM attachment_links al","            JOIN attachments a ON a.id=al.attachment_id","           WHERE al.entity_type='purchase_order' AND al.entity_id=? AND al.attachment_id=?\";","","$st = $pdo->prepare($select);","$st->execute([$po_id, $att_id]);","$a = $st->fetch(PDO::FETCH_ASSOC);","if (!$a) { http_response_code(404); echo \"Attachment not found\"; exit; }","","$rel = (string)($a['path'] ?? '');","$downloadName = (string)($a['original_name'] ?? ('attachment-'.$att_id));","$abs = $rel ? (__DIR__.'/..'.$rel) : '';","","if (!$rel || !is_file($abs)) {","  http_response_code(404); echo \"File missing on disk\"; exit;","}","","$mime = mime_content_type($abs) ?: 'application/octet-stream';","header('Content-Description: File Transfer');","header('Content-Type: '.$mime);","header('Content-Disposition: attachment; filename=\"'.basename($downloadName).'\"');","header('Content-Length: '.filesize($abs));","header('Cache-Control: private, max-age=0, must-revalidate');","readfile($abs);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/quotes_lock.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","","require_login();","require_permission('purchase.quote.lock');","","if (($_POST['_action'] ?? '') !== 'lock') { http_response_code(405); echo \"Method not allowed\"; exit; }","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$inquiry_id = (int)($_POST['inquiry_id'] ?? 0);","$selection = json_decode($_POST['selection_json'] ?? '[]', true) ?: [];","if ($inquiry_id<=0) { http_response_code(400); echo \"Missing inquiry_id\"; exit; }","","$now = date('Y-m-d H:i:s');","","try {","  $pdo->beginTransaction();","","  // Fetch stamp values per line from quote items","  $fetchCI = $pdo->prepare(\"SELECT unit_price, discount_percent, tax_percent, delivery_days","                            FROM inquiry_quote_items","                            WHERE quote_id=? AND (src IS NULL OR src='CI') AND inquiry_item_id=?\");","  $fetchRM = $pdo->prepare(\"SELECT unit_price, discount_percent, tax_percent, delivery_days","                            FROM inquiry_quote_items","                            WHERE quote_id=? AND src='RMI' AND inquiry_line_id=?\");","","  // Upsert (requires the tiny SQL change to unique key on selections)","  $upsert = $pdo->prepare(\"","    INSERT INTO inquiry_quote_selections","      (inquiry_id, src, inquiry_item_id, inquiry_line_id, quote_id, supplier_id,","       unit_price, tax_percent, discount_percent, delivery_days, locked_at)","    VALUES (?,?,?,?,?,?,?,?,?,?,?)","    ON DUPLICATE KEY UPDATE","      quote_id=VALUES(quote_id),","      supplier_id=VALUES(supplier_id),","      unit_price=VALUES(unit_price),","      tax_percent=VALUES(tax_percent),","      discount_percent=VALUES(discount_percent),","      delivery_days=VALUES(delivery_days),","      locked_at=VALUES(locked_at)","  \");","","  foreach ($selection as $s) {","    $src = (string)($s['src'] ?? 'CI');","    $qid = (int)($s['quote_id'] ?? 0);","    $sid = (int)($s['supplier_id'] ?? 0);","    $ii  = isset($s['inquiry_item_id']) ? (int)$s['inquiry_item_id'] : null;","    $il  = isset($s['inquiry_line_id']) ? (int)$s['inquiry_line_id'] : null;","    if ($qid<=0 || $sid<=0) continue;","","    if ($src==='RMI') {","      if (!$il) continue;","      $fetchRM->execute([$qid,$il]);","      $row=$fetchRM->fetch(PDO::FETCH_ASSOC);","    } else {","      if (!$ii) continue;","      $fetchCI->execute([$qid,$ii]);","      $row=$fetchCI->fetch(PDO::FETCH_ASSOC);","    }","    if (!$row) continue;","","    $upsert->execute([","      $inquiry_id, $src, ($src==='CI'?$ii:null), ($src==='RMI'?$il:null), $qid, $sid,","      (float)$row['unit_price'], (float)$row['tax_percent'], (float)$row['discount_percent'],","      !empty($row['delivery_days'])?(int)$row['delivery_days']:null, $now","    ]);","  }","","  $pdo->commit();","  header('Location: /purchase/quotes_compare.php?inquiry_id='.$inquiry_id); exit;","","} catch(Throwable $e) {","  if ($pdo->inTransaction()) $pdo->rollBack();","  http_response_code(500); echo \"Lock failed: \".$e->getMessage();","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/item_makes.php": ["<?php","// PATH: /public_html/purchase/item_makes.php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_permission('purchase.indent.manage');","","header('Content-Type: application/json; charset=utf-8');","","$itemId = (int)($_GET['item_id'] ?? 0);","if ($itemId <= 0) { echo json_encode(['ok'=>true,'makes'=>[]]); exit; }","","$pdo = db();","$sql = \"","  SELECT m.id, m.name","  FROM item_makes im","  JOIN makes m ON m.id = im.make_id","  WHERE im.item_id = ? AND m.status = 'active'","  ORDER BY m.name","\";","$st = $pdo->prepare($sql);","$st->execute([$itemId]);","echo json_encode(['ok'=>true,'makes'=>$st->fetchAll(PDO::FETCH_ASSOC)]);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/bom_list.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","","$pdo = db();","","$q = trim($_GET['q'] ?? '');","$project_id = (int)($_GET['project_id'] ?? 0);","","$where=[]; $p=[];","if($q!==''){","  $where[]=\"(b.bom_no LIKE ? OR pr.name LIKE ? OR pr.code LIKE ?)\";","  $p[]=\"%$q%\"; $p[]=\"%$q%\"; $p[]=\"%$q%\";","}","if($project_id>0){","  $where[]=\"b.project_id=?\";","  $p[]=$project_id;","}","$w = $where ? 'WHERE '.implode(' AND ',$where) : '';","","$sql = \"SELECT b.*, pr.code pcode, pr.name pname","        FROM bom b LEFT JOIN projects pr ON pr.id=b.project_id","        $w","        ORDER BY b.id DESC","        LIMIT 200\";","$st = $pdo->prepare($sql);","$st->execute($p);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","$projects = $pdo->query(\"SELECT id, CONCAT(code,' \u2014 ',name) label FROM projects ORDER BY id DESC LIMIT 500\")->fetchAll(PDO::FETCH_ASSOC);","","include __DIR__.'/../ui/layout_start.php'; ?>","","<!-- Page header -->","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 mb-0\">BOMs</h1>","  <div class=\"d-flex gap-2\">","    <a class=\"btn btn-primary\" href=\"bom_form.php\"><i class=\"bi bi-plus-lg me-1\"></i> New BOM</a>","    <a class=\"btn btn-outline-primary\" href=\"req_wizard.php\"><i class=\"bi bi-diagram-3 me-1\"></i> Plate Requirement</a>","  </div>","</div>","","<!-- Filters -->","<div class=\"card shadow-sm mb-3\">","  <div class=\"card-body py-2\">","    <form class=\"row g-2 align-items-center\" method=\"get\">","      <div class=\"col-12 col-md-5\">","        <div class=\"input-group\">","          <span class=\"input-group-text\"><i class=\"bi bi-search\"></i></span>","          <input class=\"form-control\" name=\"q\" placeholder=\"Search by BOM / Project code / name\" value=\"<?= htmlspecialchars($q) ?>\">","        </div>","      </div>","      <div class=\"col-12 col-md-5\">","        <select class=\"form-select\" name=\"project_id\">","          <option value=\"0\" <?= $project_id===0?'selected':'' ?>>All projects</option>","          <?php foreach($projects as $pr): ?>","            <option value=\"<?= (int)$pr['id'] ?>\" <?= ($project_id===(int)$pr['id']?'selected':'') ?>>","              <?= htmlspecialchars($pr['label']) ?>","            </option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"col-6 col-md-2 text-md-end\">","        <button class=\"btn btn-outline-secondary w-100\"><i class=\"bi bi-funnel me-1\"></i> Filter</button>","      </div>","    </form>","  </div>","</div>","","<!-- Results -->","<div class=\"card shadow-sm\">","  <div class=\"table-responsive\">","    <table class=\"table table-striped table-hover align-middle mb-0\">","      <thead class=\"table-light\">","        <tr>","          <th>BOM No</th>","          <th>Project</th>","          <th>Status</th>","          <th>Revision</th>","          <th>Created</th>","          <th class=\"text-end\">Actions</th>","        </tr>","      </thead>","      <tbody>","        <?php if(!$rows): ?>","          <tr>","            <td colspan=\"6\" class=\"p-0\">","              <div class=\"text-center text-muted py-4\">No BOMs</div>","            </td>","          </tr>","        <?php else: foreach($rows as $r): $bomId=(int)$r['id']; ?>","          <tr>","            <td class=\"fw-semibold\"><?= htmlspecialchars($r['bom_no']) ?></td>","            <td><?= $r['pcode'] ? htmlspecialchars($r['pcode'].' \u2014 '.$r['pname']) : '\u2014' ?></td>","            <td>","              <?php","                // Soft badge styles (Bootstrap 5.3)","                $cls = 'bg-secondary-subtle text-secondary-emphasis border';","                if (($r['status'] ?? '') === 'active')  $cls = 'bg-success-subtle text-success-emphasis border';","                if (($r['status'] ?? '') === 'draft')   $cls = 'bg-secondary-subtle text-secondary-emphasis border';","                if (($r['status'] ?? '') === 'closed')  $cls = 'bg-dark-subtle text-dark-emphasis border';","              ?>","              <span class=\"badge <?= $cls ?>\"><?= htmlspecialchars((string)$r['status']) ?></span>","            </td>","            <td><?= htmlspecialchars((string)$r['revision']) ?></td>","            <td><span class=\"text-muted\"><?= htmlspecialchars((string)$r['created_at']) ?></span></td>","            <td class=\"text-end\">","              <div class=\"btn-group btn-group-sm\" role=\"group\">","                <a class=\"btn btn-light\" href=\"bom_form.php?id=<?= $bomId ?>\" title=\"Open\">","                  <i class=\"bi bi-box-arrow-up-right\"></i>","                </a>","                <!-- Go straight to Routing Editor (passes bom_id) -->","                <a class=\"btn btn-light\" href=\"/bom/routing_form.php?bom_id=<?= $bomId ?>\" title=\"Routing\">","                  <i class=\"bi bi-diagram-3\"></i>","                </a>","                <!-- Quick view of Routing -->","                <a class=\"btn btn-light\" href=\"/bom/routing_view.php?bom_id=<?= $bomId ?>\" title=\"View\">","                  <i class=\"bi bi-eye\"></i>","                </a>","              </div>","            </td>","          </tr>","        <?php endforeach; endif; ?>","      </tbody>","    </table>","  </div>","</div>","","<?php include __DIR__.'/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/inquiry_seq.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/db.php';","","function next_inquiry_no(PDO $pdo): string {","  $yr = (int)date('Y');","  $pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","  $pdo->beginTransaction();","  try {","    $st = $pdo->prepare(\"SELECT seq FROM inquiry_sequences WHERE yr=? FOR UPDATE\");","    $st->execute([$yr]);","    $seq = $st->fetchColumn();","    if ($seq === false) {","      $seq = 1;","      $pdo->prepare(\"INSERT INTO inquiry_sequences (yr, seq) VALUES (?, ?)\")->execute([$yr, $seq]);","    } else {","      $seq = (int)$seq + 1;","      $pdo->prepare(\"UPDATE inquiry_sequences SET seq=? WHERE yr=?\")->execute([$seq, $yr]);","    }","    $pdo->commit();","    return sprintf('INQ-%04d-%04d', $yr, (int)$seq);","  } catch (Throwable $e) {","    $pdo->rollBack();","    throw $e;","  }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/inquiry_quotes_form.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","","require_login();","$pdo=db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$id = (int)($_GET['id'] ?? 0);","$is_edit = $id>0;","if ($is_edit) require_permission('purchase.quote.view'); else require_permission('purchase.quote.manage');","","// Lookups","$projects  = $pdo->query(\"SELECT id,code,name FROM projects ORDER BY id DESC LIMIT 200\")->fetchAll(PDO::FETCH_ASSOC);","$uoms      = $pdo->query(\"SELECT id,code,name FROM uom ORDER BY code\")->fetchAll(PDO::FETCH_ASSOC);","$items     = $pdo->query(\"SELECT id,material_code,name FROM items WHERE status='active' ORDER BY id DESC LIMIT 500\")->fetchAll(PDO::FETCH_ASSOC);","$inquiries = $pdo->query(\"SELECT id,inquiry_no, project_id FROM inquiries WHERE status IN ('draft','issued') ORDER BY id DESC LIMIT 200\")->fetchAll(PDO::FETCH_ASSOC);","$suppliers = $pdo->query(\"SELECT id, code, name, contact_name, email, phone FROM parties WHERE status=1 AND type='supplier' ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","","// Defaults","$hdr = [","  'inquiry_id'=>'','supplier_id'=>'','quote_no'=>'','quote_date'=>date('Y-m-d'),","  'currency'=>'INR','tax_inclusive'=>1,'remarks'=>'','status'=>'draft',","  'total_before_tax'=>0,'total_tax'=>0,'total_after_tax'=>0","];","$lines=[];","","if ($is_edit) {","  // header","  $st = $pdo->prepare(\"SELECT * FROM inquiry_quotes WHERE id=?\");","  $st->execute([$id]);","  if ($r=$st->fetch(PDO::FETCH_ASSOC)) $hdr=array_merge($hdr,$r);","","  // lines","  $st = $pdo->prepare(\"SELECT iq.*, it.material_code, it.name AS item_name, u.code AS uom_code","                       FROM inquiry_quote_items iq","                       JOIN items it ON it.id=iq.item_id","                       JOIN uom u ON u.id=iq.uom_id","                       WHERE iq.quote_id=? ORDER BY iq.id\");","  $st->execute([$id]);","  $lines = $st->fetchAll(PDO::FETCH_ASSOC);","}","","/** SAVE / SUBMIT / LOCK */","$action = $_POST['_action'] ?? '';","if ($_SERVER['REQUEST_METHOD']==='POST' && in_array($action,['save','submit','lock'],true)) {","  if ($action!=='save') require_permission('purchase.quote.lock'); else require_permission('purchase.quote.manage');","","  // header fields","  $inquiry_id = (int)($_POST['inquiry_id'] ?? 0);","  $supplier_id= (int)($_POST['supplier_id'] ?? 0);","  $quote_no   = trim($_POST['quote_no'] ?? '');","  $quote_date = $_POST['quote_date'] ?: date('Y-m-d');","  $currency   = trim($_POST['currency'] ?? 'INR');","  $tax_incl   = isset($_POST['tax_inclusive']) ? 1 : 0;","  $remarks    = trim($_POST['remarks'] ?? '');","","  if (!$is_edit) {","    $pdo->prepare(\"INSERT INTO inquiry_quotes (inquiry_id,supplier_id,quote_no,quote_date,currency,tax_inclusive,remarks,status,created_by)","                   VALUES (?,?,?,?,?,?,?,?,?)\")","        ->execute([$inquiry_id,$supplier_id,$quote_no,$quote_date,$currency,$tax_incl,$remarks,'draft',current_user_id()]);","    $id = (int)$pdo->lastInsertId(); $is_edit=true;","  } else {","    // editable only in draft","    $st = $pdo->prepare(\"SELECT status FROM inquiry_quotes WHERE id=?\");","    $st->execute([$id]); $cur = $st->fetchColumn();","    if ($cur==='draft') {","      $pdo->prepare(\"UPDATE inquiry_quotes SET inquiry_id=?,supplier_id=?,quote_no=?,quote_date=?,currency=?,tax_inclusive=?,remarks=?","                     WHERE id=?\")->execute([$inquiry_id,$supplier_id,$quote_no,$quote_date,$currency,$tax_incl,$remarks,$id]);","    }","  }","","  // lines JSON","  $lines_json = $_POST['lines_json'] ?? '[]';","  $postLines = json_decode($lines_json, true) ?: [];","","  // compute totals and persist (only editable in draft)","  $st = $pdo->prepare(\"SELECT status FROM inquiry_quotes WHERE id=?\");","  $st->execute([$id]); $status = $st->fetchColumn();","","  $sum_sub = 0; $sum_tax = 0; $sum_tot = 0;","","  if ($status==='draft') {","    $pdo->prepare(\"DELETE FROM inquiry_quote_items WHERE quote_id=?\")->execute([$id]);","    $ins = $pdo->prepare(\"INSERT INTO inquiry_quote_items","      (quote_id, inquiry_item_id, item_id, qty, uom_id, unit_price, discount_percent, tax_percent, delivery_days, remarks, line_subtotal, line_tax, line_total)","      VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)\");","","    foreach ($postLines as $ln) {","      $item_id  = (int)($ln['item_id'] ?? 0);","      $qty      = (float)($ln['qty'] ?? 0);","      $uom_id   = (int)($ln['uom_id'] ?? 0);","      if ($item_id<=0 || $qty<=0 || $uom_id<=0) continue;","","      $price    = (float)($ln['unit_price'] ?? 0);","      $discP    = (float)($ln['discount_percent'] ?? 0);","      $taxP     = (float)($ln['tax_percent'] ?? 0);","      $delDays  = ($ln['delivery_days'] !== '' && $ln['delivery_days'] !== null) ? (int)$ln['delivery_days'] : null;","      $lnRemarks= trim((string)($ln['remarks'] ?? ''));","","      $gross = $qty * $price;","      $discAmt = $gross * ($discP/100);","      $sub = $gross - $discAmt;","      $tax = $sub * ($taxP/100);","      $tot = $sub + $tax;","","      $sum_sub += $sub; $sum_tax += $tax; $sum_tot += $tot;","","      $ins->execute([","        $id,","        !empty($ln['inquiry_item_id']) ? (int)$ln['inquiry_item_id'] : null,","        $item_id,","        $qty,","        $uom_id,","        $price,","        $discP,","        $taxP,","        $delDays,","        $lnRemarks,","        $sub, $tax, $tot","      ]);","    }","","    $pdo->prepare(\"UPDATE inquiry_quotes SET total_before_tax=?, total_tax=?, total_after_tax=? WHERE id=?\")","        ->execute([round($sum_sub,2), round($sum_tax,2), round($sum_tot,2), $id]);","  }","","  // status transitions","  if ($action==='submit' && $status==='draft') {","    $pdo->prepare(\"UPDATE inquiry_quotes SET status='submitted' WHERE id=?\")->execute([$id]);","  }","  if ($action==='lock' && in_array($status,['draft','submitted'],true)) {","    $pdo->prepare(\"UPDATE inquiry_quotes SET status='locked' WHERE id=?\")->execute([$id]);","  }","","  header('Location: /purchase/inquiry_quotes_list.php'); exit;","}","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container py-4\">","  <div class=\"d-flex align-items-center mb-3\">","    <h1 class=\"h4 mb-0\"><?= $is_edit?'Edit Quote':'New Quote' ?></h1>","    <a class=\"btn btn-outline-secondary ms-auto\" href=\"/purchase/inquiry_quotes_list.php\">Back</a>","  </div>","","  <form method=\"post\" class=\"card p-3 shadow-sm\" id=\"qForm\">","    <input type=\"hidden\" name=\"_action\" value=\"save\" id=\"formAction\">","    <input type=\"hidden\" name=\"lines_json\" id=\"lines_json\">","","    <div class=\"row g-3\">","      <div class=\"col-md-3\">","        <label class=\"form-label\">Inquiry</label>","        <select class=\"form-select\" name=\"inquiry_id\" id=\"inquiry_id\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>>","          <option value=\"\">\u2014</option>","          <?php foreach($inquiries as $i): ?>","            <option value=\"<?=$i['id']?>\" <?=($hdr['inquiry_id']??null)==$i['id']?'selected':''?>><?=htmlspecialchars($i['inquiry_no'])?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"col-md-4\">","        <label class=\"form-label\">Supplier</label>","        <select class=\"form-select\" name=\"supplier_id\" id=\"supplier_id\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>>","          <option value=\"\">\u2014</option>","          <?php foreach($suppliers as $s): ?>","            <option value=\"<?=$s['id']?>\" <?=($hdr['supplier_id']??null)==$s['id']?'selected':''?>>","              <?=htmlspecialchars(($s['code']?'['.$s['code'].'] ':'').$s['name'])?>","            </option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"col-md-2\">","        <label class=\"form-label\">Quote No</label>","        <input class=\"form-control\" name=\"quote_no\" value=\"<?=htmlspecialchars($hdr['quote_no']??'')?>\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>>","      </div>","      <div class=\"col-md-3\">","        <label class=\"form-label\">Quote Date</label>","        <input type=\"date\" class=\"form-control\" name=\"quote_date\" value=\"<?=htmlspecialchars($hdr['quote_date']??date('Y-m-d'))?>\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>>","      </div>","      <div class=\"col-md-2\">","        <label class=\"form-label\">Currency</label>","        <input class=\"form-control\" name=\"currency\" value=\"<?=htmlspecialchars($hdr['currency']??'INR')?>\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>>","      </div>","      <div class=\"col-md-2\">","        <label class=\"form-label d-block\">Tax Inclusive</label>","        <div class=\"form-check form-switch\">","          <input class=\"form-check-input\" type=\"checkbox\" name=\"tax_inclusive\" value=\"1\" <?=($hdr['tax_inclusive']??1)?'checked':''?> <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>>","        </div>","      </div>","      <div class=\"col-md-8\">","        <label class=\"form-label\">Remarks</label>","        <input class=\"form-control\" name=\"remarks\" value=\"<?=htmlspecialchars($hdr['remarks']??'')?>\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>>","      </div>","    </div>","","    <hr class=\"my-3\">","    <div class=\"d-flex align-items-center mb-2\">","      <h5 class=\"mb-0\">Lines</h5>","      <?php if(($hdr['status']??'draft')==='draft'): ?>","        <button type=\"button\" class=\"btn btn-sm btn-outline-success ms-2\" id=\"btnSeed\">Seed from Inquiry</button>","      <?php endif; ?>","    </div>","","    <div id=\"linesWrap\"></div>","","    <div class=\"mt-3 row g-2\">","      <div class=\"col-md-3 ms-auto\">","        <div class=\"border rounded p-2\">","          <div class=\"d-flex justify-content-between\"><span>Subtotal</span><strong id=\"sum_sub\"><?=number_format((float)($hdr['total_before_tax']??0),2)?></strong></div>","          <div class=\"d-flex justify-content-between\"><span>Tax</span><strong id=\"sum_tax\"><?=number_format((float)($hdr['total_tax']??0),2)?></strong></div>","          <div class=\"d-flex justify-content-between\"><span>Total</span><strong id=\"sum_tot\"><?=number_format((float)($hdr['total_after_tax']??0),2)?></strong></div>","        </div>","      </div>","    </div>","","    <div class=\"mt-3 d-flex gap-2\">","      <?php if(($hdr['status']??'draft')==='draft'): ?>","        <button class=\"btn btn-primary\" type=\"submit\" onclick=\"document.getElementById('formAction').value='save'\">Save</button>","        <button class=\"btn btn-warning\" type=\"submit\" onclick=\"document.getElementById('formAction').value='submit'\">Submit</button>","        <button class=\"btn btn-dark\" type=\"submit\" onclick=\"document.getElementById('formAction').value='lock'\">Lock</button>","      <?php else: ?>","        <span class=\"badge bg-secondary\">Status: <?=htmlspecialchars($hdr['status'])?></span>","      <?php endif; ?>","      <a class=\"btn btn-outline-secondary\" href=\"/purchase/inquiry_quotes_list.php\">Back</a>","    </div>","  </form>","</div>","","<script>","document.addEventListener('DOMContentLoaded', ()=>{","  const isDraft = <?= json_encode(($hdr['status']??'draft')==='draft') ?>;","  const uoms   = <?= json_encode($uoms) ?>;","  const items  = <?= json_encode($items) ?>;","  const existing = <?= json_encode($lines) ?>;","","  const linesWrap = document.getElementById('linesWrap');","  const sumSub = document.getElementById('sum_sub');","  const sumTax = document.getElementById('sum_tax');","  const sumTot = document.getElementById('sum_tot');","","  function opt(v,t){ const o=document.createElement('option'); o.value=v; o.textContent=t; return o; }","","  function recalcTotals(){","    let sub=0, tax=0, tot=0;","    linesWrap.querySelectorAll('.qrow').forEach(r=>{","      const qty = parseFloat(r.querySelector('.ln_qty').value || '0');","      const price = parseFloat(r.querySelector('.ln_price').value || '0');","      const discP = parseFloat(r.querySelector('.ln_disc').value || '0');","      const taxP  = parseFloat(r.querySelector('.ln_tax').value  || '0');","","      const gross = qty*price;","      const discAmt = gross*(discP/100);","      const s = gross - discAmt;","      const t = s*(taxP/100);","      const T = s+t;","","      r.querySelector('.ln_sub').textContent = s.toFixed(2);","      r.querySelector('.ln_tax_amt').textContent = t.toFixed(2);","      r.querySelector('.ln_tot').textContent = T.toFixed(2);","","      sub+=s; tax+=t; tot+=T;","    });","    sumSub.textContent=sub.toFixed(2);","    sumTax.textContent=tax.toFixed(2);","    sumTot.textContent=tot.toFixed(2);","  }","","  function lineRow(d={}){","    const w=document.createElement('div');","    w.className='qrow row g-2 align-items-end mb-2 border rounded p-2';","    w.innerHTML=`","      <input type=\"hidden\" class=\"ln_inquiry_item_id\" value=\"${d.inquiry_item_id||''}\">","      <div class=\"col-md-4\">","        <label class=\"form-label\">Item</label>","        <select class=\"form-select ln_item\" ${!isDraft?'disabled':''}>","          <option value=\"\">\u2014</option>","        </select>","        <div class=\"small text-muted\">${d.item_name? (d.item_name): ''}</div>","      </div>","      <div class=\"col-md-2\">","        <label class=\"form-label\">Qty</label>","        <input class=\"form-control ln_qty\" type=\"number\" step=\"0.000001\" value=\"${d.qty||''}\" ${!isDraft?'disabled':''}>","      </div>","      <div class=\"col-md-2\">","        <label class=\"form-label\">UOM</label>","        <select class=\"form-select ln_uom\" ${!isDraft?'disabled':''}></select>","      </div>","      <div class=\"col-md-2\">","        <label class=\"form-label\">Unit Price</label>","        <input class=\"form-control ln_price\" type=\"number\" step=\"0.000001\" value=\"${d.unit_price||''}\" ${!isDraft?'disabled':''}>","      </div>","      <div class=\"col-md-2\">","        <label class=\"form-label\">Disc %</label>","        <input class=\"form-control ln_disc\" type=\"number\" step=\"0.01\" value=\"${d.discount_percent||0}\" ${!isDraft?'disabled':''}>","      </div>","      <div class=\"col-md-2\">","        <label class=\"form-label\">Tax %</label>","        <input class=\"form-control ln_tax\" type=\"number\" step=\"0.01\" value=\"${d.tax_percent||0}\" ${!isDraft?'disabled':''}>","      </div>","      <div class=\"col-md-2\">","        <label class=\"form-label\">Delivery Days</label>","        <input class=\"form-control ln_del\" type=\"number\" step=\"1\" value=\"${d.delivery_days||''}\" ${!isDraft?'disabled':''}>","      </div>","      <div class=\"col-md-3\">","        <label class=\"form-label\">Remarks</label>","        <input class=\"form-control ln_rem\" value=\"${d.remarks||''}\" ${!isDraft?'disabled':''}>","      </div>","      <div class=\"col-md-3\">","        <label class=\"form-label\">Amounts</label>","        <div class=\"d-flex justify-content-between small\">","          <span>Sub:</span><strong class=\"ln_sub\">0.00</strong>","        </div>","        <div class=\"d-flex justify-content-between small\">","          <span>Tax:</span><strong class=\"ln_tax_amt\">0.00</strong>","        </div>","        <div class=\"d-flex justify-content-between\">","          <span>Total:</span><strong class=\"ln_tot\">0.00</strong>","        </div>","      </div>","      ${isDraft?'<div class=\"col-12 text-end\"><button type=\"button\" class=\"btn btn-sm btn-outline-danger\" onclick=\"this.closest(\\'.qrow\\').remove(); recalcTotals();\">Remove</button></div>':''}","    `;","    const itemSel = w.querySelector('.ln_item'); items.forEach(it=>itemSel.appendChild(opt(it.id, `${it.material_code} \u2014 ${it.name}`)));","    if (d.item_id) itemSel.value=String(d.item_id);","    const uomSel = w.querySelector('.ln_uom'); uoms.forEach(u=>uomSel.appendChild(opt(u.id, u.code)));","    if (d.uom_id) uomSel.value=String(d.uom_id);","","    ['.ln_qty','.ln_price','.ln_disc','.ln_tax'].forEach(sel=>{","      w.querySelector(sel).addEventListener('input', recalcTotals);","    });","","    // calculate once","    recalcTotals();","    return w;","  }","","  function addLine(d={}){ linesWrap.appendChild(lineRow(d)); }","","  // seed from Inquiry","  const btnSeed = document.getElementById('btnSeed');","  if (btnSeed) btnSeed.addEventListener('click', async ()=>{","    const iq = document.getElementById('inquiry_id').value;","    const sp = document.getElementById('supplier_id').value;","    if (!iq || !sp) { alert('Select Inquiry and Supplier first'); return; }","    try{","      const res = await fetch('/purchase/inquiry_quote_seed.php?inquiry_id='+encodeURIComponent(iq)+'&supplier_id='+encodeURIComponent(sp));","      if (!res.ok) throw new Error('Seed HTTP '+res.status);","      const rows = await res.json();","      if (!Array.isArray(rows) || !rows.length) { alert('No lines to import'); return; }","      linesWrap.innerHTML='';","      rows.forEach(r=> addLine({","        inquiry_item_id: r.inquiry_item_id,","        item_id: r.item_id, item_name: (r.material_code? r.material_code+' \u2014 ' : '') + (r.item_name || ''),","        qty: r.qty, uom_id: r.uom_id, unit_price: '', discount_percent: 0, tax_percent: 0, delivery_days: '', remarks: r.line_notes || ''","      }));","      recalcTotals();","    }catch(e){ alert('Seed error: '+e.message); console.error(e); }","  });","","  // preload existing (editing)","  existing.forEach(addLine); recalcTotals();","","  // serialize on submit","  const form = document.getElementById('qForm');","  form.addEventListener('submit', ()=>{","    const lines = Array.from(linesWrap.querySelectorAll('.qrow')).map(r=>({","      inquiry_item_id: Number(r.querySelector('.ln_inquiry_item_id').value || 0) || null,","      item_id: Number(r.querySelector('.ln_item').value || 0),","      qty: parseFloat(r.querySelector('.ln_qty').value || '0'),","      uom_id: Number(r.querySelector('.ln_uom').value || 0),","      unit_price: parseFloat(r.querySelector('.ln_price').value || '0'),","      discount_percent: parseFloat(r.querySelector('.ln_disc').value || '0'),","      tax_percent: parseFloat(r.querySelector('.ln_tax').value || '0'),","      delivery_days: r.querySelector('.ln_del').value || null,","      remarks: r.querySelector('.ln_rem').value || ''","    })).filter(x=>x.item_id>0 && x.qty>0 && x.uom_id>0);","    document.getElementById('lines_json').value = JSON.stringify(lines);","  });","});","</script>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/inquiry_close.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","require_login(); require_permission('purchase.inquiry.close');","","$pdo=db(); $pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","$id=(int)($_GET['id']??0);","$pdo->prepare(\"UPDATE inquiries SET status='closed', closed_at=NOW(), closed_by=? WHERE id=? AND status='issued'\")","    ->execute([current_user_id(), $id]);","header('Location: /purchase/inquiries_list.php'); exit;"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/inquiry_issue.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","require_login(); require_permission('purchase.inquiry.issue');","","$pdo=db(); $pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","$id=(int)($_GET['id']??0);","$pdo->prepare(\"UPDATE inquiries SET status='issued', issued_at=NOW(), issued_by=? WHERE id=? AND status='draft'\")","    ->execute([current_user_id(), $id]);","header('Location: /purchase/inquiries_list.php'); exit;"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/inquiry_print.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_login(); require_permission('purchase.inquiry.view');","","$pdo=db(); $pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","$id=(int)($_GET['id']??0);","","$h = $pdo->prepare(\"SELECT i.*, p.code AS project_code, p.name AS project_name, l.code AS loc_code, l.name AS loc_name","                    FROM inquiries i","                    LEFT JOIN projects p ON p.id=i.project_id","                    LEFT JOIN locations l ON l.id=i.location_id","                    WHERE i.id=?\");","$h->execute([$id]); $hdr=$h->fetch(PDO::FETCH_ASSOC);","","$ls = $pdo->prepare(\"SELECT ii.*, it.material_code, it.name AS item_name, u.code AS uom_code, m.name AS make_name","                     FROM inquiry_items ii JOIN items it ON it.id=ii.item_id","                     JOIN uom u ON u.id=ii.uom_id","                     LEFT JOIN makes m ON m.id=ii.make_id","                     WHERE ii.inquiry_id=? ORDER BY ii.id\");","$ls->execute([$id]); $lines=$ls->fetchAll(PDO::FETCH_ASSOC);","","header('Content-Type: text/html; charset=utf-8');","?>","<!doctype html><html><head>","<meta charset=\"utf-8\">","<title>Inquiry <?=htmlspecialchars($hdr['inquiry_no']??'')?></title>","<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","<style>@media print {.no-print{display:none}}</style>","</head><body class=\"p-4\">","<div class=\"container\">","  <div class=\"d-flex justify-content-between align-items-start\">","    <div>","      <h2 class=\"h4 mb-1\">Purchase Inquiry</h2>","      <div><strong>No:</strong> <?=htmlspecialchars($hdr['inquiry_no']??'')?></div>","      <div><strong>Date:</strong> <?=htmlspecialchars($hdr['inquiry_date']??'')?></div>","      <?php if(!empty($hdr['project_name'])): ?><div><strong>Project:</strong> <?=htmlspecialchars(($hdr['project_code']??'').' \u2014 '.$hdr['project_name'])?></div><?php endif; ?>","      <?php if(!empty($hdr['loc_name'])): ?><div><strong>Location:</strong> <?=htmlspecialchars(($hdr['loc_code']??'').' \u2014 '.$hdr['loc_name'])?></div><?php endif; ?>","    </div>","    <div class=\"no-print\"><button class=\"btn btn-sm btn-outline-secondary\" onclick=\"window.print()\">Print</button></div>","  </div>","","  <hr>","  <table class=\"table table-sm\">","    <thead class=\"table-light\"><tr>","      <th>#</th><th>Item</th><th>Preferred Make</th><th class=\"text-end\">Qty</th><th>UOM</th><th>Needed By</th><th>Notes</th>","    </tr></thead>","    <tbody>","    <?php foreach($lines as $i=>$r): ?>","      <tr>","        <td><?=$i+1?></td>","        <td><div><strong><?=htmlspecialchars($r['material_code'])?></strong> \u2014 <?=htmlspecialchars($r['item_name'])?></div></td>","        <td><?=htmlspecialchars($r['make_name']??'')?></td>","        <td class=\"text-end\"><?=htmlspecialchars($r['qty'])?></td>","        <td><?=htmlspecialchars($r['uom_code'])?></td>","        <td><?=htmlspecialchars($r['needed_by']??'')?></td>","        <td><?=htmlspecialchars($r['line_notes']??'')?></td>","      </tr>","    <?php endforeach; ?>","    </tbody>","  </table>","","  <h6 class=\"mt-4\">Commercial Terms</h6>","  <ul>","    <?php if(!empty($hdr['delivery_terms'])): ?><li><strong>Delivery:</strong> <?=htmlspecialchars($hdr['delivery_terms'])?></li><?php endif; ?>","    <?php if(!empty($hdr['payment_terms'])): ?><li><strong>Payment:</strong> <?=htmlspecialchars($hdr['payment_terms'])?></li><?php endif; ?>","    <?php if(!empty($hdr['freight_terms'])): ?><li><strong>Freight:</strong> <?=htmlspecialchars($hdr['freight_terms'])?></li><?php endif; ?>","    <li><strong>GST Inclusive?</strong> <?= ($hdr['gst_inclusive']??0)?'Yes':'No' ?></li>","    <?php if(!empty($hdr['valid_till'])): ?><li><strong>Valid till:</strong> <?=htmlspecialchars($hdr['valid_till'])?></li><?php endif; ?>","  </ul>","","  <?php if(!empty($hdr['notes'])): ?>","    <div class=\"mt-3\"><strong>Notes:</strong><br><?=nl2br(htmlspecialchars($hdr['notes']))?></div>","  <?php endif; ?>","</div>","</body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/indent_next_no.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_permission('purchase.indent.manage');","","$pdo = db();","","function fmt_indent(int $y, int $seq): string { return sprintf('IND-%04d-%04d', $y, $seq); }","","$mode = strtolower($_GET['mode'] ?? 'peek');","$y = (int)date('Y');","header('Content-Type: application/json');","","if ($mode === 'peek') {","  $st = $pdo->prepare(\"SELECT seq FROM indent_sequences WHERE year=?\");","  $st->execute([$y]);","  $row = $st->fetch(PDO::FETCH_ASSOC);","  $seq = $row ? ((int)$row['seq'] + 1) : 1;","  echo json_encode(['ok'=>true,'number'=>fmt_indent($y,$seq),'reserved'=>false]); exit;","}","","if ($mode === 'allocate' && $_SERVER['REQUEST_METHOD']==='POST') {","  $pdo->beginTransaction();","  try {","    $s = $pdo->prepare(\"SELECT seq FROM indent_sequences WHERE year=? FOR UPDATE\");","    $s->execute([$y]);","    $row = $s->fetch(PDO::FETCH_ASSOC);","    $seq = $row ? (int)$row['seq'] : 0;","    if (!$row) $pdo->prepare(\"INSERT INTO indent_sequences(year,seq) VALUES(?,0)\")->execute([$y]);","    $seq++;","    $pdo->prepare(\"UPDATE indent_sequences SET seq=? WHERE year=?\")->execute([$seq,$y]);","    $no = fmt_indent($y,$seq);","    $pdo->commit();","    echo json_encode(['ok'=>true,'number'=>$no,'reserved'=>true]);","  } catch (Throwable $e) {","    $pdo->rollBack();","    http_response_code(500);","    echo json_encode(['ok'=>false,'error'=>'allocate_failed']);","  }","  exit;","}","","http_response_code(400);","echo json_encode(['ok'=>false,'error'=>'invalid']);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/items_options.php": ["<?php","/** PATH: /public_html/purchase/items_options.php \u2014 returns items list (by subcategory or all), schema-tolerant */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_permission('purchase.indent.manage');","","header('Content-Type: application/json; charset=utf-8');","","function col_exists(PDO $pdo, string $table, string $col): bool {","  $st = $pdo->prepare(\"SELECT 1 FROM information_schema.COLUMNS","                       WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME=? AND COLUMN_NAME=? LIMIT 1\");","  $st->execute([$table, $col]);","  return (bool)$st->fetchColumn();","}","","try {","  $pdo = db();","  $pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","  // 0 or missing => no subcategory filter (All Items)","  $subcatId = (int)($_GET['subcategory_id'] ?? 0);","","  // Active/status filter if present","  $activeWhere = '1=1';","  if (col_exists($pdo, 'items', 'status')) {","    $activeWhere = \"COALESCE(items.status,'active')='active'\";","  } elseif (col_exists($pdo, 'items', 'active')) {","    $activeWhere = \"COALESCE(items.active,1)=1\";","  }","","  $where = [$activeWhere];","  $params = [];","","  if ($subcatId > 0 && col_exists($pdo, 'items', 'subcategory_id')) {","    $where[] = 'items.subcategory_id = ?';","    $params[] = $subcatId;","  }","","  $codeCol = col_exists($pdo, 'items', 'code') ? 'items.code' : \"''\";","  $nameCol = col_exists($pdo, 'items', 'name') ? 'items.name' : \"''\";","  $label   = \"CONCAT(COALESCE($codeCol,''), CASE WHEN COALESCE($codeCol,'')<>'' AND COALESCE($nameCol,'')<>'' THEN ' \u2014 ' ELSE '' END, COALESCE($nameCol,''))\";","","  $orderParts = [];","  if (col_exists($pdo,'items','code')) $orderParts[] = 'items.code';","  if (col_exists($pdo,'items','name')) $orderParts[] = 'items.name';","  if (!$orderParts) $orderParts[] = 'items.id';","  $order = implode(', ', $orderParts);","","  $sql = \"SELECT items.id, $label AS label","          FROM items","          WHERE \".implode(' AND ', $where).\"","          ORDER BY $order","          LIMIT 1000\";","  $st = $pdo->prepare($sql);","  $st->execute($params);","  $items = $st->fetchAll(PDO::FETCH_ASSOC);","","  echo json_encode(['ok'=>true,'items'=>$items]);","} catch (Throwable $e) {","  http_response_code(500);","  echo json_encode(['ok'=>false,'error'=>'server_error']);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/po_attach_delete.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","","require_login();","require_permission('purchase.po.manage');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","// Figure path col for unlink (optional)","function col_exists(PDO $pdo, string $table, string $col): bool {","  $sql = \"SELECT 1 FROM information_schema.COLUMNS","          WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = ? AND COLUMN_NAME = ? LIMIT 1\";","  $st = $pdo->prepare($sql); $st->execute([$table, $col]);","  return (bool)$st->fetchColumn();","}","function first_existing(PDO $pdo, string $table, array $candidates): string {","  foreach ($candidates as $c) if ($c && col_exists($pdo,$table,$c)) return $c;","  return '';","}","$pathCol  = first_existing($pdo,'attachments', ['path','file_path','filepath','url']);","","$select = \"SELECT \".($pathCol ? \"a.`$pathCol` AS path\" : \"'' AS path\").\"","           FROM attachment_links al","           JOIN attachments a ON a.id=al.attachment_id","           WHERE al.entity_type='purchase_order' AND al.entity_id=? AND al.attachment_id=?\";","$st = $pdo->prepare($select);","$st->execute([$po_id, $att_id]);","$row = $st->fetch(PDO::FETCH_ASSOC);","if (!$row) { http_response_code(404); echo \"Attachment not found\"; exit; }","","$pdo->beginTransaction();","try {","  $pdo->prepare(\"DELETE FROM attachment_links WHERE attachment_id=? AND entity_type='purchase_order' AND entity_id=?\")","      ->execute([$att_id,$po_id]);","","  $cnt = $pdo->prepare(\"SELECT COUNT(*) FROM attachment_links WHERE attachment_id=?\");","  $cnt->execute([$att_id]);","  if ((int)$cnt->fetchColumn() === 0) {","    $pdo->prepare(\"DELETE FROM attachments WHERE id=?\")->execute([$att_id]);","    if (!empty($row['path'])) {","      $abs = __DIR__.'/..'.($row['path']);","      if (is_file($abs)) @unlink($abs);","    }","  }","  $pdo->commit();","} catch (Throwable $e) {","  $pdo->rollBack();","  http_response_code(500); echo \"Delete failed: \".$e->getMessage(); exit;","}","","$pdo->beginTransaction();","try {","  $pdo->prepare(\"DELETE FROM attachment_links WHERE attachment_id=? AND entity_type='purchase_order' AND entity_id=?\")->execute([$att_id,$po_id]);","","  $cnt = $pdo->prepare(\"SELECT COUNT(*) FROM attachment_links WHERE attachment_id=?\");","  $cnt->execute([$att_id]);","  if ((int)$cnt->fetchColumn() === 0) {","    $pdo->prepare(\"DELETE FROM attachments WHERE id=?\")->execute([$att_id]);","    if (!empty($row['path'])) {","      $abs = __DIR__.'/..'.($row['path']);","      if (is_file($abs)) @unlink($abs);","    }","  }","  $pdo->commit();","} catch (Throwable $e) {","  $pdo->rollBack();","  http_response_code(500); echo \"Delete failed: \".$e->getMessage(); exit;","}","","header('Location: /purchase/po_form.php?id='.$po_id);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/inquiry_indent_picker.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","","header('Content-Type: application/json; charset=utf-8');","","try {","  require_login();","  $pdo = db();","  $pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","  $q = trim($_GET['q'] ?? '');","","  // Only raised/approved, and NOT already referenced in inquiry_items","  $where = \"WHERE i.status IN ('raised','approved')","            AND NOT EXISTS (","              SELECT 1 FROM inquiry_items qii","              WHERE qii.indent_id = i.id","            )\";","  $args = [];","","  if ($q !== '') {","    $where .= \" AND i.indent_no LIKE CONCAT('%', ?, '%')\";","    $args[] = $q;","  }","","  $sql = \"SELECT i.id, i.indent_no, i.status, p.name AS project_name","          FROM indents i","          LEFT JOIN projects p ON p.id=i.project_id","          $where","          ORDER BY i.id DESC","          LIMIT 50\";","  $st = $pdo->prepare($sql);","  $st->execute($args);","  $rows = $st->fetchAll(PDO::FETCH_ASSOC);","","  echo json_encode($rows, JSON_UNESCAPED_UNICODE);","} catch (Throwable $e) {","  http_response_code(500);","  echo json_encode(['error' => $e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/po_from_rfq.php": ["<?php","declare(strict_types=1);","/** PATH: /purchase/po_from_rfq.php */","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","require_once __DIR__.'/po_seq.php';","","require_login();","require_permission('purchase.po.manage');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","/** ===================== Helpers ===================== */","function table_exists(PDO $pdo, string $table): bool {","  $st = $pdo->prepare(\"SELECT 1 FROM information_schema.TABLES WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = ? LIMIT 1\");","  $st->execute([$table]);","  return (bool)$st->fetchColumn();","}","function uom_id_by_code(PDO $pdo, string $code): ?int {","  $st = $pdo->prepare(\"SELECT id FROM uom WHERE UPPER(code)=UPPER(?) LIMIT 1\");","  $st->execute([$code]);","  $id = $st->fetchColumn();","  return $id !== false ? (int)$id : null;","}","function safe_uom_id(PDO $pdo, ?int $fromRfqLine, ?int $fromItem): int {","  if (!empty($fromRfqLine)) return (int)$fromRfqLine;","  if (!empty($fromItem))    return (int)$fromItem;","  $nos = uom_id_by_code($pdo, 'NOS');","  if ($nos) return $nos;","  $any = (int)$pdo->query(\"SELECT id FROM uom ORDER BY id LIMIT 1\")->fetchColumn();","  if ($any > 0) return $any;","  throw new RuntimeException(\"No UOM available for fallback\");","}","","/** ===================== Inputs ===================== */","$quote_id    = (int)($_GET['quote_id'] ?? 0);         // Path A (preferred)","$rfq_id_in   = (int)($_GET['rfq_id'] ?? 0);           // Path B (fallback)","$supplier_in = (int)($_GET['supplier_id'] ?? 0);","","$has_rfq_quotes = table_exists($pdo,'rfq_quotes') && table_exists($pdo,'rfq_quote_lines');","","if ($quote_id<=0 && ($rfq_id_in<=0 || $supplier_in<=0)) {","  http_response_code(400);","  echo \"Provide ?quote_id=\u2026 OR (fallback) ?rfq_id=\u2026&supplier_id=\u2026\";","  exit;","}","","/** ===================== Common header fields ===================== */","$po_no        = next_po_no($pdo);","$po_date      = date('Y-m-d');","$currency     = 'INR';","$gst_inclusive= 1;","","/** ===================== Path A: from a specific RFQ quote ===================== */","if ($quote_id > 0 && $has_rfq_quotes) {","  try {","    $pdo->beginTransaction();","","    // Header info from quote -> rfq -> recipient (supplier)","    $hdr = $pdo->prepare(\"","      SELECT q.id AS quote_id, r.id AS rfq_id, r.project_id, r.inquiry_id, rr.supplier_id","      FROM rfq_quotes q","      JOIN rfqs r            ON r.id = q.rfq_id","      LEFT JOIN rfq_recipients rr ON rr.id = q.recipient_id","      WHERE q.id = ?","      LIMIT 1","    \");","    $hdr->execute([$quote_id]);","    $H = $hdr->fetch(PDO::FETCH_ASSOC);","    if (!$H) throw new RuntimeException(\"Quote not found\");","    $supplier_id = (int)($H['supplier_id'] ?? 0);","    if ($supplier_id<=0) throw new RuntimeException(\"Quote has no linked supplier\");","","    // Optional project/location from inquiry","    $project_id  = (int)($H['project_id'] ?? 0) ?: null;","    $location_id = null;","    if (!empty($H['inquiry_id'])) {","      $inq = $pdo->prepare(\"SELECT project_id, location_id FROM inquiries WHERE id=?\");","      $inq->execute([(int)$H['inquiry_id']]);","      if ($tmp=$inq->fetch(PDO::FETCH_ASSOC)) {","        $project_id  = $project_id ?: (int)($tmp['project_id'] ?? 0) ?: null;","        $location_id = (int)($tmp['location_id'] ?? 0) ?: null;","      }","    }","","    // Create PO header (totals patched after line loop)","    $pdo->prepare(\"INSERT INTO purchase_orders","        (po_no, inquiry_id, supplier_id, project_id, location_id, po_date, currency, gst_inclusive,","         total_before_tax, total_tax, total_after_tax, status, created_by)","      VALUES (?,?,?,?,?,?,?,?,0,0,0,'draft',?)\")","      ->execute([$po_no, (int)($H['inquiry_id'] ?? 0) ?: null, $supplier_id, $project_id, $location_id,","                 $po_date, $currency, $gst_inclusive, current_user_id()]);","    $po_id = (int)$pdo->lastInsertId();","","    // Quote lines + RFQ lines + items (to resolve UOM and item)","    $ql = $pdo->prepare(\"","      SELECT ","        ql.id AS ql_id, ql.rfq_line_id, ql.qty, ql.weight_kg, ql.rate, ql.rate_basis, ql.tax_pct, ql.delivery_days,","        rl.item_id, rl.qty_uom_id,","        it.uom_id AS item_uom_id","      FROM rfq_quote_lines ql","      JOIN rfq_lines rl ON rl.id = ql.rfq_line_id","      LEFT JOIN items it ON it.id = rl.item_id","      WHERE ql.quote_id = ?","      ORDER BY ql.id","    \");","    $ql->execute([$quote_id]);","    $lines = $ql->fetchAll(PDO::FETCH_ASSOC);","    if (!$lines) throw new RuntimeException(\"No quote lines to import\");","","    $ins = $pdo->prepare(\"INSERT INTO purchase_order_items","      (po_id, inquiry_item_id, quote_id, item_id, uom_id, qty, unit_price, discount_percent, tax_percent,","       line_total_before_tax, line_tax, line_total_after_tax, delivery_days, remarks)","       VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\");","","    $tot_bt=0.0; $tot_tax=0.0; $tot_at=0.0;","","    foreach ($lines as $r) {","      // qty (fallback to rfq qty; if null, treat as 0)","      $qty = $r['qty'] !== null ? (float)$r['qty'] : 0.0;","","      // unit price: if PER_KG, smear to per-unit for storage in unit_price","      $rate  = (float)$r['rate'];","      $basis = (string)($r['rate_basis'] ?? 'PER_QTY');","      $kg    = $r['weight_kg'] !== null ? (float)$r['weight_kg'] : 0.0;","      $unit_price = ($basis === 'PER_KG')","        ? (($qty>0.0) ? ($rate * $kg / max($qty, 1e-9)) : $rate)","        : $rate;","","      $taxp = $r['tax_pct']!==null ? (float)$r['tax_pct'] : 0.0;","","      // --- Harden UOM ---","      $uom_id = safe_uom_id(","        $pdo,","        isset($r['qty_uom_id']) ? (int)$r['qty_uom_id'] : null,               // from rfq_lines","        isset($r['item_uom_id'])? (int)$r['item_uom_id'] : null               // from items","      );","","      // totals","      $gross = $qty * $unit_price;","      $bt    = $gross;            // no line-level discount in RFQ -> set 0","      $tax   = $bt * ($taxp/100);","      $at    = $bt + $tax;","","      $tot_bt += $bt; $tot_tax += $tax; $tot_at += $at;","","      $ins->execute([","        $po_id,","        null,                                   // inquiry_item_id not used in pure RFQ path","        $quote_id,","        (int)($r['item_id'] ?? 0) ?: null,","        $uom_id,                                // << guaranteed NOT NULL now","        $qty,","        $unit_price,","        0.0,                                    // discount_percent","        $taxp,","        round($bt,2),","        round($tax,2),","        round($at,2),","        !empty($r['delivery_days']) ? (int)$r['delivery_days'] : null,","        null","      ]);","    }","","    $pdo->prepare(\"UPDATE purchase_orders","                     SET total_before_tax=?, total_tax=?, total_after_tax=?","                   WHERE id=?\")","        ->execute([round($tot_bt,2), round($tot_tax,2), round($tot_at,2), $po_id]);","","    $pdo->commit();","    header('Location: /purchase/po_form.php?id='.$po_id);","    exit;","","  } catch (Throwable $e) {","    if ($pdo->inTransaction()) $pdo->rollBack();","    http_response_code(500);","    echo \"PO create failed: \".$e->getMessage();","    exit;","  }","}","","/** ===================== Path B: fallback via Inquiry locked selections ===================== */","/** This mirrors po_from_selection.php with the same UOM hardening */","try {","  // RFQ -> Inquiry","  $R = $pdo->prepare(\"SELECT id, inquiry_id, project_id FROM rfqs WHERE id=? LIMIT 1\");","  $R->execute([$rfq_id_in]);","  $rfq = $R->fetch(PDO::FETCH_ASSOC);","  if (!$rfq) { http_response_code(404); echo \"RFQ not found\"; exit; }","  if ((int)$rfq['inquiry_id']<=0) { http_response_code(400); echo \"RFQ not linked to an inquiry\"; exit; }","","  $inq = $pdo->prepare(\"SELECT id, project_id, location_id FROM inquiries WHERE id=?\");","  $inq->execute([(int)$rfq['inquiry_id']]);","  $I = $inq->fetch(PDO::FETCH_ASSOC);","  if (!$I) { http_response_code(404); echo \"Inquiry not found\"; exit; }","","  // Locked selections for this supplier","  $sel=$pdo->prepare(\"","    SELECT s.inquiry_item_id, s.quote_id, s.unit_price, s.discount_percent, s.tax_percent, s.delivery_days","    FROM inquiry_quote_selections s","    JOIN inquiry_quote_items ql ON ql.quote_id=s.quote_id AND ql.inquiry_item_id=s.inquiry_item_id","    JOIN inquiry_items ii       ON ii.id=s.inquiry_item_id","    WHERE s.inquiry_id=? AND s.supplier_id=?","    GROUP BY s.inquiry_item_id, s.quote_id, s.unit_price, s.discount_percent, s.tax_percent, s.delivery_days","  \");","  $sel->execute([(int)$rfq['inquiry_id'], $supplier_in]);","  $rows=$sel->fetchAll(PDO::FETCH_ASSOC);","  if (!$rows){ http_response_code(400); echo \"No locked lines for this supplier on the linked inquiry.\"; exit; }","","  $ii=$pdo->prepare(\"","    SELECT ii.id, ii.item_id, ii.uom_id AS inquiry_uom_id, ii.qty,","           it.uom_id AS item_uom_id","    FROM inquiry_items ii","    JOIN items it ON it.id = ii.item_id","    WHERE ii.id=?","  \");","","  $pdo->beginTransaction();","","  $pdo->prepare(\"INSERT INTO purchase_orders","      (po_no, inquiry_id, supplier_id, project_id, location_id, po_date, currency, gst_inclusive,","       total_before_tax, total_tax, total_after_tax, status, created_by)","    VALUES (?,?,?,?,?,?,?,?,0,0,0,'draft',?)\")","    ->execute([$po_no, (int)$rfq['inquiry_id'], $supplier_in, (int)$I['project_id'], (int)($I['location_id']??0)?:null,","               $po_date, $currency, $gst_inclusive, current_user_id()]);","  $po_id = (int)$pdo->lastInsertId();","","  $ins = $pdo->prepare(\"INSERT INTO purchase_order_items","    (po_id, inquiry_item_id, quote_id, item_id, uom_id, qty, unit_price, discount_percent, tax_percent,","     line_total_before_tax, line_tax, line_total_after_tax, delivery_days, remarks)","    VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\");","","  $tot_bt=0.0; $tot_tax=0.0; $tot_at=0.0;","","  foreach ($rows as $r) {","    $ii->execute([(int)$r['inquiry_item_id']]);","    $base = $ii->fetch(PDO::FETCH_ASSOC);","    if (!$base) continue;","","    $qty   = (float)$base['qty'];","    $unit  = (float)$r['unit_price'];","    $disc  = (float)$r['discount_percent'];","    $taxp  = (float)$r['tax_percent'];","","    $gross = $qty * $unit;","    $bt    = $gross * (1 - $disc/100.0);","    $tax   = $bt * ($taxp/100.0);","    $at    = $bt + $tax;","","    $tot_bt += $bt; $tot_tax += $tax; $tot_at += $at;","","    // Harden UOM like Path A","    $uom_id = safe_uom_id(","      $pdo,","      isset($base['inquiry_uom_id']) ? (int)$base['inquiry_uom_id'] : null,","      isset($base['item_uom_id'])    ? (int)$base['item_uom_id']    : null","    );","","    $ins->execute([","      $po_id,","      (int)$r['inquiry_item_id'],","      (int)$r['quote_id'],","      (int)$base['item_id'],","      $uom_id,                       // << guaranteed NOT NULL now","      $qty,","      $unit,","      $disc,","      $taxp,","      round($bt,2),","      round($tax,2),","      round($at,2),","      !empty($r['delivery_days']) ? (int)$r['delivery_days'] : null,","      null","    ]);","  }","","  $pdo->prepare(\"UPDATE purchase_orders","                  SET total_before_tax=?, total_tax=?, total_after_tax=?","                WHERE id=?\")","      ->execute([round($tot_bt,2), round($tot_tax,2), round($tot_at,2), $po_id]);","","  $pdo->commit();","  header('Location: /purchase/po_form.php?id='.$po_id);","  exit;","","} catch (Throwable $e) {","  if ($pdo->inTransaction()) $pdo->rollBack();","  http_response_code(500);","  echo \"PO create failed: \".$e->getMessage();","  exit;","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/quotes_list.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","","require_login();","require_permission('purchase.quote.view');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$q = trim($_GET['q'] ?? '');","$where = \"WHERE 1=1\";","$args = [];","","if ($q !== '') {","  $where .= \" AND (iq.quote_no LIKE CONCAT('%', ?, '%'))\";","  $args[] = $q;","}","","$sql = \"SELECT iq.id, iq.quote_no, iq.quote_date, iq.currency, iq.status,","               i.inquiry_no, p.name AS supplier_name, iq.total_after_tax","        FROM inquiry_quotes iq","        JOIN inquiries i ON i.id = iq.inquiry_id","        LEFT JOIN parties p ON p.id = iq.supplier_id","        $where","        ORDER BY iq.id DESC","        LIMIT 200\";","","$st = $pdo->prepare($sql);","$st->execute($args);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","include __DIR__.'/../ui/layout_start.php';","?>","","<!-- Page header -->","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 mb-0\">Quotes</h1>","  <div class=\"d-flex gap-2\">","    <a class=\"btn btn-primary\" href=\"/purchase/quotes_form.php\">New Quote</a>","    <a class=\"btn btn-outline-primary\" href=\"/purchase/quotes_compare.php\">Quotation Compare</a>","  </div>","</div>","","<!-- Filters -->","<div class=\"card shadow-sm mb-3\">","  <div class=\"card-body py-2\">","    <form class=\"row g-2 align-items-center\" method=\"get\" action=\"\">","      <div class=\"col-12 col-md-6\">","        <div class=\"input-group\">","          <span class=\"input-group-text\"><i class=\"bi bi-search\"></i></span>","          <input class=\"form-control\" name=\"q\" value=\"<?= htmlspecialchars($q) ?>\" placeholder=\"Search by Quote No\">","        </div>","      </div>","      <div class=\"col-12 col-md-3\">","        <button class=\"btn btn-outline-secondary w-100\"><i class=\"bi bi-funnel me-1\"></i> Search</button>","      </div>","      <div class=\"col-12 col-md-3 text-md-end\">","        <?php if ($q !== ''): ?>","          <a class=\"btn btn-light\" href=\"<?= strtok($_SERVER['REQUEST_URI'], '?') ?>\"><i class=\"bi bi-x-circle me-1\"></i> Reset</a>","        <?php endif; ?>","      </div>","    </form>","  </div>","</div>","","<!-- Results table -->","<div class=\"card shadow-sm\">","  <div class=\"card-body p-0\">","    <div class=\"table-responsive\">","      <table class=\"table table-striped table-hover align-middle mb-0\">","        <thead class=\"table-light\">","          <tr>","            <th>Quote No</th>","            <th>Date</th>","            <th>Inquiry</th>","            <th>Supplier</th>","            <th class=\"text-end\">Amount</th>","            <th>Status</th>","            <th class=\"text-end\" style=\"width:120px;\">Actions</th>","          </tr>","        </thead>","        <tbody>","          <?php foreach ($rows as $r): ?>","            <tr>","              <td class=\"fw-semibold\"><?= htmlspecialchars($r['quote_no']) ?></td>","              <td><?= htmlspecialchars($r['quote_date']) ?></td>","              <td><span class=\"text-muted\"><?= htmlspecialchars($r['inquiry_no']) ?></span></td>","              <td><?= htmlspecialchars($r['supplier_name'] ?? '') ?></td>","              <td class=\"text-end\"><?= number_format((float)($r['total_after_tax'] ?? 0), 2) ?></td>","              <td>","                <?php","                  $cls = 'bg-secondary-subtle text-secondary-emphasis border';","                  if ($r['status'] === 'submitted') $cls = 'bg-success-subtle text-success-emphasis border';","                  elseif ($r['status'] === 'revised') $cls = 'bg-warning-subtle text-warning-emphasis border';","                ?>","                <span class=\"badge <?= $cls ?>\"><?= htmlspecialchars($r['status']) ?></span>","              </td>","              <td class=\"text-end\">","                <div class=\"btn-group btn-group-sm\" role=\"group\">","                  <a class=\"btn btn-light\" href=\"/purchase/quotes_form.php?id=<?= (int)$r['id'] ?>\" title=\"Open\">","                    <i class=\"bi bi-box-arrow-up-right\"></i>","                  </a>","                </div>","              </td>","            </tr>","          <?php endforeach; ?>","          <?php if (!$rows): ?>","            <tr>","              <td colspan=\"7\" class=\"p-0\">","                <div class=\"text-center text-muted py-4\">No quotes found.</div>","              </td>","            </tr>","          <?php endif; ?>","        </tbody>","      </table>","    </div>","  </div>","</div>","","<?php include __DIR__.'/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/rfq_build.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/numbering.php';","","$pdo = db();","$id = (int)($_GET['id'] ?? 0);","","/* Load RFQ */","$sth = $pdo->prepare(\"SELECT * FROM rfqs WHERE id=? LIMIT 1\");","$sth->execute([$id]);","$rfq = $sth->fetch();","if (!$rfq) { http_response_code(404); exit('RFQ not found'); }","","/* Lines */","$lst = $pdo->prepare(\"SELECT * FROM rfq_lines WHERE rfq_id=? ORDER BY id\");","$lst->execute([$id]);","$lines = $lst->fetchAll();","","function h(?string $s): string { return htmlspecialchars((string)$s, ENT_QUOTES, 'UTF-8'); }","function fmtnum($v, int $p=3): string { if ($v===null || $v==='') return '\u2014'; return number_format((float)$v, $p); }","","$total_qty = 0.0; $total_kg = 0.0;","foreach ($lines as $r) {","  if ($r['qty'] !== null)       $total_qty += (float)$r['qty'];","  if ($r['weight_kg'] !== null) $total_kg  += (float)$r['weight_kg'];","}","","include __DIR__.'/../ui/layout_start.php'; ?>","<div class=\"container py-4\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <div>","      <h3 class=\"mb-1\">RFQ: <?= h($rfq['rfq_no'] ?? ('RFQ-'.$rfq['id'])) ?></h3>","      <div class=\"text-muted small\">","        <?php if (!empty($rfq['project_id'])): ?>Project ID: <?= h((string)$rfq['project_id']) ?> \u2022 <?php endif; ?>","        Status: <?= h((string)($rfq['status'] ?? 'draft')) ?>","      </div>","    </div>","    <div class=\"d-flex gap-2\">","      <a class=\"btn btn-outline-secondary\" href=\"inquiry_build.php?id=<?= (int)($_GET['from_inq'] ?? 0) ?>\">\u2190 Back</a>","      <a class=\"btn btn-primary disabled\" title=\"Stub \u2014 implement next\">Convert to PO</a>","    </div>","  </div>","","  <div class=\"card\">","    <div class=\"card-header d-flex justify-content-between align-items-center\">","      <strong>Lines</strong>","      <div class=\"small text-muted\">","        Total Qty: <?= fmtnum($total_qty, 3) ?> &nbsp;|&nbsp; Total Weight: <?= fmtnum($total_kg, 3) ?> kg","      </div>","    </div>","    <div class=\"card-body p-0\">","      <div class=\"table-responsive\">","        <table class=\"table table-bordered table-sm align-middle mb-0\">","          <thead class=\"table-light\">","            <tr>","              <th style=\"width:60%\">Item / Description</th>","              <th class=\"text-end\" style=\"width:12%\">Qty</th>","              <th class=\"text-center\" style=\"width:10%\">UOM</th>","              <th class=\"text-end\" style=\"width:18%\">Weight (kg)</th>","            </tr>","          </thead>","          <tbody>","            <?php if (!$lines): ?>","              <tr><td colspan=\"4\" class=\"text-muted\">No lines.</td></tr>","            <?php else: foreach ($lines as $r): ?>","              <tr>","                <td><?= h($r['description'] ?: ('Item #'.(int)$r['item_id'])) ?></td>","                <td class=\"text-end\"><?= fmtnum($r['qty'], 3) ?></td>","                <td class=\"text-center\"><?= isset($r['qty_uom_id']) && $r['qty_uom_id'] ? h((string)$r['qty_uom_id']) : 'NOS' ?></td>","                <td class=\"text-end\"><?= fmtnum($r['weight_kg'], 3) ?></td>","              </tr>","            <?php endforeach; endif; ?>","          </tbody>","        </table>","      </div>","    </div>","  </div>","</div>","<?php include __DIR__.'/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/inquiry_quote_seed.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","","header('Content-Type: application/json; charset=utf-8');","","try {","  require_login();","","  $pdo = db();","  $pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","  $inquiry_id = (int)($_GET['inquiry_id'] ?? 0);","  $supplier_id = (int)($_GET['supplier_id'] ?? 0);","  if ($inquiry_id<=0 || $supplier_id<=0) {","    http_response_code(400);","    echo json_encode(['error'=>'inquiry_id and supplier_id required']); exit;","  }","","  // Pull inquiry lines","  $sql = \"SELECT ii.id AS inquiry_item_id, ii.item_id, ii.qty, ii.uom_id, ii.needed_by, ii.line_notes,","                 it.material_code, it.name AS item_name, u.code AS uom_code","          FROM inquiry_items ii","          JOIN items it ON it.id=ii.item_id","          JOIN uom u ON u.id=ii.uom_id","          WHERE ii.inquiry_id=?\";","  $st = $pdo->prepare($sql);","  $st->execute([$inquiry_id]);","  $rows = $st->fetchAll(PDO::FETCH_ASSOC);","","  echo json_encode($rows, JSON_UNESCAPED_UNICODE);","} catch (Throwable $e) {","  http_response_code(500);","  echo json_encode(['error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/bom_items_options.php": ["<?php","/** PATH: /public_html/purchase/bom_items_options.php"," * PURPOSE: Provide Raw-Material family items for BOM (JSON)"," * RESPONSE: { ok: bool, items: [{id,label}] }"," */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","","require_login();","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","header('Content-Type: application/json; charset=utf-8');","","function out($ok, $items = []) {","  echo json_encode(['ok'=>$ok, 'items'=>$items], JSON_UNESCAPED_UNICODE);","  exit;","}","","try {","  // helpers","  $tbl = $pdo->prepare(\"SELECT 1 FROM information_schema.TABLES WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME=? LIMIT 1\");","  $col = $pdo->prepare(\"SELECT 1 FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME=? AND COLUMN_NAME=? LIMIT 1\");","  $t = function(string $name) use($tbl){ $tbl->execute([$name]); return (bool)$tbl->fetchColumn(); };","  $c = function(string $tname, string $cn) use($col){ $col->execute([$tname,$cn]); return (bool)$col->fetchColumn(); };","","  if (!$t('items')) out(true, []); // nothing to list","","  $subcat_id = isset($_GET['subcategory_id']) ? (int)$_GET['subcategory_id'] : 0;","","  $hasMC = $t('material_categories');","  $hasMS = $t('material_subcategories');","","  // Active filter: handle various \"status\" shapes","  $hasItemStatus = $c('items','status');","  $whereActive = $hasItemStatus ? \"(i.status IS NULL OR i.status IN ('active',1))\" : \"1=1\";","","  if ($hasMC) {","    // Base joins","    $base = \"","      FROM items i","      LEFT JOIN material_categories mc ON mc.id = i.category_id","    \";","    $joinSub = $hasMS ? \"LEFT JOIN material_subcategories ms ON ms.id = i.subcategory_id\" : \"\";","","    // Raw family detection:","    // - Category code/name: RM / 'raw material'","    // - Also tolerate catalogs that park plates/sections under PLATE/SECTION cats","    $rawCat = \"(UPPER(mc.code)='RM' OR LOWER(mc.name) LIKE '%raw material%')\";","    $rawPlus = \" OR (UPPER(mc.code) IN ('PLATE','SECTION') OR LOWER(mc.name) REGEXP 'plate|section') \";","    $rawFilter = \"($rawCat $rawPlus)\";","","    $params = [];","    $subFilter = \"\";","    if ($subcat_id > 0 && $hasMS) {","      $subFilter = \" AND i.subcategory_id = ? \";","      $params[] = $subcat_id;","    } // subcat_id==0 means \"All Raw\" \u2192 no extra filter","","    $sql = \"","      SELECT i.id, CONCAT(i.material_code, ' \u2014 ', i.name) AS label","      $base","      $joinSub","      WHERE $whereActive","        AND $rawFilter","        $subFilter","      ORDER BY i.material_code, i.name","      LIMIT 2000","    \";","    $st = $pdo->prepare($sql);","    $st->execute($params);","    $items = $st->fetchAll(PDO::FETCH_ASSOC);","    out(true, $items);","  }","","  // Fallback: no category tables \u2192 dump all items","  $sql = \"SELECT id, CONCAT(material_code,' \u2014 ',name) AS label FROM items WHERE $whereActive ORDER BY material_code, name LIMIT 2000\";","  $items = $pdo->query($sql)->fetchAll(PDO::FETCH_ASSOC);","  out(true, $items);","","} catch (Throwable $e) {","  out(false, []);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/indents_form.php": ["<?php","/** PATH: /public_html/purchase/indents_form.php \u2014 Indent Form with Subcategory + Item dropdowns (robust fallbacks) */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_permission('purchase.indent.manage');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","/* numbering helpers (year+seq) */","function fmt_indent(int $y, int $seq): string { return sprintf('IND-%04d-%04d', $y, $seq); }","function allocate_indent_no(PDO $pdo): string {","  $y = (int)date('Y');","  $pdo->beginTransaction();","  try {","    $s = $pdo->prepare(\"SELECT seq FROM indent_sequences WHERE year=? FOR UPDATE\");","    $s->execute([$y]);","    $row = $s->fetch(PDO::FETCH_ASSOC);","    $seq = $row ? (int)$row['seq'] : 0;","    if (!$row) $pdo->prepare(\"INSERT INTO indent_sequences(year,seq) VALUES(?,0)\")->execute([$y]);","    $seq++;","    $pdo->prepare(\"UPDATE indent_sequences SET seq=? WHERE year=?\")->execute([$seq,$y]);","    $no = fmt_indent($y,$seq);","    $pdo->commit();","    return $no;","  } catch (Throwable $e) { $pdo->rollBack(); throw $e; }","}","","/* dropdowns */","$projects  = $pdo->query(\"SELECT id, CONCAT(code, ' \u2014 ', name) AS label FROM projects ORDER BY id DESC\")->fetchAll(PDO::FETCH_ASSOC);","$uoms      = $pdo->query(\"SELECT id, CONCAT(code, ' \u2014 ', name) AS label FROM uom WHERE status='active' ORDER BY code\")->fetchAll(PDO::FETCH_ASSOC);","$locations = $pdo->query(\"SELECT id, CONCAT(code, ' \u2014 ', name) AS label FROM locations WHERE active=1 ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","","/* material subcategories \u2014 robust loader with fallback to \"All Items\" */","$subcats = [];","try {","  $hasMS = (bool)$pdo->query(\"SELECT 1 FROM information_schema.TABLES WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME='material_subcategories'\")->fetchColumn();","  $hasMC = (bool)$pdo->query(\"SELECT 1 FROM information_schema.TABLES WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME='material_categories'\")->fetchColumn();","  if ($hasMS) {","    $colSCstatus = (bool)$pdo->query(\"SELECT 1 FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME='material_subcategories' AND COLUMN_NAME='status'\")->fetchColumn();","    $colSCactive = (bool)$pdo->query(\"SELECT 1 FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME='material_subcategories' AND COLUMN_NAME='active'\")->fetchColumn();","    $scActiveWhere = '1=1';","    if ($colSCstatus)      $scActiveWhere = \"COALESCE(s.status,'active')='active'\";","    elseif ($colSCactive)  $scActiveWhere = \"COALESCE(s.active,1)=1\";","","    if ($hasMC) {","      $sql = \"SELECT s.id, CONCAT(COALESCE(c.code,''),'/',COALESCE(s.code,''),' \u2014 ',COALESCE(s.name,'')) AS label","              FROM material_subcategories s","              JOIN material_categories c ON c.id = s.category_id","              WHERE $scActiveWhere","              ORDER BY c.code, s.code, s.name\";","    } else {","      $sql = \"SELECT s.id, CONCAT(COALESCE(s.code,''),' \u2014 ',COALESCE(s.name,'')) AS label","              FROM material_subcategories s","              WHERE $scActiveWhere","              ORDER BY s.code, s.name\";","    }","    $subcats = $pdo->query($sql)->fetchAll(PDO::FETCH_ASSOC);","  }","} catch (Throwable $e) { /* ignore and fallback below */ }","","if (!$subcats) {","  // FINAL FALLBACK: single option to load ALL items","  $subcats = [['id'=>0, 'label'=>'All Items']];","}","","/* load model */","$id = (int)($_GET['id'] ?? 0);","$indent = ['indent_no'=>'','project_id'=>null,'remarks'=>'','priority'=>'normal','delivery_location_id'=>null,'status'=>'draft'];","$lines = [];","","if ($id) {","  $h = $pdo->prepare(\"SELECT * FROM indents WHERE id=?\");","  $h->execute([$id]);","  if ($row = $h->fetch(PDO::FETCH_ASSOC)) $indent = $row;","","  // join items to know subcategory for preselect","  $d = $pdo->prepare(\"","    SELECT li.*,","           it.subcategory_id","    FROM indent_items li","    LEFT JOIN items it ON it.id = li.item_id","    WHERE li.indent_id=?","    ORDER BY li.sort_order, li.id","  \");","  $d->execute([$id]);","  $lines = $d->fetchAll(PDO::FETCH_ASSOC);","}","","/* handle submit */","$error = '';","$action = $_POST['action'] ?? null;","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  $general = isset($_POST['is_general']) && $_POST['is_general'] === '1';","  $projId  = $general ? null : ((int)($_POST['project_id'] ?? 0) ?: null);","","  $nextStatus = $_POST['status'] ?? ($indent['status'] ?? 'draft');","  if ($action === 'submit')   $nextStatus = 'raised';","  if ($action === 'approve')  $nextStatus = 'approved';","  if ($action === 'reject')   $nextStatus = 'draft';","  if (in_array($action, ['approve','reject'], true) && !user_has_permission('purchase.indent.approve')) {","    $error = 'You do not have permission to approve/reject.';","  }","","  $data = [","    'project_id'           => $projId,","    'remarks'              => trim($_POST['remarks'] ?? ''),","    'priority'             => in_array(($_POST['priority'] ?? 'normal'), ['low','normal','high'], true) ? $_POST['priority'] : 'normal',","    'delivery_location_id' => (int)($_POST['delivery_location_id'] ?? 0) ?: null,","    'status'               => $nextStatus,","  ];","","  $li_item = $_POST['li_item'] ?? [];","  $li_make = $_POST['li_make'] ?? [];","  $li_desc = $_POST['li_desc'] ?? [];","  $li_qty  = $_POST['li_qty']  ?? [];","  $li_uom  = $_POST['li_uom']  ?? [];","  $li_need = $_POST['li_need'] ?? [];","  $li_rem  = $_POST['li_rem']  ?? [];","","  if (!$error) {","    if ($id) {","      $stmt = $pdo->prepare(\"UPDATE indents SET project_id=:project_id, remarks=:remarks, priority=:priority,","              delivery_location_id=:delivery_location_id, status=:status WHERE id=:id\");","      $stmt->execute($data + ['id'=>$id]);","      $pdo->prepare(\"DELETE FROM indent_items WHERE indent_id=?\")->execute([$id]);","    } else {","      $indent_no = allocate_indent_no($pdo);","      $stmt = $pdo->prepare(\"INSERT INTO indents (indent_no,project_id,remarks,priority,delivery_location_id,status)","                             VALUES (?,?,?,?,?,?)\");","      $stmt->execute([$indent_no,$data['project_id'],$data['remarks'],$data['priority'],$data['delivery_location_id'],$data['status']]);","      $id = (int)$pdo->lastInsertId();","    }","","    $valid = 0;","    for ($i=0; $i<count($li_item); $i++) {","      $itemId = (int)($li_item[$i] ?? 0);","      $qty    = (float)($li_qty[$i]  ?? 0);","      if ($itemId > 0 && $qty > 0) {","        $valid++;","        $makeId = (int)($li_make[$i] ?? 0) ?: null;","        $pdo->prepare(\"INSERT INTO indent_items","                       (indent_id,item_id,make_id,description,qty,uom_id,needed_by,remarks,sort_order)","                       VALUES (?,?,?,?,?,?,?,?,?)\")","            ->execute([$id,$itemId,$makeId, trim($li_desc[$i] ?? ''), $qty, (int)($li_uom[$i] ?? 0) ?: null,","                       ($li_need[$i] ?: null), trim($li_rem[$i] ?? ''), $i+1]);","      }","    }","","    if ($valid === 0) {","      $error = 'Please add at least one line (item + qty).';","    } else {","      header(\"Location: indents_list.php\"); exit;","    }","  }","}","","/* peek number for new form */","$peek_no = '';","if (!$id) {","  $y = (int)date('Y');","  $s = $pdo->prepare(\"SELECT seq FROM indent_sequences WHERE year=?\");","  $s->execute([$y]);","  $row = $s->fetch(PDO::FETCH_ASSOC);","  $peek_no = fmt_indent($y, $row ? ((int)$row['seq']+1) : 1);","}","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container py-4\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h2 class=\"mb-0\"><?= $id ? \"Edit Indent\" : \"New Indent\" ?></h2>","    <a href=\"indents_list.php\" class=\"btn btn-outline-secondary\">Back</a>","  </div>","","  <?php if (!empty($error)): ?>","    <div class=\"alert alert-danger\"><?= htmlspecialchars($error) ?></div>","  <?php endif; ?>","","  <form method=\"post\" id=\"indentForm\" autocomplete=\"off\">","    <div class=\"row\">","      <div class=\"col-md-5 mb-3\">","        <label class=\"form-label\">Indent No</label>","        <div class=\"input-group\">","          <input type=\"text\" id=\"indent_no\" class=\"form-control\" value=\"<?= htmlspecialchars($id ? (string)$indent['indent_no'] : (string)$peek_no) ?>\" readonly>","        </div>","        <div class=\"form-text\">Number is allocated on save.</div>","      </div>","","      <div class=\"col-md-7 mb-3\">","        <label class=\"form-label\">Project (optional)</label>","        <div class=\"d-flex gap-2\">","          <select name=\"project_id\" id=\"project_id\" class=\"form-select\">","            <option value=\"\">\u2014 General Indent (no project) \u2014</option>","            <?php foreach ($projects as $pr): ?>","              <option value=\"<?= (int)$pr['id'] ?>\" <?= ((int)($indent['project_id'] ?? 0)===(int)$pr['id'])?'selected':'' ?>>","                <?= htmlspecialchars($pr['label']) ?>","              </option>","            <?php endforeach; ?>","          </select>","          <div class=\"form-check mt-2\">","            <input class=\"form-check-input\" type=\"checkbox\" id=\"is_general\" name=\"is_general\" value=\"1\" <?= empty($indent['project_id']) ? 'checked' : '' ?>>","            <label class=\"form-check-label\" for=\"is_general\">General</label>","          </div>","        </div>","      </div>","    </div>","","    <div class=\"row\">","      <div class=\"col-md-7 mb-3\">","        <label class=\"form-label\">Notes</label>","        <input type=\"text\" name=\"remarks\" class=\"form-control\" value=\"<?= htmlspecialchars((string)$indent['remarks']) ?>\">","      </div>","      <div class=\"col-md-2 mb-3\">","        <label class=\"form-label\">Priority</label>","        <select name=\"priority\" class=\"form-select\">","          <?php foreach (['low','normal','high'] as $p): ?>","            <option value=\"<?= $p ?>\" <?= ($indent['priority'] ?? 'normal')===$p?'selected':'' ?>><?= ucfirst($p) ?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"col-md-3 mb-3\">","        <label class=\"form-label\">Delivery To (Location)</label>","        <select name=\"delivery_location_id\" class=\"form-select\">","          <option value=\"\">\u2014 Select \u2014</option>","          <?php foreach ($locations as $loc): ?>","            <option value=\"<?= (int)$loc['id'] ?>\" <?= ((int)($indent['delivery_location_id'] ?? 0)===(int)$loc['id'])?'selected':'' ?>>","              <?= htmlspecialchars($loc['label']) ?>","            </option>","          <?php endforeach; ?>","        </select>","      </div>","    </div>","","    <h5 class=\"mt-3\">Items</h5>","    <div class=\"table-responsive\">","      <table class=\"table table-bordered align-middle\" id=\"linesTable\">","        <thead>","          <tr>","            <th style=\"width:20%;\">Subcategory</th>","            <th style=\"width:26%;\">Item</th>","            <th style=\"width:14%;\">Make (brand)</th>","            <th>Description</th>","            <th style=\"width:10%;\">Qty</th>","            <th style=\"width:12%;\">UOM</th>","            <th style=\"width:14%;\">Needed By</th>","            <th style=\"width:8%;\"></th>","          </tr>","        </thead>","        <tbody>","        <?php if ($lines): foreach ($lines as $ln): ?>","          <tr>","            <td>","              <select class=\"form-select li-subcat\">","                <?php foreach ($subcats as $sc): ?>","                  <option value=\"<?= (int)$sc['id'] ?>\" <?= ((int)($ln['subcategory_id'] ?? 0)===(int)$sc['id'])?'selected':'' ?>>","                    <?= htmlspecialchars($sc['label']) ?>","                  </option>","                <?php endforeach; ?>","              </select>","            </td>","            <td>","              <select class=\"form-select li-item\" name=\"li_item[]\">","                <?php if (!empty($ln['item_id'])): ?>","                  <option value=\"<?= (int)$ln['item_id'] ?>\" selected>Loading\u2026</option>","                <?php else: ?>","                  <option value=\"\">\u2014 Select \u2014</option>","                <?php endif; ?>","              </select>","              <div class=\"form-text small text-muted d-none li-item-hint\">Pick a subcategory (or All Items)</div>","            </td>","            <td>","              <select class=\"form-select li-make\" name=\"li_make[]\">","                <?php if (!empty($ln['make_id'])): ?>","                  <option value=\"<?= (int)$ln['make_id'] ?>\" selected>Selected</option>","                <?php else: ?><option value=\"\">\u2014</option><?php endif; ?>","              </select>","            </td>","            <td><input class=\"form-control\" name=\"li_desc[]\" value=\"<?= htmlspecialchars((string)$ln['description']) ?>\"></td>","            <td><input class=\"form-control\" name=\"li_qty[]\" type=\"number\" step=\"0.001\" min=\"0.001\" value=\"<?= htmlspecialchars((string)$ln['qty']) ?>\"></td>","            <td>","              <select class=\"form-select\" name=\"li_uom[]\">","                <option value=\"\">\u2014</option>","                <?php foreach ($uoms as $u): ?>","                  <option value=\"<?= (int)$u['id'] ?>\" <?= ((int)$ln['uom_id']===(int)$u['id'])?'selected':'' ?>><?= htmlspecialchars($u['label']) ?></option>","                <?php endforeach; ?>","              </select>","            </td>","            <td><input class=\"form-control\" name=\"li_need[]\" type=\"date\" value=\"<?= htmlspecialchars((string)$ln['needed_by']) ?>\"></td>","            <td class=\"text-center\"><button class=\"btn btn-sm btn-outline-danger\" type=\"button\" onclick=\"removeLine(this)\">\u2715</button></td>","          </tr>","        <?php endforeach; else: ?>","          <tr>","            <td>","              <select class=\"form-select li-subcat\">","                <?php foreach ($subcats as $sc): ?>","                  <option value=\"<?= (int)$sc['id'] ?>\"><?= htmlspecialchars($sc['label']) ?></option>","                <?php endforeach; ?>","              </select>","            </td>","            <td>","              <select class=\"form-select li-item\" name=\"li_item[]\">","                <option value=\"\">\u2014 Select \u2014</option>","              </select>","              <div class=\"form-text small text-muted d-none li-item-hint\">Pick a subcategory (or All Items)</div>","            </td>","            <td>","              <select class=\"form-select li-make\" name=\"li_make[]\"><option value=\"\">\u2014</option></select>","            </td>","            <td><input class=\"form-control\" name=\"li_desc[]\" value=\"\"></td>","            <td><input class=\"form-control\" name=\"li_qty[]\" type=\"number\" step=\"0.001\" min=\"0.001\" value=\"\"></td>","            <td>","              <select class=\"form-select\" name=\"li_uom[]\">","                <option value=\"\">\u2014</option>","                <?php foreach ($uoms as $u): ?>","                  <option value=\"<?= (int)$u['id'] ?>\"><?= htmlspecialchars($u['label']) ?></option>","                <?php endforeach; ?>","              </select>","            </td>","            <td><input class=\"form-control\" name=\"li_need[]\" type=\"date\" value=\"\"></td>","            <td class=\"text-center\"><button class=\"btn btn-sm btn-outline-danger\" type=\"button\" onclick=\"removeLine(this)\">\u2715</button></td>","          </tr>","        <?php endif; ?>","        </tbody>","      </table>","    </div>","    <button class=\"btn btn-outline-primary\" type=\"button\" onclick=\"addLine()\">+ Add Line</button>","","    <div class=\"d-flex flex-wrap gap-2 mt-4\">","      <button class=\"btn btn-success\" type=\"submit\" name=\"action\" value=\"save\">Save</button>","      <button class=\"btn btn-primary\" type=\"submit\" name=\"action\" value=\"submit\">Submit for Approval</button>","      <?php if (user_has_permission('purchase.indent.approve')): ?>","        <button class=\"btn btn-outline-success\" type=\"submit\" name=\"action\" value=\"approve\">Approve</button>","        <button class=\"btn btn-outline-danger\" type=\"submit\" name=\"action\" value=\"reject\">Reject</button>","      <?php endif; ?>","      <a href=\"indents_list.php\" class=\"btn btn-secondary\">Cancel</a>","    </div>","  </form>","</div>","","<style>","  .pos-rel { position: relative; }","</style>","","<script>","function removeLine(btn){ const tb=btn.closest('tbody'); if(tb.rows.length>1) btn.closest('tr').remove(); }","function addLine(){","  const tbody = document.querySelector('#linesTable tbody');","  const tr0   = tbody.rows[0];","  const tr    = tr0.cloneNode(true);","  // clear values","  tr.querySelectorAll('input').forEach(i=>{ i.value=''; });","  tr.querySelectorAll('select').forEach(s=>{","    if (s.classList.contains('li-item') || s.classList.contains('li-make')) {","      s.innerHTML = '<option value=\"\">\u2014</option>';","    } else {","      // keep first option (subcategory \"All Items\" or first subcat)","      if (s.classList.contains('li-subcat')) { /* leave selected as is to auto-load */ }","      else { s.selectedIndex = 0; }","    }","  });","  const hint = tr.querySelector('.li-item-hint'); if(hint) hint.classList.add('d-none');","  tbody.appendChild(tr);","  wireRow(tr, {prefetch:true});","}","","async function fetchJSON(url){","  const res = await fetch(url, {headers: {'Accept':'application/json'}});","  if(!res.ok) throw new Error('HTTP '+res.status);","  return await res.json();","}","","async function loadItemsForSubcat(tr, subcatId, selectedItemId){","  const itemSel = tr.querySelector('.li-item');","  const hint    = tr.querySelector('.li-item-hint');","  itemSel.innerHTML = '<option value=\"\">Loading\u2026</option>';","  try{","    const js = await fetchJSON('items_options.php?subcategory_id=' + encodeURIComponent(subcatId || '0'));","    itemSel.innerHTML = '<option value=\"\">\u2014 Select \u2014</option>';","    if (js && js.ok && Array.isArray(js.items) && js.items.length) {","      js.items.forEach(it=>{","        const op = document.createElement('option');","        op.value = it.id;","        op.textContent = it.label;","        if (selectedItemId && String(selectedItemId) === String(it.id)) op.selected = true;","        itemSel.appendChild(op);","      });","      if(hint) hint.classList.add('d-none');","    } else {","      if(hint){ hint.textContent = 'No items found'; hint.classList.remove('d-none'); }","    }","  } catch(e){","    itemSel.innerHTML = '<option value=\"\">\u2014 Select \u2014</option>';","    if(hint){ hint.textContent = 'Failed to load items'; hint.classList.remove('d-none'); }","  }","}","","async function loadMakesForItem(tr, itemId){","  const makeSel = tr.querySelector('.li-make');","  makeSel.innerHTML = '<option value=\"\">\u2014</option>';","  if(!itemId) return;","  try{","    const ms = await fetchJSON('item_makes.php?item_id=' + encodeURIComponent(itemId));","    if(ms.ok && Array.isArray(ms.makes)){","      ms.makes.forEach(m=>{","        const op=document.createElement('option'); op.value=m.id; op.textContent=m.name; makeSel.appendChild(op);","      });","    }","  }catch(e){}","}","","function wireRow(tr, opts={prefetch:true}){","  const subSel  = tr.querySelector('.li-subcat');","  const itemSel = tr.querySelector('.li-item');","","  subSel.addEventListener('change', ()=>{","    const sc = (subSel.value ?? '0');","    loadItemsForSubcat(tr, sc, null);","    tr.querySelector('.li-make').innerHTML = '<option value=\"\">\u2014</option>';","    itemSel.value = '';","  });","","  itemSel.addEventListener('change', ()=>{","    loadMakesForItem(tr, itemSel.value || '');","  });","","  // Prefetch: if subcategory has a value (including \"0\" for All Items), load immediately.","  if (opts.prefetch) {","    const sc = (subSel.value ?? '0');","    const selectedItem = itemSel.querySelector('option[selected]')?.value || itemSel.value || '';","    loadItemsForSubcat(tr, sc, selectedItem).then(()=> { if (selectedItem) loadMakesForItem(tr, selectedItem); });","  }","}","","// Wire existing rows","document.querySelectorAll('#linesTable tbody tr').forEach(tr=>wireRow(tr));","</script>","","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/remnant_list.php": ["<?php","/** PATH: /public_html/purchase/remnant_list.php"," * BUILD: 2025-10-03T09:30:37 IST (Fix: qualify columns to avoid ambiguous 'status')"," */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_login(); $pdo = db();","","$plate_id = (int)($_GET['plate_id'] ?? 0);","$item_id  = (int)($_GET['item_id']  ?? 0);","$min_t    = isset($_GET['min_t']) ? (float)$_GET['min_t'] : null;","$max_t    = isset($_GET['max_t']) ? (float)$_GET['max_t'] : null;","$heat     = trim((string)($_GET['heat'] ?? ''));","$hideDup  = isset($_GET['hide_dup']) ? (int)$_GET['hide_dup'] : 1;","","function h($s){ return htmlspecialchars((string)$s, ENT_QUOTES, 'UTF-8'); }","","echo \"<h2>Remnants</h2>\";","echo \"<form method='get'><input type='hidden' name='plate_id' value='\".(int)$plate_id.\"'>\";","echo \"Item ID: <input name='item_id' value='\".($item_id?:'').\"'> \";","echo \"Thk min: <input name='min_t' value='\".($min_t!==null?$min_t:'').\"'> \";","echo \"Thk max: <input name='max_t' value='\".($max_t!==null?$max_t:'').\"'> \";","echo \"Heat: <input name='heat' value='\".h($heat).\"'> \";","echo \"Hide duplicate internal lot no <input type='checkbox' name='hide_dup' value='1' \".($hideDup?'checked':'').\"> \";","echo \"<button type='submit'>Filter</button></form>\";","","$where = [\"s.status IN ('available','partial')\"];","$params = [];","if ($item_id>0) { $where[]=\"s.item_id=?\"; $params[]=$item_id; }","if ($min_t!==null) { $where[]=\"s.thickness_mm>=?\"; $params[]=$min_t; }","if ($max_t!==null) { $where[]=\"s.thickness_mm<=?\"; $params[]=$max_t; }","if ($heat!=='') { $where[]=\"(s.heat_no LIKE ?)\"; $params[]='%'.$heat.'%'; }","","$baseSql = \"SELECT s.* FROM stock_lots s\";","if ($hideDup) {","  // keep only latest row per internal_lot_no when duplicate internal numbers exist","  $baseSql .= \" LEFT JOIN stock_lots newer ON newer.internal_lot_no = s.internal_lot_no AND newer.id > s.id\";","  $where[] = \"newer.id IS NULL\";","}","$sql = $baseSql . \" WHERE \" . implode(\" AND \", $where) . \" ORDER BY s.id DESC LIMIT 300\";","","try {","  $st = $pdo->prepare($sql); $st->execute($params);","  echo \"<table border='1' cellpadding='6' cellspacing='0'><tr><th>ID</th><th>Item</th><th>Thk</th><th>L</th><th>W</th><th>Avail mm\u00b2</th><th>Heat</th><th>Lot</th><th>Pick</th></tr>\";","  while ($r = $st->fetch(PDO::FETCH_ASSOC)) {","    echo \"<tr>\";","    echo \"<td>\".(int)$r['id'].\"</td>\";","    echo \"<td>\".(int)$r['item_id'].\"</td>\";","    echo \"<td>\".(float)$r['thickness_mm'].\"</td>\";","    echo \"<td>\".(float)$r['length_mm'].\"</td>\";","    echo \"<td>\".(float)$r['width_mm'].\"</td>\";","    echo \"<td>\".number_format((int)$r['available_area_mm2']).\"</td>\";","    echo \"<td>\".h((string)$r['heat_no']).\"</td>\";","    echo \"<td>\".h((string)$r['internal_lot_no']).\"</td>\";","    if ($plate_id>0) {","      echo \"<td><a class='btn' href='plate_link_remnant.php?plate_id=\".$plate_id.\"&lot_id=\".(int)$r['id'].\"'>Pick</a></td>\";","    } else {","      echo \"<td>\u2014</td>\";","    }","    echo \"</tr>\";","  }","  echo \"</table>\";","} catch (Throwable $e) {","  echo \"<div style='color:#b00'><b>Error:</b> \".h($e->getMessage()).\"</div>\";","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/rfq_form.php": ["<?php","/** PATH: /public_html/purchase/rfq_form.php */","declare(strict_types=1);","","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","require_once __DIR__.'/../includes/numbering.php';","","require_login();","require_permission('purchase.rfq.manage');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$id          = (int)($_GET['id'] ?? 0);","$inquiry_id  = (int)($_GET['inquiry_id'] ?? 0);","$is_edit     = $id > 0;","","/* ---------------- Helpers ---------------- */","function table_exists(PDO $pdo, string $table): bool {","  $stmt = $pdo->prepare(\"SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = ? LIMIT 1\");","  $stmt->execute([$table]);","  return (bool)$stmt->fetchColumn();","}","function table_columns(PDO $pdo, string $table): array {","  static $cache = [];","  if (isset($cache[$table])) return $cache[$table];","  $stmt = $pdo->prepare(\"SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = ?\");","  $stmt->execute([$table]);","  $cols = array_map(fn($r) => $r['COLUMN_NAME'], $stmt->fetchAll(PDO::FETCH_ASSOC));","  return $cache[$table] = $cols ?: [];","}","function insert_row(PDO $pdo, string $table, array $data): int {","  $cols = table_columns($pdo, $table);","  if (!$cols) throw new RuntimeException(\"Table not found: {$table}\");","  // notes -> remarks, if supported","  if (isset($data['notes']) && !isset($data['remarks']) && in_array('remarks', $cols, true)) {","    $data['remarks'] = $data['notes'];","    unset($data['notes']);","  }","  $filtered = array_intersect_key($data, array_flip($cols));","  if (!$filtered) throw new RuntimeException(\"No valid columns to insert for {$table}\");","  $names = array_keys($filtered);","  $sql = \"INSERT INTO {$table} (\".implode(',', $names).\") VALUES (\".implode(',', array_fill(0, count($names), '?')).\")\";","  $stmt = $pdo->prepare($sql);","  $stmt->execute(array_values($filtered));","  return (int)$pdo->lastInsertId();","}","function update_row(PDO $pdo, string $table, int $id, array $data): void {","  $cols = table_columns($pdo, $table);","  if (!$cols) throw new RuntimeException(\"Table not found: {$table}\");","  if (isset($data['notes']) && !isset($data['remarks']) && in_array('remarks', $cols, true)) {","    $data['remarks'] = $data['notes'];","    unset($data['notes']);","  }","  $filtered = array_intersect_key($data, array_flip($cols));","  if (!$filtered) return;","  $sets = [];","  foreach (array_keys($filtered) as $c) $sets[] = \"{$c}=?\";","  $sql = \"UPDATE {$table} SET \".implode(',', $sets).\" WHERE id=?\";","  $stmt = $pdo->prepare($sql);","  $vals = array_values($filtered);","  $vals[] = $id;","  $stmt->execute($vals);","}","","/** Accepts YYYY-mm-dd or dd-mm-yyyy, returns YYYY-mm-dd or null */","function normalize_date_in(?string $s): ?string {","  $s = trim((string)$s);","  if ($s === '') return null;","  // already yyyy-mm-dd","  if (preg_match('~^\\d{4}-\\d{2}-\\d{2}$~', $s)) return $s;","  // dd-mm-yyyy -> yyyy-mm-dd","  if (preg_match('~^(\\d{2})-(\\d{2})-(\\d{4})$~', $s, $m)) {","    return sprintf('%04d-%02d-%02d', (int)$m[3], (int)$m[2], (int)$m[1]);","  }","  // try strtotime fallback","  $ts = strtotime($s);","  return $ts ? date('Y-m-d', $ts) : null;","}","","function quotes_table(PDO $pdo): string {","  if (table_exists($pdo, 'quotes')) return 'quotes';","  if (table_exists($pdo, 'supplier_quotes')) return 'supplier_quotes';","  return 'quotes';","}","","/**"," * Returns supplier list for an Inquiry as [ ['id'=>party_id, 'name'=>party_name], ... ]"," * Auto-detects pivot table:"," *  - inquiry_suppliers (supplier_id or party_id)"," *  - inquiry_parties   (party_id + role/type in ['supplier','vendor'])"," *  - inquiry_recipients(party_id + type/recipient_type in ['supplier','vendor'])"," */","function get_inquiry_suppliers(PDO $pdo, int $inquiry_id): array {","  if ($inquiry_id <= 0) return [];","","  if (table_exists($pdo, 'inquiry_suppliers')) {","    $cols = table_columns($pdo, 'inquiry_suppliers');","    $sid  = in_array('supplier_id', $cols, true) ? 'supplier_id' : (in_array('party_id', $cols, true) ? 'party_id' : null);","    if ($sid) {","      $sql = \"SELECT s.{$sid} AS party_id, p.name ","              FROM inquiry_suppliers s ","              JOIN parties p ON p.id = s.{$sid}","              WHERE s.inquiry_id = ?","              ORDER BY p.name\";","      $st = $pdo->prepare($sql);","      $st->execute([$inquiry_id]);","      return array_map(fn($r)=>['id'=>(int)$r['party_id'],'name'=>$r['name']], $st->fetchAll(PDO::FETCH_ASSOC));","    }","  }","","  if (table_exists($pdo, 'inquiry_parties')) {","    $cols = table_columns($pdo, 'inquiry_parties');","    if (in_array('party_id', $cols, true)) {","      $roleCol = in_array('role', $cols, true) ? 'role' : (in_array('type', $cols, true) ? 'type' : null);","      $whereRole = $roleCol ? \"AND ip.{$roleCol} IN ('supplier','vendor')\" : '';","      $sql = \"SELECT ip.party_id, p.name","              FROM inquiry_parties ip ","              JOIN parties p ON p.id = ip.party_id","              WHERE ip.inquiry_id = ? {$whereRole}","              ORDER BY p.name\";","      $st = $pdo->prepare($sql);","      $st->execute([$inquiry_id]);","      return array_map(fn($r)=>['id'=>(int)$r['party_id'],'name'=>$r['name']], $st->fetchAll(PDO::FETCH_ASSOC));","    }","  }","","  if (table_exists($pdo, 'inquiry_recipients')) {","    $cols = table_columns($pdo, 'inquiry_recipients');","    if (in_array('party_id', $cols, true)) {","      $typeCol = in_array('type', $cols, true) ? 'type' : (in_array('recipient_type', $cols, true) ? 'recipient_type' : null);","      $whereType = $typeCol ? \"AND ir.{$typeCol} IN ('supplier','vendor')\" : '';","      $sql = \"SELECT ir.party_id, p.name","              FROM inquiry_recipients ir","              JOIN parties p ON p.id = ir.party_id","              WHERE ir.inquiry_id = ? {$whereType}","              ORDER BY p.name\";","      $st = $pdo->prepare($sql);","      $st->execute([$inquiry_id]);","      return array_map(fn($r)=>['id'=>(int)$r['party_id'],'name'=>$r['name']], $st->fetchAll(PDO::FETCH_ASSOC));","    }","  }","","  return [];","}","","/** Open or create a supplier quote shell for this RFQ (header only) */","function open_or_create_quote(PDO $pdo, int $rfq_id, int $supplier_id, ?string $remarks = null): int {","  $qt = quotes_table($pdo);","","  // existing?","  $find = $pdo->prepare(\"SELECT id FROM {$qt} WHERE rfq_id=? AND supplier_id=? LIMIT 1\");","  $find->execute([$rfq_id, $supplier_id]);","  $qid = (int)($find->fetchColumn() ?: 0);","  if ($qid) return $qid;","","  // create","  $data = [","    'rfq_id'      => $rfq_id,","    'supplier_id' => $supplier_id,","    'status'      => 'draft',","    'remarks'     => $remarks,                  // silently dropped if column absent","    'created_at'  => date('Y-m-d H:i:s'),","  ];","  return insert_row($pdo, $qt, $data);","}","","/* ------------- Create RFQ if new ------------- */","if (!$is_edit) {","  if ($inquiry_id <= 0) { http_response_code(400); exit('inquiry_id required'); }","  $inq = $pdo->prepare(\"SELECT id, project_id, inquiry_no FROM inquiries WHERE id=?\");","  $inq->execute([$inquiry_id]);","  $INQ = $inq->fetch(PDO::FETCH_ASSOC);","  if (!$INQ) { http_response_code(404); exit('Inquiry not found'); }","","  $rfq_no = next_no('RFQ');","  $id = insert_row($pdo, 'rfqs', [","    'rfq_no'     => $rfq_no,","    'inquiry_id' => (int)$INQ['id'],","    'project_id' => (int)$INQ['project_id'],","    'rfq_date'   => date('Y-m-d'),","    'status'     => 'draft',","  ]);","  header(\"Location: rfq_form.php?id=\".$id);","  exit;","}","","/* ------------- Load RFQ ------------- */","$rfq = $pdo->prepare(\"SELECT * FROM rfqs WHERE id=?\");","$rfq->execute([$id]);","$RFQ = $rfq->fetch(PDO::FETCH_ASSOC);","if (!$RFQ) { http_response_code(404); exit('RFQ not found'); }","","$inquiry_id = (int)$RFQ['inquiry_id'];","$inqNoStmt = $pdo->prepare(\"SELECT inquiry_no FROM inquiries WHERE id=?\");","$inqNoStmt->execute([$inquiry_id]);","$inquiry_no = (string)($inqNoStmt->fetchColumn() ?: '');","","/* suppliers allowed from inquiry */","$allowedSuppliers = get_inquiry_suppliers($pdo, $inquiry_id);","$allowedIds = array_map(fn($r)=>(int)$r['id'], $allowedSuppliers);","","/* ------------- POST handlers ------------- */","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","","  // Save RFQ header","  if (isset($_POST['save_rfq'])) {","    $payload = [","      'rfq_date'   => normalize_date_in($_POST['rfq_date'] ?? date('Y-m-d')) ?? date('Y-m-d'),","      'valid_till' => normalize_date_in($_POST['valid_till'] ?? '') ?: null,","      'status'     => $_POST['status'] ?? 'draft',","      'remarks'    => $_POST['remarks'] ?? ($_POST['notes'] ?? null),","    ];","    update_row($pdo, 'rfqs', $id, $payload);","    header(\"Location: rfq_form.php?id=\".$id.\"&ok=Saved\");","    exit;","  }","","  // Add supplier & open quote (restricted to inquiry recipients)","  if (isset($_POST['add_supplier'])) {","    $supplier_id  = (int)($_POST['supplier_id'] ?? 0);","    $supplier_note = trim((string)($_POST['supplier_note'] ?? ''));","","    if ($supplier_id <= 0) {","      header(\"Location: rfq_form.php?id=\".$id.\"&err=supplier_required\");","      exit;","    }","    if (!in_array($supplier_id, $allowedIds, true)) {","      header(\"Location: rfq_form.php?id=\".$id.\"&err=supplier_not_in_inquiry\");","      exit;","    }","","    try {","      // Link in rfq_suppliers if exists (idempotent)","      if (table_exists($pdo, 'rfq_suppliers')) {","        $chk = $pdo->prepare(\"SELECT id FROM rfq_suppliers WHERE rfq_id=? AND supplier_id=? LIMIT 1\");","        $chk->execute([$id, $supplier_id]);","        if (!$chk->fetchColumn()) {","          insert_row($pdo, 'rfq_suppliers', [","            'rfq_id'      => $id,","            'supplier_id' => $supplier_id,","            'remarks'     => $supplier_note,","            'created_at'  => date('Y-m-d H:i:s'),","          ]);","        }","      }","","      // Create or open quote","      $quote_id = open_or_create_quote($pdo, $id, $supplier_id, $supplier_note);","      header(\"Location: quotes_form.php?id=\".$quote_id.\"&ok=Quote+ready\");","      exit;","","    } catch (Throwable $e) {","      $msg = 'Failed to open/create quote: '.substr($e->getMessage(), 0, 160);","      header(\"Location: rfq_form.php?id=\".$id.\"&err=\".rawurlencode($msg));","      exit;","    }","  }","}","","/* ------------- Data for view ------------- */","$rfqSuppliers = [];","if (table_exists($pdo, 'rfq_suppliers')) {","  $rs = $pdo->prepare(\"SELECT rs.*, p.name AS supplier_name ","                       FROM rfq_suppliers rs ","                       JOIN parties p ON p.id = rs.supplier_id","                       WHERE rs.rfq_id=? ORDER BY rs.id DESC\");","  $rs->execute([$id]);","  $rfqSuppliers = $rs->fetchAll(PDO::FETCH_ASSOC);","}","","/* format dates for <input type=\"date\"> (needs YYYY-mm-dd) */","$rfq_date_val   = normalize_date_in($RFQ['rfq_date'] ?? '') ?? date('Y-m-d');","$valid_till_val = normalize_date_in($RFQ['valid_till'] ?? '') ?? '';","","include __DIR__.'/../ui/layout_start.php';","?>","<div class=\"container py-4\">","","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h3 class=\"mb-0\">RFQ: <?= htmlspecialchars($RFQ['rfq_no'] ?? ('#'.$id)) ?></h3>","    <div class=\"d-flex gap-2\">","      <a class=\"btn btn-outline-secondary\" href=\"rfq_list.php\">Back to RFQs</a>","      <span class=\"text-muted small\">Inquiry: <?= htmlspecialchars($inquiry_no) ?></span>","    </div>","  </div>","","  <?php if (isset($_GET['ok'])): ?>","    <div class=\"alert alert-success py-2\"><?= htmlspecialchars($_GET['ok']) ?></div>","  <?php elseif (isset($_GET['err'])): ?>","    <div class=\"alert alert-danger py-2\"><?= htmlspecialchars($_GET['err']) ?></div>","  <?php endif; ?>","","  <form method=\"post\" class=\"card mb-4\">","    <div class=\"card-header\"><strong>Header</strong></div>","    <div class=\"card-body row g-3\">","      <div class=\"col-md-3\">","        <label class=\"form-label\">RFQ Date</label>","        <input type=\"date\" name=\"rfq_date\" class=\"form-control\" value=\"<?= htmlspecialchars($rfq_date_val) ?>\">","        <div class=\"form-text\">You can also type <code>dd-mm-yyyy</code>; it will be saved correctly.</div>","      </div>","      <div class=\"col-md-3\">","        <label class=\"form-label\">Valid Till</label>","        <input type=\"date\" name=\"valid_till\" class=\"form-control\" value=\"<?= htmlspecialchars($valid_till_val) ?>\">","        <div class=\"form-text\">Optional. Accepts <code>dd-mm-yyyy</code> too.</div>","      </div>","      <div class=\"col-md-3\">","        <label class=\"form-label\">Status</label>","        <select name=\"status\" class=\"form-select\">","          <?php","          $status = $RFQ['status'] ?? 'draft';","          foreach (['draft','issued','closed','cancelled'] as $opt) {","            $sel = $opt === $status ? 'selected' : '';","            echo \"<option value=\\\"{$opt}\\\" {$sel}>\".ucfirst($opt).\"</option>\";","          }","          ?>","        </select>","      </div>","      <div class=\"col-12\">","        <label class=\"form-label\">Remarks</label>","        <textarea name=\"remarks\" class=\"form-control\" rows=\"2\"><?= htmlspecialchars($RFQ['remarks'] ?? '') ?></textarea>","        <div class=\"form-text\">Saved to <code>remarks</code> if present in DB; otherwise ignored.</div>","      </div>","    </div>","    <div class=\"card-footer d-flex justify-content-end gap-2\">","      <button class=\"btn btn-primary\" name=\"save_rfq\" value=\"1\">Save</button>","    </div>","  </form>","","  <div class=\"card\">","    <div class=\"card-header d-flex justify-content-between align-items-center\">","      <strong>Suppliers (from Inquiry recipients)</strong>","      <?php if (!$allowedSuppliers): ?>","        <a class=\"btn btn-sm btn-outline-primary\" href=\"inquiry_build.php?id=<?= (int)$inquiry_id ?>\">Add Suppliers in Inquiry</a>","      <?php endif; ?>","    </div>","    <div class=\"card-body\">","      <form method=\"post\" class=\"row g-2 align-items-end mb-3\">","        <input type=\"hidden\" name=\"add_supplier\" value=\"1\">","        <div class=\"col-md-6\">","          <label class=\"form-label\">Supplier</label>","          <select name=\"supplier_id\" class=\"form-select\" <?= $allowedSuppliers ? '' : 'disabled' ?>>","            <option value=\"\">-- Select from Inquiry --</option>","            <?php foreach ($allowedSuppliers as $s): ?>","              <option value=\"<?= (int)$s['id'] ?>\"><?= htmlspecialchars($s['name']) ?> (ID <?= (int)$s['id'] ?>)</option>","            <?php endforeach; ?>","          </select>","          <?php if (!$allowedSuppliers): ?>","            <div class=\"form-text text-danger\">No suppliers found in Inquiry. Add them in Inquiry first.</div>","          <?php else: ?>","            <div class=\"form-text\">Only suppliers you sent the Inquiry to are listed.</div>","          <?php endif; ?>","        </div>","        <div class=\"col-md-4\">","          <label class=\"form-label\">Supplier Note</label>","          <input type=\"text\" name=\"supplier_note\" class=\"form-control\" placeholder=\"Optional note for supplier/quote\">","        </div>","        <div class=\"col-md-2\">","          <button class=\"btn btn-success w-100\" <?= $allowedSuppliers ? '' : 'disabled' ?>>Add & Open Quote</button>","        </div>","      </form>","","      <div class=\"table-responsive\">","        <table class=\"table table-sm align-middle\">","          <thead>","            <tr>","              <th>#</th>","              <th>Supplier</th>","              <th>Remarks</th>","              <th>Added</th>","              <th>Quote</th>","            </tr>","          </thead>","          <tbody>","            <?php if(!$rfqSuppliers): ?>","              <tr><td colspan=\"5\" class=\"text-muted\">No suppliers linked yet.</td></tr>","            <?php else: foreach($rfqSuppliers as $row): ?>","              <tr>","                <td><?= (int)$row['id'] ?></td>","                <td><?= htmlspecialchars($row['supplier_name'] ?? ('ID '.$row['supplier_id'])) ?></td>","                <td><?= htmlspecialchars($row['remarks'] ?? '') ?></td>","                <td><?= htmlspecialchars($row['created_at'] ?? '') ?></td>","                <td>","                  <?php","                  $qt = quotes_table($pdo);","                  $q = $pdo->prepare(\"SELECT id FROM {$qt} WHERE rfq_id=? AND supplier_id=? LIMIT 1\");","                  $q->execute([$id, (int)$row['supplier_id']]);","                  $qid = (int)($q->fetchColumn() ?: 0);","                  if ($qid): ?>","                    <a class=\"btn btn-sm btn-outline-primary\" href=\"quotes_form.php?id=<?= $qid ?>\">Open Quote</a>","                  <?php else: ?>","                    <form method=\"post\" class=\"d-inline\">","                      <input type=\"hidden\" name=\"add_supplier\" value=\"1\">","                      <input type=\"hidden\" name=\"supplier_id\" value=\"<?= (int)$row['supplier_id'] ?>\">","                      <button class=\"btn btn-sm btn-outline-secondary\">Create Quote</button>","                    </form>","                  <?php endif; ?>","                </td>","              </tr>","            <?php endforeach; endif; ?>","          </tbody>","        </table>","      </div>","    </div>","  </div>","","</div>","<?php include __DIR__.'/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/_ajax/lc_add_charge.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2) . '/includes/auth.php';","require_once dirname(__DIR__,2) . '/includes/db.php';","require_once dirname(__DIR__,2) . '/includes/rbac.php';","require_once dirname(__DIR__,2) . '/includes/coupler/LandedCostService.php';","header('Content-Type: application/json');","try{","  require_login(); require_permission('purchase.lc.edit');","  $pdo = db();","  $in = json_decode(file_get_contents('php://input'), true) ?: $_POST;","  $svc = new \\Coupler\\LandedCostService($pdo);","  $id = $svc->addCharge((int)($in['lc_id'] ?? 0), (string)($in['charge_code'] ?? 'freight'), (float)($in['amount'] ?? 0), $in['vendor_id'] ?? null, (string)($in['currency'] ?? 'INR'), (float)($in['fx_rate'] ?? 1.0), $in['description'] ?? null);","  echo json_encode(['ok'=>true,'data'=>['lc_charge_id'=>$id]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/_ajax/lc_allocate_post.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2) . '/includes/auth.php';","require_once dirname(__DIR__,2) . '/includes/db.php';","require_once dirname(__DIR__,2) . '/includes/rbac.php';","require_once dirname(__DIR__,2) . '/includes/coupler/LandedCostService.php';","header('Content-Type: application/json');","try{","  require_login(); require_permission('purchase.lc.post');","  $pdo = db();","  $in = json_decode(file_get_contents('php://input'), true) ?: $_POST;","  $svc = new \\Coupler\\LandedCostService($pdo);","  if (($in['action'] ?? '') === 'allocate') {","    $res = $svc->allocate((int)($in['lc_id'] ?? 0));","  } else {","    $res = $svc->post((int)($in['lc_id'] ?? 0));","  }","  echo json_encode(['ok'=>true,'data'=>$res]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/_ajax/lc_add_grn_line.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2) . '/includes/auth.php';","require_once dirname(__DIR__,2) . '/includes/db.php';","require_once dirname(__DIR__,2) . '/includes/rbac.php';","require_once dirname(__DIR__,2) . '/includes/coupler/LandedCostService.php';","header('Content-Type: application/json');","try{","  require_login(); require_permission('purchase.lc.edit');","  $pdo = db();","  $in = json_decode(file_get_contents('php://input'), true) ?: $_POST;","  $svc = new \\Coupler\\LandedCostService($pdo);","  $id = $svc->addGRNLine((int)($in['lc_id'] ?? 0), $in['grn_line'] ?? []);","  echo json_encode(['ok'=>true,'data'=>['lc_grn_line_id'=>$id]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/_ajax/lc_create.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2) . '/includes/auth.php';","require_once dirname(__DIR__,2) . '/includes/db.php';","require_once dirname(__DIR__,2) . '/includes/rbac.php';","require_once dirname(__DIR__,2) . '/includes/coupler/LandedCostService.php';","header('Content-Type: application/json');","try{","  require_login(); require_permission('purchase.lc.create');","  $pdo = db();","  $in = json_decode(file_get_contents('php://input'), true) ?: $_POST;","  $svc = new \\Coupler\\LandedCostService($pdo);","  $id = $svc->createHeader((string)($in['method'] ?? 'by_weight'), $in['supplier_id'] ?? null, (string)($in['currency'] ?? 'INR'), (float)($in['fx_rate'] ?? 1.0), $in['notes'] ?? null);","  echo json_encode(['ok'=>true,'data'=>['lc_id'=>$id]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/inquiry_build.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/numbering.php';","","$pdo = db();","$inquiry_id = (int)($_GET['id'] ?? 0);","","/* Convert to RFQ (reuse if already exists for this inquiry) */","if ($_SERVER['REQUEST_METHOD']==='POST' && isset($_POST['convert_to_rfq'])) {","  // 1) reuse existing","  $ex = $pdo->prepare(\"SELECT id FROM rfqs WHERE inquiry_id=? LIMIT 1\");","  $ex->execute([$inquiry_id]);","  $rfq_id = (int)($ex->fetchColumn() ?: 0);","","  if (!$rfq_id) {","    // create new","    $inq = $pdo->prepare(\"SELECT * FROM inquiries WHERE id=?\"); $inq->execute([$inquiry_id]);","    $I = $inq->fetch(); if(!$I) { http_response_code(404); exit('Inquiry not found'); }","","    $rfq_no = next_no('RFQ');","    $pdo->prepare(\"INSERT INTO rfqs (rfq_no, inquiry_id, project_id, status) VALUES (?,?,?, 'draft')\")","        ->execute([$rfq_no, $inquiry_id, (int)$I['project_id']]);","    $rfq_id = (int)$pdo->lastInsertId();","","    // copy lines once","    $ls = $pdo->prepare(\"SELECT * FROM inquiry_lines WHERE inquiry_id=? ORDER BY id\");","    $ls->execute([$inquiry_id]);","    $ins = $pdo->prepare(\"INSERT INTO rfq_lines (rfq_id, source_type, source_line_id, item_id, description, qty, qty_uom_id, weight_kg, exp_delivery, project_id)","                          VALUES (?,?,?,?,?,?,?,?,NULL,?)\");","    while($r = $ls->fetch()){","      $ins->execute([$rfq_id, $r['source_type'] ?? 'PI', (int)$r['id'], (int)$r['item_id'],","                     (string)($r['description'] ?? ''), $r['qty']!==null?(float)$r['qty']:null,","                     $r['qty_uom_id'] ?? null, $r['weight_kg']!==null?(float)$r['weight_kg']:null,","                     (int)$I['project_id']]);","    }","    // optionally mark inquiry","    $pdo->prepare(\"UPDATE inquiries SET status='issued' WHERE id=?\")->execute([$inquiry_id]);","  }","","  header(\"Location: rfq_form.php?id=\".$rfq_id.\"&from_inq=\".$inquiry_id);","  exit;","}","","/* View inquiry */","$sth = $pdo->prepare(\"SELECT * FROM inquiries WHERE id=? LIMIT 1\"); $sth->execute([$inquiry_id]);","$inq = $sth->fetch(); if(!$inq){ http_response_code(404); exit('Inquiry not found'); }","","$lst = $pdo->prepare(\"SELECT * FROM inquiry_lines WHERE inquiry_id=? ORDER BY id\");","$lst->execute([$inquiry_id]); $lines = $lst->fetchAll();","","function h(?string $s): string { return htmlspecialchars((string)$s, ENT_QUOTES, 'UTF-8'); }","function fmtn($v,$p=3){ return ($v===null||$v==='')?'\u2014':number_format((float)$v,$p); }","","$total_qty=$total_kg=0.0; foreach($lines as $r){ if($r['qty']!==null)$total_qty+=(float)$r['qty']; if($r['weight_kg']!==null)$total_kg+=(float)$r['weight_kg']; }","","include __DIR__.'/../ui/layout_start.php'; ?>","<div class=\"container py-4\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <div>","      <h3 class=\"mb-1\">Inquiry: <?= h($inq['inquiry_no'] ?? ('INQ-'.$inq['id'])) ?></h3>","      <div class=\"text-muted small\">Status: <?= h((string)($inq['status'] ?? 'draft')) ?></div>","    </div>","    <div class=\"d-flex gap-2\">","      <a class=\"btn btn-outline-secondary\" href=\"req_wizard.php\">\u2190 Back</a>","      <form method=\"post\">","        <input type=\"hidden\" name=\"convert_to_rfq\" value=\"1\">","        <button class=\"btn btn-primary\">Convert to RFQ</button>","      </form>","    </div>","  </div>","","  <div class=\"card\">","    <div class=\"card-header d-flex justify-content-between\"><strong>Lines</strong>","      <div class=\"small text-muted\">Total Qty: <?=fmtn($total_qty)?> | Total Weight: <?=fmtn($total_kg)?> kg</div>","    </div>","    <div class=\"card-body p-0\">","      <div class=\"table-responsive\">","        <table class=\"table table-bordered table-sm mb-0\">","          <thead class=\"table-light\"><tr><th>Item / Description</th><th class=\"text-end\">Qty</th><th class=\"text-center\">UOM</th><th class=\"text-end\">Weight (kg)</th></tr></thead>","          <tbody>","          <?php if(!$lines): ?><tr><td colspan=\"4\" class=\"text-muted\">No lines</td></tr>","          <?php else: foreach($lines as $r): ?>","            <tr>","              <td><?=h($r['description'] ?: ('Item #'.(int)$r['item_id']))?></td>","              <td class=\"text-end\"><?=fmtn($r['qty'])?></td>","              <td class=\"text-center\"><?= isset($r['qty_uom_id'])&&$r['qty_uom_id'] ? h((string)$r['qty_uom_id']) : 'NOS' ?></td>","              <td class=\"text-end\"><?=fmtn($r['weight_kg'])?></td>","            </tr>","          <?php endforeach; endif; ?>","          </tbody>","        </table>","      </div>","    </div>","  </div>","</div>","<?php include __DIR__.'/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/po_from_selection.php": ["<?php","declare(strict_types=1);","","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","require_once __DIR__.'/po_seq.php';","","require_login();","require_permission('purchase.po.manage');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","/** Helpers */","function uom_id_by_code(PDO $pdo, string $code): ?int {","  $st = $pdo->prepare(\"SELECT id FROM uom WHERE code=? AND status='active' LIMIT 1\");","  $st->execute([strtoupper($code)]);","  $id = $st->fetchColumn();","  return $id !== false ? (int)$id : null;","}","","function safe_uom_id(PDO $pdo, ?int $fromInquiry, ?int $fromItem): int {","  // 1) inquiry_items.uom_id","  if (!empty($fromInquiry)) return (int)$fromInquiry;","","  // 2) items.uom_id","  if (!empty($fromItem)) return (int)$fromItem;","","  // 3) fallback to NOS (present in your seed; id=1)","  $nos = uom_id_by_code($pdo, 'NOS');","  if ($nos) return $nos;","","  // last resort: first active UOM","  $any = (int)$pdo->query(\"SELECT id FROM uom WHERE status='active' ORDER BY id LIMIT 1\")->fetchColumn();","  if ($any > 0) return $any;","","  // Should never happen in a valid setup","  throw new RuntimeException(\"No active UOM found for fallback.\");","}","","/** Input */","$inquiry_id  = (int)($_GET['inquiry_id'] ?? 0);","$supplier_id = (int)($_GET['supplier_id'] ?? 0);","if ($inquiry_id <= 0 || $supplier_id <= 0) { http_response_code(400); echo \"Missing inquiry_id / supplier_id\"; exit; }","","/** Load inquiry basics */","$st = $pdo->prepare(\"SELECT id, project_id, location_id FROM inquiries WHERE id=?\");","$st->execute([$inquiry_id]);","$inq = $st->fetch(PDO::FETCH_ASSOC);","if (!$inq) { http_response_code(404); echo \"Inquiry not found\"; exit; }","","/** Pull locked selections for this supplier */","$sel = $pdo->prepare(\"","  SELECT s.inquiry_item_id, s.quote_id, s.unit_price, s.discount_percent, s.tax_percent, s.delivery_days","  FROM inquiry_quote_selections s","  JOIN inquiry_quote_items ql ON ql.quote_id = s.quote_id AND ql.inquiry_item_id = s.inquiry_item_id","  JOIN inquiry_items ii ON ii.id = s.inquiry_item_id","  WHERE s.inquiry_id = ? AND s.supplier_id = ?","  GROUP BY s.inquiry_item_id, s.quote_id, s.unit_price, s.discount_percent, s.tax_percent, s.delivery_days","\");","$sel->execute([$inquiry_id, $supplier_id]);","$rows = $sel->fetchAll(PDO::FETCH_ASSOC);","if (!$rows) { http_response_code(400); echo \"No locked lines found for this supplier.\"; exit; }","","/** Resolve item & uom & qty per inquiry line (also join item uom to support fallback) */","$ii = $pdo->prepare(\"","  SELECT ii.id, ii.item_id, ii.uom_id AS inquiry_uom_id, ii.qty,","         it.uom_id AS item_uom_id","  FROM inquiry_items ii","  JOIN items it ON it.id = ii.item_id","  WHERE ii.id = ?","\");","","/** Build PO */","$po_no = next_po_no($pdo);","$po_date = date('Y-m-d');","$currency = 'INR';","$gst_inclusive = 1;","","$pdo->beginTransaction();","try {","  // Header","  $pdo->prepare(\"","    INSERT INTO purchase_orders","      (po_no, inquiry_id, supplier_id, project_id, location_id, po_date, currency, gst_inclusive,","       total_before_tax, total_tax, total_after_tax, status, created_by)","    VALUES (?,?,?,?,?,?,?,?,0,0,0,'draft',?)","  \")->execute([$po_no, $inquiry_id, $supplier_id, $inq['project_id'], $inq['location_id'], $po_date, $currency, $gst_inclusive, current_user_id()]);","  $po_id = (int)$pdo->lastInsertId();","","  // Lines","  $ins = $pdo->prepare(\"","    INSERT INTO purchase_order_items","      (po_id, inquiry_item_id, quote_id, item_id, uom_id, qty, unit_price, discount_percent, tax_percent,","       line_total_before_tax, line_tax, line_total_after_tax, delivery_days, remarks)","    VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)","  \");","","  $tot_bt = 0.0; $tot_tax = 0.0; $tot_at = 0.0;","","  foreach ($rows as $r) {","    $ii->execute([(int)$r['inquiry_item_id']]);","    $base = $ii->fetch(PDO::FETCH_ASSOC);","    if (!$base) continue;","","    $qty   = (float)$base['qty'];","    $unit  = (float)$r['unit_price'];","    $disc  = (float)$r['discount_percent'];","    $taxp  = (float)$r['tax_percent'];","","    // Compute totals","    $gross = $qty * $unit;","    $bt    = $gross * (1 - $disc/100.0);","    $tax   = $bt * ($taxp/100.0);","    $at    = $bt + $tax;","","    $tot_bt += $bt; $tot_tax += $tax; $tot_at += $at;","","    // UOM fallback chain","    $uom_id = safe_uom_id($pdo,","      isset($base['inquiry_uom_id']) ? (int)$base['inquiry_uom_id'] : null,","      isset($base['item_uom_id'])    ? (int)$base['item_uom_id']    : null","    );","","    $ins->execute([","      $po_id,","      (int)$r['inquiry_item_id'],","      (int)$r['quote_id'],","      (int)$base['item_id'],","      $uom_id,","      $qty,","      $unit,","      $disc,","      $taxp,","      round($bt, 2),","      round($tax, 2),","      round($at, 2),","      !empty($r['delivery_days']) ? (int)$r['delivery_days'] : null,","      null","    ]);","  }","","  // Header totals","  $pdo->prepare(\"","    UPDATE purchase_orders","       SET total_before_tax=?, total_tax=?, total_after_tax=?","     WHERE id=?","  \")->execute([round($tot_bt,2), round($tot_tax,2), round($tot_at,2), $po_id]);","","  $pdo->commit();","  header('Location: /purchase/po_form.php?id='.$po_id);","  exit;","","} catch (Throwable $e) {","  $pdo->rollBack();","  http_response_code(500);","  echo \"PO create failed: \".$e->getMessage();","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/plate_to_inquiry.php": ["<?php","/** PATH: /public_html/purchase/plate_to_inquiry.php"," * BUILD: 2025-10-03T09:35:52 IST"," * Purpose: Convert a plate plan's plates into a Purchase Inquiry (idempotent)."," */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_login();","$pdo = db();","header('Content-Type: text/html; charset=utf-8');","","function h($s){ return htmlspecialchars((string)$s, ENT_QUOTES, 'UTF-8'); }","function has_table(PDO $pdo, string $t): bool {","  try { $st=$pdo->prepare(\"SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME=?\"); $st->execute([$t]); return (bool)$st->fetchColumn(); }","  catch (Throwable $e) { return false; }","}","","/* input */","$plan_id = isset($_GET['plan_id']) ? (int)$_GET['plan_id'] : 0;","if ($plan_id<=0) { http_response_code(400); echo \"Missing plan_id\"; exit; }","","/* load plan */","$st = $pdo->prepare(\"SELECT pl.*, prj.id AS project_id_real","                     FROM plate_plans pl","                     LEFT JOIN projects prj ON prj.id = pl.project_id","                     WHERE pl.id=?\");","$st->execute([$plan_id]); $plan = $st->fetch(PDO::FETCH_ASSOC);","if (!$plan) { http_response_code(404); echo \"Plan not found\"; exit; }","$project_id = (int)($plan['project_id'] ?? 0);","","/* find or create inquiry header */","$marker = \"[AUTO:plate_plan_id=\".$plan_id.\"]\";","$inq_id = null;","$chk = $pdo->prepare(\"SELECT id FROM inquiries WHERE status='draft' AND project_id <=> ? AND notes LIKE ? ORDER BY id DESC LIMIT 1\");","$chk->execute([$project_id, \"%\".$marker.\"%\"]);","$inq_id = (int)($chk->fetchColumn() ?: 0);","","if ($inq_id<=0) {","  /* generate inquiry_no */","  $inquiry_no = null;","  if (has_table($pdo, 'inquiry_sequences')) {","    $yr = (int)date('Y');","    $pdo->beginTransaction();","    try {","      $sel = $pdo->prepare(\"SELECT seq FROM inquiry_sequences WHERE yr=? FOR UPDATE\");","      $sel->execute([$yr]);","      $seq = $sel->fetchColumn();","      if ($seq === false) {","        $seq = 1;","        $ins = $pdo->prepare(\"INSERT INTO inquiry_sequences (yr, seq) VALUES (?, ?)\");","        $ins->execute([$yr, $seq]);","      } else {","        $seq = (int)$seq + 1;","        $upd = $pdo->prepare(\"UPDATE inquiry_sequences SET seq=? WHERE yr=?\");","        $upd->execute([$seq, $yr]);","      }","      $pdo->commit();","      $inquiry_no = sprintf(\"INQ-%d-%04d\", $yr, $seq);","    } catch (Throwable $e) {","      $pdo->rollBack();","      $inquiry_no = \"INQ-\".date('Ymd-His');","    }","  } else {","    $inquiry_no = \"INQ-\".date('Ymd-His');","  }","","  $ins = $pdo->prepare(\"INSERT INTO inquiries","    (inquiry_no, project_id, inquiry_date, status, notes, created_by, created_at)","    VALUES (?, ?, CURDATE(), 'draft', ?, ?, NOW())\");","  $ins->execute([$inquiry_no, $project_id, \"Auto-created from Plate Plan #\".$plan_id.\" \".$marker, (int)($_SESSION['user_id'] ?? 0)]);","  $inq_id = (int)$pdo->lastInsertId();","}","","/* upsert inquiry lines from plates (only NEW plates) */","$plates = $pdo->prepare(\"SELECT * FROM plate_plan_plates WHERE plan_id=? AND source_type='new' ORDER BY id\");","$plates->execute([$plan_id]);","","$selLine = $pdo->prepare(\"SELECT id FROM inquiry_lines WHERE inquiry_id=? AND source_type='RMI' AND source_line_id=? LIMIT 1\");","$insLine = $pdo->prepare(\"INSERT INTO inquiry_lines","  (inquiry_id, source_type, source_line_id, item_id, description, length_mm, width_mm, thickness_mm, qty, qty_uom_id, weight_kg, needed_by, supplier_hint_id, project_id)","  VALUES (?, 'RMI', ?, ?, ?, ?, ?, ?, ?, NULL, ?, NULL, NULL, ?)\");","$updLine = $pdo->prepare(\"UPDATE inquiry_lines","  SET item_id=?, description=?, length_mm=?, width_mm=?, thickness_mm=?, qty=?, weight_kg=?, project_id=?","  WHERE id=?\");","","$added = 0; $updated = 0; $skipped = 0;","while ($pl = $plates->fetch(PDO::FETCH_ASSOC)) {","  $plateId = (int)$pl['id'];","  $itemId  = (int)($pl['item_id'] ?? 0);","  $L = (float)$pl['length_mm']; $W = (float)$pl['width_mm']; $T = (float)$pl['thickness_mm'];","  $qty = (float)$pl['qty_nos']; $kg = (float)($pl['total_plate_kg'] ?? 0);","  $desc = sprintf(\"PLATE %s\u00d7%s\u00d7%s mm\",","    rtrim(rtrim(number_format($L,3,'.',''), '0'),'.'),","    rtrim(rtrim(number_format($W,3,'.',''), '0'),'.'),","    rtrim(rtrim(number_format($T,3,'.',''), '0'),'.')","  );","","  if ($itemId<=0) { $skipped++; continue; }","","  $selLine->execute([$inq_id, $plateId]);","  $lineId = (int)($selLine->fetchColumn() ?: 0);","  if ($lineId>0) {","    $updLine->execute([$itemId, $desc, $L, $W, $T, $qty, $kg, $project_id, $lineId]);","    $updated++;","  } else {","    $insLine->execute([$inq_id, $plateId, $itemId, $desc, $L, $W, $T, $qty, $kg, $project_id]);","    $added++;","  }","}","","/* final */","$goto = \"plate_plan_form.php?id=\".$plan_id.\"&inq_id=\".$inq_id.\"&added=\".$added.\"&updated=\".$updated.\"&skipped=\".$skipped.\"&ok=1\";","header(\"Location: \".$goto);","exit;"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/plate_lot_scrap.php": ["<?php","/** PATH: /public_html/purchase/plate_lot_scrap.php"," * PURPOSE: Mark a lot/remnant as scrapped with reason (keeps trace intact)"," */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_login();","$pdo = db();","","function h($s){ return htmlspecialchars((string)$s, ENT_QUOTES, 'UTF-8'); }","","$lot_id = isset($_GET['lot_id']) ? (int)$_GET['lot_id'] : 0;","if ($lot_id<=0) { http_response_code(400); echo \"Missing lot_id\"; exit; }","","$st = $pdo->prepare(\"SELECT id, internal_lot_no, plate_no, heat_no, status, available_area_mm2 FROM stock_lots WHERE id=?\");","$st->execute([$lot_id]); $lot = $st->fetch();","if (!$lot) { echo \"Lot not found.\"; exit; }","","$err=null;","if ($_SERVER['REQUEST_METHOD']==='POST') {","  $reason = trim($_POST['reason'] ?? 'scrapped');","  // Allow scrap from available/partial; block if already consumed/scrapped","  if (!in_array($lot['status'], ['available','partial'], true)) {","    $err = \"This lot is {$lot['status']} and cannot be scrapped.\";","  } else {","    $upd = $pdo->prepare(\"UPDATE stock_lots","                          SET status='scrapped', available_area_mm2=0, scrap_reason=?, scrap_at=NOW()","                          WHERE id=?\");","    $upd->execute([$reason, $lot_id]);","    header('Location: remnant_list.php?status=scrapped');","    exit;","  }","}","?>","<!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>Scrap Lot</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <style>","    body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;padding:18px}","    .wrap{max-width:700px;margin:0 auto}","    .row{display:flex;gap:10px;flex-wrap:wrap;margin:10px 0}","    .btn{display:inline-block;padding:7px 12px;border:1px solid #ccc;border-radius:8px;background:#fff;text-decoration:none;cursor:pointer}","  </style>","</head>","<body>","<div class=\"wrap\">","  <h3>Scrap Lot <?= h($lot['internal_lot_no'] ?: ('LOT-'.$lot['id'])) ?></h3>","  <?php if ($err): ?><div style=\"color:#b00;\"><?= h($err) ?></div><?php endif; ?>","","  <div>Plate / Heat: <b><?= h(($lot['plate_no'] ?: '\u2014').' / '.($lot['heat_no'] ?: '\u2014')) ?></b></div>","  <div>Status: <b><?= h($lot['status']) ?></b></div>","  <div>Available area: <b><?= number_format((int)$lot['available_area_mm2']) ?> mm\u00b2</b></div>","","  <form method=\"post\" class=\"row\" style=\"margin-top:12px\">","    <input name=\"reason\" placeholder=\"Reason for scrapping\" style=\"min-width:420px\">","    <button class=\"btn\">Confirm Scrap</button>","    <a class=\"btn\" href=\"remnant_list.php\" style=\"margin-left:6px\">Cancel</a>","  </form>","</div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/lc_console.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_login(); require_permission('purchase.lc.view');","?><!doctype html><html><head><meta charset=\"utf-8\"><title>Landed Cost Console</title>","<link rel=\"stylesheet\" href=\"../assets/ems_phase04_ui.css\"></head><body>","<h1>Landed Cost Console</h1>","<section><h2>Create LC Header</h2>","<div class=\"row\"><div><label>Method</label><select id=\"lc_method\"><option>by_weight</option><option>by_value</option><option>by_qty</option><option>by_volume</option></select></div>","<div><label>Supplier ID</label><input id=\"lc_supplier\" type=\"number\"></div>","<div><label>Currency</label><input id=\"lc_curr\" value=\"INR\"></div>","<div><label>FX Rate</label><input id=\"lc_fx\" type=\"number\" step=\"0.000001\" value=\"1.0\"></div></div>","<div><label>Notes</label><input id=\"lc_notes\"></div>","<button id=\"btnCreate\">Create LC</button> <b id=\"lcId\"></b></section>","<section><h2>Add GRN Line</h2>","<div class=\"row\"><div><label>LC ID</label><input id=\"grn_lc_id\" type=\"number\"></div><div><label>Item ID</label><input id=\"grn_item_id\" type=\"number\"></div>","<div><label>Warehouse ID</label><input id=\"grn_wh_id\" type=\"number\"></div><div><label>Qty (base)</label><input id=\"grn_qty\" type=\"number\" step=\"0.000001\"></div></div>","<div class=\"row\"><div><label>Value (qty*rate)</label><input id=\"grn_val\" type=\"number\" step=\"0.000001\"></div><div><label>Weight (kg)</label><input id=\"grn_wkg\" type=\"number\" step=\"0.000001\"></div>","<div><label>GRN ID</label><input id=\"grn_id\" type=\"number\"></div><div><label>GRN Line ID</label><input id=\"grn_line_id\" type=\"number\"></div></div>","<button id=\"btnAddGRN\">Add GRN Line</button> <span id=\"grnMsg\"></span></section>","<section><h2>Add Charge</h2>","<div class=\"row\"><div><label>LC ID</label><input id=\"ch_lc_id\" type=\"number\"></div><div><label>Charge Code</label><input id=\"ch_code\" value=\"freight\"></div>","<div><label>Amount</label><input id=\"ch_amt\" type=\"number\" step=\"0.01\"></div><div><label>Vendor ID</label><input id=\"ch_vendor\" type=\"number\"></div></div>","<div class=\"row\"><div><label>Currency</label><input id=\"ch_curr\" value=\"INR\"></div><div><label>FX</label><input id=\"ch_fx\" type=\"number\" step=\"0.000001\" value=\"1.0\"></div><div><label>Description</label><input id=\"ch_desc\"></div></div>","<button id=\"btnAddCh\">Add Charge</button> <span id=\"chMsg\"></span></section>","<section><h2>Allocate / Post</h2>","<div class=\"row-3\"><div><label>LC ID</label><input id=\"act_lc_id\" type=\"number\"></div><div><button id=\"btnAlloc\">Allocate</button></div><div><button id=\"btnPost\">Post</button></div></div>","<div id=\"allocMsg\"></div></section>","<script>","async function api(u,d){const r=await fetch(u,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(d)});const j=await r.json();if(!j.ok) throw new Error(j.error||'API');return j.data;}","document.getElementById('btnCreate').onclick=async()=>{try{const d=await api('../purchase/_ajax/lc_create.php',{method:document.getElementById('lc_method').value,supplier_id:parseInt(document.getElementById('lc_supplier').value||0)||null,currency:document.getElementById('lc_curr').value,fx_rate:parseFloat(document.getElementById('lc_fx').value||'1'),notes:document.getElementById('lc_notes').value});document.getElementById('lcId').textContent='LC #'+d.lc_id;['grn_lc_id','ch_lc_id','act_lc_id'].forEach(id=>document.getElementById(id).value=d.lc_id);}catch(e){alert(e.message);}};","document.getElementById('btnAddGRN').onclick=async()=>{try{const d=await api('../purchase/_ajax/lc_add_grn_line.php',{lc_id:parseInt(document.getElementById('grn_lc_id').value||0),grn_line:{item_id:parseInt(document.getElementById('grn_item_id').value||0),warehouse_id:parseInt(document.getElementById('grn_wh_id').value||0),qty_base:parseFloat(document.getElementById('grn_qty').value||'0'),value_base:parseFloat(document.getElementById('grn_val').value||'0'),weight_kg:document.getElementById('grn_wkg').value?parseFloat(document.getElementById('grn_wkg').value):null,grn_id:document.getElementById('grn_id').value||null,grn_line_id:document.getElementById('grn_line_id').value||null}});document.getElementById('grnMsg').textContent='Added line #'+d.lc_grn_line_id;}catch(e){alert(e.message);}};","document.getElementById('btnAddCh').onclick=async()=>{try{const d=await api('../purchase/_ajax/lc_add_charge.php',{lc_id:parseInt(document.getElementById('ch_lc_id').value||0),charge_code:document.getElementById('ch_code').value,amount:parseFloat(document.getElementById('ch_amt').value||'0'),currency:document.getElementById('ch_curr').value,fx_rate:parseFloat(document.getElementById('ch_fx').value||'1'),vendor_id:document.getElementById('ch_vendor').value?parseInt(document.getElementById('ch_vendor').value):null,description:document.getElementById('ch_desc').value||null});document.getElementById('chMsg').textContent='Charge #'+d.lc_charge_id+' added';}catch(e){alert(e.message);}};","document.getElementById('btnAlloc').onclick=async()=>{try{const d=await api('../purchase/_ajax/lc_allocate_post.php',{lc_id:parseInt(document.getElementById('act_lc_id').value||0),action:'allocate'});document.getElementById('allocMsg').textContent='Allocated total '+d.total+' over '+d.allocated.length+' line(s)';}catch(e){alert(e.message);}};","document.getElementById('btnPost').onclick=async()=>{try{const d=await api('../purchase/_ajax/lc_allocate_post.php',{lc_id:parseInt(document.getElementById('act_lc_id').value||0),action:'post'});document.getElementById('allocMsg').textContent='Posted LC amount '+d.amount;}catch(e){alert(e.message);}};","</script></body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/po_item_sizes_api.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","","header('Content-Type: application/json');","","function json_out($ok, $payload = []) {","  echo json_encode($ok ? array_merge(['success'=>true], $payload)","                       : array_merge(['success'=>false], $payload));","  exit;","}","","function body_json(): array {","  $raw = file_get_contents('php://input');","  $j = json_decode($raw, true);","  return is_array($j) ? $j : [];","}","","require_login();","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$method = $_SERVER['REQUEST_METHOD'];","if ($method !== 'POST') json_out(false, ['error'=>'Method not allowed']);","","$in = body_json();","$action = $in['action'] ?? '';","$po_item_id = (int)($in['po_item_id'] ?? 0);","if ($po_item_id <= 0) json_out(false, ['error'=>'Missing po_item_id']);","","switch ($action) {","  case 'list':","    require_permission('purchase.po.view');","    $st = $pdo->prepare(\"SELECT id, po_id, thickness_mm, density_kg_m3, rate_basis","                         FROM purchase_order_items WHERE id=?\");","    $st->execute([$po_item_id]);","    $li = $st->fetch(PDO::FETCH_ASSOC);","    if (!$li) json_out(false, ['error'=>'PO item not found']);","    $po_id = (int)$li['po_id'];","","    // cut list","    $rows = $pdo->prepare(\"SELECT id, width_mm, length_mm, pcs, area_m2, weight_kg","                           FROM purchase_order_item_sizes","                           WHERE po_item_id=?","                           ORDER BY id\");","    $rows->execute([$po_item_id]);","    $rows = $rows->fetchAll(PDO::FETCH_ASSOC);","","    json_out(true, [","      'rows' => $rows,","      'meta' => [","        'po_id'=>$po_id,","        'rate_basis'=>$li['rate_basis'],","        'thickness_mm'=>$li['thickness_mm'],","        'density_kg_m3'=>$li['density_kg_m3']","      ]","    ]);","    break;","","  case 'save':","    require_permission('purchase.po.manage');","    $rows = $in['rows'] ?? [];","    if (!is_array($rows)) $rows = [];","","    // get parent line (needs basis, thk, density, pricing)","    $st = $pdo->prepare(\"SELECT li.*, po.id AS po_id","                         FROM purchase_order_items li","                         JOIN purchase_orders po ON po.id=li.po_id","                         WHERE li.id=?\");","    $st->execute([$po_item_id]);","    $li = $st->fetch(PDO::FETCH_ASSOC);","    if (!$li) json_out(false, ['error'=>'PO item not found']);","","    $rate_basis   = $li['rate_basis'] ?: 'per_unit';","    $thickness_mm = $li['thickness_mm'];","    $density      = $li['density_kg_m3'];","    $po_id        = (int)$li['po_id'];","","    // Replace all sizes","    $pdo->beginTransaction();","    try {","      $pdo->prepare(\"DELETE FROM purchase_order_item_sizes WHERE po_item_id=?\")->execute([$po_item_id]);","","      $ins = $pdo->prepare(\"INSERT INTO purchase_order_item_sizes","        (po_item_id, width_mm, length_mm, pcs, remarks, area_m2, weight_kg)","        VALUES (?,?,?,?,?, ?, ?)\");","","      $total_area = 0.0;","      $total_weight = 0.0;","","      foreach ($rows as $r) {","        $wmm = (float)($r['width_mm'] ?? 0);","        $lmm = (float)($r['length_mm'] ?? 0);","        $pcs = (int)($r['pcs'] ?? 0);","        if ($wmm<=0 || $lmm<=0 || $pcs<=0) continue;","","        $area = ($wmm/1000.0)*($lmm/1000.0)*$pcs; // m2","        // Weight needs thickness & density; if missing, keep null and compute 0 this time","        $wt = null;","        if (!is_null($thickness_mm) && !is_null($density) && $thickness_mm>0 && $density>0) {","          $wt = $area * ($thickness_mm/1000.0) * (float)$density; // kg","        }","","        $ins->execute([$po_item_id, $wmm, $lmm, $pcs, null, $area, $wt]);","","        $total_area += $area;","        if (!is_null($wt)) $total_weight += (float)$wt;","      }","","      // Recalculate line & header totals","      _recalc_po_item_and_header($pdo, $po_item_id, $po_id, $rate_basis, $total_area, $total_weight);","","      $pdo->commit();","      json_out(true, ['message'=>'Saved']);","    } catch (Throwable $e) {","      $pdo->rollBack();","      json_out(false, ['error'=>$e->getMessage()]);","    }","    break;","","  default:","    json_out(false, ['error'=>'Unknown action']);","}","","/**"," * Recalculate one PO line and its PO header totals."," * If $rate_basis/$total_area/$total_weight are not provided, they are derived from DB."," */","function _recalc_po_item_and_header(PDO $pdo, int $po_item_id, ?int $po_id=null,","  ?string $rate_basis=null, ?float $total_area=null, ?float $total_weight=null): void {","","  // Fetch line if needed","  $st = $pdo->prepare(\"SELECT li.*, po.id AS po_id","                       FROM purchase_order_items li","                       JOIN purchase_orders po ON po.id=li.po_id","                       WHERE li.id=?\");","  $st->execute([$po_item_id]);","  $li = $st->fetch(PDO::FETCH_ASSOC);","  if (!$li) return;","","  if ($po_id===null) $po_id = (int)$li['po_id'];","  if ($rate_basis===null) $rate_basis = $li['rate_basis'] ?: 'per_unit';","","  // Derive area/weight if not provided","  if ($total_area===null || $total_weight===null) {","    $sum = $pdo->prepare(\"SELECT","        COALESCE(SUM(area_m2),0) AS ta,","        COALESCE(SUM(weight_kg),0) AS tw","      FROM purchase_order_item_sizes WHERE po_item_id=?\");","    $sum->execute([$po_item_id]);","    $s = $sum->fetch(PDO::FETCH_ASSOC);","    $total_area   = (float)$s['ta'];","    $total_weight = (float)$s['tw'];","  }","","  $qty = (float)$li['qty']; // existing qty (per_unit)","  if ($rate_basis==='per_kg')   $qty = $total_weight;","  if ($rate_basis==='per_m2')   $qty = $total_area;","","  // Recompute line totals","  $unit = (float)$li['unit_price'];","  $disc = (float)$li['discount_percent'];","  $taxp = (float)$li['tax_percent'];","","  $gross = $qty * $unit;","  $bt = $gross * (1 - $disc/100.0);","  $tax = $bt * ($taxp/100.0);","  $at  = $bt + $tax;","","  $up = $pdo->prepare(\"UPDATE purchase_order_items","                       SET qty=?, line_total_before_tax=?, line_tax=?, line_total_after_tax=?","                       WHERE id=?\");","  $up->execute([round($qty,6), round($bt,2), round($tax,2), round($at,2), $po_item_id]);","","  // Recompute header totals","  $tot = $pdo->prepare(\"SELECT","      COALESCE(SUM(line_total_before_tax),0) AS tbt,","      COALESCE(SUM(line_tax),0) AS tt,","      COALESCE(SUM(line_total_after_tax),0) AS tat","    FROM purchase_order_items WHERE po_id=?\");","  $tot->execute([$po_id]);","  $t = $tot->fetch(PDO::FETCH_ASSOC);","","  $pdo->prepare(\"UPDATE purchase_orders","                 SET total_before_tax=?, total_tax=?, total_after_tax=?","                 WHERE id=?\")","      ->execute([round((float)$t['tbt'],2), round((float)$t['tt'],2), round((float)$t['tat'],2), $po_id]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/po_seq.php": ["<?php","declare(strict_types=1);","","function next_po_no(PDO $pdo): string {","  $y = (int)date('Y');","  $pdo->beginTransaction();","  try {","    $st = $pdo->prepare(\"SELECT seq FROM po_sequences WHERE y=? FOR UPDATE\");","    $st->execute([$y]);","    $row = $st->fetch(PDO::FETCH_ASSOC);","    if ($row) {","      $seq = (int)$row['seq'] + 1;","      $up  = $pdo->prepare(\"UPDATE po_sequences SET seq=? WHERE y=?\");","      $up->execute([$seq, $y]);","    } else {","      $seq = 1;","      $ins = $pdo->prepare(\"INSERT INTO po_sequences (y, seq) VALUES (?, ?)\");","      $ins->execute([$y, $seq]);","    }","    $pdo->commit();","    return 'PO-' . $y . '-' . str_pad((string)$seq, 4, '0', STR_PAD_LEFT);","  } catch (Throwable $e) {","    $pdo->rollBack();","    throw $e;","  }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/inquiry_quotes_delete.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","","require_login();","require_permission('purchase.quote.manage');","","$pdo=db();","$id=(int)($_GET['id']??0);","if($id>0){","  $pdo->prepare(\"DELETE FROM inquiry_quote_items WHERE quote_id=?\")->execute([$id]);","  $pdo->prepare(\"DELETE FROM inquiry_quotes WHERE id=? AND status='draft'\")->execute([$id]);","}","header('Location: /purchase/inquiry_quotes_list.php');"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/plate_lot_picker.php": ["<?php","/** PATH: /public_html/purchase/plate_lot_picker.php"," * PURPOSE: Pick a remnant lot (stock_lots) and link it to a plate (plate_plan_plates)."," */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_login();","$pdo = db();","","function h($s){ return htmlspecialchars((string)$s, ENT_QUOTES, 'UTF-8'); }","","$plate_id = isset($_GET['plate_id']) ? (int)$_GET['plate_id'] : 0;","if ($plate_id <= 0) { http_response_code(400); echo \"Missing plate_id\"; exit; }","","/* Load plate header (needs thickness, item and plan) */","$st = $pdo->prepare(\"SELECT p.id, p.plan_id, p.item_id, p.thickness_mm, COALESCE(pl.plan_no,'') AS plan_no, pl.project_id","                     FROM plate_plan_plates p","                     LEFT JOIN plate_plans pl ON pl.id = p.plan_id","                     WHERE p.id=?\");","$st->execute([$plate_id]);","$plate = $st->fetch();","if (!$plate) { echo \"Plate not found.\"; exit; }","","$plan_id   = (int)$plate['plan_id'];","$plan_no   = (string)$plate['plan_no'];","$item_id   = $plate['item_id'] ? (int)$plate['item_id'] : null;","$thickness = (float)$plate['thickness_mm'];","","/* Filters */","$q        = trim($_GET['q'] ?? '');           // free text in grade/plate/heat","$min_area = (int)($_GET['min_area'] ?? 0);","$status   = $_GET['status'] ?? 'available';   // available/partial/all","","/* Query lots (match thickness & optional same item/grade) */","$sql = \"SELECT id, internal_lot_no, plate_no, heat_no, item_name, item_id,","               thickness_mm, available_area_mm2, origin_plan_no, status","        FROM stock_lots","        WHERE status IN ('available','partial')","          AND ABS(thickness_mm - ?) < 0.001\";","$bind = [$thickness];","","if ($item_id) { $sql .= \" AND item_id = ?\"; $bind[] = $item_id; }","if ($min_area > 0) { $sql .= \" AND available_area_mm2 >= ?\"; $bind[] = $min_area; }","if ($q !== '') {","  $sql .= \" AND (item_name LIKE ? OR plate_no LIKE ? OR heat_no LIKE ?)\";","  $like = \"%{$q}%\";","  array_push($bind, $like, $like, $like);","}","$sql .= \" ORDER BY available_area_mm2 DESC, id DESC LIMIT 200\";","","$lots = $pdo->prepare($sql);","$lots->execute($bind);","$rows = $lots->fetchAll();","","/* POST: link selected lot to plate */","$err = null;","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  $chosen = (int)($_POST['lot_id'] ?? 0);","  if ($chosen > 0) {","    // sanity: ensure lot is still available","    $check = $pdo->prepare(\"SELECT id FROM stock_lots WHERE id=? AND status IN ('available','partial')\");","    $check->execute([$chosen]);","    if ($check->fetchColumn()) {","      $upd = $pdo->prepare(\"UPDATE plate_plan_plates SET source_type='remnant', source_lot_id=? WHERE id=?\");","      $upd->execute([$chosen, $plate_id]);","      header('Location: plate_plan_form.php?id='.$plan_id.'&ok=1');","      exit;","    } else {","      $err = \"Selected lot is no longer available.\";","    }","  } else {","    $err = \"Please choose a lot to link.\";","  }","}","?>","<!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>Select Remnant Lot</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <style>","    body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;padding:18px}","    .wrap{max-width:1100px;margin:0 auto}","    table{border-collapse:collapse;width:100%}","    th,td{padding:8px 10px;border-bottom:1px solid #eee;text-align:left}","    .row{display:flex;gap:10px;flex-wrap:wrap;margin:10px 0}","    .btn{display:inline-block;padding:7px 12px;border:1px solid #ccc;border-radius:8px;background:#fff;text-decoration:none;cursor:pointer}","    .small{font-size:12px;color:#666}","  </style>","</head>","<body>","<div class=\"wrap\">","  <h3>Select Remnant Lot for Plate #<?= (int)$plate_id ?> &nbsp;<span class=\"small\">(Plan <?= h($plan_no ?: (string)$plan_id) ?>, Thk <?= (float)$thickness ?>)</span></h3>","","  <form method=\"get\" class=\"row\">","    <input type=\"hidden\" name=\"plate_id\" value=\"<?= (int)$plate_id ?>\">","    <input name=\"q\" placeholder=\"search grade / plate / heat\" value=\"<?= h($q) ?>\" style=\"min-width:240px\">","    <input name=\"min_area\" type=\"number\" placeholder=\"min area (mm\u00b2)\" value=\"<?= $min_area ?>\" style=\"width:180px\">","    <button class=\"btn\">Search</button>","    <a class=\"btn\" href=\"plate_lot_picker.php?plate_id=<?= (int)$plate_id ?>\">Reset</a>","    <a class=\"btn\" href=\"plate_plan_form.php?id=<?= (int)$plan_id ?>\">Back to Plan</a>","  </form>","","  <?php if ($err): ?><div style=\"color:#b00;margin:8px 0;\"><?= h($err) ?></div><?php endif; ?>","","  <form method=\"post\">","    <input type=\"hidden\" name=\"plate_id\" value=\"<?= (int)$plate_id ?>\">","    <table>","      <thead>","        <tr>","          <th>Lot</th>","          <th>Plate / Heat</th>","          <th>Grade</th>","          <th>Thk</th>","          <th>Avail area</th>","          <th>Origin Plan</th>","          <th></th>","        </tr>","      </thead>","      <tbody>","        <?php foreach ($rows as $r): ?>","          <tr>","            <td><?= h($r['internal_lot_no'] ?: ('LOT-'.$r['id'])) ?></td>","            <td><?= h(($r['plate_no'] ?: '\u2014').' / '.($r['heat_no'] ?: '\u2014')) ?></td>","            <td><?= h($r['item_name'] ?: '') ?></td>","            <td><?= (float)$r['thickness_mm'] ?></td>","            <td><?= number_format((int)$r['available_area_mm2']) ?></td>","            <td><?= h($r['origin_plan_no'] ?: '') ?></td>","            <td><button class=\"btn\" name=\"lot_id\" value=\"<?= (int)$r['id'] ?>\">Use</button></td>","          </tr>","        <?php endforeach; if (!$rows): ?>","          <tr><td colspan=\"7\">No suitable remnants found. Try clearing filters or add lots in Stores/GRN.</td></tr>","        <?php endif; ?>","      </tbody>","    </table>","  </form>","</div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/inquiry_import_indent.php": ["<?php","/** PATH: /public_html/purchase/inquiry_import_indent.php \u2014 export indent lines for Inquiry import */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_permission('purchase.inquiry.manage');","","header('Content-Type: application/json; charset=utf-8');","","try {","  $pdo = db();","  $pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","  $indent_id = (int)($_GET['indent_id'] ?? 0);","  if ($indent_id <= 0) { echo json_encode([]); exit; }","","  // Pull indent header (to get project_id, optional)","  $h = $pdo->prepare(\"SELECT id, project_id, indent_no FROM indents WHERE id=?\");","  $h->execute([$indent_id]);","  $hdr = $h->fetch(PDO::FETCH_ASSOC) ?: ['project_id'=>null, 'indent_no'=>null];","","  // Lines with item + uom and subcategory_id","  $sql = \"","    SELECT ","      li.id              AS indent_item_id,","      li.indent_id,","      li.item_id,","      it.subcategory_id,              -- << add subcategory for cascading item select","      li.make_id,","      li.qty,","      li.uom_id,","      li.needed_by,","      li.remarks         AS line_notes","    FROM indent_items li","    JOIN items it ON it.id = li.item_id","    WHERE li.indent_id = ?","    ORDER BY li.sort_order, li.id","  \";","  $st = $pdo->prepare($sql);","  $st->execute([$indent_id]);","  $rows = $st->fetchAll(PDO::FETCH_ASSOC);","","  // Attach project info on each row for convenience","  foreach ($rows as &$r) {","    $r['project_id'] = $hdr['project_id'] ?? null;","    $r['indent_no']  = $hdr['indent_no']  ?? null;","  }","","  echo json_encode($rows);","} catch (Throwable $e) {","  http_response_code(500);","  echo json_encode([]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/req_wizard.php": ["<?php","/** PATH: /public_html/purchase/req_wizard.php"," * PURPOSE: Create or reuse an rm_requirement from a BOM, explode components to lines,"," *          then open (or create) the Plate Plan for that requirement."," */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/numbering.php';","","require_login();","$pdo = db();","","function h($s){ return htmlspecialchars((string)$s, ENT_QUOTES, 'UTF-8'); }","","/* ---------------- load recent BOMs for the picker ---------------- */","$boms = $pdo->query(\"","  SELECT b.id,","         CONCAT(COALESCE(b.bom_no, CONCAT('BOM-', b.id)),' \u2014 P:',COALESCE(pr.code,'')) AS label","  FROM bom b","  LEFT JOIN projects pr ON pr.id=b.project_id","  ORDER BY b.id DESC","  LIMIT 300","\")->fetchAll();","","/* ---------------- POST: create or reuse requirement ---------------- */","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  $bom_id    = isset($_POST['bom_id']) ? (int)$_POST['bom_id'] : 0;","  $needed_by = !empty($_POST['needed_by']) ? $_POST['needed_by'] : null;","  $force_new = isset($_POST['force_new']) && $_POST['force_new'] === '1';","","  // Validate BOM","  $bom = $pdo->prepare(\"SELECT * FROM bom WHERE id=?\");","  $bom->execute([$bom_id]);","  $B = $bom->fetch();","  if (!$B) {","    http_response_code(400);","    exit('BOM not found');","  }","","  // 1) Reuse existing requirement for this BOM (unless force_new)","  if (!$force_new) {","    $ex = $pdo->prepare(\"","      SELECT id FROM rm_requirements","      WHERE bom_id=? AND status IN ('draft','issued')","      ORDER BY id DESC","      LIMIT 1","    \");","    $ex->execute([$bom_id]);","    $existing_req_id = (int)($ex->fetchColumn() ?: 0);","    if ($existing_req_id) {","      header(\"Location: plate_plan_open.php?req_id=\" . $existing_req_id);","      exit;","    }","  }","","  // 2) Create a NEW requirement + explode components \u2192 lines (transaction, guarded)","  try {","    if (!$pdo->inTransaction()) { $pdo->beginTransaction(); }","","    // New requirement number (uses your numbering.php)","    $req_no = next_no('REQ');","","    // Insert requirement header (keeping your columns & defaults)","    $insReq = $pdo->prepare(\"","      INSERT INTO rm_requirements (req_no, project_id, bom_id, status, lot_qty, needed_by, created_at)","      VALUES (?, ?, ?, 'issued', 1, ?, NOW())","    \");","    $insReq->execute([","      $req_no,","      (int)($B['project_id'] ?? 0) ?: null,","      $bom_id,","      $needed_by","    ]);","    $req_id = (int)$pdo->lastInsertId();","","    // Fetch BOM components (use your existing columns)","    $comp = $pdo->prepare(\"","      SELECT id, item_id, span_id, uom_id, qty,","             length_mm, width_mm, thickness_mm, density_gcc, scrap_allow_pct,","             span_no, part_id, line_code, segment_idx,","             sort_order","      FROM bom_components","      WHERE bom_id=?","      ORDER BY COALESCE(sort_order, id)","    \");","    $comp->execute([$bom_id]);","","    // Prepare line insert (keeps your structure)","    $insLine = $pdo->prepare(\"","      INSERT INTO rm_requirement_lines","        (req_id, bom_component_id, item_id, proj_span_id,","         need_qty, need_uom_id, need_weight_kg, calc_detail, needed_by)","      VALUES (?,?,?,?, ?,?,?, ?,?)","    \");","","    // Explode each component \u2192 line","    while ($c = $comp->fetch()) {","      $qty = (float)($c['qty'] ?? 0);","      if ($qty <= 0) { $qty = 1.0; }","","      // per-piece kg if dims are known; using density_gcc (g/cc)","      $ppkg = (isset($c['length_mm'], $c['width_mm'], $c['thickness_mm']) &&","               $c['length_mm'] && $c['width_mm'] && $c['thickness_mm'])","        ? (($c['length_mm']/1000.0) * ($c['width_mm']/1000.0) * ($c['thickness_mm']/1000.0)","           * ((($c['density_gcc'] ?: 7.85) * 1000.0)))","        : null;","","      $scr = !empty($c['scrap_allow_pct']) ? (1.0 + ((float)$c['scrap_allow_pct'] / 100.0)) : 1.0;","      $line_kg = $ppkg ? round($ppkg * $qty * $scr, 3) : null;","","      // calc_detail JSON (Plate Plan will read Lmm/Wmm/Tmm/qty from here)","      $calc = [","        'Lmm'         => $c['length_mm'],","        'Wmm'         => $c['width_mm'],","        'Tmm'         => $c['thickness_mm'],","        'rho'         => $c['density_gcc'],","        'qty'         => $qty,","        'scrap_pct'   => $c['scrap_allow_pct'],","        'per_piece_kg'=> $ppkg,","        'line_kg'     => $line_kg,","        'span_no'     => $c['span_no'],","        'part_id'     => $c['part_id'],","        'line_code'   => $c['line_code'],","        'segment'     => $c['segment_idx']","      ];","","      $insLine->execute([","        $req_id,","        (int)$c['id'],","        (int)($c['item_id'] ?: 1),                              // keep your fallback","        (int)($c['span_id'] ?: 0) ?: null,                      // proj_span_id","        $qty,","        (int)($c['uom_id'] ?: 0) ?: null,","        $line_kg,","        json_encode($calc, JSON_UNESCAPED_UNICODE),","        $needed_by","      ]);","    }","","    if ($pdo->inTransaction()) { $pdo->commit(); }","","    header(\"Location: plate_plan_open.php?req_id=\" . $req_id);","    exit;","","  } catch (Throwable $e) {","    if ($pdo->inTransaction()) { $pdo->rollBack(); }","    http_response_code(500);","    echo \"Requirement creation failed: \" . h($e->getMessage());","    exit;","  }","}","","/* ---------------- GET: show form + recent requirements ---------------- */","$recent = $pdo->query(\"","  SELECT r.id, r.req_no, r.created_at, b.bom_no, pr.code AS pcode","  FROM rm_requirements r","  JOIN bom b ON b.id=r.bom_id","  LEFT JOIN projects pr ON pr.id=b.project_id","  WHERE r.status IN ('draft','issued')","  ORDER BY r.id DESC","  LIMIT 50","\")->fetchAll();","","include __DIR__ . '/../ui/layout_start.php'; ?>","<div class=\"container py-4\">","  <h3 class=\"mb-3\">Requirements Wizard</h3>","","  <form method=\"post\" class=\"row g-3\">","    <div class=\"col-md-6\">","      <label class=\"form-label\">BOM</label>","      <select name=\"bom_id\" class=\"form-select\" required>","        <option value=\"\">\u2014 Select \u2014</option>","        <?php foreach ($boms as $b): ?>","          <option value=\"<?= (int)$b['id'] ?>\"><?= h($b['label']) ?></option>","        <?php endforeach; ?>","      </select>","      <div class=\"form-text\">","        If a requirement already exists for this BOM, we\u2019ll reuse it (unless you force a new one).","      </div>","    </div>","","    <div class=\"col-md-3\">","      <label class=\"form-label\">Needed By</label>","      <input type=\"date\" name=\"needed_by\" class=\"form-control\">","    </div>","","    <div class=\"col-md-3 d-flex align-items-end\">","      <div class=\"form-check\">","        <input class=\"form-check-input\" type=\"checkbox\" name=\"force_new\" id=\"force_new\" value=\"1\">","        <label class=\"form-check-label\" for=\"force_new\">Create a new requirement (don\u2019t reuse)</label>","      </div>","    </div>","","    <div class=\"col-12\">","      <button class=\"btn btn-primary\">Proceed</button>","    </div>","  </form>","","  <hr class=\"my-4\">","","  <h6>Recent open requirements</h6>","  <div class=\"table-responsive\">","    <table class=\"table table-sm align-middle\">","      <thead>","        <tr>","          <th>Req No</th>","          <th>BOM</th>","          <th>Project</th>","          <th>Created</th>","          <th></th>","        </tr>","      </thead>","      <tbody>","        <?php if (!$recent): ?>","          <tr><td colspan=\"5\" class=\"text-muted\">None yet.</td></tr>","        <?php else: foreach ($recent as $r): ?>","          <tr>","            <td><?= h($r['req_no']) ?></td>","            <td><?= h($r['bom_no']) ?></td>","            <td><?= h((string)$r['pcode']) ?></td>","            <td><?= h((string)$r['created_at']) ?></td>","            <td class=\"text-end\">","              <a class=\"btn btn-sm btn-outline-primary\" href=\"plate_plan_open.php?req_id=<?= (int)$r['id'] ?>\">Open Plate Plan</a>","            </td>","          </tr>","        <?php endforeach; endif; ?>","      </tbody>","    </table>","  </div>","</div>","<?php include __DIR__ . '/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/quotes_form.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","require_once __DIR__.'/quote_seq.php';","","require_login();","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$id = (int)($_GET['id'] ?? 0);","$is_edit = $id > 0;","if ($is_edit) require_permission('purchase.quote.view'); else require_permission('purchase.quote.manage');","","$hdr = [","  'quote_no'=>'','inquiry_id'=>'','supplier_id'=>'','party_id'=>'',","  'quote_date'=>date('Y-m-d'),'currency'=>'INR','tax_inclusive'=>1,","  'remarks'=>'','status'=>'draft',","  'total_before_tax'=>0,'total_tax'=>0,'total_after_tax'=>0","];","$lines=[]; $meta=[];","$form_error = '';","","/* Load KG UOM id (preferred for RMI pricing) */","$kgUomId = (int)($pdo->query(\"SELECT id FROM uom WHERE code IN ('KG','kg','Kg') ORDER BY FIELD(code,'KG','kg','Kg') LIMIT 1\")->fetchColumn() ?: 0);","","/* Load for edit */","if ($is_edit) {","  $st=$pdo->prepare(\"SELECT * FROM inquiry_quotes WHERE id=?\");","  $st->execute([$id]);","  if ($r=$st->fetch(PDO::FETCH_ASSOC)) $hdr=array_merge($hdr,$r);","","  $st=$pdo->prepare(\"SELECT i.inquiry_no, i.status AS inquiry_status, p.name AS supplier_name","                     FROM inquiry_quotes iq","                     JOIN inquiries i ON i.id=iq.inquiry_id","                     LEFT JOIN parties p ON p.id=iq.supplier_id","                     WHERE iq.id=?\");","  $st->execute([$id]); $meta=$st->fetch(PDO::FETCH_ASSOC) ?: [];","","  // Existing CI lines","  $ci = $pdo->prepare(\"","    SELECT iqi.*, ii.item_id, ii.qty, ii.uom_id, u.code AS uom_code,","           CONCAT(it.material_code,' \u2014 ',it.name) AS item_label,","           'CI' AS _src, ii.id AS _key_id","    FROM inquiry_quote_items iqi","    JOIN inquiry_items ii ON ii.id=iqi.inquiry_item_id","    JOIN uom u ON u.id=ii.uom_id","    JOIN items it ON it.id=ii.item_id","    WHERE iqi.quote_id=? AND (iqi.src IS NULL OR iqi.src='CI')","    ORDER BY iqi.id","  \");","  $ci->execute([$id]);","  $Lci = $ci->fetchAll(PDO::FETCH_ASSOC);","","  // Existing RMI lines","  $rm = $pdo->prepare(\"","    SELECT iqi.*, il.item_id, il.qty, il.qty_uom_id AS uom_id, il.weight_kg, u.code AS uom_code,","           COALESCE(il.description, CONCAT('Raw Material Line #',il.id)) AS item_label,","           'RMI' AS _src, il.id AS _key_id","    FROM inquiry_quote_items iqi","    JOIN inquiry_lines il ON il.id=iqi.inquiry_line_id","    LEFT JOIN uom u ON u.id=il.qty_uom_id","    WHERE iqi.quote_id=? AND iqi.src='RMI'","    ORDER BY iqi.id","  \");","  $rm->execute([$id]);","  $Lrm = $rm->fetchAll(PDO::FETCH_ASSOC);","","  $lines = array_merge($Lci,$Lrm);","}","","/* Inquiry picker \u2013 show both Draft + Issued so lines appear; but saving requires Issued */","$inq_all = $pdo->query(\"","  SELECT id, inquiry_no, status","  FROM inquiries","  WHERE status IN ('draft','issued')","  ORDER BY id DESC","  LIMIT 300","\")->fetchAll(PDO::FETCH_ASSOC);","","$inq_id_param = (int)($_GET['inquiry_id'] ?? 0);","","/* SAVE */","if ($_SERVER['REQUEST_METHOD']==='POST' && ($_POST['_action']??'')==='save') {","  require_permission('purchase.quote.manage');","","  // Lock state","  $currently_locked = false;","  if ($is_edit) {","    $cur = $pdo->prepare(\"SELECT inquiry_id, supplier_id, status FROM inquiry_quotes WHERE id=?\");","    $cur->execute([$id]);","    $curRow = $cur->fetch(PDO::FETCH_ASSOC);","    if (!$curRow) { $form_error='Quote not found.'; }","    $currently_locked = (($curRow['status'] ?? '') === 'locked');","  }","","  $inquiry_id  = (int)($_POST['inquiry_id'] ?? ($hdr['inquiry_id'] ?? 0));","  $supplier_id = (int)($_POST['supplier_id'] ?? ($hdr['supplier_id'] ?? 0));","  $quote_date  = $_POST['quote_date'] ?: date('Y-m-d');","  $currency    = $_POST['currency'] ?: 'INR';","  $tax_incl    = isset($_POST['tax_inclusive']) ? 1 : 0;","  $remarks     = trim($_POST['remarks'] ?? '');","","  // Require issued before saving","  $st=$pdo->prepare(\"SELECT status FROM inquiries WHERE id=?\");","  $st->execute([$inquiry_id]);","  $inq_status = (string)$st->fetchColumn();","  if ($inq_status!=='issued') {","    $form_error = 'This Inquiry is not issued yet. Please issue the Inquiry before saving the quote.';","  }","","  // Supplier must belong to inquiry","  if (!$form_error) {","    $st=$pdo->prepare(\"SELECT 1 FROM inquiry_suppliers WHERE inquiry_id=? AND party_id=?\");","    $st->execute([$inquiry_id,$supplier_id]);","    if (!$st->fetch()) $form_error = 'Selected supplier is not attached to this Inquiry.';","  }","","  // Authoritative CI and RMI maps (RMI includes weight_kg)","  $ci_map=$rm_map=[];","  if (!$form_error) {","    $stm=$pdo->prepare(\"SELECT id, item_id, qty, uom_id FROM inquiry_items WHERE inquiry_id=?\");","    $stm->execute([$inquiry_id]);","    while($r=$stm->fetch(PDO::FETCH_ASSOC)){","      $ci_map[(int)$r['id']] = [","        'item_id'=>(int)$r['item_id'],","        'qty'=>(float)$r['qty'],","        'uom_id'=>(int)$r['uom_id']","      ];","    }","    $stm=$pdo->prepare(\"SELECT id, item_id, qty, qty_uom_id, weight_kg FROM inquiry_lines WHERE inquiry_id=? AND (source_type IN ('RMI','GI') OR source_type IS NULL)\");","    $stm->execute([$inquiry_id]);","    while($r=$stm->fetch(PDO::FETCH_ASSOC)){","      $rm_map[(int)$r['id']] = [","        'item_id'=>(int)$r['item_id'],","        'qty_nos'=>(float)$r['qty'],","        'qty_uom_id'=>(int)($r['qty_uom_id'] ?? 0),","        'weight_kg'=>(float)($r['weight_kg'] ?? 0)","      ];","    }","  }","","  // Incoming lines payload","  $L = json_decode($_POST['lines_json'] ?? '[]', true) ?: [];","","  // Recalc totals (RMI uses weight_kg for pricing)","  $total_bt=0; $total_tax=0; $total_at=0;","  foreach ($L as &$ln) {","    $unit = (float)($ln['unit_price'] ?? 0);","    $disc = (float)($ln['discount_percent'] ?? 0);","    $taxp = (float)($ln['tax_percent'] ?? 0);","","    if (($ln['src'] ?? 'CI') === 'RMI') {","      $rid = (int)($ln['inquiry_line_id'] ?? 0);","      $qtykg = isset($rm_map[$rid]) ? (float)$rm_map[$rid]['weight_kg'] : 0.0;","      $gross = $qtykg * $unit;","    } else {","      $cid = (int)($ln['inquiry_item_id'] ?? 0);","      $qty = isset($ci_map[$cid]) ? (float)$ci_map[$cid]['qty'] : 0.0;","      $gross = $qty * $unit;","    }","","    $bt = $gross * (1 - $disc/100);","    $tax = $bt * ($taxp/100);","    $at  = $bt + $tax;","","    $ln['_bt']=$bt; $ln['_tax']=$tax; $ln['_at']=$at;","    $total_bt += $bt; $total_tax += $tax; $total_at += $at;","  } unset($ln);","","  if (!$form_error) {","    try{","      $pdo->beginTransaction();","","      if (!$is_edit) {","        $qt_no = next_quote_no();","        $pdo->prepare(\"INSERT INTO inquiry_quotes","          (quote_no,inquiry_id,party_id,supplier_id,quote_date,currency,tax_inclusive,total_before_tax,total_tax,total_after_tax,remarks,status,created_by)","          VALUES (?,?,?,?,?,?,?,?,?,?,?, 'draft', ?)\")","          ->execute([$qt_no,$inquiry_id,$supplier_id,$supplier_id,$quote_date,$currency,$tax_incl,$total_bt,$total_tax,$total_at,$remarks,current_user_id()]);","        $id = (int)$pdo->lastInsertId();","      } else {","        $cur_locked = (($hdr['status'] ?? '') === 'locked');","        if ($cur_locked) {","          $pdo->prepare(\"UPDATE inquiry_quotes SET remarks=? WHERE id=?\")->execute([$remarks,$id]);","        } else {","          $pdo->prepare(\"UPDATE inquiry_quotes","            SET inquiry_id=?, party_id=?, supplier_id=?, quote_date=?, currency=?, tax_inclusive=?, total_before_tax=?, total_tax=?, total_after_tax=?, remarks=?","            WHERE id=?\")","            ->execute([$inquiry_id,$supplier_id,$supplier_id,$quote_date,$currency,$tax_incl,$total_bt,$total_tax,$total_at,$remarks,$id]);","","          $pdo->prepare(\"DELETE FROM inquiry_quote_items WHERE quote_id=?\")->execute([$id]);","        }","      }","","      // Insert lines (if not locked). For RMI: qty = weight_kg, uom = KG","      $cur_locked = (($hdr['status'] ?? '') === 'locked');","      if (!$cur_locked) {","        $ins = $pdo->prepare(\"","          INSERT INTO inquiry_quote_items","            (quote_id, src, inquiry_item_id, inquiry_line_id, item_id, qty, uom_id,","             unit_price, discount_percent, tax_percent, delivery_days, remarks,","             line_total_before_tax, line_tax, line_total_after_tax, line_total)","          VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)","        \");","","        foreach ($L as $ln) {","          $src = (string)($ln['src'] ?? 'CI');","          if ($src==='RMI') {","            $lid = (int)($ln['inquiry_line_id'] ?? 0);","            if (!$lid || !isset($rm_map[$lid])) continue;","            $m = $rm_map[$lid];","            $qty_for_pricing = (float)$m['weight_kg'];","            $uom_for_pricing = $kgUomId ?: (int)$m['qty_uom_id'] ?: null;","","            $ins->execute([","              $id, 'RMI', null, $lid,","              (int)$m['item_id'],","              $qty_for_pricing,","              $uom_for_pricing,","              (float)($ln['unit_price'] ?? 0),","              (float)($ln['discount_percent'] ?? 0),","              (float)($ln['tax_percent'] ?? 0),","              !empty($ln['delivery_days'])?(int)$ln['delivery_days']:null,","              trim((string)($ln['remarks']??'')),","              (float)($ln['_bt'] ?? 0), (float)($ln['_tax'] ?? 0), (float)($ln['_at'] ?? 0),","              (float)($ln['_at'] ?? 0)","            ]);","          } else {","            $iid = (int)($ln['inquiry_item_id'] ?? 0);","            if (!$iid || !isset($ci_map[$iid])) continue;","            $m = $ci_map[$iid];","            $ins->execute([","              $id, 'CI', $iid, null,","              (int)$m['item_id'],","              (float)$m['qty'],","              (int)$m['uom_id'],","              (float)($ln['unit_price'] ?? 0),","              (float)($ln['discount_percent'] ?? 0),","              (float)($ln['tax_percent'] ?? 0),","              !empty($ln['delivery_days'])?(int)$ln['delivery_days']:null,","              trim((string)($ln['remarks']??'')),","              (float)($ln['_bt'] ?? 0), (float)($ln['_tax'] ?? 0), (float)($ln['_at'] ?? 0),","              (float)($ln['_at'] ?? 0)","            ]);","          }","        }","      }","","      $pdo->commit();","      header('Location: /purchase/quotes_list.php'); exit;","","    } catch(Throwable $e){","      if ($pdo->inTransaction()) $pdo->rollBack();","      $form_error = 'Save failed: '.$e->getMessage();","    }","  }","}","","/* Determine selected inquiry & suppliers */","$selected_inquiry_id = $is_edit ? (int)$hdr['inquiry_id'] : ($inq_id_param ?: 0);","$selected_inquiry_status = '';","if ($selected_inquiry_id) {","  $st=$pdo->prepare(\"SELECT status FROM inquiries WHERE id=?\");","  $st->execute([$selected_inquiry_id]);","  $selected_inquiry_status = (string)$st->fetchColumn();","}","","$suppliers_for_inquiry=[];","if ($selected_inquiry_id) {","  $st=$pdo->prepare(\"SELECT s.party_id AS supplier_id, p.code, p.name","                     FROM inquiry_suppliers s","                     JOIN parties p ON p.id=s.party_id","                     WHERE s.inquiry_id=? ORDER BY p.name\");","  $st->execute([$selected_inquiry_id]); $suppliers_for_inquiry=$st->fetchAll(PDO::FETCH_ASSOC);","}","","/* Inquiry lines (read-only source) */","$inq_ci=[]; $inq_rm=[];","if ($selected_inquiry_id) {","  $st=$pdo->prepare(\"SELECT ii.id AS inquiry_item_id, ii.item_id, ii.qty, ii.uom_id, u.code AS uom_code,","                            CONCAT(it.material_code,' \u2014 ',it.name) AS item_label","                     FROM inquiry_items ii","                     JOIN items it ON it.id=ii.item_id","                     JOIN uom u ON u.id=ii.uom_id","                     WHERE ii.inquiry_id=? ORDER BY ii.id\");","  $st->execute([$selected_inquiry_id]); $inq_ci=$st->fetchAll(PDO::FETCH_ASSOC);","","  $st=$pdo->prepare(\"SELECT il.id AS inquiry_line_id, il.item_id, il.qty, il.qty_uom_id AS uom_id,","                            il.weight_kg, u.code AS uom_code,","                            COALESCE(il.description, CONCAT('Raw Material Line #',il.id)) AS item_label","                     FROM inquiry_lines il","                     LEFT JOIN uom u ON u.id=il.qty_uom_id","                     WHERE il.inquiry_id=? AND (il.source_type IN ('RMI','GI') OR il.source_type IS NULL)","                     ORDER BY il.id\");","  $st->execute([$selected_inquiry_id]); $inq_rm=$st->fetchAll(PDO::FETCH_ASSOC);","}","","$is_locked = ($hdr['status'] ?? '') === 'locked';","","include __DIR__.'/../ui/layout_start.php';","?>","<div class=\"container py-4\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h1 class=\"h4 mb-0\"><?= $is_edit?'Edit Quote':'New Quote' ?></h1>","    <?php if($is_locked): ?><span class=\"badge bg-success\">Selected (locked)</span><?php endif; ?>","  </div>","","  <?php if ($form_error): ?>","    <div class=\"alert alert-danger\"><?= htmlspecialchars($form_error) ?></div>","  <?php elseif ($selected_inquiry_id && $selected_inquiry_status!=='issued'): ?>","    <div class=\"alert alert-warning\">","      Inquiry is <strong><?=htmlspecialchars($selected_inquiry_status)?></strong>. You can view lines,","      but you must <strong>Issue</strong> the Inquiry before saving a quote.","    </div>","  <?php endif; ?>","","  <form method=\"post\" class=\"card shadow-sm p-3\" id=\"qForm\">","    <input type=\"hidden\" name=\"_action\" value=\"save\">","    <input type=\"hidden\" name=\"lines_json\" id=\"lines_json\">","","    <div class=\"row g-3\">","      <div class=\"col-md-2\">","        <label class=\"form-label\">Quote No</label>","        <input class=\"form-control\" value=\"<?=htmlspecialchars($hdr['quote_no']??'')?>\" disabled>","      </div>","","      <div class=\"col-md-4\">","        <label class=\"form-label\">Inquiry</label>","        <select name=\"inquiry_id\" id=\"inquiry_id\" class=\"form-select\" <?= $is_edit?'disabled':''?>>","          <option value=\"\">\u2014 Choose Inquiry \u2014</option>","          <optgroup label=\"Issued\">","            <?php foreach($inq_all as $i): if ($i['status']==='issued'): ?>","              <option value=\"<?=$i['id']?>\" <?=($selected_inquiry_id==$i['id'])?'selected':''?>><?=htmlspecialchars($i['inquiry_no'])?> (issued)</option>","            <?php endif; endforeach; ?>","          </optgroup>","          <optgroup label=\"Draft\">","            <?php foreach($inq_all as $i): if ($i['status']==='draft'): ?>","              <option value=\"<?=$i['id']?>\" <?=($selected_inquiry_id==$i['id'])?'selected':''?>><?=htmlspecialchars($i['inquiry_no'])?> (draft)</option>","            <?php endif; endforeach; ?>","          </optgroup>","        </select>","        <?php if ($is_edit): ?><input type=\"hidden\" name=\"inquiry_id\" value=\"<?= (int)$selected_inquiry_id ?>\"><?php endif; ?>","      </div>","","      <div class=\"col-md-3\">","        <label class=\"form-label\">Supplier</label>","        <select name=\"supplier_id\" id=\"supplier_id\" class=\"form-select\" required <?= $is_locked?'disabled':''?>>","          <option value=\"\"><?= $suppliers_for_inquiry ? '\u2014' : 'No suppliers attached to this inquiry' ?></option>","          <?php foreach($suppliers_for_inquiry as $s): ?>","            <option value=\"<?=$s['supplier_id']?>\" <?=($hdr['supplier_id']??0)==$s['supplier_id']?'selected':''?>>","              <?=htmlspecialchars(($s['code']?'['.$s['code'].'] ':'').$s['name'])?>","            </option>","          <?php endforeach; ?>","        </select>","        <?php if ($is_locked): ?><input type=\"hidden\" name=\"supplier_id\" value=\"<?= (int)($hdr['supplier_id'] ?? 0) ?>\"><?php endif; ?>","      </div>","","      <div class=\"col-md-3\"><label class=\"form-label\">Quote Date</label>","        <input type=\"date\" name=\"quote_date\" class=\"form-control\" value=\"<?=htmlspecialchars($hdr['quote_date'])?>\" <?= $is_locked?'disabled':'' ?>></div>","      <div class=\"col-md-2\"><label class=\"form-label\">Currency</label>","        <input name=\"currency\" class=\"form-control\" value=\"<?=htmlspecialchars($hdr['currency'])?>\" <?= $is_locked?'disabled':'' ?>></div>","      <div class=\"col-md-2\">","        <div class=\"form-check mt-4\">","          <input class=\"form-check-input\" type=\"checkbox\" name=\"tax_inclusive\" value=\"1\" <?=($hdr['tax_inclusive']??1)?'checked':''?> <?= $is_locked?'disabled':''?>>","          <label class=\"form-check-label\">Tax Inclusive</label>","        </div>","      </div>","      <div class=\"col-md-10\"><label class=\"form-label\">Remarks</label>","        <input name=\"remarks\" class=\"form-control\" value=\"<?=htmlspecialchars($hdr['remarks']??'')?>\"></div>","    </div>","","    <hr class=\"my-4\">","","    <h5 class=\"mb-2\">Lines (from Inquiry)</h5>","    <?php if (!$selected_inquiry_id): ?>","      <div class=\"alert alert-info\">Choose an Inquiry above to load its lines.</div>","    <?php endif; ?>","    <div id=\"linesWrap\" class=\"mb-2\"></div>","","    <div class=\"mt-3 d-flex gap-3\">","      <div><strong>Total (Before Tax): </strong><span id=\"tot_bt\"><?= number_format((float)$hdr['total_before_tax'], 2, '.', '') ?></span></div>","      <div><strong>Tax: </strong><span id=\"tot_tax\"><?= number_format((float)$hdr['total_tax'], 2, '.', '') ?></span></div>","      <div><strong>Total (After Tax): </strong><span id=\"tot_at\"><?= number_format((float)$hdr['total_after_tax'], 2, '.', '') ?></span></div>","    </div>","","    <div class=\"mt-4 d-flex gap-2\">","      <button class=\"btn btn-primary\" type=\"submit\" <?= $is_locked?'disabled':''?>>Save</button>","      <a class=\"btn btn-outline-secondary\" href=\"/purchase/quotes_list.php\">Back</a>","    </div>","  </form>","</div>","","<script>","document.addEventListener('DOMContentLoaded', ()=>{","  const isLocked = <?= json_encode($is_locked) ?>;","","  const CI = <?= json_encode(array_map(fn($r)=>[","    'src'=>'CI',","    'inquiry_item_id'=>(int)$r['inquiry_item_id'],","    'key'=>'CI:'.((int)$r['inquiry_item_id']),","    'item_label'=>$r['item_label'],","    'qty'=>(float)$r['qty'],","    'uom_code'=>$r['uom_code']","  ], $inq_ci)) ?>;","","  const RMI = <?= json_encode(array_map(fn($r)=>[","    'src'=>'RMI',","    'inquiry_line_id'=>(int)$r['inquiry_line_id'],","    'key'=>'RMI:'.((int)$r['inquiry_line_id']),","    'item_label'=>$r['item_label'],","    'qty_nos'=>(float)$r['qty'],","    'uom_code'=>($r['uom_code'] ?? ''),      // likely NOS","    'weight_kg'=>(float)($r['weight_kg'] ?? 0)","  ], $inq_rm)) ?>;","","  const inqLines = [...CI, ...RMI];","","  // Existing quote lines (only for edit)","  const existing = <?= json_encode(array_map(function($r){","    $src = $r['_src'] ?? ($r['src'] ?? 'CI');","    $kid = (int)($r['_key_id'] ?? 0);","    return [","      'key' => $src.':'.$kid,","      'unit_price' => $r['unit_price'],","      'discount_percent' => $r['discount_percent'],","      'tax_percent' => $r['tax_percent'],","      'delivery_days' => $r['delivery_days'],","      'remarks' => $r['remarks']","    ];","  }, $lines)) ?>;","  const exMap = Object.fromEntries(existing.map(x => [String(x.key), x]));","","  const wrap = document.getElementById('linesWrap');","  const totBt = document.getElementById('tot_bt');","  const totTax = document.getElementById('tot_tax');","  const totAt = document.getElementById('tot_at');","","  function money(n){ return (Math.round((n + Number.EPSILON) * 100)/100).toFixed(2); }","  function n(v,def=0){ const x=parseFloat(v); return Number.isFinite(x)?x:def; }","  function esc(s){ return String(s??'').replaceAll('\"','&quot;'); }","","  function mkRow(L){","    const ex = exMap[String(L.key)] || {};","    const isRMI = (L.src === 'RMI');","","    const d = {","      src: L.src,","      key: L.key,","      label: L.item_label,","      qty: L.qty ?? 0,                 // CI only","      uom_code: L.uom_code || '',","      qty_nos: L.qty_nos ?? 0,         // RMI only (Nos)","      weight_kg: L.weight_kg ?? 0,     // RMI only (pricing qty)","      unit_price: ex.unit_price ?? '',","      discount_percent: ex.discount_percent ?? '0',","      tax_percent: ex.tax_percent ?? '18',","      delivery_days: ex.delivery_days ?? '',","      remarks: ex.remarks ?? ''","    };","","    const dis = isLocked ? 'disabled' : '';","    const el = document.createElement('div');","    el.className = 'row g-2 align-items-end mb-2 border rounded p-2 q-line';","","    if (isRMI) {","      // Raw material: show Nos + Weight KG, rate per KG (use weight for math)","      el.innerHTML = `","        <div class=\"col-md-4\">","          <label class=\"form-label\">Item (RMI)</label>","          <input class=\"form-control\" value=\"${esc(d.label)}\" disabled>","          <input type=\"hidden\" class=\"ln_src\" value=\"RMI\">","          <input type=\"hidden\" class=\"ln_key\" value=\"${esc(d.key)}\">","        </div>","        <div class=\"col-md-2\">","          <label class=\"form-label\">Qty (Nos)</label>","          <input class=\"form-control ln_qty_nos\" value=\"${d.qty_nos}\" disabled>","        </div>","        <div class=\"col-md-1\">","          <label class=\"form-label\">UOM</label>","          <input class=\"form-control\" value=\"${esc(d.uom_code)}\" disabled>","        </div>","        <div class=\"col-md-2\">","          <label class=\"form-label\">Weight (KG)</label>","          <input class=\"form-control ln_qtykg\" value=\"${d.weight_kg}\" disabled>","        </div>","        <div class=\"col-md-2\">","          <label class=\"form-label\">Rate / KG</label>","          <input class=\"form-control ln_unit\" type=\"number\" step=\"0.000001\" value=\"${d.unit_price}\" ${dis}>","        </div>","        <div class=\"col-md-1\">","          <label class=\"form-label\">Line Total</label>","          <input class=\"form-control ln_total\" value=\"0.00\" disabled>","        </div>","        <div class=\"col-md-2\">","          <label class=\"form-label\">Disc %</label>","          <input class=\"form-control ln_disc\" type=\"number\" step=\"0.001\" value=\"${d.discount_percent}\" ${dis}>","        </div>","        <div class=\"col-md-2\">","          <label class=\"form-label\">Tax %</label>","          <input class=\"form-control ln_taxp\" type=\"number\" step=\"0.001\" value=\"${d.tax_percent}\" ${dis}>","        </div>","        <div class=\"col-md-2\">","          <label class=\"form-label\">Days</label>","          <input class=\"form-control ln_days\" type=\"number\" step=\"1\" value=\"${d.delivery_days}\" ${dis}>","        </div>","        <div class=\"col-md-12\">","          <input class=\"form-control ln_remarks\" placeholder=\"Remarks\" value=\"${esc(d.remarks)}\" ${dis}>","        </div>","      `;","    } else {","      // Consumable: standard qty \u00d7 unit","      el.innerHTML = `","        <div class=\"col-md-4\">","          <label class=\"form-label\">Item (CI)</label>","          <input class=\"form-control\" value=\"${esc(d.label)}\" disabled>","          <input type=\"hidden\" class=\"ln_src\" value=\"CI\">","          <input type=\"hidden\" class=\"ln_key\" value=\"${esc(d.key)}\">","        </div>","        <div class=\"col-md-1\">","          <label class=\"form-label\">Qty</label>","          <input class=\"form-control ln_qty\" value=\"${d.qty}\" disabled>","        </div>","        <div class=\"col-md-1\">","          <label class=\"form-label\">UOM</label>","          <input class=\"form-control\" value=\"${esc(d.uom_code)}\" disabled>","        </div>","        <div class=\"col-md-2\">","          <label class=\"form-label\">Unit Price</label>","          <input class=\"form-control ln_unit\" type=\"number\" step=\"0.000001\" value=\"${d.unit_price}\" ${dis}>","        </div>","        <div class=\"col-md-1\">","          <label class=\"form-label\">Disc %</label>","          <input class=\"form-control ln_disc\" type=\"number\" step=\"0.001\" value=\"${d.discount_percent}\" ${dis}>","        </div>","        <div class=\"col-md-1\">","          <label class=\"form-label\">Tax %</label>","          <input class=\"form-control ln_taxp\" type=\"number\" step=\"0.001\" value=\"${d.tax_percent}\" ${dis}>","        </div>","        <div class=\"col-md-1\">","          <label class=\"form-label\">Days</label>","          <input class=\"form-control ln_days\" type=\"number\" step=\"1\" value=\"${d.delivery_days}\" ${dis}>","        </div>","        <div class=\"col-md-1\">","          <label class=\"form-label\">Line Total</label>","          <input class=\"form-control ln_total\" value=\"0.00\" disabled>","        </div>","        <div class=\"col-md-12\">","          <input class=\"form-control ln_remarks\" placeholder=\"Remarks\" value=\"${esc(d.remarks)}\" ${dis}>","        </div>","      `;","    }","","    if (!isLocked) {","      ['ln_unit','ln_disc','ln_taxp','ln_days'].forEach(k=>{","        const node = el.querySelector('.'+k);","        if (node) node.addEventListener('input', recalcAll);","      });","    }","    return el;","  }","","  if (inqLines.length === 0 && <?= (int)$selected_inquiry_id ?: 0 ?> > 0) {","    const alert = document.createElement('div');","    alert.className = 'alert alert-info';","    alert.textContent = 'No lines found in this Inquiry.';","    wrap.appendChild(alert);","  } else {","    inqLines.forEach(s => wrap.appendChild(mkRow(s)));","  }","","  function recalcAll(){","    if (isLocked) return;","    let bt=0, tax=0, at=0;","    wrap.querySelectorAll('.q-line').forEach(r=>{","      const isRMI = (r.querySelector('.ln_src').value === 'RMI');","      const unit = n(r.querySelector('.ln_unit').value,0);","      const disc = n(r.querySelector('.ln_disc').value,0);","      const taxp = n(r.querySelector('.ln_taxp').value,0);","","      let baseQty = 0;","      if (isRMI) {","        baseQty = n(r.querySelector('.ln_qtykg').value,0);     // weight in KG","      } else {","        baseQty = n(r.querySelector('.ln_qty').value,0);       // qty for CI","      }","","      const gross=baseQty*unit;","      const b=gross*(1-disc/100);","      const t=b*(taxp/100);","      const a=b+t;","      bt+=b; tax+=t; at+=a;","      r.querySelector('.ln_total').value = money(a);","    });","    totBt.textContent=money(bt);","    totTax.textContent=money(tax);","    totAt.textContent=money(at);","  }","  if (!isLocked) recalcAll();","","  // Serialize lines","  document.getElementById('qForm').addEventListener('submit', ()=>{","    if (isLocked) { document.getElementById('lines_json').value = '[]'; return; }","    const out=[];","    wrap.querySelectorAll('.q-line').forEach(r=>{","      const src = String(r.querySelector('.ln_src').value||'CI');","      const key = String(r.querySelector('.ln_key').value||'');","      const id  = Number(key.split(':')[1]||0);","      out.push({","        src,","        inquiry_item_id: src==='CI' ? id : 0,","        inquiry_line_id: src==='RMI'? id : 0,","        unit_price: parseFloat(r.querySelector('.ln_unit').value||'0')||0,","        discount_percent: parseFloat(r.querySelector('.ln_disc').value||'0')||0,","        tax_percent: parseFloat(r.querySelector('.ln_taxp').value||'0')||0,","        delivery_days: parseInt(r.querySelector('.ln_days').value||'0')||0,","        remarks: (r.querySelector('.ln_remarks').value||'').trim()","      });","    });","    document.getElementById('lines_json').value = JSON.stringify(out);","  });","","  // Change inquiry (new quote)","  const inqSel = document.getElementById('inquiry_id');","  if (inqSel && !<?= json_encode($is_edit) ?>) {","    inqSel.addEventListener('change', ()=>{","      const v = inqSel.value || '';","      if (!v) return;","      window.location = '/purchase/quotes_form.php?inquiry_id='+encodeURIComponent(v);","    });","  }","});","</script>","<?php include __DIR__.'/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/po_form.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","","require_login();","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","/** Helpers for column-aware attachment handling (MariaDB-safe) */","function col_exists(PDO $pdo, string $table, string $col): bool {","  $sql = \"SELECT 1","            FROM information_schema.COLUMNS","           WHERE TABLE_SCHEMA = DATABASE()","             AND TABLE_NAME = ?","             AND COLUMN_NAME = ?","           LIMIT 1\";","  $st = $pdo->prepare($sql);","  $st->execute([$table, $col]);","  return (bool)$st->fetchColumn();","}","function first_existing(PDO $pdo, string $table, array $candidates): string {","  foreach ($candidates as $c) if ($c && col_exists($pdo,$table,$c)) return $c;","  return '';","}","","$id = (int)($_GET['id'] ?? 0);","if ($id<=0){ http_response_code(400); echo \"Missing id\"; exit; }","","/** Header (supplier + project) */","$st=$pdo->prepare(\"","  SELECT po.*, p.name AS supplier_name, pr.code AS project_code, pr.name AS project_name","  FROM purchase_orders po","  LEFT JOIN parties  p  ON p.id=po.supplier_id","  LEFT JOIN projects pr ON pr.id=po.project_id","  WHERE po.id=?\");","$st->execute([$id]); $po=$st->fetch(PDO::FETCH_ASSOC);","if(!$po){ http_response_code(404); echo \"PO not found\"; exit; }","","/** Actions */","if ($_SERVER['REQUEST_METHOD']==='POST' && ($_POST['_action']??'')==='issue') {","  require_permission('purchase.po.issue');","  $pdo->prepare(\"UPDATE purchase_orders SET status='issued' WHERE id=?\")->execute([$id]);","  header('Location: /purchase/po_form.php?id='.$id); exit;","}","if ($_SERVER['REQUEST_METHOD']==='POST' && ($_POST['_action']??'')==='save_terms') {","  require_permission('purchase.po.manage');","  $delivery = trim((string)($_POST['delivery_terms'] ?? ''));","  $payment  = trim((string)($_POST['payment_terms'] ?? ''));","  $freight  = trim((string)($_POST['freight_terms'] ?? ''));","  $pdo->prepare(\"UPDATE purchase_orders SET delivery_terms=?, payment_terms=?, freight_terms=? WHERE id=?\")","      ->execute([$delivery ?: null, $payment ?: null, $freight ?: null, $id]);","  header('Location: /purchase/po_form.php?id='.$id); exit;","}","","/** Lines (LEFT JOIN so rows always render) */","$qLines=$pdo->prepare(\"SELECT li.*,","                              it.material_code, it.name AS item_name,","                              u.code AS uom_code","                       FROM purchase_order_items li","                       LEFT JOIN items it ON it.id = li.item_id","                       LEFT JOIN uom   u  ON u.id  = li.uom_id","                       WHERE li.po_id=?","                       ORDER BY li.id\");","$qLines->execute([$id]); ","$lines=$qLines->fetchAll(PDO::FETCH_ASSOC);","","/** Attachments: detect actual columns and only select present ones */","$attTable = 'attachments';","$pathCol  = first_existing($pdo,$attTable, ['path','file_path','filepath','url']);                   // optional","$nameCol  = first_existing($pdo,$attTable, ['original_name','filename','name']);                     // optional (fallback to #id)","$mimeCol  = first_existing($pdo,$attTable, ['mime','mime_type','content_type']);                    // optional","$sizeCol  = first_existing($pdo,$attTable, ['size','bytes','file_size']);                           // optional","$timeCol  = first_existing($pdo,$attTable, ['uploaded_at','created_at','createdOn','created_on']); // optional","","$cols = [\"a.id\"];","if ($nameCol) $cols[] = \"a.`$nameCol` AS original_name\";","if ($pathCol) $cols[] = \"a.`$pathCol` AS path\";","if ($mimeCol) $cols[] = \"a.`$mimeCol` AS mime\";","if ($sizeCol) $cols[] = \"a.`$sizeCol` AS size\";","if ($timeCol) $cols[] = \"a.`$timeCol` AS uploaded_at\";","$selectCols = implode(\", \", $cols);","","$attachments = [];","if ($selectCols !== \"a.id\") {","  $att=$pdo->prepare(\"","    SELECT $selectCols","    FROM attachment_links al","    JOIN attachments a ON a.id = al.attachment_id","    WHERE al.entity_type='purchase_order' AND al.entity_id=?","    ORDER BY a.id DESC\");","  $att->execute([$id]); ","  $attachments=$att->fetchAll(PDO::FETCH_ASSOC);","}","","function badge_for_status(string $s): string {","  return match($s){","    'issued'   => 'success',","    'approved' => 'primary',","    'cancelled'=> 'danger',","    'closed'   => 'dark',","    default    => 'secondary'","  };","}","","include __DIR__.'/../ui/layout_start.php';","?>","<div class=\"container py-4\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h1 class=\"h4 mb-0\">Purchase Order \u2014 <?=htmlspecialchars((string)$po['po_no'])?></h1>","    <div class=\"d-flex gap-2\">","      <a class=\"btn btn-outline-secondary btn-sm\" href=\"/purchase/po_list.php\">Back</a>","      <a class=\"btn btn-outline-dark btn-sm\" target=\"_blank\" href=\"/purchase/po_print.php?id=<?=$id?>\">Print</a>","      <a class=\"btn btn-outline-secondary btn-sm\" target=\"_blank\" href=\"/purchase/po_pdf.php?id=<?=$id?>\">PDF</a>","      <?php if ($po['status']==='draft'): ?>","        <form method=\"post\" onsubmit=\"return confirm('Issue this PO?');\">","          <input type=\"hidden\" name=\"_action\" value=\"issue\">","          <button class=\"btn btn-primary btn-sm\">Issue</button>","        </form>","      <?php endif; ?>","    </div>","  </div>","","  <!-- Summary -->","  <div class=\"card mb-3 shadow-sm\">","    <div class=\"card-body\">","      <div class=\"row g-3\">","        <div class=\"col-md-3\"><strong>Supplier</strong><br><?=htmlspecialchars((string)($po['supplier_name']??''))?></div>","        <div class=\"col-md-2\"><strong>Date</strong><br><?=htmlspecialchars((string)$po['po_date'])?></div>","        <div class=\"col-md-2\"><strong>Status</strong><br><span class=\"badge bg-<?= badge_for_status((string)$po['status']) ?>\"><?=htmlspecialchars((string)$po['status'])?></span></div>","        <div class=\"col-md-2\"><strong>Currency</strong><br><?=htmlspecialchars((string)$po['currency'])?></div>","        <div class=\"col-md-3\"><strong>Inquiry Ref</strong><br>#<?= (int)$po['inquiry_id'] ?></div>","      </div>","      <div class=\"row g-3 mt-1\">","        <div class=\"col-md-6\">","          <strong>Project</strong><br>","          <?=htmlspecialchars((string)($po['project_code'] ?? ''))?>","          <?php if (!empty($po['project_name'])): ?>","            \u2014 <span class=\"text-muted\"><?=htmlspecialchars((string)$po['project_name'])?></span>","          <?php endif; ?>","        </div>","        <div class=\"col-md-6\">","          <strong>GST Inclusive</strong><br><?=((int)$po['gst_inclusive']===1 ? 'Yes' : 'No')?>","        </div>","      </div>","    </div>","  </div>","","  <!-- ITEMS TABLE -->","  <div class=\"table-responsive mb-3\">","    <table class=\"table table-striped align-middle\">","      <thead><tr>","        <th>Item</th>","        <th class=\"text-end\">Qty</th>","        <th>UOM</th>","        <th class=\"text-end\">Unit</th>","        <th class=\"text-end\">Disc %</th>","        <th class=\"text-end\">Tax %</th>","        <th class=\"text-end\">Line Total</th>","      </tr></thead>","      <tbody>","        <?php foreach($lines as $ln): ?>","          <tr>","            <td><?=htmlspecialchars((string)(($ln['material_code'] ?? '').' \u2014 '.($ln['item_name'] ?? ''))) ?></td>","            <td class=\"text-end\"><?= number_format((float)($ln['qty'] ?? 0), 3) ?></td>","            <td><?=htmlspecialchars((string)($ln['uom_code'] ?? ''))?></td>","            <td class=\"text-end\"><?= number_format((float)($ln['unit_price'] ?? 0), 2) ?></td>","            <td class=\"text-end\"><?= number_format((float)($ln['discount_percent'] ?? 0), 2) ?></td>","            <td class=\"text-end\"><?= number_format((float)($ln['tax_percent'] ?? 0), 2) ?></td>","            <td class=\"text-end\"><?= number_format((float)($ln['line_total_after_tax'] ?? 0), 2) ?></td>","          </tr>","        <?php endforeach; ?>","        <?php if (!$lines): ?>","          <tr><td colspan=\"7\" class=\"text-center text-muted\">No lines</td></tr>","        <?php endif; ?>","      </tbody>","      <tfoot>","        <tr><th colspan=\"6\" class=\"text-end\">Subtotal</th><th class=\"text-end\"><?= number_format((float)($po['total_before_tax'] ?? 0), 2) ?></th></tr>","        <tr><th colspan=\"6\" class=\"text-end\">Tax</th><th class=\"text-end\"><?= number_format((float)($po['total_tax'] ?? 0), 2) ?></th></tr>","        <tr><th colspan=\"6\" class=\"text-end\">Total</th><th class=\"text-end\"><?= number_format((float)($po['total_after_tax'] ?? 0), 2) ?></th></tr>","      </tfoot>","    </table>","  </div>","","  <!-- COMMERCIAL TERMS -->","  <div class=\"card mb-3\">","    <div class=\"card-header py-2 d-flex justify-content-between align-items-center\">","      <strong>Commercial Terms</strong>","      <span class=\"text-muted small\">Payment, Transport/Freight, Delivery</span>","    </div>","    <div class=\"card-body\">","      <form method=\"post\" class=\"row g-3\">","        <input type=\"hidden\" name=\"_action\" value=\"save_terms\">","        <div class=\"col-md-4\">","          <label class=\"form-label\">Payment Terms</label>","          <input class=\"form-control\" name=\"payment_terms\" value=\"<?=htmlspecialchars((string)($po['payment_terms'] ?? ''))?>\" placeholder=\"e.g. 30% advance, 70% against delivery\">","        </div>","        <div class=\"col-md-4\">","          <label class=\"form-label\">Transport / Freight Terms</label>","          <input class=\"form-control\" name=\"freight_terms\" value=\"<?=htmlspecialchars((string)($po['freight_terms'] ?? ''))?>\" placeholder=\"e.g. Ex-works / To-Pay / CIF site\">","        </div>","        <div class=\"col-md-4\">","          <label class=\"form-label\">Delivery Terms</label>","          <input class=\"form-control\" name=\"delivery_terms\" value=\"<?=htmlspecialchars((string)($po['delivery_terms'] ?? ''))?>\" placeholder=\"e.g. 10\u201312 days from PO\">","        </div>","        <div class=\"col-12\">","          <button class=\"btn btn-outline-primary\">Save Terms</button>","        </div>","      </form>","    </div>","  </div>","","  <!-- ATTACHMENTS CARD (separate table) -->","  <div class=\"card\">","    <div class=\"card-header py-2 d-flex justify-content-between align-items-center\">","      <strong>Attachments</strong>","      <span class=\"text-muted small\">Attach supplier quote, drawings, etc.</span>","    </div>","    <div class=\"card-body\">","      <form action=\"/purchase/po_attach_upload.php\" method=\"post\" enctype=\"multipart/form-data\" class=\"row g-2 align-items-end\">","        <input type=\"hidden\" name=\"po_id\" value=\"<?=$id?>\">","        <div class=\"col-md-6\">","          <label class=\"form-label\">File</label>","          <input type=\"file\" class=\"form-control\" name=\"file\" required>","        </div>","        <div class=\"col-md-4\">","          <label class=\"form-label\">Notes (optional)</label>","          <input class=\"form-control\" name=\"notes\" placeholder=\"Supplier quotation / spec sheet\">","        </div>","        <div class=\"col-md-2\">","          <button class=\"btn btn-secondary w-100\">Upload</button>","        </div>","      </form>","","      <div class=\"table-responsive mt-3\">","        <table class=\"table table-sm align-middle\">","          <thead class=\"table-light\"><tr>","            <th>File</th><th>MIME</th><th class=\"text-end\">Size</th><th>Uploaded</th><th></th>","          </tr></thead>","          <tbody>","            <?php foreach ($attachments as $a): ","              $href = (string)($a['path'] ?? '');","              $name = (string)($a['original_name'] ?? ('Attachment #'.(int)$a['id']));","              $mime = (string)($a['mime'] ?? '');","              $size = isset($a['size']) ? (float)$a['size'] : null;","              $when = (string)($a['uploaded_at'] ?? '');","            ?>","              <tr>","                <td>","                  <div class=\"d-flex align-items-center gap-2\">","                    <?php if ($href): ?>","                      <a href=\"<?=htmlspecialchars($href)?>\" target=\"_blank\"><?=htmlspecialchars($name)?></a>","                    <?php else: ?>","                      <?=htmlspecialchars($name)?>","                    <?php endif; ?>","                    <a class=\"btn btn-sm btn-outline-secondary\"","                       href=\"/purchase/po_attach_download.php?po_id=<?=$id?>&attachment_id=<?=(int)$a['id']?>\">Download</a>","                  </div>","                </td>","                <td><?=htmlspecialchars($mime)?></td>","                <td class=\"text-end\"><?= $size!==null ? number_format($size).' bytes' : '\u2014' ?></td>","                <td><?=htmlspecialchars($when)?></td>","                <td>","                  <form action=\"/purchase/po_attach_delete.php\" method=\"post\" onsubmit=\"return confirm('Delete attachment?');\">","                    <input type=\"hidden\" name=\"po_id\" value=\"<?=$id?>\">","                    <input type=\"hidden\" name=\"attachment_id\" value=\"<?=$a['id']?>\">","                    <button class=\"btn btn-sm btn-outline-danger\">Delete</button>","                  </form>","                </td>","              </tr>","            <?php endforeach; ?>","            <?php if (!$attachments): ?>","              <tr><td colspan=\"5\" class=\"text-muted text-center\">No attachments yet.</td></tr>","            <?php endif; ?>","          </tbody>","        </table>","      </div>","    </div>","  </div>","</div>","<?php include __DIR__.'/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/rfq_list.php": ["<?php","/** PATH: /public_html/purchase/rfq_list.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","// If you gate RFQs behind RBAC, you can enable next line:","// require_once __DIR__ . '/../includes/rbac.php';","","require_login();","// require_permission('purchase.rfq.view');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","/* ---------- helpers ---------- */","function h(?string $s): string { return htmlspecialchars((string)$s, ENT_QUOTES, 'UTF-8'); }","function fmtn($v, int $p = 2): string {","  if ($v === null || $v === '') return '\u2014';","  $v = (float)$v;","  return number_format($v, $p);","}","","/* ---------- filters ---------- */","$q         = trim((string)($_GET['q'] ?? ''));                // search by rfq_no","$status    = trim((string)($_GET['status'] ?? ''));           // draft/sent/quoted/awarded/closed/cancelled","$from_date = trim((string)($_GET['from'] ?? ''));             // created from","$to_date   = trim((string)($_GET['to'] ?? ''));               // created to","$open_id   = isset($_GET['open_id']) ? (int)$_GET['open_id'] : 0;","","$whereParts = [\"1=1\"];","$args = [];","","if ($q !== '') {","  $whereParts[] = \"r.rfq_no LIKE CONCAT('%', ?, '%')\";","  $args[] = $q;","}","if ($status !== '') {","  $whereParts[] = \"r.status = ?\";","  $args[] = $status;","}","if ($from_date !== '') {","  $whereParts[] = \"DATE(r.created_at) >= ?\";","  $args[] = $from_date;","}","if ($to_date !== '') {","  $whereParts[] = \"DATE(r.created_at) <= ?\";","  $args[] = $to_date;","}","$whereSql = 'WHERE ' . implode(' AND ', $whereParts);","","/* ---------- feature flags (tables exist?) ---------- */","$HAS_RRQ    = true;  // rfq_recipients present (per schema)","$HAS_QUOTES = true;  // rfq_quotes + rfq_quote_lines present (per schema)","// (Both tables exist in your schema dump, so keep as true.)  :contentReference[oaicite:0]{index=0}","","/* ---------- main query (JOIN aggregates; no correlated subqueries) ---------- */","$parts = [];","$parts[] = \"SELECT r.id, r.rfq_no, r.status, r.created_at\";","$parts[] = \"     , i.inquiry_no\";","$parts[] = \"     , pr.code AS project_code\";","","if ($HAS_RRQ) {","  $parts[] = \"     , COALESCE(rr.recipients_cnt, 0) AS recipients_cnt\";","} else {","  $parts[] = \"     , 0 AS recipients_cnt\";","}","","if ($HAS_QUOTES) {","  $parts[] = \"     , COALESCE(qs.quotes_cnt, 0) AS quotes_cnt\";","  $parts[] = \"     , qs.best_total\";","} else {","  $parts[] = \"     , 0 AS quotes_cnt\";","  $parts[] = \"     , NULL AS best_total\";","}","","$parts[] = \"FROM rfqs r\";","$parts[] = \"LEFT JOIN inquiries i ON i.id = r.inquiry_id\";","$parts[] = \"LEFT JOIN projects  pr ON pr.id = r.project_id\";","","/* recipients aggregate */","if ($HAS_RRQ) {","  $parts[] = \"LEFT JOIN (\";","  $parts[] = \"  SELECT rfq_id, COUNT(*) AS recipients_cnt\";","  $parts[] = \"  FROM rfq_recipients\";","  $parts[] = \"  GROUP BY rfq_id\";","  $parts[] = \") rr ON rr.rfq_id = r.id\";","}","","/* quotes aggregate + best total (sum per quote -> min across quotes) */","if ($HAS_QUOTES) {","  $parts[] = \"LEFT JOIN (\";","  $parts[] = \"  SELECT t.rfq_id, COUNT(DISTINCT t.quote_id) AS quotes_cnt, MIN(t.tot_amt) AS best_total\";","  $parts[] = \"  FROM (\";","  $parts[] = \"    SELECT q2.rfq_id, ql.quote_id,\";","  $parts[] = \"           SUM(CASE WHEN ql.rate_basis = 'PER_KG'\";","  $parts[] = \"                    THEN IFNULL(ql.weight_kg,0) * ql.rate\";","  $parts[] = \"                    ELSE IFNULL(ql.qty,0)       * ql.rate END) AS tot_amt\";","  $parts[] = \"    FROM rfq_quotes q2\";","  $parts[] = \"    JOIN rfq_quote_lines ql ON ql.quote_id = q2.id\";","  $parts[] = \"    GROUP BY q2.rfq_id, ql.quote_id\";","  $parts[] = \"  ) t\";","  $parts[] = \"  GROUP BY t.rfq_id\";","  $parts[] = \") qs ON qs.rfq_id = r.id\";","}","","$parts[] = $whereSql;","$parts[] = \"ORDER BY r.id DESC\";","$parts[] = \"LIMIT 200\";","","$sql = implode(\"\\n\", $parts);","$sth = $pdo->prepare($sql);","$sth->execute($args);","$rows = $sth->fetchAll(PDO::FETCH_ASSOC);","","/* ---------- UI ---------- */","$UI_PATH     = __DIR__ . '/../ui';","$PAGE_TITLE  = 'RFQs';","$ACTIVE_MENU = 'purchase.rfq.list';","","include $UI_PATH . '/layout_start.php';","?>","<div class=\"container py-4\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h1 class=\"h4 mb-0\">RFQs</h1>","    <div class=\"text-muted small\">Showing latest 200</div>","  </div>","","  <div class=\"card mb-3\">","    <div class=\"card-body\">","      <form class=\"row g-2 align-items-end\">","        <div class=\"col-md-3\">","          <label class=\"form-label\">RFQ No.</label>","          <input name=\"q\" class=\"form-control\" value=\"<?= h($q) ?>\" placeholder=\"Search RFQ No.\">","        </div>","        <div class=\"col-md-3\">","          <label class=\"form-label\">Status</label>","          <select name=\"status\" class=\"form-select\">","            <?php foreach (['','draft','sent','quoted','awarded','closed','cancelled'] as $st): ?>","              <option value=\"<?= $st ?>\" <?= $status===$st?'selected':''?>><?= $st===''?'All':ucfirst($st) ?></option>","            <?php endforeach; ?>","          </select>","        </div>","        <div class=\"col-md-auto\">","          <label class=\"form-label\">From</label>","          <input type=\"date\" class=\"form-control\" name=\"from\" value=\"<?= h($from_date) ?>\">","        </div>","        <div class=\"col-md-auto\">","          <label class=\"form-label\">To</label>","          <input type=\"date\" class=\"form-control\" name=\"to\" value=\"<?= h($to_date) ?>\">","        </div>","        <div class=\"col-md-auto\">","          <button class=\"btn btn-primary\">Filter</button>","        </div>","      </form>","    </div>","  </div>","","  <div class=\"card\">","    <div class=\"card-body p-0\">","      <div class=\"table-responsive\">","        <table class=\"table table-hover align-middle mb-0\">","          <thead class=\"table-light\">","            <tr>","              <th style=\"width:18%\">RFQ</th>","              <th style=\"width:18%\">Inquiry / Project</th>","              <th style=\"width:12%\">Status</th>","              <th class=\"text-center\" style=\"width:10%\">Recipients</th>","              <th class=\"text-center\" style=\"width:10%\">Quotes</th>","              <th class=\"text-end\" style=\"width:14%\">Best Total</th>","              <th class=\"text-end\" style=\"width:18%\">Actions</th>","            </tr>","          </thead>","          <tbody>","            <?php if (!$rows): ?>","              <tr><td colspan=\"7\" class=\"text-muted p-4\">No RFQs found.</td></tr>","            <?php else: foreach ($rows as $r): ?>","              <?php","                $badge = match($r['status']) {","                  'sent'      => 'warning',","                  'quoted'    => 'info',","                  'awarded'   => 'success',","                  'closed'    => 'secondary',","                  'cancelled' => 'dark',","                  default     => 'secondary'","                };","              ?>","              <tr>","                <td>","                  <div class=\"fw-semibold\"><?= h($r['rfq_no'] ?? ('RFQ-'.(int)$r['id'])) ?></div>","                  <div class=\"small text-muted\">Created: <?= h(isset($r['created_at']) ? substr((string)$r['created_at'],0,19) : '') ?></div>","                </td>","                <td>","                  <div><?= h($r['inquiry_no'] ?: '\u2014') ?></div>","                  <div class=\"small text-muted\"><?= h($r['project_code'] ?: '') ?></div>","                </td>","                <td><span class=\"badge bg-<?= $badge ?>\"><?= h((string)$r['status']) ?></span></td>","                <td class=\"text-center\"><?= (int)($r['recipients_cnt'] ?? 0) ?></td>","                <td class=\"text-center\"><?= (int)($r['quotes_cnt'] ?? 0) ?></td>","                <td class=\"text-end\"><?= ($r['best_total'] !== null) ? fmtn($r['best_total'], 2) : '\u2014' ?></td>","                <td class=\"text-end\">","                  <div class=\"btn-group\">","                    <a class=\"btn btn-sm btn-outline-secondary\" href=\"/purchase/rfq_build.php?id=<?= (int)$r['id'] ?>\">Open</a>","                    <a class=\"btn btn-sm btn-outline-secondary\" href=\"/purchase/rfq_send.php?id=<?= (int)$r['id'] ?>\">Send</a>","                    <a class=\"btn btn-sm btn-outline-secondary\" href=\"/purchase/rfq_print.php?id=<?= (int)$r['id'] ?>\" target=\"_blank\">Print</a>","                  </div>","                </td>","              </tr>","            <?php endforeach; endif; ?>","          </tbody>","        </table>","      </div>","    </div>","  </div>","</div>","<?php include $UI_PATH . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/rm_indent_form.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","require_permission('purchase.indent.manage');","","$pdo = db();","$pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);","","/* numbering (series=RMI) using number_sequences */","function next_no(PDO $pdo, string $series): string {","  $y = (int)date('Y');","  $pdo->beginTransaction();","  try {","    $sel = $pdo->prepare(\"SELECT year,seq FROM number_sequences WHERE series=? FOR UPDATE\");","    $sel->execute([$series]);","    $row = $sel->fetch(PDO::FETCH_ASSOC);","    if (!$row || (int)$row['year'] !== $y) {","      $pdo->prepare(\"REPLACE INTO number_sequences(series,year,seq) VALUES(?,?,0)\")->execute([$series,$y]);","      $row = ['year'=>$y,'seq'=>0];","    }","    $seq = (int)$row['seq'] + 1;","    $pdo->prepare(\"UPDATE number_sequences SET seq=? WHERE series=?\")->execute([$seq,$series]);","    $pdo->commit();","    return sprintf('%s-%04d-%04d', $series, $y, $seq);","  } catch(Throwable $e){ $pdo->rollBack(); throw $e; }","}","","function plate_kg(float $Lmm,float $Wmm,float $Tmm,float $density): float {","  return round(($Lmm/1000)*($Wmm/1000)*($Tmm/1000)*($density*1000),3);","}","function struct_kg(float $lenM,float $wPerM): float { return round($lenM * $wPerM, 3); }","","/* dropdowns */","$projects  = $pdo->query(\"SELECT id, CONCAT(code,' \u2014 ',name) label FROM projects ORDER BY id DESC LIMIT 500\")->fetchAll(PDO::FETCH_ASSOC);","$locations = $pdo->query(\"SELECT id, CONCAT(code,' \u2014 ',name) label FROM locations WHERE active=1 ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","","/* load header+lines */","$id = (int)($_GET['id'] ?? 0);","$h = ['rmi_no'=>'', 'project_id'=>null, 'priority'=>'normal', 'delivery_location_id'=>null, 'remarks'=>'', 'status'=>'draft'];","$lines = [];","if ($id) {","  $st = $pdo->prepare(\"SELECT * FROM rm_indents WHERE id=?\"); $st->execute([$id]); $hdr = $st->fetch(PDO::FETCH_ASSOC);","  if ($hdr) $h = $hdr;","  $st = $pdo->prepare(\"SELECT * FROM rm_indent_lines WHERE rmi_id=? ORDER BY sort_order,id\"); $st->execute([$id]); $lines = $st->fetchAll(PDO::FETCH_ASSOC);","}","","/* POST */","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  $data = [","    'project_id' => (int)($_POST['project_id'] ?? 0) ?: null,","    'priority'   => in_array(($_POST['priority'] ?? 'normal'), ['low','normal','high'], true) ? $_POST['priority'] : 'normal',","    'delivery_location_id' => (int)($_POST['delivery_location_id'] ?? 0) ?: null,","    'remarks'    => trim($_POST['remarks'] ?? ''),","    'status'     => ($_POST['action'] ?? 'save') === 'submit' ? 'raised' : 'draft',","  ];","  if ($id) {","    $pdo->prepare(\"UPDATE rm_indents SET project_id=?,priority=?,delivery_location_id=?,remarks=?,status=? WHERE id=?\")","        ->execute([$data['project_id'],$data['priority'],$data['delivery_location_id'],$data['remarks'],$data['status'],$id]);","    $pdo->prepare(\"DELETE FROM rm_indent_lines WHERE rmi_id=?\")->execute([$id]);","  } else {","    $rmi_no = next_no($pdo,'RMI');","    $pdo->prepare(\"INSERT INTO rm_indents (rmi_no,project_id,priority,delivery_location_id,remarks,status) VALUES (?,?,?,?,?,?)\")","        ->execute([$rmi_no,$data['project_id'],$data['priority'],$data['delivery_location_id'],$data['remarks'],$data['status']]);","    $id = (int)$pdo->lastInsertId();","    $h['rmi_no'] = $rmi_no;","  }","","  // lines","  $N = (int)($_POST['line_count'] ?? 0);","  $ins = $pdo->prepare(\"INSERT INTO rm_indent_lines","    (rmi_id,item_id,make_id,length_mm,width_mm,thickness_mm,density_gcc,qty_nos,section_id,length_m,qty_len,wt_per_m_kg,description,needed_by,remarks,theoretical_weight_kg,sort_order,project_id)","    VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\");","","  for ($i=0; $i<$N; $i++) {","    $type = $_POST[\"type_$i\"] ?? 'plate';","    $item = (int)($_POST[\"item_$i\"] ?? 0);","    if ($item<=0) continue;","","    $make = (int)($_POST[\"make_$i\"] ?? 0) ?: null;","    $desc = trim($_POST[\"desc_$i\"] ?? '');","    $need = $_POST[\"need_$i\"] ?: null;","    $rem  = trim($_POST[\"rem_$i\"] ?? '');","","    $L=$W=$T=$rho=$qtyNos=null; $sec=$lenM=$qtyLen=$wpm=null; $kg=0.0;","","    if ($type==='plate') {","      $L=(float)($_POST[\"L_$i\"] ?? 0); $W=(float)($_POST[\"W_$i\"] ?? 0); $T=(float)($_POST[\"T_$i\"] ?? 0);","      $rho=(float)($_POST[\"rho_$i\"] ?? 7.85); $qtyNos=(float)($_POST[\"nos_$i\"] ?? 0);","      $kg = plate_kg($L,$W,$T,$rho)*$qtyNos;","    } else {","      $sec = (int)($_POST[\"sec_$i\"] ?? 0) ?: null;","      $wpm = (float)($_POST[\"wpm_$i\"] ?? 0);","      $lenM = (float)($_POST[\"lenM_$i\"] ?? 0); $qtyLen = (float)($_POST[\"qtyLen_$i\"] ?? 0);","      $kg = struct_kg($lenM,$wpm)*$qtyLen;","    }","","    $ins->execute([$id,$item,$make,$L,$W,$T,$rho,$qtyNos,$sec,$lenM,$qtyLen,$wpm,$desc,$need,$rem, round($kg,3), $i+1, $data['project_id']]);","  }","","  header('Location: rm_indents_list.php'); exit;","}","","include __DIR__.'/../ui/layout_start.php';","?>","<div class=\"container py-4\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h2 class=\"mb-0\"><?= $id ? 'Edit RMI' : 'New RMI' ?></h2>","    <a class=\"btn btn-outline-secondary\" href=\"rm_indents_list.php\">Back</a>","  </div>","","  <form method=\"post\" id=\"rmiForm\" autocomplete=\"off\">","    <div class=\"row g-3 mb-3\">","      <div class=\"col-md-4\">","        <label class=\"form-label\">RMI No</label>","        <input class=\"form-control\" value=\"<?=htmlspecialchars((string)$h['rmi_no'])?>\" readonly>","      </div>","      <div class=\"col-md-4\">","        <label class=\"form-label\">Project</label>","        <select name=\"project_id\" class=\"form-select\">","          <option value=\"\">\u2014 General \u2014</option>","          <?php foreach ($projects as $p): ?>","            <option value=\"<?=$p['id']?>\" <?=((int)($h['project_id']??0)===(int)$p['id']?'selected':'')?>><?=htmlspecialchars($p['label'])?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"col-md-2\">","        <label class=\"form-label\">Priority</label>","        <select name=\"priority\" class=\"form-select\">","          <?php foreach (['low','normal','high'] as $pp): ?>","            <option value=\"<?=$pp?>\" <?=($h['priority']===$pp?'selected':'')?>><?=ucfirst($pp)?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"col-md-2\">","        <label class=\"form-label\">Delivery To</label>","        <select name=\"delivery_location_id\" class=\"form-select\">","          <option value=\"\">\u2014</option>","          <?php foreach ($locations as $l): ?>","            <option value=\"<?=$l['id']?>\" <?=((int)($h['delivery_location_id']??0)===(int)$l['id']?'selected':'')?>><?=htmlspecialchars($l['label'])?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"col-12\">","        <label class=\"form-label\">Remarks</label>","        <input class=\"form-control\" name=\"remarks\" value=\"<?=htmlspecialchars((string)$h['remarks'])?>\">","      </div>","    </div>","","    <div class=\"card\">","      <div class=\"card-header d-flex justify-content-between align-items-center\">","        <strong>Lines (Plates / Structurals)</strong>","        <div class=\"d-flex gap-2\">","          <button class=\"btn btn-sm btn-primary\" type=\"button\" onclick=\"addRow('plate')\">+ Plate</button>","          <button class=\"btn btn-sm btn-secondary\" type=\"button\" onclick=\"addRow('struct')\">+ Structural</button>","        </div>","      </div>","      <div class=\"card-body p-0\">","        <div class=\"table-responsive\">","          <table class=\"table table-bordered table-sm align-middle mb-0\" id=\"linesTbl\">","            <thead class=\"table-light\">","              <tr>","                <th style=\"width:90px;\">Type</th>","                <th style=\"min-width:240px;\">Item (type to search)</th>","                <th>Make</th>","                <th class=\"text-center\">Plate: L/W/T/mm \u2022 \u03c1 \u2022 Nos</th>","                <th class=\"text-center\">Structural: wt/m \u2022 Len(m) \u2022 Qty</th>","                <th>Description</th>","                <th>Needed By</th>","                <th class=\"text-end\">Line kg</th>","                <th style=\"width:42px;\"></th>","              </tr>","            </thead>","            <tbody id=\"tbody\">","              <?php","              $i=0; foreach ($lines as $ln): $isPlate = ($ln['thickness_mm']!==null || $ln['qty_nos']!==null); ?>","              <tr data-i=\"<?=$i?>\">","                <td>","                  <select class=\"form-select form-select-sm type\" name=\"type_<?=$i?>\">","                    <option value=\"plate\" <?=$isPlate?'selected':''?>>Plate</option>","                    <option value=\"struct\" <?=!$isPlate?'selected':''?>>Structural</option>","                  </select>","                </td>","                <td class=\"pos-rel\">","                  <input type=\"hidden\" name=\"item_<?=$i?>\" class=\"item-id\" value=\"<?= (int)$ln['item_id'] ?>\">","                  <input type=\"text\" class=\"form-control form-control-sm item-search\" placeholder=\"Type 2+ chars\u2026\">","                  <div class=\"dropdown-menu shadow item-results\"></div>","                </td>","                <td><select class=\"form-select form-select-sm make\" name=\"make_<?=$i?>\"><option value=\"<?= (int)($ln['make_id']??0) ?>\" selected><?= $ln['make_id']?'Selected':'\u2014' ?></option></select></td>","","                <td class=\"plate\">","                  <div class=\"d-flex gap-1\">","                    <input class=\"form-control form-control-sm\" name=\"L_<?=$i?>\"  value=\"<?= (float)$ln['length_mm'] ?>\"  placeholder=\"L\">","                    <input class=\"form-control form-control-sm\" name=\"W_<?=$i?>\"  value=\"<?= (float)$ln['width_mm'] ?>\"   placeholder=\"W\">","                    <input class=\"form-control form-control-sm\" name=\"T_<?=$i?>\"  value=\"<?= (float)$ln['thickness_mm'] ?>\" placeholder=\"T\">","                    <input class=\"form-control form-control-sm\" name=\"rho_<?=$i?>\" value=\"<?= (float)($ln['density_gcc']??7.85) ?>\" placeholder=\"\u03c1\">","                    <input class=\"form-control form-control-sm\" name=\"nos_<?=$i?>\" value=\"<?= (float)$ln['qty_nos'] ?>\" placeholder=\"Nos\">","                  </div>","                </td>","                <td class=\"struct\">","                  <div class=\"d-flex gap-1\">","                    <input class=\"form-control form-control-sm\" name=\"wpm_<?=$i?>\"   value=\"<?= (float)($ln['wt_per_m_kg']??0) ?>\" placeholder=\"kg/m\">","                    <input class=\"form-control form-control-sm\" name=\"lenM_<?=$i?>\" value=\"<?= (float)$ln['length_m'] ?>\"     placeholder=\"Len\">","                    <input class=\"form-control form-control-sm\" name=\"qtyLen_<?=$i?>\" value=\"<?= (float)$ln['qty_len'] ?>\"    placeholder=\"Qty\">","                  </div>","                </td>","","                <td><input class=\"form-control form-control-sm\" name=\"desc_<?=$i?>\" value=\"<?= htmlspecialchars((string)$ln['description']) ?>\"></td>","                <td><input class=\"form-control form-control-sm\" name=\"need_<?=$i?>\" type=\"date\" value=\"<?= htmlspecialchars((string)$ln['needed_by']) ?>\"></td>","                <td><input class=\"form-control form-control-sm text-end kg\" name=\"kg_<?=$i?>\" value=\"<?= number_format((float)$ln['theoretical_weight_kg'],3) ?>\" readonly></td>","                <td class=\"text-center\"><button class=\"btn btn-sm btn-link text-danger\" type=\"button\" onclick=\"rm(this)\">&times;</button></td>","              </tr>","              <?php $i++; endforeach; ?>","            </tbody>","            <tfoot class=\"table-light\">","              <tr><th colspan=\"7\" class=\"text-end\">Total Theoretical (kg)</th>","                  <th><input class=\"form-control form-control-sm text-end\" id=\"totKg\" value=\"0.000\" readonly></th>","                  <th></th></tr>","              <tr><td colspan=\"9\"><input type=\"hidden\" id=\"line_count\" name=\"line_count\" value=\"<?=$i?>\"></td></tr>","            </tfoot>","          </table>","        </div>","      </div>","      <div class=\"card-footer d-flex gap-2\">","        <button class=\"btn btn-success\" name=\"action\" value=\"save\">Save</button>","        <button class=\"btn btn-primary\" name=\"action\" value=\"submit\">Submit</button>","      </div>","    </div>","  </form>","</div>","","<style>",".pos-rel{position:relative}",".item-results{position:absolute;top:100%;left:0;right:0;max-height:220px;overflow:auto;display:none}",".item-results.show{display:block}","</style>","","<script>","function num(v){const n=parseFloat(v);return isNaN(n)?0:n;}","function platePer(L,W,T,rho){if(!L||!W||!T||!rho) return 0; return (L/1000)*(W/1000)*(T/1000)*(rho*1000);}","function structPer(len,wpm){return len*wpm;}","","function toggleRow(tr){","  const type = tr.querySelector('.type').value;","  tr.querySelectorAll('.plate').forEach(e=>e.style.display = type==='plate'?'block':'none');","  tr.querySelectorAll('.struct').forEach(e=>e.style.display = type==='struct'?'block':'none');","  recalc(tr); recalcTotal();","}","function recalc(tr){","  const type = tr.querySelector('.type').value;","  let kg=0;","  if(type==='plate'){","    const L=num(tr.querySelector('[name^=\"L_\"]').value);","    const W=num(tr.querySelector('[name^=\"W_\"]').value);","    const T=num(tr.querySelector('[name^=\"T_\"]').value);","    const R=num(tr.querySelector('[name^=\"rho_\"]').value||7.85);","    const N=num(tr.querySelector('[name^=\"nos_\"]').value);","    kg = platePer(L,W,T,R)*N;","  }else{","    const WPM=num(tr.querySelector('[name^=\"wpm_\"]').value);","    const LM=num(tr.querySelector('[name^=\"lenM_\"]').value);","    const Q=num(tr.querySelector('[name^=\"qtyLen_\"]').value);","    kg = structPer(LM,WPM)*Q;","  }","  tr.querySelector('.kg').value = kg.toFixed(3);","}","function recalcTotal(){","  let t=0; document.querySelectorAll('#tbody tr').forEach(tr=>{","    const v = parseFloat(tr.querySelector('.kg')?.value||'0'); if(!isNaN(v)) t+=v;","  });","  document.getElementById('totKg').value = t.toFixed(3);","}","function rm(btn){ const tr=btn.closest('tr'); tr.remove(); recalcTotal(); }","function addRow(kind){","  const tb=document.getElementById('tbody');","  const i = parseInt(document.getElementById('line_count').value||'0');","  const tr=document.createElement('tr'); tr.dataset.i=i;","  tr.innerHTML = `","    <td>","      <select class=\"form-select form-select-sm type\" name=\"type_${i}\">","        <option value=\"plate\" ${kind==='plate'?'selected':''}>Plate</option>","        <option value=\"struct\" ${kind==='struct'?'selected':''}>Structural</option>","      </select>","    </td>","    <td class=\"pos-rel\">","      <input type=\"hidden\" name=\"item_${i}\" class=\"item-id\" value=\"\">","      <input type=\"text\" class=\"form-control form-control-sm item-search\" placeholder=\"Type 2+ chars\u2026\">","      <div class=\"dropdown-menu shadow item-results\"></div>","    </td>","    <td><select class=\"form-select form-select-sm make\" name=\"make_${i}\"><option value=\"\">\u2014</option></select></td>","    <td class=\"plate\">","      <div class=\"d-flex gap-1\">","        <input class=\"form-control form-control-sm\" name=\"L_${i}\"  placeholder=\"L\">","        <input class=\"form-control form-control-sm\" name=\"W_${i}\"  placeholder=\"W\">","        <input class=\"form-control form-control-sm\" name=\"T_${i}\"  placeholder=\"T\">","        <input class=\"form-control form-control-sm\" name=\"rho_${i}\" value=\"7.85\" placeholder=\"\u03c1\">","        <input class=\"form-control form-control-sm\" name=\"nos_${i}\" placeholder=\"Nos\">","      </div>","    </td>","    <td class=\"struct\">","      <div class=\"d-flex gap-1\">","        <input class=\"form-control form-control-sm\" name=\"wpm_${i}\" placeholder=\"kg/m\">","        <input class=\"form-control form-control-sm\" name=\"lenM_${i}\" placeholder=\"Len\">","        <input class=\"form-control form-control-sm\" name=\"qtyLen_${i}\" placeholder=\"Qty\">","      </div>","    </td>","    <td><input class=\"form-control form-control-sm\" name=\"desc_${i}\"></td>","    <td><input class=\"form-control form-control-sm\" name=\"need_${i}\" type=\"date\"></td>","    <td><input class=\"form-control form-control-sm text-end kg\" name=\"kg_${i}\" value=\"0.000\" readonly></td>","    <td class=\"text-center\"><button class=\"btn btn-sm btn-link text-danger\" type=\"button\" onclick=\"rm(this)\">&times;</button></td>","  `;","  tb.appendChild(tr);","  document.getElementById('line_count').value = i+1;","  wireRow(tr);","  toggleRow(tr);","}","","async function fetchJSON(url){","  const res = await fetch(url, {headers:{'Accept':'application/json'}});","  const ct = res.headers.get('content-type')||''; if(!ct.includes('application/json')) return {ok:false,error:'non_json'};","  try { return await res.json(); } catch { return {ok:false,error:'parse'}; }","}","function wireRow(tr){","  tr.querySelector('.type').addEventListener('change', ()=>{toggleRow(tr);});","  tr.querySelectorAll('input').forEach(el=>el.addEventListener('input', ()=>{recalc(tr);recalcTotal();}));","","  const input = tr.querySelector('.item-search');","  const hidden= tr.querySelector('.item-id');","  const results = tr.querySelector('.item-results');","  const makeSel = tr.querySelector('.make');","  let timer=null,lastQ='';","","  function clear(){results.innerHTML='';results.classList.remove('show');}","  function show(){results.classList.add('show');}","","  input.addEventListener('input', ()=>{","    const q=input.value.trim();","    if(q===lastQ) return; lastQ=q;","    if(timer) clearTimeout(timer);","    timer=setTimeout(async ()=>{","      if(q.length<2){ clear(); return; }","      const js=await fetchJSON('items_search.php?q='+encodeURIComponent(q));","      results.innerHTML=''; if(!(js&&js.ok)) return;","      (js.items||[]).forEach(it=>{","        const b=document.createElement('button'); b.type='button'; b.className='dropdown-item'; b.textContent=it.label;","        b.addEventListener('click', async ()=>{","          input.value=it.label; hidden.value=it.id; clear();","          makeSel.innerHTML='<option value=\"\">\u2014</option>';","          const m = await fetchJSON('item_makes.php?item_id='+it.id);","          if(m&&m.ok&&Array.isArray(m.makes)){ m.makes.forEach(x=>{ const o=document.createElement('option'); o.value=x.id; o.textContent=x.name; makeSel.appendChild(o);});}","        });","        results.appendChild(b);","      });","      show();","    }, 200);","  });","  document.addEventListener('click', e=>{ if(!tr.contains(e.target)) clear(); });","}","document.querySelectorAll('#tbody tr').forEach(tr=>{ wireRow(tr); toggleRow(tr);});","recalcTotal();","</script>","","<?php include __DIR__.'/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/plate_unlink_remnant.php": ["<?php","/** PATH: /public_html/purchase/plate_unlink_remnant.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_login(); $pdo = db();","","$plate_id = (int)($_GET['plate_id'] ?? $_POST['plate_id'] ?? 0);","if ($plate_id<=0) { http_response_code(400); echo \"Missing plate_id\"; exit; }","","$pl = $pdo->prepare(\"SELECT id, plan_id FROM plate_plan_plates WHERE id=?\");","$pl->execute([$plate_id]); $P = $pl->fetch();","if (!$P) { http_response_code(404); echo \"Plate not found\"; exit; }","","$pdo->prepare(\"UPDATE plate_plan_plates SET source_type='new', source_lot_id=NULL WHERE id=?\")->execute([$plate_id]);","header('Location: plate_plan_form.php?id='.(int)$P['plan_id'].'&ok=1');"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/plate_plan_form.php": ["<?php","/** PATH: /public_html/purchase/plate_plan_form.php"," * Plate Plan workbench: header + seeded parts (now shows L/W/Thk) + plates + allocations editor"," * - No remnant required for allocations"," * - Enforces plate.item_id == part.item_id (auto-set on 1st allocation if empty)"," * - Add/Edit/Delete allocations with area guard + remaining_qty sync"," * - Delete plate (restores remaining_qty from its allocations, then deletes)"," */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_login();","$pdo = db();","","header('Content-Type: text/html; charset=utf-8');","","/* ---------- helpers ---------- */","function h($s){ return htmlspecialchars((string)$s, ENT_QUOTES, 'UTF-8'); }","function has_table(PDO $pdo, string $t): bool {","  try{$st=$pdo->prepare(\"SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME=? LIMIT 1\");$st->execute([$t]);return(bool)$st->fetchColumn();}catch(Throwable $e){return false;}","}","function has_col(PDO $pdo, string $t, string $c): bool {","  try{$st=$pdo->prepare(\"SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME=? AND COLUMN_NAME=? LIMIT 1\");$st->execute([$t,$c]);return(bool)$st->fetchColumn();}catch(Throwable $e){return false;}","}","function piece_kg(?float $L, ?float $W, ?float $T, ?float $rho): ?float {","  if(!$L||!$W||!$T||!$rho) return null;","  return round(($L*$W*$T*$rho)/1_000_000.0,3); // mm^3 * g/cc => kg","}","function plan_url(int $id, array $qs=[]): string {","  $q=\"id=\".$id; foreach($qs as $k=>$v){ $q.='&'.rawurlencode((string)$k).'='.rawurlencode((string)$v); }","  return 'plate_plan_form.php?'.$q;","}","","/* ---------- inputs ---------- */","$plan_id = isset($_GET['id']) && ctype_digit((string)$_GET['id']) ? (int)$_GET['id'] : 0;","if ($plan_id <= 0) { http_response_code(400); echo \"Missing id\"; exit; }","","$flashOk = $flashErr = null;","if (isset($_GET['inq_id'])) {","  $inq_id = (int)($_GET['inq_id'] ?? 0);","  $added  = (int)($_GET['added']  ?? 0);","  $updated= (int)($_GET['updated']?? 0);","  $skipped= (int)($_GET['skipped']?? 0);","  $flashOk = \"Inquiry #{$inq_id} updated: +{$added} / {$updated} (skipped {$skipped})\";","}","","","/* ---------- load plan header ---------- */","$plan = null;","if (has_table($pdo,'plate_plans')) {","  $st = $pdo->prepare(\"SELECT * FROM plate_plans WHERE id=?\"); $st->execute([$plan_id]); $plan = $st->fetch();","}","if (!$plan) { http_response_code(404); echo \"Plate Plan not found (id=\".h((string)$plan_id).\")\"; exit; }","","$plan_no    = $plan['plan_no'] ?? ('PP-'.$plan_id);","$project_id = $plan['project_id'] ?? null;","$status     = $plan['status'] ?? 'draft';","$req_id     = $plan['req_id'] ?? null;","","/* ---------- schema presence ---------- */","$hasPartsTbl  = has_table($pdo,'plate_plan_parts');","$hasPlatesTbl = has_table($pdo,'plate_plan_plates');","$hasAllocTbl  = has_table($pdo,'plate_plan_allocations');","","/* ---------- POST actions ---------- */","if ($_SERVER['REQUEST_METHOD']==='POST') {","  $act = $_POST['__action'] ?? '';","","  /* Add Plate */","  if ($act==='add_plate' && $hasPlatesTbl) {","    $needCols = ['plan_id','length_mm','width_mm','thickness_mm','trim_allow_mm','kerf_mm','qty_nos','per_piece_kg','total_plate_kg','note','item_id','source_type','source_lot_id'];","    $ok=true; foreach($needCols as $c){ if(!has_col($pdo,'plate_plan_plates',$c)){ $ok=false; break; } }","    if(!$ok){ $flashErr=\"plate_plan_plates is missing columns; cannot add plate.\"; }","    else{","      $L=max(0.0,(float)($_POST['length_mm']??0)); $W=max(0.0,(float)($_POST['width_mm']??0)); $T=max(0.0,(float)($_POST['thickness_mm']??0));","      $trim=(int)($_POST['trim_allow_mm']??0); $kerf=(int)($_POST['kerf_mm']??0); $note=trim($_POST['note']??'');","      $itemId=!empty($_POST['item_id'])?(int)$_POST['item_id']:null;","      $ppkg=piece_kg($L,$W,$T,7.85); if($ppkg===null)$ppkg=0.000; $totkg=$ppkg;","      $ins=$pdo->prepare(\"INSERT INTO plate_plan_plates (plan_id,item_id,source_type,source_lot_id,length_mm,width_mm,thickness_mm,trim_allow_mm,kerf_mm,qty_nos,per_piece_kg,total_plate_kg,note)","                          VALUES (?,?, 'new', NULL, ?,?,?,?,?, 1.000, ?, ?, ?)\");","      $ins->execute([$plan_id,$itemId,$L,$W,$T,$trim,$kerf,$ppkg,$totkg,$note]);","      header('Location: '.plan_url($plan_id,['ok'=>1])); exit;","    }","  }","","  /* Add Allocation */","  if ($act==='add_alloc' && $hasAllocTbl && $hasPartsTbl && $hasPlatesTbl) {","    $needACols=['plan_id','plate_id','part_id','alloc_qty','allocated_area_mm2','rotation_allowed'];","    $ok=true; foreach($needACols as $c){ if(!has_col($pdo,'plate_plan_allocations',$c)){ $ok=false; break; } }","    if(!$ok){ $flashErr=\"plate_plan_allocations missing columns.\"; }","    else{","      $plate_id=(int)($_POST['plate_id']??0); $part_id=(int)($_POST['part_id']??0);","      $qty=max(0.0,(float)($_POST['alloc_qty']??0)); $rot=isset($_POST['rotation_allowed'])?1:0;","      if($plate_id<=0||$part_id<=0||$qty<=0){ $flashErr=\"Choose a part and enter a positive quantity.\"; }","      else{","        // Load plate","        $pl=$pdo->prepare(\"SELECT id,item_id,length_mm,width_mm,trim_allow_mm FROM plate_plan_plates WHERE id=? AND plan_id=?\");","        $pl->execute([$plate_id,$plan_id]); $P=$pl->fetch();","        if(!$P){ $flashErr=\"Plate not found.\"; }","        else{","          // Load part + req_line for dims","          $pt=$pdo->prepare(\"SELECT id,item_id,req_line_id,remaining_qty FROM plate_plan_parts WHERE id=? AND plan_id=?\");","          $pt->execute([$part_id,$plan_id]); $PR=$pt->fetch();","          if(!$PR){ $flashErr=\"Part not found.\"; }","          else{","            if((float)$PR['remaining_qty']<$qty){ $flashErr=\"Not enough remaining qty for this part.\"; }","            else{","              // Enforce item/grade match (auto-assign plate.item_id if null)","              $plate_item = $P['item_id']!==null ? (int)$P['item_id'] : null;","              $part_item  = (int)$PR['item_id'];","              if($plate_item===null){","                $pdo->prepare(\"UPDATE plate_plan_plates SET item_id=? WHERE id=?\")->execute([$part_item,$plate_id]);","              } elseif($plate_item!==$part_item){","                $flashErr=\"Grade mismatch: plate item {$plate_item} \u2260 part item {$part_item}.\";","              }","","              if(!$flashErr){","                // dims from requirement","                $L=$W=null;","                if((int)$PR['req_line_id']>0 && has_table($pdo,'rm_requirement_lines') && has_col($pdo,'rm_requirement_lines','calc_detail')){","                  $cj=$pdo->prepare(\"SELECT calc_detail FROM rm_requirement_lines WHERE id=?\");","                  $cj->execute([(int)$PR['req_line_id']]); $calc=$cj->fetchColumn();","                  if($calc){ $j=json_decode($calc,true); if(is_array($j)){ $L=isset($j['Lmm'])&&is_numeric($j['Lmm'])?(float)$j['Lmm']:null; $W=isset($j['Wmm'])&&is_numeric($j['Wmm'])?(float)$j['Wmm']:null; } }","                }","                if(!$L||!$W){ $flashErr=\"Part dimensions missing in requirement (Lmm/Wmm).\"; }","                else{","                  $usable=max(0,(int)floor(($P['length_mm']-2*(int)$P['trim_allow_mm'])) * (int)floor(($P['width_mm']-2*(int)$P['trim_allow_mm'])));","                  $areaPer=(int)floor($L)*(int)floor($W);","                  $allocArea=$areaPer*(int)floor($qty);","","                  // current used on this plate","                  $s=$pdo->prepare(\"SELECT COALESCE(SUM(allocated_area_mm2),0) FROM plate_plan_allocations WHERE plan_id=? AND plate_id=?\");","                  $s->execute([$plan_id,$plate_id]); $sum=(int)$s->fetchColumn();","","                  if($sum+$allocArea>$usable){","                    $flashErr=\"Allocation exceeds usable plate area. Usable: \".number_format($usable).\" mm\u00b2, existing: \".number_format($sum).\" mm\u00b2, new: \".number_format($allocArea).\" mm\u00b2.\";","                  }else{","                    $pdo->beginTransaction();","                    try{","                      $ins=$pdo->prepare(\"INSERT INTO plate_plan_allocations (plan_id,plate_id,part_id,alloc_qty,allocated_area_mm2,rotation_allowed)","                                          VALUES (?,?,?,?,?,?)\");","                      $ins->execute([$plan_id,$plate_id,$part_id,$qty,$allocArea,$rot]);","","                      // reduce remaining","                      $pdo->prepare(\"UPDATE plate_plan_parts SET remaining_qty = GREATEST(0, remaining_qty - ?) WHERE id=? AND plan_id=?\")","                          ->execute([$qty,$part_id,$plan_id]);","","                      $pdo->commit();","                      header('Location: '.plan_url($plan_id,['ok'=>1])); exit;","                    }catch(Throwable $e){ if($pdo->inTransaction())$pdo->rollBack(); $flashErr=\"Could not add allocation: \".$e->getMessage(); }","                  }","                }","              }","            }","          }","        }","      }","    }","  }","","  /* Edit Allocation qty */","  if ($act==='edit_alloc' && $hasAllocTbl && $hasPartsTbl && $hasPlatesTbl) {","    $alloc_id=(int)($_POST['alloc_id']??0); $new_qty=max(0.0,(float)($_POST['alloc_qty']??0));","    if($alloc_id<=0||$new_qty<=0){ $flashErr=\"Enter a positive quantity.\"; }","    else{","      // load allocation + plate + part (for dims and remaining adjust)","      $a=$pdo->prepare(\"SELECT * FROM plate_plan_allocations WHERE id=? AND plan_id=?\"); $a->execute([$alloc_id,$plan_id]); $AL=$a->fetch();","      if(!$AL){ $flashErr=\"Allocation not found.\"; }","      else{","        $plate_id=(int)$AL['plate_id']; $part_id=(int)$AL['part_id']; $old_qty=(float)$AL['alloc_qty'];","        $pl=$pdo->prepare(\"SELECT length_mm,width_mm,trim_allow_mm FROM plate_plan_plates WHERE id=? AND plan_id=?\"); $pl->execute([$plate_id,$plan_id]); $P=$pl->fetch();","        $pt=$pdo->prepare(\"SELECT req_line_id FROM plate_plan_parts WHERE id=? AND plan_id=?\"); $pt->execute([$part_id,$plan_id]); $PR=$pt->fetch();","        if(!$P||!$PR){ $flashErr=\"Plate/Part not found.\"; }","        else{","          $L=$W=null;","          if((int)$PR['req_line_id']>0 && has_table($pdo,'rm_requirement_lines') && has_col($pdo,'rm_requirement_lines','calc_detail')){","            $cj=$pdo->prepare(\"SELECT calc_detail FROM rm_requirement_lines WHERE id=?\"); $cj->execute([(int)$PR['req_line_id']]); $calc=$cj->fetchColumn();","            if($calc){ $j=json_decode($calc,true); if(is_array($j)){ $L=isset($j['Lmm'])?(float)$j['Lmm']:null; $W=isset($j['Wmm'])?(float)$j['Wmm']:null; } }","          }","          if(!$L||!$W){ $flashErr=\"Part dimensions missing.\"; }","          else{","            $usable=max(0,(int)floor(($P['length_mm']-2*(int)$P['trim_allow_mm'])) * (int)floor(($P['width_mm']-2*(int)$P['trim_allow_mm'])));","            $areaPer=(int)floor($L)*(int)floor($W);","            $newArea=$areaPer*(int)floor($new_qty);","","            // current used excluding this allocation","            $s=$pdo->prepare(\"SELECT COALESCE(SUM(allocated_area_mm2),0) FROM plate_plan_allocations WHERE plan_id=? AND plate_id=? AND id<>?\");","            $s->execute([$plan_id,$plate_id,$alloc_id]); $sum=(int)$s->fetchColumn();","","            if($sum+$newArea>$usable){ $flashErr=\"Update exceeds usable area.\"; }","            else{","              $delta=$new_qty-$old_qty; // +/- qty to adjust remaining","              $pdo->beginTransaction();","              try{","                $pdo->prepare(\"UPDATE plate_plan_allocations SET alloc_qty=?, allocated_area_mm2=? WHERE id=? AND plan_id=?\")","                    ->execute([$new_qty,$newArea,$alloc_id,$plan_id]);","","                // adjust remaining (reverse sign)","                $pdo->prepare(\"UPDATE plate_plan_parts SET remaining_qty = GREATEST(0, remaining_qty - ?) WHERE id=? AND plan_id=?\")","                    ->execute([$delta,$part_id,$plan_id]); // if delta negative, this increases remaining","","                $pdo->commit();","                header('Location: '.plan_url($plan_id,['ok'=>1])); exit;","              }catch(Throwable $e){ if($pdo->inTransaction())$pdo->rollBack(); $flashErr=\"Could not update allocation: \".$e->getMessage(); }","            }","          }","        }","      }","    }","  }","","  /* Delete Allocation */","  if ($act==='delete_alloc' && $hasAllocTbl && $hasPartsTbl) {","    $alloc_id=(int)($_POST['alloc_id']??0);","    if($alloc_id<=0){ $flashErr=\"Missing allocation id.\"; }","    else{","      $a=$pdo->prepare(\"SELECT * FROM plate_plan_allocations WHERE id=? AND plan_id=?\"); $a->execute([$alloc_id,$plan_id]); $AL=$a->fetch();","      if(!$AL){ $flashErr=\"Allocation not found.\"; }","      else{","        $pdo->beginTransaction();","        try{","          // restore remaining","          $pdo->prepare(\"UPDATE plate_plan_parts SET remaining_qty = remaining_qty + ? WHERE id=? AND plan_id=?\")","              ->execute([(float)$AL['alloc_qty'], (int)$AL['part_id'], $plan_id]);","          // delete","          $pdo->prepare(\"DELETE FROM plate_plan_allocations WHERE id=? AND plan_id=?\")->execute([$alloc_id,$plan_id]);","          $pdo->commit();","          header('Location: '.plan_url($plan_id,['ok'=>1])); exit;","        }catch(Throwable $e){ if($pdo->inTransaction())$pdo->rollBack(); $flashErr=\"Could not delete allocation: \".$e->getMessage(); }","      }","    }","  }","","  /* Delete Plate (restores all its allocations first) */","  if ($act==='delete_plate' && $hasPlatesTbl) {","    $plate_id=(int)($_POST['plate_id']??0);","    if($plate_id<=0){ $flashErr=\"Missing plate id.\"; }","    else{","      $pdo->beginTransaction();","      try{","        if($hasAllocTbl){","          // restore remaining for all allocations on this plate","          $al=$pdo->prepare(\"SELECT part_id, alloc_qty FROM plate_plan_allocations WHERE plan_id=? AND plate_id=?\");","          $al->execute([$plan_id,$plate_id]);","          $rows=$al->fetchAll();","          foreach($rows as $r){","            $pdo->prepare(\"UPDATE plate_plan_parts SET remaining_qty = remaining_qty + ? WHERE id=? AND plan_id=?\")","                ->execute([(float)$r['alloc_qty'], (int)$r['part_id'], $plan_id]);","          }","          // delete allocs","          $pdo->prepare(\"DELETE FROM plate_plan_allocations WHERE plan_id=? AND plate_id=?\")->execute([$plan_id,$plate_id]);","        }","        // delete plate","        $pdo->prepare(\"DELETE FROM plate_plan_plates WHERE id=? AND plan_id=?\")->execute([$plate_id,$plan_id]);","        $pdo->commit();","        header('Location: '.plan_url($plan_id,['ok'=>1])); exit;","      }catch(Throwable $e){ if($pdo->inTransaction())$pdo->rollBack(); $flashErr=\"Could not delete plate: \".$e->getMessage(); }","    }","  }","}","","/* ---------- load parts + (NEW) pull L/W from rm_requirement_lines.calc_detail ---------- */","$parts=[]; $partsErr=null; $reqLineIds=[];","if($hasPartsTbl){","  $cols=['id','plan_id','req_line_id','item_id','desc_text','thickness_mm','density_gcc','need_qty','per_piece_kg','total_need_kg','remaining_qty','sort_order','created_at'];","  $sel=[]; foreach($cols as $c){ if(has_col($pdo,'plate_plan_parts',$c)) $sel[]=$c; }","  if($sel){","    $st=$pdo->prepare(\"SELECT \".implode(',',$sel).\" FROM plate_plan_parts WHERE plan_id=? ORDER BY COALESCE(sort_order,id)\");","    $st->execute([$plan_id]); $parts=$st->fetchAll();","    foreach($parts as $p){ if(!empty($p['req_line_id'])) $reqLineIds[]=(int)$p['req_line_id']; }","  } else $partsErr=\"plate_plan_parts exists but lacks expected columns.\";","} else $partsErr=\"plate_plan_parts table not found.\";","","/* Map req_line_id -> ['Lmm'=>..., 'Wmm'=>...] */","$dimByReqLine=[];","if ($reqLineIds && has_table($pdo,'rm_requirement_lines') && has_col($pdo,'rm_requirement_lines','calc_detail')) {","  $in = implode(',', array_fill(0,count($reqLineIds),'?'));","  $st = $pdo->prepare(\"SELECT id, calc_detail FROM rm_requirement_lines WHERE id IN ($in)\");","  $st->execute($reqLineIds);","  while($row = $st->fetch()){","    $L = $W = null;","    $j = json_decode($row['calc_detail'] ?? '[]', true);","    if (is_array($j)) {","      $L = isset($j['Lmm']) && is_numeric($j['Lmm']) ? (float)$j['Lmm'] : null;","      $W = isset($j['Wmm']) && is_numeric($j['Wmm']) ? (float)$j['Wmm'] : null;","    }","    $dimByReqLine[(int)$row['id']] = ['Lmm'=>$L, 'Wmm'=>$W];","  }","}","","/* map: part_id => label */","$partOptions=[]; foreach($parts as $p){ $partOptions[(int)$p['id']] = '#'.$p['id'].' \u00b7 Item '.$p['item_id'].' \u00b7 '.(string)($p['desc_text']??''); }","","/* ---------- load plates ---------- */","$plates=[]; $platesCapable=$hasPlatesTbl;","if($platesCapable){","  $pcols=['id','plan_id','item_id','source_type','source_lot_id','length_mm','width_mm','thickness_mm','trim_allow_mm','kerf_mm','qty_nos','per_piece_kg','total_plate_kg','note'];","  $psel=[]; foreach($pcols as $c){ if(has_col($pdo,'plate_plan_plates',$c)) $psel[]=$c; }","  if($psel){","    $st=$pdo->prepare(\"SELECT \".implode(',',$psel).\" FROM plate_plan_plates WHERE plan_id=? ORDER BY id\");","    $st->execute([$plan_id]); $plates=$st->fetchAll();","  }","}","","/* ---------- load allocations ---------- */","$allocsByPlate=[]; $allocsTableExists=$hasAllocTbl;","if($allocsTableExists){","  $acol=[]; foreach(['id','plan_id','plate_id','part_id','alloc_qty','allocated_area_mm2','rotation_allowed'] as $c){ if(has_col($pdo,'plate_plan_allocations',$c)) $acol[]=\"a.$c\"; }","  if($acol){","    $sql=\"SELECT \".implode(',',$acol).\" FROM plate_plan_allocations a WHERE a.plan_id=?\";","    $st=$pdo->prepare($sql); $st->execute([$plan_id]); foreach($st->fetchAll() as $row){ $allocsByPlate[(int)$row['plate_id']][]=$row; }","  }","}","","/* ---------- page ---------- */","?>","<!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>Plate Plan <?= h($plan_no) ?></title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <style>","    body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;margin:0;background:#fafafa}","    .wrap{max-width:1200px;margin:0 auto;padding:18px}","    .grid{display:grid;grid-template-columns:1fr;gap:16px}","    @media(min-width:980px){.grid{grid-template-columns:1fr 1fr}}","    .card{background:#fff;border:1px solid #eee;border-radius:12px;padding:16px}","    table{border-collapse:collapse;width:100%}","    th,td{padding:8px 10px;border-bottom:1px solid #eee;text-align:left}","    .row{display:flex;gap:10px;flex-wrap:wrap}","    .btn{display:inline-block;padding:7px 12px;border:1px solid #ccc;border-radius:8px;background:#fff;text-decoration:none;cursor:pointer}","    .danger{border-color:#b00;color:#b00}","    .muted{color:#666}","    .pill{border:1px solid #ddd;border-radius:999px;padding:2px 8px;font-size:12px}","    input,select{padding:7px 10px;border:1px solid #ccc;border-radius:8px}","    .small{font-size:12px}","    ::placeholder{color:#999;opacity:1}","  </style>","</head>","<body>","<div class=\"wrap\">","  <div class=\"card\">","    <div class=\"row\" style=\"justify-content:space-between;align-items:center\">","      <div>","        <h3 style=\"margin:0\">Plate Plan: <?= h($plan_no) ?></h3>","        <div class=\"muted\">","          ID <?= (int)$plan_id ?>","          <?php if ($req_id): ?> \u00b7 Req <?= (int)$req_id ?><?php endif; ?>","          <?php if ($project_id): ?> \u00b7 Project <?= (int)$project_id ?><?php endif; ?>","          \u00b7 <span class=\"pill\"><?= h($status) ?></span>","        </div>","      </div>","      <div class=\"row\">","        <a class=\"btn\" href=\"req_wizard.php\">\u2190 Requirements</a>","        <?php if ($req_id): ?><a class=\"btn\" href=\"plate_plan_open.php?req_id=<?= (int)$req_id ?>\">Re-open/Seed</a><?php endif; ?>","        <a class=\"btn\" href=\"remnant_list.php\">Remnants</a>","        <a class=\"btn btn-primary\" href=\"plate_to_inquiry.php?plan_id=<?= (int)$plan_id ?>\">Convert to Inquiry</a>","      </div>","    </div>","    <?php if ($flashOk): ?><div style=\"margin-top:8px;color:#070\"><b><?= h($flashOk) ?></b></div><?php endif; ?>","    <?php if ($flashErr): ?><div style=\"margin-top:8px;color:#b00\"><b><?= h($flashErr) ?></b></div><?php endif; ?>","    <?php if (isset($_GET['ok'])): ?><div style=\"margin-top:8px;color:#070\"><b>Saved.</b></div><?php endif; ?>","    <?php if (isset($_GET['seeded'])): ?><div style=\"margin-top:8px;color:#070\"><b>Seeded parts:</b> <?= (int)$_GET['seeded'] ?></div><?php endif; ?>","  </div>","","  <div class=\"grid\">","    <!-- PARTS -->","    <div class=\"card\">","      <div class=\"row\" style=\"justify-content:space-between;align-items:center\">","        <h4 style=\"margin:0\">Parts to Cut</h4>","        <?php if ($req_id): ?><a class=\"btn\" href=\"plate_plan_open.php?req_id=<?= (int)$req_id ?>\">Re-seed missing lines</a><?php endif; ?>","      </div>","","      <?php if ($partsErr): ?><div class=\"muted\" style=\"margin:8px 0\"><?= h($partsErr) ?></div><?php endif; ?>","","      <table>","        <thead>","          <tr>","            <th>#</th>","            <th>Item</th>","            <th>Description</th>","            <th>L (mm)</th>","            <th>W (mm)</th>","            <th>Thk (mm)</th>","            <th>Need</th>","            <th>Remain</th>","            <th>kg/pc</th>","            <th>Total kg</th>","          </tr>","        </thead>","        <tbody>","        <?php if ($parts): $n=0; foreach ($parts as $p): $n++;","          $dims = $dimByReqLine[(int)($p['req_line_id'] ?? 0)] ?? ['Lmm'=>null,'Wmm'=>null];","          $Lmm = $dims['Lmm']; $Wmm = $dims['Wmm'];","        ?>","          <tr>","            <td><?= $n ?></td>","            <td><?= (int)($p['item_id'] ?? 0) ?></td>","            <td><?= h($p['desc_text'] ?? '') ?></td>","            <td><?= $Lmm !== null ? (float)$Lmm : '\u2014' ?></td>","            <td><?= $Wmm !== null ? (float)$Wmm : '\u2014' ?></td>","            <td><?= isset($p['thickness_mm']) && $p['thickness_mm']!==null ? (float)$p['thickness_mm'] : '\u2014' ?></td>","            <td><?= isset($p['need_qty']) ? (float)$p['need_qty'] : '' ?></td>","            <td><?= isset($p['remaining_qty']) ? (float)$p['remaining_qty'] : '' ?></td>","            <td><?= isset($p['per_piece_kg']) ? (float)$p['per_piece_kg'] : '' ?></td>","            <td><?= isset($p['total_need_kg']) ? (float)$p['total_need_kg'] : '' ?></td>","          </tr>","        <?php endforeach; else: ?>","          <tr><td colspan=\"10\" class=\"muted\">No parts seeded yet. Click \u201cRe-seed missing lines\u201d.</td></tr>","        <?php endif; ?>","        </tbody>","      </table>","    </div>","","    <!-- PLATES + ALLOCATIONS -->","    <div class=\"card\">","      <div class=\"row\" style=\"justify-content:space-between;align-items:center\">","        <h4 style=\"margin:0\">Plates</h4>","        <?php if ($platesCapable): ?>","        <form method=\"post\" class=\"row small\" style=\"gap:8px\">","          <input type=\"hidden\" name=\"__action\" value=\"add_plate\">","          <input name=\"length_mm\" type=\"number\" step=\"0.001\" placeholder=\"Length (mm)\" required title=\"Length (mm)\">","          <input name=\"width_mm\"  type=\"number\" step=\"0.001\" placeholder=\"Width (mm)\" required title=\"Width (mm)\">","          <input name=\"thickness_mm\" type=\"number\" step=\"0.001\" placeholder=\"Thk (mm)\" required title=\"Thickness (mm)\">","          <input name=\"trim_allow_mm\" type=\"number\" placeholder=\"Trim (mm)\" value=\"0\" title=\"Trim allowance on each side\">","          <input name=\"kerf_mm\" type=\"number\" placeholder=\"Kerf (mm)\" value=\"0\" title=\"Kerf per cut (for reference)\">","          <input name=\"item_id\" type=\"number\" placeholder=\"Item (grade)\" title=\"Item/grade for this plate\">","          <input name=\"note\" placeholder=\"Note\">","          <button class=\"btn\">+ Add Plate</button>","        </form>","        <div class=\"muted small\" style=\"margin-top:6px\">","          Tip: <b>Trim (mm)</b> and <b>Kerf (mm)</b> fields have descriptive background text like the length/width fields to avoid confusion.","        </div>","        <?php endif; ?>","      </div>","","      <?php if (!$platesCapable): ?>","        <div class=\"muted\">plate_plan_plates table not found \u2014 plate UI disabled.</div>","      <?php endif; ?>","","      <?php if ($plates): foreach ($plates as $pl): ?>","        <?php","          $usable=max(0,(int)floor(($pl['length_mm']-2*(int)$pl['trim_allow_mm'])) * (int)floor(($pl['width_mm']-2*(int)$pl['trim_allow_mm'])));","          $allocs=$allocsByPlate[(int)$pl['id']] ?? [];","          $used=0; foreach($allocs as $a){ $used+=(int)($a['allocated_area_mm2'] ?? 0); }","        ?>","        <div style=\"border:1px solid #eee;border-radius:10px;margin:10px 0;padding:10px\">","          <div class=\"row\" style=\"justify-content:space-between\">","            <div>","              <b>Plate #<?= (int)$pl['id'] ?></b>","              <?php if (!empty($pl['source_type'])): ?><span class=\"pill\"><?= h($pl['source_type']) ?></span><?php endif; ?>","              <?php if (!empty($pl['item_id'])): ?><span class=\"pill\">Item <?= (int)$pl['item_id'] ?></span><?php endif; ?>","              <div class=\"muted\">","                <?= (float)$pl['length_mm'] ?> \u00d7 <?= (float)$pl['width_mm'] ?> \u00d7 <?= (float)$pl['thickness_mm'] ?> mm","                \u00b7 Trim <?= (int)$pl['trim_allow_mm'] ?> \u00b7 Kerf <?= (int)$pl['kerf_mm'] ?>","                \u00b7 Used <?= number_format($used) ?> / <?= number_format($usable) ?> mm\u00b2","              </div>","            </div>","            <div class=\"row\">","              <a class=\"btn\" href=\"plate_lot_picker.php?plate_id=<?= (int)$pl['id'] ?>\">Link Remnant</a>","              <a class=\"btn\" href=\"plate_lot_finalize.php?plate_id=<?= (int)$pl['id'] ?>\">Finalize Cut</a>","              <form method=\"post\" onsubmit=\"return confirm('Delete this plate? Allocations (if any) will be removed and part remaining restored.');\">","                <input type=\"hidden\" name=\"__action\" value=\"delete_plate\">","                <input type=\"hidden\" name=\"plate_id\" value=\"<?= (int)$pl['id'] ?>\">","                <button class=\"btn danger\">Delete Plate</button>","              </form>","            </div>","          </div>","","          <!-- Allocations list -->","          <?php if ($allocs): ?>","            <table style=\"margin-top:6px\">","              <thead><tr><th>Part</th><th>Qty</th><th>Area (mm\u00b2)</th><th>Rot</th><th></th></tr></thead>","              <tbody>","                <?php foreach ($allocs as $a): ?>","                  <tr>","                    <td>#<?= (int)$a['part_id'] ?> \u2014 <?= h($partOptions[(int)$a['part_id']] ?? '') ?></td>","                    <td><?= isset($a['alloc_qty']) ? (float)$a['alloc_qty'] : '' ?></td>","                    <td><?= isset($a['allocated_area_mm2']) ? number_format((int)$a['allocated_area_mm2']) : '' ?></td>","                    <td><?= !empty($a['rotation_allowed']) ? '\u2713' : '\u2014' ?></td>","                    <td class=\"row\">","                      <!-- Edit qty -->","                      <form method=\"post\" class=\"row small\" style=\"gap:6px\">","                        <input type=\"hidden\" name=\"__action\" value=\"edit_alloc\">","                        <input type=\"hidden\" name=\"alloc_id\" value=\"<?= (int)$a['id'] ?>\">","                        <input type=\"number\" step=\"1\" min=\"1\" name=\"alloc_qty\" value=\"<?= (float)$a['alloc_qty'] ?>\" title=\"New allocation quantity\">","                        <button class=\"btn\">Update</button>","                      </form>","                      <!-- Delete -->","                      <form method=\"post\" onsubmit=\"return confirm('Delete this allocation? Remaining qty will be restored.');\">","                        <input type=\"hidden\" name=\"__action\" value=\"delete_alloc\">","                        <input type=\"hidden\" name=\"alloc_id\" value=\"<?= (int)$a['id'] ?>\">","                        <button class=\"btn danger\">Delete</button>","                      </form>","                    </td>","                  </tr>","                <?php endforeach; ?>","              </tbody>","            </table>","          <?php else: ?>","            <div class=\"muted\" style=\"margin-top:6px\">No allocations yet for this plate.</div>","          <?php endif; ?>","","          <!-- Allocation editor -->","          <?php if ($allocsTableExists): ?>","            <form method=\"post\" class=\"row small\" style=\"margin-top:10px;gap:8px\">","              <input type=\"hidden\" name=\"__action\" value=\"add_alloc\">","              <input type=\"hidden\" name=\"plate_id\" value=\"<?= (int)$pl['id'] ?>\">","              <select name=\"part_id\" required title=\"Pick a part to place on this plate\">","                <option value=\"\">\u2014 pick part \u2014</option>","                <?php foreach ($partOptions as $pid=>$label): ?>","                  <option value=\"<?= (int)$pid ?>\"><?= h($label) ?></option>","                <?php endforeach; ?>","              </select>","              <input name=\"alloc_qty\" type=\"number\" step=\"1\" min=\"1\" placeholder=\"Qty\" required title=\"Quantity to allocate\">","              <label style=\"display:flex;align-items:center;gap:6px\" title=\"Allow rotating part 90\u00b0 if needed\">","                <input type=\"checkbox\" name=\"rotation_allowed\"> Allow rotate 90\u00b0","              </label>","              <button class=\"btn\">+ Add Allocation</button>","            </form>","          <?php else: ?>","            <div class=\"muted\" style=\"margin-top:10px\">","              Allocations table not found. Create it with:","              <pre style=\"white-space:pre-wrap;border:1px solid #eee;border-radius:8px;padding:8px;background:#fcfcfc\">","CREATE TABLE IF NOT EXISTS plate_plan_allocations (","  id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,","  plan_id BIGINT UNSIGNED NOT NULL,","  plate_id BIGINT UNSIGNED NOT NULL,","  part_id BIGINT UNSIGNED NOT NULL,","  alloc_qty DECIMAL(14,3) NOT NULL,","  allocated_area_mm2 BIGINT NOT NULL DEFAULT 0,","  rotation_allowed TINYINT(1) NOT NULL DEFAULT 0,","  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,","  KEY idx_plan_plate (plan_id, plate_id),","  KEY idx_part (part_id)",") ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;</pre>","            </div>","          <?php endif; ?>","        </div>","      <?php endforeach; else: ?>","        <div class=\"muted\">No plates yet. Add one above, then link a remnant if needed (optional).</div>","      <?php endif; ?>","    </div>","  </div>","</div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/quote_seq.php": ["<?php","/** PATH: /public_html/purchase/quote_seq.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/db.php';","","/** ---------- INFORMATION_SCHEMA helpers ---------- */","function _table_exists(PDO $pdo, string $table): bool {","    $s = $pdo->prepare(\"SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = ? LIMIT 1\");","    $s->execute([$table]);","    return (bool)$s->fetchColumn();","}","function _table_cols(PDO $pdo, string $table): array {","    $s = $pdo->prepare(\"SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = ?\");","    $s->execute([$table]);","    return array_map(fn($r) => $r['COLUMN_NAME'], $s->fetchAll(PDO::FETCH_ASSOC));","}","","/**"," * Find (or create) a quote sequence table and detect the year column."," * Returns ['table' => string, 'year_col' => 'y'|'yr'|'year']."," * If nothing exists, creates `quote_sequences` with (id, yr, seq)."," */","function _find_seq_table(PDO $pdo): array {","    // Preferred names first","    $candidates = ['quote_sequences', 'purchase_quote_sequences', 'quote_sequence', 'quotes_sequences', 'quote_seq'];","    foreach ($candidates as $t) {","        if (_table_exists($pdo, $t)) {","            $cols = _table_cols($pdo, $t);","            foreach (['yr','y','year'] as $yc) {","                if (in_array($yc, $cols, true) && in_array('seq', $cols, true)) {","                    return ['table' => $t, 'year_col' => $yc];","                }","            }","        }","    }","    // Generic search: any table that has 'seq' and one of the year columns","    $s = $pdo->query(\"SELECT TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = DATABASE() AND COLUMN_NAME = 'seq'\");","    $seqTables = array_map(fn($r) => $r['TABLE_NAME'], $s->fetchAll(PDO::FETCH_ASSOC));","    foreach ($seqTables as $t) {","        $cols = _table_cols($pdo, $t);","        foreach (['yr','y','year'] as $yc) {","            if (in_array($yc, $cols, true)) {","                return ['table' => $t, 'year_col' => $yc];","            }","        }","    }","","    // Nothing found: create our own canonical table","    $pdo->exec(\"","        CREATE TABLE IF NOT EXISTS quote_sequences (","            id  INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,","            yr  SMALLINT UNSIGNED NOT NULL,","            seq INT UNSIGNED NOT NULL DEFAULT 0,","            UNIQUE KEY uq_yr (yr)","        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci","    \");","    return ['table' => 'quote_sequences', 'year_col' => 'yr'];","}","","/** Return ['table' => 'quotes'|'supplier_quotes'|null, 'no_col' => 'quote_no'|null] for collision checks */","function _find_quotes_table(PDO $pdo): array {","    foreach (['quotes','supplier_quotes'] as $t) {","        if (_table_exists($pdo, $t)) {","            $cols = _table_cols($pdo, $t);","            if (in_array('quote_no', $cols, true)) {","                return ['table' => $t, 'no_col' => 'quote_no'];","            }","        }","    }","    return ['table' => null, 'no_col' => null];","}","","/**"," * Generates a unique quote number like QUO-2025-0001."," * - Locks the single row for the current year."," * - Safe if called inside an existing transaction (no nested BEGIN)."," * - Verifies uniqueness against quotes.quote_no if available."," */","function next_quote_no(): string {","    $pdo = db();","    $yrInt = (int)date('Y');","    $PREFIX = 'QUO';","","    // Detect tables/columns","    $seq = _find_seq_table($pdo);","    $seqTable = $seq['table'];","    $yearCol  = $seq['year_col'];","    $quotesInfo = _find_quotes_table($pdo);","    $quotesTable = $quotesInfo['table'];","    $quoteNoCol  = $quotesInfo['no_col'];","","    $weStartedTx = !$pdo->inTransaction();","    if ($weStartedTx) {","        $pdo->beginTransaction();","    }","","    try {","        // Lock latest row for this year (or create it)","        $sel = $pdo->prepare(\"SELECT id, seq FROM {$seqTable} WHERE {$yearCol}=? ORDER BY id DESC LIMIT 1 FOR UPDATE\");","        $sel->execute([$yrInt]);","        $row = $sel->fetch(PDO::FETCH_ASSOC);","","        if (!$row) {","            // Insert base row for year with seq = 0","            $ins = $pdo->prepare(\"INSERT INTO {$seqTable} ({$yearCol}, seq) VALUES (?, 0)\");","            $ins->execute([$yrInt]);","            $rowId = (int)$pdo->lastInsertId();","            $seqVal = 0;","        } else {","            $rowId = (int)$row['id'];","            $seqVal = (int)$row['seq'];","        }","","        // Prepare optional collision check","        $chk = null;","        if ($quotesTable && $quoteNoCol) {","            $chk = $pdo->prepare(\"SELECT 1 FROM {$quotesTable} WHERE {$quoteNoCol}=? LIMIT 1\");","        }","","        // Increment until we find a free number","        do {","            $seqVal++;","            $quoteNo = sprintf('%s-%d-%04d', $PREFIX, $yrInt, $seqVal);","","            $exists = false;","            if ($chk) {","                $chk->execute([$quoteNo]);","                $exists = (bool)$chk->fetchColumn();","            }","        } while ($exists);","","        // Persist the new seq on the locked row","        $upd = $pdo->prepare(\"UPDATE {$seqTable} SET seq=? WHERE id=?\");","        $upd->execute([$seqVal, $rowId]);","","        if ($weStartedTx) {","            $pdo->commit();","        }","","        return $quoteNo;","","    } catch (Throwable $e) {","        if ($weStartedTx && $pdo->inTransaction()) {","            $pdo->rollBack();","        }","        throw $e;","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/plate_link_remnant.php": ["<?php","/** PATH: /public_html/purchase/plate_link_remnant.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/csrf.php';","require_login(); $pdo = db();","","$plate_id = (int)($_GET['plate_id'] ?? $_POST['plate_id'] ?? 0);","$lot_id   = (int)($_GET['lot_id']   ?? $_POST['lot_id']   ?? 0);","if ($plate_id<=0 || $lot_id<=0) { http_response_code(400); echo \"Missing plate_id or lot_id\"; exit; }","","// basic checks","$pl = $pdo->prepare(\"SELECT id, plan_id, thickness_mm, item_id FROM plate_plan_plates WHERE id=?\");","$pl->execute([$plate_id]); $P = $pl->fetch();","if (!$P) { http_response_code(404); echo \"Plate not found\"; exit; }","","// optional: verify stock lot thickness close and item match if columns exist","$ok = true;","if ($lot_id>0) {","  try {","    $s = $pdo->prepare(\"SELECT item_id, thickness_mm FROM stock_lots WHERE id=?\");","    $s->execute([$lot_id]); $L = $s->fetch();","    if ($L) {","      if (!empty($P['item_id']) && (int)$P['item_id'] !== (int)$L['item_id']) $ok=false;","      if (!empty($P['thickness_mm']) && !empty($L['thickness_mm']) && abs((float)$P['thickness_mm'] - (float)$L['thickness_mm']) > 0.5) $ok=false;","    }","  } catch (Throwable $e) { /* ignore */ }","}","if (!$ok) { http_response_code(400); echo \"Item/Thickness mismatch\"; exit; }","","$pdo->prepare(\"UPDATE plate_plan_plates SET source_type='remnant', source_lot_id=? WHERE id=?\")->execute([$lot_id, $plate_id]);","header('Location: plate_plan_form.php?id='.(int)$P['plan_id'].'&ok=1');"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/indents_list.php": ["<?php","/** PATH: /public_html/purchase/indents_list.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_permission('purchase.indent.view');","","$pdo = db();","$q      = trim($_GET['q'] ?? '');","$status = trim($_GET['status'] ?? '');","$limit  = (int)($_GET['limit'] ?? 200);","$limit  = ($limit>0 && $limit<=500) ? $limit : 200;","","$where = []; $p = [];","if ($q !== '') {","  $like = '%'.$q.'%';","  // Force all search comparisons to utf8mb4_unicode_ci to avoid mix errors across tables","  $where[] = \"(\"","           . \"i.indent_no COLLATE utf8mb4_unicode_ci LIKE ?\"","           . \" OR pr.code COLLATE utf8mb4_unicode_ci LIKE ?\"","           . \" OR pr.name COLLATE utf8mb4_unicode_ci LIKE ?\"","           . \")\";","  array_push($p, $like, $like, $like);","}","if ($status !== '' && in_array($status, ['draft','raised','approved','closed','cancelled'], true)) {","  // Also force the status comparison to utf8mb4_unicode_ci","  $where[] = \"i.status COLLATE utf8mb4_unicode_ci = ?\";","  $p[] = $status;","}","$w = $where ? 'WHERE '.implode(' AND ', $where) : '';","","$sql = \"","  SELECT i.id, i.indent_no, i.status,","         (SELECT MIN(ii.needed_by) FROM indent_items ii WHERE ii.indent_id = i.id) AS needed_by,","         i.created_at, i.priority,","         pr.code AS project_code, pr.name AS project_name","  FROM indents i","  LEFT JOIN projects pr ON pr.id = i.project_id","  $w","  ORDER BY i.id DESC","  LIMIT $limit","\";","$st = $pdo->prepare($sql);","$st->execute($p);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container py-4\">","  <div class=\"d-flex flex-wrap gap-2 justify-content-between align-items-center mb-3\">","    <h2 class=\"mb-0\">Purchase Indents</h2>","    <div class=\"d-flex gap-2\">","      <form class=\"d-flex gap-2\" method=\"get\">","        <input class=\"form-control\" name=\"q\" placeholder=\"Search indent/project\" value=\"<?= htmlspecialchars($q) ?>\">","        <select class=\"form-select\" name=\"status\">","          <option value=\"\">All</option>","          <?php foreach (['draft','raised','approved','closed','cancelled'] as $st): ?>","            <option value=\"<?= $st ?>\" <?= $status===$st?'selected':'' ?>><?= ucfirst($st) ?></option>","          <?php endforeach; ?>","        </select>","        <button class=\"btn btn-outline-primary\" type=\"submit\">Filter</button>","      </form>","      <?php if (user_has_permission('purchase.indent.manage')): ?>","        <a class=\"btn btn-primary\" href=\"indents_form.php\">+ New</a>","        <a class=\"btn btn-primary\" href=\"inquiries_list.php\">+ Inquiry</a>","      <?php endif; ?>","    </div>","  </div>","","  <div class=\"table-responsive\">","    <table class=\"table table-striped table-hover align-middle\">","      <thead>","        <tr>","          <th>Indent No</th>","          <th>Project</th>","          <th>Priority</th>","          <th>Status</th>","          <th>Needed By</th>","          <th>Created</th>","          <th class=\"text-end\">Actions</th>","        </tr>","      </thead>","      <tbody>","        <?php if (!$rows): ?>","          <tr><td colspan=\"7\" class=\"text-muted\">No indents found.</td></tr>","        <?php else: foreach ($rows as $r):","          $status = $r['status'] ?? 'draft';","          $badge = [","            'draft'     => 'secondary',","            'raised'    => 'warning',","            'approved'  => 'success',","            'closed'    => 'dark',","            'cancelled' => 'danger'","          ][$status] ?? 'secondary';","        ?>","          <tr>","            <td><?= htmlspecialchars($r['indent_no']) ?></td>","            <td><?= $r['project_code']","                  ? htmlspecialchars($r['project_code'].' \u2014 '.$r['project_name'])","                  : '<span class=\"text-muted\">General</span>' ?></td>","            <td><?= ucfirst(htmlspecialchars($r['priority'] ?? 'normal')) ?></td>","            <td><span class=\"badge bg-<?= $badge ?>\"><?= htmlspecialchars($status) ?></span></td>","            <td><?= htmlspecialchars((string)$r['needed_by']) ?></td>","            <td><?= htmlspecialchars((string)$r['created_at']) ?></td>","            <td class=\"text-end\">","              <a class=\"btn btn-sm btn-outline-primary\" href=\"indents_form.php?id=<?= (int)$r['id'] ?>\">Open</a>","              <a class=\"btn btn-sm btn-outline-secondary\" href=\"indent_print.php?id=<?= (int)$r['id'] ?>\" target=\"_blank\">Print</a>","            </td>","          </tr>","        <?php endforeach; endif; ?>","      </tbody>","    </table>","  </div>","</div>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/inquiries_form.php": ["<?php","/** PATH: /public_html/purchase/inquiries_form.php \u2014 consumables unchanged; RMI dims-aware + weight_kg recalc on save; Suppliers rendered server-side with contact auto-fill */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/inquiry_seq.php';","","require_login();","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","/* helpers */","function table_has_cols(PDO $pdo, string $table, array $cols): bool {","  if (!$cols) return false;","  $in = str_repeat('?,', count($cols)-1) . '?';","  $q = $pdo->prepare(\"","    SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS","    WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = ? AND COLUMN_NAME IN ($in)","  \");","  $q->execute(array_merge([$table], $cols));","  return (int)$q->fetchColumn() === count($cols);","}","","$id = (int)($_GET['id'] ?? 0);","$is_edit = $id > 0;","if ($is_edit) require_permission('purchase.inquiry.view'); else require_permission('purchase.inquiry.manage');","","/** dropdowns */","$projects  = $pdo->query(\"SELECT id, code, name FROM projects ORDER BY id DESC LIMIT 200\")->fetchAll(PDO::FETCH_ASSOC);","$locations = $pdo->query(\"SELECT id, code, name FROM locations ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","$uoms      = $pdo->query(\"SELECT id, code, name FROM uom ORDER BY code\")->fetchAll(PDO::FETCH_ASSOC);","","/** robust material subcategories (fallback to 'All Items') */","$subcats = [];","try {","  $hasMS = (bool)$pdo->query(\"SELECT 1 FROM information_schema.TABLES WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME='material_subcategories'\")->fetchColumn();","  $hasMC = (bool)$pdo->query(\"SELECT 1 FROM information_schema.TABLES WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME='material_categories'\")->fetchColumn();","  if ($hasMS) {","    $colSCstatus = (bool)$pdo->query(\"SELECT 1 FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME='material_subcategories' AND COLUMN_NAME='status'\")->fetchColumn();","    $colSCactive = (bool)$pdo->query(\"SELECT 1 FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME='material_subcategories' AND COLUMN_NAME='active'\")->fetchColumn();","    $scActiveWhere = '1=1';","    if ($colSCstatus)      $scActiveWhere = \"COALESCE(s.status,'active')='active'\";","    elseif ($colSCactive)  $scActiveWhere = \"COALESCE(s.active,1)=1\";","    if ($hasMC) {","      $sql = \"SELECT s.id, CONCAT(COALESCE(c.code,''),'/',COALESCE(s.code,''),' \u2014 ',COALESCE(s.name,'')) AS label","              FROM material_subcategories s","              JOIN material_categories c ON c.id = s.category_id","              WHERE $scActiveWhere","              ORDER BY c.code, s.code, s.name\";","    } else {","      $sql = \"SELECT s.id, CONCAT(COALESCE(s.code,''),' \u2014 ',COALESCE(s.name,'')) AS label","              FROM material_subcategories s","              WHERE $scActiveWhere","              ORDER BY s.code, s.name\";","    }","    $subcats = $pdo->query($sql)->fetchAll(PDO::FETCH_ASSOC);","  }","} catch (Throwable $e) { /* ignore */ }","if (!$subcats) $subcats = [['id'=>0, 'label'=>'All Items']]; // fallback","","/** header defaults */","$hdr = [","  'inquiry_no'=>'','project_id'=>'','location_id'=>'',","  'inquiry_date'=>date('Y-m-d'),'valid_till'=>'',","  'delivery_terms'=>'','payment_terms'=>'','freight_terms'=>'',","  'gst_inclusive'=>0,'notes'=>'','status'=>'draft'","];","$lines=[]; $vendors=[]; $rawLines=[];","$haveDims    = table_has_cols($pdo,'inquiry_lines',['length_mm','width_mm','thickness_mm']);","$haveDensity = table_has_cols($pdo,'inquiry_lines',['density_gcc']);","","if ($is_edit) {","  $st = $pdo->prepare(\"SELECT * FROM inquiries WHERE id=?\");","  $st->execute([$id]); if ($r=$st->fetch(PDO::FETCH_ASSOC)) $hdr=array_merge($hdr,$r);","","  // Consumables (editable)","  $st=$pdo->prepare(\"SELECT ii.*, it.subcategory_id, it.material_code, it.name AS item_name, u.code AS uom_code","                     FROM inquiry_items ii","                     JOIN items it ON it.id=ii.item_id","                     JOIN uom u ON u.id=ii.uom_id","                     WHERE ii.inquiry_id=? ORDER BY ii.id\");","  $st->execute([$id]); $lines=$st->fetchAll(PDO::FETCH_ASSOC);","","  // Raw-material lines: dims from inquiry_lines, fallback to plate_plan_plates via source_line_id (RMI only)","  $dimSel = $haveDims","    ? \", COALESCE(l.length_mm, p.length_mm) AS length_mm","       , COALESCE(l.width_mm , p.width_mm ) AS width_mm","       , COALESCE(l.thickness_mm, p.thickness_mm) AS thickness_mm\"","    : \"\";","  $densSel = $haveDensity ? \", l.density_gcc\" : \"\";","","  $st = $pdo->prepare(\"","    SELECT l.id, l.description, l.qty, l.qty_uom_id, l.weight_kg AS wkg, l.source_type,","           u.code AS uom_code","           $dimSel","           $densSel","    FROM inquiry_lines l","    LEFT JOIN uom u ON u.id = l.qty_uom_id","    LEFT JOIN plate_plan_plates p ON p.id = l.source_line_id AND l.source_type='RMI'","    WHERE l.inquiry_id = ?","      AND (l.source_type IN ('GI','RMI') OR l.source_type IS NULL)","    ORDER BY l.id","  \");","  $st->execute([$id]);","  $rawLines = $st->fetchAll(PDO::FETCH_ASSOC);","","  // Vendors (attached to this inquiry)","  $st=$pdo->prepare(\"SELECT s.*, p.name AS party_name","                     FROM inquiry_suppliers s JOIN parties p ON p.id=s.party_id","                     WHERE s.inquiry_id=? ORDER BY s.id\");","  $st->execute([$id]); $vendors=$st->fetchAll(PDO::FETCH_ASSOC);","}","","/** SAVE (draft) */","if ($_SERVER['REQUEST_METHOD']==='POST' && ($_POST['_action'] ?? '')==='save') {","  require_permission('purchase.inquiry.manage');","","  $project_id  = $_POST['project_id']!=='' ? (int)$_POST['project_id'] : null;","  $location_id = $_POST['location_id']!=='' ? (int)$_POST['location_id'] : null;","  $inquiry_date= $_POST['inquiry_date'] ?: date('Y-m-d');","  $valid_till  = $_POST['valid_till'] ?: null;","  $delivery    = trim($_POST['delivery_terms'] ?? '');","  $payment     = trim($_POST['payment_terms'] ?? '');","  $freight     = trim($_POST['freight_terms'] ?? '');","  $gst_incl    = isset($_POST['gst_inclusive']) ? 1 : 0;","  $notes       = trim($_POST['notes'] ?? '');","","  if (!$is_edit) {","    $inq_no = next_inquiry_no($pdo);","    $pdo->prepare(\"INSERT INTO inquiries","      (inquiry_no, project_id, location_id, inquiry_date, valid_till, delivery_terms, payment_terms, freight_terms, gst_inclusive, notes, status, created_by)","      VALUES (?,?,?,?,?,?,?,?,?,?, 'draft', ?)\")","      ->execute([$inq_no,$project_id,$location_id,$inquiry_date,$valid_till,$delivery,$payment,$freight,$gst_incl,$notes,current_user_id()]);","    $id = (int)$pdo->lastInsertId(); $is_edit = true;","    $hdr['status'] = 'draft';","  } else {","    if (($hdr['status']??'draft')==='draft') {","      $pdo->prepare(\"UPDATE inquiries SET project_id=?, location_id=?, inquiry_date=?, valid_till=?, delivery_terms=?, payment_terms=?, freight_terms=?, gst_inclusive=?, notes=? WHERE id=?\")","          ->execute([$project_id,$location_id,$inquiry_date,$valid_till,$delivery,$payment,$freight,$gst_incl,$notes,$id]);","    }","  }","","  // Payloads","  $lines_json    = $_POST['lines_json']    ?? '[]';","  $vendors_json  = $_POST['vendors_json']  ?? '[]';","  $rm_lines_json = $_POST['rm_lines_json'] ?? '[]';","  $postLines     = json_decode($lines_json, true) ?: [];","  $postVendors   = json_decode($vendors_json, true) ?: [];","  $postRMLines   = json_decode($rm_lines_json, true) ?: [];","","  if (($hdr['status']??'draft')==='draft') {","    /* Consumables ONLY */","    $pdo->prepare(\"DELETE FROM inquiry_items WHERE inquiry_id=?\")->execute([$id]);","    $ins = $pdo->prepare(\"INSERT INTO inquiry_items (inquiry_id, indent_id, indent_item_id, item_id, make_id, qty, uom_id, needed_by, line_notes)","                          VALUES (?,?,?,?,?,?,?,?,?)\");","    foreach ($postLines as $ln) {","      $item_id = (int)($ln['item_id'] ?? 0);","      $qty     = (float)($ln['qty'] ?? 0);","      $uom_id  = (int)($ln['uom_id'] ?? 0);","      $needed_by  = !empty($ln['needed_by']) ? $ln['needed_by'] : null;","      $line_notes = isset($ln['line_notes']) ? trim((string)$ln['line_notes']) : null;","","      $indent_item_id = (int)($ln['indent_item_id'] ?? 0);","      if ($indent_item_id > 0) {","        $chk = $pdo->prepare(\"SELECT item_id, qty, uom_id, needed_by, remarks FROM indent_items WHERE id=?\");","        $chk->execute([$indent_item_id]);","        if ($src = $chk->fetch(PDO::FETCH_ASSOC)) {","          $item_id   = (int)$src['item_id'];","          $qty       = (float)$src['qty'];","          $uom_id    = (int)$src['uom_id'];","          $needed_by = $src['needed_by'] ?? $needed_by;","          $line_notes= $src['remarks'] ?? $line_notes;","        }","      }","      if ($item_id<=0 || $qty<=0 || $uom_id<=0) continue;","","      $ins->execute([","        $id,","        !empty($ln['indent_id']) ? (int)$ln['indent_id'] : null,","        $indent_item_id ?: null,","        $item_id,","        !empty($ln['make_id']) ? (int)$ln['make_id'] : null,","        $qty,","        $uom_id,","        $needed_by,","        $line_notes","      ]);","    }","","    /* ---- RMI dims update + weight_kg recalc ---- */","    if ($postRMLines) {","      $upd = $pdo->prepare(\"","        UPDATE inquiry_lines","        SET length_mm = ?, width_mm = ?, thickness_mm = ?,","            qty = ?, qty_uom_id = ?, weight_kg = ?","        WHERE id = ? AND inquiry_id = ?","      \");","      $selDens = $haveDensity","        ? $pdo->prepare(\"SELECT COALESCE(density_gcc, 7.85) FROM inquiry_lines WHERE id=? AND inquiry_id=?\")","        : null;","","      foreach ($postRMLines as $rm) {","        $rid = (int)($rm['id'] ?? 0);","        if ($rid<=0) continue;","","        $L = isset($rm['length_mm'])    && $rm['length_mm']    !== '' ? (float)$rm['length_mm']    : null;","        $W = isset($rm['width_mm'])     && $rm['width_mm']     !== '' ? (float)$rm['width_mm']     : null;","        $T = isset($rm['thickness_mm']) && $rm['thickness_mm'] !== '' ? (float)$rm['thickness_mm'] : null;","        $Q = isset($rm['qty'])          && $rm['qty']          !== '' ? (float)$rm['qty']          : null;","        $U = isset($rm['qty_uom_id'])   && $rm['qty_uom_id']   !== '' ? (int)$rm['qty_uom_id']     : null;","","        $rho = 7.85;","        if ($selDens) { $selDens->execute([$rid, $id]); $d = $selDens->fetchColumn(); if ($d!==false && $d!==null) $rho = (float)$d; }","","        $wkg = null;","        if ($L!==null && $W!==null && $T!==null && $L>0 && $W>0 && $T>0 && $Q!==null && $Q>0) {","          $ppkg = ($L/1000.0)*($W/1000.0)*($T/1000.0)*($rho*1000.0);","          $wkg  = round($ppkg * $Q, 3);","        }","","        $upd->execute([","          $haveDims ? $L : null,","          $haveDims ? $W : null,","          $haveDims ? $T : null,","          $Q,","          $U,","          $wkg,","          $rid,","          $id","        ]);","      }","    }","","    // Vendors","    $pdo->prepare(\"DELETE FROM inquiry_suppliers WHERE inquiry_id=?\")->execute([$id]);","    $insv = $pdo->prepare(\"INSERT INTO inquiry_suppliers (inquiry_id, party_id, contact_name, contact_email, contact_phone) VALUES (?,?,?,?,?)\");","    foreach ($postVendors as $v) {","      $party_id = (int)($v['party_id'] ?? 0);","      if ($party_id<=0) continue;","      $insv->execute([$id,","        $party_id,","        trim((string)($v['contact_name']  ?? '')),","        trim((string)($v['contact_email'] ?? '')),","        trim((string)($v['contact_phone'] ?? ''))","      ]);","    }","  }","","  header('Location: /purchase/inquiries_list.php'); exit;","}","","/** ISSUE */","if ($_SERVER['REQUEST_METHOD']==='POST' && ($_POST['_action'] ?? '')==='issue') {","  require_permission('purchase.inquiry.issue');","  if ($is_edit && ($hdr['status']??'draft')==='draft') {","    if (empty($hdr['inquiry_no'])) {","      $no = next_inquiry_no($pdo);","      $pdo->prepare(\"UPDATE inquiries SET inquiry_no=? WHERE id=?\")->execute([$no,$id]);","    }","    $pdo->prepare(\"UPDATE inquiries SET status='issued', issued_at=NOW(), issued_by=? WHERE id=?\")->execute([current_user_id(), $id]);","  }","  header('Location: /purchase/inquiries_list.php'); exit;","}","","/* Suppliers dropdown options (with contact fields for auto-fill) */","$parties = $pdo->query(\"","  SELECT id, code, name, contact_name, email, phone","  FROM parties ","  WHERE status=1 AND (type='supplier' OR type IS NULL)","  ORDER BY name","\")->fetchAll(PDO::FETCH_ASSOC);","if (!$parties) {","  $parties = $pdo->query(\"SELECT id, code, name, contact_name, email, phone FROM parties WHERE status=1 ORDER BY name LIMIT 200\")->fetchAll(PDO::FETCH_ASSOC);","}","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container py-4\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h1 class=\"h4 mb-0\"><?= $is_edit?'Edit Inquiry':'New Inquiry' ?></h1>","    <?php if($is_edit && ($hdr['status']??'draft')==='draft' && has_permission('purchase.inquiry.issue')): ?>","      <form method=\"post\" class=\"ms-auto\">","        <input type=\"hidden\" name=\"_action\" value=\"issue\">","        <button class=\"btn btn-warning\">Issue RFQ</button>","      </form>","    <?php elseif($is_edit && ($hdr['status']??'')==='issued'): ?>","      <a class=\"btn btn-outline-secondary\" target=\"_blank\" href=\"/purchase/inquiry_print.php?id=<?=$id?>\">Print</a>","    <?php endif; ?>","  </div>","","  <form method=\"post\" class=\"card shadow-sm p-3\" id=\"inqForm\">","    <input type=\"hidden\" name=\"_action\" value=\"save\">","    <input type=\"hidden\" name=\"lines_json\" id=\"lines_json\">","    <input type=\"hidden\" name=\"vendors_json\" id=\"vendors_json\">","    <input type=\"hidden\" name=\"rm_lines_json\" id=\"rm_lines_json\">","","    <!-- Header -->","    <div class=\"row g-3\">","      <div class=\"col-md-3\">","        <label class=\"form-label\">Inquiry No</label>","        <input class=\"form-control\" value=\"<?=htmlspecialchars($hdr['inquiry_no']??'')?>\" disabled>","      </div>","      <div class=\"col-md-3\"><label class=\"form-label\">Date</label>","        <input type=\"date\" name=\"inquiry_date\" class=\"form-control\" value=\"<?=htmlspecialchars($hdr['inquiry_date'])?>\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>></div>","      <div class=\"col-md-3\"><label class=\"form-label\">Valid Till</label>","        <input type=\"date\" name=\"valid_till\" class=\"form-control\" value=\"<?=htmlspecialchars((string)($hdr['valid_till']??''))?>\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>></div>","      <div class=\"col-md-3\"><label class=\"form-label\">Project</label>","        <select name=\"project_id\" id=\"project_id\" class=\"form-select\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>>","          <option value=\"\">\u2014</option>","          <?php foreach($projects as $p): ?>","            <option value=\"<?=$p['id']?>\" <?=($hdr['project_id']??null)==$p['id']?'selected':''?>><?=htmlspecialchars($p['code'].' \u2014 '.$p['name'])?></option>","          <?php endforeach; ?>","        </select></div>","      <div class=\"col-md-3\"><label class=\"form-label\">Location</label>","        <select name=\"location_id\" class=\"form-select\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>>","          <option value=\"\">\u2014</option>","          <?php foreach($locations as $l): ?>","            <option value=\"<?=$l['id']?>\" <?=($hdr['location_id']??null)==$l['id']?'selected':''?>><?=htmlspecialchars($l['code'].' \u2014 '.$l['name'])?></option>","          <?php endforeach; ?>","        </select></div>","      <div class=\"col-md-3\"><label class=\"form-label\">Delivery Terms</label><input name=\"delivery_terms\" class=\"form-control\" value=\"<?=htmlspecialchars($hdr['delivery_terms']??'')?>\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>></div>","      <div class=\"col-md-3\"><label class=\"form-label\">Payment Terms</label><input name=\"payment_terms\" class=\"form-control\" value=\"<?=htmlspecialchars($hdr['payment_terms']??'')?>\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>></div>","      <div class=\"col-md-3\"><label class=\"form-label\">Freight Terms</label><input name=\"freight_terms\" class=\"form-control\" value=\"<?=htmlspecialchars($hdr['freight_terms']??'')?>\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>></div>","      <div class=\"col-md-12\"><div class=\"form-check\">","        <input class=\"form-check-input\" type=\"checkbox\" name=\"gst_inclusive\" value=\"1\" <?=($hdr['gst_inclusive']??0)?'checked':''?> <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>>","        <label class=\"form-check-label\">Prices expected GST-inclusive</label></div></div>","      <div class=\"col-md-12\"><label class=\"form-label\">Notes</label>","        <textarea name=\"notes\" class=\"form-control\" rows=\"2\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>><?=htmlspecialchars($hdr['notes']??'')?></textarea></div>","    </div>","","    <hr class=\"my-4\">","","    <!-- RAW MATERIAL (dims-aware) -->","    <?php if($is_edit && $rawLines && count($rawLines)>0): ?>","      <h5 class=\"mb-2\">Raw Material Lines (from Plate Plan)</h5>","      <div class=\"alert alert-light border small\">Weight (kg) will be recalculated on save from L\u00d7W\u00d7T\u00d7\u03c1 and Qty (\u03c1 defaults to 7.85 g/cc).</div>","      <div class=\"table-responsive mb-4\">","        <table class=\"table table-sm align-middle\" id=\"rmTable\">","          <thead>","            <tr>","              <th>#</th>","              <th>Description</th>","              <?php if($haveDims): ?><th style=\"width:120px;\">L (mm)</th><th style=\"width:120px;\">W (mm)</th><th style=\"width:120px;\">T (mm)</th><?php endif; ?>","              <th class=\"text-end\" style=\"width:140px;\">Qty</th>","              <th style=\"width:110px;\">UOM</th>","              <th class=\"text-end\" style=\"width:140px;\">Weight (kg)</th>","              <th>Source</th>","            </tr>","          </thead>","          <tbody>","            <?php foreach($rawLines as $rl): ?>","              <tr data-id=\"<?=$rl['id']?>\">","                <td><?= (int)$rl['id'] ?></td>","                <td><?= htmlspecialchars((string)($rl['description'] ?? '')) ?></td>","                <?php if($haveDims): ?>","                  <td><?php if(($hdr['status']??'draft')==='draft'): ?><input class=\"form-control form-control-sm rm_L\" type=\"number\" step=\"0.001\" value=\"<?=htmlspecialchars($rl['length_mm'] ?? '')?>\"><?php else: ?><?=htmlspecialchars($rl['length_mm'] ?? '')?><?php endif; ?></td>","                  <td><?php if(($hdr['status']??'draft')==='draft'): ?><input class=\"form-control form-control-sm rm_W\" type=\"number\" step=\"0.001\" value=\"<?=htmlspecialchars($rl['width_mm'] ?? '')?>\"><?php else: ?><?=htmlspecialchars($rl['width_mm'] ?? '')?><?php endif; ?></td>","                  <td><?php if(($hdr['status']??'draft')==='draft'): ?><input class=\"form-control form-control-sm rm_T\" type=\"number\" step=\"0.001\" value=\"<?=htmlspecialchars($rl['thickness_mm'] ?? '')?>\"><?php else: ?><?=htmlspecialchars($rl['thickness_mm'] ?? '')?><?php endif; ?></td>","                <?php endif; ?>","                <td class=\"text-end\">","                  <?php if(($hdr['status']??'draft')==='draft'): ?>","                    <input class=\"form-control form-control-sm rm_qty text-end\" type=\"number\" step=\"0.001\" value=\"<?=htmlspecialchars($rl['qty'] ?? '')?>\">","                  <?php else: ?>","                    <?= number_format((float)($rl['qty'] ?? 0), 3) ?>","                  <?php endif; ?>","                </td>","                <td>","                  <?php if(($hdr['status']??'draft')==='draft'): ?>","                    <select class=\"form-select form-select-sm rm_uom\">","                      <option value=\"\">\u2014</option>","                      <?php foreach($uoms as $u): ?>","                        <option value=\"<?=$u['id']?>\" <?= (string)($rl['qty_uom_id']??'')===(string)$u['id'] ? 'selected':'' ?>><?=htmlspecialchars($u['code'])?></option>","                      <?php endforeach; ?>","                    </select>","                  <?php else: ?>","                    <?= htmlspecialchars($rl['uom_code'] ?? '') ?>","                  <?php endif; ?>","                </td>","                <td class=\"text-end\"><?= ($rl['wkg']!==null && $rl['wkg']!=='') ? number_format((float)$rl['wkg'],3) : '\u2014' ?></td>","                <td><span class=\"badge bg-secondary\"><?= htmlspecialchars($rl['source_type'] ?? 'RMI') ?></span></td>","              </tr>","            <?php endforeach; ?>","          </tbody>","        </table>","      </div>","    <?php endif; ?>","","    <!-- CONSUMABLE LINES (editable) -->","    <h5 class=\"mb-2\">Lines</h5>","    <?php if(($hdr['status']??'draft')==='draft'): ?>","      <div class=\"mb-2 d-flex gap-2\">","        <button type=\"button\" class=\"btn btn-sm btn-outline-success\" data-bs-toggle=\"modal\" data-bs-target=\"#indentModal\">+ Import from Indent</button>","        <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" id=\"btnAddLine\">+ Add Line</button>","      </div>","    <?php endif; ?>","    <div id=\"linesWrap\" class=\"mb-2\"></div>","","    <hr class=\"my-4\">","","    <h5 class=\"mb-2\">Suppliers</h5>","","    <!-- SERVER-SIDE rendered vendor rows -->","    <div id=\"vendorsWrap\" class=\"mb-2\">","      <?php if($vendors): foreach($vendors as $v): ?>","        <div class=\"row g-2 align-items-end mb-2 border rounded p-2\">","          <div class=\"col-md-4\">","            <label class=\"form-label\">Supplier</label>","            <select class=\"form-select vn_party\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>>","              <option value=\"\">\u2014</option>","              <?php foreach($parties as $p): ?>","                <option value=\"<?=$p['id']?>\" <?= (string)$v['party_id']===(string)$p['id'] ? 'selected':'' ?>>","                  <?= htmlspecialchars(trim(($p['code']?('['.$p['code'].'] '):'').$p['name'])) ?>","                </option>","              <?php endforeach; ?>","            </select>","          </div>","          <div class=\"col-md-3\">","            <label class=\"form-label\">Contact Name</label>","            <input class=\"form-control vn_name\" value=\"<?=htmlspecialchars($v['contact_name']??'')?>\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>>","          </div>","          <div class=\"col-md-3\">","            <label class=\"form-label\">Email</label>","            <input class=\"form-control vn_email\" value=\"<?=htmlspecialchars($v['contact_email']??'')?>\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>>","          </div>","          <div class=\"col-md-2\">","            <label class=\"form-label\">Phone</label>","            <input class=\"form-control vn_phone\" value=\"<?=htmlspecialchars($v['contact_phone']??'')?>\" <?=($hdr['status']??'draft')!=='draft'?'disabled':''?>>","          </div>","          <?php if(($hdr['status']??'draft')==='draft'): ?>","            <div class=\"col-12 text-end\">","              <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" onclick=\"this.closest('.row').remove()\">Remove</button>","            </div>","          <?php endif; ?>","        </div>","      <?php endforeach; elseif(($hdr['status']??'draft')==='draft'): ?>","        <!-- If no vendors yet & draft, show one blank row -->","        <div class=\"row g-2 align-items-end mb-2 border rounded p-2\">","          <div class=\"col-md-4\">","            <label class=\"form-label\">Supplier</label>","            <select class=\"form-select vn_party\">","              <option value=\"\">\u2014</option>","              <?php foreach($parties as $p): ?>","                <option value=\"<?=$p['id']?>\"><?= htmlspecialchars(trim(($p['code']?('['.$p['code'].'] '):'').$p['name'])) ?></option>","              <?php endforeach; ?>","            </select>","          </div>","          <div class=\"col-md-3\">","            <label class=\"form-label\">Contact Name</label>","            <input class=\"form-control vn_name\" value=\"\">","          </div>","          <div class=\"col-md-3\">","            <label class=\"form-label\">Email</label>","            <input class=\"form-control vn_email\" value=\"\">","          </div>","          <div class=\"col-md-2\">","            <label class=\"form-label\">Phone</label>","            <input class=\"form-control vn_phone\" value=\"\">","          </div>","          <div class=\"col-12 text-end\">","            <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" onclick=\"this.closest('.row').remove()\">Remove</button>","          </div>","        </div>","      <?php elseif(($hdr['status']??'')!=='draft'): ?>","        <div class=\"text-muted small\">No suppliers added.</div>","      <?php endif; ?>","    </div>","","    <?php if(($hdr['status']??'draft')==='draft'): ?>","      <button class=\"btn btn-sm btn-outline-primary\" type=\"button\" id=\"btnAddVendor\">+ Add Supplier</button>","    <?php endif; ?>","","    <div class=\"mt-3 d-flex gap-2\">","      <?php if(($hdr['status']??'draft')==='draft'): ?><button class=\"btn btn-primary\" type=\"submit\">Save</button><?php endif; ?>","      <a class=\"btn btn-outline-secondary\" href=\"/purchase/inquiries_list.php\">Back</a>","    </div>","  </form>","</div>","","<!-- Indent Modal -->","<div class=\"modal fade\" id=\"indentModal\" tabindex=\"-1\" aria-hidden=\"true\">","  <div class=\"modal-dialog modal-xl modal-dialog-scrollable\">","    <div class=\"modal-content\">","      <div class=\"modal-header\"><h5 class=\"modal-title\">Select Indent</h5>","        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button></div>","      <div class=\"modal-body\">","        <input type=\"text\" id=\"indentSearch\" class=\"form-control mb-2\" placeholder=\"Search indent no...\">","        <div class=\"table-responsive\">","          <table class=\"table table-sm table-hover\">","            <thead><tr><th>ID</th><th>Indent No</th><th>Project</th><th>Status</th><th></th></tr></thead>","            <tbody id=\"indentTable\"></tbody>","          </table>","        </div>","        <div id=\"indentLoadMsg\" class=\"text-muted small\"></div>","      </div>","    </div>","  </div>","</div>","","<style>.lock-badge{font-size:.75rem;}</style>","","<script>","document.addEventListener('DOMContentLoaded', () => {","  const isDraft = <?= json_encode(($hdr['status']??'draft')==='draft') ?>;","  const uoms    = <?= json_encode($uoms) ?>;","  const subcats = <?= json_encode($subcats) ?>;","  const parties = <?= json_encode($parties) ?>;","  const partiesMap = Object.fromEntries(parties.map(p => [String(p.id), p]));","  const existingLines   = <?= json_encode($lines) ?>;","  const existingVendors = <?= json_encode($vendors) ?>;","  const haveDims = <?= json_encode($haveDims) ?>;","","  const linesWrap   = document.getElementById('linesWrap');","  const vendorsWrap = document.getElementById('vendorsWrap');","","  function opt(v,t){ const o=document.createElement('option'); o.value=v; o.textContent=t; return o; }","","  /* ---- Consumable line rows (built client-side) ---- */","  function lineRow(d={}) {","    const locked = !!d.locked || false;","    const w = document.createElement('div');","    w.className = 'row g-2 align-items-end mb-2 border rounded p-2 position-relative';","    w.innerHTML = `","      ${locked ? '<div class=\"position-absolute top-0 end-0 p-2 text-muted\"><span class=\"badge bg-light text-dark lock-badge\">Imported (locked)</span></div>' : ''}","      <div class=\"col-md-3\">","        <label class=\"form-label\">Subcategory</label>","        <select class=\"form-select ln_subcat\" ${(!isDraft || locked)?'disabled':''}></select>","      </div>","      <div class=\"col-md-3\">","        <label class=\"form-label\">Item</label>","        <select class=\"form-select ln_item\" ${(!isDraft || locked)?'disabled':''}>","          <option value=\"\">\u2014</option>","        </select>","        <div class=\"form-text small text-muted d-none ln_item_hint\">Pick a subcategory (or All Items)</div>","      </div>","      <div class=\"col-md-2\">","        <label class=\"form-label\">Qty</label>","        <input class=\"form-control ln_qty\" type=\"number\" step=\"0.000001\" value=\"${d.qty||''}\" ${(!isDraft || locked)?'disabled':''}>","      </div>","      <div class=\"col-md-2\">","        <label class=\"form-label\">UOM</label>","        <select class=\"form-select ln_uom\" ${(!isDraft || locked)?'disabled':''}></select>","      </div>","      <div class=\"col-md-2\">","        <label class=\"form-label\">Needed By</label>","        <input class=\"form-control ln_need\" type=\"date\" value=\"${d.needed_by||''}\" ${(!isDraft || locked)?'disabled':''}>","      </div>","      <div class=\"col-12\">","        <label class=\"form-label\">Line Notes</label>","        <input class=\"form-control ln_notes\" value=\"${d.line_notes||''}\" ${(!isDraft || locked)?'disabled':''}>","      </div>","      <input type=\"hidden\" class=\"ln_indent_id\" value=\"${d.indent_id||''}\">","      <input type=\"hidden\" class=\"ln_indent_item_id\" value=\"${d.indent_item_id||''}\">","      ${isDraft ? '<div class=\"col-12 text-end\"><button type=\"button\" class=\"btn btn-sm btn-outline-danger\" onclick=\"this.closest(\\'.row\\').remove()\">Remove</button></div>' : ''}","    `;","","    const scSel = w.querySelector('.ln_subcat');","    subcats.forEach(sc => scSel.appendChild(opt(sc.id, sc.label)));","    if (d.subcategory_id !== undefined && d.subcategory_id !== null) scSel.value = String(d.subcategory_id);","","    const itemSel = w.querySelector('.ln_item');","    const uomSel  = w.querySelector('.ln_uom');","    uoms.forEach(u => uomSel.appendChild(opt(u.id, u.code)));","    if (d.uom_id) uomSel.value = String(d.uom_id);","","    if (!locked && isDraft) {","      scSel.addEventListener('change', ()=>{","        loadItemsForSubcat(w, scSel.value || '0', null);","        itemSel.value = '';","      });","    }","    const preItem = d.item_id ? String(d.item_id) : '';","    const preSc   = (d.subcategory_id!==undefined && d.subcategory_id!==null) ? String(d.subcategory_id) : (subcats.length? String(subcats[0].id) : '0');","    loadItemsForSubcat(w, preSc || '0', preItem);","    return w;","  }","","  async function fetchJSON(url){","    const res = await fetch(url, {headers: {'Accept':'application/json'}});","    if(!res.ok) throw new Error('HTTP '+res.status);","    return await res.json();","  }","","  async function loadItemsForSubcat(rowEl, subcatId, selectedItemId){","    const itemSel = rowEl.querySelector('.ln_item');","    const hint    = rowEl.querySelector('.ln_item_hint');","    itemSel.innerHTML = '<option value=\"\">Loading\u2026</option>';","    try{","      const js = await fetchJSON('/purchase/items_options.php?subcategory_id=' + encodeURIComponent(subcatId || '0'));","      itemSel.innerHTML = '<option value=\"\">\u2014</option>';","      if (js && js.ok && Array.isArray(js.items) && js.items.length) {","        js.items.forEach(it=>{","          const op = document.createElement('option');","          op.value = it.id;","          op.textContent = it.label;","          if (selectedItemId && String(selectedItemId) === String(it.id)) op.selected = true;","          itemSel.appendChild(op);","        });","        if(hint) hint.classList.add('d-none');","      } else {","        if(hint){ hint.textContent = 'No items found'; hint.classList.remove('d-none'); }","      }","    } catch(e){","      itemSel.innerHTML = '<option value=\"\">\u2014</option>';","      if(hint){ hint.textContent = 'Failed to load items'; hint.classList.remove('d-none'); }","    }","  }","","  function addLine(d={}){ linesWrap.appendChild(lineRow(d)); }","","  /* ---- Vendors: auto-fill contacts when supplier changes ---- */","  function attachVendorRowBehavior(row){","    const sel   = row.querySelector('.vn_party');","    const nameI = row.querySelector('.vn_name');","    const mailI = row.querySelector('.vn_email');","    const phI   = row.querySelector('.vn_phone');","    if (!sel || !nameI || !mailI || !phI) return;","","    function fill(){","      const p = partiesMap[String(sel.value)] || null;","      if (!p) { nameI.value=''; mailI.value=''; phI.value=''; return; }","      nameI.value = p.contact_name || '';","      mailI.value = p.email || '';","      phI.value   = p.phone || '';","    }","    sel.addEventListener('change', fill);","","    // Initial fill if a supplier is already selected and fields are empty","    if (sel.value && !(nameI.value || mailI.value || phI.value)) fill();","  }","","  function addVendorRowBlank(){","    const w = document.createElement('div');","    w.className = 'row g-2 align-items-end mb-2 border rounded p-2';","    w.innerHTML = `","      <div class=\"col-md-4\">","        <label class=\"form-label\">Supplier</label>","        <select class=\"form-select vn_party\">","          <option value=\"\">\u2014</option>","          ${parties.map(p=>`<option value=\"${p.id}\">${((p.code?('['+p.code+'] '):'')+p.name).replace(/</g,'&lt;')}</option>`).join('')}","        </select>","      </div>","      <div class=\"col-md-3\">","        <label class=\"form-label\">Contact Name</label>","        <input class=\"form-control vn_name\" value=\"\">","      </div>","      <div class=\"col-md-3\">","        <label class=\"form-label\">Email</label>","        <input class=\"form-control vn_email\" value=\"\">","      </div>","      <div class=\"col-md-2\">","        <label class=\"form-label\">Phone</label>","        <input class=\"form-control vn_phone\" value=\"\">","      </div>","      <div class=\"col-12 text-end\">","        <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" onclick=\"this.closest('.row').remove()\">Remove</button>","      </div>","    `;","    vendorsWrap.appendChild(w);","    attachVendorRowBehavior(w);","  }","","  const btnAddVendor = document.getElementById('btnAddVendor');","  if (btnAddVendor) btnAddVendor.addEventListener('click', addVendorRowBlank);","","  // Attach behavior to server-rendered vendor rows","  vendorsWrap.querySelectorAll('.row.g-2').forEach(attachVendorRowBehavior);","","  /* Preload consumables client-side */","  existingLines.forEach(ln => addLine({","    subcategory_id: ln.subcategory_id ?? 0,","    item_id: ln.item_id,","    qty: ln.qty,","    uom_id: ln.uom_id,","    needed_by: ln.needed_by,","    line_notes: ln.line_notes,","    indent_id: ln.indent_id ?? null,","    indent_item_id: ln.indent_item_id ?? null,","    locked: !!(ln.indent_id || ln.indent_item_id)","  }));","","  /* Serialize before submit */","  const form = document.getElementById('inqForm');","  form.addEventListener('submit', () => {","    // Consumables","    const lineRows = Array.from(linesWrap.querySelectorAll('.row.g-2'));","    const lines = lineRows.map(r => ({","      item_id: Number(r.querySelector('.ln_item')?.value || 0),","      qty: parseFloat(r.querySelector('.ln_qty')?.value || '0'),","      uom_id: Number(r.querySelector('.ln_uom')?.value || 0),","      needed_by: r.querySelector('.ln_need')?.value || null,","      line_notes: r.querySelector('.ln_notes')?.value || null,","      indent_id: Number(r.querySelector('.ln_indent_id')?.value || 0) || null,","      indent_item_id: Number(r.querySelector('.ln_indent_item_id')?.value || 0) || null","    })).filter(x => x.item_id>0 && x.qty>0 && x.uom_id>0);","","    // Vendors (server-rendered + any added client-side)","    const vendorRows = Array.from(vendorsWrap.querySelectorAll('.row.g-2'));","    const vendors = vendorRows.map(r => ({","      party_id: Number(r.querySelector('.vn_party')?.value || 0),","      contact_name: r.querySelector('.vn_name')?.value || '',","      contact_email: r.querySelector('.vn_email')?.value || '',","      contact_phone: r.querySelector('.vn_phone')?.value || ''","    })).filter(v => v.party_id>0);","","    // RMI dims (draft)","    let rmLines = [];","    const rmTable = document.getElementById('rmTable');","    if (rmTable && isDraft) {","      rmLines = Array.from(rmTable.querySelectorAll('tbody tr')).map(tr => ({","        id: Number(tr.getAttribute('data-id')),","        length_mm: tr.querySelector('.rm_L')?.value ?? null,","        width_mm: tr.querySelector('.rm_W')?.value ?? null,","        thickness_mm: tr.querySelector('.rm_T')?.value ?? null,","        qty: tr.querySelector('.rm_qty')?.value ?? null,","        qty_uom_id: tr.querySelector('.rm_uom')?.value ?? null","      }));","    }","","    document.getElementById('lines_json').value    = JSON.stringify(lines);","    document.getElementById('vendors_json').value  = JSON.stringify(vendors);","    document.getElementById('rm_lines_json').value = JSON.stringify(rmLines);","  });","","  /* ----- Indent modal logic ----- */","  const indentTable   = document.getElementById('indentTable');","  const indentSearch  = document.getElementById('indentSearch');","  const indentLoadMsg = document.getElementById('indentLoadMsg');","  const indentModalEl = document.getElementById('indentModal');","","  async function safeJson(res) {","    const ct = (res.headers.get('content-type') || '').toLowerCase();","    if (!ct.includes('application/json')) {","      const text = await res.text();","      throw new Error('NON_JSON:' + text.slice(0, 500));","    }","    return res.json();","  }","","  async function loadIndents(q=''){","    indentLoadMsg.textContent = 'Loading...';","    indentTable.innerHTML = '';","    try {","      const res = await fetch('/purchase/inquiry_indent_picker.php?q='+encodeURIComponent(q||'')); ","      if (!res.ok) { const t = await res.text(); throw new Error('HTTP '+res.status+': '+t.slice(0,500)); }","      const rows = await safeJson(res);","      indentLoadMsg.textContent = rows.length ? '' : 'No indents found.';","      rows.forEach(r=>{","        const tr=document.createElement('tr');","        tr.innerHTML = `","          <td>${r.id}</td>","          <td>${r.indent_no}</td>","          <td>${r.project_name||''}</td>","          <td>${r.status}</td>","          <td><button type=\"button\" class=\"btn btn-sm btn-primary\" data-id=\"${r.id}\">Import</button></td>`;","        indentTable.appendChild(tr);","      });","    } catch(e){","      indentLoadMsg.textContent = 'Error: ' + e.message.substring(0,120);","      alert('Indent load error: ' + e.message.substring(0,500));","      console.error(e);","    }","  }","","  if (indentModalEl) indentModalEl.addEventListener('shown.bs.modal', ()=>loadIndents(''));","  if (indentSearch)  indentSearch.addEventListener('input', (e)=>loadIndents(e.target.value||''));","","  indentTable.addEventListener('click', async (ev)=>{","    const btn = ev.target.closest('button[data-id]'); if (!btn) return;","    const id = btn.getAttribute('data-id');","    try {","      const res = await fetch('/purchase/inquiry_import_indent.php?indent_id='+encodeURIComponent(id));","      if (!res.ok) { const t = await res.text(); throw new Error('HTTP '+res.status+': '+t.slice(0,500)); }","      const rows = await safeJson(res);","      if (!rows.length) { alert('No items in this indent'); return; }","      const projId = rows[0]?.project_id || null;","      const projectSel = document.getElementById('project_id');","      if (projId && projectSel) projectSel.value = String(projId);","      rows.forEach(ln=>{","        linesWrap.appendChild(lineRow({","          subcategory_id: ln.subcategory_id ?? 0,","          indent_id: ln.indent_id,","          indent_item_id: ln.indent_item_id,","          item_id: ln.item_id,","          qty: ln.qty,","          uom_id: ln.uom_id,","          needed_by: ln.needed_by,","          line_notes: ln.line_notes,","          locked: true","        }));","      });","      const modal = bootstrap.Modal.getInstance(indentModalEl);","      if (modal) modal.hide();","    } catch(e){","      alert('Import error: ' + e.message.substring(0,500));","      console.error(e);","    }","  });","","});","</script>","<?php include __DIR__ . '/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/inquiry_quotes_list.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","","require_login();","require_permission('purchase.quote.view');","","$pdo=db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$q = trim($_GET['q'] ?? '');","$where = \"WHERE 1=1\";","$args = [];","if ($q !== '') {","  $where .= \" AND (iq.quote_no LIKE CONCAT('%',?,'%') OR i.inquiry_no LIKE CONCAT('%',?,'%') OR p.name LIKE CONCAT('%',?,'%'))\";","  $args = [$q,$q,$q];","}","","$sql = \"SELECT iq.id, iq.quote_no, iq.quote_date, iq.status, iq.total_after_tax,","               i.inquiry_no, p.name AS supplier_name, pr.code AS project_code","        FROM inquiry_quotes iq","        JOIN inquiries i ON i.id=iq.inquiry_id","        LEFT JOIN projects pr ON pr.id=i.project_id","        JOIN parties p ON p.id=iq.supplier_id","        $where","        ORDER BY iq.id DESC LIMIT 200\";","$st = $pdo->prepare($sql);","$st->execute($args);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container py-4\">","  <div class=\"d-flex align-items-center mb-3\">","    <h1 class=\"h4 mb-0\">Inquiry Quotes</h1>","    <a href=\"/purchase/inquiry_quotes_form.php\" class=\"btn btn-primary ms-auto\">New Quote</a>","  </div>","","  <div class=\"card p-3 shadow-sm\">","    <div class=\"row g-2 mb-2\">","      <div class=\"col-md-6\">","        <input type=\"text\" class=\"form-control\" placeholder=\"Search quote no / inquiry no / supplier\"","               value=\"<?=htmlspecialchars($q)?>\" onkeydown=\"if(event.key==='Enter') location='?q='+encodeURIComponent(this.value)\">","      </div>","      <div class=\"col-md-2\">","        <button class=\"btn btn-outline-secondary w-100\" onclick=\"location='?q='+encodeURIComponent(document.querySelector('input.form-control').value)\">Search</button>","      </div>","    </div>","","    <div class=\"table-responsive\">","      <table class=\"table table-sm table-hover align-middle\">","        <thead>","          <tr>","            <th>ID</th>","            <th>Quote No</th>","            <th>Date</th>","            <th>Inquiry</th>","            <th>Project</th>","            <th>Supplier</th>","            <th>Status</th>","            <th class=\"text-end\">Amount</th>","            <th></th>","          </tr>","        </thead>","        <tbody>","          <?php foreach($rows as $r): ?>","          <tr>","            <td><?=$r['id']?></td>","            <td><?=htmlspecialchars($r['quote_no']??'')?></td>","            <td><?=htmlspecialchars($r['quote_date']??'')?></td>","            <td><?=htmlspecialchars($r['inquiry_no']??'')?></td>","            <td><?=htmlspecialchars($r['project_code']??'')?></td>","            <td><?=htmlspecialchars($r['supplier_name']??'')?></td>","            <td>","              <?php","                $s=$r['status'];","                $badge= match($s){","                  'draft'=>'secondary','submitted'=>'warning','locked'=>'dark', default=>'secondary'","                };","              ?>","              <span class=\"badge bg-<?=$badge?>\"><?=$s?></span>","            </td>","            <td class=\"text-end\"><?=number_format((float)($r['total_after_tax']??0),2)?></td>","            <td class=\"text-end\">","              <a class=\"btn btn-sm btn-outline-primary\" href=\"/purchase/inquiry_quotes_form.php?id=<?=$r['id']?>\">Open</a>","            </td>","          </tr>","          <?php endforeach; if(!$rows): ?>","          <tr><td colspan=\"9\" class=\"text-center text-muted py-4\">No quotes yet.</td></tr>","          <?php endif;?>","        </tbody>","      </table>","    </div>","  </div>","</div>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/plate_plan_open.php": ["<?php","/** PATH: /public_html/purchase/plate_plan_open.php"," * PURPOSE:"," *  1) Ensure a plate plan exists for ?req_id=..."," *  2) Seed plate_plan_parts from rm_requirement_lines (missing only, idempotent)."," */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_login();","$pdo = db();","","header('Content-Type: text/html; charset=utf-8');","","/* ---------------- helpers ---------------- */","function h($s){ return htmlspecialchars((string)$s, ENT_QUOTES, 'UTF-8'); }","","/** robust column check (avoids LIKE/charset quirks) */","function has_col(PDO $pdo, string $table, string $col): bool {","  try {","    $sql = \"SELECT 1","            FROM INFORMATION_SCHEMA.COLUMNS","            WHERE TABLE_SCHEMA = DATABASE()","              AND TABLE_NAME = ?","              AND COLUMN_NAME = ?","            LIMIT 1\";","    $st = $pdo->prepare($sql);","    $st->execute([$table, $col]);","    return (bool)$st->fetchColumn();","  } catch (Throwable $e) {","    return false;","  }","}","","/** pick first non-empty existing field */","function pick(array $row, array $cands, $default=null) {","  foreach ($cands as $c) { if (array_key_exists($c, $row) && $row[$c] !== null && $row[$c] !== '') return $row[$c]; }","  return $default;","}","","/** compute per-piece kg from L/W/T (mm) & density (g/cc) */","function piece_kg(?float $L, ?float $W, ?float $T, ?float $rho): ?float {","  if (!$L || !$W || !$T || !$rho) return null;","  $kg = ($L * $W * $T * $rho) / 1_000_000.0; // mm^3 * g/cc => kg","  return round($kg, 3);","}","","/* --------------- inputs & quick validations --------------- */","$req_id = isset($_GET['req_id']) && ctype_digit((string)$_GET['req_id']) ? (int)$_GET['req_id'] : 0;","if ($req_id <= 0) { http_response_code(400); echo \"Missing req_id\"; exit; }","","/* 0) If a plan already exists, capture its id; else create one safely */","$st = $pdo->prepare(\"SELECT id FROM plate_plans WHERE req_id=? ORDER BY id DESC LIMIT 1\");","$st->execute([$req_id]);","$plan_id = (int)($st->fetchColumn() ?: 0);","","if ($plan_id <= 0) {","  // Detect optional columns on plate_plans","  $has_plan_no   = has_col($pdo, 'plate_plans', 'plan_no');","  $has_project   = has_col($pdo, 'plate_plans', 'project_id');","  $has_status    = has_col($pdo, 'plate_plans', 'status');","  $has_createdat = has_col($pdo, 'plate_plans', 'created_at');","","  // Try to fetch project_id from rm_requirements if present","  $project_id = null;","  try {","    if (has_col($pdo, 'rm_requirements', 'project_id')) {","      $r = $pdo->prepare(\"SELECT project_id FROM rm_requirements WHERE id=?\");","      $r->execute([$req_id]);","      $pid = $r->fetchColumn();","      if ($pid !== false && $pid !== null) $project_id = (int)$pid;","    }","  } catch (Throwable $e) {}","","  // Insert minimal plan","  $cols = ['req_id']; $vals = ['?']; $bind = [$req_id];","  if ($has_project && $project_id !== null) { $cols[]='project_id'; $vals[]='?';    $bind[]=$project_id; }","  if ($has_status)                            { $cols[]='status';     $vals[]='?';    $bind[]='draft'; }","  if ($has_createdat)                         { $cols[]='created_at'; $vals[]='NOW()'; } // literal NOW()","","  $sql = \"INSERT INTO plate_plans (\".implode(',',$cols).\") VALUES (\".implode(',',$vals).\")\";","  $pdo->beginTransaction();","  try {","    $ins = $pdo->prepare($sql); $ins->execute($bind);","    $plan_id = (int)$pdo->lastInsertId();","","    if ($has_plan_no) {","      $yy = date('Y');","      $seq = str_pad((string)$plan_id, 4, '0', STR_PAD_LEFT);","      $plan_no = \"PP-{$yy}-{$seq}\";","      $upd = $pdo->prepare(\"UPDATE plate_plans SET plan_no=? WHERE id=?\");","      $upd->execute([$plan_no, $plan_id]);","    }","    $pdo->commit();","  } catch (Throwable $e) {","    if ($pdo->inTransaction()) $pdo->rollBack();","    http_response_code(500);","    echo \"Could not create plate plan for req_id=\".$req_id.\". Error: \".h($e->getMessage());","    exit;","  }","}","","/* 1) Seed plate_plan_parts from rm_requirement_lines (insert missing only) */","","/* Verify required columns really exist (your table has them) */","$required = ['plan_id','req_line_id','item_id','desc_text','thickness_mm','density_gcc',","             'need_qty','per_piece_kg','total_need_kg','remaining_qty','sort_order'];","$missing = [];","foreach ($required as $c) {","  if (!has_col($pdo, 'plate_plan_parts', $c)) $missing[] = $c;","}","if ($missing) {","  // We\u2019ll still open the plan, but report which columns are missing.","  header('Location: plate_plan_form.php?id='.$plan_id.'&seed_skipped=1&reason='.rawurlencode('Missing cols: '.implode(', ',$missing)));","  exit;","}","","// gather requirement lines","$rlCols = [];","try { $get = $pdo->query(\"SHOW COLUMNS FROM rm_requirement_lines\"); $rlCols = $get->fetchAll(PDO::FETCH_COLUMN, 0) ?: []; } catch (Throwable $e) {}","","$has_item_id   = in_array('item_id', $rlCols, true);","$has_desc_text = in_array('desc_text', $rlCols, true) || in_array('description', $rlCols, true);","$has_qty       = in_array('need_qty', $rlCols, true) || in_array('qty', $rlCols, true) || in_array('required_qty', $rlCols, true);","$has_density   = in_array('density_gcc', $rlCols, true);","$has_thk       = in_array('thickness_mm', $rlCols, true);","$has_calcjson  = in_array('calc_detail', $rlCols, true);","","// fetch lines, join items for name if available","$itemsHasName = has_col($pdo, 'items', 'name');","if ($itemsHasName && $has_item_id) {","  $st = $pdo->prepare(\"SELECT rl.*, it.name AS item_name","                       FROM rm_requirement_lines rl","                       LEFT JOIN items it ON it.id=rl.item_id","                       WHERE rl.req_id=?","                       ORDER BY rl.id\");","} else {","  $st = $pdo->prepare(\"SELECT rl.* FROM rm_requirement_lines rl WHERE rl.req_id=? ORDER BY rl.id\");","}","$st->execute([$req_id]);","$lines = $st->fetchAll(PDO::FETCH_ASSOC);","","// existing req_line_ids in this plan","$existing = [];","$st2 = $pdo->prepare(\"SELECT req_line_id FROM plate_plan_parts WHERE plan_id=? AND req_line_id IS NOT NULL\");","$st2->execute([$plan_id]);","foreach ($st2->fetchAll(PDO::FETCH_COLUMN, 0) as $rid) $existing[(int)$rid] = true;","","$seeded = 0;","if ($lines) {","  $ins = $pdo->prepare(\"INSERT INTO plate_plan_parts","    (plan_id, req_line_id, item_id, desc_text, thickness_mm, density_gcc,","     need_qty, per_piece_kg, total_need_kg, remaining_qty, sort_order)","    VALUES (?,?,?,?, ?,?,?, ?,?, ?,?)\");","","  $sort = 0;","  if (!$pdo->inTransaction()) $pdo->beginTransaction();","  try {","    foreach ($lines as $rl) {","      $req_line_id = (int)$rl['id'];","      if (isset($existing[$req_line_id])) continue;","","      $item_id = $has_item_id ? (int)$rl['item_id'] : 0;","      if ($item_id <= 0) continue;","","      $desc = pick($rl, ['desc_text','description'], null);","      if (!$desc) $desc = isset($rl['item_name']) ? (string)$rl['item_name'] : 'Part '.$req_line_id;","","      // qty","      $need_qty = (float)pick($rl, ['need_qty','required_qty','qty'], 0.0);","      if ($need_qty <= 0 && $has_calcjson) {","        $j = json_decode($rl['calc_detail'] ?? '[]', true);","        if (is_array($j) && isset($j['qty']) && is_numeric($j['qty'])) $need_qty = (float)$j['qty'];","      }","      if ($need_qty <= 0) $need_qty = 1.0;","","      // thickness & density","      $thk = $has_thk ? ($rl['thickness_mm'] !== null ? (float)$rl['thickness_mm'] : null) : null;","      $rho = $has_density && $rl['density_gcc'] !== null ? (float)$rl['density_gcc'] : 7.85;","","      // per piece kg from JSON (if dims present)","      $per_piece_kg = null;","      if ($has_calcjson) {","        $j = json_decode($rl['calc_detail'] ?? '[]', true);","        if (is_array($j)) {","          $L = isset($j['Lmm']) && is_numeric($j['Lmm']) ? (float)$j['Lmm'] : null;","          $W = isset($j['Wmm']) && is_numeric($j['Wmm']) ? (float)$j['Wmm'] : null;","          $T = $thk !== null ? $thk : (isset($j['Tmm']) && is_numeric($j['Tmm']) ? (float)$j['Tmm'] : null);","          $per_piece_kg = piece_kg($L, $W, $T, $rho);","        }","      }","","      // Use thickness from rm_requirement_lines if present, else fall back to JSON Tmm","      $thk_eff = $thk;","      if ($thk_eff === null && isset($T) && $T !== null) { $thk_eff = (float)$T; }","","            $total_need_kg = $per_piece_kg !== null ? round($per_piece_kg * $need_qty, 3) : null;","","      $sort += 10;","      $ins->execute([","        $plan_id,","        $req_line_id,","        $item_id,","        $desc,","        $thk_eff,","        $rho,","        $need_qty,","        $per_piece_kg,","        $total_need_kg,","        $need_qty,   // remaining starts equal to need","        $sort","      ]);","      $seeded++;","    }","    ","    // Backfill thickness_mm for any seeded parts where thickness is still NULL using calc_detail->Tmm","    try {","      $bf = $pdo->prepare(\"","        UPDATE plate_plan_parts p","        JOIN rm_requirement_lines rl ON rl.id = p.req_line_id","        SET p.thickness_mm = CAST(JSON_UNQUOTE(JSON_EXTRACT(rl.calc_detail, '$.Tmm')) AS DECIMAL(10,3))","        WHERE p.plan_id = ?","          AND p.thickness_mm IS NULL","          AND JSON_EXTRACT(rl.calc_detail, '$.Tmm') IS NOT NULL","      \");","      $bf->execute([$plan_id]);","    } catch (Throwable $e) {","      // non-fatal","    }","","  if ($pdo->inTransaction()) $pdo->commit();","  } catch (Throwable $e) {","    if ($pdo->inTransaction()) $pdo->rollBack();","    // Seeding is optional; still open the plan with a reason","    header('Location: plate_plan_form.php?id='.$plan_id.'&seed_skipped=1&reason='.rawurlencode($e->getMessage()));","    exit;","  }","}","","/* 2) Done \u2192 open the plan (show how many we seeded, if any) */","$qs = 'id='.$plan_id;","if ($seeded > 0) $qs .= '&seeded='.$seeded;","header('Location: plate_plan_form.php?'.$qs);","exit;"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/po_attach_upload.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","","require_login();","require_permission('purchase.po.manage');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","function col_exists(PDO $pdo, string $table, string $col): bool {","  $sql = \"SELECT 1 FROM information_schema.COLUMNS","          WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = ? AND COLUMN_NAME = ? LIMIT 1\";","  $st = $pdo->prepare($sql); $st->execute([$table, $col]);","  return (bool)$st->fetchColumn();","}","function first_existing(PDO $pdo, string $table, array $candidates): string {","  foreach ($candidates as $c) if ($c && col_exists($pdo,$table,$c)) return $c;","  return '';","}","","$po_id = (int)($_POST['po_id'] ?? 0);","if ($po_id<=0) { http_response_code(400); echo \"Missing po_id\"; exit; }","","$st=$pdo->prepare(\"SELECT id FROM purchase_orders WHERE id=?\");","$st->execute([$po_id]);","if(!$st->fetch()){ http_response_code(404); echo \"PO not found\"; exit; }","","if (!isset($_FILES['file']) || $_FILES['file']['error']!==UPLOAD_ERR_OK) {","  http_response_code(400); echo \"Upload error\"; exit;","}","$notes = trim((string)($_POST['notes'] ?? ''));","","$dir = __DIR__.'/../uploads/po';","if (!is_dir($dir)) @mkdir($dir, 0775, true);","","$orig = $_FILES['file']['name'];","$tmp  = $_FILES['file']['tmp_name'];","$mime = mime_content_type($tmp) ?: ($_FILES['file']['type'] ?? 'application/octet-stream');","$size = (int)($_FILES['file']['size'] ?? 0);","$ext  = pathinfo($orig, PATHINFO_EXTENSION);","$fname = 'po-'.$po_id.'-'.bin2hex(random_bytes(6)).($ext?'.'.$ext:'');","$destRel = '/uploads/po/'.$fname;","$destAbs = __DIR__.'/..'.$destRel;","if (!move_uploaded_file($tmp, $destAbs)) { http_response_code(500); echo \"Failed to save file\"; exit; }","","// Detect columns present in attachments","$attTable = 'attachments';","$nameCol  = first_existing($pdo,$attTable, ['original_name','filename','name']); // required","$pathCol  = first_existing($pdo,$attTable, ['path','file_path','filepath','url']);","$mimeCol  = first_existing($pdo,$attTable, ['mime','mime_type','content_type']);","$sizeCol  = first_existing($pdo,$attTable, ['size','bytes','file_size']);","$uplByCol = first_existing($pdo,$attTable, ['uploaded_by','created_by','user_id']);","$timeCol  = first_existing($pdo,$attTable, ['uploaded_at','created_at']);","","if (!$nameCol) {","  @unlink($destAbs);","  http_response_code(500); echo \"attachments table must have one of: original_name/filename/name\"; exit;","}","","$cols=[]; $vals=[]; $phs=[];","$cols[]=$nameCol;  $vals[]=$orig;         $phs[]='?';","if ($pathCol) { $cols[]=$pathCol; $vals[]=$destRel;             $phs[]='?'; }","if ($mimeCol) { $cols[]=$mimeCol; $vals[]=$mime;                $phs[]='?'; }","if ($sizeCol) { $cols[]=$sizeCol; $vals[]=$size;                $phs[]='?'; }","if ($uplByCol){ $cols[]=$uplByCol;$vals[] = current_user_id();  $phs[]='?'; }","if ($timeCol) { $cols[]=$timeCol; $vals[] = date('Y-m-d H:i:s');$phs[]='?'; }","","$pdo->beginTransaction();","try {","  $sql = \"INSERT INTO attachments (\".implode(',',$cols).\") VALUES (\".implode(',',$phs).\")\";","  $ins = $pdo->prepare($sql);","  $ins->execute($vals);","  $aid = (int)$pdo->lastInsertId();","","  // attachment_links may or may not have 'notes'","  $hasNotes = col_exists($pdo, 'attachment_links', 'notes');","  if ($hasNotes) {","    $insL = $pdo->prepare(\"INSERT INTO attachment_links (attachment_id, entity_type, entity_id, notes) VALUES (?,?,?,?)\");","    $insL->execute([$aid, 'purchase_order', $po_id, $notes ?: null]);","  } else {","    $insL = $pdo->prepare(\"INSERT INTO attachment_links (attachment_id, entity_type, entity_id) VALUES (?,?,?)\");","    $insL->execute([$aid, 'purchase_order', $po_id]);","  }","","  $pdo->commit();","} catch (Throwable $e) {","  $pdo->rollBack();","  @unlink($destAbs);","  http_response_code(500); echo \"Save failed: \".$e->getMessage(); exit;","}","","header('Location: /purchase/po_form.php?id='.$po_id);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/po_print.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","","require_login();","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$id = (int)($_GET['id'] ?? 0);","if ($id<=0){ http_response_code(400); echo \"Missing id\"; exit; }","","$po=$pdo->prepare(\"","  SELECT po.*, p.name AS supplier_name, pr.code AS project_code, pr.name AS project_name","  FROM purchase_orders po","  LEFT JOIN parties  p  ON p.id=po.supplier_id","  LEFT JOIN projects pr ON pr.id=po.project_id","  WHERE po.id=?\");","$po->execute([$id]);","$po=$po->fetch(PDO::FETCH_ASSOC);","if(!$po){ http_response_code(404); echo \"PO not found\"; exit; }","","$lines=$pdo->prepare(\"SELECT li.*, it.material_code, it.name AS item_name, u.code AS uom_code","                      FROM purchase_order_items li","                      LEFT JOIN items it ON it.id=li.item_id","                      LEFT JOIN uom   u  ON u.id=li.uom_id","                      WHERE li.po_id=? ORDER BY li.id\");","$lines->execute([$id]);","$lines=$lines->fetchAll(PDO::FETCH_ASSOC);","?>","<!doctype html>","<html lang=\"en\">","<head>","<meta charset=\"utf-8\">","<title>PO <?=htmlspecialchars((string)$po['po_no'])?></title>","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","<style>","  @media print {","    .noprint { display:none !important; }","    .card, .table { box-shadow: none !important; }","    body { -webkit-print-color-adjust: exact; print-color-adjust: exact; }","  }","</style>","</head>","<body class=\"p-4\">","  <div class=\"d-flex justify-content-between align-items-start mb-3\">","    <div>","      <h1 class=\"h4 mb-1\">Purchase Order</h1>","      <div class=\"text-muted\">PO No: <?=htmlspecialchars((string)$po['po_no'])?></div>","    </div>","    <button class=\"btn btn-dark noprint\" onclick=\"window.print()\">Print</button>","  </div>","","  <div class=\"row g-3 mb-3\">","    <div class=\"col-6\">","      <div class=\"border rounded p-3\">","        <div><strong>Supplier</strong></div>","        <div><?=htmlspecialchars((string)($po['supplier_name']??''))?></div>","      </div>","    </div>","    <div class=\"col-6\">","      <div class=\"border rounded p-3\">","        <div><strong>Project</strong></div>","        <div><?=htmlspecialchars((string)($po['project_code'] ?? ''))?>","          <?php if (!empty($po['project_name'])): ?>","            \u2014 <span class=\"text-muted\"><?=htmlspecialchars((string)$po['project_name'])?></span>","          <?php endif; ?>","        </div>","        <div class=\"mt-2\"><strong>Date:</strong> <?=htmlspecialchars((string)$po['po_date'])?></div>","        <div><strong>Currency:</strong> <?=htmlspecialchars((string)$po['currency'])?></div>","      </div>","    </div>","  </div>","","  <table class=\"table table-bordered table-sm align-middle\">","    <thead class=\"table-light\">","      <tr>","        <th style=\"width:40%\">Item</th>","        <th class=\"text-end\" style=\"width:10%\">Qty</th>","        <th style=\"width:10%\">UOM</th>","        <th class=\"text-end\" style=\"width:10%\">Unit</th>","        <th class=\"text-end\" style=\"width:10%\">Disc %</th>","        <th class=\"text-end\" style=\"width:10%\">Tax %</th>","        <th class=\"text-end\" style=\"width:10%\">Line Total</th>","      </tr>","    </thead>","    <tbody>","      <?php foreach ($lines as $ln): ?>","        <tr>","          <td><?=htmlspecialchars((string)(($ln['material_code'] ?? '').' \u2014 '.($ln['item_name'] ?? '')))?></td>","          <td class=\"text-end\"><?= number_format((float)($ln['qty'] ?? 0), 3) ?></td>","          <td><?=htmlspecialchars((string)($ln['uom_code'] ?? ''))?></td>","          <td class=\"text-end\"><?= number_format((float)($ln['unit_price'] ?? 0), 2) ?></td>","          <td class=\"text-end\"><?= number_format((float)($ln['discount_percent'] ?? 0), 2) ?></td>","          <td class=\"text-end\"><?= number_format((float)($ln['tax_percent'] ?? 0), 2) ?></td>","          <td class=\"text-end\"><?= number_format((float)($ln['line_total_after_tax'] ?? 0), 2) ?></td>","        </tr>","      <?php endforeach; ?>","      <?php if (!$lines): ?>","        <tr><td colspan=\"7\" class=\"text-center text-muted\">No lines</td></tr>","      <?php endif; ?>","    </tbody>","    <tfoot>","      <tr><th colspan=\"6\" class=\"text-end\">Subtotal</th><th class=\"text-end\"><?= number_format((float)($po['total_before_tax'] ?? 0), 2) ?></th></tr>","      <tr><th colspan=\"6\" class=\"text-end\">Tax</th><th class=\"text-end\"><?= number_format((float)($po['total_tax'] ?? 0), 2) ?></th></tr>","      <tr><th colspan=\"6\" class=\"text-end\">Total</th><th class=\"text-end\"><?= number_format((float)($po['total_after_tax'] ?? 0), 2) ?></th></tr>","    </tfoot>","  </table>","","  <?php if (!empty($po['payment_terms']) || !empty($po['freight_terms']) || !empty($po['delivery_terms'])): ?>","    <div class=\"mt-3\">","      <h2 class=\"h6\">Commercial Terms</h2>","      <ul class=\"mb-0\">","        <?php if (!empty($po['payment_terms'])): ?><li><strong>Payment:</strong> <?=htmlspecialchars((string)$po['payment_terms'])?></li><?php endif; ?>","        <?php if (!empty($po['freight_terms'])): ?><li><strong>Transport/Freight:</strong> <?=htmlspecialchars((string)$po['freight_terms'])?></li><?php endif; ?>","        <?php if (!empty($po['delivery_terms'])): ?><li><strong>Delivery:</strong> <?=htmlspecialchars((string)$po['delivery_terms'])?></li><?php endif; ?>","      </ul>","    </div>","  <?php endif; ?>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/plate_lot_finalize.php": ["<?php","/** PATH: /public_html/purchase/plate_lot_finalize.php"," * BUILD: 2025-10-03T09:27:07 IST (Idempotent autolot; unique child remnant IDs; safe available area)"," */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_login();","$pdo = db();","header('Content-Type: text/html; charset=utf-8');","","function h($s){ return htmlspecialchars((string)$s, ENT_QUOTES, 'UTF-8'); }","if (!function_exists('has_table')) {","  function has_table(PDO $pdo, string $t): bool {","    try { $st=$pdo->prepare(\"SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME=?\"); $st->execute([$t]); return (bool)$st->fetchColumn(); }","    catch(Throwable $e){ return false; }","  }","}","function dims_from_calc(?string $json): array {","  if (!$json) return [null,null,null];","  $j = json_decode($json, true);","  if (!is_array($j)) return [null,null,null];","  $L = null; foreach (['Lmm','L','length_mm','len','Length'] as $k) if (isset($j[$k]) && is_numeric($j[$k])) { $L=(float)$j[$k]; break; }","  $W = null; foreach (['Wmm','W','width_mm','wid','Width']  as $k) if (isset($j[$k]) && is_numeric($j[$k])) { $W=(float)$j[$k]; break; }","  $T = null; foreach (['Tmm','T','thickness_mm','Thk']      as $k) if (isset($j[$k]) && is_numeric($j[$k])) { $T=(float)$j[$k]; break; }","  return [$L,$W,$T];","}","","$plate_id = (int)($_GET['plate_id'] ?? 0);","if ($plate_id<=0) { http_response_code(400); echo \"Missing plate_id\"; exit; }","","/* Load plate + plan */","$st = $pdo->prepare(\"SELECT p.*, pl.plan_no, pl.project_id, pl.id AS plan_id_real","                     FROM plate_plan_plates p","                     LEFT JOIN plate_plans pl ON pl.id = p.plan_id","                     WHERE p.id=?\");","$st->execute([$plate_id]); $plate = $st->fetch();","if (!$plate) { http_response_code(404); echo \"Plate not found.\"; exit; }","$plan_id = (int)$plate['plan_id_real'];","$lot_id  = (int)($plate['source_lot_id'] ?? 0);","$stockTables = has_table($pdo,'stock_lots');","","/* Load allocations & compute used area */","$allocs = $pdo->prepare(\"","  SELECT a.id AS alloc_id, a.part_id, a.alloc_qty, a.allocated_area_mm2,","         rl.calc_detail, pp.thickness_mm","  FROM plate_plan_allocations a","  LEFT JOIN plate_plan_parts pp ON pp.id = a.part_id","  LEFT JOIN rm_requirement_lines rl ON rl.id = pp.req_line_id","  WHERE a.plan_id=? AND a.plate_id=?","\");","$allocs->execute([$plan_id,$plate_id]);","$used = 0; $missing=[];","while ($r=$allocs->fetch(PDO::FETCH_ASSOC)) {","  $area = (int)$r['allocated_area_mm2'];","  if (!$area) {","    [$L,$W,$T] = dims_from_calc($r['calc_detail'] ?? null);","    if ($L && $W) { $area = (int)round(floor($L)*floor($W)*(int)$r['alloc_qty']); }","    else $missing[] = (int)$r['part_id'];","  }","  $used += (int)$area;","}","if (!$used) { http_response_code(400); echo \"Used area = 0. Nothing to finalize.\"; exit; }","if ($missing) { http_response_code(400); echo \"Missing L/W for parts: \".h(implode(',',$missing)); exit; }","","/* Plate usable area (trim-aware) */","$uL = max(0.0, (float)$plate['length_mm'] - 2*(int)$plate['trim_allow_mm']);","$uW = max(0.0, (float)$plate['width_mm']  - 2*(int)$plate['trim_allow_mm']);","$usable = (int)round($uL*$uW);","","if (!$stockTables) {","  $pdo->prepare(\"UPDATE plate_plans SET status='balanced' WHERE id=?\")->execute([$plan_id]);","  header('Location: plate_plan_form.php?id='.$plan_id.'&ok=1'); exit;","}","","/* IDP: Get-or-create parent autolot for this plate when no lot is linked */","$parent = null;","if ($lot_id<=0) {","  $internal = 'PLATE-'.$plate_id;","  $q = $pdo->prepare(\"SELECT * FROM stock_lots WHERE internal_lot_no=? AND (parent_lot_id IS NULL OR parent_lot_id=0) ORDER BY id DESC LIMIT 1\");","  $q->execute([$internal]); $parent = $q->fetch();","  if (!$parent) {","    $owner = 'company'; $itemCode=''; $itemName='';","    $ins = $pdo->prepare(\"INSERT INTO stock_lots","      (item_id,item_code,item_name,owner,origin_plan_id,origin_plan_no,origin_project_id,","       thickness_mm,length_mm,width_mm,area_mm2,available_area_mm2,weight_kg,","       plate_no,heat_no,internal_lot_no,source,parent_lot_id,chain_root_lot_id,status,received_at,remarks)","      VALUES (?,?,?,?, ?,?,?, ?,?,?, ?,?,?, ?,?,?, ?,?,?, 'available', NOW(), 'auto parent (idempotent)')\");","    $ins->execute([ (int)$plate['item_id'], $itemCode, $itemName, $owner,","      $plan_id, $plate['plan_no'], $plate['project_id'],","      (float)$plate['thickness_mm'], (float)$plate['length_mm'], (float)$plate['width_mm'], $usable, $usable, (float)($plate['total_plate_kg'] ?? 0),","      null, null, $internal, 'new', null, null","    ]);","    $lot_id = (int)$pdo->lastInsertId();","    $pdo->prepare(\"UPDATE stock_lots SET chain_root_lot_id=? WHERE id=?\")->execute([$lot_id,$lot_id]);","    $q->execute([$internal]); $parent = $q->fetch();","  } else {","    $lot_id = (int)$parent['id'];","  }","}","/* If a lot was linked, fetch it as parent */","if (!$parent) {","  $s=$pdo->prepare(\"SELECT * FROM stock_lots WHERE id=?\"); $s->execute([$lot_id]); $parent=$s->fetch();","  if (!$parent) { http_response_code(400); echo \"Lot not found.\"; exit; }","}","","/* Stock consumption + optional child creation */","$pdo->beginTransaction();","try {","  $st=$pdo->prepare(\"SELECT * FROM stock_lots WHERE id=? FOR UPDATE\");","  $st->execute([(int)$parent['id']]); $parent=$st->fetch();","  if (!$parent) throw new RuntimeException(\"Lot not found.\");","  if (!in_array($parent['status'], ['available','partial'], true)) throw new RuntimeException(\"Lot not available (status: \".$parent['status'].\").\");","","  $avail = (int)$parent['available_area_mm2'];","  if ($avail <= 0) $avail = (int)$parent['area_mm2']; // safety for old rows","  if ($used > $avail) throw new RuntimeException(\"Used area exceeds lot available area.\");","","  /* trace (if table exists) */","  $hasTrace = false;","  try { $chk = $pdo->query(\"SELECT 1 FROM part_traceability LIMIT 1\"); $hasTrace = (bool)$chk; } catch(Throwable $e) { $hasTrace=false; }","  if ($hasTrace) {","    $ins=$pdo->prepare(\"INSERT INTO part_traceability (plan_id,plate_id,allocation_id,part_id,lot_id,plate_no,heat_no,process_code,recorded_at) VALUES (?,?,?,?,?,?,?,? ,NOW())\");","    $allocs->execute([$plan_id,$plate_id]);","    while ($r=$allocs->fetch(PDO::FETCH_ASSOC)) { $ins->execute([$plan_id,$plate_id,(int)$r['alloc_id'],(int)$r['part_id'], (int)$parent['id'], $parent['plate_no'], $parent['heat_no'], 'CUT']); }","  }","","  /* leftover and child remnant if > 10,000 mm\u00b2 */","  $left = max(0, $usable - $used);","  if ($left > 10000) {","    // generate unique child internal_lot_no: PARENT-R, PARENT-R2, PARENT-R3...","    $base = (($parent['internal_lot_no'] ?? '') !== '' ? $parent['internal_lot_no'] : ('P-'.$parent['id'])) . '-R';","    $suffix = '';","    $getC = $pdo->prepare(\"SELECT internal_lot_no FROM stock_lots WHERE parent_lot_id=? AND internal_lot_no LIKE CONCAT(?, '%')\");","    $getC->execute([(int)$parent['id'], $base]);","    $maxN = 0;","    while ($row = $getC->fetch(PDO::FETCH_ASSOC)) {","      $lotno = (string)$row['internal_lot_no'];","      if (preg_match('/-R(\\d+)$/', $lotno, $m)) { $n = (int)$m[1]; if ($n>$maxN) $maxN = $n; }","      elseif ($lotno === $base) { if ($maxN==0) $maxN = 1; } // '-R' exists, next will be -R2","    }","    if ($maxN >= 1) $suffix = (string)($maxN+1);","    $childLotNo = $base . $suffix;","","    $insC=$pdo->prepare(\"INSERT INTO stock_lots","      (item_id,item_code,item_name,owner,origin_plan_id,origin_plan_no,origin_project_id,","       thickness_mm,length_mm,width_mm,area_mm2,available_area_mm2,weight_kg,","       plate_no,heat_no,internal_lot_no,source,parent_lot_id,chain_root_lot_id,status,received_at,remarks)","      VALUES (?,?,?,?, ?,?,?, ?,?,?, ?,?,?, ?,?,?, ?,?,?, 'available', NOW(), 'auto remnant (finalize)')\");","    $insC->execute([","      (int)$parent['item_id'], $parent['item_code'], $parent['item_name'], $parent['owner'],","      $plan_id, $plate['plan_no'], $plate['project_id'],","      (float)$plate['thickness_mm'], (float)$plate['length_mm'], (float)$plate['width_mm'], $left, $left, (float)$parent['weight_kg'],","      $parent['plate_no'], $parent['heat_no'], $childLotNo, 'remnant', (int)$parent['id'], (int)($parent['chain_root_lot_id'] ?: $parent['id'])","    ]);","  }","  /* consume/partial parent */","  $newAvail = max(0, $avail - $used);","  $newStatus = $newAvail>0 ? 'partial' : 'consumed';","  $pdo->prepare(\"UPDATE stock_lots SET available_area_mm2=?, status=? WHERE id=?\")->execute([$newAvail,$newStatus,(int)$parent['id']]);","","  $pdo->prepare(\"UPDATE plate_plans SET status='balanced' WHERE id=?\")->execute([$plan_id]);","  $pdo->commit();","  header('Location: plate_plan_form.php?id='.$plan_id.'&ok=1'); exit;","","} catch(Throwable $e) {","  $pdo->rollBack();","  http_response_code(400);","  echo \"Finalize failed: \".h($e->getMessage());","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/bom_form.php": ["<?php","/** PATH: /public_html/purchase/bom_form.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","if (function_exists('require_permission')) { @require_permission('purchase.bom.manage'); }","","$pdo = db();","$pdo->query(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","$pdo->query(\"SET collation_connection = 'utf8mb4_general_ci'\");","","/** Helpers */","function h(?string $s): string { return htmlspecialchars((string)$s, ENT_QUOTES, 'UTF-8'); }","function num($v, int $p = 3): string { return ($v===''||$v===null) ? '' : number_format((float)$v, $p, '.', ''); }","","function table_exists(PDO $pdo, string $table): bool {","  $q = $pdo->prepare(\"SELECT 1 FROM information_schema.TABLES WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME=? LIMIT 1\");","  $q->execute([$table]); return (bool)$q->fetchColumn();","}","","/** Generate next BOM number (BOM-YYYY-####). Never insert '' into a UNIQUE bom_no. */","function next_bom_no(PDO $pdo): string {","  $y = (int)date('Y');","  $st = $pdo->prepare(\"","    SELECT MAX(CAST(SUBSTRING_INDEX(bom_no, '-', -1) AS UNSIGNED)) AS maxseq","    FROM bom","    WHERE bom_no LIKE CONCAT('BOM-', ?, '-%')","  \");","  $st->execute([$y]);","  $seq = (int)($st->fetchColumn() ?: 0) + 1;","  return 'BOM-' . $y . '-' . str_pad((string)$seq, 4, '0', STR_PAD_LEFT);","}","","/** Load header (new or existing) */","$id = (int)($_GET['id'] ?? 0);","$is_edit = $id > 0;","","if ($is_edit) {","  $st = $pdo->prepare(\"SELECT * FROM bom WHERE id=?\");","  $st->execute([$id]);","  $hdr = $st->fetch(PDO::FETCH_ASSOC);","  if (!$hdr) { http_response_code(404); exit('BOM not found'); }","} else {","  $hdr = [","    'bom_no' => '',","    'project_id' => null,","    'revision' => '',","    'status' => 'draft',","    'notes' => '',","  ];","}","","/** Masters */","$projects = [];","try {","  $projects = $pdo->query(\"SELECT id, CONCAT(code,' \u2014 ',name) label FROM projects ORDER BY id DESC\")->fetchAll(PDO::FETCH_ASSOC);","} catch (Throwable $e) { $projects = []; }","","$uoms = [];","try {","  $uoms = $pdo->query(\"SELECT id, CONCAT(code,' \u2014 ',name) label FROM uom ORDER BY code\")->fetchAll(PDO::FETCH_ASSOC);","} catch (Throwable $e) { $uoms = []; }","","$makes = [];","try {","  $makes = $pdo->query(\"SELECT id, name FROM makes ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","} catch (Throwable $e) { $makes = []; }","","/** Spans (optional) */","$hasSpans   = table_exists($pdo, 'project_spans');","$hasBomSpan = table_exists($pdo, 'bom_spans');","","$included_span_ids = [];","$spans = [];","if ($is_edit && $hasSpans && $hasBomSpan) {","  $q = $pdo->prepare(\"SELECT proj_span_id AS id FROM bom_spans WHERE bom_id=?\");","  $q->execute([$id]);","  $included_span_ids = array_map('intval', array_column($q->fetchAll(PDO::FETCH_ASSOC), 'id'));","}","if ($hasSpans && !empty($hdr['project_id'])) {","  try {","    $st = $pdo->prepare(\"SELECT id, CONCAT(code,' \u2014 ',name) AS label FROM project_spans WHERE project_id=? ORDER BY id\");","    $st->execute([(int)$hdr['project_id']]);","    $spans = $st->fetchAll(PDO::FETCH_ASSOC);","  } catch (Throwable $e) { $spans = []; }","}","","/** POST: Save */","$ok = $_GET['ok'] ?? '';","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  $pdo->beginTransaction();","  try {","    // Header","    $project_id = (int)($_POST['project_id'] ?? 0) ?: null;","    $revision   = trim((string)($_POST['revision'] ?? ''));","    $status     = trim((string)($_POST['status'] ?? 'draft'));","    $notes      = trim((string)($_POST['notes'] ?? ''));","","    if ($is_edit) {","      $pdo->prepare(\"UPDATE bom SET project_id=?, revision=?, status=?, notes=? WHERE id=?\")","          ->execute([$project_id, $revision, $status, $notes, $id]);","    } else {","      $bom_no_in = trim((string)($_POST['bom_no'] ?? ''));","      $bom_no = $bom_no_in !== '' ? $bom_no_in : next_bom_no($pdo);","      $pdo->prepare(\"INSERT INTO bom (bom_no, project_id, revision, status, notes) VALUES (?,?,?,?,?)\")","          ->execute([$bom_no, $project_id, $revision, $status, $notes]);","      $id = (int)$pdo->lastInsertId();","      $is_edit = true;","      $hdr['bom_no'] = $bom_no;","    }","","    // Optional spans","    if ($hasSpans && $hasBomSpan) {","      $posted_spans = array_map('intval', (array)($_POST['span_ids'] ?? []));","      $pdo->prepare(\"DELETE FROM bom_spans WHERE bom_id=?\")->execute([$id]);","      if ($posted_spans) {","        $insSp = $pdo->prepare(\"INSERT INTO bom_spans (bom_id, proj_span_id) VALUES (?,?)\");","        foreach ($posted_spans as $sid) { $insSp->execute([$id, $sid]); }","      }","    }","","    // Replace components","    $line_count = max(0, (int)($_POST['line_count'] ?? 0));","    $pdo->prepare(\"DELETE FROM bom_components WHERE bom_id=?\")->execute([$id]);","","    $ins = $pdo->prepare(\"","      INSERT INTO bom_components","        (bom_id, sr_no, span_no, span_id, part_id, line_code, segment_idx,","         description, item_id, uom_id,","         length_mm, width_mm, thickness_mm, density_gcc, scrap_allow_pct,","         qty, weight_kg, make_id, spec_text, remark, sort_order)","      VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)","    \");","","    for ($i = 1; $i <= $line_count; $i++) {","      // Names from UI: sr_, span_no_, span_id_, part_, code_, seg_, desc_, item_, uom_, len_, wid_, thk_,","      // rho_, scrap_, qty_, wkg_, make_, spec_, rem_","      $sr      = (int)($_POST[\"sr_$i\"] ?? 0);","      $spanNo  = trim((string)($_POST[\"span_no_$i\"] ?? ''));","      $spanId  = $_POST[\"span_id_$i\"] !== '' ? (int)($_POST[\"span_id_$i\"] ?? 0) : null;","","      $partId  = trim((string)($_POST[\"part_$i\"] ?? ''));","      $lineCode= trim((string)($_POST[\"code_$i\"] ?? ''));","      $segIdx  = ($_POST[\"seg_$i\"] ?? '') !== '' ? (int)$_POST[\"seg_$i\"] : null;","","      $desc    = trim((string)($_POST[\"desc_$i\"] ?? ''));","      $itemId  = ($_POST[\"item_$i\"] ?? '') !== '' ? (int)$_POST[\"item_$i\"] : null;","      $uomId   = ($_POST[\"uom_$i\"] ?? '') !== '' ? (int)$_POST[\"uom_$i\"] : null;","","      $len     = ($_POST[\"len_$i\"] ?? '') !== '' ? (float)$_POST[\"len_$i\"] : null; // mm","      $wid     = ($_POST[\"wid_$i\"] ?? '') !== '' ? (float)$_POST[\"wid_$i\"] : null; // mm","      $thk     = ($_POST[\"thk_$i\"] ?? '') !== '' ? (float)$_POST[\"thk_$i\"] : null; // mm","      $rho_gcc = ($_POST[\"rho_$i\"] ?? '') !== '' ? (float)$_POST[\"rho_$i\"] : null; // g/cc","      $scrap   = ($_POST[\"scrap_$i\"] ?? '') !== '' ? (float)$_POST[\"scrap_$i\"] : 0.0; // %","","      $qty     = ($_POST[\"qty_$i\"] ?? '') !== '' ? (float)$_POST[\"qty_$i\"] : 1.0;","      $wkg_in  = ($_POST[\"wkg_$i\"] ?? '') !== '' ? (float)$_POST[\"wkg_$i\"] : null;","","      $makeId  = ($_POST[\"make_$i\"] ?? '') !== '' ? (int)$_POST[\"make_$i\"] : null;","      $spec    = trim((string)($_POST[\"spec_$i\"] ?? ''));","      $rem     = trim((string)($_POST[\"rem_$i\"] ?? ''));","","      // Compute weight if not provided","      $weight_kg = $wkg_in;","      if (($weight_kg === null || $weight_kg <= 0) && $len !== null && $wid !== null && $thk !== null && $rho_gcc !== null) {","        $vol_m3 = ($len/1000.0) * ($wid/1000.0) * ($thk/1000.0);","        $rho_kgm3 = $rho_gcc * 1000.0;","        $piece_kg = $vol_m3 * $rho_kgm3;","        if ($scrap > 0) $piece_kg *= (1.0 + $scrap/100.0);","        $weight_kg = $piece_kg * max(1.0, $qty);","      }","","      $ins->execute([","        $id, $sr, $spanNo, $spanId, $partId, $lineCode, $segIdx,","        $desc, $itemId, $uomId,","        $len, $wid, $thk, $rho_gcc, $scrap,","        $qty, $weight_kg, $makeId, $spec, $rem, $i","      ]);","    }","","    $pdo->commit();","    header(\"Location: bom_form.php?id={$id}&ok=\" . urlencode(\"BOM saved\"));","    exit;","  } catch (Throwable $e) {","    $pdo->rollBack();","    http_response_code(500);","    echo \"Save failed: \" . h($e->getMessage());","    exit;","  }","}","","/** UI */","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container-fluid py-3\">","  <div class=\"d-flex justify-content-between align-items-center\">","    <h3 class=\"mb-0\">BOM <?= $is_edit ? 'Edit' : 'Create' ?></h3>","    <div>","      <?php if ($is_edit): ?>","        <a class=\"btn btn-outline-secondary\" href=\"/bom/routing_form.php?bom_id=<?= (int)$id ?>\">Routing</a>","        <a class=\"btn btn-outline-secondary\" href=\"../workorders/pwo_form.php?bom_id=<?= (int)$id ?>\">Generate PWOs</a>","      <?php endif; ?>","      <a class=\"btn btn-outline-primary\" href=\"bom_list.php\">Back to List</a>","    </div>","  </div>","  <?php if ($ok): ?>","    <div class=\"alert alert-success my-3\"><?= h($ok) ?></div>","  <?php endif; ?>","","  <form method=\"post\" class=\"mt-3\" autocomplete=\"off\">","    <div class=\"card mb-3\">","      <div class=\"card-body row g-3\">","        <div class=\"col-md-3\">","          <label class=\"form-label\">BOM No</label>","          <input type=\"text\" name=\"bom_no\" class=\"form-control\" value=\"<?= h((string)($hdr['bom_no'] ?? '')) ?>\" <?= $is_edit ? 'readonly' : '' ?>>","          <?php if (!$is_edit): ?><div class=\"form-text\">Leave blank to auto-generate.</div><?php endif; ?>","        </div>","        <div class=\"col-md-4\">","          <label class=\"form-label\">Project</label>","          <select class=\"form-select\" name=\"project_id\" onchange=\"document.getElementById('projChanged').value='1'\">","            <option value=\"\">\u2014</option>","            <?php foreach ($projects as $p): ?>","              <option value=\"<?= (int)$p['id'] ?>\" <?= (int)($hdr['project_id'] ?? 0)===(int)$p['id'] ? 'selected' : '' ?>><?= h($p['label']) ?></option>","            <?php endforeach; ?>","          </select>","          <input type=\"hidden\" name=\"projChanged\" id=\"projChanged\" value=\"0\">","        </div>","        <div class=\"col-md-2\">","          <label class=\"form-label\">Revision</label>","          <input type=\"text\" class=\"form-control\" name=\"revision\" value=\"<?= h((string)($hdr['revision'] ?? '')) ?>\">","        </div>","        <div class=\"col-md-3\">","          <label class=\"form-label\">Status</label>","          <select class=\"form-select\" name=\"status\">","            <?php","              $statuses = ['draft'=>'Draft','active'=>'Active','obsolete'=>'Obsolete'];","              foreach ($statuses as $k=>$v) {","                $sel = ((string)($hdr['status'] ?? 'draft') === $k) ? 'selected' : '';","                echo \"<option value=\\\"\".h($k).\"\\\" $sel>\".h($v).\"</option>\";","              }","            ?>","          </select>","        </div>","        <div class=\"col-12\">","          <label class=\"form-label\">Notes</label>","          <textarea name=\"notes\" class=\"form-control\" rows=\"2\"><?= h((string)($hdr['notes'] ?? '')) ?></textarea>","        </div>","      </div>","    </div>","","    <?php if ($hasSpans && $hasBomSpan): ?>","    <div class=\"card mb-3\">","      <div class=\"card-header\">Project Spans</div>","      <div class=\"card-body\">","        <?php if ($spans): ?>","          <div class=\"row row-cols-1 row-cols-md-3 g-2\">","            <?php foreach ($spans as $sp): ?>","              <?php $ck = in_array((int)$sp['id'], $included_span_ids, true) ? 'checked' : ''; ?>","              <div class=\"col\">","                <label class=\"form-check\">","                  <input class=\"form-check-input\" type=\"checkbox\" name=\"span_ids[]\" value=\"<?= (int)$sp['id'] ?>\" <?= $ck ?>>","                  <span class=\"form-check-label\"><?= h($sp['label']) ?></span>","                </label>","              </div>","            <?php endforeach; ?>","          </div>","        <?php else: ?>","          <div class=\"text-muted\">No spans found for selected project.</div>","        <?php endif; ?>","      </div>","    </div>","    <?php endif; ?>","","    <div class=\"card\">","      <div class=\"card-header d-flex justify-content-between align-items-center\">","        <span>Components</span>","        <div class=\"small text-muted\">Rows: <span id=\"rowCount\">0</span></div>","      </div>","      <div class=\"table-responsive\">","        <table class=\"table table-sm align-middle mb-0\">","          <thead class=\"table-light\">","            <tr>","              <th>#</th>","              <th>Span No</th>","              <th>Span Id</th>","              <th>Part</th>","              <th>Line Code</th>","              <th>Seg</th>","              <th>Description</th>","              <th style=\"min-width:240px\">Item (Raw)</th>","              <th>UOM</th>","              <th>L (mm)</th>","              <th>W (mm)</th>","              <th>T (mm)</th>","              <th>\u03c1 (g/cc)</th>","              <th>Scrap %</th>","              <th>Qty</th>","              <th>Weight (kg)</th>","              <th>Make</th>","              <th>Spec</th>","              <th>Remark</th>","              <th></th>","            </tr>","          </thead>","          <tbody id=\"tbody\">","            <!-- Existing rows (when editing) -->","            <?php if ($is_edit):","              $rows = $pdo->prepare(\"SELECT * FROM bom_components WHERE bom_id=? ORDER BY sort_order, id\");","              $rows->execute([$id]);","              $i = 0;","              foreach ($rows->fetchAll(PDO::FETCH_ASSOC) as $r):","                $i++;","            ?>","            <tr>","              <td><input class=\"form-control form-control-sm\" name=\"sr_<?= $i ?>\" value=\"<?= (int)$r['sr_no'] ?>\"></td>","              <td><input class=\"form-control form-control-sm\" name=\"span_no_<?= $i ?>\" value=\"<?= h((string)$r['span_no']) ?>\"></td>","              <td><input class=\"form-control form-control-sm\" name=\"span_id_<?= $i ?>\" value=\"<?= (int)$r['span_id'] ?>\"></td>","              <td><input class=\"form-control form-control-sm\" name=\"part_<?= $i ?>\" value=\"<?= h((string)$r['part_id']) ?>\"></td>","              <td><input class=\"form-control form-control-sm\" name=\"code_<?= $i ?>\" value=\"<?= h((string)$r['line_code']) ?>\"></td>","              <td><input class=\"form-control form-control-sm\" name=\"seg_<?= $i ?>\" value=\"<?= h((string)$r['segment_idx']) ?>\"></td>","              <td><input class=\"form-control form-control-sm\" name=\"desc_<?= $i ?>\" value=\"<?= h((string)$r['description']) ?>\"></td>","              <td>","                <!-- Silently \"All Raw\": AJAX loads full eligible list -->","                <select class=\"form-select form-select-sm li-item\" name=\"item_<?= $i ?>\">","                  <?php if (!empty($r['item_id'])): ?>","                    <option value=\"<?= (int)$r['item_id'] ?>\" selected>Loading\u2026</option>","                  <?php else: ?>","                    <option value=\"\">\u2014 Select \u2014</option>","                  <?php endif; ?>","                </select>","                <div class=\"form-text small text-muted d-none li-item-hint\">No items found</div>","              </td>","              <td>","                <select class=\"form-select form-select-sm\" name=\"uom_<?= $i ?>\">","                  <option value=\"\">\u2014</option>","                  <?php foreach ($uoms as $u): ?>","                    <option value=\"<?= (int)$u['id'] ?>\" <?= ((int)$u['id'] === (int)$r['uom_id']) ? 'selected' : '' ?>><?= h($u['label']) ?></option>","                  <?php endforeach; ?>","                </select>","              </td>","              <td><input class=\"form-control form-control-sm\" name=\"len_<?= $i ?>\" value=\"<?= num($r['length_mm'],3) ?>\" oninput=\"recalcRow(this.closest('tr'))\"></td>","              <td><input class=\"form-control form-control-sm\" name=\"wid_<?= $i ?>\" value=\"<?= num($r['width_mm'],3) ?>\" oninput=\"recalcRow(this.closest('tr'))\"></td>","              <td><input class=\"form-control form-control-sm\" name=\"thk_<?= $i ?>\" value=\"<?= num($r['thickness_mm'],3) ?>\" oninput=\"recalcRow(this.closest('tr'))\"></td>","              <td><input class=\"form-control form-control-sm\" name=\"rho_<?= $i ?>\" value=\"<?= num($r['density_gcc'],6) ?>\" oninput=\"recalcRow(this.closest('tr'))\"></td>","              <td><input class=\"form-control form-control-sm\" name=\"scrap_<?= $i ?>\" value=\"<?= num($r['scrap_allow_pct'],3) ?>\" oninput=\"recalcRow(this.closest('tr'))\"></td>","              <td><input class=\"form-control form-control-sm\" name=\"qty_<?= $i ?>\" value=\"<?= num($r['qty'],3) ?>\" oninput=\"recalcRow(this.closest('tr'))\"></td>","              <td><input class=\"form-control form-control-sm text-end wkg\" name=\"wkg_<?= $i ?>\" value=\"<?= num($r['weight_kg'],3) ?>\"></td>","              <td>","                <select class=\"form-select form-select-sm\" name=\"make_<?= $i ?>\">","                  <option value=\"\">\u2014</option>","                  <?php foreach ($makes as $mk): ?>","                    <option value=\"<?= (int)$mk['id'] ?>\" <?= ((int)$mk['id'] === (int)$r['make_id']) ? 'selected' : '' ?>><?= h($mk['name']) ?></option>","                  <?php endforeach; ?>","                </select>","              </td>","              <td><input class=\"form-control form-control-sm\" name=\"spec_<?= $i ?>\" value=\"<?= h((string)$r['spec_text']) ?>\"></td>","              <td><input class=\"form-control form-control-sm\" name=\"rem_<?= $i ?>\" value=\"<?= h((string)$r['remark']) ?>\"></td>","              <td class=\"text-center\"><button type=\"button\" class=\"btn btn-sm btn-link text-danger\" onclick=\"rm(this)\">&times;</button></td>","            </tr>","            <?php endforeach; endif; ?>","          </tbody>","        </table>","      </div>","      <div class=\"card-footer d-flex gap-2\">","        <button type=\"button\" class=\"btn btn-outline-secondary\" onclick=\"addRow()\">Add Row</button>","        <input type=\"hidden\" name=\"line_count\" id=\"line_count\" value=\"0\">","        <button class=\"btn btn-primary ms-auto\">Save</button>","      </div>","    </div>","  </form>","</div>","","<script>","function rm(btn){","  const tr = btn.closest('tr');","  tr.parentNode.removeChild(tr);","  recount();","}","function addRow(){","  const tb = document.getElementById('tbody');","  const i = tb.querySelectorAll('tr').length + 1;","  const tr = document.createElement('tr');","  tr.innerHTML = `","    <td><input class=\"form-control form-control-sm\" name=\"sr_${i}\" value=\"${i}\"></td>","    <td><input class=\"form-control form-control-sm\" name=\"span_no_${i}\"></td>","    <td><input class=\"form-control form-control-sm\" name=\"span_id_${i}\"></td>","    <td><input class=\"form-control form-control-sm\" name=\"part_${i}\"></td>","    <td><input class=\"form-control form-control-sm\" name=\"code_${i}\"></td>","    <td><input class=\"form-control form-control-sm\" name=\"seg_${i}\"></td>","    <td><input class=\"form-control form-control-sm\" name=\"desc_${i}\"></td>","    <td>","      <select class=\"form-select form-select-sm li-item\" name=\"item_${i}\">","        <option value=\"\">\u2014 Select \u2014</option>","      </select>","      <div class=\"form-text small text-muted d-none li-item-hint\">No items found</div>","    </td>","    <td>","      <select class=\"form-select form-select-sm\" name=\"uom_${i}\">","        <option value=\"\">\u2014</option>","        <?php foreach ($uoms as $u): ?>","          <option value=\"<?= (int)$u['id'] ?>\"><?= h($u['label']) ?></option>","        <?php endforeach; ?>","      </select>","    </td>","    <td><input class=\"form-control form-control-sm\" name=\"len_${i}\" oninput=\"recalcRow(this.closest('tr'))\"></td>","    <td><input class=\"form-control form-control-sm\" name=\"wid_${i}\" oninput=\"recalcRow(this.closest('tr'))\"></td>","    <td><input class=\"form-control form-control-sm\" name=\"thk_${i}\" oninput=\"recalcRow(this.closest('tr'))\"></td>","    <td><input class=\"form-control form-control-sm\" name=\"rho_${i}\" oninput=\"recalcRow(this.closest('tr'))\"></td>","    <td><input class=\"form-control form-control-sm\" name=\"scrap_${i}\" value=\"0\" oninput=\"recalcRow(this.closest('tr'))\"></td>","    <td><input class=\"form-control form-control-sm\" name=\"qty_${i}\" value=\"1\" oninput=\"recalcRow(this.closest('tr'))\"></td>","    <td><input class=\"form-control form-control-sm text-end wkg\" name=\"wkg_${i}\"></td>","    <td>","      <select class=\"form-select form-select-sm\" name=\"make_${i}\">","        <option value=\"\">\u2014</option>","        <?php foreach ($makes as $mk): ?>","          <option value=\"<?= (int)$mk['id'] ?>\"><?= h($mk['name']) ?></option>","        <?php endforeach; ?>","      </select>","    </td>","    <td><input class=\"form-control form-control-sm\" name=\"spec_${i}\"></td>","    <td><input class=\"form-control form-control-sm\" name=\"rem_${i}\"></td>","    <td class=\"text-center\"><button type=\"button\" class=\"btn btn-sm btn-link text-danger\" onclick=\"rm(this)\">&times;</button></td>","  `;","  tb.appendChild(tr);","  recount();","  wireBomRow(tr); // auto-load All Raw into the new row","  recalcRow(tr);","}","function recount(){","  const n = document.querySelectorAll('#tbody tr').length;","  document.getElementById('line_count').value = n;","  const el = document.getElementById('rowCount'); if (el) el.innerText = n;","}","function valOr0(v){ return v===''||v===null||isNaN(v) ? 0 : parseFloat(v); }","function recalcRow(tr){","  const len = valOr0(tr.querySelector('[name^=\"len_\"]')?.value || '');","  const wid = valOr0(tr.querySelector('[name^=\"wid_\"]')?.value || '');","  const thk = valOr0(tr.querySelector('[name^=\"thk_\"]')?.value || '');","  const rho = valOr0(tr.querySelector('[name^=\"rho_\"]')?.value || '');","  const scrap = valOr0(tr.querySelector('[name^=\"scrap_\"]')?.value || '');","  const qty = Math.max(1, valOr0(tr.querySelector('[name^=\"qty_\"]')?.value || '1'));","  let wkg = 0;","  if (len>0 && wid>0 && thk>0 && rho>0){","    const vol_m3 = (len/1000) * (wid/1000) * (thk/1000);","    const rho_kgm3 = rho * 1000.0;","    wkg = vol_m3 * rho_kgm3;","    if (scrap>0) wkg *= (1 + scrap/100.0);","    wkg *= qty;","  }","  const wEl = tr.querySelector('.wkg'); if (wEl) wEl.value = wkg ? wkg.toFixed(3) : '';","}","","/* ---------- Items Loader (silent \"All Raw\") ---------- */","async function fetchJSON(url){","  const res = await fetch(url, {headers: {'Accept': 'application/json'}});","  if(!res.ok) throw new Error('HTTP '+res.status);","  return await res.json();","}","async function loadBomItems(tr, selectedId){","  const itemSel = tr.querySelector('.li-item');","  const hint = tr.querySelector('.li-item-hint');","  if (!itemSel) return;","  itemSel.innerHTML = '<option value=\"\">Loading\u2026</option>';","  try{","    // 0 means: All Raw (server filters to Raw-Material family)","    const js = await fetchJSON('bom_items_options.php?subcategory_id=0');","    itemSel.innerHTML = '<option value=\"\">\u2014 Select \u2014</option>';","    if (js && js.ok && Array.isArray(js.items) && js.items.length){","      js.items.forEach(it=>{","        const op = document.createElement('option');","        op.value = it.id; op.textContent = it.label;","        if (selectedId && String(selectedId) === String(it.id)) op.selected = true;","        itemSel.appendChild(op);","      });","      if (hint) hint.classList.add('d-none');","    } else {","      if (hint){ hint.textContent = 'No items found'; hint.classList.remove('d-none'); }","    }","  }catch(e){","    itemSel.innerHTML = '<option value=\"\">\u2014 Select \u2014</option>';","    if (hint){ hint.textContent = 'Failed to load items'; hint.classList.remove('d-none'); }","  }","}","function wireBomRow(tr){","  const itemSel= tr.querySelector('.li-item');","  if (!itemSel) return;","  const preSel = itemSel.querySelector('option[selected]')?.value || itemSel.value || '';","  loadBomItems(tr, preSel);","}","// wire all existing rows","document.querySelectorAll('#tbody tr').forEach(wireBomRow);","","recount();","document.querySelectorAll('#tbody tr').forEach(tr => recalcRow(tr));","</script>","","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/rm_indents_list.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_permission('purchase.indent.view');","","$pdo = db();","$q = trim($_GET['q'] ?? '');","$status = trim($_GET['status'] ?? '');","$project_id = (int)($_GET['project_id'] ?? 0);","$where = []; $p = [];","","if ($q !== '') {","  $like = \"%$q%\";","  $where[] = \"(r.rmi_no COLLATE utf8mb4_unicode_ci LIKE ? OR pr.code COLLATE utf8mb4_unicode_ci LIKE ? OR pr.name COLLATE utf8mb4_unicode_ci LIKE ?)\";","  array_push($p, $like, $like, $like);","}","if ($status !== '' && in_array($status, ['draft','raised','approved','closed','cancelled'], true)) {","  $where[] = \"r.status COLLATE utf8mb4_unicode_ci = ?\";","  $p[] = $status;","}","if ($project_id > 0) { $where[] = \"r.project_id = ?\"; $p[] = $project_id; }","","$w = $where ? 'WHERE '.implode(' AND ', $where) : '';","","$sql = \"","SELECT r.id, r.rmi_no, r.status, r.priority, r.created_at,","       pr.code project_code, pr.name project_name,","       COALESCE( (SELECT SUM(theoretical_weight_kg) FROM rm_indent_lines l WHERE l.rmi_id=r.id), 0) total_kg","FROM rm_indents r","LEFT JOIN projects pr ON pr.id=r.project_id","$w","ORDER BY r.id DESC","LIMIT 300\";","$st = $pdo->prepare($sql); $st->execute($p);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","$projects = $pdo->query(\"SELECT id, CONCAT(code,' \u2014 ',name) label FROM projects ORDER BY id DESC LIMIT 500\")->fetchAll(PDO::FETCH_ASSOC);","","include __DIR__.'/../ui/layout_start.php';","?>","<div class=\"container py-4\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h2 class=\"mb-0\">Raw-Material Indents (RMI)</h2>","    <?php if (user_has_permission('purchase.indent.manage')): ?>","      <a class=\"btn btn-primary\" href=\"rm_indent_form.php\">+ New RMI</a>","    <?php endif; ?>","  </div>","","  <form class=\"row g-2 mb-3\">","    <div class=\"col-md-4\"><input class=\"form-control\" name=\"q\" placeholder=\"Search RMI/Project\" value=\"<?=htmlspecialchars($q)?>\"></div>","    <div class=\"col-md-3\">","      <select class=\"form-select\" name=\"project_id\">","        <option value=\"0\">All projects</option>","        <?php foreach ($projects as $p): ?>","          <option value=\"<?=$p['id']?>\" <?=($project_id===(int)$p['id']?'selected':'')?>><?=htmlspecialchars($p['label'])?></option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-md-3\">","      <select class=\"form-select\" name=\"status\">","        <option value=\"\">All status</option>","        <?php foreach (['draft','raised','approved','closed','cancelled'] as $s): ?>","          <option value=\"<?=$s?>\" <?=($status===$s?'selected':'')?>><?=ucfirst($s)?></option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-md-2\"><button class=\"btn btn-outline-primary w-100\">Filter</button></div>","  </form>","","  <div class=\"table-responsive\">","    <table class=\"table table-striped align-middle\">","      <thead><tr>","        <th>RMI No</th><th>Project</th><th>Priority</th><th>Status</th><th class=\"text-end\">Total kg</th><th>Created</th><th class=\"text-end\">Actions</th>","      </tr></thead>","      <tbody>","        <?php if (!$rows): ?>","          <tr><td colspan=\"7\" class=\"text-muted\">No RMIs yet.</td></tr>","        <?php else: foreach ($rows as $r):","          $badge = ['draft'=>'secondary','raised'=>'warning','approved'=>'success','closed'=>'dark','cancelled'=>'danger'][$r['status']] ?? 'secondary'; ?>","          <tr>","            <td><?=htmlspecialchars($r['rmi_no'])?></td>","            <td><?= $r['project_code'] ? htmlspecialchars($r['project_code'].' \u2014 '.$r['project_name']) : '<span class=\"text-muted\">General</span>' ?></td>","            <td><?=ucfirst(htmlspecialchars($r['priority']))?></td>","            <td><span class=\"badge bg-<?=$badge?>\"><?=htmlspecialchars($r['status'])?></span></td>","            <td class=\"text-end\"><?=number_format((float)$r['total_kg'],3)?></td>","            <td><?=htmlspecialchars((string)$r['created_at'])?></td>","            <td class=\"text-end\">","              <a class=\"btn btn-sm btn-outline-primary\" href=\"rm_indent_form.php?id=<?=$r['id']?>\">Open</a>","              <a class=\"btn btn-sm btn-outline-secondary\" href=\"rm_indent_print.php?id=<?=$r['id']?>\" target=\"_blank\">Print</a>","            </td>","          </tr>","        <?php endforeach; endif; ?>","      </tbody>","    </table>","  </div>","</div>","<?php include __DIR__.'/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/purchase/items_search.php": ["// /public_html/purchase/items_search.php","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","","// Accept either view or manage for searching items","if (!user_has_permission('purchase.indent.manage') && !user_has_permission('purchase.indent.view')) {","  http_response_code(403);","  header('Content-Type: application/json; charset=utf-8');","  echo json_encode(['ok'=>false,'error'=>'forbidden']);","  exit;","}","","/* Search by material_code or name; force unicode collation to avoid 1267 */","$sql = \"","  SELECT i.id, i.material_code, i.name,","         u.code AS uom_code","  FROM items i","  LEFT JOIN uom u ON u.id = i.uom_id","  WHERE (i.material_code COLLATE utf8mb4_unicode_ci LIKE :kw","         OR i.name COLLATE utf8mb4_unicode_ci LIKE :kw)","  ORDER BY i.name ASC","  LIMIT :lim","\";","$st = $pdo->prepare($sql);","$kw = \"%$q%\";","$st->bindValue(':kw', $kw, PDO::PARAM_STR);","$st->bindValue(':lim', $limit, PDO::PARAM_INT);","$st->execute();","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","$items = array_map(function($r){","  $label = trim(($r['material_code'] ?? '').' \u2014 '.($r['name'] ?? ''));","  if (!empty($r['uom_code'])) $label .= ' ['.$r['uom_code'].']';","  return ['id' => (int)$r['id'], 'label' => $label];","}, $rows);","","echo json_encode(['ok' => true, 'items' => $items]);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/jobs/run_queue.php": ["<?php","/** PATH: /public_html/jobs/run_queue.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/notify.php';","","require_login();","if (!has_permission('queue.run')) { http_response_code(403); exit('Forbidden'); }","","$pdo = db();","$now = date('Y-m-d H:i:s');","","$st = $pdo->prepare(\"SELECT * FROM notification_queue","                     WHERE status='queued' AND (not_before_at IS NULL OR not_before_at <= ?)","                     ORDER BY id ASC LIMIT 50\");","$st->execute([$now]);","$jobs = $st->fetchAll(PDO::FETCH_ASSOC);","","foreach ($jobs as $j) {","  $pdo->prepare(\"UPDATE notification_queue SET status='running', attempts=attempts+1 WHERE id=?\")->execute([(int)$j['id']]);","  try {","    if ($j['job_type'] === 'notify') {","      $p = json_decode((string)$j['payload_json'], true) ?: [];","      $uids = array_map('intval', (array)($p['user_ids'] ?? []));","      $title = (string)($p['title'] ?? '');","      $body  = (string)($p['body']  ?? '');","      notify_inbox($pdo, $uids, $title, $body);","    }","    $pdo->prepare(\"UPDATE notification_queue SET status='done', last_error=NULL WHERE id=?\")->execute([(int)$j['id']]);","  } catch (Throwable $e) {","    $pdo->prepare(\"UPDATE notification_queue SET status='error', last_error=? WHERE id=?\")","        ->execute([substr($e->getMessage(),0,480), (int)$j['id']]);","  }","}","","echo \"Processed: \".count($jobs);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/diag_phpver.php": ["<?php","// PATH: /public_html/_diag_phpver.php","header('Content-Type: text/plain; charset=utf-8');","echo 'PHP_VERSION=', PHP_VERSION, \"\\n\";"],
"/home/u989675055/domains/emsinfra.co.in/public_html/machines/types_list.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/machines/types_list.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('machines.manage');","","$pdo = db();","","// Detect column name for the short type code","$codeCol = $pdo->query(\"SHOW COLUMNS FROM machine_types LIKE 'machine_code'\")->fetch() ? 'machine_code' : 'code';","","$cat = (int)($_GET['category_id'] ?? 0);","$q = trim($_GET['q'] ?? '');","","$cats = $pdo->query(\"SELECT id, CONCAT(prefix,' - ',name) AS label FROM machine_categories ORDER BY prefix\")->fetchAll(PDO::FETCH_KEY_PAIR);","","$w = [];","$p = [];","if ($cat) { $w[] = \"t.category_id = ?\"; $p[] = $cat; }","if ($q !== '') {","  // Keep comparisons within same table + parameters to avoid collation conflicts","  $w[] = \"(t.$codeCol LIKE CONCAT('%', ?, '%') OR t.name LIKE CONCAT('%', ?, '%'))\";","  array_push($p, $q, $q);","}","$where = $w ? \"WHERE \".implode(\" AND \", $w) : \"\";","","$sql = \"SELECT t.id, t.$codeCol AS type_code, t.name, c.prefix, c.name AS cat_name","        FROM machine_types t","        JOIN machine_categories c ON c.id=t.category_id","        $where","        ORDER BY c.prefix, t.$codeCol\";","$stmt = $pdo->prepare($sql);","$stmt->execute($p);","$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h5 mb-0\">Machine Types</h1>","  <div class=\"d-flex gap-2\">","    <a href=\"types_form.php\" class=\"btn btn-primary btn-sm\">Add Type</a>","    <a href=\"machines_list.php\" class=\"btn btn-primary btn-sm\">Manage Machines</a>","    <a href=\"categories_list.php\" class=\"btn btn-outline-secondary btn-sm\">Manage Categories</a>","  </div>","</div>","","<form class=\"row g-2 mb-3\" method=\"get\">","  <div class=\"col-md-4\">","    <select class=\"form-select\" name=\"category_id\" onchange=\"this.form.submit()\">","      <option value=\"0\">All Categories</option>","      <?php foreach ($cats as $cid=>$lab): ?>","        <option value=\"<?=$cid?>\" <?=$cid===$cat?'selected':''?>><?=htmlspecialchars($lab)?></option>","      <?php endforeach; ?>","    </select>","  </div>","  <div class=\"col-md-4\">","    <input class=\"form-control\" name=\"q\" value=\"<?=htmlspecialchars($q)?>\" placeholder=\"Search code/name\">","  </div>","  <div class=\"col-md-2 d-grid\">","    <button class=\"btn btn-outline-secondary\">Filter</button>","  </div>","</form>","","<div class=\"table-responsive\">","<table class=\"table table-hover align-middle\">","  <thead class=\"table-light\">","    <tr>","      <th style=\"width:120px;\">Code</th>","      <th>Type Name</th>","      <th>Category</th>","      <th class=\"text-end\" style=\"width:120px;\">Actions</th>","    </tr>","  </thead>","  <tbody>","    <?php foreach ($rows as $r): ?>","    <tr>","      <td class=\"fw-semibold\"><?=htmlspecialchars($r['type_code'])?></td>","      <td><?=htmlspecialchars($r['name'])?></td>","      <td><?=htmlspecialchars($r['prefix'])?> \u2014 <small class=\"text-muted\"><?=htmlspecialchars($r['cat_name'])?></small></td>","      <td class=\"text-end\">","        <a class=\"btn btn-sm btn-outline-secondary\" href=\"types_form.php?id=<?=$r['id']?>\">Edit</a>","      </td>","    </tr>","    <?php endforeach; if(!$rows): ?>","      <tr><td colspan=\"4\" class=\"text-muted\">No types yet.</td></tr>","    <?php endif; ?>","  </tbody>","</table>","</div>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/machines/machine_next_code.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","","require_login();","require_permission('machines.manage');","","$pdo = db();","$type_id = (int)($_GET['type_id'] ?? 0);","if (!$type_id) { http_response_code(400); echo \"Type required\"; exit; }","","// prefer machine_types.machine_code if present; fallback to code (legacy)","$col = $pdo->query(\"SHOW COLUMNS FROM machine_types LIKE 'machine_code'\")->fetch() ? 'machine_code' : 'code';","","$stmt = $pdo->prepare(\"","  SELECT c.id AS cat_id, c.prefix, t.$col AS mcode, t.id AS type_id","  FROM machine_types t","  JOIN machine_categories c ON c.id = t.category_id","  WHERE t.id = ?","\");","$stmt->execute([$type_id]);","$tok = $stmt->fetch(PDO::FETCH_ASSOC);","if (!$tok) { http_response_code(404); echo \"Invalid type\"; exit; }","","// detect machine_sequences shape","$hasTypeId = (bool)$pdo->query(\"SHOW COLUMNS FROM machine_sequences LIKE 'type_id'\")->fetch();","$hasMCode  = (bool)$pdo->query(\"SHOW COLUMNS FROM machine_sequences LIKE 'machine_code'\")->fetch();","","$pdo->beginTransaction();","try {","  if ($hasTypeId) {","    // new schema: (category_id, type_id)","    $sel = $pdo->prepare(\"SELECT last_seq FROM machine_sequences WHERE category_id=? AND type_id=? FOR UPDATE\");","    $sel->execute([(int)$tok['cat_id'], (int)$tok['type_id']]);","    $last = $sel->fetchColumn();","    if ($last === false) {","      $pdo->prepare(\"INSERT INTO machine_sequences(category_id,type_id,last_seq) VALUES(?,?,0)\")","          ->execute([(int)$tok['cat_id'], (int)$tok['type_id']]);","      $last = 0;","    }","    $next = (int)$last + 1;","    $pdo->prepare(\"UPDATE machine_sequences SET last_seq=? WHERE category_id=? AND type_id=?\")","        ->execute([$next, (int)$tok['cat_id'], (int)$tok['type_id']]);","  } else {","    // legacy: (category_id, machine_code)","    if (!$hasMCode) { throw new RuntimeException(\"machine_sequences schema not recognized\"); }","    $sel = $pdo->prepare(\"SELECT last_seq FROM machine_sequences WHERE category_id=? AND machine_code=? FOR UPDATE\");","    $sel->execute([(int)$tok['cat_id'], (string)$tok['mcode']]);","    $last = $sel->fetchColumn();","    if ($last === false) {","      $pdo->prepare(\"INSERT INTO machine_sequences(category_id,machine_code,last_seq) VALUES(?,?,0)\")","          ->execute([(int)$tok['cat_id'], (string)$tok['mcode']]);","      $last = 0;","    }","    $next = (int)$last + 1;","    $pdo->prepare(\"UPDATE machine_sequences SET last_seq=? WHERE category_id=? AND machine_code=?\")","        ->execute([$next, (int)$tok['cat_id'], (string)$tok['mcode']]);","  }","","  $pdo->commit();","  echo sprintf('%s-%s-%03d', $tok['prefix'], $tok['mcode'], $next);","} catch (Throwable $e) {","  if ($pdo->inTransaction()) { $pdo->rollBack(); }","  http_response_code(500);","  echo \"ERR\";","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/machines/types_by_category.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/machines/types_by_category.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","","require_login();","require_permission('machines.manage');","","$pdo = db();","$cid = (int)($_GET['category_id'] ?? 0);","if (!$cid) { header('Content-Type: application/json'); echo '[]'; exit; }","","$col = $pdo->query(\"SHOW COLUMNS FROM machine_types LIKE 'machine_code'\")->fetch() ? 'machine_code' : 'code';","$stmt = $pdo->prepare(\"SELECT id, name, $col AS machine_code FROM machine_types WHERE category_id=? ORDER BY $col\");","$stmt->execute([$cid]);","$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);","","header('Content-Type: application/json');","echo json_encode($rows, JSON_UNESCAPED_UNICODE);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/machines/categories_list.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/machines/categories_list.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('machines.manage');","","$pdo = db();","","$q = trim($_GET['q'] ?? '');","","// Build WHERE dynamically (avoid ?='' which causes collation coercion)","$wheres = [];","$params = [];","","if ($q !== '') {","  // Collation-safe comparisons","  $wheres[] = \"(","    prefix COLLATE utf8mb4_general_ci LIKE CONCAT('%', CAST(? AS CHAR) COLLATE utf8mb4_general_ci, '%')","    OR name COLLATE utf8mb4_general_ci LIKE CONCAT('%', CAST(? AS CHAR) COLLATE utf8mb4_general_ci, '%')","  )\";","  array_push($params, $q, $q);","}","","$whereSql = $wheres ? ('WHERE '.implode(' AND ', $wheres)) : '';","","$sql = \"SELECT id, prefix, name, created_at","        FROM machine_categories","        $whereSql","        ORDER BY prefix\";","$stmt = $pdo->prepare($sql);","$stmt->execute($params);","$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h5 mb-0\">Machine Categories</h1>","  <div class=\"d-flex gap-2\">","    <a href=\"categories_form.php\" class=\"btn btn-primary btn-sm\">Add Category</a>","    <a href=\"types_list.php\" class=\"btn btn-outline-secondary btn-sm\">Manage Types</a>","  </div>","</div>","","<form class=\"row g-2 mb-3\" method=\"get\">","  <div class=\"col-md-4\">","    <input class=\"form-control\" name=\"q\" value=\"<?=htmlspecialchars($q)?>\" placeholder=\"Search prefix/name\">","  </div>","  <div class=\"col-md-2 d-grid\">","    <button class=\"btn btn-outline-secondary\">Search</button>","  </div>","</form>","","<div class=\"table-responsive\">","<table class=\"table table-hover align-middle\">","  <thead class=\"table-light\">","    <tr>","      <th style=\"width:120px;\">Prefix</th>","      <th>Name</th>","      <th>Created</th>","      <th class=\"text-end\" style=\"width:120px;\">Actions</th>","    </tr>","  </thead>","  <tbody>","    <?php foreach ($rows as $r): ?>","    <tr>","      <td class=\"fw-semibold\"><?=htmlspecialchars($r['prefix'])?></td>","      <td><?=htmlspecialchars($r['name'])?></td>","      <td><small class=\"text-muted\"><?=htmlspecialchars($r['created_at'])?></small></td>","      <td class=\"text-end\">","        <a class=\"btn btn-sm btn-outline-secondary\" href=\"categories_form.php?id=<?=$r['id']?>\">Edit</a>","      </td>","    </tr>","    <?php endforeach; if(!$rows): ?>","      <tr><td colspan=\"4\" class=\"text-muted\">No categories yet.</td></tr>","    <?php endif; ?>","  </tbody>","</table>","</div>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/machines/machines_form.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/machines/machines_form.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","","require_login();","require_permission('machines.manage');","","$pdo = db();","","$id = (int)($_GET['id'] ?? 0);","$editing = $id > 0;","","/* Load dropdowns */","$cats = $pdo->query(\"SELECT id, CONCAT(prefix,' - ',name) AS label FROM machine_categories ORDER BY prefix, name\")","            ->fetchAll(PDO::FETCH_KEY_PAIR);","","/* Defaults */","$row = [","  'machine_id'=>'',","  'name'=>'',","  'category_id'=>0,","  'type_id'=>0,","  'make'=>'','model'=>'','serial_no'=>'','reg_no'=>'',","  'purchase_year'=>null,'purchase_date'=>null,'purchase_price'=>null,","  'warranty_months'=>0,","  'meter_type'=>'hours','current_meter'=>0,'current_meter_at'=>null,","  'calibration_required'=>0,'last_calibration_date'=>null,'next_calibration_due'=>null,","  'status'=>'active','notes'=>''","];","$contacts = [];","","/* Editing load */","if ($editing) {","  $st = $pdo->prepare(\"SELECT * FROM machines WHERE id=?\");","  $st->execute([$id]);","  if ($dbRow = $st->fetch(PDO::FETCH_ASSOC)) {","    $row = array_merge($row, $dbRow);","  }","  $cst = $pdo->prepare(\"SELECT contact_name, phone, alt_phone, email FROM machine_contacts WHERE machine_id=? ORDER BY id\");","  $cst->execute([$id]);","  $contacts = $cst->fetchAll(PDO::FETCH_ASSOC) ?: [];","}","","$err = '';","$val = fn($k,$d='') => htmlspecialchars((string)($row[$k] ?? $d), ENT_QUOTES);","","/* Handle POST */","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  csrf_require_token();","  // core","  $machine_id  = trim((string)($_POST['machine_id'] ?? ''));","  $name        = trim((string)($_POST['name'] ?? ''));","  $category_id = (int)($_POST['category_id'] ?? 0);","  $type_id     = (int)($_POST['type_id'] ?? 0);","","  $make      = trim((string)($_POST['make'] ?? ''));","  $model     = trim((string)($_POST['model'] ?? ''));","  $serial_no = trim((string)($_POST['serial_no'] ?? ''));","  $reg_no    = trim((string)($_POST['reg_no'] ?? ''));","","  $purchase_year  = ($_POST['purchase_year'] ?? '') !== '' ? (int)$_POST['purchase_year'] : null;","  $purchase_date  = $_POST['purchase_date']  ?? null;","  $purchase_price = ($_POST['purchase_price'] ?? '') !== '' ? (float)$_POST['purchase_price'] : null;","","  $warranty_months = (int)($_POST['warranty_months'] ?? 0);","","  $meter_type       = (string)($_POST['meter_type'] ?? 'hours'); // hours|km|none","  $current_meter    = ($_POST['current_meter'] ?? '') !== '' ? (float)$_POST['current_meter'] : 0;","  $current_meter_at = $_POST['current_meter_at'] ?? null;","","  $calibration_required  = isset($_POST['calibration_required']) ? 1 : 0;","  $last_calibration_date = $_POST['last_calibration_date'] ?? null;","  $next_calibration_due  = $_POST['next_calibration_due']  ?? null;","","  $status = (string)($_POST['status'] ?? 'active');","  $notes  = trim((string)($_POST['notes'] ?? ''));","","  // contacts arrays (safe)","  $c_name  = (array)($_POST['contact_name']      ?? []);","  $c_phone = (array)($_POST['contact_phone']     ?? []);","  $c_alt   = (array)($_POST['contact_alt_phone'] ?? []);","  $c_mail  = (array)($_POST['contact_email']     ?? []);","","  // validate","  $errors = [];","  if ($name === '')        $errors[] = 'Machine Name is required.';","  if ($category_id <= 0)   $errors[] = 'Category is required.';","  if ($type_id <= 0)       $errors[] = 'Type is required.';","  if ($machine_id === '' || strtoupper($machine_id) === 'ERR' ||","      !preg_match('/^[A-Z0-9]{1,8}-[A-Z]{2,4}-\\d{3}$/', $machine_id)) {","    $errors[] = 'Please click Auto to generate a valid Machine ID (CAT-COD-001).';","  }","","  if (!$errors) {","    try {","      $pdo->beginTransaction();","","      if ($editing) {","        $sql = \"UPDATE machines SET","                  machine_id=?, name=?, category_id=?, type_id=?, make=?, model=?, serial_no=?, reg_no=?,","                  purchase_year=?, purchase_date=?, purchase_price=?, warranty_months=?,","                  meter_type=?, current_meter=?, current_meter_at=?,","                  calibration_required=?, last_calibration_date=?, next_calibration_due=?,","                  status=?, notes=?, updated_at=NOW()","                WHERE id=?\";","        $pdo->prepare($sql)->execute([","          $machine_id, $name, $category_id, $type_id, $make, $model, $serial_no, $reg_no,","          $purchase_year, $purchase_date, $purchase_price, $warranty_months,","          $meter_type, $current_meter, $current_meter_at,","          $calibration_required, $last_calibration_date, $next_calibration_due,","          $status, $notes, $id","        ]);","","        // replace contacts","        $pdo->prepare(\"DELETE FROM machine_contacts WHERE machine_id=?\")->execute([$id]);","        $mid = $id;","      } else {","        $sql = \"INSERT INTO machines","                (machine_id,name,category_id,type_id,make,model,serial_no,reg_no,","                 purchase_year,purchase_date,purchase_price,warranty_months,","                 meter_type,current_meter,current_meter_at,","                 calibration_required,last_calibration_date,next_calibration_due,","                 status,notes,created_at,updated_at)","                VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,NOW(),NOW())\";","        $pdo->prepare($sql)->execute([","          $machine_id,$name,$category_id,$type_id,$make,$model,$serial_no,$reg_no,","          $purchase_year,$purchase_date,$purchase_price,$warranty_months,","          $meter_type,$current_meter,$current_meter_at,","          $calibration_required,$last_calibration_date,$next_calibration_due,","          $status,$notes","        ]);","        $mid = (int)$pdo->lastInsertId();","      }","","      // insert contacts","      if ($c_name || $c_phone || $c_mail) {","        $ins = $pdo->prepare(\"INSERT INTO machine_contacts (machine_id,contact_name,phone,alt_phone,email) VALUES (?,?,?,?,?)\");","        $rows = max(count($c_name),count($c_phone),count($c_alt),count($c_mail));","        for ($i=0; $i<$rows; $i++) {","          $nm = trim((string)($c_name[$i]  ?? ''));","          $ph = trim((string)($c_phone[$i] ?? ''));","          $ap = trim((string)($c_alt[$i]   ?? ''));","          $em = trim((string)($c_mail[$i]  ?? ''));","          if ($nm==='' && $ph==='' && $em==='') continue;","          $ins->execute([$mid,$nm,$ph,$ap,$em]);","        }","      }","","      $pdo->commit();","      header(\"Location: machines_view.php?id=\".$mid);","      exit;","    } catch (Throwable $e) {","      if ($pdo->inTransaction()) $pdo->rollBack();","      $err = 'Error saving machine: '.$e->getMessage();","    }","  } else {","    $err = implode('<br>', $errors);","  }","","  // keep values after validation error","  $row = array_merge($row, [","    'machine_id'=>$machine_id,'name'=>$name,'category_id'=>$category_id,'type_id'=>$type_id,","    'make'=>$make,'model'=>$model,'serial_no'=>$serial_no,'reg_no'=>$reg_no,","    'purchase_year'=>$purchase_year,'purchase_date'=>$purchase_date,'purchase_price'=>$purchase_price,","    'warranty_months'=>$warranty_months,'meter_type'=>$meter_type,'current_meter'=>$current_meter,","    'current_meter_at'=>$current_meter_at,'calibration_required'=>$calibration_required,","    'last_calibration_date'=>$last_calibration_date,'next_calibration_due'=>$next_calibration_due,","    'status'=>$status,'notes'=>$notes","  ]);","","  // keep contacts","  $contacts = [];","  $rowsC = max(count($c_name),count($c_phone),count($c_alt),count($c_mail));","  for ($i=0; $i<$rowsC; $i++) {","    $contacts[] = [","      'contact_name' => (string)($c_name[$i]  ?? ''),","      'phone'        => (string)($c_phone[$i] ?? ''),","      'alt_phone'    => (string)($c_alt[$i]   ?? ''),","      'email'        => (string)($c_mail[$i]  ?? ''),","    ];","  }","}","","/* Types for selected category (server render only) */","$types = [];","if ((int)$row['category_id'] > 0) {","  $col = $pdo->query(\"SHOW COLUMNS FROM machine_types LIKE 'machine_code'\")->fetch() ? 'machine_code' : 'code';","  $ts = $pdo->prepare(\"SELECT id, CONCAT($col,' - ',name) AS label FROM machine_types WHERE category_id=? ORDER BY $col\");","  $ts->execute([(int)$row['category_id']]);","  $types = $ts->fetchAll(PDO::FETCH_KEY_PAIR);","}","","/* UI */","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h5 mb-0\"><?= $editing ? 'Edit Machine' : 'Add Machine' ?></h1>","  <div class=\"d-flex gap-2\">","    <?php if ($editing): ?>","      <a class=\"btn btn-outline-secondary btn-sm\" href=\"/maintenance/breakdown_form.php?machine_id=<?= (int)$id ?>\">+ Breakdown</a>","    <?php endif; ?>","    <a class=\"btn btn-light btn-sm\" href=\"types_list.php\">Types</a>","    <a class=\"btn btn-light btn-sm\" href=\"categories_list.php\">Categories</a>","    <a class=\"btn btn-light btn-sm\" href=\"machines_list.php\">Back</a>","  </div>","</div>","","<?php if ($err): ?>","  <div class=\"alert alert-danger\"><?= $err ?></div>","<?php endif; ?>","","<form method=\"post\" class=\"row g-3\">","  <?= csrf_hidden_input() ?>","  <div class=\"col-md-4\">","    <label class=\"form-label\">Category</label>","    <select class=\"form-select\" name=\"category_id\" id=\"category_id\" required>","      <option value=\"\">-- choose --</option>","      <?php foreach ($cats as $cid => $label): ?>","        <option value=\"<?= $cid ?>\" <?= $cid==(int)$row['category_id']?'selected':'' ?>><?= htmlspecialchars($label) ?></option>","      <?php endforeach; ?>","    </select>","  </div>","","  <div class=\"col-md-4\">","    <label class=\"form-label\">Type</label>","    <select class=\"form-select\" name=\"type_id\" id=\"type_id\" required <?= (int)$row['category_id'] ? '' : 'disabled' ?>>","      <option value=\"\">-- choose --</option>","      <?php foreach ($types as $tid => $label): ?>","        <option value=\"<?= $tid ?>\" <?= $tid==(int)$row['type_id']?'selected':'' ?>><?= htmlspecialchars($label) ?></option>","      <?php endforeach; ?>","    </select>","  </div>","","  <div class=\"col-md-4\">","    <label class=\"form-label\">Machine ID</label>","    <div class=\"input-group\">","      <input class=\"form-control\" name=\"machine_id\" id=\"machine_id\" value=\"<?= $val('machine_id') ?>\" maxlength=\"30\" required>","      <button type=\"button\" class=\"btn btn-outline-secondary\" id=\"btnAuto\">Auto</button>","    </div>","    <div class=\"form-text\">Format: CAT-COD-001 (generated from Category + Type)</div>","  </div>","","  <div class=\"col-md-6\">","    <label class=\"form-label\">Machine Name</label>","    <input class=\"form-control\" name=\"name\" value=\"<?= $val('name') ?>\" required>","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Make</label>","    <input class=\"form-control\" name=\"make\" value=\"<?= $val('make') ?>\">","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Model</label>","    <input class=\"form-control\" name=\"model\" value=\"<?= $val('model') ?>\">","  </div>","","  <div class=\"col-md-3\">","    <label class=\"form-label\">Serial No.</label>","    <input class=\"form-control\" name=\"serial_no\" value=\"<?= $val('serial_no') ?>\">","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Reg. No.</label>","    <input class=\"form-control\" name=\"reg_no\" value=\"<?= $val('reg_no') ?>\">","  </div>","","  <div class=\"col-md-2\">","    <label class=\"form-label\">Purchase Year</label>","    <input type=\"number\" class=\"form-control\" name=\"purchase_year\" value=\"<?= $val('purchase_year') ?>\">","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Purchase Date</label>","    <input type=\"date\" class=\"form-control\" name=\"purchase_date\" value=\"<?= $val('purchase_date') ?>\">","  </div>","  <div class=\"col-md-4\">","    <label class=\"form-label\">Purchase Price</label>","    <input type=\"number\" step=\"0.01\" class=\"form-control\" name=\"purchase_price\" value=\"<?= $val('purchase_price') ?>\">","  </div>","  <div class=\"col-md-2\">","    <label class=\"form-label\">Warranty (months)</label>","    <input type=\"number\" class=\"form-control\" name=\"warranty_months\" value=\"<?= $val('warranty_months','0') ?>\">","  </div>","","  <div class=\"col-md-3\">","    <label class=\"form-label\">Meter Type</label>","    <select class=\"form-select\" name=\"meter_type\">","      <option value=\"hours\" <?= ($row['meter_type'] ?? 'hours')==='hours'?'selected':'' ?>>Hours</option>","      <option value=\"km\"    <?= ($row['meter_type'] ?? '')==='km'?'selected':'' ?>>Kilometers</option>","      <option value=\"none\"  <?= ($row['meter_type'] ?? '')==='none'?'selected':'' ?>>None</option>","    </select>","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Current Meter</label>","    <input type=\"number\" step=\"0.01\" class=\"form-control\" name=\"current_meter\" value=\"<?= $val('current_meter','0') ?>\">","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Current Meter @</label>","    <input type=\"datetime-local\" class=\"form-control\" name=\"current_meter_at\" value=\"<?= $val('current_meter_at') ?>\">","  </div>","","  <div class=\"col-md-3\">","    <label class=\"form-label\">Status</label>","    <select name=\"status\" class=\"form-select\">","      <?php foreach (['active'=>'Active','in_service'=>'In Service','retired'=>'Retired'] as $v=>$lbl): ?>","        <option value=\"<?= $v ?>\" <?= ($row['status'] ?? 'active')===$v?'selected':'' ?>><?= $lbl ?></option>","      <?php endforeach; ?>","    </select>","  </div>","","  <div class=\"col-12\">","    <div class=\"form-check\">","      <input class=\"form-check-input\" type=\"checkbox\" id=\"calreq\" name=\"calibration_required\" <?= !empty($row['calibration_required'])?'checked':'' ?>>","      <label class=\"form-check-label\" for=\"calreq\">Calibration Required</label>","    </div>","  </div>","","  <div class=\"col-md-3\">","    <label class=\"form-label\">Last Calibration</label>","    <input type=\"date\" class=\"form-control\" name=\"last_calibration_date\" value=\"<?= $val('last_calibration_date') ?>\">","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Next Calibration Due</label>","    <input type=\"date\" class=\"form-control\" name=\"next_calibration_due\" value=\"<?= $val('next_calibration_due') ?>\">","  </div>","","  <div class=\"col-12\">","    <label class=\"form-label\">Notes</label>","    <textarea class=\"form-control\" name=\"notes\" rows=\"2\"><?= htmlspecialchars((string)$row['notes']) ?></textarea>","  </div>","","  <div class=\"col-12\">","    <div class=\"d-flex align-items-center justify-content-between\">","      <label class=\"form-label mb-0\">Service Contacts</label>","      <button type=\"button\" class=\"btn btn-outline-secondary btn-sm\" onclick=\"addContactRow()\">+ Add contact</button>","    </div>","    <div class=\"table-responsive mt-2\">","      <table class=\"table table-sm align-middle\" id=\"contactsTable\">","        <thead>","          <tr>","            <th style=\"width:25%\">Name</th>","            <th style=\"width:20%\">Phone</th>","            <th style=\"width:20%\">Alt. Phone</th>","            <th style=\"width:25%\">Email</th>","            <th style=\"width:10%\"></th>","          </tr>","        </thead>","        <tbody>","          <?php if ($contacts): foreach ($contacts as $c): ?>","          <tr>","            <td><input class=\"form-control form-control-sm\" name=\"contact_name[]\" value=\"<?= htmlspecialchars((string)($c['contact_name'] ?? '')) ?>\"></td>","            <td><input class=\"form-control form-control-sm\" name=\"contact_phone[]\" value=\"<?= htmlspecialchars((string)($c['phone'] ?? '')) ?>\"></td>","            <td><input class=\"form-control form-control-sm\" name=\"contact_alt_phone[]\" value=\"<?= htmlspecialchars((string)($c['alt_phone'] ?? '')) ?>\"></td>","            <td><input class=\"form-control form-control-sm\" name=\"contact_email[]\" value=\"<?= htmlspecialchars((string)($c['email'] ?? '')) ?>\"></td>","            <td class=\"text-end\"><button type=\"button\" class=\"btn btn-sm btn-link text-danger\" onclick=\"this.closest('tr').remove()\">Remove</button></td>","          </tr>","          <?php endforeach; endif; ?>","        </tbody>","      </table>","    </div>","  </div>","","  <div class=\"col-12 d-flex gap-2\">","    <button class=\"btn btn-primary\">Save</button>","    <a class=\"btn btn-light\" href=\"machines_list.php\">Cancel</a>","  </div>","</form>","","<script>","function addContactRow() {","  const tb = document.querySelector('#contactsTable tbody');","  const tr = document.createElement('tr');","  tr.innerHTML = `","    <td><input class=\"form-control form-control-sm\" name=\"contact_name[]\"></td>","    <td><input class=\"form-control form-control-sm\" name=\"contact_phone[]\"></td>","    <td><input class=\"form-control form-control-sm\" name=\"contact_alt_phone[]\"></td>","    <td><input class=\"form-control form-control-sm\" name=\"contact_email[]\"></td>","    <td class=\"text-end\"><button type=\"button\" class=\"btn btn-sm btn-link text-danger\" onclick=\"this.closest('tr').remove()\">Remove</button></td>","  `;","  tb.appendChild(tr);","}","","const catSel = document.getElementById('category_id');","const typeSel = document.getElementById('type_id');","catSel?.addEventListener('change', async (e) => {","  const cid = e.target.value;","  typeSel.innerHTML = '<option value=\"\">-- choose --</option>';","  typeSel.disabled = true;","  if (!cid) return;","  const r = await fetch('types_by_category.php?category_id='+encodeURIComponent(cid));","  if (!r.ok) return;","  const data = await r.json();","  data.forEach(it => {","    const opt = document.createElement('option');","    opt.value = it.id;","    opt.textContent = it.machine_code + ' - ' + it.name;","    typeSel.appendChild(opt);","  });","  typeSel.disabled = false;","});","","document.getElementById('btnAuto')?.addEventListener('click', async () => {","  const tid = typeSel.value;","  if (!tid) { alert('Choose Type first'); return; }","  const btn = document.getElementById('btnAuto');","  btn.disabled = true;","  try {","    const r = await fetch('machine_next_code.php?type_id='+encodeURIComponent(tid));","    const code = (await r.text()).trim();","    if (!code || code.toUpperCase()==='ERR') {","      alert('Could not generate code. Please try again.');","    } else {","      document.getElementById('machine_id').value = code;","    }","  } finally {","    btn.disabled = false;","  }","});","</script>","","<?php include __DIR__ . '/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/machines/machines_view.php": ["<?php","/** Machinery View (profile)"," * PATH: /public_html/machines/machines_view.php"," */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/audit.php';","","require_login();","require_permission('machines.view');","","$pdo = db();","csrf_require_token();","$id = (int)($_GET['id'] ?? 0);","","$stmt = $pdo->prepare(\"","SELECT m.*, c.prefix AS cat_prefix, c.name AS cat_name, t.machine_code, t.name AS type_name","FROM machines m","JOIN machine_categories c ON c.id = m.category_id","JOIN machine_types t ON t.id = m.type_id","WHERE m.id=?\");","$stmt->execute([$id]);","$m = $stmt->fetch(PDO::FETCH_ASSOC);","if (!$m) { http_response_code(404); echo \"Not found\"; exit; }","","// contacts","$cstmt = $pdo->prepare(\"SELECT contact_name, phone, alt_phone, email, notes FROM machine_contacts WHERE machine_id=? ORDER BY id ASC\");","$cstmt->execute([$id]);","$contacts = $cstmt->fetchAll(PDO::FETCH_ASSOC);","","// recent meter logs","$ml = $pdo->prepare(\"SELECT reading, reading_at, source, note FROM machine_meters WHERE machine_id=? ORDER BY reading_at DESC LIMIT 10\");","$ml->execute([$id]);","$meters = $ml->fetchAll(PDO::FETCH_ASSOC);","","// handle quick meter post","if ($_SERVER['REQUEST_METHOD']==='POST' && has_permission('maintenance.meter.manage')) {","  $reading = (float)($_POST['reading'] ?? 0);","  $reading_at = ($_POST['reading_at'] ?? '') ?: date('Y-m-d H:i:s');","  $note = trim($_POST['note'] ?? '');","  $pdo->beginTransaction();","  try {","    $ins = $pdo->prepare(\"INSERT INTO machine_meters(machine_id,reading,reading_at,source,note,created_by) VALUES(?,?,?,?,?,?)\");","    $ins->execute([$id,$reading,$reading_at,'manual',$note,current_user_id()]);","    // update cached meter","    $pdo->prepare(\"UPDATE machines SET current_meter=?, current_meter_at=? WHERE id=?\")","        ->execute([$reading,$reading_at,$id]);","    $pdo->commit();","    header(\"Location: machines_view.php?id=\".$id);","    exit;","  } catch (Throwable $e) {","    $pdo->rollBack();","    $err = $e->getMessage();","  }","}","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h4 mb-0\">Machine: <?=htmlspecialchars($m['machine_id'])?></h1>","  <div class=\"d-flex gap-2\">","    <?php if (has_permission('machines.manage')): ?>","      <a href=\"machines_form.php?id=<?=$m['id']?>\" class=\"btn btn-outline-secondary btn-sm\">Edit</a>","    <?php endif; ?>","    <a href=\"machines_list.php\" class=\"btn btn-light btn-sm\">Back</a>","  </div>","</div>","","<div class=\"row g-3\">","  <div class=\"col-lg-8\">","    <div class=\"card\">","      <div class=\"card-body\">","        <div class=\"d-flex justify-content-between\">","          <div>","            <div class=\"fw-semibold\"><?=htmlspecialchars($m['name'])?></div>","            <div class=\"text-muted\">","              <?=htmlspecialchars($m['cat_prefix'])?>-<?=htmlspecialchars($m['machine_code'])?> &middot;","              <?=htmlspecialchars($m['cat_name'])?> / <?=htmlspecialchars($m['type_name'])?>","            </div>","          </div>","          <div>","            <span class=\"badge text-bg-<?= $m['status']==='active'?'success':($m['status']==='in_service'?'warning':'secondary') ?>\">","              <?=htmlspecialchars($m['status'])?>","            </span>","          </div>","        </div>","","        <hr>","","        <div class=\"row small\">","          <div class=\"col-md-6\">","            <div><strong>Make/Model:</strong> <?=htmlspecialchars(trim(($m['make']??'').' '.$m['model']))?></div>","            <div><strong>Serial:</strong> <?=htmlspecialchars((string)$m['serial_no'])?> &nbsp; <strong>Reg:</strong> <?=htmlspecialchars((string)$m['reg_no'])?></div>","            <div><strong>Purchase:</strong> <?=htmlspecialchars((string)$m['purchase_year'])?> &nbsp; \u20b9<?=number_format((float)$m['purchase_price'],2)?></div>","          </div>","          <div class=\"col-md-6\">","            <div><strong>Meter:</strong> <?=htmlspecialchars($m['meter_type'])?> \u2192 <?=number_format((float)$m['current_meter'],2)?> <small class=\"text-muted\">(as of <?= $m['current_meter_at'] ? date('d-M-Y H:i', strtotime($m['current_meter_at'])) : '-' ?>)</small></div>","            <?php","              $w = '';","              if (!empty($m['warranty_months']) && !empty($m['purchase_date'])) {","                $wEnd = (new DateTime($m['purchase_date']))->modify('+'.$m['warranty_months'].' months');","                $w = ($wEnd >= new DateTime()) ? '<span class=\"badge text-bg-info\">Under Warranty till '.$wEnd->format('d-M-Y').'</span>' : '<span class=\"badge text-bg-secondary\">Warranty over</span>';","              }","              echo $w ? \"<div>$w</div>\" : '';","            ?>","            <?php","              $cal = '';","              if (!empty($m['next_calibration_due'])) {","                $due = new DateTime($m['next_calibration_due']);","                $diff = (int)(new DateTime())->diff($due)->format('%r%a');","                if ($diff < 0) $cal = '<span class=\"badge text-bg-danger\">Calibration Overdue</span>';","                elseif ($diff <= 7) $cal = '<span class=\"badge text-bg-warning\">Calibration Due Soon</span>';","                else $cal = '<span class=\"badge text-bg-success\">Calibration OK</span>';","              }","              echo $cal ? \"<div>$cal</div>\" : '';","            ?>","          </div>","        </div>","","        <hr>","","        <div class=\"row\">","          <div class=\"col-md-6\">","            <h6>Service Contacts</h6>","            <?php if ($contacts): ?>","              <ul class=\"list-unstyled small mb-0\">","                <?php foreach ($contacts as $c): ?>","                  <li class=\"mb-1\">","                    <strong><?=htmlspecialchars((string)$c['contact_name'])?></strong> \u2014","                    <span class=\"text-muted\"><?=htmlspecialchars((string)$c['phone'])?><?= $c['alt_phone']? ' / '.htmlspecialchars((string)$c['alt_phone']) : ''?><?= $c['email']? ' \u00b7 '.htmlspecialchars((string)$c['email']) : ''?></span>","                    <?php if (!empty($c['notes'])): ?><div class=\"text-muted\"><?=htmlspecialchars((string)$c['notes'])?></div><?php endif; ?>","                  </li>","                <?php endforeach; ?>","              </ul>","            <?php else: ?>","              <div class=\"text-muted small\">No contacts added.</div>","            <?php endif; ?>","          </div>","","          <div class=\"col-md-6\">","            <div class=\"d-flex align-items-center justify-content-between\">","              <h6 class=\"mb-0\">Quick Meter Log</h6>","              <?php if (!has_permission('maintenance.meter.manage')): ?>","                <span class=\"badge text-bg-light\">View only</span>","              <?php endif; ?>","            </div>","            <?php if (isset($err)): ?><div class=\"alert alert-danger mt-2\"><?=htmlspecialchars($err)?></div><?php endif; ?>","            <form method=\"post\" class=\"row g-2 mt-2\" <?php if(!has_permission('maintenance.meter.manage')) echo 'disabled'; ?>","  <?= csrf_hidden_input() ?>>","              <div class=\"col-6\">","                <input type=\"number\" step=\"0.01\" name=\"reading\" class=\"form-control\" placeholder=\"Meter reading\">","              </div>","              <div class=\"col-6\">","                <input type=\"datetime-local\" name=\"reading_at\" class=\"form-control\" value=\"<?=date('Y-m-d\\TH:i')?>\">","              </div>","              <div class=\"col-12\">","                <input name=\"note\" class=\"form-control\" placeholder=\"Note (optional)\">","              </div>","              <div class=\"col-12\">","                <button class=\"btn btn-sm btn-primary\" <?=!has_permission('maintenance.meter.manage')?'disabled':''?>>Save</button>","              </div>","            </form>","","            <div class=\"mt-3\">","              <div class=\"small text-muted mb-1\">Recent readings</div>","              <ul class=\"list-group list-group-flush small\">","                <?php foreach ($meters as $mr): ?>","                  <li class=\"list-group-item px-0\">","                    <?=htmlspecialchars((string)$mr['reading'])?> @ <?=date('d-M-Y H:i', strtotime($mr['reading_at']))?> <span class=\"text-muted\">[<?=htmlspecialchars((string)$mr['source'])?>]</span>","                    <?php if ($mr['note']): ?> \u2014 <span class=\"text-muted\"><?=htmlspecialchars((string)$mr['note'])?></span><?php endif; ?>","                  </li>","                <?php endforeach; ?>","                <?php if (!$meters): ?><li class=\"list-group-item px-0 text-muted\">No readings</li><?php endif; ?>","              </ul>","            </div>","          </div>","        </div>","","      </div>","    </div>","  </div>","","  <div class=\"col-lg-4\">","    <div class=\"card mb-3\">","      <div class=\"card-body\">","        <h6 class=\"mb-2\">Attachments</h6>","        <iframe src=\"../attachments/panel.php?entity=machines&id=<?=$m['id']?>\" style=\"width:100%;height:320px;border:0;\"></iframe>","      </div>","    </div>","","    <div class=\"card\">","      <div class=\"card-body\">","        <h6 class=\"mb-2\">Actions</h6>","        <div class=\"d-grid gap-2\">","          <a href=\"../maintenance/plan_list.php?machine_id=<?=$m['id']?>\" class=\"btn btn-outline-primary btn-sm\">View Maintenance Plans</a>","          <a href=\"../maintenance/wo_form.php?machine_id=<?=$m['id']?>\" class=\"btn btn-outline-secondary btn-sm\">Create Work Order</a>","          <a href=\"../maintenance/breakdown_form.php?machine_id=<?=$m['id']?>\" class=\"btn btn-outline-danger btn-sm\">Report Breakdown</a>","        </div>","      </div>","    </div>","  </div>","</div>","","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/machines/machines_list.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/machines/machines_list.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/machines_helpers.php';","","require_login();","require_permission('machines.view');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","/* filters */","$q = trim((string)($_GET['q'] ?? ''));","$where=[]; $args=[];","if ($q !== '') {","  $where[]=\"(m.machine_id LIKE CONCAT('%', ?, '%') OR m.name LIKE CONCAT('%', ?, '%') OR m.make LIKE CONCAT('%', ?, '%'))\";","  array_push($args,$q,$q,$q);","}","","$sql = \"SELECT m.*","          FROM machines m","         \".($where?(\"WHERE \".implode(\" AND \",$where)):\"\").\"","         ORDER BY m.machine_id ASC","         LIMIT 500\";","$st = $pdo->prepare($sql); $st->execute($args); $rows = $st->fetchAll(PDO::FETCH_ASSOC);","","$PAGE_TITLE='Machines';","$ACTIVE_MENU='machines.list';","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h5 mb-0\">Machines</h1>","  <div class=\"d-flex gap-2\">","    <form class=\"d-flex gap-2\" method=\"get\">","      <input class=\"form-control form-control-sm\" name=\"q\" placeholder=\"Search ID/Name/Make\" value=\"<?=htmlspecialchars($q)?>\">","      <button class=\"btn btn-sm btn-outline-secondary\">Search</button>","    </form>","    <?php if (has_permission('machines.manage')): ?>","      <a class=\"btn btn-primary btn-sm\" href=\"/machines/machines_form.php\">+ Add</a>","    <?php endif; ?>","  </div>","</div>","","<div class=\"table-responsive\">","  <table class=\"table table-striped table-hover align-middle\">","    <thead class=\"table-light\">","      <tr>","        <th>ID</th><th>Name</th><th>Make/Model</th><th>Year</th><th>Holder</th>","        <th class=\"text-end\" style=\"width:360px;\">Actions</th>","      </tr>","    </thead>","    <tbody>","      <?php foreach($rows as $r): $holder = machine_current_holder($pdo, (int)$r['id']); ?>","      <tr>","        <td><code><?=htmlspecialchars((string)$r['machine_id'])?></code></td>","        <td><?=htmlspecialchars((string)$r['name'])?></td>","        <td><?=htmlspecialchars((string)$r['make'].' '.$r['model'])?></td>","        <td><?=htmlspecialchars((string)$r['purchase_year'])?></td>","        <td>","          <?php if ($holder): ?>","            <span class=\"badge bg-warning text-dark\" title=\"Issued on <?=htmlspecialchars((string)$holder['alloc_date'])?>\">","              <?=htmlspecialchars((string)$holder['contractor_code'].' \u2014 '.$holder['contractor_name'])?>","            </span>","          <?php else: ?>","            <span class=\"badge bg-success\">Available</span>","          <?php endif; ?>","        </td>","        <td class=\"text-end\">","          <div class=\"btn-group btn-group-sm\">","            <a class=\"btn btn-outline-dark\" href=\"/machines/machines_view.php?id=<?=$r['id']?>\">Edit</a>","            <a class=\"btn btn-outline-dark\" href=\"/maintenance/wo_list.php?machine_id=<?=$r['id']?>\">WOs</a>","            <a class=\"btn btn-outline-primary\" href=\"/maintenance/wo_form.php?machine_id=<?=$r['id']?>\">+ WO</a>","            <a class=\"btn btn-outline-secondary\" href=\"/maintenance/programs_list.php?machine_id=<?=$r['id']?>\">Programs</a>","            <a class=\"btn btn-outline-danger\" href=\"/maintenance/breakdown_quick_create.php?machine_id=<?=$r['id']?>&symptom=Breakdown%20reported&severity=high\">+ Breakdown</a>","            <?php if ($holder): ?>","              <a class=\"btn btn-success\" href=\"/maintenance_alloc/allocations_return.php?id=<?=$holder['alloc_id']?>\">Return</a>","            <?php else: ?>","              <a class=\"btn btn-success\" href=\"/maintenance_alloc/allocations_form.php?machine_id=<?=$r['id']?>\">Issue</a>","            <?php endif; ?>","          </div>","        </td>","      </tr>","      <?php endforeach; if (!$rows): ?>","      <tr><td colspan=\"6\" class=\"text-center text-muted py-4\">No machines found.</td></tr>","      <?php endif; ?>","    </tbody>","  </table>","</div>","<?php include __DIR__ . '/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/machines/categories_form.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/machines/categories_form.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","","require_login();","require_permission('machines.manage');","","$pdo = db();","$id = (int)($_GET['id'] ?? 0);","$editing = $id > 0;","","$row = ['prefix'=>'','name'=>''];","if ($editing) {","  $stmt = $pdo->prepare(\"SELECT id, prefix, name FROM machine_categories WHERE id=?\");","  $stmt->execute([$id]);","  $row = $stmt->fetch(PDO::FETCH_ASSOC) ?: $row;","}","","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  csrf_require_token();","  $prefix = strtoupper(trim($_POST['prefix'] ?? ''));","  $name   = trim($_POST['name'] ?? '');","  if ($prefix === '' || $name === '') {","    $err = \"Prefix and Name are required.\";","  } else {","    try {","      // Uniqueness check (collation-safe) \u2014 disallow duplicates except self when editing","      if ($editing) {","        $chk = $pdo->prepare(\"SELECT COUNT(*) FROM machine_categories WHERE prefix COLLATE utf8mb4_general_ci = CAST(? AS CHAR) COLLATE utf8mb4_general_ci AND id <> ?\");","        $chk->execute([$prefix, $id]);","      } else {","        $chk = $pdo->prepare(\"SELECT COUNT(*) FROM machine_categories WHERE prefix COLLATE utf8mb4_general_ci = CAST(? AS CHAR) COLLATE utf8mb4_general_ci\");","        $chk->execute([$prefix]);","      }","      if ((int)$chk->fetchColumn() > 0) {","        $err = \"Prefix \\\"$prefix\\\" already exists. Please choose a different prefix.\";","      } else {","        if ($editing) {","          $u = $pdo->prepare(\"UPDATE machine_categories SET prefix=?, name=? WHERE id=?\");","          $u->execute([$prefix,$name,$id]);","        } else {","          $i = $pdo->prepare(\"INSERT INTO machine_categories(prefix,name) VALUES(?,?)\");","          $i->execute([$prefix,$name]);","          $id = (int)$pdo->lastInsertId();","        }","        header(\"Location: categories_list.php\");","        exit;","      }","    } catch (Throwable $e) {","      // Catch any unexpected DB error (including unique constraint just in case)","      $err = \"Save failed: \" . $e->getMessage();","    }","  }","}","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h5 mb-0\"><?=$editing?'Edit':'Add'?> Category</h1>","  <a href=\"categories_list.php\" class=\"btn btn-light btn-sm\">Back</a>","</div>","","<?php if (!empty($err)): ?>","  <div class=\"alert alert-danger\"><?=htmlspecialchars($err)?></div>","<?php endif; ?>","","<form method=\"post\" class=\"row g-3\">","  <?= csrf_hidden_input() ?>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Prefix (2\u20134 letters)</label>","    <input name=\"prefix\" class=\"form-control\" maxlength=\"6\" required value=\"<?=htmlspecialchars((string)$row['prefix'])?>\">","    <div class=\"form-text\">Example: CUT, CRN, COMP</div>","  </div>","  <div class=\"col-md-6\">","    <label class=\"form-label\">Name</label>","    <input name=\"name\" class=\"form-control\" required value=\"<?=htmlspecialchars((string)$row['name'])?>\">","  </div>","  <div class=\"col-12 d-flex gap-2\">","    <button class=\"btn btn-primary\">Save</button>","    <a href=\"categories_list.php\" class=\"btn btn-light\">Cancel</a>","  </div>","</form>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/machines/types_form.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/machines/types_form.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_login();","require_permission('machines.manage');","","$pdo = db();","$id = (int)($_GET['id'] ?? 0);","$editing = $id > 0;","","$cats = $pdo->query(\"SELECT id, CONCAT(prefix,' - ',name) AS label FROM machine_categories ORDER BY prefix\")->fetchAll(PDO::FETCH_KEY_PAIR);","","$row = ['category_id'=>'','machine_code'=>'','name'=>'','notes'=>''];","if ($editing) {","  $stmt = $pdo->prepare(\"SELECT * FROM machine_types WHERE id=?\");","  $stmt->execute([$id]);","  $row = $stmt->fetch(PDO::FETCH_ASSOC) ?: $row;","}","","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  csrf_require_token();","  $category_id = (int)($_POST['category_id'] ?? 0);","  $machine_code = strtoupper(trim($_POST['machine_code'] ?? ''));","  $name = trim($_POST['name'] ?? '');","  $notes = trim($_POST['notes'] ?? '');","  if (!$category_id || $machine_code==='' || $name==='') { $err = \"Category, Code and Name are required.\"; }","  else {","    try {","      if ($editing) {","        $u = $pdo->prepare(\"UPDATE machine_types SET category_id=?, machine_code=?, name=?, notes=? WHERE id=?\");","        $u->execute([$category_id,$machine_code,$name,$notes,$id]);","        } else {","        $i = $pdo->prepare(\"INSERT INTO machine_types(category_id,machine_code,name,notes) VALUES(?,?,?,?)\");","        $i->execute([$category_id,$machine_code,$name,$notes]);","        $id = (int)$pdo->lastInsertId();","        }","      header(\"Location: types_list.php?category_id=\".$category_id);","      exit;","    } catch (Throwable $e) {","      $err = $e->getMessage();","    }","  }","}","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h5 mb-0\"><?=$editing?'Edit':'Add'?> Machine Type</h1>","  <a href=\"types_list.php\" class=\"btn btn-light btn-sm\">Back</a>","</div>","","<?php if (!empty($err)): ?><div class=\"alert alert-danger\"><?=htmlspecialchars($err)?></div><?php endif; ?>","","<form method=\"post\" class=\"row g-3\">","  <?= csrf_hidden_input() ?>","  <div class=\"col-md-5\">","    <label class=\"form-label\">Category</label>","    <select name=\"category_id\" class=\"form-select\" required>","      <option value=\"\">-- Select --</option>","      <?php foreach ($cats as $cid=>$lab): ?>","        <option value=\"<?=$cid?>\" <?=$cid==($row['category_id']??0)?'selected':''?>><?=htmlspecialchars($lab)?></option>","      <?php endforeach; ?>","    </select>","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Type Code (2\u20133 letters)</label>","    <input name=\"machine_code\" class=\"form-control\" maxlength=\"5\" required value=\"<?=htmlspecialchars((string)$row['machine_code'])?>\">","    <div class=\"form-text\">Example: CNC, PUG, GEN</div>","  </div>","  <div class=\"col-md-4\">","    <label class=\"form-label\">Type Name</label>","    <input name=\"name\" class=\"form-control\" required value=\"<?=htmlspecialchars((string)$row['name'])?>\">","  </div>","  <div class=\"col-12\">","    <label class=\"form-label\">Notes</label>","    <textarea name=\"notes\" rows=\"2\" class=\"form-control\"><?=htmlspecialchars((string)$row['notes'])?></textarea>","  </div>","  <div class=\"col-12 d-flex gap-2\">","    <button class=\"btn btn-primary\">Save</button>","    <a href=\"types_list.php\" class=\"btn btn-light\">Cancel</a>","  </div>","</form>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/style.css": ["/* /public_html/styles.css */","/* Global UI overrides for EMS Infra ERP (Bootstrap 5.x) */","","/* ===== Brand & Layout ===== */",":root{","  --brand-primary:#0d6efd;       /* Bootstrap blue */","  --brand-accent:#198754;         /* Bootstrap green */","  --sidebar-width:260px;","}","html,body{height:100%;}","body{min-height:100vh;}","","/* ===== Header ===== */",".navbar.sticky-top{backdrop-filter:saturate(140%) blur(2px);}","","/* ===== Sidebar ===== */",".app-sidebar{","  background:#fff;","  border-right:1px solid #e9ecef;","}",".app-sidebar .nav{","  padding: .5rem .5rem 1.25rem;","}",".app-sidebar .nav-item .nav-link{","  border-radius:.5rem;","  padding:.5rem .75rem;","  color:#364152;","}",".app-sidebar .nav-item .nav-link:hover{","  background:#f8f9fa;","}",".app-sidebar .nav-item .nav-link.active{","  background:#e9f2ff;","  color:var(--brand-primary);","  font-weight:600;","}",".app-sidebar .text-muted{","  color:#6b7280 !important;","}","","/* ===== Cards / Tiles ===== */",".card{border-radius:.75rem;}",".card-tile{","  transition:transform .15s ease, box-shadow .15s ease;","}",".card-tile:hover{","  transform:translateY(-2px);","  box-shadow:0 .75rem 1.5rem rgba(0,0,0,.08);","}","","/* ===== Tables ===== */",".table{font-size:.92rem;}",".table th{","  white-space:nowrap;","  font-weight:600;","  color:#334155;","}",".table-hover tbody tr:hover{background:#f8fafc;}",".table thead th{","  border-bottom-width:1px;","}","","/* Wrap tables in a card body for nice padding on small screens */",".table-responsive{border-radius:.5rem;}","","/* ===== Forms ===== */",".form-control,.form-select{border-radius:.375rem;}",".input-group-text{border-radius:.375rem;}",".form-label{font-weight:600;}","","/* ===== Badges & Buttons ===== */",".badge-soft{","  color:#0f172a;","  background:#eef2ff;","  border:1px solid #e5e7eb;","}",".btn-icon{","  display:inline-flex; align-items:center; gap:.35rem;","}",".btn-light-hover:hover{background:#f8f9fa;}","","/* ===== Utilities ===== */",".text-muted-sm{color:#6b7280 !important;font-size:.85em;}",".shadow-soft{box-shadow:0 .5rem 1rem rgba(0,0,0,.06);}",".rounded-xl{border-radius:1rem;}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/cycle_count_generate.php": ["<?php","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/NumberingService.php';","require_once __DIR__ . '/../includes/Availability.php';","require_permission('stores.cycle.manage');","$pdo = db();","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","    csrf_require_token($_POST['csrf_token'] ?? '');","    $warehouse_id = (int)($_POST['warehouse_id'] ?? 0);","    $bin_id       = isset($_POST['bin_id']) ? (int)$_POST['bin_id'] : null;","    $project_id   = isset($_POST['project_id']) ? (int)$_POST['project_id'] : null;","    if ($warehouse_id <= 0) { die('Warehouse is required'); }","    $cc_no = NumberingService::next($pdo, 'CC');","    $pdo->prepare(\"INSERT INTO cycle_counts (cc_no, warehouse_id, bin_id, project_id, status, created_by, created_at)","                   VALUES (:cc_no, :wh, :bin, :prj, 'DRAFT', :uid, NOW(6))\")","        ->execute([':cc_no'=>$cc_no, ':wh'=>$warehouse_id, ':bin'=>$bin_id, ':prj'=>$project_id, ':uid'=>(int)($_SESSION['user_id'] ?? 0)]);","    $cc_id = (int)$pdo->lastInsertId();","    $items = $pdo->prepare(\"SELECT DISTINCT m.item_id FROM stock_moves m WHERE m.warehouse_id = :w AND m.txn_date >= CURDATE() - INTERVAL 180 DAY\");","    $items->execute([':w'=>$warehouse_id]);","    $item_ids = $items->fetchAll(PDO::FETCH_COLUMN);","    $ins = $pdo->prepare(\"INSERT INTO cycle_count_items (cycle_id, line_no, item_id, uom_id, expected_qty, counted_qty, variance_qty)","                          VALUES (:cid, :ln, :item, :uom, :exp, 0, 0)\");","    $line_no = 0;","    foreach ($item_ids as $item_id) {","        $uom_id = $pdo->query(\"SELECT uom_id FROM items WHERE id = \".(int)$item_id)->fetchColumn();","        if (!$uom_id) $uom_id = null;","        $exp = Availability::onhand($pdo, (int)$item_id, $warehouse_id);","        if (abs($exp) < 0.0005) continue;","        $line_no++;","        $ins->execute([':cid'=>$cc_id, ':ln'=>$line_no, ':item'=>(int)$item_id, ':uom'=>$uom_id, ':exp'=>(float)$exp]);","    }","    header(\"Location: cycle_count_enter.php?id=\".$cc_id); exit;","}","$csrf = csrf_token();","$warehouses = $pdo->query(\"SELECT id, name FROM warehouses ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","$bins  = $pdo->query(\"SELECT id, name FROM bins ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","$projects = $pdo->query(\"SELECT id, name FROM projects ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","?><!doctype html><html><head><meta charset=\"utf-8\"><title>Cycle Count - Generate</title><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","<style>body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;margin:16px}.card{border:1px solid #ddd;border-radius:8px;padding:16px;margin-bottom:16px;max-width:920px}.row{display:flex;flex-wrap:wrap;gap:12px;align-items:flex-end}.field{display:flex;flex-direction:column;min-width:220px}select,input{padding:6px}.btn{display:inline-block;padding:8px 12px;border:1px solid #ccc;border-radius:6px;background:#fff;cursor:pointer;text-decoration:none;color:#111}.btn.primary{border-color:#2573ef;background:#2f7df4;color:#fff}</style></head><body>","<div class=\"card\"><h2>Cycle Count \u2014 Generate Sheet</h2><form method=\"post\"><input type=\"hidden\" name=\"csrf_token\" value=\"<?=htmlspecialchars($csrf)?>\"><div class=\"row\">","<div class=\"field\"><label>Warehouse</label><select name=\"warehouse_id\" required><option value=\"\">-- Select --</option><?php foreach($warehouses as $w): ?><option value=\"<?=$w['id']?>\"><?=htmlspecialchars($w['name'])?></option><?php endforeach; ?></select></div>","<div class=\"field\"><label>Bin (optional)</label><select name=\"bin_id\"><option value=\"\">-- Any --</option><?php foreach($bins as $b): ?><option value=\"<?=$b['id']?>\"><?=htmlspecialchars($b['name'])?></option><?php endforeach; ?></select></div>","<div class=\"field\"><label>Project (optional)</label><select name=\"project_id\"><option value=\"\">-- None --</option><?php foreach($projects as $p): ?><option value=\"<?=$p['id']?>\"><?=htmlspecialchars($p['name'])?></option><?php endforeach; ?></select></div>","<div class=\"field\" style=\"flex:1;\"><label>&nbsp;</label><button class=\"btn primary\" type=\"submit\">Generate Sheet</button></div>","</div></form></div></body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/gatepass_print.php": ["<?php","/** PATH: /public_html/stores/gatepass_print.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_permission('stores.gatepass.view');","","$pdo = db();","$id = (int)($_GET['id'] ?? 0);","","$hdr = $pdo->prepare(\"","  SELECT gp.*, w1.code src_code, w1.name src_name, w2.code dst_code, w2.name dst_name, p.name party_name","  FROM gatepasses gp","  JOIN warehouses w1 ON w1.id = gp.source_warehouse_id","  LEFT JOIN warehouses w2 ON w2.id = gp.dest_warehouse_id","  LEFT JOIN parties p ON p.id = gp.party_id","  WHERE gp.id=?\");","$hdr->execute([$id]);","$gp = $hdr->fetch(PDO::FETCH_ASSOC);","","$lines = $pdo->prepare(\"","  SELECT gi.*, it.material_code, it.name item_name, u.code uom_code,","         m.machine_id mach_code, m.name mach_name","  FROM gatepass_items gi","  LEFT JOIN items it ON it.id=gi.item_id","  LEFT JOIN uom u ON u.id=gi.uom_id","  LEFT JOIN machines m ON m.id=gi.machine_id","  WHERE gi.gp_id=?","  ORDER BY item_name, mach_name\");","$lines->execute([$id]);","$rows = $lines->fetchAll(PDO::FETCH_ASSOC);","","?><!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>Gate Pass <?= htmlspecialchars($gp['gp_no'] ?? '') ?></title>","  <link href=\"/assets/bootstrap.min.css\" rel=\"stylesheet\">","  <style> @media print { .noprint{display:none} } </style>","</head>","<body class=\"p-3\">","  <div class=\"d-flex justify-content-between noprint\">","    <a href=\"gatepass_list.php\" class=\"btn btn-sm btn-outline-secondary\">Back</a>","    <button class=\"btn btn-sm btn-primary\" onclick=\"window.print()\">Print</button>","  </div>","  <h4 class=\"mt-2\">Gate Pass \u2014 <?= htmlspecialchars($gp['gp_no'] ?? '') ?></h4>","  <div class=\"row g-1 mb-2\">","    <div class=\"col-6\"><strong>Date:</strong> <?= htmlspecialchars($gp['gp_date'] ?? '') ?></div>","    <div class=\"col-6\"><strong>Type:</strong> <?= htmlspecialchars($gp['gp_type'] ?? '') ?> (<?= !empty($gp['returnable'])?'Returnable':'Non-returnable' ?>)</div>","    <div class=\"col-6\"><strong>From:</strong> <?= htmlspecialchars(($gp['src_code']??'').' \u2014 '.($gp['src_name']??'')) ?></div>","    <div class=\"col-6\"><strong>To/Party:</strong>","      <?= ($gp['gp_type']==='site' && !$gp['returnable'])","          ? htmlspecialchars(($gp['dst_code']??'').' \u2014 '.($gp['dst_name']??''))","          : htmlspecialchars($gp['party_name'] ?? '\u2014') ?>","    </div>","    <div class=\"col-6\"><strong>Vehicle No:</strong> <?= htmlspecialchars($gp['vehicle_no'] ?? '\u2014') ?></div>","    <div class=\"col-6\"><strong>Contact:</strong> <?= htmlspecialchars($gp['contact_person'] ?? '\u2014') ?> (<?= htmlspecialchars($gp['contact_phone'] ?? '') ?>)</div>","    <div class=\"col-6\"><strong>Expected Return:</strong> <?= htmlspecialchars($gp['expected_return_date'] ?? '\u2014') ?></div>","    <div class=\"col-12\"><strong>Remarks:</strong> <?= htmlspecialchars($gp['remarks'] ?? '') ?></div>","  </div>","","  <table class=\"table table-sm table-bordered align-middle\">","    <thead class=\"table-light\">","      <tr>","        <th style=\"width:50px\">#</th>","        <th>Description</th>","        <th class=\"text-center\" style=\"width:90px\">UOM</th>","        <th class=\"text-end\" style=\"width:120px\">Qty</th>","        <th>Note</th>","      </tr>","    </thead>","    <tbody>","      <?php $i=1; foreach ($rows as $r): ?>","        <?php if ((int)$r['is_asset']===1): ?>","          <tr>","            <td><?= $i++ ?></td>","            <td>Machine: <?= htmlspecialchars(($r['mach_code']?($r['mach_code'].' \u2014 '):'').($r['mach_name']??'')) ?></td>","            <td class=\"text-center\">\u2014</td>","            <td class=\"text-end\">\u2014</td>","            <td><?= htmlspecialchars($r['remarks'] ?? '') ?></td>","          </tr>","        <?php else: ?>","          <tr>","            <td><?= $i++ ?></td>","            <td><?= htmlspecialchars(($r['material_code']?($r['material_code'].' \u2014 '):'').($r['item_name']??'')) ?></td>","            <td class=\"text-center\"><?= htmlspecialchars($r['uom_code'] ?? '') ?></td>","            <td class=\"text-end\"><?= number_format((float)$r['qty'],3) ?></td>","            <td><?= htmlspecialchars($r['remarks'] ?? '') ?></td>","          </tr>","        <?php endif; ?>","      <?php endforeach; ?>","    </tbody>","  </table>","  <div class=\"mt-4\">","    <div><strong>Storekeeper Signature:</strong> ______________________</div>","    <div><strong>Receiver Signature:</strong> ________________________</div>","    <div class=\"small text-muted mt-2\">Status: <?= htmlspecialchars($gp['status'] ?? '') ?></div>","  </div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/transfer_list.php": ["<?php","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_permission('stores.transfer.manage');","$pdo = db();","","/* Filters */","$from = $_GET['from'] ?? date('Y-m-01');","$to   = $_GET['to']   ?? date('Y-m-d');","$whf  = isset($_GET['from_wh']) && $_GET['from_wh'] !== '' ? (int)$_GET['from_wh'] : null;","$wht  = isset($_GET['to_wh'])   && $_GET['to_wh']   !== '' ? (int)$_GET['to_wh']   : null;","$q    = trim($_GET['q'] ?? '');","","$page = max(1, (int)($_GET['page'] ?? 1));","$pp   = 25;","$off  = ($page - 1) * $pp;","","/* Warehouses for filters */","$warehouses = $pdo->query(\"SELECT id, COALESCE(name, CONCAT('WH-',id)) AS name FROM warehouses ORDER BY 2\")->fetchAll(PDO::FETCH_ASSOC);","","/* WHERE on created_at date to avoid schema mismatch on trn_date */","$where = [\"DATE(created_at) BETWEEN :from AND :to\"];","$args  = [':from'=>$from, ':to'=>$to];","if ($whf) { $where[] = \"from_warehouse_id = :whf\"; $args[':whf'] = $whf; }","if ($wht) { $where[] = \"to_warehouse_id   = :wht\"; $args[':wht'] = $wht; }","if ($q !== '') {","  $where[] = \"(trn_no LIKE :q OR remarks LIKE :q)\";","  $args[':q'] = \"%{$q}%\";","}","$sqlWhere = implode(' AND ', $where);","","/* Count */","$stmtCnt = $pdo->prepare(\"SELECT COUNT(*) FROM stock_transfers WHERE $sqlWhere\");","$stmtCnt->execute($args);","$total = (int)$stmtCnt->fetchColumn();","","/* Data */","$sql = \""," SELECT t.id, t.trn_no, t.created_at, t.status, t.from_warehouse_id, t.to_warehouse_id, t.remarks,","        COALESCE(wf.name, CONCAT('WH-',t.from_warehouse_id)) AS from_wh_name,","        COALESCE(wt.name, CONCAT('WH-',t.to_warehouse_id))   AS to_wh_name,","        (SELECT COUNT(*) FROM stock_transfer_items li WHERE li.transfer_id = t.id) AS lines,","        (SELECT SUM(li.qty) FROM stock_transfer_items li WHERE li.transfer_id = t.id) AS qty_sum"," FROM stock_transfers t"," LEFT JOIN warehouses wf ON wf.id = t.from_warehouse_id"," LEFT JOIN warehouses wt ON wt.id = t.to_warehouse_id"," WHERE $sqlWhere"," ORDER BY t.created_at DESC, t.id DESC"," LIMIT $pp OFFSET $off","\";","$stmt = $pdo->prepare($sql);","$stmt->execute($args);","$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);","?>","<!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>Stock Transfers</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <style>","    body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;margin:16px}","    .card{border:1px solid #ddd;border-radius:8px;padding:16px;margin-bottom:16px}","    .row{display:flex;flex-wrap:wrap;gap:12px;align-items:flex-end}","    .field{display:flex;flex-direction:column;min-width:180px}","    table{width:100%;border-collapse:collapse;font-size:14px}","    th,td{border-bottom:1px solid #eee;padding:8px;text-align:left}","    th{background:#fafafa}","    .btn{display:inline-block;padding:6px 10px;border:1px solid #ccc;border-radius:6px;background:#fff;text-decoration:none;color:#111}","    .pager{display:flex;gap:8px;align-items:center}","    .muted{opacity:.75}","    .tag{display:inline-block;padding:2px 6px;border:1px solid #aaa;border-radius:4px;font-size:12px}","  </style>","</head>","<body>","","<div class=\"card\">","  <h2>Stock Transfers</h2>","  <form method=\"get\" class=\"row\">","    <div class=\"field\">","      <label>From</label>","      <input type=\"date\" name=\"from\" value=\"<?=htmlspecialchars($from)?>\">","    </div>","    <div class=\"field\">","      <label>To</label>","      <input type=\"date\" name=\"to\" value=\"<?=htmlspecialchars($to)?>\">","    </div>","    <div class=\"field\">","      <label>From Warehouse</label>","      <select name=\"from_wh\">","        <option value=\"\">-- All --</option>","        <?php foreach($warehouses as $w): ?>","          <option value=\"<?=$w['id']?>\" <?=($whf===$w['id']?'selected':'')?>>","            <?=htmlspecialchars($w['name'])?>","          </option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"field\">","      <label>To Warehouse</label>","      <select name=\"to_wh\">","        <option value=\"\">-- All --</option>","        <?php foreach($warehouses as $w): ?>","          <option value=\"<?=$w['id']?>\" <?=($wht===$w['id']?'selected':'')?>>","            <?=htmlspecialchars($w['name'])?>","          </option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"field\" style=\"flex:1;\">","      <label>Search</label>","      <input type=\"text\" name=\"q\" value=\"<?=htmlspecialchars($q)?>\" placeholder=\"TRF No / Remarks\">","    </div>","    <div class=\"field\">","      <label>&nbsp;</label>","      <button class=\"btn\" type=\"submit\">Filter</button>","    </div>","  </form>","</div>","","<div class=\"card\">","  <div class=\"row\" style=\"justify-content:space-between;\">","    <div class=\"muted\"><?=number_format($total)?> result(s)</div>","    <div class=\"pager\">","      <?php","      $pages = max(1, (int)ceil($total/$pp));","      $base  = strtok($_SERVER['REQUEST_URI'],'?');","      $qs    = $_GET; // mutable","      $qs['page'] = max(1,$page-1);","      $prevUrl = $base . '?' . http_build_query($qs);","      $qs['page'] = min($pages,$page+1);","      $nextUrl = $base . '?' . http_build_query($qs);","      ?>","      <a class=\"btn\" href=\"<?=$prevUrl?>\">&laquo; Prev</a>","      <span class=\"muted\">Page <?=$page?> / <?=$pages?></span>","      <a class=\"btn\" href=\"<?=$nextUrl?>\">Next &raquo;</a>","    </div>","  </div>","","  <table>","    <thead>","      <tr>","        <th>Date</th>","        <th>TRF No</th>","        <th>From</th>","        <th>To</th>","        <th>Lines</th>","        <th>Total Qty</th>","        <th>Status</th>","        <th></th>","      </tr>","    </thead>","    <tbody>","      <?php foreach($rows as $r): ?>","        <tr>","          <td><?=htmlspecialchars(substr($r['created_at'],0,10))?></td>","          <td><?=htmlspecialchars($r['trn_no'])?></td>","          <td><?=htmlspecialchars($r['from_wh_name'])?></td>","          <td><?=htmlspecialchars($r['to_wh_name'])?></td>","          <td><?= (int)$r['lines'] ?></td>","          <td><?= number_format((float)$r['qty_sum'],3) ?></td>","          <td><?=htmlspecialchars(strtoupper($r['status']))?></td>","          <td><a class=\"btn\" href=\"transfer_view.php?id=<?=$r['id']?>\">View</a></td>","        </tr>","      <?php endforeach; if (!$rows): ?>","        <tr><td colspan=\"8\" class=\"muted\">No data.</td></tr>","      <?php endif; ?>","    </tbody>","  </table>","</div>","","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/stock_adjust_form.php": ["<?php","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/csrf.php';","","require_permission('stores.adjust.manage'); // keep your permission","$pdo = db();","","/* helpers */","$tbl = function(string $name) use ($pdo): bool {","  try { return (bool)$pdo->query(\"SHOW TABLES LIKE \" . $pdo->quote($name))->fetchColumn(); }","  catch (Throwable $e) { return false; }","};","$col = function(string $table, string $c) use ($pdo): bool {","  try { return (bool)$pdo->query(\"SHOW COLUMNS FROM `$table` LIKE \" . $pdo->quote($c))->fetchColumn(); }","  catch (Throwable $e) { return false; }","};","","/* Warehouses */","$warehouses = $pdo->query(\"SELECT id, COALESCE(name, CONCAT('WH-',id)) AS name FROM warehouses ORDER BY 2\")->fetchAll(PDO::FETCH_ASSOC);","","/* Bins (optional, per-line support) */","$hasBins = $tbl('bins');","$bins = [];","if ($hasBins) {","  $bins = $pdo->query(\"SELECT id, warehouse_id, COALESCE(name, CONCAT('BIN-',id)) AS name FROM bins ORDER BY 3\")->fetchAll(PDO::FETCH_ASSOC);","}","","/* Items (your schema) */","$items = $pdo->query(\"","  SELECT i.id, i.material_code, i.name, i.uom_id","  FROM items i","  WHERE i.status='active'","  ORDER BY i.material_code, i.name","  LIMIT 2000","\")->fetchAll(PDO::FETCH_ASSOC);","","/* UoMs: prefer singular `uom`, fallback to `uoms` if present */","$uomTable = $tbl('uom') ? 'uom' : ($tbl('uoms') ? 'uoms' : null);","$uoms = [];","if ($uomTable) {","  $hasCode = $col($uomTable, 'code');","  $hasName = $col($uomTable, 'name');","  $labelExpr = $hasCode ? 'code' : ($hasName ? 'name' : 'CAST(id AS CHAR)');","  $activeFilter = ($uomTable === 'uom' && $col('uom','status')) ? \"WHERE status='active'\" : \"\";","  $uoms = $pdo->query(\"SELECT id, $labelExpr AS label FROM `$uomTable` $activeFilter ORDER BY 2\")->fetchAll(PDO::FETCH_ASSOC);","} else {","  $uoms = [['id'=>null,'label'=>'EA']];","}","","/* Reasons (optional table) */","$hasReasons = $tbl('stock_adj_reasons');","$reasons = [];","if ($hasReasons) {","  // be schema-safe: code/name may or may not exist; build a label smartly","  $rCols = $pdo->query(\"SHOW COLUMNS FROM stock_adj_reasons\")->fetchAll(PDO::FETCH_COLUMN, 0);","  $hasRCode = in_array('code', $rCols, true);","  $hasRName = in_array('name', $rCols, true);","  $label = ($hasRCode && $hasRName) ? \"CONCAT(code, ' \u2014 ', name)\"","         : ($hasRCode ? \"code\" : ($hasRName ? \"name\" : \"CAST(id AS CHAR)\"));","  $reasons = $pdo->query(\"SELECT id, $label AS label FROM stock_adj_reasons ORDER BY 2\")->fetchAll(PDO::FETCH_ASSOC);","}","","$csrf = csrf_token();","?>","<!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>Stock Adjustment</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <style>","    body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;margin:16px}","    .card{border:1px solid #ddd;border-radius:8px;padding:16px;margin-bottom:16px}","    .row{display:flex;flex-wrap:wrap;gap:12px;align-items:flex-end}","    .field{display:flex;flex-direction:column;min-width:220px}","    table{width:100%;border-collapse:collapse;font-size:14px}","    th,td{border-bottom:1px solid #eee;padding:8px;text-align:left}","    th{background:#fafafa}","    .btn{display:inline-block;padding:8px 12px;border:1px solid #ccc;border-radius:6px;background:#fff;cursor:pointer;text-decoration:none;color:#111}","    .btn.primary{border-color:#2573ef;background:#2f7df4;color:#fff}","    input[type=number]{width:120px}","    select,input{padding:6px}","    .notice{padding:8px 12px;background:#fff9e6;border:1px solid #f1d48a;border-radius:6px;margin-bottom:12px}","    .tag{display:inline-block;padding:2px 6px;border:1px solid #aaa;border-radius:4px;font-size:12px;margin-left:8px}","    .muted{opacity:.75}","    .right{display:flex;gap:8px;align-items:center}","    .hidden{display:none}","  </style>","</head>","<body>","","<form id=\"adjForm\" method=\"post\" action=\"/stores/_ajax/stock_adjust_post.php\" onsubmit=\"return validateForm()\">","  <!-- CSRF required by your endpoint when posting via regular form -->","  <input type=\"hidden\" name=\"csrf_token\" value=\"<?=htmlspecialchars($csrf)?>\">","","  <div class=\"card\">","    <div class=\"right\" style=\"justify-content:space-between;\">","      <h2>Stock Adjustment</h2>","      <div class=\"muted\">Posting to: <code>/stores/_ajax/stock_adjust_post.php</code></div>","    </div>","    <div class=\"row\">","      <div class=\"field\">","        <label>Warehouse *</label>","        <select name=\"warehouse_id\" id=\"warehouse_id\" required>","          <option value=\"\">-- Select --</option>","          <?php foreach($warehouses as $w): ?>","            <option value=\"<?=$w['id']?>\"><?=htmlspecialchars($w['name'])?></option>","          <?php endforeach; ?>","        </select>","      </div>","","      <?php if ($hasBins): ?>","      <div class=\"field\">","        <label>Default Bin (optional)</label>","        <select id=\"header_bin_id\">","          <option value=\"\">-- Any --</option>","          <?php foreach($bins as $b): ?>","            <option data-wh=\"<?=$b['warehouse_id']?>\" value=\"<?=$b['id']?>\"><?=htmlspecialchars($b['name'])?></option>","          <?php endforeach; ?>","        </select>","        <small class=\"muted\">New lines will default to this bin</small>","      </div>","      <?php endif; ?>","","      <div class=\"field\">","        <label>Mode *</label>","        <select name=\"mode\" id=\"mode\" required>","          <option value=\"IN\">Add to stock (+)</option>","          <option value=\"OUT\">Remove from stock (-)</option>","        </select>","      </div>","","      <?php if ($hasReasons): ?>","      <div class=\"field\">","        <label>Reason</label>","        <select name=\"reason_id\" id=\"reason_id\">","          <option value=\"\">-- Select --</option>","          <?php foreach($reasons as $r): ?>","            <option value=\"<?=$r['id']?>\"><?=htmlspecialchars($r['label'])?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <?php endif; ?>","","      <div class=\"field\" style=\"flex:1;\">","        <label>Remarks</label>","        <input type=\"text\" name=\"remarks\" placeholder=\"Optional header remarks\">","      </div>","    </div>","  </div>","","  <div class=\"card\">","    <h3>Lines <span class=\"tag\">Auto-select UoM from Item</span></h3>","    <table id=\"lines\">","      <thead>","        <tr>","          <th style=\"width:30%;\">Item *</th>","          <th>UoM *</th>","          <th>Qty *</th>","          <th class=\"unitCostHdr\">Unit Cost *</th>","          <?php if ($hasBins): ?><th>Bin</th><?php endif; ?>","          <th>Batch</th>","          <th>Line Remarks</th>","          <th></th>","        </tr>","      </thead>","      <tbody></tbody>","    </table>","    <button class=\"btn\" type=\"button\" onclick=\"addLine()\">+ Add line</button>","    <div class=\"notice\" id=\"costNotice\">Unit Cost is required for <b>IN</b> adjustments and hidden for <b>OUT</b>.</div>","  </div>","","  <div class=\"card\">","    <button class=\"btn primary\" type=\"submit\">Post Adjustment</button>","  </div>","</form>","","<script>","const ITEMS = <?=json_encode(array_map(function($r){","  return ['id'=>(int)$r['id'], 'label'=>$r['material_code'].' - '.$r['name'], 'uom_id'=>(int)$r['uom_id']];","}, $items))?>;","const UOMS = <?=json_encode($uoms)?>;","const hasBins = <?= $hasBins ? 'true' : 'false' ?>;","","// lookup: item_id -> default uom_id","const defaultUomByItem = {}; ITEMS.forEach(it => defaultUomByItem[it.id] = it.uom_id);","","function addLine(){","  const tbody = document.querySelector('#lines tbody');","  const tr = document.createElement('tr');","","  const binCell = hasBins ? `","    <td>","      <select name=\"lines[bin_id][]\" class=\"binSel\">","        <option value=\"\">-- Any --</option>","        <?php if ($hasBins): foreach($bins as $b): ?>","          <option data-wh=\"<?=$b['warehouse_id']?>\" value=\"<?=$b['id']?>\"><?=htmlspecialchars($b['name'])?></option>","        <?php endforeach; endif; ?>","      </select>","    </td>","  ` : '';","","  tr.innerHTML = `","    <td>","      <select name=\"lines[item_id][]\" class=\"itemSel\" required>","        <option value=\"\">-- Select Item --</option>","        ${ITEMS.map(it=>`<option value=\"${it.id}\">${escapeHtml(it.label)}</option>`).join('')}","      </select>","    </td>","    <td>","      <select name=\"lines[uom_id][]\" class=\"uomSel\" ${UOMS.length ? 'required' : ''}>","        <option value=\"\">-- UoM --</option>","        ${UOMS.map(u=>`<option value=\"${u.id===null?'':u.id}\">${escapeHtml(u.label)}</option>`).join('')}","      </select>","    </td>","    <td><input type=\"number\" name=\"lines[qty][]\" min=\"0.001\" step=\"0.001\" required></td>","    <td class=\"unitCostCell\"><input type=\"number\" name=\"lines[unit_cost][]\" min=\"0\" step=\"0.0001\" placeholder=\"0.0000\"></td>","    ${binCell}","    <td><input type=\"number\" name=\"lines[batch_id][]\" step=\"1\" min=\"1\" placeholder=\"ID\"></td>","    <td><input type=\"text\" name=\"lines[remarks][]\" placeholder=\"Optional\"></td>","    <td><button class=\"btn\" type=\"button\" onclick=\"this.closest('tr').remove()\">Remove</button></td>","  `;","  tbody.appendChild(tr);","","  wireRow(tr);","  applyModeToRow(tr);      // set unit_cost required/hidden based on mode","  defaultBinToRow(tr);     // if header bin chosen, set it","}","","function wireRow(tr){","  const itemSel = tr.querySelector('.itemSel');","  const uomSel  = tr.querySelector('.uomSel');","  if (!itemSel || !uomSel) return;","","  const applyDefault = () => {","    const itemId = parseInt(itemSel.value || '0', 10);","    const def = defaultUomByItem[itemId];","    if (!def) return;","    for (const opt of uomSel.options) {","      if (String(opt.value) === String(def)) { uomSel.value = String(def); break; }","    }","  };","  itemSel.addEventListener('change', applyDefault);","}","","function applyModeToRow(tr){","  const mode = document.getElementById('mode').value;","  const cell = tr.querySelector('.unitCostCell');","  const input = cell ? cell.querySelector('input[name=\"lines[unit_cost][]\"]') : null;","  if (!cell || !input) return;","  if (mode === 'IN') {","    cell.classList.remove('hidden');","    input.required = true;","    input.disabled = false;","  } else {","    cell.classList.add('hidden');","    input.required = false;","    input.disabled = true;","    input.value = ''; // clear for OUT","  }","}","","function defaultBinToRow(tr){","  if (!hasBins) return;","  const headerBin = document.getElementById('header_bin_id');","  const lineBin   = tr.querySelector('.binSel');","  if (!headerBin || !lineBin) return;","  if (headerBin.value) lineBin.value = headerBin.value;","}","","function applyModeToAll(){","  document.querySelectorAll('#lines tbody tr').forEach(applyModeToRow);","  const mode = document.getElementById('mode').value;","  document.getElementById('costNotice').innerHTML =","    mode === 'IN' ? 'Unit Cost is required for <b>IN</b> adjustments and hidden for <b>OUT</b>.'","                  : 'Unit Cost is hidden for <b>OUT</b> adjustments.';","  // toggle header visibility","  document.querySelectorAll('.unitCostHdr').forEach(th => {","    if (mode === 'IN') th.classList.remove('hidden'); else th.classList.add('hidden');","  });","}","","function validateForm(){","  const wh = document.getElementById('warehouse_id').value;","  const mode = document.getElementById('mode').value;","  if (!wh) { alert('Warehouse is required'); return false; }","  if (!mode) { alert('Mode is required'); return false; }","  const rows = document.querySelectorAll('#lines tbody tr');","  if (!rows.length) { alert('Add at least one line'); return false; }","  if (mode === 'IN') {","    // ensure at least one unit_cost is provided and all lines have it","    for (const tr of rows) {","      const uc = tr.querySelector('input[name=\"lines[unit_cost][]\"]');","      if (!uc || uc.disabled || uc.value === '') { alert('Unit Cost is required for IN.'); return false; }","    }","  }","  return true;","}","","function escapeHtml(str){","  return String(str).replace(/[&<>\\\"'`=\\\\/]/g, s => ({'&':'&amp;','<':'&lt;','>':'&gt;','\\\"':'&quot;',\"'\":'&#39;','/':'&#x2F;','`':'&#x60;','=':'&#x3D;','\\\\':'&#x5C;'}[s]));","}","","// events","document.getElementById('mode').addEventListener('change', applyModeToAll);","<?php if ($hasBins): ?>","document.getElementById('warehouse_id').addEventListener('change', () => {","  const whId = parseInt(document.getElementById('warehouse_id').value || '0', 10);","  const hdr = document.getElementById('header_bin_id');","  if (hdr) {","    for (const opt of hdr.options) {","      if (!opt.value) continue;","      opt.disabled = (parseInt(opt.getAttribute('data-wh')||'0',10) !== whId);","    }","    hdr.value = '';","  }","  document.querySelectorAll('.binSel').forEach(sel => {","    for (const opt of sel.options) {","      if (!opt.value) continue;","      opt.disabled = (parseInt(opt.getAttribute('data-wh')||'0',10) !== whId);","    }","    sel.value = '';","  });","});","<?php endif; ?>","","// init","addLine();","applyModeToAll();","</script>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/scrap_remnant_console.php": ["","<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/rbac.php';","require_login(); require_permission('stores.remnant.view');","?><!doctype html><html><head><meta charset=\"utf-8\"><title>Scrap & Remnant Desk</title>","<style>body{font-family:system-ui,Segoe UI,Roboto,Arial,sans-serif;margin:20px}label{display:block;margin:6px 0}</style></head><body>","<h1>Scrap & Remnant Desk</h1>","<h3>Mark Remnant</h3>","<label>Piece ID <input id=\"p\"></label>","<label>Qty <input id=\"q\" type=\"number\" step=\"0.000001\"></label>","<label>Reason <input id=\"r\"></label>","<button id=\"mr\">Mark</button> <span id=\"m\"></span>","<h3>Convert to Scrap</h3>","<label>Piece ID <input id=\"p2\"></label>","<label>Qty <input id=\"q2\" type=\"number\" step=\"0.000001\"></label>","<label>Scrap Item <input id=\"si\"></label>","<label>Warehouse <input id=\"wh\"></label>","<label>Reason <input id=\"r2\"></label>","<button id=\"cs\">Convert</button> <span id=\"s\"></span>","<script>","async function api(u,d){const r=await fetch(u,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(d)});const j=await r.json();if(!j.ok)throw new Error(j.error);return j.data;}","mr.onclick=async()=>{try{const d=await api('stores/_ajax/remnant_mark.php',{piece_id:parseInt(p.value||0),qty_base:parseFloat(q.value||'0'),reason:r.value});m.textContent='Action '+d.remnant_action_id;}catch(e){alert(e.message);}}","cs.onclick=async()=>{try{const d=await api('stores/_ajax/scrap_convert.php',{piece_id:parseInt(p2.value||0),qty_base:parseFloat(q2.value||'0'),scrap_item_id:parseInt(si.value||0),warehouse_id:parseInt(wh.value||0),reason:r2.value});s.textContent='Scrap qty '+d.qty;}catch(e){alert(e.message);}}","</script></body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/labels_lot_pieces.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_login(); require_permission('stores.labels.print');","$pdo = db();","$pieceIds = array_filter(array_map('intval', explode(',', $_GET['pieces'] ?? '')));","if (!$pieceIds) { echo \"No pieces selected\"; exit; }","$in = implode(',', array_fill(0, count($pieceIds), '?'));","$st = $pdo->prepare(\"SELECT lp.id, lp.piece_code, lp.qty_base, sl.heat_no, sl.plate_no, sl.item_id, sl.warehouse_id","                     FROM lot_pieces lp JOIN stock_lots sl ON sl.id = lp.lot_id WHERE lp.id IN ($in)\");","$st->execute($pieceIds); $rows = $st->fetchAll(PDO::FETCH_ASSOC);","?><!doctype html><html><head><meta charset=\"utf-8\"/><title>Piece Labels</title>","<style>body{font-family:Arial} .label{width:90mm;height:50mm;border:1px solid #333;margin:8px;padding:8px;display:inline-block}",".h{font-weight:bold;font-size:14px}.qr{float:right;width:80px;height:80px}.meta{font-size:12px}</style>","</head><body><script src=\"https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js\"></script>","<?php foreach ($rows as $r): ?><div class=\"label\">","<div class=\"h\">Piece: <?= htmlspecialchars($r['piece_code']) ?></div>","<div class=\"meta\">Heat: <?= htmlspecialchars($r['heat_no'] ?? '-') ?> &nbsp; Plate: <?= htmlspecialchars($r['plate_no'] ?? '-') ?><br/>","KG: <?= number_format((float)$r['qty_base'], 3) ?><br/>Piece ID: <?= (int)$r['id'] ?></div>","<div id=\"qr<?= (int)$r['id'] ?>\" class=\"qr\"></div>","<script>new QRCode(document.getElementById(\"qr<?= (int)$r['id'] ?>\"),{text:\"PIECE:<?= (int)$r['id'] ?>\",width:80,height:80});</script>","<div style=\"clear:both\"></div></div><?php endforeach; ?></body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/gatepass_form.php": ["<?php","/** PATH: /public_html/stores/gatepass_form.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_permission('stores.gatepass.manage');","","$pdo = db();","$warehouses = $pdo->query(\"SELECT id, code, name FROM warehouses WHERE active=1 ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","$projects   = $pdo->query(\"SELECT id, code, name FROM projects ORDER BY id DESC LIMIT 200\")->fetchAll(PDO::FETCH_ASSOC);","$parties    = $pdo->query(\"SELECT id, code, name FROM parties ORDER BY id DESC LIMIT 200\")->fetchAll(PDO::FETCH_ASSOC);","$itemsRaw   = $pdo->query(\"SELECT id, material_code, name, uom_id FROM items WHERE status='active' ORDER BY name LIMIT 5000\")->fetchAll(PDO::FETCH_ASSOC);","","/* Machines: use your schema.","   PK: machines.id (int), Code: machines.machine_id (varchar), Name: machines.name */","$machines = $pdo->query(\"SELECT id, machine_id, name FROM machines WHERE status IN ('active','in_service') ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","","$uoms = $pdo->query(\"SELECT id, code, name FROM uom ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","","$page_title = \"Create Gate Pass\";","require_once __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container py-3\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h1 class=\"h4 mb-0\"><?= htmlspecialchars($page_title) ?></h1>","    <a href=\"gatepass_list.php\" class=\"btn btn-sm btn-outline-secondary\">Back</a>","  </div>","","  <div class=\"row g-3 mb-3\">","    <div class=\"col-md-3\">","      <label class=\"form-label\">Type</label>","      <select id=\"gp_type\" class=\"form-select form-select-sm\">","        <option value=\"site\">Site</option>","        <option value=\"jobwork\">Jobwork</option>","        <option value=\"maintenance\">Maintenance</option>","        <option value=\"scrap\">Scrap</option>","        <option value=\"correction\">Correction</option>","      </select>","    </div>","    <div class=\"col-md-2 d-flex align-items-center\">","      <div class=\"form-check mt-4\">","        <input class=\"form-check-input\" type=\"checkbox\" id=\"returnable\">","        <label class=\"form-check-label\" for=\"returnable\">Returnable</label>","      </div>","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Source Warehouse</label>","      <select id=\"src_wh\" class=\"form-select form-select-sm\" required>","        <option value=\"\">\u2014</option>","        <?php foreach ($warehouses as $w): ?>","          <option value=\"<?= (int)$w['id'] ?>\"><?= htmlspecialchars($w['code'].' \u2014 '.$w['name']) ?></option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-md-3 d-none\" id=\"dst_wh_wrap\">","      <label class=\"form-label\">Destination Warehouse</label>","      <select id=\"dst_wh\" class=\"form-select form-select-sm\">","        <option value=\"\">\u2014</option>","        <?php foreach ($warehouses as $w): ?>","          <option value=\"<?= (int)$w['id'] ?>\"><?= htmlspecialchars($w['code'].' \u2014 '.$w['name']) ?></option>","        <?php endforeach; ?>","      </select>","    </div>","  </div>","","  <div class=\"row g-3 mb-3 d-none\" id=\"party_wrap\">","    <div class=\"col-md-6\">","      <label class=\"form-label\">Party</label>","      <select id=\"party_id\" class=\"form-select form-select-sm\">","        <option value=\"\">\u2014</option>","        <?php foreach ($parties as $p): ?>","          <option value=\"<?= (int)$p['id'] ?>\"><?= htmlspecialchars($p['code'].' \u2014 '.$p['name']) ?></option>","        <?php endforeach; ?>","      </select>","    </div>","  </div>","","  <div class=\"row g-3 mb-3\">","    <div class=\"col-md-3\">","      <label class=\"form-label\">Vehicle No</label>","      <input type=\"text\" id=\"vehicle_no\" class=\"form-control form-control-sm\" maxlength=\"40\">","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Contact Person</label>","      <input type=\"text\" id=\"contact_person\" class=\"form-control form-control-sm\" maxlength=\"120\">","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Contact Phone</label>","      <input type=\"text\" id=\"contact_phone\" class=\"form-control form-control-sm\" maxlength=\"32\">","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Expected Return</label>","      <input type=\"date\" id=\"expected_return_date\" class=\"form-control form-control-sm\">","    </div>","  </div>","","  <div class=\"row g-3 mb-3\">","    <div class=\"col-md-6\">","      <label class=\"form-label\">Project</label>","      <select id=\"project_id\" class=\"form-select form-select-sm\">","        <option value=\"\">\u2014</option>","        <?php foreach ($projects as $p): ?>","          <option value=\"<?= (int)$p['id'] ?>\"><?= htmlspecialchars($p['code'].' \u2014 '.$p['name']) ?></option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-md-6\">","      <label class=\"form-label\">Remarks</label>","      <input type=\"text\" id=\"remarks\" class=\"form-control form-control-sm\" maxlength=\"255\">","    </div>","  </div>","","  <h5 class=\"mt-4\">Lines</h5>","  <div class=\"table-responsive mb-3\">","    <table class=\"table table-sm align-middle\" id=\"itemsTable\">","      <thead class=\"table-light\">","        <tr>","          <th style=\"width:140px\">Line Type</th>","          <th class=\"mat\">Item</th>","          <th class=\"mat\" style=\"width:100px\">UOM</th>","          <th class=\"mat\" style=\"width:120px\" class=\"text-end\">Qty</th>","          <th class=\"asset d-none\">Machine</th>","          <th>Remarks</th>","          <th style=\"width:40px\"></th>","        </tr>","      </thead>","      <tbody></tbody>","    </table>","  </div>","  <button type=\"button\" class=\"btn btn-sm btn-outline-secondary mb-3\" id=\"addRow\">+ Add Line</button>","","  <div class=\"text-end\">","    <button id=\"saveBtn\" class=\"btn btn-primary btn-sm\">Save Gate Pass</button>","  </div>","</div>","","<script>","const ITEMS = <?= json_encode($itemsRaw) ?>;","const UOMS  = <?= json_encode($uoms) ?>;","const MACH  = <?= json_encode($machines) ?>;","","function itemOptions(){","  return '<option value=\"\">\u2014</option>' + ITEMS.map(i=>`<option value=\"${i.id}\">${(i.material_code||'')} \u2014 ${i.name}</option>`).join('');","}","function uomOptions(){","  return '<option value=\"\">\u2014</option>' + UOMS.map(u=>`<option value=\"${u.id}\">${u.code||u.name}</option>`).join('');","}","function machineOptions(){","  return '<option value=\"\">\u2014</option>' + MACH.map(m=>`<option value=\"${m.id}\">${m.machine_id} \u2014 ${m.name}</option>`).join('');","}","function addRow(){","  const tr = document.createElement('tr');","  tr.innerHTML = `","    <td>","      <select class=\"form-select form-select-sm line_type\">","        <option value=\"material\" selected>Material</option>","        <option value=\"asset\">Machine</option>","      </select>","    </td>","    <td class=\"mat\"><select class=\"form-select form-select-sm item_id\">${itemOptions()}</select></td>","    <td class=\"mat\"><select class=\"form-select form-select-sm uom_id\">${uomOptions()}</select></td>","    <td class=\"mat\"><input type=\"number\" min=\"0\" step=\"0.001\" class=\"form-control form-control-sm text-end qty\"></td>","    <td class=\"asset d-none\"><select class=\"form-select form-select-sm machine_id\">${machineOptions()}</select></td>","    <td><input type=\"text\" class=\"form-control form-control-sm line_remarks\" maxlength=\"150\"></td>","    <td><button type=\"button\" class=\"btn btn-sm btn-outline-danger delRow\">&times;</button></td>","  `;","  document.querySelector('#itemsTable tbody').appendChild(tr);","  tr.querySelector('.line_type').addEventListener('change', ()=>{","    const isAsset = tr.querySelector('.line_type').value==='asset';","    tr.querySelectorAll('.mat').forEach(td=>td.classList.toggle('d-none', isAsset));","    tr.querySelectorAll('.asset').forEach(td=>td.classList.toggle('d-none', !isAsset));","  });","}","document.getElementById('addRow').addEventListener('click', addRow);","document.querySelector('#itemsTable tbody').addEventListener('click', e=>{","  if (e.target.classList.contains('delRow')) e.target.closest('tr').remove();","});","addRow();","","function toggleFields(){","  const type = document.getElementById('gp_type').value;","  const ret = document.getElementById('returnable').checked;","  document.getElementById('dst_wh_wrap').classList.toggle('d-none', !(type==='site' && !ret));","  document.getElementById('party_wrap').classList.toggle('d-none', !(type==='jobwork'||type==='maintenance'));","}","document.getElementById('gp_type').addEventListener('change', toggleFields);","document.getElementById('returnable').addEventListener('change', toggleFields);","toggleFields();","","document.getElementById('saveBtn').addEventListener('click', async ()=>{","  const btn = document.getElementById('saveBtn'); btn.disabled=true; btn.textContent='Saving\u2026';","  try{","    const gp_type = document.getElementById('gp_type').value;","    const returnable = document.getElementById('returnable').checked ? 1 : 0;","    const src = parseInt(document.getElementById('src_wh').value||'0',10);","    const dst = parseInt(document.getElementById('dst_wh').value||'0',10);","    const party_id = parseInt(document.getElementById('party_id')?.value||'0',10)||null;","    const project_id = parseInt(document.getElementById('project_id')?.value||'0',10)||null;","    const payload = {","      gp_type, returnable,","      source_warehouse_id: src,","      dest_warehouse_id: (gp_type==='site' && !returnable) ? (dst||null) : null,","      party_id, project_id,","      remarks: document.getElementById('remarks').value.trim(),","      vehicle_no: document.getElementById('vehicle_no').value.trim(),","      contact_person: document.getElementById('contact_person').value.trim(),","      contact_phone: document.getElementById('contact_phone').value.trim(),","      expected_return_date: document.getElementById('expected_return_date').value || null,","      items: []","    };","    document.querySelectorAll('#itemsTable tbody tr').forEach(tr=>{","      const type = tr.querySelector('.line_type').value;","      if (type==='asset') {","        const machine_id = parseInt(tr.querySelector('.machine_id')?.value||'0',10);","        const lrmk = tr.querySelector('.line_remarks').value.trim();","        if (machine_id>0) payload.items.push({is_asset:1, machine_id, remarks:lrmk});","      } else {","        const item_id = parseInt(tr.querySelector('.item_id')?.value||'0',10);","        const uom_id  = parseInt(tr.querySelector('.uom_id')?.value||'0',10);","        const qty     = parseFloat(tr.querySelector('.qty')?.value||'0');","        const lrmk    = tr.querySelector('.line_remarks').value.trim();","        if (item_id>0 && uom_id>0 && qty>0) payload.items.push({is_asset:0, item_id, uom_id, qty, remarks:lrmk});","      }","    });","    if(!src){ alert('Source warehouse required'); return; }","    if(payload.items.length===0){ alert('Add at least one valid line'); return; }","","    const resp=await fetch('_ajax/gp_create_post.php',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});","    const raw=await resp.text(); const s=raw.indexOf('{'),e=raw.lastIndexOf('}'); const json=(s!=-1&&e!=-1&&e>s)?raw.slice(s,e+1):raw;","    const data=JSON.parse(json);","    if(data.ok){ alert('Gate Pass created: '+data.gp_no); location.href='gatepass_list.php'; }","    else alert('Save failed: '+(data.error||'Unknown'));","  }catch(e){ alert('Error: '+(e?.message||e)); }","  finally{ btn.disabled=false; btn.textContent='Save Gate Pass'; }","});","</script>","<?php require_once __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_patches/grn_post_patch.txt": ["","# File: stores/_ajax/grn_post.php  (inside your existing GRN post handler, per GRN line)","# 1) Build category + inputs for measurement (examples for Plate/Section)","$category = $poLine['category'] ?? 'plate'; // map from your item/category master","$inputs = [","  'L_mm'     => (float)($grnLine['L_mm'] ?? 0),","  'W_mm'     => (float)($grnLine['W_mm'] ?? 0),","  'Thk_mm'   => (float)($grnLine['Thk_mm'] ?? 0),","  'Qty'      => (float)($grnLine['pcs'] ?? 1),","  'length_mm'=> (float)($grnLine['length_mm'] ?? 0),","  'wt_per_m' => (float)($poLine['wt_per_m'] ?? 0),","  'boxes'    => (float)($grnLine['boxes'] ?? 0),","  'kg_per_box' => (float)($poLine['kg_per_box'] ?? 0)","];","","$repo = new \\Coupler\\RuleRepo($pdo);","$meas = new \\Coupler\\MeasurementEngine($repo);","$glif = new \\Coupler\\CouplerGL($pdo, $repo);","","$res = $meas->compute($category, $inputs);","$acctQty = (float)$res['acc_qty'];","","# 2) Derive accounting rate from PO price basis","$basis = $poLine['price_basis'] ?? 'per_kg';  // per_kg|per_no|per_m","$unitPrice = (float)($poLine['unit_price'] ?? 0);","if ($basis === 'per_kg')      { $acctRate = $unitPrice; }","elseif ($basis === 'per_no')  { $kgPerNo = max(0.000001, $acctQty / max(1,(float)$inputs['Qty'])); $acctRate = $unitPrice / $kgPerNo; }","elseif ($basis === 'per_m')   { $len_m = max(0.000001, ((float)$inputs['length_mm'])/1000 * max(1,(float)$inputs['Qty'])); $kg_per_m = $acctQty / $len_m; $acctRate = $unitPrice / max(0.000001,$kg_per_m); }","else { $acctRate = $unitPrice; }","","# 3) Post stock IN strictly in base UOM (e.g., KG). Use your existing stock writer here.","$owner = ['type'=>$grn['owner_type'] ?? 'company', 'id'=>$grn['owner_id'] ?? null];","// Example call into your stock posting service (pseudo):","// StockMoveWriter::in(item_id: $poLine['item_id'], warehouse_id: $grn['warehouse_id'], qty: $acctQty, rate: ($owner['type']==='company' ? $acctRate : 0.0), owner: $owner, lot_meta: [...heat/plate...], refs: [...])","","# 4) Queue GL entries (company-owned only typically)","$glif->queueGLEntries($category, [","  'doc_type'   => $grn['doc_type'] ?? 'PO-GRN',","  'owner_type' => $owner['type'],","  'acct_qty'   => $acctQty,","  'acct_rate'  => $acctRate,","  'refs'       => ['grn_id'=>$grn['id'] ?? null, 'po_id'=>$poLine['po_id'] ?? null]","]);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_patches/grn_post_lots_patch.txt": ["# GRN lots creation patch (Phase 1.5)","$ownerType = $grn['owner_type'] ?? 'company';","$ownerId   = $grn['owner_id'] ?? null;","$lotMeta = [","  'heat_no' => $grnLine['heat_no'] ?? null,","  'plate_no'=> $grnLine['plate_no'] ?? null,","  'shape'   => $category === 'plate' ? 'rect' : ($category === 'ismb' ? 'strip' : 'other'),","  'pcs'     => (int)($grnLine['pcs'] ?? 1),","  'dims'    => [","    'L_mm'=>(float)($grnLine['L_mm'] ?? $grnLine['length_mm'] ?? 0),","    'W_mm'=>(float)($grnLine['W_mm'] ?? 0),","    'Thk_mm'=>(float)($grnLine['Thk_mm'] ?? 0)","  ],","  'grn_line_id' => $grnLine['id'] ?? null","];","$lotSvc = new \\Coupler\\LotService($pdo);","$lotRes = $lotSvc->createLotAndPieces((int)$poLine['item_id'], (int)$grn['warehouse_id'], (string)$ownerType, $ownerId ? (int)$ownerId : null, (float)$acctQty, $lotMeta);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/requisitions_lines_api.php": ["<?php","/** PATH: /public_html/stores/requisitions_lines_api.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_permission('stores.req.view');","header('Content-Type: application/json');","","try {","  $pdo = db();","  $req_id = (int)($_GET['req_id'] ?? 0);","  if ($req_id<=0) throw new RuntimeException('req_id required');","","  // Hard-select material_code for items; tolerate uom without code","  $sql = \"SELECT mri.*,","                 i.material_code AS item_code, i.name AS item_name,","                 COALESCE(u.code, u.name) AS uom_code","          FROM material_requisition_items mri","          JOIN items i ON i.id = mri.item_id","          JOIN uom u   ON u.id = mri.uom_id","          WHERE mri.req_id = ?","          ORDER BY mri.id\";","  $st = $pdo->prepare($sql);","  $st->execute([$req_id]);","  $lines = $st->fetchAll(PDO::FETCH_ASSOC);","","  echo json_encode(['ok'=>true, 'lines'=>$lines], JSON_UNESCAPED_UNICODE|JSON_UNESCAPED_SLASHES);","} catch (Throwable $e) {","  http_response_code(400);","  echo json_encode(['ok'=>false,'error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/cycle_count_enter.php": ["<?php","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","require_permission('stores.cycle.manage');","$pdo = db();","$id = (int)($_GET['id'] ?? 0); if ($id <= 0) die('Invalid id');","$hdr = $pdo->prepare(\"SELECT * FROM cycle_counts WHERE id=:id\"); $hdr->execute([':id'=>$id]); $hdr = $hdr->fetch(PDO::FETCH_ASSOC); if (!$hdr) die('Not found');","$lines = $pdo->prepare(\"SELECT cci.*, i.code AS item_code, i.name AS item_name, u.code AS uom_code","                        FROM cycle_count_items cci JOIN items i ON i.id = cci.item_id LEFT JOIN uoms u ON u.id = cci.uom_id","                        WHERE cci.cycle_id = :id ORDER BY line_no\");","$lines->execute([':id'=>$id]); $rows = $lines->fetchAll(PDO::FETCH_ASSOC);","$csrf = csrf_token();","?><!doctype html><html><head><meta charset=\"utf-8\"><title>Cycle Count \u2014 Enter (<?=$hdr['cc_no']?>)</title><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","<style>body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;margin:16px}.card{border:1px solid #ddd;border-radius:8px;padding:16px;margin-bottom:16px}table{width:100%;border-collapse:collapse;font-size:14px}th,td{border-bottom:1px solid #eee;padding:8px;text-align:left}th{background:#fafafa}.right{text-align:right}.btn{display:inline-block;padding:8px 12px;border:1px solid #ccc;border-radius:6px;background:#fff;cursor:pointer;text-decoration:none;color:#111}.btn.primary{border-color:#2573ef;background:#2f7df4;color:#fff}input[type=number]{width:140px;padding:6px}input[type=text]{padding:6px;width:100%}</style></head><body>","<div class=\"card\"><h2>Cycle Count \u2014 <?=$hdr['cc_no']?></h2><p>Warehouse ID: <?=$hdr['warehouse_id']?> | Bin: <?=htmlspecialchars((string)$hdr['bin_id'])?></p>","<form method=\"post\" action=\"cycle_count_post.php\"><input type=\"hidden\" name=\"csrf_token\" value=\"<?=htmlspecialchars($csrf)?>\"><input type=\"hidden\" name=\"cycle_id\" value=\"<?=$hdr['id']?>\">","<table><thead><tr><th>#</th><th>Item</th><th class=\"right\">Expected</th><th class=\"right\">Counted</th><th class=\"right\">Variance</th><th>Remarks</th></tr></thead><tbody>","<?php foreach($rows as $r): ?><tr><td><?=$r['line_no']?></td><td><?=htmlspecialchars($r['item_code'].' \u2014 '.$r['item_name'])?></td><td class=\"right\"><?=number_format((float)$r['expected_qty'],3)?></td>","<td class=\"right\"><input type=\"number\" name=\"counted_qty[<?=$r['id']?>]\" step=\"0.001\" value=\"<?=number_format((float)$r['counted_qty'],3,'.','')?>\"></td>","<td class=\"right\"><?=number_format((float)($r['counted_qty'] - $r['expected_qty']),3)?></td>","<td><input type=\"text\" name=\"remarks[<?=$r['id']?>]\" value=\"<?=htmlspecialchars($r['remarks'] ?? '')?>\"></td></tr><?php endforeach; if (!count($rows)): ?>","<tr><td colspan=\"6\">No lines.</td></tr><?php endif; ?></tbody></table>","<div style=\"margin-top:12px;\"><button class=\"btn primary\" type=\"submit\">Post Variance</button> <a class=\"btn\" href=\"cycle_count_generate.php\">Back</a></div></form></div>","</body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/qc_release_form.php": ["<?php","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_permission('stores.qc.manage');","","$pdo = db();","$warehouses = $pdo->query(\"SELECT id, name FROM warehouses ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","$bins  = $pdo->query(\"SELECT id, name, warehouse_id FROM bins ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","$items = $pdo->query(\"SELECT id, CONCAT(code,' - ',name) label FROM items ORDER BY code LIMIT 2000\")->fetchAll(PDO::FETCH_ASSOC);","$uoms  = $pdo->query(\"SELECT id, code FROM uoms ORDER BY code\")->fetchAll(PDO::FETCH_ASSOC);","$csrf = csrf_token();","?>","<!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>QC Release</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <style>","    body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;margin:16px}","    .card{border:1px solid #ddd;border-radius:8px;padding:16px;margin-bottom:16px}","    .row{display:flex;flex-wrap:wrap;gap:12px;align-items:flex-end}","    .field{display:flex;flex-direction:column;min-width:220px}","    table{width:100%;border-collapse:collapse;font-size:14px}","    th,td{border-bottom:1px solid #eee;padding:8px;text-align:left}","    th{background:#fafafa}","    .btn{display:inline-block;padding:8px 12px;border:1px solid #ccc;border-radius:6px;background:#fff;cursor:pointer;text-decoration:none;color:#111}","    .btn.primary{border-color:#2573ef;background:#2f7df4;color:#fff}","    input,select{padding:6px}","  </style>","</head>","<body>","  <div class=\"card\">","    <h2>QC Release</h2>","    <form method=\"post\" action=\"qc_release_post.php\" onsubmit=\"return validateForm()\">","      <input type=\"hidden\" name=\"csrf_token\" value=\"<?=htmlspecialchars($csrf)?>\">","      <div class=\"row\">","        <div class=\"field\">","          <label>Warehouse</label>","          <select name=\"warehouse_id\" id=\"warehouse_id\" required>","            <option value=\"\">-- Select --</option>","            <?php foreach($warehouses as $w): ?>","              <option value=\"<?=$w['id']?>\"><?=htmlspecialchars($w['name'])?></option>","            <?php endforeach; ?>","          </select>","        </div>","        <div class=\"field\">","          <label>QC Bin (source)</label>","          <select name=\"qc_bin_id\" id=\"qc_bin_id\" required>","            <option value=\"\">-- Select QC Bin --</option>","            <?php foreach($bins as $b): ?>","              <option data-wh=\"<?=$b['warehouse_id']?>\" value=\"<?=$b['id']?>\"><?=htmlspecialchars($b['name'])?></option>","            <?php endforeach; ?>","          </select>","        </div>","        <div class=\"field\">","          <label>To Bin</label>","          <select name=\"to_bin_id\" id=\"to_bin_id\">","            <option value=\"\">-- Any --</option>","            <?php foreach($bins as $b): ?>","              <option data-wh=\"<?=$b['warehouse_id']?>\" value=\"<?=$b['id']?>\"><?=htmlspecialchars($b['name'])?></option>","            <?php endforeach; ?>","          </select>","        </div>","        <div class=\"field\" style=\"flex:1\">","          <label>Remarks</label>","          <input type=\"text\" name=\"remarks\" placeholder=\"Optional\">","        </div>","      </div>","","      <div class=\"card\">","        <h3>Lines</h3>","        <table id=\"lines\">","          <thead><tr>","            <th style=\"width:35%;\">Item</th><th>UoM</th><th>Qty</th><th>Batch (optional)</th><th>Remarks</th><th></th>","          </tr></thead>","          <tbody></tbody>","        </table>","        <button class=\"btn\" type=\"button\" onclick=\"addLine()\">+ Add line</button>","      </div>","","      <button class=\"btn primary\" type=\"submit\">Release from QC</button>","    </form>","  </div>","","<script>","const items = <?=json_encode($items)?>;","const uoms  = <?=json_encode($uoms)?>;","","function addLine(){","  const tbody = document.querySelector('#lines tbody');","  const tr = document.createElement('tr');","  tr.innerHTML = `","    <td>","      <select name=\"lines[item_id][]\" required>","        <option value=\"\">-- Select Item --</option>","        ${items.map(it=>`<option value=\"${it.id}\">${escapeHtml(it.label)}</option>`).join('')}","      </select>","    </td>","    <td>","      <select name=\"lines[uom_id][]\" required>","        <option value=\"\">-- UoM --</option>","        ${uoms.map(u=>`<option value=\"${u.id}\">${escapeHtml(u.code)}</option>`).join('')}","      </select>","    </td>","    <td><input type=\"number\" name=\"lines[qty][]\" min=\"0.001\" step=\"0.001\" required></td>","    <td><input type=\"number\" name=\"lines[batch_id][]\" step=\"1\" min=\"1\" placeholder=\"ID\"></td>","    <td><input type=\"text\" name=\"lines[remarks][]\" placeholder=\"Optional\"></td>","    <td><button class=\"btn\" type=\"button\" onclick=\"this.closest('tr').remove()\">Remove</button></td>","  `;","  tbody.appendChild(tr);","}","","function validateForm(){","  const wh = document.getElementById('warehouse_id').value;","  const qcBin = document.getElementById('qc_bin_id').value;","  if (!wh || !qcBin) { alert('Warehouse and QC bin are required'); return false; }","  return true;","}","","function escapeHtml(str){","  return String(str).replace(/[&<>\\\"'`=\\\\/]/g, s => ({'&':'&amp;','<':'&lt;','>':'&gt;','\\\"':'&quot;',\"'\":'&#39;','/':'&#x2F;','`':'&#x60;','=':'&#x3D;','\\\\':'&#x5C;'}[s]));","}","</script>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/issue_console.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/rbac.php';","require_login(); require_permission('stores.issue.view');","?><!doctype html><html><head><meta charset=\"utf-8\"><title>Stores Issue</title>","<style>body{font-family:system-ui,Segoe UI,Roboto,Arial,sans-serif;margin:20px}label{display:block;margin:6px 0}</style></head><body>","<h1>Stores Issue</h1>","<h3>Create Header</h3>","<label>Date <input id=\"d\" type=\"date\"></label>","<label>Cost Center <input id=\"cc\"></label>","<label>Job <input id=\"job\"></label>","<button id=\"c\">Create</button> <b id=\"hid\"></b>","<h3>Add Line</h3>","<label>Item <input id=\"item\" type=\"number\"></label>","<label>Warehouse <input id=\"wh\" type=\"number\"></label>","<label>Qty <input id=\"qty\" type=\"number\" step=\"0.000001\"></label>","<label>Lot (opt) <input id=\"lot\" type=\"number\"></label>","<label>Piece (opt) <input id=\"piece\" type=\"number\"></label>","<button id=\"add\">Add</button> <span id=\"msg\"></span>","<h3>Post</h3>","<button id=\"post\">Post Issue</button> <span id=\"pmsg\"></span>","<script>","async function api(u,d){const r=await fetch(u,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(d)});const j=await r.json();if(!j.ok)throw new Error(j.error);return j.data;}","document.getElementById('c').onclick=async()=>{try{const d=await api('stores/_ajax/issue_create.php',{issue_date:document.getElementById('d').value,cost_center_id:document.getElementById('cc').value||null,job_id:document.getElementById('job').value||null});document.getElementById('hid').textContent='Issue #'+d.issue_id;window.issue_id=d.issue_id;}catch(e){alert(e.message);}}","document.getElementById('add').onclick=async()=>{try{const d=await api('stores/_ajax/issue_add_line.php',{issue_id:window.issue_id,item_id:parseInt(document.getElementById('item').value||0),warehouse_id:parseInt(document.getElementById('wh').value||0),qty_base:parseFloat(document.getElementById('qty').value||'0'),lot_id:document.getElementById('lot').value||null,piece_id:document.getElementById('piece').value||null});document.getElementById('msg').textContent='Line #'+d.issue_line_id+' added';}catch(e){alert(e.message);}}","document.getElementById('post').onclick=async()=>{try{const d=await api('stores/_ajax/issue_post.php',{issue_id:window.issue_id});document.getElementById('pmsg').textContent='Posted lines='+d.lines+' qty_total='+d.qty_total;}catch(e){alert(e.message);}}","</script></body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/cycle_count_post.php": ["<?php","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/StockMoveWriter.php';","require_once __DIR__ . '/../includes/ValuationService.php';","require_once __DIR__ . '/../includes/StockLedgerAdapter.php';","header('Content-Type: application/json');","try {","  require_permission('stores.cycle.manage');","  csrf_require_token($_POST['csrf_token'] ?? '');","  $pdo = db();","  $cycle_id = (int)($_POST['cycle_id'] ?? 0);","  if ($cycle_id <= 0) throw new RuntimeException('Invalid cycle_id');","  $hdr = $pdo->prepare(\"SELECT * FROM cycle_counts WHERE id=:id FOR UPDATE\"); $hdr->execute([':id'=>$cycle_id]); $hdr = $hdr->fetch(PDO::FETCH_ASSOC);","  if (!$hdr) throw new RuntimeException('Cycle not found'); if ($hdr['status'] === 'POSTED') throw new RuntimeException('Already posted');","  $stmtLines = $pdo->prepare(\"SELECT * FROM cycle_count_items WHERE cycle_id=:id ORDER BY line_no\"); $stmtLines->execute([':id'=>$cycle_id]); $lines = $stmtLines->fetchAll(PDO::FETCH_ASSOC);","  if (!$lines) throw new RuntimeException('No lines to post');","  $counted = $_POST['counted_qty'] ?? []; $remarks = $_POST['remarks'] ?? [];","  $pdo->beginTransaction();","  $upd = $pdo->prepare(\"UPDATE cycle_count_items SET counted_qty=:c, variance_qty=:v, remarks=:r WHERE id=:id\");","  $waQ = $pdo->prepare(\"SELECT avg_cost FROM stock_avg WHERE item_id = :i AND warehouse_id = :w\");","  $now = date('Y-m-d H:i:s'); $userId = (int)($_SESSION['user_id'] ?? 0);","  foreach ($lines as $ln) {","    $id = (int)$ln['id']; $c = isset($counted[$id]) ? (float)$counted[$id] : 0.0; $v = $c - (float)$ln['expected_qty']; $r = isset($remarks[$id]) ? trim($remarks[$id]) : '';","    $upd->execute([':c'=>$c, ':v'=>$v, ':r'=>$r, ':id'=>$id]);","    if (abs($v) < 0.0005) continue;","    $waQ->execute([':i'=>$ln['item_id'], ':w'=>$hdr['warehouse_id']]); $wa = (float)$waQ->fetchColumn(); if ($wa < 0) $wa = 0.0;","    if ($v > 0) {","      $payload = ['txn_type'=>'GRN','txn_no'=>$hdr['cc_no'],'txn_date'=>$now,'project_id'=>$hdr['project_id'],'item_id'=>(int)$ln['item_id'],'uom_id'=>$ln['uom_id']?:null,'warehouse_id'=>(int)$hdr['warehouse_id'],'bin_id'=>$hdr['bin_id']?:null,'qty'=>(float)$v,'unit_cost'=>$wa,'ref_entity'=>'cycle_counts','ref_id'=>(int)$hdr['id'],'created_by'=>$userId];","      StockMoveWriter::postIn($pdo, $payload); ValuationService::onReceipt($pdo, (int)$ln['item_id'], (int)$hdr['warehouse_id'], (float)$v, $wa); StockLedgerAdapter::mirror($pdo, $payload);","    } else {","      $qty = abs($v);","      $payload = ['txn_type'=>'ISS','txn_no'=>$hdr['cc_no'],'txn_date'=>$now,'project_id'=>$hdr['project_id'],'item_id'=>(int)$ln['item_id'],'uom_id'=>$ln['uom_id']?:null,'warehouse_id'=>(int)$hdr['warehouse_id'],'bin_id'=>$hdr['bin_id']?:null,'qty'=>$qty,'unit_cost'=>$wa,'ref_entity'=>'cycle_counts','ref_id'=>(int)$hdr['id'],'created_by'=>$userId];","      StockMoveWriter::postOut($pdo, $payload); ValuationService::onIssue($pdo, (int)$ln['item_id'], (int)$hdr['warehouse_id'], $qty); StockLedgerAdapter::mirror($pdo, $payload);","    }","  }","  $pdo->prepare(\"UPDATE cycle_counts SET status='POSTED', posted_at=NOW(6) WHERE id=:id\")->execute([':id'=>$hdr['id']]);","  $pdo->commit(); echo json_encode(['ok'=>true, 'cycle_id'=>$hdr['id'], 'cc_no'=>$hdr['cc_no']]);","} catch (Throwable $e) { if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack(); http_response_code(400); echo json_encode(['ok'=>false, 'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/gatepass_list.php": ["<?php","/** PATH: /public_html/stores/gatepass_list.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_permission('stores.gatepass.view');","","$pdo = db();","$only_pending = isset($_GET['pending']) && $_GET['pending']=='1';","$qtype = $_GET['type'] ?? 'all'; // all/site/jobwork/maintenance/scrap/correction","$wh = (int)($_GET['warehouse_id'] ?? 0);","$q  = trim((string)($_GET['q'] ?? ''));","","$where=[]; $p=[];","if ($only_pending) $where[]=\"gp.status='open' AND gp.returnable=1\";","if ($qtype!=='all') { $where[]=\"gp.gp_type=?\"; $p[]=$qtype; }","if ($wh>0) { $where[]=\"(gp.source_warehouse_id=? OR gp.dest_warehouse_id=?)\"; $p[]=$wh; $p[]=$wh; }","if ($q!=='') { $where[]=\"(gp.gp_no LIKE ? OR gp.remarks LIKE ?)\"; $p[]=\"%$q%\"; $p[]=\"%$q%\"; }","$W = $where ? 'WHERE '.implode(' AND ',$where) : '';","","$sql = \"","SELECT gp.*,","       wsrc.code src_code, wsrc.name src_name,","       wdst.code dst_code, wdst.name dst_name,","       prt.name AS party_name,","       -- materials-only counts/sums","       (","         SELECT COUNT(*) FROM gatepass_items gi","         WHERE gi.gp_id = gp.id AND gi.is_asset = 0","       ) AS items_count,","       (","         SELECT COALESCE(SUM(gi.qty),0) FROM gatepass_items gi","         WHERE gi.gp_id = gp.id AND gi.is_asset = 0","       ) AS qty_total,","       (","         SELECT COALESCE(SUM(gi.qty_returned),0) FROM gatepass_items gi","         WHERE gi.gp_id = gp.id AND gi.is_asset = 0","       ) AS qty_ret","FROM gatepasses gp","JOIN warehouses wsrc ON wsrc.id = gp.source_warehouse_id","LEFT JOIN warehouses wdst ON wdst.id = gp.dest_warehouse_id","LEFT JOIN parties    prt  ON prt.id  = gp.party_id","$W","ORDER BY gp.gp_date DESC, gp.id DESC","LIMIT 500","\";","$st=$pdo->prepare($sql); $st->execute($p);","$rows=$st->fetchAll(PDO::FETCH_ASSOC);","","$whs = $pdo->query(\"SELECT id, code, name FROM warehouses WHERE active=1 ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","","$can_edit = function_exists('has_permission') ? has_permission('stores.gatepass.edit') : false;","","$page_title = \"Gate Passes\";","require_once __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container-fluid py-3\">","  <div class=\"d-flex justify-content-between align-items-center mb-2\">","    <h1 class=\"h4 mb-0\"><?= htmlspecialchars($page_title) ?></h1>","    <div class=\"d-flex gap-2\">","      <a href=\"?pending=1\" class=\"btn btn-sm btn-outline-warning<?= $only_pending?' active':'' ?>\">Pending Returns</a>","      <a class=\"btn btn-outline-secondary btn-sm\" href=\"gatepass_form.php\">New Gatepass</a>","    </div>","  </div>","","  <form class=\"row g-2 mb-3\">","    <div class=\"col-auto\">","      <select name=\"type\" class=\"form-select form-select-sm\">","        <?php foreach (['all'=>'All','site'=>'Site','jobwork'=>'Jobwork','maintenance'=>'Maintenance','scrap'=>'Scrap','correction'=>'Correction'] as $k=>$v): ?>","          <option value=\"<?= $k ?>\" <?= $k===$qtype?'selected':'' ?>><?= $v ?></option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-auto\">","      <select name=\"warehouse_id\" class=\"form-select form-select-sm\">","        <option value=\"0\">All Warehouses</option>","        <?php foreach ($whs as $x): ?>","          <option value=\"<?= (int)$x['id'] ?>\" <?= ((int)$x['id']===$wh)?'selected':'' ?>>","            <?= htmlspecialchars(($x['code']??'').' \u2014 '.$x['name']) ?>","          </option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-auto\">","      <input name=\"q\" class=\"form-control form-control-sm\" placeholder=\"Search GP No / remark\" value=\"<?= htmlspecialchars($q) ?>\">","    </div>","    <div class=\"col-auto\">","      <button class=\"btn btn-sm btn-secondary\">Filter</button>","      <a class=\"btn btn-sm btn-outline-primary\" href=\"?\">Reset</a>","    </div>","  </form>","","  <div class=\"table-responsive\">","    <table class=\"table table-sm align-middle\">","      <thead class=\"table-light\">","        <tr>","          <th>GP No</th>","          <th>Date</th>","          <th>Type</th>","          <th>Returnable</th>","          <th>From</th>","          <th>To / Party</th>","          <th class=\"text-end\">Lines</th>","          <th class=\"text-end\">Qty</th>","          <th class=\"text-end\">Returned</th>","          <th>Status</th>","          <th style=\"width:190px\"></th>","        </tr>","      </thead>","      <tbody>","        <?php if (!$rows): ?>","          <tr><td colspan=\"11\" class=\"text-center text-muted py-4\">No gatepasses.</td></tr>","        <?php else: foreach ($rows as $r):","          $cls = ['open'=>'warning','closed'=>'success','cancelled'=>'danger'][$r['status']] ?? 'secondary';","","          // Destination label: show party name for non-transfer; else destination warehouse for transfer","          $toLabel = ($r['gp_type']==='site' && !$r['returnable'])","              ? trim(($r['dst_code']??'').' \u2014 '.($r['dst_name']??''))","              : ( ($r['party_name']??'') !== '' ? $r['party_name'] : '\u2014' );","        ?>","          <tr>","            <td class=\"fw-semibold\"><?= htmlspecialchars($r['gp_no']) ?></td>","            <td><?= htmlspecialchars($r['gp_date']) ?></td>","            <td><?= htmlspecialchars(ucfirst($r['gp_type'])) ?></td>","            <td><?= $r['returnable'] ? '<span class=\"badge bg-info-subtle text-info border\">Yes</span>' : 'No' ?></td>","            <td><span class=\"badge bg-secondary-subtle text-secondary border\"><?= htmlspecialchars($r['src_code']) ?></span> <?= htmlspecialchars($r['src_name']) ?></td>","            <td><?= htmlspecialchars($toLabel) ?></td>","            <td class=\"text-end\"><?= (int)$r['items_count'] ?></td>","            <td class=\"text-end\"><?= number_format((float)$r['qty_total'],3) ?></td>","            <td class=\"text-end\"><?= number_format((float)$r['qty_ret'],3) ?></td>","            <td><span class=\"badge bg-<?= $cls ?>-subtle text-<?= $cls ?> border\"><?= htmlspecialchars($r['status']) ?></span></td>","            <td class=\"text-end\">","              <div class=\"btn-group btn-group-sm\" role=\"group\">","                <!-- View -->","                <a class=\"btn btn-outline-secondary\" href=\"gatepass_print.php?id=<?= (int)$r['id'] ?>\">View</a>","                <!-- Print -->","                <a class=\"btn btn-outline-primary\" href=\"gatepass_print.php?id=<?= (int)$r['id'] ?>\" target=\"_blank\">Print</a>","                <!-- Edit (permission) -->","                <?php if ($can_edit): ?>","                  <a class=\"btn btn-outline-warning\" href=\"gatepass_form.php?id=<?= (int)$r['id'] ?>\">Edit</a>","                <?php else: ?>","                  <button class=\"btn btn-outline-warning\" disabled title=\"No permission\">Edit</button>","                <?php endif; ?>","              </div>","              <?php if ($r['returnable'] && $r['status']==='open'): ?>","                <a class=\"btn btn-outline-success btn-sm ms-1\" href=\"gatepass_return_form.php?gp_id=<?= (int)$r['id'] ?>\">Return</a>","              <?php endif; ?>","            </td>","          </tr>","        <?php endforeach; endif; ?>","      </tbody>","    </table>","  </div>","</div>","<?php require_once __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/requisitions_form.php": ["<?php","/** PATH: /public_html/stores/requisitions_form.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_permission('stores.req.manage');","","$pdo = db();","","/* ----------------- Helpers (robust, no INFORMATION_SCHEMA needed) ----------------- */","function load_projects(PDO $pdo): array {","  try { $rows = $pdo->query(\"SELECT id, code, name FROM projects ORDER BY id DESC LIMIT 200\")->fetchAll(PDO::FETCH_ASSOC); }","  catch(Throwable $e){ $rows = $pdo->query(\"SELECT id, name FROM projects ORDER BY id DESC LIMIT 200\")->fetchAll(PDO::FETCH_ASSOC); foreach($rows as &$r){$r['code']=null;} }","  foreach ($rows as &$r) { $r['_label'] = ($r['code']?($r['code'].' \u2014 '):'').($r['name']??''); }","  return $rows;","}","","/** Load Items with category + subcategory ids (your schema columns). */","function load_items(PDO $pdo): array {","  // Prefer only active to keep list small","  $sql = \"SELECT id, material_code, name, category_id, subcategory_id FROM items WHERE status='active' ORDER BY name ASC LIMIT 5000\";","  try { return $pdo->query($sql)->fetchAll(PDO::FETCH_ASSOC); } catch(Throwable $e) {","    // Fallback if status column behaves differently","    $sql = \"SELECT id, material_code, name, category_id, subcategory_id FROM items ORDER BY name ASC LIMIT 5000\";","    return $pdo->query($sql)->fetchAll(PDO::FETCH_ASSOC);","  }","}","","/** Load categories/subcategories if tables exist; otherwise derive labels from items */","function try_load_simple(PDO $pdo, string $table, array $cols = ['id','name'], string $order='name ASC', int $limit=10000): array {","  $colList = implode(',', array_map(fn($c)=>\"`$c`\", $cols));","  try { return $pdo->query(\"SELECT $colList FROM `$table` ORDER BY $order LIMIT $limit\")->fetchAll(PDO::FETCH_ASSOC); }","  catch(Throwable $e){ return []; }","}","","$projects = load_projects($pdo);","$itemsRaw = load_items($pdo);           // [{id,material_code,name,category_id,subcategory_id},...]","","// Try common table names; otherwise we\u2019ll synthesize labels from IDs","$categoriesTbl = try_load_simple($pdo, 'categories', ['id','name']);","if (!$categoriesTbl) $categoriesTbl = try_load_simple($pdo, 'item_categories', ['id','name']);","$subcatsTbl     = try_load_simple($pdo, 'subcategories', ['id','name']);","if (!$subcatsTbl) $subcatsTbl     = try_load_simple($pdo, 'item_subcategories', ['id','name']);","","// Build id=>label maps (fallback = \"Category #ID\"/\"Subcategory #ID\")","$catMap = []; foreach ($categoriesTbl as $c) { $catMap[(int)$c['id']] = trim((string)$c['name']); }","$subMap = []; foreach ($subcatsTbl as $s)    { $subMap[(int)$s['id']] = trim((string)$s['name']); }","foreach ($itemsRaw as &$it) {","  $it['label'] = (trim((string)$it['material_code']) !== '' ? ($it['material_code'].' \u2014 ') : '') . ($it['name'] ?? '');","  $it['cat_label']  = $catMap[$it['category_id'] ?? 0]    ?? ('Category #'.(int)($it['category_id'] ?? 0));","  $it['sub_label']  = $subMap[$it['subcategory_id'] ?? 0] ?? ('Subcategory #'.(int)($it['subcategory_id'] ?? 0));","}","unset($it);","","// Build distinct category/subcategory option lists from items (so filters never empty)","$catOptions = [];","$subOptions = [];","foreach ($itemsRaw as $it) {","  $cid = (int)($it['category_id'] ?? 0);","  $sid = (int)($it['subcategory_id'] ?? 0);","  if ($cid) $catOptions[$cid] = $it['cat_label'];","  if ($sid) $subOptions[$sid] = $it['sub_label'];","}","// Sort nicely","asort($catOptions, SORT_NATURAL|SORT_FLAG_CASE);","asort($subOptions, SORT_NATURAL|SORT_FLAG_CASE);","","// UOMs","try { $uomRows = $pdo->query(\"SELECT id, COALESCE(code, name) AS label FROM uom ORDER BY id LIMIT 200\")->fetchAll(PDO::FETCH_ASSOC); }","catch(Throwable $e){ $uomRows = $pdo->query(\"SELECT id, name AS label FROM uom ORDER BY id LIMIT 200\")->fetchAll(PDO::FETCH_ASSOC); }","","/* ----------------- Render ----------------- */","$page_title = \"New Material Requisition\";","require_once __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container py-3\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h1 class=\"h4 mb-0\"><?= htmlspecialchars($page_title) ?></h1>","    <a href=\"requisitions_list.php\" class=\"btn btn-outline-secondary btn-sm\">Back to list</a>","  </div>","","  <div class=\"card mb-3\">","    <div class=\"card-body py-2\">","      <div class=\"row g-2 align-items-end\">","        <div class=\"col-md-4\">","          <label class=\"form-label mb-1\">Category filter</label>","          <select id=\"filter_category\" class=\"form-select form-select-sm\">","            <option value=\"\">All categories</option>","            <?php foreach ($catOptions as $cid=>$cname): ?>","              <option value=\"<?= (int)$cid ?>\"><?= htmlspecialchars($cname) ?></option>","            <?php endforeach; ?>","          </select>","        </div>","        <div class=\"col-md-4\">","          <label class=\"form-label mb-1\">Subcategory filter</label>","          <select id=\"filter_subcategory\" class=\"form-select form-select-sm\">","            <option value=\"\">All subcategories</option>","            <?php foreach ($subOptions as $sid=>$sname): ?>","              <option value=\"<?= (int)$sid ?>\"><?= htmlspecialchars($sname) ?></option>","            <?php endforeach; ?>","          </select>","          <div class=\"form-text\">Picking a subcategory shrinks item lists.</div>","        </div>","        <div class=\"col-md-4\">","          <label class=\"form-label mb-1\">Type to filter items</label>","          <input type=\"text\" id=\"filter_text\" class=\"form-control form-control-sm\" placeholder=\"Search code or name\u2026\">","        </div>","      </div>","    </div>","  </div>","","  <form id=\"reqForm\" class=\"card card-body\">","    <div class=\"row g-3\">","      <div class=\"col-md-4\">","        <label class=\"form-label\">Project</label>","        <select id=\"project_id\" class=\"form-select form-select-sm\">","          <option value=\"\">\u2014 Not linked \u2014</option>","          <?php foreach ($projects as $p): ?>","            <option value=\"<?= (int)$p['id'] ?>\"><?= htmlspecialchars($p['_label']) ?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"col-md-4\">","        <label class=\"form-label\">Requested By</label>","        <div class=\"input-group input-group-sm\">","          <select id=\"requested_by_type\" class=\"form-select form-select-sm\" style=\"max-width:140px\">","            <option value=\"staff\">Staff</option>","            <option value=\"contractor\">Contractor</option>","          </select>","          <input type=\"number\" id=\"requested_by_id\" class=\"form-control form-control-sm\" placeholder=\"ID\">","        </div>","        <div class=\"form-text\">Use the ID of staff/contractor.</div>","      </div>","      <div class=\"col-md-4\">","        <label class=\"form-label\">Remarks</label>","        <input type=\"text\" id=\"remarks\" class=\"form-control form-control-sm\" maxlength=\"200\">","      </div>","    </div>","","    <hr>","","    <div class=\"d-flex justify-content-between align-items-center mb-2\">","      <h6 class=\"mb-0\">Items</h6>","      <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" id=\"addRow\"><i class=\"bi bi-plus-lg\"></i> Add row</button>","    </div>","","    <div class=\"table-responsive\">","      <table class=\"table table-sm align-middle\" id=\"itemsTable\">","        <thead class=\"table-light\">","          <tr>","            <th style=\"width:40%\">Item</th>","            <th style=\"width:15%\">UOM</th>","            <th style=\"width:15%\" class=\"text-end\">Qty</th>","            <th>Remarks</th>","            <th style=\"width:40px\"></th>","          </tr>","        </thead>","        <tbody></tbody>","      </table>","    </div>","","    <div class=\"text-end\">","      <button type=\"button\" id=\"saveBtn\" class=\"btn btn-primary btn-sm\">Save Requisition</button>","    </div>","  </form>","</div>","","<script>","// ===== data from PHP =====","const ALL_ITEMS = <?= json_encode($itemsRaw, JSON_UNESCAPED_UNICODE|JSON_UNESCAPED_SLASHES) ?>;","const UOMS      = <?= json_encode($uomRows,  JSON_UNESCAPED_UNICODE|JSON_UNESCAPED_SLASHES) ?>;","","// ---- filter widgets ----","const $cat = document.getElementById('filter_category');","const $sub = document.getElementById('filter_subcategory');","const $txt = document.getElementById('filter_text');","","// ---- tiny debug outlet (inserts if needed) ----","function ensureDebugBox() {","  let box = document.getElementById('reqDebug');","  if (!box) {","    const wrap = document.querySelector('.container');","    box = document.createElement('div');","    box.id = 'reqDebug';","    box.className = 'alert alert-warning d-none mt-2';","    wrap.insertBefore(box, wrap.firstChild.nextSibling);","  }","  return box;","}","function showDebug(msg) {","  const box = ensureDebugBox();","  box.textContent = msg;","  box.classList.remove('d-none');","}","","// ---- filtering helpers ----","function filterItems() {","  const cid = parseInt($cat?.value || '0', 10) || null;","  const sid = parseInt($sub?.value || '0', 10) || null;","  const t = ($txt?.value || '').toLowerCase().trim();","","  return ALL_ITEMS.filter(it => {","    if (cid && parseInt(it.category_id||0,10)!==cid) return false;","    if (sid && parseInt(it.subcategory_id||0,10)!==sid) return false;","    if (t) {","      const hay = ((it.material_code||'') + ' ' + (it.name||'')).toLowerCase();","      if (!hay.includes(t)) return false;","    }","    return true;","  });","}","function escapeHtml(s){return (s??'').replace(/[&<>\"']/g,m=>({ \"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",\"\\\"\":\"&quot;\",\"'\":\"&#039;\" }[m]));}","function buildItemOptions(items) {","  if (!items || items.length===0) return '<option value=\"\">\u2014 no matches \u2014</option>';","  return '<option value=\"\">\u2014 select \u2014</option>' + items.map(i=>{","    const label = (i.material_code?i.material_code+' \u2014 ':'') + (i.name||'');","    return `<option value=\"${i.id}\">${escapeHtml(label)}</option>`;","  }).join('');","}","function buildUomOptions() {","  if (!UOMS || UOMS.length===0) return '<option value=\"\">\u2014</option>';","  return '<option value=\"\">\u2014</option>' + UOMS.map(u=>`<option value=\"${u.id}\">${escapeHtml(u.label||'UOM')}</option>`).join('');","}","function rowTpl() {","  return `<tr>","    <td><select class=\"form-select form-select-sm item_id\">${buildItemOptions(filterItems())}</select></td>","    <td><select class=\"form-select form-select-sm uom_id\">${buildUomOptions()}</select></td>","    <td><input type=\"number\" step=\"0.001\" min=\"0\" class=\"form-control form-control-sm qty_requested text-end\" placeholder=\"0.000\"></td>","    <td><input type=\"text\" class=\"form-control form-control-sm line_remarks\" maxlength=\"150\"></td>","    <td><button type=\"button\" class=\"btn btn-sm btn-outline-danger delRow\">&times;</button></td>","  </tr>`;","}","function refreshAllItemSelects() {","  const filtered = filterItems();","  const optsHtml = buildItemOptions(filtered);","  document.querySelectorAll('#itemsTable select.item_id').forEach(sel=>{","    const prev = sel.value;","    sel.innerHTML = optsHtml;","    if (prev && [...sel.options].some(o=>o.value===prev)) sel.value = prev;","  });","}","","// ---- table actions ----","document.getElementById('addRow').addEventListener('click', ()=>{","  document.querySelector('#itemsTable tbody').insertAdjacentHTML('beforeend', rowTpl());","});","document.querySelector('#itemsTable tbody').addEventListener('click', e=>{","  if (e.target.classList.contains('delRow')) e.target.closest('tr').remove();","});","","// live filters","$cat?.addEventListener('change', refreshAllItemSelects);","$sub?.addEventListener('change', refreshAllItemSelects);","$txt?.addEventListener('input', refreshAllItemSelects);","","// initial row","document.getElementById('addRow').click();","","// ---- Save handler (robust) ----","document.getElementById('saveBtn').addEventListener('click', async ()=>{","  const btn = document.getElementById('saveBtn');","  btn.disabled = true; btn.textContent = 'Saving\u2026';","","  try {","    const project_id = parseInt(document.getElementById('project_id').value||'0',10) || null;","    const requested_by_type = document.getElementById('requested_by_type').value;","    const requested_by_id = parseInt(document.getElementById('requested_by_id').value||'0',10);","    const remarks = (document.getElementById('remarks').value||'').trim();","","    const lines = [];","    document.querySelectorAll('#itemsTable tbody tr').forEach(tr=>{","      const item_id = parseInt(tr.querySelector('.item_id').value||'0',10);","      const uom_id  = parseInt(tr.querySelector('.uom_id').value||'0',10);","      const qty     = parseFloat(tr.querySelector('.qty_requested').value||'0');","      const lrmk    = (tr.querySelector('.line_remarks').value||'').trim();","      if (item_id>0 && uom_id>0 && qty>0) lines.push({item_id, uom_id, qty_requested: qty, remarks: lrmk});","    });","","    if (requested_by_id<=0) { alert('Requested By ID required'); return; }","    if (lines.length===0)   { alert('Add at least one valid line'); return; }","","    // fire request","    const resp = await fetch('_ajax/req_create.php', {","      method:'POST',","      headers:{'Content-Type':'application/json'},","      body: JSON.stringify({project_id, requested_by_type, requested_by_id, remarks, items: lines})","    });","","    // If server returned non-200, show body","    if (!resp.ok) {","      const text = await resp.text();","      showDebug('Save failed (HTTP '+resp.status+'): ' + text.slice(0, 1000));","      alert('Save failed. See debug note at top.');","      return;","    }","","    // Try parse JSON; if it fails, show raw text","    let data;","    const raw = await resp.text();","    // try to recover if there is leading noise before JSON","    const firstBrace = raw.indexOf('{');","    const lastBrace  = raw.lastIndexOf('}');","    const maybeJson  = (firstBrace !== -1 && lastBrace !== -1 && lastBrace > firstBrace)","    ? raw.slice(firstBrace, lastBrace + 1)","    : raw;","    try {","    data = JSON.parse(maybeJson);","    } catch (e) {","    showDebug('Server did not return clean JSON. Raw response: ' + raw.slice(0, 1000));","    alert('Unexpected server response. See debug note at top.');","    return;","    }","","    if (data && data.ok) {","      window.location.href = 'requisitions_list.php';","    } else {","      showDebug('Save error from API: ' + (data?.error || 'Unknown'));","      alert('Save failed: ' + (data?.error || 'Unknown'));","    }","  } catch (err) {","    showDebug('JS error: ' + (err?.message || err));","    alert('A script error occurred. See debug note at top.');","  } finally {","    btn.disabled = false; btn.textContent = 'Save Requisition';","  }","});","</script>","","","<?php require_once __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/qc_hold_post.php": ["<?php","/**"," * QC Hold POST"," * - Creates qc_holds header+lines"," * - Creates a stock_transfers header (TRN) and posts OUT from from_bin -> IN to qc_bin (same warehouse)"," * - Mirrors to stock_ledger and updates valuation (IN at source WA)"," */","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/NumberingService.php';","require_once __DIR__ . '/../includes/StockMoveWriter.php';","require_once __DIR__ . '/../includes/ValuationService.php';","require_once __DIR__ . '/../includes/StockLedgerAdapter.php';","","header('Content-Type: application/json');","","try {","  require_permission('stores.qc.manage');","","  $raw = file_get_contents('php://input');","  $input = json_decode($raw, true);","  if (!$input) $input = $_POST;","  if (!empty($_POST)) csrf_require_token($_POST['csrf_token'] ?? '');","","  $pdo = db();","  $userId = (int)($_SESSION['user_id'] ?? 0);","  $now = date('Y-m-d H:i:s');","","  $warehouseId = (int)($input['warehouse_id'] ?? 0);","  $fromBinId   = isset($input['from_bin_id']) ? (int)$input['from_bin_id'] : null;","  $qcBinId     = isset($input['qc_bin_id']) ? (int)$input['qc_bin_id'] : null;","  $remarks     = trim($input['remarks'] ?? '');","","  // Collect lines from form arrays or JSON","  $lines = [];","  if (isset($input['lines']['item_id'])) {","      $cnt = count($input['lines']['item_id']);","      for($i=0;$i<$cnt;$i++){","          $lines[] = [","              'item_id'  => (int)$input['lines']['item_id'][$i],","              'uom_id'   => isset($input['lines']['uom_id'][$i]) ? (int)$input['lines']['uom_id'][$i] : null,","              'qty'      => (float)$input['lines']['qty'][$i],","              'batch_id' => isset($input['lines']['batch_id'][$i]) ? (int)$input['lines']['batch_id'][$i] : null,","              'remarks'  => trim($input['lines']['remarks'][$i] ?? '')","          ];","      }","  } else {","      $lines = $input['lines'] ?? [];","  }","","  if ($warehouseId<=0 || !$qcBinId) throw new RuntimeException('Warehouse and QC bin required');","  if (empty($lines)) throw new RuntimeException('At least one line is required');","","  $pdo->beginTransaction();","","  $qcNo = NumberingService::next($pdo, 'QCH');","","  // qc_holds header","  $pdo->prepare(\"INSERT INTO qc_holds (qc_no, warehouse_id, from_bin_id, qc_bin_id, remarks, status, created_by, created_at)","                 VALUES (:no,:w,:fb,:qb,:rm,'POSTED',:uid,NOW(6))\")","      ->execute([':no'=>$qcNo, ':w'=>$warehouseId, ':fb'=>$fromBinId, ':qb'=>$qcBinId, ':rm'=>$remarks, ':uid'=>$userId]);","  $qcId = (int)$pdo->lastInsertId();","","  $insLine = $pdo->prepare(\"INSERT INTO qc_hold_items (qc_id, line_no, item_id, uom_id, qty, from_bin_id, qc_bin_id, batch_id, remarks)","                            VALUES (:id,:ln,:i,:u,:q,:fb,:qb,:b,:r)\");","","  // Underlying stock_transfer document for TRN","  $pdo->prepare(\"INSERT INTO stock_transfers (trn_no, from_warehouse_id, to_warehouse_id, from_bin_id, to_bin_id, remarks, status, created_by, created_at)","                 VALUES (:no,:w,:w,:fb,:qb,:rm,'POSTED',:uid,NOW(6))\")","      ->execute([':no'=>$qcNo, ':w'=>$warehouseId, ':fb'=>$fromBinId, ':qb'=>$qcBinId, ':rm'=>$remarks, ':uid'=>$userId]);","  $trnId = (int)$pdo->lastInsertId();","","  $waQ = $pdo->prepare(\"SELECT avg_cost FROM stock_avg WHERE item_id=:i AND warehouse_id=:w\");","","  $lineNo=0;","  foreach ($lines as $ln) {","    $lineNo++;","    $itemId=(int)$ln['item_id']; $uomId=isset($ln['uom_id'])?(int)$ln['uom_id']:null; $qty=(float)$ln['qty'];","    $batchId=isset($ln['batch_id'])?(int)$ln['batch_id']:null; $r=trim($ln['remarks']??'');","    if ($itemId<=0 || $qty<=0) throw new RuntimeException(\"Invalid line #$lineNo\");","","    $insLine->execute([':id'=>$qcId, ':ln'=>$lineNo, ':i'=>$itemId, ':u'=>$uomId, ':q'=>$qty, ':fb'=>$fromBinId, ':qb'=>$qcBinId, ':b'=>$batchId, ':r'=>$r]);","","    $waQ->execute([':i'=>$itemId, ':w'=>$warehouseId]); $rate=(float)$waQ->fetchColumn(); if ($rate<0) $rate=0.0;","","    // OUT from free/bin to QC bin","    $outPayload=['txn_type'=>'TRN','txn_no'=>$qcNo,'txn_date'=>$now,'project_id'=>null,'item_id'=>$itemId,'uom_id'=>$uomId,","      'warehouse_id'=>$warehouseId,'bin_id'=>$fromBinId,'batch_id'=>$batchId,'qty'=>$qty,'unit_cost'=>$rate,","      'ref_entity'=>'stock_transfers','ref_id'=>$trnId,'created_by'=>$userId];","    StockMoveWriter::postOut($pdo,$outPayload);","    ValuationService::onIssue($pdo,$itemId,$warehouseId,$qty);","    StockLedgerAdapter::mirror($pdo,$outPayload);","","    // IN to QC bin","    $inPayload=['txn_type'=>'TRN','txn_no'=>$qcNo,'txn_date'=>$now,'project_id'=>null,'item_id'=>$itemId,'uom_id'=>$uomId,","      'warehouse_id'=>$warehouseId,'bin_id'=>$qcBinId,'batch_id'=>$batchId,'qty'=>$qty,'unit_cost'=>$rate,","      'ref_entity'=>'stock_transfers','ref_id'=>$trnId,'created_by'=>$userId];","    StockMoveWriter::postIn($pdo,$inPayload);","    ValuationService::onReceipt($pdo,$itemId,$warehouseId,$qty,$rate);","    StockLedgerAdapter::mirror($pdo,$inPayload);","  }","","  $pdo->commit();","  echo json_encode(['ok'=>true,'qc_id'=>$qcId,'qc_no'=>$qcNo]);","","} catch (Throwable $e) {","  if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();","  http_response_code(400);","  echo json_encode(['ok'=>false,'error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/purchase_advice_list.php": ["<?php","/** PATH: /public_html/stores/purchase_advice_list.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_permission('purchase.advice.view');","","$pdo = db();","","$status = $_GET['status'] ?? 'all';","$wh     = (int)($_GET['warehouse_id'] ?? 0);","$q      = trim((string)($_GET['q'] ?? ''));","$df     = trim((string)($_GET['date_from'] ?? ''));","$dt     = trim((string)($_GET['date_to'] ?? ''));","","$where=[]; $p=[];","if ($status !== 'all') { $where[] = \"pa.status = ?\"; $p[] = $status; }","if ($wh>0)            { $where[] = \"pa.warehouse_id = ?\"; $p[] = $wh; }","if ($q!=='')          { $where[] = \"(pa.advice_no LIKE ? OR pa.remarks LIKE ?)\"; $p[]=\"%$q%\"; $p[]=\"%$q%\"; }","if ($df!=='')         { $where[] = \"pa.advice_date >= ?\"; $p[]=$df; }","if ($dt!=='')         { $where[] = \"pa.advice_date <= ?\"; $p[]=$dt; }","$W = $where ? ('WHERE '.implode(' AND ',$where)) : '';","","$rows = $pdo->prepare(\"","  SELECT pa.*, w.code wh_code, w.name wh_name,","         (SELECT COUNT(*) FROM purchase_advice_items i WHERE i.advice_id=pa.id) AS line_count","  FROM purchase_advice pa","  JOIN warehouses w ON w.id = pa.warehouse_id","  $W","  ORDER BY pa.advice_date DESC, pa.id DESC","  LIMIT 500","\");","$rows->execute($p);","$list = $rows->fetchAll(PDO::FETCH_ASSOC);","","$whs = $pdo->query(\"SELECT id, code, name FROM warehouses WHERE active=1 ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","","$page_title = \"Purchase Advice\";","require_once __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container-fluid py-3\">","  <div class=\"d-flex justify-content-between align-items-center mb-2\">","    <h1 class=\"h4 mb-0\"><?= htmlspecialchars($page_title) ?></h1>","    <a href=\"minmax_report.php\" class=\"btn btn-sm btn-outline-primary\">Min/Max Report</a>","  </div>","","  <form class=\"row g-2 mb-3\">","    <div class=\"col-auto\">","      <select class=\"form-select form-select-sm\" name=\"status\">","        <?php foreach (['all'=>'All','draft'=>'Draft','approved'=>'Approved','cancelled'=>'Cancelled'] as $k=>$v): ?>","          <option value=\"<?= $k ?>\" <?= $k===$status?'selected':'' ?>><?= $v ?></option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-auto\">","      <select class=\"form-select form-select-sm\" name=\"warehouse_id\">","        <option value=\"0\">All Warehouses</option>","        <?php foreach ($whs as $x): ?>","          <option value=\"<?= (int)$x['id'] ?>\" <?= ((int)$x['id']===$wh)?'selected':'' ?>>","            <?= htmlspecialchars(($x['code']??'').' \u2014 '.$x['name']) ?>","          </option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-auto\">","      <input type=\"date\" class=\"form-control form-control-sm\" name=\"date_from\" value=\"<?= htmlspecialchars($df) ?>\">","    </div>","    <div class=\"col-auto\">","      <input type=\"date\" class=\"form-control form-control-sm\" name=\"date_to\" value=\"<?= htmlspecialchars($dt) ?>\">","    </div>","    <div class=\"col-auto\">","      <input class=\"form-control form-control-sm\" name=\"q\" placeholder=\"Search advice no / remark\" value=\"<?= htmlspecialchars($q) ?>\">","    </div>","    <div class=\"col-auto\">","      <button class=\"btn btn-sm btn-secondary\">Filter</button>","      <a class=\"btn btn-sm btn-outline-primary\" href=\"?\">Reset</a>","    </div>","  </form>","","  <div class=\"table-responsive\">","    <table class=\"table table-sm align-middle\">","      <thead class=\"table-light\">","        <tr>","          <th>Advice No</th>","          <th>Date</th>","          <th>Warehouse</th>","          <th class=\"text-end\">Lines</th>","          <th>Status</th>","          <th>Remarks</th>","          <th style=\"width:120px\"></th>","        </tr>","      </thead>","      <tbody>","        <?php if (!$list): ?>","          <tr><td colspan=\"7\" class=\"text-center text-muted py-4\">No purchase advice found.</td></tr>","        <?php else: foreach ($list as $r): ?>","          <tr>","            <td class=\"fw-semibold\"><a href=\"purchase_advice_view.php?id=<?= (int)$r['id'] ?>\"><?= htmlspecialchars($r['advice_no']) ?></a></td>","            <td><?= htmlspecialchars($r['advice_date']) ?></td>","            <td><span class=\"badge bg-info-subtle text-info border\"><?= htmlspecialchars($r['wh_code']) ?></span> <?= htmlspecialchars($r['wh_name']) ?></td>","            <td class=\"text-end\"><?= (int)$r['line_count'] ?></td>","            <td>","              <?php","                $cls = ['draft'=>'secondary','approved'=>'success','cancelled'=>'danger'][$r['status']] ?? 'secondary';","              ?>","              <span class=\"badge bg-<?= $cls ?>-subtle text-<?= $cls ?> border\"><?= htmlspecialchars($r['status']) ?></span>","            </td>","            <td><?= htmlspecialchars((string)$r['remarks']) ?></td>","            <td><a class=\"btn btn-sm btn-outline-primary\" href=\"purchase_advice_view.php?id=<?= (int)$r['id'] ?>\">Open</a></td>","          </tr>","        <?php endforeach; endif; ?>","      </tbody>","    </table>","  </div>","</div>","<?php require_once __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/issues_list.php": ["<?php","/** PATH: /public_html/stores/issues_list.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_permission('stores.issue.view');","","$pdo = db();","$q = trim($_GET['q'] ?? '');","$where=[]; $p=[];","if ($q!==''){ $where[]=\"(mi.issue_no LIKE ? OR pr.name LIKE ?)\"; $p[]=\"%$q%\"; $p[]=\"%$q%\"; }","$w = $where ? 'WHERE '.implode(' AND ',$where) : '';","$sql = \"SELECT mi.*, pr.code AS project_code, pr.name AS project_name, w.code AS wh_code","        FROM material_issues mi","        LEFT JOIN projects pr ON pr.id = mi.project_id","        LEFT JOIN warehouses w ON w.id = mi.issued_from_warehouse_id","        $w","        ORDER BY mi.id DESC LIMIT 200\";","$st = $pdo->prepare($sql); $st->execute($p); $rows=$st->fetchAll(PDO::FETCH_ASSOC);","","$page_title=\"Material Issues\";","require_once __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container-fluid py-3\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h1 class=\"h4 mb-0\"><?= htmlspecialchars($page_title) ?></h1>","    <a class=\"btn btn-outline-secondary btn-sm\" href=\"requisitions_list.php\">Requisitions</a>","  </div>","","  <form class=\"row g-2 mb-3\">","    <div class=\"col-auto\">","      <input type=\"text\" name=\"q\" class=\"form-control form-control-sm\" placeholder=\"Search issue no / project\" value=\"<?= htmlspecialchars($q) ?>\">","    </div>","    <div class=\"col-auto\"><button class=\"btn btn-sm btn-secondary\">Filter</button></div>","  </form>","","  <div class=\"table-responsive\">","    <table class=\"table table-sm align-middle\">","      <thead class=\"table-light\">","        <tr>","          <th>Issue No</th>","          <th>Date</th>","          <th>Warehouse</th>","          <th>Project</th>","          <th>Status</th>","          <th class=\"text-end\">View</th>","        </tr>","      </thead>","      <tbody>","        <?php if (!$rows): ?>","          <tr><td colspan=\"6\" class=\"text-center text-muted py-4\">No issues found.</td></tr>","        <?php else: foreach ($rows as $r): ?>","          <tr>","            <td class=\"fw-semibold\"><?= htmlspecialchars($r['issue_no']) ?></td>","            <td><?= htmlspecialchars($r['issue_date']) ?></td>","            <td><span class=\"badge bg-info-subtle text-info border\"><?= htmlspecialchars($r['wh_code']??'') ?></span></td>","            <td><?php if ($r['project_id']): ?><span class=\"badge bg-info-subtle text-info border\"><?= htmlspecialchars($r['project_code']??'') ?></span> <?= htmlspecialchars($r['project_name']??'') ?><?php else: ?>\u2014<?php endif; ?></td>","            <td><span class=\"badge <?= $r['status']==='issued'?'bg-success':'bg-secondary' ?>\"><?= strtoupper($r['status']) ?></span></td>","            <td class=\"text-end\"><a class=\"btn btn-sm btn-outline-primary\" href=\"issue_view.php?id=<?= (int)$r['id'] ?>\">Open</a></td>","          </tr>","        <?php endforeach; endif; ?>","      </tbody>","    </table>","  </div>","</div>","<?php require_once __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/settlements.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_login(); require_permission('stores.settlement.view');","$pdo = db();","$st  = $pdo->query(\"SELECT sh.*, c.name AS customer_name FROM settlement_headers sh LEFT JOIN customers c ON c.id = sh.customer_id ORDER BY sh.id DESC LIMIT 200\");","$rows= $st->fetchAll(PDO::FETCH_ASSOC);","?><!doctype html><html><head><meta charset=\"utf-8\"/><title>Settlements</title>","<style>table{border-collapse:collapse;width:100%}td,th{border:1px solid #ccc;padding:6px}</style></head><body>","<h2>Material Settlements (Party \u2192 Company)</h2>","<table><thead><tr><th>ID</th><th>Customer</th><th>Mode</th><th>Kind</th><th>Bucket</th><th>Status</th><th>Qty</th><th>Amount</th><th>Created</th></tr></thead><tbody>","<?php foreach($rows as $r): ?><tr>","<td><?= (int)$r['id'] ?></td>","<td><?= htmlspecialchars($r['customer_name'] ?? ('ID '.$r['customer_id'])) ?></td>","<td><?= htmlspecialchars($r['mode']) ?></td>","<td><?= htmlspecialchars($r['kind']) ?></td>","<td><?= htmlspecialchars($r['bucket']) ?></td>","<td><?= htmlspecialchars($r['status']) ?></td>","<td style=\"text-align:right\"><?= number_format((float)$r['total_qty_base'],3) ?></td>","<td style=\"text-align:right\"><?= number_format((float)$r['total_amount'],2) ?></td>","<td><?= htmlspecialchars($r['created_at']) ?></td>","</tr><?php endforeach; ?></tbody></table>","</body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/gatepass_return_form.php": ["<?php","/** PATH: /public_html/stores/gatepass_return_form.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_permission('stores.gatepass.manage');","","$pdo = db();","$gp_id = (int)($_GET['gp_id'] ?? 0);","$whs = $pdo->query(\"SELECT id, code, name FROM warehouses WHERE active=1 ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","","$st = $pdo->prepare(\"","  SELECT gp.*, w.code src_code, w.name src_name","  FROM gatepasses gp","  JOIN warehouses w ON w.id = gp.source_warehouse_id","  WHERE gp.id=?\");","$st->execute([$gp_id]);","$gp = $st->fetch(PDO::FETCH_ASSOC);","","$lines = [];","if ($gp) {","  $st2 = $pdo->prepare(\"","    SELECT gi.*, it.material_code, it.name item_name, u.code uom_code, u.name uom_name","    FROM gatepass_items gi","    JOIN items it ON it.id=gi.item_id","    LEFT JOIN uom u ON u.id=gi.uom_id","    WHERE gi.gp_id=?","    ORDER BY it.name\");","  $st2->execute([$gp_id]);","  $lines = $st2->fetchAll(PDO::FETCH_ASSOC);","}","","$page_title = \"Gate Pass Return\";","require_once __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container py-3\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h1 class=\"h5 mb-0\"><?= htmlspecialchars($page_title) ?></h1>","    <a href=\"gatepass_list.php?pending=1\" class=\"btn btn-sm btn-outline-secondary\">Back</a>","  </div>","","  <?php if (!$gp): ?>","    <div class=\"alert alert-warning\">Gate pass not found.</div>","  <?php else: ?>","    <div class=\"alert alert-info small\">","      GP: <strong><?= htmlspecialchars($gp['gp_no']) ?></strong>","      &middot; Date: <?= htmlspecialchars($gp['gp_date']) ?>","      &middot; From: <span class=\"badge bg-secondary-subtle text-secondary border\"><?= htmlspecialchars($gp['src_code']) ?></span> <?= htmlspecialchars($gp['src_name']) ?>","    </div>","","    <div class=\"row g-2 mb-3\">","      <div class=\"col-md-6\">","        <label class=\"form-label\">Return to Warehouse</label>","        <select id=\"ret_wh\" class=\"form-select form-select-sm\">","          <?php foreach ($whs as $w): ?>","            <option value=\"<?= (int)$w['id'] ?>\" <?= ((int)$w['id'] === (int)$gp['source_warehouse_id'])?'selected':'' ?>>","              <?= htmlspecialchars($w['code'].' \u2014 '.$w['name']) ?>","            </option>","          <?php endforeach; ?>","        </select>","      </div>","    </div>","","    <div class=\"table-responsive\">","      <table class=\"table table-sm align-middle\">","        <thead class=\"table-light\">","          <tr>","            <th>Item</th>","            <th class=\"text-center\">UOM</th>","            <th class=\"text-end\">Sent</th>","            <th class=\"text-end\">Returned</th>","            <th style=\"width:140px\" class=\"text-end\">Return Now</th>","          </tr>","        </thead>","        <tbody id=\"tb\">","          <?php foreach ($lines as $ln):","            $sent = (float)$ln['qty']; $ret = (float)$ln['qty_returned']; $bal = max($sent - $ret, 0); ?>","            <tr data-ln='<?= json_encode(['id'=>$ln['id'],'item_id'=>$ln['item_id'],'uom_id'=>$ln['uom_id'],'bal'=>$bal], JSON_HEX_APOS|JSON_HEX_AMP|JSON_HEX_TAG) ?>'>","              <td><?= htmlspecialchars(($ln['material_code']?($ln['material_code'].' \u2014 '):'').$ln['item_name']) ?></td>","              <td class=\"text-center\"><?= htmlspecialchars($ln['uom_code'] ?? $ln['uom_name'] ?? '') ?></td>","              <td class=\"text-end\"><?= number_format($sent,3) ?></td>","              <td class=\"text-end\"><?= number_format($ret,3) ?></td>","              <td><input type=\"number\" min=\"0\" max=\"<?= number_format($bal,3,'.','') ?>\" step=\"0.001\" class=\"form-control form-control-sm retQty text-end\" value=\"<?= number_format($bal,3,'.','') ?>\"></td>","            </tr>","          <?php endforeach; ?>","        </tbody>","      </table>","    </div>","","    <div class=\"text-end\">","      <button id=\"postBtn\" class=\"btn btn-primary btn-sm\">Post Return</button>","    </div>","  <?php endif; ?>","</div>","","<?php if ($gp): ?>","<script>","document.getElementById('postBtn').addEventListener('click', async ()=>{","  const btn = document.getElementById('postBtn'); btn.disabled=true; btn.textContent='Posting\u2026';","  try {","    const ret_wh = parseInt(document.getElementById('ret_wh').value||'0',10);","    const lines = [];","    document.querySelectorAll('#tb tr').forEach(tr=>{","      const meta = JSON.parse(tr.getAttribute('data-ln'));","      const qty = parseFloat(tr.querySelector('.retQty').value || '0');","      if (qty>0) lines.push({gp_item_id: meta.id, item_id: meta.item_id, uom_id: meta.uom_id, qty});","    });","    if (!ret_wh) { alert('Select return warehouse'); return; }","    if (lines.length===0) { alert('Enter at least one return qty'); return; }","","    const r = await fetch('_ajax/gp_return_post.php', {","      method:'POST', headers:{'Content-Type':'application/json'},","      body: JSON.stringify({gp_id: <?= (int)$gp_id ?>, warehouse_id: ret_wh, lines})","    });","    const raw = await r.text(); const s=raw.indexOf('{'), e=raw.lastIndexOf('}');","    const json = (s!=-1&&e!=-1&&e>s)?raw.slice(s,e+1):raw; const data = JSON.parse(json);","    if (data.ok) { alert('Return posted: '+data.gpr_no); location.href='gatepass_list.php?pending=1'; }","    else { alert('Return failed: '+(data.error||'Unknown')); }","  } finally { btn.disabled=false; btn.textContent='Post Return'; }","});","</script>","<?php endif; ?>","","<?php require_once __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/grn_form.php": ["<?php","/** PATH: /public_html/stores/grn_form.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_permission('stores.grn.manage');","","$pdo = db();","","// suppliers (adjust table/cols if yours differ)","try { $sup = $pdo->query(\"SELECT id, name FROM suppliers WHERE 1 ORDER BY name LIMIT 500\")->fetchAll(PDO::FETCH_ASSOC); }","catch(Throwable $e){ $sup = []; }","// warehouses","$wh = $pdo->query(\"SELECT id, code, name FROM warehouses WHERE active=1 ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","// items (active only to keep short)","try { $items = $pdo->query(\"SELECT id, material_code, name FROM items WHERE status='active' ORDER BY name LIMIT 5000\")->fetchAll(PDO::FETCH_ASSOC); }","catch(Throwable $e){ $items = $pdo->query(\"SELECT id, material_code, name FROM items ORDER BY name LIMIT 5000\")->fetchAll(PDO::FETCH_ASSOC); }","// uom","try { $uom = $pdo->query(\"SELECT id, COALESCE(code,name) label FROM uom ORDER BY id\")->fetchAll(PDO::FETCH_ASSOC); }","catch(Throwable $e){ $uom = []; }","","$page_title = \"New GRN\";","require_once __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container py-3\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h1 class=\"h4 mb-0\"><?= htmlspecialchars($page_title) ?></h1>","    <a href=\"requisitions_list.php\" class=\"btn btn-outline-secondary btn-sm\">Back</a>","  </div>","","  <form id=\"grnForm\" class=\"card card-body\">","    <div class=\"row g-3\">","      <div class=\"col-md-4\">","        <label class=\"form-label\">Supplier</label>","        <select id=\"supplier_id\" class=\"form-select form-select-sm\">","          <option value=\"\">\u2014 select \u2014</option>","          <?php foreach ($sup as $s): ?>","            <option value=\"<?= (int)$s['id'] ?>\"><?= htmlspecialchars($s['name']) ?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"col-md-4\">","        <label class=\"form-label\">Warehouse</label>","        <select id=\"warehouse_id\" class=\"form-select form-select-sm\">","          <?php foreach ($wh as $w): ?>","            <option value=\"<?= (int)$w['id'] ?>\"><?= htmlspecialchars($w['code'].' \u2014 '.$w['name']) ?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"col-md-4\">","        <label class=\"form-label\">Challan / Ref</label>","        <input type=\"text\" id=\"challan_no\" class=\"form-control form-control-sm\" maxlength=\"80\" placeholder=\"supplier ref\">","      </div>","    </div>","","    <hr>","","    <div class=\"d-flex justify-content-between align-items-center mb-2\">","      <h6 class=\"mb-0\">Items</h6>","      <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" id=\"addRow\"><i class=\"bi bi-plus-lg\"></i> Add row</button>","    </div>","","    <div class=\"table-responsive\">","      <table class=\"table table-sm align-middle\" id=\"itemsTable\">","        <thead class=\"table-light\">","          <tr>","            <th style=\"width:35%\">Item</th>","            <th style=\"width:10%\">UOM</th>","            <th style=\"width:13%\" class=\"text-end\">Qty Recv</th>","            <th style=\"width:13%\" class=\"text-end\">Qty Accept</th>","            <th style=\"width:14%\" class=\"text-end\">Unit Price</th>","            <th>Remarks</th>","            <th style=\"width:40px\"></th>","          </tr>","        </thead>","        <tbody></tbody>","      </table>","    </div>","","    <div class=\"text-end\">","      <button type=\"button\" id=\"postBtn\" class=\"btn btn-primary btn-sm\">Post GRN</button>","    </div>","  ","<!-- Insert in GRN form header: Owner selector -->","<div class=\"row g-2\">","  <div class=\"col-md-3\">","    <label class=\"form-label\">Owner</label>","    <select name=\"owner_mode\" id=\"owner_mode\" class=\"form-select\">","      <option value=\"company\" selected>Our Material</option>","      <option value=\"customer\">Customer / Party Material</option>","      <option value=\"vendor_foc\">Vendor FOC</option>","    </select>","  </div>","  <div class=\"col-md-4 owner-customer d-none\">","    <label class=\"form-label\">Customer</label>","    <select name=\"customer_id\" id=\"customer_id\" class=\"form-select\"><!-- populate with customers --></select>","  </div>","  <div class=\"col-md-3 owner-foc d-none\">","    <label class=\"form-label\">FOC Policy</label>","    <select name=\"foc_policy\" id=\"foc_policy\" class=\"form-select\">","      <option value=\"zero\" selected>Zero Cost</option>","      <option value=\"fair_value\">Fair Value (Other Income)</option>","      <option value=\"standard\">Standard Cost</option>","    </select>","  </div>","</div>","<script>","document.getElementById('owner_mode').addEventListener('change', function(){","  const mode = this.value;","  document.querySelector('.owner-customer').classList.toggle('d-none', mode!=='customer');","  document.querySelector('.owner-foc').classList.toggle('d-none', mode!=='vendor_foc');","});","</script>","  </form>","</div>","","<script>","const ITEMS = <?= json_encode($items) ?>;","const UOM   = <?= json_encode($uom) ?>;","","function itemOpts(){ return '<option value=\"\">\u2014 select \u2014</option>' + ITEMS.map(i=>{","  const lbl = (i.material_code?i.material_code+' \u2014 ':'')+(i.name||'');","  return `<option value=\"${i.id}\">${escapeHtml(lbl)}</option>`;","}).join(''); }","function uomOpts(){ return '<option value=\"\">\u2014</option>' + UOM.map(u=>`<option value=\"${u.id}\">${escapeHtml(u.label||'UOM')}</option>`).join(''); }","function escapeHtml(s){return (s??'').replace(/[&<>\"']/g,m=>({ \"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",\"\\\"\":\"&quot;\",\"'\":\"&#039;\" }[m]));}","function rowTpl(){","  return `<tr>","    <td><select class=\"form-select form-select-sm item_id\">${itemOpts()}</select></td>","    <td><select class=\"form-select form-select-sm uom_id\">${uomOpts()}</select></td>","    <td><input class=\"form-control form-control-sm qty_recv text-end\" type=\"number\" step=\"0.001\" min=\"0\"></td>","    <td><input class=\"form-control form-control-sm qty_acc  text-end\" type=\"number\" step=\"0.001\" min=\"0\"></td>","    <td><input class=\"form-control form-control-sm unit_price text-end\" type=\"number\" step=\"0.0001\" min=\"0\"></td>","    <td><input class=\"form-control form-control-sm line_remarks\" type=\"text\" maxlength=\"150\"></td>","    <td><button type=\"button\" class=\"btn btn-sm btn-outline-danger delRow\">&times;</button></td>","  </tr>`;","}","document.getElementById('addRow').addEventListener('click', ()=>{ document.querySelector('#itemsTable tbody').insertAdjacentHTML('beforeend', rowTpl()); });","document.querySelector('#itemsTable tbody').addEventListener('click', e=>{ if(e.target.classList.contains('delRow')) e.target.closest('tr').remove(); });","document.getElementById('addRow').click();","","document.getElementById('postBtn').addEventListener('click', async ()=>{","  const btn = document.getElementById('postBtn'); btn.disabled=true; btn.textContent='Posting\u2026';","  try{","    const supplier_id = parseInt(document.getElementById('supplier_id').value||'0',10);","    const warehouse_id= parseInt(document.getElementById('warehouse_id').value||'0',10);","    const challan_no  = (document.getElementById('challan_no').value||'').trim();","","    const lines=[];","    document.querySelectorAll('#itemsTable tbody tr').forEach(tr=>{","      const item_id = parseInt(tr.querySelector('.item_id').value||'0',10);","      const uom_id  = parseInt(tr.querySelector('.uom_id').value||'0',10);","      const qty_r   = parseFloat(tr.querySelector('.qty_recv').value||'0');","      const qty_a   = parseFloat(tr.querySelector('.qty_acc').value||'0');","      const price   = parseFloat(tr.querySelector('.unit_price').value||'0');","      const rm      = (tr.querySelector('.line_remarks').value||'').trim();","      if (item_id>0 && uom_id>0 && qty_a>0) {","        lines.push({item_id,uom_id,qty_received:qty_r,qty_accepted:qty_a,unit_price:price,remarks:rm});","      }","    });","","    if(!supplier_id){ alert('Select supplier'); return; }","    if(!warehouse_id){ alert('Select warehouse'); return; }","    if(lines.length===0){ alert('Add at least one accepted line'); return; }","","    const r = await fetch('_ajax/grn_post.php', {","      method:'POST', headers:{'Content-Type':'application/json'},","      body: JSON.stringify({supplier_id, warehouse_id, challan_no, items: lines})","    });","    const raw = await r.text();","    const s = raw.indexOf('{'); const e = raw.lastIndexOf('}');","    const json = (s!==-1 && e!==-1) ? raw.slice(s,e+1) : raw;","    let data; try{ data = JSON.parse(json);}catch(_){ alert('Server error: '+raw.slice(0,400)); return; }","","    if(data.ok){ alert('GRN posted: '+data.grn_no); location.href='requisitions_list.php'; }","    else { alert('Post failed: '+(data.error||'Unknown')); }","  }finally{ btn.disabled=false; btn.textContent='Post GRN'; }","});","</script>","<?php require_once __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/issue_owner_helper.php": ["","<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","require_login(); require_permission('stores.issue.view');","$pdo=db();","$owner = $_GET['owner'] ?? 'company'; // 'company' or 'client'","$client_id = isset($_GET['client_id']) ? intval($_GET['client_id']) : null;","$q = \"SELECT id AS lot_id, item_id, plate_no, heat_no, owner, status, received_at FROM stock_lots WHERE owner=?\";","$p = [$owner];","if($owner==='client' && $client_id){ $q .= \" AND client_id=?\"; $p[]=$client_id; } // column optional; ignored if not present","$q .= \" ORDER BY received_at DESC LIMIT 500\";","$st=$pdo->prepare($q); $st->execute($p); $rows=$st->fetchAll(PDO::FETCH_ASSOC);","?><!doctype html><html><head><meta charset=\"utf-8\"><title>Owner-Aware Issue Helper</title>","<style>body{font-family:system-ui,Segoe UI,Roboto,Arial,sans-serif;margin:20px}table{border-collapse:collapse;width:100%}th,td{border:1px solid #e5e7eb;padding:6px}input[type=checkbox]{transform:scale(1.2)}</style></head><body>","<h1>Owner-Aware Issue Helper</h1>","<form id=\"f\">","<label>Owner","  <select name=\"owner\"><option value=\"company\" <?= $owner==='company'?'selected':'' ?>>Company</option><option value=\"client\" <?= $owner==='client'?'selected':'' ?>>Client</option></select>","</label>","<label>Client ID (opt) <input name=\"client_id\" value=\"<?= htmlspecialchars((string)($client_id??'')) ?>\"></label>","<button>Load</button>","</form>","<form id=\"pick\">","<table><thead><tr><th></th><th>Lot</th><th>Item</th><th>Heat</th><th>Plate</th><th>Owner</th><th>Status</th><th>Received</th></tr></thead><tbody>","<?php foreach($rows as $r): ?>","<tr>","  <td><input type=\"checkbox\" name=\"sel\" value=\"<?= $r['lot_id'] ?>\"></td>","  <td><?= $r['lot_id'] ?></td><td><?= $r['item_id'] ?></td><td><?= htmlspecialchars((string)$r['heat_no']) ?></td><td><?= htmlspecialchars((string)$r['plate_no']) ?></td><td><?= htmlspecialchars((string)$r['owner']) ?></td><td><?= htmlspecialchars((string)$r['status']) ?></td><td><?= htmlspecialchars((string)$r['received_at']) ?></td>","</tr>","<?php endforeach; ?>","</tbody></table>","<label>Job/WO ID <input id=\"job\"></label>","<label>Qty (JSON per lot) <input id=\"qty\" placeholder='{\"123\": 2.5, \"124\": 1.0}'></label>","<button id=\"export\">Export JSON</button>","</form>","<pre id=\"out\"></pre>","<script>","document.getElementById('f').onsubmit=(e)=>{e.preventDefault(); const fd=new FormData(e.target); const qs=new URLSearchParams(fd).toString(); location.href='?'+qs;};","document.getElementById('export').onclick=(e)=>{","  e.preventDefault();","  const sels=[...document.querySelectorAll('input[name=sel]:checked')].map(i=>i.value);","  const qtyRaw=document.getElementById('qty').value||'{}'; let qty={}; try{ qty=JSON.parse(qtyRaw);}catch(_){ alert('Qty JSON invalid'); return; }","  const job=document.getElementById('job').value||null;","  const payload={ job_id: job?parseInt(job):null, picks: sels.map(lot=>({ lot_id: parseInt(lot), qty: qty[lot]||null })) };","  document.getElementById('out').textContent=JSON.stringify(payload,null,2);","};","</script>","</body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/grn_post.php": ["<?php","declare(strict_types=1);","/**"," * stores/_ajax/grn_post.php"," *"," * Unified GRN post with Ownership + Measurement + Lots + GL outbox."," * Phases covered: 1, 1.5, 2."," *"," * INPUT (JSON):"," * {"," *   \"grn\": {"," *     \"warehouse_id\": 1,"," *     \"owner_mode\": \"company\" | \"customer\" | \"vendor_foc\","," *     \"customer_id\": 123,                 // when owner_mode=customer"," *     \"foc_policy\": \"zero|fair_value|standard\", // when owner_mode=vendor_foc"," *     \"fair_value_rate\": 45.0,            // optional, FOC=fair_value"," *     \"idempotency_key\": \"string\"         // recommended"," *   },"," *   \"lines\": ["," *     {"," *       \"item_id\": 1001,"," *       \"po_id\": 5001,                    // optional but helpful"," *       \"po_line_id\": 7001,               // optional"," *       \"category\": \"plate|ismb|pipe|welding_rod\","," *       \"price_basis\": \"per_kg|per_no|per_m\","," *       \"unit_price\": 58.75,"," *       \"L_mm\": 3000, \"W_mm\": 1500, \"Thk_mm\": 12, \"pcs\": 2,"," *       \"length_mm\": null, \"wt_per_m\": null,"," *       \"boxes\": null, \"kg_per_box\": null,"," *       \"heat_no\": \"H123\", \"plate_no\": \"PLT-01\""," *     },"," *     ..."," *   ]"," * }"," *"," * OUTPUT (JSON):"," * { ok: true, data: { grn_id, totals: {...}, lines: [{item_id, lot_id, piece_ids, acct_qty, acct_rate, gl_amount}] } }"," */","","header('Content-Type: application/json');","","try {","  // --- includes / bootstrap","  require_once dirname(__DIR__,2) . '/includes/auth.php';","  require_once dirname(__DIR__,2) . '/includes/db.php';","  require_once dirname(__DIR__,2) . '/includes/rbac.php';","","  // Coupler bits we added earlier","  require_once dirname(__DIR__,2) . '/includes/coupler/Expression.php';","  require_once dirname(__DIR__,2) . '/includes/coupler/RuleRepo.php';","  require_once dirname(__DIR__,2) . '/includes/coupler/MeasurementEngine.php';","  require_once dirname(__DIR__,2) . '/includes/coupler/CouplerGL.php';","  require_once dirname(__DIR__,2) . '/includes/coupler/Ownership.php';","  require_once dirname(__DIR__,2) . '/includes/coupler/LotService.php';","","  require_login();","  require_permission('stores.grn.post');","","  $pdo = db();","  $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);","","  // --- read input (JSON or form fallback)","  $raw = file_get_contents('php://input');","  $payload = json_decode($raw, true);","  if (!is_array($payload)) {","    // fallback for form-encoded posts (adapt if your UI sends differently)","    $payload = [","      'grn' => $_POST,","      'lines' => isset($_POST['lines']) && is_string($_POST['lines']) ? json_decode($_POST['lines'], true) : []","    ];","  }","","  $grn = $payload['grn'] ?? [];","  $lines = $payload['lines'] ?? [];","  if (!$lines || !is_array($lines)) {","    throw new RuntimeException(\"No GRN lines provided.\");","  }","  $warehouseId = (int)($grn['warehouse_id'] ?? 0);","  if ($warehouseId <= 0) throw new RuntimeException(\"warehouse_id is required.\");","","  // --- idempotency (optional but recommended)","  $idemKey = $grn['idempotency_key'] ?? null;","  if ($idemKey) {","    $st = $pdo->prepare(\"SELECT id FROM postings_idempotency WHERE idempotency_key=? LIMIT 1\");","    $st->execute([$idemKey]);","    if ($st->fetchColumn()) {","      echo json_encode(['ok'=>true,'data'=>['message'=>'Duplicate submit ignored (idempotent).']]);","      exit;","    }","  }","","  // --- map ownership (company / customer / vendor_foc) + doc_type","  $ownerCtx = \\Coupler\\Ownership::mapGrnOwner([","    'owner_mode' => $grn['owner_mode'] ?? 'company',","    'customer_id'=> $grn['customer_id'] ?? null,","    'foc_policy' => $grn['foc_policy'] ?? null","  ]);","","  // If you persist a GRN header, do it here (optional; otherwise we post line-by-line).","  // Example minimal header insert (adapt to your schema):","  $pdo->beginTransaction();","  $grnId = null;","  try {","    // Try to detect if a GRN header table exists","    $hasHdr = $pdo->query(\"SELECT COUNT(*) FROM information_schema.tables WHERE table_schema=DATABASE() AND table_name='grn'\")->fetchColumn();","    if ($hasHdr) {","      $ins = $pdo->prepare(\"INSERT INTO grn (warehouse_id, doc_type, party_dc_no, customer_id, created_at) VALUES (?,?,?,?,NOW())\");","      $ins->execute([$warehouseId, $ownerCtx['doc_type'], ($grn['party_dc_no'] ?? null), ($ownerCtx['owner_id'] ?? null)]);","      $grnId = (int)$pdo->lastInsertId();","    }","    $pdo->commit();","  } catch (\\Throwable $e) {","    $pdo->rollBack();","    // not fatal\u2014if header schema differs, we continue without it","  }","","  // --- services","  $repo = new \\Coupler\\RuleRepo($pdo);","  $meas = new \\Coupler\\MeasurementEngine($repo);","  $glif = new \\Coupler\\CouplerGL($pdo, $repo);","  $lotSvc = new \\Coupler\\LotService($pdo);","","  $totalValue = 0.0;","  $outLines = [];","","  foreach ($lines as $idx => $ln) {","    $itemId   = (int)($ln['item_id'] ?? 0);","    if ($itemId <= 0) throw new RuntimeException(\"Line \".($idx+1).\": item_id is required.\");","    $category = (string)($ln['category'] ?? 'plate'); // map to rule-set categories you seeded","    $priceBasis = (string)($ln['price_basis'] ?? 'per_kg');","    $unitPrice  = (float)($ln['unit_price'] ?? 0.0);","","    // Build measurement inputs (send only what\u2019s relevant per category)","    $inputs = [","      'L_mm'       => (float)($ln['L_mm'] ?? 0),","      'W_mm'       => (float)($ln['W_mm'] ?? 0),","      'Thk_mm'     => (float)($ln['Thk_mm'] ?? 0),","      'Qty'        => (float)($ln['pcs'] ?? 1),","      'length_mm'  => (float)($ln['length_mm'] ?? 0),","      'wt_per_m'   => (float)($ln['wt_per_m'] ?? 0),","      'boxes'      => (float)($ln['boxes'] ?? 0),","      'kg_per_box' => (float)($ln['kg_per_box'] ?? 0),","    ];","","    // --- compute accounting qty (base UOM, e.g., KG) via measurement rules","    $res = $meas->compute($category, $inputs);","    $acctQty = (float)$res['acc_qty'];","    if ($acctQty <= 0) throw new RuntimeException(\"Line \".($idx+1).\": computed base quantity is zero.\");","","    // --- derive accounting rate based on PO price basis","    $acctRate = 0.0;","    if ($priceBasis === 'per_kg') {","      $acctRate = $unitPrice;","    } elseif ($priceBasis === 'per_no') {","      $qtyNo = max(1.0, (float)$inputs['Qty']);","      $kgPerNo = max(0.000001, $acctQty / $qtyNo);","      $acctRate = $unitPrice / $kgPerNo;","    } elseif ($priceBasis === 'per_m') {","      $totalLenM = max(0.000001, ((float)$inputs['length_mm'] / 1000.0) * max(1.0, (float)$inputs['Qty']));","      $kgPerM = max(0.000001, $acctQty / $totalLenM);","      $acctRate = $unitPrice / $kgPerM;","    } else {","      $acctRate = $unitPrice;","    }","","    // --- FOC fair_value/standard policy may override GL rate only","    $glRate = null;","    if ($ownerCtx['doc_type'] === 'FOC-IN') {","      $policy = $ownerCtx['foc_policy'] ?? 'zero';","      if ($policy === 'fair_value') {","        $glRate = (float)($grn['fair_value_rate'] ?? 0.0);","      } elseif ($policy === 'standard') {","        $glRate = (float)($ln['standard_rate'] ?? 0.0);","      } else {","        $glRate = 0.0;","      }","    }","","    // --- create lot & pieces with heat/plate/dims","    $lotMeta = [","      'heat_no' => $ln['heat_no'] ?? null,","      'plate_no'=> $ln['plate_no'] ?? null,","      'shape'   => $category === 'plate' ? 'rect' : ($category === 'ismb' ? 'strip' : 'other'),","      'pcs'     => (int)($ln['pcs'] ?? 1),","      'dims'    => [","        'L_mm'=>(float)($ln['L_mm'] ?? $ln['length_mm'] ?? 0),","        'W_mm'=>(float)($ln['W_mm'] ?? 0),","        'Thk_mm'=>(float)($ln['Thk_mm'] ?? 0)","      ],","      'grn_line_id' => null","    ];","","    $lotRes = $lotSvc->createLotAndPieces(","      itemId:      $itemId,","      warehouseId: $warehouseId,","      ownerType:   (string)$ownerCtx['owner_type'],","      ownerId:     $ownerCtx['owner_id'] ?? null,","      qtyBase:     $acctQty,","      meta:        $lotMeta","    );","    $lotId = (int)$lotRes['lot_id'];","    $pieceIds = $lotRes['piece_ids'];","","    // --- post stock IN (prefer your existing service if present)","    $postedAmount = 0.0;","    $invRate = ($ownerCtx['owner_type'] === 'company') ? $acctRate : 0.0; // party/FOC-zero carry 0 inventory rate","    $qty = $acctQty;","","    // try preferred writer","    $posted = false;","    if (class_exists('\\\\Stores\\\\StockMoveWriter')) {","      // If your project has a namespaced writer","      // \\Stores\\StockMoveWriter::in($pdo, $itemId, $warehouseId, $qty, $invRate, $ownerCtx, ['lot_id'=>$lotId, 'ref'=>'GRN', 'ref_id'=>$grnId]);","      $posted = true; // comment this line out if your writer throws on failure","    } elseif (class_exists('StockMoveWriter')) {","      // StockMoveWriter::in($itemId, $warehouseId, $qty, $invRate, $ownerCtx['owner_type'], $ownerCtx['owner_id'], ['lot_id'=>$lotId,'ref'=>'GRN','ref_id'=>$grnId]);","      $posted = true;","    }","","    if (!$posted) {","      // Fallback minimal posting (adjust to your actual schema if needed)","      // 1) stock_ledger","      $insLed = $pdo->prepare(\"INSERT INTO stock_ledger","        (item_id, warehouse_id, qty, rate, amount, move_type, owner_type, owner_id, lot_id, ref_table, ref_id, created_at)","        VALUES (?,?,?,?,?,'IN',?,?,?,?,?,NOW())\");","      $amount = round($qty * $invRate, 2);","      $insLed->execute([$itemId, $warehouseId, $qty, $invRate, $amount, $ownerCtx['owner_type'], ($ownerCtx['owner_id'] ?? null), $lotId, 'grn', $grnId]);","      // 2) stock_onhand (upsert-like)","      $sel = $pdo->prepare(\"SELECT qty FROM stock_onhand WHERE item_id=? AND warehouse_id=? AND owner_type=? AND (owner_id <=> ?)\");","      $sel->execute([$itemId, $warehouseId, $ownerCtx['owner_type'], ($ownerCtx['owner_id'] ?? null)]);","      $row = $sel->fetch(PDO::FETCH_ASSOC);","      if ($row) {","        $upd = $pdo->prepare(\"UPDATE stock_onhand SET qty = qty + ? WHERE item_id=? AND warehouse_id=? AND owner_type=? AND (owner_id <=> ?)\");","        $upd->execute([$qty, $itemId, $warehouseId, $ownerCtx['owner_type'], ($ownerCtx['owner_id'] ?? null)]);","      } else {","        $ins = $pdo->prepare(\"INSERT INTO stock_onhand (item_id, warehouse_id, qty, owner_type, owner_id) VALUES (?,?,?,?,?)\");","        $ins->execute([$itemId, $warehouseId, $qty, $ownerCtx['owner_type'], ($ownerCtx['owner_id'] ?? null)]);","      }","      $postedAmount = $amount;","    } else {","      $postedAmount = round($qty * $invRate, 2);","    }","","    // --- queue GL entries (owner-aware; FOC fair_value/standard use gl_rate)","    $glif->queueGLEntries($category, [","      'doc_type'   => $ownerCtx['doc_type'],","      'owner_type' => $ownerCtx['owner_type'],","      'acct_qty'   => $acctQty,","      'acct_rate'  => $acctRate,","      'gl_rate'    => $glRate,","      'foc_policy' => $ownerCtx['foc_policy'] ?? null,","      'refs'       => ['grn_id'=>$grnId, 'po_id'=>($ln['po_id'] ?? null)]","    ]);","","    $lineValue = round(($glRate !== null ? $glRate : $acctRate) * $acctQty, 2);","    $totalValue += $lineValue;","","    $outLines[] = [","      'item_id'   => $itemId,","      'category'  => $category,","      'lot_id'    => $lotId,","      'piece_ids' => $pieceIds,","      'acct_qty'  => round($acctQty, 3),","      'acct_rate' => round($acctRate, 4),","      'gl_rate'   => ($glRate !== null ? round($glRate, 4) : null),","      'gl_amount' => $lineValue","    ];","  }","","  // record idempotency (after success)","  if ($idemKey) {","    $st = $pdo->prepare(\"INSERT INTO postings_idempotency (idempotency_key, doc_type, doc_id) VALUES (?,?,?)\");","    $st->execute([$idemKey, ($ownerCtx['doc_type'] ?? 'PO-GRN'), ($grnId ?? 0)]);","  }","","  echo json_encode([","    'ok' => true,","    'data' => [","      'grn_id' => $grnId,","      'doc_type' => $ownerCtx['doc_type'],","      'owner_type' => $ownerCtx['owner_type'],","      'totals' => ['gl_amount' => round($totalValue, 2)],","      'lines' => $outLines","    ]","  ]);","","} catch (Throwable $e) {","  http_response_code(400);","  echo json_encode(['ok'=>false, 'error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/pa_to_indent.php": ["<?php","/** PATH: /public_html/stores/_ajax/pa_to_indent.php */","declare(strict_types=1);","","require_once __DIR__ . '/../../includes/auth.php';","require_once __DIR__ . '/../../includes/db.php';","require_once __DIR__ . '/../../includes/rbac.php';","require_once __DIR__ . '/../../includes/audit.php';","require_once __DIR__ . '/../../includes/services/NumberingService.php';","","require_permission('purchase.indent.manage'); // adjust if your RBAC key differs","header('Content-Type: application/json; charset=utf-8');","","$pdo = null;","try {","  $pdo = db();","  $in = json_decode(file_get_contents('php://input') ?: '[]', true);","  if (!$in) throw new RuntimeException('No input');","","  $advice_id = (int)($in['advice_id'] ?? 0);","  if ($advice_id <= 0) throw new RuntimeException('advice_id required');","","  // PA header (NOTE: no project_id column in your PA table)","  $h = $pdo->prepare(\"","    SELECT id, advice_no, advice_date, warehouse_id, status, remarks","    FROM purchase_advice","    WHERE id = ?","  \");","  $h->execute([$advice_id]);","  $pa = $h->fetch(PDO::FETCH_ASSOC);","  if (!$pa) throw new RuntimeException('Purchase Advice not found');","","  // Acceptable statuses (block only cancelled)","  if ($pa['status'] === 'cancelled') {","    throw new RuntimeException('Advice is cancelled');","  }","","  // PA lines (use suggested_qty > 0)","  $ls = $pdo->prepare(\"","    SELECT item_id, uom_id, suggested_qty, remarks","    FROM purchase_advice_items","    WHERE advice_id = ? AND suggested_qty > 0","  \");","  $ls->execute([$advice_id]);","  $lines = $ls->fetchAll(PDO::FETCH_ASSOC);","  if (!$lines) throw new RuntimeException('No suggested lines to convert');","","  $user = (int)($_SESSION['user_id'] ?? 0);","  if ($user <= 0) throw new RuntimeException('Not authenticated');","","  $pdo->beginTransaction();","","  // Number","  $indent_no = NumberingService::next($pdo, 'IND');","","  // Insert INDENT header \u2014 match your `indents` schema","  // Columns present: indent_no, project_id (NULL), required_by (NULL), remarks, priority, delivery_location_id (NULL), status, created_by","  $pdo->prepare(\"","    INSERT INTO indents","      (indent_no, project_id, required_by, remarks, priority, delivery_location_id, status, created_by)","    VALUES","      (?, NULL, NULL, ?, 'normal', NULL, 'draft', ?)","  \")->execute([$indent_no, $pa['remarks'] ?: null, $user]);","","  $indent_id = (int)$pdo->lastInsertId();","","  // Insert lines \u2014 match your `indent_items` schema","  $ins = $pdo->prepare(\"","    INSERT INTO indent_items","      (indent_id, item_id, make_id, description, qty, uom_id, needed_by, remarks, sort_order)","    VALUES","      (?, ?, NULL, NULL, ?, ?, NULL, ?, ?)","  \");","","  $n = 1;","  foreach ($lines as $L) {","    $item_id = (int)$L['item_id'];","    $qty     = (float)$L['suggested_qty'];","    $uom_id  = $L['uom_id'] !== null ? (int)$L['uom_id'] : null;","    if ($item_id <= 0 || $qty <= 0) continue;","","    $ins->execute([$indent_id, $item_id, $qty, $uom_id, $L['remarks'] ?: null, $n++]);","  }","","  // Optional: mark PA as 'approved' stays; or set another flag if you like (not changing status here)","  // $pdo->prepare(\"UPDATE purchase_advice SET status='approved' WHERE id=?\")->execute([$advice_id]);","","  // Audit trail","  if (function_exists('audit_log_add')) {","    audit_log_add($pdo, $user, 'indents', $indent_id, 'create_from_advice', ['advice_id' => $advice_id], null);","  } elseif (function_exists('audit_log')) {","    audit_log($pdo, 'indents', 'create_from_advice', $indent_id, json_encode(['advice_id' => $advice_id]));","  }","","  $pdo->commit();","  echo json_encode(['ok' => true, 'indent_id' => $indent_id, 'indent_no' => $indent_no]);","","} catch (Throwable $e) {","  if ($pdo?->inTransaction()) $pdo->rollBack();","  http_response_code(400);","  echo json_encode(['ok' => false, 'error' => $e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/piece_consume.php": ["<?php","declare(strict_types=1);","require_once dirname(__DIR__,2) . '/includes/auth.php';","require_once dirname(__DIR__,2) . '/includes/db.php';","require_once dirname(__DIR__,2) . '/includes/rbac.php';","require_once dirname(__DIR__,2) . '/includes/coupler/LotService.php';","header('Content-Type: application/json');","try {","  require_login(); require_permission('stores.issue.consume');","  $pdo = db();","  $input = json_decode(file_get_contents('php://input'), true) ?: [];","  $pieceId = (int)($input['piece_id'] ?? 0);","  $qtyKg = (float)($input['qty_kg'] ?? 0);","  $jobId = (int)($input['job_id'] ?? 0);","  $svc = new \\Coupler\\LotService($pdo);","  $res = $svc->reducePieceQty($pieceId, $qtyKg);","  // TODO: call StockMoveWriter to post OUT to job using lot/piece and jobId","  echo json_encode(['ok'=>true,'data'=>$res]);","} catch (Throwable $e) {","  http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/piece_split.php": ["<?php","declare(strict_types=1);","require_once dirname(__DIR__,2) . '/includes/auth.php';","require_once dirname(__DIR__,2) . '/includes/db.php';","require_once dirname(__DIR__,2) . '/includes/rbac.php';","require_once dirname(__DIR__,2) . '/includes/coupler/LotService.php';","header('Content-Type: application/json');","try {","  require_login(); require_permission('stores.remnant.split');","  $pdo = db();","  $input = json_decode(file_get_contents('php://input'), true) ?: [];","  $pieceId = (int)($input['piece_id'] ?? 0);","  $consumedKg = (float)($input['consumed_kg'] ?? 0);","  $remnants = $input['remnants'] ?? [];","  $svc = new \\Coupler\\LotService($pdo);","  $out = $svc->splitPiece($pieceId, $remnants, $consumedKg);","  echo json_encode(['ok'=>true,'data'=>$out]);","} catch (Throwable $e) {","  http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/pa_to_pr.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../../includes/auth.php';","require_once __DIR__.'/../../includes/db.php';","require_once __DIR__.'/../../includes/rbac.php';","require_once __DIR__.'/../../includes/audit.php';","require_once __DIR__.'/../../includes/services/NumberingService.php';","require_permission('purchase.advice.manage');","header('Content-Type: application/json; charset=utf-8');","","try{","  $pdo=db();","  $in=json_decode(file_get_contents('php://input')?:'[]',true);","  $advice_id=(int)($in['advice_id']??0);","  if($advice_id<=0) throw new RuntimeException('advice_id required');","","  $hdr=$pdo->prepare(\"SELECT * FROM purchase_advice WHERE id=? AND status IN ('draft','approved')\");","  $hdr->execute([$advice_id]); $pa=$hdr->fetch(PDO::FETCH_ASSOC);","  if(!$pa) throw new RuntimeException('Advice not found');","","  $lines=$pdo->prepare(\"SELECT item_id,uom_id,suggested_qty qty FROM purchase_advice_items WHERE advice_id=? AND suggested_qty>0\");","  $lines->execute([$advice_id]); $rows=$lines->fetchAll(PDO::FETCH_ASSOC);","  if(!$rows) throw new RuntimeException('No lines to requisition');","","  $user=(int)($_SESSION['user_id']??0);","  $pdo->beginTransaction();","  $pr_no=NumberingService::next($pdo,'PR');","  $pdo->prepare(\"INSERT INTO purchase_requisitions (pr_no, pr_date, warehouse_id, source_advice_id, status, remarks, created_by)","                 VALUES (?, CURRENT_DATE, ?, ?, 'draft', NULL, ?)\")","      ->execute([$pr_no,(int)$pa['warehouse_id'], $advice_id, $user]);","  $pr_id=(int)$pdo->lastInsertId();","","  $ins=$pdo->prepare(\"INSERT INTO purchase_requisition_items (pr_id,item_id,uom_id,qty,remarks) VALUES (?,?,?,?,?)\");","  foreach($rows as $r){","    $ins->execute([$pr_id,(int)$r['item_id'], $r['uom_id']?(int)$r['uom_id']:null, (float)$r['qty'], null]);","  }","","  audit_log($pdo,'purchase_requisitions','create_from_advice',$pr_id,json_encode(['advice_id'=>$advice_id]));","  $pdo->commit();","  echo json_encode(['ok'=>true,'pr_id'=>$pr_id,'pr_no'=>$pr_no]);","}catch(Throwable $e){","  if($pdo?->inTransaction()) $pdo->rollBack();","  http_response_code(400);","  echo json_encode(['ok'=>false,'error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/stock_adjust_post.php": ["<?php","/**"," * PATH: /public_html/stores/_ajax/stock_adjust_post.php"," * Stock Adjustment POST \u2014 schema-aligned + form-matrix normalization"," */","declare(strict_types=1);","","require_once __DIR__ . '/../../includes/db.php';","require_once __DIR__ . '/../../includes/rbac.php';","require_once __DIR__ . '/../../includes/csrf.php';","require_once __DIR__ . '/../../includes/audit.php';","require_once __DIR__ . '/../../includes/helpers.php';","","require_once __DIR__ . '/../../includes/NumberingService.php';","require_once __DIR__ . '/../../includes/StockMoveWriter.php';","require_once __DIR__ . '/../../includes/services/ValuationService.php';","require_once __DIR__ . '/../../includes/StockLedgerAdapter.php';","","header('Content-Type: application/json');","","function try_int($v) { return isset($v) && $v !== '' ? (int)$v : null; }","","try {","    require_permission('stocks.adjust.manage');","","    $raw   = file_get_contents('php://input');","    $input = json_decode($raw, true);","    if (!$input) $input = $_POST;","","    // CSRF only for standard form posts","    if (!empty($_POST)) {","        csrf_require_token($_POST['csrf_token'] ?? '');","    }","","    $pdo = db();","","    $userId      = (int)$_SESSION['user_id'];","    $nowDate     = date('Y-m-d');      // stock_moves.txn_date is DATE","    $nowStamp    = date('Y-m-d H:i:s');","","    // Required","    $warehouseId = (int)($input['warehouse_id'] ?? 0);","    $mode        = strtoupper(trim($input['mode'] ?? '')); // IN or OUT","    $lines       = $input['lines'] ?? [];","","    // Normalize matrix-style form arrays","    if (isset($lines['item_id']) && is_array($lines['item_id'])) {","        $rows = [];","        $n = count($lines['item_id']);","        for ($i = 0; $i < $n; $i++) {","            $row = [","                'item_id'   => $lines['item_id'][$i]   ?? null,","                'uom_id'    => $lines['uom_id'][$i]    ?? null,","                'qty'       => $lines['qty'][$i]       ?? null,","                'remarks'   => $lines['remarks'][$i]   ?? null,","                'bin_id'    => $lines['bin_id'][$i]    ?? null,","                'batch_id'  => $lines['batch_id'][$i]  ?? null,","                'unit_cost' => $lines['unit_cost'][$i] ?? null,","            ];","            if (($row['item_id'] !== null && $row['item_id'] !== '') ||","                ($row['qty'] !== null && $row['qty'] !== '')) {","                $rows[] = $row;","            }","        }","        $lines = $rows;","    }","","    // Optional","    $remarks     = trim($input['remarks'] ?? '');","    $reasonId    = try_int($input['reason_id'] ?? null);","    $reasonCode  = isset($input['reason_code']) ? trim((string)$input['reason_code']) : '';","","    if ($warehouseId <= 0 || !in_array($mode, ['IN','OUT'], true) || empty($lines)) {","        http_response_code(422);","        echo json_encode(['ok' => false, 'error' => 'warehouse_id, mode (IN/OUT) and lines are required']);","        return;","    }","","    if (!$reasonId && $reasonCode !== '') {","        $q = $pdo->prepare(\"SELECT id FROM stock_adj_reasons WHERE code = ?\");","        $q->execute([$reasonCode]);","        $rid = $q->fetchColumn();","        if ($rid) $reasonId = (int)$rid;","    }","","    $pdo->beginTransaction();","","    $adjNo = NumberingService::next($pdo, 'ADJ'); // e.g., ADJ-2025-0001","","    $pdo->prepare(\"","        INSERT INTO stock_adjustments","            (adj_no, adj_date, mode, warehouse_id, reason_id, remarks, status, created_by, created_at)","        VALUES","            (:adj_no, :adj_date, :mode, :warehouse_id, :reason_id, :remarks, 'posted', :created_by, :created_at)","    \")->execute([","        ':adj_no'       => $adjNo,","        ':adj_date'     => $nowDate,","        ':mode'         => $mode,","        ':warehouse_id' => $warehouseId,","        ':reason_id'    => $reasonId,","        ':remarks'      => $remarks,","        ':created_by'   => $userId,","        ':created_at'   => $nowStamp,","    ]);","    $adjId = (int)$pdo->lastInsertId();","","    $insLine = $pdo->prepare(\"","        INSERT INTO stock_adjustment_items","            (adj_id, item_id, uom_id, qty, remarks)","        VALUES","            (:adj_id, :item_id, :uom_id, :qty, :remarks)","    \");","","    $avgQ = $pdo->prepare(\"SELECT avg_cost FROM stock_avg WHERE item_id = :i AND warehouse_id = :w\");","","    $lineNo = 0;","    foreach ($lines as $ln) {","        $lineNo++;","        $itemId = (int)($ln['item_id'] ?? 0);","        $uomId  = (int)($ln['uom_id'] ?? 0);","        $qty    = (float)($ln['qty'] ?? 0);","        $lrem   = trim((string)($ln['remarks'] ?? ''));","","        if ($itemId <= 0 || $uomId <= 0 || $qty <= 0) {","            throw new RuntimeException(\"Invalid line #{$lineNo}: item, uom, qty required.\");","        }","","        $insLine->execute([","            ':adj_id' => $adjId,","            ':item_id'=> $itemId,","            ':uom_id' => $uomId,","            ':qty'    => $qty,","            ':remarks'=> $lrem,","        ]);","","        $payload = [","            'txn_type'     => 'ADJ',","            'txn_no'       => $adjNo,","            'txn_date'     => $nowDate,      // DATE","            'item_id'      => $itemId,","            'uom_id'       => $uomId,","            'warehouse_id' => $warehouseId,","            'bin_id'       => null,","            'batch_id'     => null,","            'project_id'   => null,","            'qty'          => $qty,","            'unit_cost'    => 0.0,           // no unit cost in your adjust items","            'ref_entity'   => 'stock_adjustments',","            'ref_table'    => 'stock_adjustments',","            'ref_id'       => $adjId,","            'created_by'   => $userId,","        ];","","        if ($mode === 'IN') {","            \\StockMoveWriter::postIn($pdo, $payload);","            if (method_exists('ValuationService','onPositiveReceipt')) {","                \\ValuationService::onPositiveReceipt($pdo, $itemId, $warehouseId, $qty, 0.0);","            } elseif (method_exists('ValuationService','onReceipt')) {","                \\ValuationService::onReceipt($pdo, $itemId, $warehouseId, $qty, 0.0);","            }","            \\StockLedgerAdapter::mirror($pdo, $payload);","        } else {","            $avgQ->execute([':i'=>$itemId, ':w'=>$warehouseId]);","            $row = $avgQ->fetch(\\PDO::FETCH_ASSOC);","            if ($row && isset($row['avg_cost']) && (float)$row['avg_cost'] > 0) {","                $payload['unit_cost'] = (float)$row['avg_cost'];","            }","            \\StockMoveWriter::postOut($pdo, $payload);","            \\ValuationService::onIssue($pdo, $itemId, $warehouseId, $qty);","            \\StockLedgerAdapter::mirror($pdo, $payload);","        }","    }","","    try {","        audit_log($pdo, 'stock_adjustments', $adjId, 'POST', null, [","            'adj_no' => $adjNo,","            'mode'   => $mode,","            'lines'  => count($lines),","        ]);","    } catch (\\Throwable $ae) {","        error_log('audit_log failed: '.$ae->getMessage().' @'.$ae->getFile().':'.$ae->getLine());","    }","","    $pdo->commit();","    echo json_encode(['ok' => true, 'adjustment_id' => $adjId, 'adj_no' => $adjNo]);","","} catch (\\Throwable $e) {","    if (isset($pdo) && $pdo instanceof \\PDO && $pdo->inTransaction()) $pdo->rollBack();","    $msg = $e->getMessage().' @'.$e->getFile().':'.$e->getLine();","    error_log($msg);","    http_response_code(400);","    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/issue_create.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/IssueService.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('stores.issue.create'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\IssueService($pdo);","  $id=$svc->create($in['issue_date']??date('Y-m-d'), $in['cost_center_id']??null, $in['job_id']??null, $in['notes']??null);","  echo json_encode(['ok'=>true,'data'=>['issue_id'=>$id]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/gp_return_post.php": ["<?php","/**"," * Gate Pass RETURN"," * - Validates returnable GP and outstanding qty"," * - Posts IN movements"," * - NEW: Calls ValuationService::onReceipt and mirrors to stock_ledger"," */","require_once __DIR__ . '/../../includes/db.php';","require_once __DIR__ . '/../../includes/rbac.php';","require_once __DIR__ . '/../../includes/csrf.php';","require_once __DIR__ . '/../../includes/audit.php';","require_once __DIR__ . '/../../includes/helpers.php';","","require_once __DIR__ . '/../../includes/NumberingService.php';","require_once __DIR__ . '/../../includes/StockMoveWriter.php';","require_once __DIR__ . '/../../includes/ValuationService.php';","require_once __DIR__ . '/../../includes/StockLedgerAdapter.php';","","header('Content-Type: application/json');","","try {","    require_permission('stores.gatepass.manage');","","    $raw = file_get_contents('php://input');","    $input = json_decode($raw, true);","    if (!$input) $input = $_POST;","","    if (!empty($_POST)) {","        csrf_require_token($_POST['csrf_token'] ?? '');","    }","","    $userId = (int)($_SESSION['user_id'] ?? 0);","    $now = date('Y-m-d H:i:s');","","    $gpId   = (int)($input['gp_id'] ?? 0);","    $lines  = $input['lines'] ?? []; // each: gp_line_id, qty, unit_cost?, bin_id?, batch_id?","    if ($gpId <= 0 || empty($lines)) {","        http_response_code(422);","        echo json_encode(['ok' => false, 'error' => 'gp_id and lines are required']);","        exit;","    }","","    $pdo = db();","    $pdo->beginTransaction();","","    // Load GP header, ensure returnable","    $h = $pdo->prepare(\"SELECT gp_no, warehouse_id, returnable, status FROM gatepasses WHERE id = :id FOR UPDATE\");","    $h->execute([':id' => $gpId]);","    $hdr = $h->fetch(PDO::FETCH_ASSOC);","    if (!$hdr) throw new RuntimeException('Gate Pass not found');","    if ((int)$hdr['returnable'] !== 1) throw new RuntimeException('Gate Pass is not returnable');","","    $gpNo       = $hdr['gp_no'];","    $warehouseId= (int)$hdr['warehouse_id'];","","    // Load lines outstanding","    $lnQ = $pdo->prepare(\"SELECT id, line_no, item_id, uom_id, qty, returned_qty, bin_id, batch_id FROM gatepass_items WHERE gp_id = :id\");","    $lnQ->execute([':id' => $gpId]);","    $existing = [];","    while ($r = $lnQ->fetch(PDO::FETCH_ASSOC)) {","        $existing[(int)$r['id']] = $r;","    }","","    // Generate return number","    $gprNo = NumberingService::next($pdo, 'GPR');","","    foreach ($lines as $ln) {","        $gpLineId = (int)($ln['gp_line_id'] ?? 0);","        $retQty   = (float)($ln['qty'] ?? 0);","        $unitCost = (float)($ln['unit_cost'] ?? 0);","        $binId    = isset($ln['bin_id']) ? (int)$ln['bin_id'] : ($existing[$gpLineId]['bin_id'] ?? null);","        $batchId  = isset($ln['batch_id']) ? (int)$ln['batch_id'] : ($existing[$gpLineId]['batch_id'] ?? null);","","        if ($gpLineId <= 0 || $retQty <= 0) {","            throw new RuntimeException(\"Invalid return line\");","        }","        if (!isset($existing[$gpLineId])) {","            throw new RuntimeException(\"Gate Pass line not found: {$gpLineId}\");","        }","        $ex = $existing[$gpLineId];","        $outstanding = (float)$ex['qty'] - (float)$ex['returned_qty'];","        if ($retQty > $outstanding + 1e-9) {","            throw new RuntimeException(\"Return qty exceeds outstanding on line {$ex['line_no']}\");","        }","","        // Update returned qty","        $pdo->prepare(\"UPDATE gatepass_items SET returned_qty = returned_qty + :r WHERE id = :id\")","            ->execute([':r' => $retQty, ':id' => $gpLineId]);","","        // Build payload","        $payload = [","            'txn_type'     => 'GPR',","            'txn_no'       => $gprNo,       // return doc number","            'txn_date'     => $now,","            'item_id'      => (int)$ex['item_id'],","            'uom_id'       => (int)$ex['uom_id'],","            'warehouse_id' => $warehouseId,","            'bin_id'       => $binId,","            'batch_id'     => $batchId,","            'project_id'   => null,","            'qty'          => $retQty,      // positive IN","            'unit_cost'    => $unitCost,    // pre-tax","            'ref_table'    => 'gatepasses',","            'ref_id'       => $gpId,","            'created_by'   => $userId,","        ];","","        StockMoveWriter::postIn($pdo, $payload);","        ValuationService::onReceipt($pdo, (int)$ex['item_id'], $warehouseId, $retQty, $unitCost);","        StockLedgerAdapter::mirror($pdo, $payload);","    }","","    // Close GP if fully returned","    $c = $pdo->prepare(\"SELECT SUM(qty) as t_qty, SUM(returned_qty) as t_ret FROM gatepass_items WHERE gp_id = :id\");","    $c->execute([':id' => $gpId]);","    $row = $c->fetch(PDO::FETCH_ASSOC);","    if ($row && (float)$row['t_qty'] <= (float)$row['t_ret'] + 1e-9) {","        $pdo->prepare(\"UPDATE gatepasses SET status = 'CLOSED', updated_at = NOW() WHERE id = :id\")","            ->execute([':id' => $gpId]);","    }","","    audit_log('gatepasses', $gpId, 'RETURN', null, ['gpr_no' => $gprNo, 'lines' => count($lines)]);","    $pdo->commit();","","    echo json_encode(['ok' => true, 'gp_id' => $gpId, 'gpr_no' => $gprNo]);","","} catch (Throwable $e) {","    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();","    error_log($e);","    http_response_code(400);","    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/settlement_create.php": ["<?php","declare(strict_types=1);","require_once dirname(__DIR__,2) . '/includes/auth.php';","require_once dirname(__DIR__,2) . '/includes/db.php';","require_once dirname(__DIR__,2) . '/includes/rbac.php';","require_once dirname(__DIR__,2) . '/includes/coupler/SettlementService.php';","header('Content-Type: application/json');","","try {","  require_login(); require_permission('stores.settlement.create');","  $pdo = db();","  $in  = json_decode(file_get_contents('php://input'), true) ?: $_POST;","","  $svc = new \\Coupler\\SettlementService($pdo);","  $id  = $svc->createHeader(","    (int)($in['customer_id'] ?? 0),","    (string)($in['mode'] ?? 'credit_note'),","    (string)($in['kind'] ?? 'remnant'),","    (string)($in['bucket'] ?? 'RM'),","    $in['notes'] ?? null","  );","","  echo json_encode(['ok'=>true,'data'=>['settlement_id'=>$id]]);","} catch (Throwable $e) {","  http_response_code(400);","  echo json_encode(['ok'=>false,'error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/scrap_convert.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/ScrapRemnantService.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('stores.scrap'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\ScrapRemnantService($pdo);","  $res=$svc->convertToScrap((int)($in['piece_id']??0),(float)($in['qty_base']??0),(int)($in['scrap_item_id']??0),(int)($in['warehouse_id']??0),(string)($in['reason']??''));","  echo json_encode(['ok'=>true,'data'=>$res]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/gp_create_post.php": ["<?php","/**"," * Gate Pass CREATE"," * - Creates GP header + lines"," * - For non-returnable lines that are dispatched now: posts OUT"," * - NEW: Valuation on OUT + mirror to stock_ledger"," */","require_once __DIR__ . '/../../includes/db.php';","require_once __DIR__ . '/../../includes/rbac.php';","require_once __DIR__ . '/../../includes/csrf.php';","require_once __DIR__ . '/../../includes/audit.php';","require_once __DIR__ . '/../../includes/helpers.php';","","require_once __DIR__ . '/../../includes/NumberingService.php';","require_once __DIR__ . '/../../includes/StockMoveWriter.php';","require_once __DIR__ . '/../../includes/ValuationService.php';","require_once __DIR__ . '/../../includes/StockLedgerAdapter.php';","","header('Content-Type: application/json');","","try {","    require_permission('stores.gatepass.manage');","","    $raw = file_get_contents('php://input');","    $input = json_decode($raw, true);","    if (!$input) $input = $_POST;","","    if (!empty($_POST)) {","        csrf_require_token($_POST['csrf_token'] ?? '');","    }","","    $userId = (int)($_SESSION['user_id'] ?? 0);","    $now = date('Y-m-d H:i:s');","","    $sourceWhId   = (int)($input['warehouse_id'] ?? 0);","    $destWhId     = isset($input['to_warehouse_id']) ? (int)$input['to_warehouse_id'] : null; // optional","    $partyId      = isset($input['party_id']) ? (int)$input['party_id'] : null;               // optional (jobwork/site)","    $projectId    = isset($input['project_id']) ? (int)$input['project_id'] : null;","    $returnable   = (int)($input['returnable'] ?? 0); // 1/0","    $expectedRet  = !empty($input['expected_return_date']) ? $input['expected_return_date'] : null;","    $vehicleNo    = trim($input['vehicle_no'] ?? '');","    $contactName  = trim($input['contact_name'] ?? '');","    $remarks      = trim($input['remarks'] ?? '');","    $lines        = $input['lines'] ?? [];","","    if ($sourceWhId <= 0 || empty($lines)) {","        http_response_code(422);","        echo json_encode(['ok' => false, 'error' => 'warehouse_id and lines are required']);","        exit;","    }","","    $pdo = db();","    $pdo->beginTransaction();","","    $gpNo = NumberingService::next($pdo, 'GP');","","    // Header","    $stmt = $pdo->prepare(\"INSERT INTO gatepasses","        (gp_no, warehouse_id, to_warehouse_id, party_id, project_id, returnable, expected_return_date,","         vehicle_no, contact_name, remarks, status, created_by, created_at)","        VALUES","        (:gp_no, :warehouse_id, :to_warehouse_id, :party_id, :project_id, :returnable, :expected_return_date,","         :vehicle_no, :contact_name, :remarks, :status, :created_by, :created_at)\");","    $stmt->execute([","        ':gp_no'                => $gpNo,","        ':warehouse_id'         => $sourceWhId,","        ':to_warehouse_id'      => $destWhId,","        ':party_id'             => $partyId,","        ':project_id'           => $projectId,","        ':returnable'           => $returnable,","        ':expected_return_date' => $expectedRet,","        ':vehicle_no'           => $vehicleNo,","        ':contact_name'         => $contactName,","        ':remarks'              => $remarks,","        ':status'               => ($returnable ? 'OPEN' : 'CLOSED'),","        ':created_by'           => $userId,","        ':created_at'           => $now,","    ]);","    $gpId = (int)$pdo->lastInsertId();","","    $insLine = $pdo->prepare(\"INSERT INTO gatepass_items","        (gp_id, line_no, item_id, uom_id, qty, bin_id, batch_id, remarks, returned_qty)","        VALUES (:gp_id, :line_no, :item_id, :uom_id, :qty, :bin_id, :batch_id, :remarks, 0)\");","","    $lineNo = 0;","    foreach ($lines as $ln) {","        $lineNo++;","        $itemId    = (int)($ln['item_id'] ?? 0);","        $uomId     = isset($ln['uom_id']) ? (int)$ln['uom_id'] : null;","        $qty       = (float)($ln['qty'] ?? 0);","        $binId     = isset($ln['bin_id']) ? (int)$ln['bin_id'] : null;","        $batchId   = isset($ln['batch_id']) ? (int)$ln['batch_id'] : null;","        $lnRemarks = trim($ln['remarks'] ?? '');","        $unitCost  = (float)($ln['unit_cost'] ?? 0);","","        if ($itemId <= 0 || $qty <= 0) {","            throw new RuntimeException(\"Invalid line #{$lineNo}\");","        }","","        $insLine->execute([","            ':gp_id'   => $gpId,","            ':line_no' => $lineNo,","            ':item_id' => $itemId,","            ':uom_id'  => $uomId,","            ':qty'     => $qty,","            ':bin_id'  => $binId,","            ':batch_id'=> $batchId,","            ':remarks' => $lnRemarks,","        ]);","","        // If NON-RETURNABLE, we post OUT right now.","        if (!$returnable) {","            $payload = [","                'txn_type'     => 'GP',","                'txn_no'       => $gpNo,","                'txn_date'     => $now,","                'item_id'      => $itemId,","                'uom_id'       => $uomId,","                'warehouse_id' => $sourceWhId,","                'bin_id'       => $binId,","                'batch_id'     => $batchId,","                'project_id'   => $projectId,","                'qty'          => $qty,","                'unit_cost'    => $unitCost,","                'ref_table'    => 'gatepasses',","                'ref_id'       => $gpId,","                'created_by'   => $userId,","            ];","","            StockMoveWriter::postOut($pdo, $payload);","            ValuationService::onIssue($pdo, $itemId, $sourceWhId, $qty);","            StockLedgerAdapter::mirror($pdo, $payload);","        }","    }","","    audit_log('gatepasses', $gpId, 'CREATE', null, ['gp_no' => $gpNo, 'returnable' => $returnable, 'lines' => count($lines)]);","    $pdo->commit();","","    echo json_encode(['ok' => true, 'gp_id' => $gpId, 'gp_no' => $gpNo]);","","} catch (Throwable $e) {","    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();","    error_log($e);","    http_response_code(400);","    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/issue_add_line.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/IssueService.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('stores.issue.edit'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\IssueService($pdo);","  $id=$svc->addLine((int)($in['issue_id']??0), $in);","  echo json_encode(['ok'=>true,'data'=>['issue_line_id'=>$id]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/settlement_post.php": ["<?php","declare(strict_types=1);","require_once dirname(__DIR__,2) . '/includes/auth.php';","require_once dirname(__DIR__,2) . '/includes/db.php';","require_once dirname(__DIR__,2) . '/includes/rbac.php';","require_once dirname(__DIR__,2) . '/includes/coupler/SettlementService.php';","header('Content-Type: application/json');","","try {","  require_login(); require_permission('stores.settlement.post');","  $pdo = db();","  $in  = json_decode(file_get_contents('php://input'), true) ?: $_POST;","","  $svc = new \\Coupler\\SettlementService($pdo);","  $res = $svc->post((int)($in['settlement_id'] ?? 0));","","  echo json_encode(['ok'=>true,'data'=>$res]);","} catch (Throwable $e) {","  http_response_code(400);","  echo json_encode(['ok'=>false,'error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/_jobs/policy_adaptive_refresh.php": ["<?php","/** PATH: /public_html/stores/_jobs/policy_adaptive_refresh.php */","declare(strict_types=1);","require_once __DIR__ . '/../../includes/auth.php';","require_once __DIR__ . '/../../includes/db.php';","require_once __DIR__ . '/../../includes/rbac.php';","require_permission('purchase.advice.manage'); // restrict to admins","","$pdo = db();","","/**"," * Compute avg daily consumption (ISSUE qtys) from stock_moves:"," * - 90d window: baseline"," * - 14d window: recent"," * Suggested ROP = max(existing ROP, safety_stock, min_qty, ceil(avg14 * 14))"," * (You can tweak factors below.)"," */","$today = new DateTimeImmutable('today');","$from90 = $today->modify('-90 days')->format('Y-m-d');","$from14 = $today->modify('-14 days')->format('Y-m-d');","","$sql = \"","  SELECT sm.item_id, sm.warehouse_id,","         SUM(CASE WHEN sm.txn_date>=? AND sm.txn_date<=? AND sm.qty<0 THEN -sm.qty ELSE 0 END) AS cons_14,","         SUM(CASE WHEN sm.txn_date>=? AND sm.txn_date<=? AND sm.qty<0 THEN -sm.qty ELSE 0 END) AS cons_90","  FROM stock_moves sm","  GROUP BY sm.item_id, sm.warehouse_id","\";","$st = $pdo->prepare($sql);","$st->execute([$from14, $today->format('Y-m-d'), $from90, $today->format('Y-m-d')]);","$cons = $st->fetchAll(PDO::FETCH_ASSOC);","","$selPol = $pdo->query(\"SELECT item_id, warehouse_id, min_qty, max_qty, reorder_point, safety_stock, policy_mode","                       FROM items_stock_policy\")->fetchAll(PDO::FETCH_ASSOC);","$polMap = [];","foreach ($selPol as $p) {","  $polMap[$p['item_id'].'-'.$p['warehouse_id']] = $p;","}","","$ins = $pdo->prepare(\"INSERT INTO policy_adaptive_cache","  (item_id, warehouse_id, avg_daily_90d, avg_daily_14d, spike_ratio, suggested_reorder_point, computed_at)","  VALUES (?,?,?,?,?,?,NOW())","  ON DUPLICATE KEY UPDATE","    avg_daily_90d=VALUES(avg_daily_90d),","    avg_daily_14d=VALUES(avg_daily_14d),","    spike_ratio=VALUES(spike_ratio),","    suggested_reorder_point=VALUES(suggested_reorder_point),","    computed_at=VALUES(computed_at)","\");","","foreach ($cons as $c) {","  $key = $c['item_id'].'-'.$c['warehouse_id'];","  $pol = $polMap[$key] ?? null;","  if (!$pol) continue;","","  $avg90 = ((float)$c['cons_90']) / 90.0;","  $avg14 = ((float)$c['cons_14']) / 14.0;","  $ratio = ($avg90>0) ? ($avg14/$avg90) : ( $avg14>0 ? 9.99 : 0.0 );","","  // Only matters for adaptive policies","  $min = (float)$pol['min_qty'];","  $rop = (float)$pol['reorder_point'];","  $saf = (float)$pol['safety_stock'];","","  // Suggested ROP: protect ~2 weeks of recent consumption, at least existing thresholds","  $suggestROP = max($rop, $saf, $min, ceil($avg14 * 14));","","  $ins->execute([(int)$c['item_id'], (int)$c['warehouse_id'], $avg90, $avg14, $ratio, $suggestROP]);","}","","echo \"OK refreshed at \".date('Y-m-d H:i:s');"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/purchase_advice_approve.php": ["<?php","/** PATH: /public_html/stores/_ajax/purchase_advice_approve.php */","declare(strict_types=1);","require_once __DIR__ . '/../../includes/auth.php';","require_once __DIR__ . '/../../includes/db.php';","require_once __DIR__ . '/../../includes/rbac.php';","require_once __DIR__ . '/../../includes/audit.php';","require_permission('purchase.advice.manage');","header('Content-Type: application/json; charset=utf-8');","","try{","  $pdo = db();","  $raw = file_get_contents('php://input') ?: '';","  $in = $raw ? json_decode($raw,true) : null;","  $id = (int)($in['id'] ?? 0);","  if ($id<=0) throw new RuntimeException('id required');","","  $st = $pdo->prepare(\"UPDATE purchase_advice SET status='approved' WHERE id=? AND status='draft'\");","  $st->execute([$id]);","  if ($st->rowCount()===0) throw new RuntimeException('Already approved or not found');","","  audit_log($pdo, 'purchase_advice', 'approve', $id, null);","  echo json_encode(['ok'=>true]);","}catch(Throwable $e){","  http_response_code(400);","  echo json_encode(['ok'=>false,'error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/remnant_mark.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/ScrapRemnantService.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('stores.remnant'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\ScrapRemnantService($pdo);","  $id=$svc->markRemnant((int)($in['piece_id']??0),(float)($in['qty_base']??0),(string)($in['reason']??''));","  echo json_encode(['ok'=>true,'data'=>['remnant_action_id'=>$id]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/piece_to_scrap.php": ["<?php","declare(strict_types=1);","require_once dirname(__DIR__,2) . '/includes/auth.php';","require_once dirname(__DIR__,2) . '/includes/db.php';","require_once dirname(__DIR__,2) . '/includes/rbac.php';","require_once dirname(__DIR__,2) . '/includes/coupler/LotService.php';","header('Content-Type: application/json');","try {","  require_login(); require_permission('stores.remnant.scrap');","  $pdo = db();","  $input = json_decode(file_get_contents('php://input'), true) ?: [];","  $pieceId = (int)($input['piece_id'] ?? 0);","  $qtyKg = (float)($input['qty_kg'] ?? 0);","  $svc = new \\Coupler\\LotService($pdo);","  $res = $svc->markScrap($pieceId, $qtyKg);","  // TODO: call StockMoveWriter for scrap posting/GL if you hold scrap inventory","  echo json_encode(['ok'=>true,'data'=>$res]);","} catch (Throwable $e) {","  http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/req_post_issue.php": ["<?php","/**"," * Material Requisition \u2192 Issue POST"," * - Creates material_issues header + lines"," * - Posts OUT movements via StockMoveWriter"," * - NEW: Calls ValuationService::onIssue and mirrors to stock_ledger"," */","require_once __DIR__ . '/../../includes/db.php';","require_once __DIR__ . '/../../includes/rbac.php';","require_once __DIR__ . '/../../includes/csrf.php';","require_once __DIR__ . '/../../includes/audit.php';","require_once __DIR__ . '/../../includes/helpers.php';","","require_once __DIR__ . '/../../includes/NumberingService.php';","require_once __DIR__ . '/../../includes/StockMoveWriter.php';","require_once __DIR__ . '/../../includes/ValuationService.php';","require_once __DIR__ . '/../../includes/StockLedgerAdapter.php';","","header('Content-Type: application/json');","","try {","    require_permission('stores.issue.manage');","","    // Accept either JSON or form","    $raw = file_get_contents('php://input');","    $input = json_decode($raw, true);","    if (!$input) $input = $_POST;","","    // Optional CSRF (only if you post from a form)","    if (!empty($_POST)) {","        csrf_require_token($_POST['csrf_token'] ?? '');","    }","","    $userId = (int)($_SESSION['user_id'] ?? 0);","    $now = date('Y-m-d H:i:s');","","    $reqId        = (int)($input['req_id'] ?? 0);","    $warehouseId  = (int)($input['warehouse_id'] ?? 0);","    $projectId    = isset($input['project_id']) ? (int)$input['project_id'] : null;","    $remarks      = trim($input['remarks'] ?? '');","    $lines        = $input['lines'] ?? [];","","    if ($warehouseId <= 0 || empty($lines)) {","        http_response_code(422);","        echo json_encode(['ok' => false, 'error' => 'warehouse_id and lines are required']);","        exit;","    }","","    $pdo = db();","    $pdo->beginTransaction();","","    // Generate Issue number","    $issueNo = NumberingService::next($pdo, 'ISS'); // e.g., ISS-2025-000123","","    // Create header","    $stmt = $pdo->prepare(\"INSERT INTO material_issues","        (issue_no, req_id, warehouse_id, project_id, remarks, status, created_by, created_at)","        VALUES (:issue_no, :req_id, :warehouse_id, :project_id, :remarks, 'POSTED', :created_by, :created_at)\");","    $stmt->execute([","        ':issue_no'     => $issueNo,","        ':req_id'       => $reqId ?: null,","        ':warehouse_id' => $warehouseId,","        ':project_id'   => $projectId,","        ':remarks'      => $remarks,","        ':created_by'   => $userId,","        ':created_at'   => $now,","    ]);","    $issueId = (int)$pdo->lastInsertId();","","    // Prepare line insert","    $insLine = $pdo->prepare(\"INSERT INTO material_issue_items","        (issue_id, line_no, item_id, uom_id, qty, bin_id, batch_id, remarks)","        VALUES (:issue_id, :line_no, :item_id, :uom_id, :qty, :bin_id, :batch_id, :remarks)\");","","    $lineNo = 0;","    foreach ($lines as $ln) {","        $lineNo++;","        $itemId     = (int)($ln['item_id'] ?? 0);","        $uomId      = isset($ln['uom_id']) ? (int)$ln['uom_id'] : null;","        $qty        = (float)($ln['qty'] ?? 0);","        $binId      = isset($ln['bin_id']) ? (int)$ln['bin_id'] : null;","        $batchId    = isset($ln['batch_id']) ? (int)$ln['batch_id'] : null;","        $lnRemarks  = trim($ln['remarks'] ?? '');","","        if ($itemId <= 0 || $qty <= 0) {","            throw new RuntimeException(\"Invalid line at #{$lineNo}\");","        }","","        // Insert issue line","        $insLine->execute([","            ':issue_id' => $issueId,","            ':line_no'  => $lineNo,","            ':item_id'  => $itemId,","            ':uom_id'   => $uomId,","            ':qty'      => $qty,","            ':bin_id'   => $binId,","            ':batch_id' => $batchId,","            ':remarks'  => $lnRemarks,","        ]);","","        // Build writer payload (mirror your existing shape)","        $payload = [","            'txn_type'     => 'ISS',","            'txn_no'       => $issueNo,","            'txn_date'     => $now,","            'item_id'      => $itemId,","            'uom_id'       => $uomId,","            'warehouse_id' => $warehouseId,","            'bin_id'       => $binId,","            'batch_id'     => $batchId,","            'project_id'   => $projectId,","            'qty'          => $qty,            // positive here; writer will store negative in stock_moves","            'unit_cost'    => (float)($ln['unit_cost'] ?? 0), // optional; not used for WA on issue","            'ref_table'    => 'material_issues',","            'ref_id'       => $issueId,","            'created_by'   => $userId,","        ];","","        // Post OUT to stock","        StockMoveWriter::postOut($pdo, $payload);","","        // NEW: Valuation basis reduce + ledger mirror","        ValuationService::onIssue($pdo, $itemId, $warehouseId, $qty);","        StockLedgerAdapter::mirror($pdo, $payload);","    }","","    // Optional: close requisition if fully issued (business rule as before)","    if ($reqId > 0) {","        $pdo->prepare(\"UPDATE material_requisitions SET status = 'CLOSED', updated_at = NOW()","                       WHERE id = :id AND status <> 'CLOSED'\")","            ->execute([':id' => $reqId]);","    }","","    audit_log('material_issues', $issueId, 'POST', null, ['issue_no' => $issueNo, 'lines' => count($lines)]);","    $pdo->commit();","","    echo json_encode(['ok' => true, 'issue_id' => $issueId, 'issue_no' => $issueNo]);","","} catch (Throwable $e) {","    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();","    error_log($e);","    http_response_code(400);","    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/create_purchase_advice.php": ["<?php","/** PATH: /public_html/stores/_ajax/create_purchase_advice.php */","declare(strict_types=1);","","require_once __DIR__ . '/../../includes/auth.php';","require_once __DIR__ . '/../../includes/db.php';","require_once __DIR__ . '/../../includes/rbac.php';","require_once __DIR__ . '/../../includes/audit.php';","require_once __DIR__ . '/../../includes/services/NumberingService.php';","","require_permission('purchase.advice.manage');","header('Content-Type: application/json; charset=utf-8');","","try {","  $pdo = db();","  $raw = file_get_contents('php://input') ?: '';","  $in = $raw ? json_decode($raw, true) : null;","  if (!$in) throw new RuntimeException('No input');","","  $warehouse_id = (int)($in['warehouse_id'] ?? 0);","  $item_ids = $in['item_ids'] ?? [];","  $remarks = trim((string)($in['remarks'] ?? ''));","","  if ($warehouse_id <= 0) throw new RuntimeException('warehouse_id required');","  if (!is_array($item_ids) || count($item_ids) === 0) throw new RuntimeException('item_ids required');","","  // De-dup + sanitize","  $item_ids = array_values(array_unique(array_map(fn($x)=> (int)$x, $item_ids)));","  $idsPlace = implode(',', array_fill(0, count($item_ids), '?'));",""," // Pull policy + onhand + uom + adaptive cache","$sql = \"","  SELECT","    i.id AS item_id,","    i.uom_id,","    i.material_code, i.name,","    p.min_qty, p.max_qty, p.reorder_point, p.safety_stock, p.policy_mode,","    COALESCE(soh.qty, 0) AS onhand,","    ac.avg_daily_90d, ac.avg_daily_14d, ac.spike_ratio, ac.suggested_reorder_point","  FROM items_stock_policy p","  JOIN items i ON i.id = p.item_id","  LEFT JOIN (","    SELECT item_id, warehouse_id, SUM(qty) qty","    FROM stock_onhand","    WHERE warehouse_id = ?","    GROUP BY item_id, warehouse_id","  ) soh ON soh.item_id = p.item_id","  LEFT JOIN policy_adaptive_cache ac","    ON ac.item_id = p.item_id AND ac.warehouse_id = p.warehouse_id","  WHERE p.warehouse_id = ?","    AND p.item_id IN ($idsPlace)","  ORDER BY i.name","\";","$params = array_merge([$warehouse_id, $warehouse_id], $item_ids);","$st = $pdo->prepare($sql);","$st->execute($params);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","$ADAPT_SPIKE_MIN_RATIO = 1.30; // if 14d > 1.3x 90d, treat as spike","","$lines = [];","foreach ($rows as $r) {","  $onhand = (float)$r['onhand'];","  $min    = (float)$r['min_qty'];","  $max    = (float)$r['max_qty'];","  $rop    = (float)$r['reorder_point'];","  $sfty   = (float)$r['safety_stock'];","","  $mode   = (string)$r['policy_mode'];","  $avg90  = (float)($r['avg_daily_90d'] ?? 0);","  $avg14  = (float)($r['avg_daily_14d'] ?? 0);","  $ratio  = (float)($r['spike_ratio'] ?? 0);","  $sugROP = (float)($r['suggested_reorder_point'] ?? 0);","","  // base threshold","  $threshold = max($min, $rop, $sfty);","","  // adaptive bump if enabled and spike detected","  if ($mode === 'adaptive') {","    $spike = ($ratio >= $ADAPT_SPIKE_MIN_RATIO) || ($avg14 > $avg90 && $avg14 >= 1 && $avg90==0);","    if ($spike && $sugROP > $threshold) {","      $threshold = $sugROP; // raise threshold","    }","  }","","  $suggest = ($onhand < $threshold) ? max(0, $max - $onhand) : 0;","","  if ($suggest > 0) {","    $lines[] = [","      'item_id' => (int)$r['item_id'],","      'uom_id'  => (int)($r['uom_id'] ?? 0),","      'onhand'  => $onhand,","      'min_qty' => $min,","      'max_qty' => $max,","      'reorder_point' => $rop,","      'safety_stock'  => $sfty,","      'suggested_qty' => $suggest","    ];","  }","}","","","  if (!$lines) throw new RuntimeException('Nothing to advise (no item below threshold)');","","  $user_id = (int)($_SESSION['user_id'] ?? 0);","  $pdo->beginTransaction();","","  $advice_no = NumberingService::next($pdo, 'PA');","  $pdo->prepare(\"INSERT INTO purchase_advice (advice_no, advice_date, warehouse_id, status, remarks, created_by)","                 VALUES (?, CURRENT_DATE, ?, 'draft', ?, ?)\")","      ->execute([$advice_no, $warehouse_id, $remarks, $user_id]);","  $advice_id = (int)$pdo->lastInsertId();","","  $ins = $pdo->prepare(\"INSERT INTO purchase_advice_items","    (advice_id, item_id, uom_id, onhand, min_qty, max_qty, reorder_point, safety_stock, suggested_qty, remarks)","    VALUES (?,?,?,?,?,?,?,?,?,?)\");","","  foreach ($lines as $ln) {","    $ins->execute([","      $advice_id,","      $ln['item_id'],","      $ln['uom_id'] ?: null,","      $ln['onhand'],","      $ln['min_qty'],","      $ln['max_qty'],","      $ln['reorder_point'],","      $ln['safety_stock'],","      $ln['suggested_qty'],","      null","    ]);","  }","","  audit_log($pdo, 'purchase_advice', 'create', $advice_id, json_encode(['warehouse_id'=>$warehouse_id,'items'=>$item_ids]));","  $pdo->commit();","","  echo json_encode(['ok'=>true, 'advice_id'=>$advice_id, 'advice_no'=>$advice_no, 'lines'=>count($lines)]);","} catch (Throwable $e) {","  if ($pdo?->inTransaction()) $pdo->rollBack();","  http_response_code(400);","  echo json_encode(['ok'=>false, 'error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/req_create.php": ["<?php","/** PATH: /public_html/stores/_ajax/req_create.php */","declare(strict_types=1);","require_once __DIR__ . '/../../includes/auth.php';","require_once __DIR__ . '/../../includes/db.php';","require_once __DIR__ . '/../../includes/rbac.php';","require_once __DIR__ . '/../../includes/audit.php';","require_once __DIR__ . '/../../includes/services/NumberingService.php';","","header('Content-Type: application/json; charset=utf-8');","","function read_input_mixed(): array {","    $ct = strtolower($_SERVER['CONTENT_TYPE'] ?? '');","    $raw = file_get_contents('php://input') ?: '';","","    // Try JSON first when Content-Type hints JSON or raw body exists","    if ($raw !== '') {","        try {","            $data = json_decode($raw, true, flags: JSON_THROW_ON_ERROR);","            if (is_array($data)) return $data;","        } catch (Throwable $e) {","            // fall through to form parsing","        }","    }","","    // Fallback to application/x-www-form-urlencoded or form POST","    if (!empty($_POST)) {","        // Expect flat fields + items[] JSON or parallel arrays","        $data = $_POST;","","        // If items is string JSON, decode; else try to build from arrays","        if (isset($_POST['items']) && is_string($_POST['items'])) {","            $items = json_decode($_POST['items'], true);","            if (is_array($items)) $data['items'] = $items;","        } elseif (isset($_POST['item_id'], $_POST['uom_id'], $_POST['qty_requested'])) {","            // Parallel arrays: item_id[], uom_id[], qty_requested[], remarks[]","            $items = [];","            $n = max(count((array)$_POST['item_id']), count((array)$_POST['uom_id']), count((array)$_POST['qty_requested']));","            for ($i=0; $i<$n; $i++) {","                $items[] = [","                    'item_id' => (int)($_POST['item_id'][$i] ?? 0),","                    'uom_id'  => (int)($_POST['uom_id'][$i] ?? 0),","                    'qty_requested' => (float)($_POST['qty_requested'][$i] ?? 0),","                    'remarks' => trim((string)($_POST['remarks'][$i] ?? '')),","                ];","            }","            $data['items'] = $items;","        }","        return $data;","    }","","    // Nothing usable","    return [];","}","","try {","    require_permission('stores.req.manage');","    $pdo = db();","","    $data = read_input_mixed();","    if (!$data) {","        throw new RuntimeException('No input received. Send JSON or form fields.');","    }","","    $project_id = isset($data['project_id']) && (int)$data['project_id'] > 0 ? (int)$data['project_id'] : null;","    $requested_by_type = ($data['requested_by_type'] ?? 'staff') === 'contractor' ? 'contractor' : 'staff';","    $requested_by_id = (int)($data['requested_by_id'] ?? 0);","    if ($requested_by_id <= 0) throw new RuntimeException('requested_by_id required (staff/contractor id).');","","    $items = $data['items'] ?? [];","    if (!is_array($items) || count($items) === 0) {","        throw new RuntimeException('No items provided (items[] required).');","    }","","    $req_no = NumberingService::next($pdo, 'REQ');","    $user_id = (int)($_SESSION['user_id'] ?? 0);","","    $pdo->beginTransaction();","    $stmt = $pdo->prepare(\"","      INSERT INTO material_requisitions","      (req_no, project_id, requested_by_type, requested_by_id, requested_date, status, remarks, created_by)","      VALUES (?, ?, ?, ?, CURRENT_DATE, 'requested', ?, ?)","    \");","    $stmt->execute([","        $req_no,","        $project_id,","        $requested_by_type,","        $requested_by_id,","        trim((string)($data['remarks'] ?? '')),","        $user_id","    ]);","    $req_id = (int)$pdo->lastInsertId();","","    $lineIns = $pdo->prepare(\"","      INSERT INTO material_requisition_items","      (req_id, item_id, uom_id, qty_requested, qty_issued, remarks)","      VALUES (?, ?, ?, ?, 0, ?)","    \");","    foreach ($items as $it) {","        $item_id = (int)($it['item_id'] ?? 0);","        $uom_id  = (int)($it['uom_id'] ?? 0);","        $qty_req = (float)($it['qty_requested'] ?? 0);","        $lrmk    = trim((string)($it['remarks'] ?? ''));","        if ($item_id <= 0 || $uom_id <= 0 || $qty_req <= 0) {","            throw new RuntimeException('Invalid line (item_id/uom_id/qty_requested).');","        }","        $lineIns->execute([$req_id, $item_id, $uom_id, $qty_req, $lrmk]);","    }","","    audit_log($pdo, 'material_requisitions', 'create', $req_id, json_encode($data));","    $pdo->commit();","","    echo json_encode(['ok' => true, 'req_id' => $req_id, 'req_no' => $req_no], JSON_UNESCAPED_SLASHES|JSON_UNESCAPED_UNICODE);","} catch (Throwable $e) {","    http_response_code(400);","    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/settlement_add_piece.php": ["<?php","declare(strict_types=1);","require_once dirname(__DIR__,2) . '/includes/auth.php';","require_once dirname(__DIR__,2) . '/includes/db.php';","require_once dirname(__DIR__,2) . '/includes/rbac.php';","require_once dirname(__DIR__,2) . '/includes/coupler/SettlementService.php';","header('Content-Type: application/json');","","try {","  require_login(); require_permission('stores.settlement.edit');","  $pdo = db();","  $in  = json_decode(file_get_contents('php://input'), true) ?: $_POST;","","  $svc = new \\Coupler\\SettlementService($pdo);","  $res = $svc->addPiece(","    (int)($in['settlement_id'] ?? 0),","    (int)($in['piece_id'] ?? 0),","    (float)($in['rate'] ?? 0)","  );","","  echo json_encode(['ok'=>true,'data'=>$res]);","} catch (Throwable $e) {","  http_response_code(400);","  echo json_encode(['ok'=>false,'error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_ajax/issue_post.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/IssueService.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('stores.issue.post'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\IssueService($pdo);","  $res=$svc->post((int)($in['issue_id']??0));","  echo json_encode(['ok'=>true,'data'=>$res]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/stock_adjust_list.php": ["<?php","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_permission('stocks.adjust.manage');","$pdo = db();","","/* Fetch filters */","$from = $_GET['from'] ?? date('Y-m-01');","$to   = $_GET['to']   ?? date('Y-m-d');","$wh   = isset($_GET['warehouse_id']) && $_GET['warehouse_id'] !== '' ? (int)$_GET['warehouse_id'] : null;","$mode = isset($_GET['mode']) && $_GET['mode'] !== '' ? strtoupper($_GET['mode']) : null;","$q    = trim($_GET['q'] ?? '');","","$page = max(1, (int)($_GET['page'] ?? 1));","$pp   = 25;","$off  = ($page - 1) * $pp;","","/* Warehouses for filter */","$warehouses = $pdo->query(\"SELECT id, COALESCE(name, CONCAT('WH-',id)) AS name FROM warehouses ORDER BY 2\")->fetchAll(PDO::FETCH_ASSOC);","","/* Build WHERE */","$where = [\"adj_date BETWEEN :from AND :to\"];","$args  = [':from'=>$from, ':to'=>$to];","","if ($wh)   { $where[] = \"warehouse_id = :wh\"; $args[':wh'] = $wh; }","if ($mode) { $where[] = \"mode = :mode\";       $args[':mode'] = $mode; }","if ($q !== ''){","  $where[] = \"(adj_no LIKE :q OR remarks LIKE :q)\";","  $args[':q'] = \"%{$q}%\";","}","$sqlWhere = implode(' AND ', $where);","","/* Count */","$stmtCnt = $pdo->prepare(\"SELECT COUNT(*) FROM stock_adjustments WHERE $sqlWhere\");","$stmtCnt->execute($args);","$total = (int)$stmtCnt->fetchColumn();","","/* Data */","$sql = \""," SELECT sa.id, sa.adj_no, sa.adj_date, sa.mode, sa.warehouse_id, sa.remarks, sa.status,","        COALESCE(w.name, CONCAT('WH-',sa.warehouse_id)) AS warehouse_name,","        (SELECT SUM(l.qty) FROM stock_adjustment_items l WHERE l.adj_id = sa.id) AS line_qty"," FROM stock_adjustments sa"," LEFT JOIN warehouses w ON w.id = sa.warehouse_id"," WHERE $sqlWhere"," ORDER BY sa.adj_date DESC, sa.id DESC"," LIMIT $pp OFFSET $off","\";","$stmt = $pdo->prepare($sql);","$stmt->execute($args);","$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);","?>","<!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>Stock Adjustments</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <style>","    body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;margin:16px}","    .card{border:1px solid #ddd;border-radius:8px;padding:16px;margin-bottom:16px}","    .row{display:flex;flex-wrap:wrap;gap:12px;align-items:flex-end}","    .field{display:flex;flex-direction:column;min-width:180px}","    table{width:100%;border-collapse:collapse;font-size:14px}","    th,td{border-bottom:1px solid #eee;padding:8px;text-align:left}","    th{background:#fafafa}","    .btn{display:inline-block;padding:6px 10px;border:1px solid #ccc;border-radius:6px;background:#fff;text-decoration:none;color:#111}","    .pager{display:flex;gap:8px;align-items:center}","    .muted{opacity:.75}","    .tag{display:inline-block;padding:2px 6px;border:1px solid #aaa;border-radius:4px;font-size:12px}","  </style>","</head>","<body>","","<div class=\"card\">","  <h2>Stock Adjustments</h2>","  <form method=\"get\" class=\"row\">","    <div class=\"field\">","      <label>From</label>","      <input type=\"date\" name=\"from\" value=\"<?=htmlspecialchars($from)?>\">","    </div>","    <div class=\"field\">","      <label>To</label>","      <input type=\"date\" name=\"to\" value=\"<?=htmlspecialchars($to)?>\">","    </div>","    <div class=\"field\">","      <label>Warehouse</label>","      <select name=\"warehouse_id\">","        <option value=\"\">-- All --</option>","        <?php foreach($warehouses as $w): ?>","          <option value=\"<?=$w['id']?>\" <?=($wh===$w['id']?'selected':'')?>>","            <?=htmlspecialchars($w['name'])?>","          </option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"field\">","      <label>Mode</label>","      <select name=\"mode\">","        <option value=\"\">-- All --</option>","        <option value=\"IN\"  <?=($mode==='IN'?'selected':'')?>>IN (+)</option>","        <option value=\"OUT\" <?=($mode==='OUT'?'selected':'')?>>OUT (-)</option>","      </select>","    </div>","    <div class=\"field\" style=\"flex:1;\">","      <label>Search</label>","      <input type=\"text\" name=\"q\" value=\"<?=htmlspecialchars($q)?>\" placeholder=\"Adj No / Remarks\">","    </div>","    <div class=\"field\">","      <label>&nbsp;</label>","      <button class=\"btn\" type=\"submit\">Filter</button>","    </div>","  </form>","</div>","","<div class=\"card\">","  <div class=\"row\" style=\"justify-content:space-between;\">","    <div class=\"muted\"><?=number_format($total)?> result(s)</div>","    <div class=\"pager\">","      <?php","      $pages = max(1, (int)ceil($total/$pp));","      $base  = strtok($_SERVER['REQUEST_URI'],'?');","      $qs    = $_GET; // mutable copy","      $qs['page'] = max(1,$page-1);","      $prevUrl = $base . '?' . http_build_query($qs);","      $qs['page'] = min($pages,$page+1);","      $nextUrl = $base . '?' . http_build_query($qs);","      ?>","      <a class=\"btn\" href=\"<?=$prevUrl?>\">&laquo; Prev</a>","      <span class=\"muted\">Page <?=$page?> / <?=$pages?></span>","      <a class=\"btn\" href=\"<?=$nextUrl?>\">Next &raquo;</a>","    </div>","  </div>","","  <table>","    <thead>","      <tr>","        <th>Date</th>","        <th>Adj No</th>","        <th>Warehouse</th>","        <th>Mode</th>","        <th>Total Qty</th>","        <th>Status</th>","        <th></th>","      </tr>","    </thead>","    <tbody>","      <?php foreach($rows as $r): ?>","        <tr>","          <td><?=htmlspecialchars($r['adj_date'])?></td>","          <td><?=htmlspecialchars($r['adj_no'])?></td>","          <td><?=htmlspecialchars($r['warehouse_name'])?></td>","          <td><span class=\"tag\"><?=$r['mode']==='IN'?'IN (+)':'OUT (-)'?></span></td>","          <td><?=number_format((float)$r['line_qty'],3)?></td>","          <td><?=htmlspecialchars(strtoupper($r['status']))?></td>","          <td><a class=\"btn\" href=\"stock_adjust_view.php?id=<?=$r['id']?>\">View</a></td>","        </tr>","      <?php endforeach; ?>","      <?php if (!$rows): ?>","        <tr><td colspan=\"7\" class=\"muted\">No data.</td></tr>","      <?php endif; ?>","    </tbody>","  </table>","</div>","","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/purchase_advice_view.php": ["<?php","/** PATH: /public_html/stores/purchase_advice_view.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_permission('purchase.advice.view');","","$pdo = db();","$id = (int)($_GET['id'] ?? 0);","if ($id <= 0) {","  http_response_code(400);","  exit('Invalid advice id');","}","","/* -------- Header -------- */","$h = $pdo->prepare(\"","  SELECT pa.id, pa.advice_no, pa.advice_date, pa.warehouse_id, pa.status, pa.remarks,","         w.code AS wh_code, w.name AS wh_name,","         u.name  AS created_by_name","  FROM purchase_advice pa","  JOIN warehouses w ON w.id = pa.warehouse_id","  LEFT JOIN users u    ON u.id = pa.created_by","  WHERE pa.id = ?","\");","$h->execute([$id]);","$hdr = $h->fetch(PDO::FETCH_ASSOC);","if (!$hdr) {","  http_response_code(404);","  exit('Purchase Advice not found');","}","","/* -------- Lines -------- */","$ls = $pdo->prepare(\"","  SELECT ai.id, ai.item_id, ai.uom_id, ai.onhand, ai.min_qty, ai.max_qty,","         ai.reorder_point, ai.safety_stock, ai.suggested_qty, ai.remarks,","         it.material_code, it.name AS item_name,","         u.code AS uom_code, u.name AS uom_name","  FROM purchase_advice_items ai","  JOIN items it ON it.id = ai.item_id","  LEFT JOIN uom   u ON u.id = ai.uom_id","  WHERE ai.advice_id = ?","  ORDER BY it.name","\");","$ls->execute([$id]);","$rows = $ls->fetchAll(PDO::FETCH_ASSOC);","","/* Permissions */","$can_convert_indent = function_exists('has_permission') ? has_permission('purchase.indent.manage') : true;","","$page_title = 'Purchase Advice';","require_once __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container-fluid py-3\">","","  <div class=\"d-flex justify-content-between align-items-center mb-2\">","    <h1 class=\"h4 mb-0\"><?= htmlspecialchars($page_title) ?> <span class=\"text-muted\">#<?= htmlspecialchars($hdr['advice_no']) ?></span></h1>","    <div class=\"d-flex gap-2\">","      <a href=\"purchase_advice_list.php\" class=\"btn btn-sm btn-outline-secondary\">Back</a>","","      <!-- \u2705 Convert to Indent (replaces Create PR) -->","      <?php if ($can_convert_indent): ?>","        <button id=\"btnToIndent\" class=\"btn btn-sm btn-primary\">Convert to Indent</button>","      <?php endif; ?>","","      <!-- (No Create PR button anymore) -->","    </div>","  </div>","","  <div class=\"row g-3 mb-3\">","    <div class=\"col-md-3\">","      <div class=\"small text-muted\">Advice No</div>","      <div class=\"fw-semibold\"><?= htmlspecialchars($hdr['advice_no']) ?></div>","    </div>","    <div class=\"col-md-3\">","      <div class=\"small text-muted\">Advice Date</div>","      <div class=\"fw-semibold\"><?= htmlspecialchars($hdr['advice_date']) ?></div>","    </div>","    <div class=\"col-md-4\">","      <div class=\"small text-muted\">Warehouse</div>","      <div class=\"fw-semibold\"><span class=\"badge bg-secondary-subtle text-secondary border\"><?= htmlspecialchars($hdr['wh_code']) ?></span> <?= htmlspecialchars($hdr['wh_name']) ?></div>","    </div>","    <div class=\"col-md-2\">","      <div class=\"small text-muted\">Status</div>","      <?php","        $cls = ['draft'=>'warning','approved'=>'success','cancelled'=>'danger'][$hdr['status']] ?? 'secondary';","      ?>","      <div><span class=\"badge bg-<?= $cls ?>-subtle text-<?= $cls ?> border\"><?= htmlspecialchars($hdr['status']) ?></span></div>","    </div>","    <div class=\"col-12\">","      <div class=\"small text-muted\">Remarks</div>","      <div><?= htmlspecialchars($hdr['remarks'] ?? '\u2014') ?></div>","    </div>","  </div>","","  <div class=\"table-responsive\">","    <table class=\"table table-sm align-middle\">","      <thead class=\"table-light\">","        <tr>","          <th>#</th>","          <th>Item</th>","          <th class=\"text-center\">UOM</th>","          <th class=\"text-end\">On-hand</th>","          <th class=\"text-end\">Min</th>","          <th class=\"text-end\">ROP</th>","          <th class=\"text-end\">Safety</th>","          <th class=\"text-end\">Max</th>","          <th class=\"text-end\">Suggested</th>","          <th>Remarks</th>","        </tr>","      </thead>","      <tbody>","        <?php if (!$rows): ?>","          <tr><td colspan=\"10\" class=\"text-center text-muted py-4\">No lines.</td></tr>","        <?php else: $i=1; foreach ($rows as $r): ?>","          <tr>","            <td><?= $i++ ?></td>","            <td class=\"fw-semibold\"><?= htmlspecialchars(($r['material_code'] ? ($r['material_code'].' \u2014 ') : '').$r['item_name']) ?></td>","            <td class=\"text-center\"><?= htmlspecialchars($r['uom_code'] ?? $r['uom_name'] ?? '') ?></td>","            <td class=\"text-end\"><?= number_format((float)$r['onhand'], 3) ?></td>","            <td class=\"text-end\"><?= number_format((float)$r['min_qty'], 3) ?></td>","            <td class=\"text-end\"><?= number_format((float)$r['reorder_point'], 3) ?></td>","            <td class=\"text-end\"><?= number_format((float)$r['safety_stock'], 3) ?></td>","            <td class=\"text-end\"><?= number_format((float)$r['max_qty'], 3) ?></td>","            <td class=\"text-end fw-semibold\"><?= number_format((float)$r['suggested_qty'], 3) ?></td>","            <td class=\"small text-muted\"><?= htmlspecialchars($r['remarks'] ?? '') ?></td>","          </tr>","        <?php endforeach; endif; ?>","      </tbody>","    </table>","  </div>","</div>","","<?php if ($can_convert_indent): ?>","<script>","document.getElementById('btnToIndent')?.addEventListener('click', async ()=>{","  if (!confirm('Create a Purchase Indent from this Advice?')) return;","  const b = document.getElementById('btnToIndent');","  b.disabled = true; b.textContent = 'Converting\u2026';","  try {","    const resp = await fetch('_ajax/pa_to_indent.php', {","      method: 'POST',","      headers: {'Content-Type':'application/json'},","      body: JSON.stringify({ advice_id: <?= (int)$hdr['id'] ?> })","    });","    const raw = await resp.text();","    const s = raw.indexOf('{'), e = raw.lastIndexOf('}');","    const data = JSON.parse((s!=-1 && e!=-1 && e>s) ? raw.slice(s,e+1) : raw);","    if (data.ok) {","      // \u2705 success: go to Indent View page if you have it","      // Change the path below if your indent view file name differs","      location.href = 'purchase_indent_view.php?id=' + data.indent_id;","    } else {","      alert('Failed: ' + (data.error || 'Unknown error'));","    }","  } catch (err) {","    alert('Error: ' + (err?.message || err));","  } finally {","    b.disabled = false; b.textContent = 'Convert to Indent';","  }","});","</script>","<?php endif; ?>","","<?php require_once __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/transfer_view.php": ["<?php","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_permission('stores.transfer.manage');","$pdo = db();","","$id = (int)($_GET['id'] ?? 0);","if ($id <= 0) { http_response_code(404); exit('Not found'); }","","/* Header */","$hdr = $pdo->prepare(\"","  SELECT t.*, ","         COALESCE(wf.name, CONCAT('WH-',t.from_warehouse_id)) AS from_wh_name,","         COALESCE(wt.name, CONCAT('WH-',t.to_warehouse_id))   AS to_wh_name","  FROM stock_transfers t","  LEFT JOIN warehouses wf ON wf.id = t.from_warehouse_id","  LEFT JOIN warehouses wt ON wt.id = t.to_warehouse_id","  WHERE t.id = :id","\");","$hdr->execute([':id'=>$id]);","$h = $hdr->fetch(PDO::FETCH_ASSOC);","if (!$h) { http_response_code(404); exit('Not found'); }","","/* Lines */","$lines = $pdo->prepare(\"","  SELECT l.*, i.material_code, i.name AS item_name, u.code AS uom_code, u.name AS uom_name","  FROM stock_transfer_items l","  LEFT JOIN items i ON i.id = l.item_id","  LEFT JOIN uom   u ON u.id = l.uom_id","  WHERE l.transfer_id = :id","  ORDER BY l.id","\");","$lines->execute([':id'=>$id]);","$ls = $lines->fetchAll(PDO::FETCH_ASSOC);","","/* Movements */","$moves = $pdo->prepare(\"","  SELECT id, txn_date, txn_type, txn_no, item_id, warehouse_id, qty, uom_id, unit_cost","  FROM stock_moves","  WHERE ref_entity = 'stock_transfers' AND ref_id = :id","  ORDER BY id","\");","$moves->execute([':id'=>$id]);","$mv = $moves->fetchAll(PDO::FETCH_ASSOC);","","/* Ledger */","$ledger = $pdo->prepare(\"","  SELECT id, txn_date, txn_type, txn_no, item_id, warehouse_id, qty, rate","  FROM stock_ledger","  WHERE ref_table = 'stock_transfers' AND ref_id = :id","  ORDER BY id","\");","$ledger->execute([':id'=>$id]);","$lg = $ledger->fetchAll(PDO::FETCH_ASSOC);","?>","<!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>Transfer <?=htmlspecialchars($h['trn_no'] ?? ('#'.$id))?></title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <style>","    body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;margin:16px}","    .card{border:1px solid #ddd;border-radius:8px;padding:16px;margin-bottom:16px}","    table{width:100%;border-collapse:collapse;font-size:14px}","    th,td{border-bottom:1px solid #eee;padding:8px;text-align:left}","    th{background:#fafafa}","    .grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(220px,1fr));gap:12px}","    .muted{opacity:.75}","  </style>","</head>","<body>","","<div class=\"card\">","  <h2>Stock Transfer \u2014 <?=htmlspecialchars($h['trn_no'] ?? ('#'.$id))?></h2>","  <div class=\"grid\">","    <div><b>Date:</b> <?=htmlspecialchars(substr($h['created_at'],0,19))?></div>","    <div><b>From:</b> <?=htmlspecialchars($h['from_wh_name'])?></div>","    <div><b>To:</b>   <?=htmlspecialchars($h['to_wh_name'])?></div>","    <div><b>Status:</b> <?=htmlspecialchars(strtoupper($h['status'] ?? 'POSTED'))?></div>","    <?php if (!empty($h['remarks'])): ?>","      <div class=\"muted\"><b>Remarks:</b> <?=htmlspecialchars($h['remarks'])?></div>","    <?php endif; ?>","  </div>","</div>","","<div class=\"card\">","  <h3>Lines</h3>","  <table>","    <thead>","      <tr>","        <th>#</th>","        <th>Item</th>","        <th>UoM</th>","        <th>Qty</th>","        <th>From Bin</th>","        <th>To Bin</th>","        <th>Remarks</th>","      </tr>","    </thead>","    <tbody>","      <?php $i=0; foreach($ls as $r): $i++; ?>","        <tr>","          <td><?=$i?></td>","          <td><?=htmlspecialchars(($r['material_code'] ?? 'ITEM-'.$r['item_id']).' \u2014 '.($r['item_name'] ?? ''))?></td>","          <td><?=htmlspecialchars(($r['uom_code'] ?? 'ID '.$r['uom_id']).' \u2014 '.($r['uom_name'] ?? ''))?></td>","          <td><?=number_format((float)$r['qty'],3)?></td>","          <td><?=htmlspecialchars($r['from_bin_id'] ?? '')?></td>","          <td><?=htmlspecialchars($r['to_bin_id'] ?? '')?></td>","          <td><?=htmlspecialchars($r['remarks'] ?? '')?></td>","        </tr>","      <?php endforeach; if (!$ls): ?>","        <tr><td colspan=\"7\" class=\"muted\">No lines found.</td></tr>","      <?php endif; ?>","    </tbody>","  </table>","</div>","","<div class=\"card\">","  <h3>Movements</h3>","  <table>","    <thead>","      <tr>","        <th>#</th>","        <th>Date</th>","        <th>Type</th>","        <th>Item</th>","        <th>Warehouse</th>","        <th>Qty</th>","        <th>UoM</th>","        <th>Rate</th>","      </tr>","    </thead>","    <tbody>","      <?php foreach($mv as $j=>$m): ?>","        <tr>","          <td><?=($j+1)?></td>","          <td><?=htmlspecialchars($m['txn_date'])?></td>","          <td><?=htmlspecialchars($m['txn_type'])?></td>","          <td><?= (int)$m['item_id'] ?></td>","          <td><?= (int)$m['warehouse_id'] ?></td>","          <td><?= number_format((float)$m['qty'],3) ?></td>","          <td><?= (int)$m['uom_id'] ?></td>","          <td><?= number_format((float)$m['unit_cost'],4) ?></td>","        </tr>","      <?php endforeach; if (!$mv): ?>","        <tr><td colspan=\"8\" class=\"muted\">No movements found.</td></tr>","      <?php endif; ?>","    </tbody>","  </table>","</div>","","<div class=\"card\">","  <h3>Ledger</h3>","  <table>","    <thead>","      <tr>","        <th>#</th>","        <th>Date</th>","        <th>Type</th>","        <th>Item</th>","        <th>Warehouse</th>","        <th>Qty</th>","        <th>Rate</th>","      </tr>","    </thead>","    <tbody>","      <?php foreach($lg as $k=>$g): ?>","        <tr>","          <td><?=($k+1)?></td>","          <td><?=htmlspecialchars($g['txn_date'])?></td>","          <td><?=htmlspecialchars($g['txn_type'])?></td>","          <td><?= (int)$g['item_id'] ?></td>","          <td><?= (int)$g['warehouse_id'] ?></td>","          <td><?= number_format((float)$g['qty'],3) ?></td>","          <td><?= number_format((float)$g['rate'],4) ?></td>","        </tr>","      <?php endforeach; if (!$lg): ?>","        <tr><td colspan=\"7\" class=\"muted\">No ledger rows found.</td></tr>","      <?php endif; ?>","    </tbody>","  </table>","</div>","","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/transfer_post.php": ["<?php","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/audit.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_once __DIR__ . '/../includes/services/NumberingService.php';","require_once __DIR__ . '/../includes/services/StockMoveWriter.php';","require_once __DIR__ . '/../includes/services/ValuationService.php';","require_once __DIR__ . '/../includes/StockLedgerAdapter.php';","","header('Content-Type: application/json');","","try {","    require_permission('stores.transfer.manage');","","    $raw   = file_get_contents('php://input');","    $input = json_decode($raw, true);","    if (!$input) { $input = $_POST; }","    if (!empty($_POST)) { csrf_require_token($_POST['csrf_token'] ?? ''); }","","    $pdo = db();","","    $userId = (int)($_SESSION['user_id'] ?? 0);","    $now    = date('Y-m-d H:i:s');","","    $fromWhId  = (int)($input['from_warehouse_id'] ?? 0);","    $toWhId    = (int)($input['to_warehouse_id'] ?? 0);","    $fromBinId = isset($input['from_bin_id']) ? (int)$input['from_bin_id'] : null;","    $toBinId   = isset($input['to_bin_id'])   ? (int)$input['to_bin_id']   : null;","    $projectId = isset($input['project_id'])  ? (int)$input['project_id']  : null;","    $remarks   = trim($input['remarks'] ?? '');","","    // normalize lines (supports form-encoded or JSON payloads)","    $lines = [];","    if (isset($input['lines']['item_id'])) {","        $cnt = count($input['lines']['item_id']);","        for ($i=0; $i<$cnt; $i++) {","            $lines[] = [","                'item_id'  => (int)($input['lines']['item_id'][$i] ?? 0),","                'uom_id'   => isset($input['lines']['uom_id'][$i]) ? (int)$input['lines']['uom_id'][$i] : null,","                'qty'      => (float)($input['lines']['qty'][$i] ?? 0),","                'batch_id' => isset($input['lines']['batch_id'][$i]) ? (int)$input['lines']['batch_id'][$i] : null,","                'remarks'  => trim($input['lines']['remarks'][$i] ?? '')","            ];","        }","    } else {","        $lines = $input['lines'] ?? [];","    }","","    // Validation","    if ($fromWhId <= 0 || $toWhId <= 0) {","        throw new RuntimeException('Source and destination warehouses are required.');","    }","    if (empty($lines)) {","        throw new RuntimeException('At least one line is required.');","    }","    // Allow same-warehouse transfer only if bins are used (and not the same bin)","    if ($fromWhId === $toWhId) {","        if (!$fromBinId && !$toBinId) {","            throw new RuntimeException('Same-warehouse transfer requires selecting From Bin and/or To Bin.');","        }","        if ($fromBinId && $toBinId && $fromBinId === $toBinId) {","            throw new RuntimeException('From Bin and To Bin cannot be the same for same-warehouse transfer.');","        }","    }","","    // Begin","    $pdo->beginTransaction();","","    // Use TRF (mapped to transfer_sequences) as per your NumberingService MAP","    $trnNo = NumberingService::next($pdo, 'TRF');","","    // Header","    $pdo->prepare(\"","        INSERT INTO stock_transfers","            (trn_no, from_warehouse_id, to_warehouse_id, from_bin_id, to_bin_id, project_id, remarks, status, created_by, created_at)","        VALUES","            (:trn_no, :from_wh, :to_wh, :from_bin, :to_bin, :project_id, :remarks, 'POSTED', :created_by, :created_at)","    \")->execute([","        ':trn_no'     => $trnNo,","        ':from_wh'    => $fromWhId,","        ':to_wh'      => $toWhId,","        ':from_bin'   => $fromBinId,","        ':to_bin'     => $toBinId,","        ':project_id' => $projectId,","        ':remarks'    => $remarks,","        ':created_by' => $userId,","        ':created_at' => $now,","    ]);","    $trnId = (int)$pdo->lastInsertId();","","    // Optional line mirror","    $insLine = $pdo->prepare(\"","        INSERT INTO stock_transfer_items","            (transfer_id, line_no, item_id, uom_id, qty, from_bin_id, to_bin_id, batch_id, remarks)","        VALUES","            (:transfer_id, :line_no, :item_id, :uom_id, :qty, :from_bin_id, :to_bin_id, :batch_id, :remarks)","    \");","","    // Source WA rate (for ledger valuation)","    $waQ = $pdo->prepare(\"SELECT avg_cost FROM stock_avg WHERE item_id = :i AND warehouse_id = :w\");","","    $lineNo = 0;","    foreach ($lines as $ln) {","        $lineNo++;","        $itemId  = (int)($ln['item_id'] ?? 0);","        $uomId   = isset($ln['uom_id']) ? (int)$ln['uom_id'] : null;","        $qty     = (float)($ln['qty'] ?? 0);","        $batchId = isset($ln['batch_id']) ? (int)$ln['batch_id'] : null;","        $lnRem   = trim($ln['remarks'] ?? '');","","        if ($itemId <= 0 || $qty <= 0) {","            throw new RuntimeException(\"Invalid line {$lineNo}: item and qty required.\");","        }","","        $insLine->execute([","            ':transfer_id' => $trnId,","            ':line_no'     => $lineNo,","            ':item_id'     => $itemId,","            ':uom_id'      => $uomId,","            ':qty'         => $qty,","            ':from_bin_id' => $fromBinId,","            ':to_bin_id'   => $toBinId,","            ':batch_id'    => $batchId,","            ':remarks'     => $lnRem,","        ]);","","        $waQ->execute([':i' => $itemId, ':w' => $fromWhId]);","        $waRow = $waQ->fetch(PDO::FETCH_ASSOC);","        $rate  = ($waRow && (float)$waRow['avg_cost'] > 0) ? (float)$waRow['avg_cost'] : 0.0;","","        // OUT from source","        $outPayload = [","            'txn_type'     => 'TRF',","            'txn_no'       => $trnNo,","            'txn_date'     => $now,","            'item_id'      => $itemId,","            'uom_id'       => $uomId,","            'warehouse_id' => $fromWhId,","            'bin_id'       => $fromBinId,","            'batch_id'     => $batchId,","            'project_id'   => $projectId,","            'qty'          => $qty,","            'unit_cost'    => $rate,","            'ref_entity'   => 'stock_transfers',","            'ref_table'    => 'stock_transfers',","            'ref_id'       => $trnId,","            'created_by'   => $userId,","        ];","        StockMoveWriter::postOut($pdo, $outPayload);","        ValuationService::onIssue($pdo, $itemId, $fromWhId, $qty);","        StockLedgerAdapter::mirror($pdo, $outPayload);","","        // IN to destination","        $inPayload = [","            'txn_type'     => 'TRF',","            'txn_no'       => $trnNo,","            'txn_date'     => $now,","            'item_id'      => $itemId,","            'uom_id'       => $uomId,","            'warehouse_id' => $toWhId,","            'bin_id'       => $toBinId,","            'batch_id'     => $batchId,","            'project_id'   => $projectId,","            'qty'          => $qty,","            'unit_cost'    => $rate,","            'ref_entity'   => 'stock_transfers',","            'ref_table'    => 'stock_transfers',","            'ref_id'       => $trnId,","            'created_by'   => $userId,","        ];","        StockMoveWriter::postIn($pdo, $inPayload);","        // Your ValuationService implements onPositiveReceipt (not onReceipt)","        ValuationService::onPositiveReceipt($pdo, $itemId, $toWhId, $qty, $rate);","        StockLedgerAdapter::mirror($pdo, $inPayload);","    }","","    // \u2705 FIX: pass $pdo as the 1st argument to audit_log","    try {","        audit_log($pdo, 'stock_transfers', $trnId, 'POST', null, ['trn_no' => $trnNo, 'lines' => count($lines)]);","    } catch (Throwable $ae) {","        // Don't fail the whole transaction if auditing fails","        error_log('audit_log failed: ' . $ae->getMessage());","    }","","    $pdo->commit();","    echo json_encode(['ok' => true, 'transfer_id' => $trnId, 'trn_no' => $trnNo]);","","} catch (Throwable $e) {","    if (isset($pdo) && $pdo instanceof PDO && $pdo->inTransaction()) {","        $pdo->rollBack();","    }","    error_log($e);","    http_response_code(400);","    echo json_encode(['ok' => false, 'error' => $e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/stock_onhand_api.php": ["<?php","/** PATH: /public_html/stores/stock_onhand_api.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_permission('stores.ledger.view');","header('Content-Type: application/json');","","try{","  $pdo = db();","  $item_id = (int)($_GET['item_id']??0);","  $warehouse_id = isset($_GET['warehouse_id']) ? (int)$_GET['warehouse_id'] : null;","","  if ($item_id<=0) throw new RuntimeException('item_id required');","","  if ($warehouse_id) {","    $st = $pdo->prepare(\"SELECT COALESCE(SUM(qty),0) qty FROM stock_onhand WHERE item_id=? AND warehouse_id=?\");","    $st->execute([$item_id,$warehouse_id]);","    $qty = (float)$st->fetchColumn();","    echo json_encode(['ok'=>true,'item_id'=>$item_id,'warehouse_id'=>$warehouse_id,'onhand'=>$qty]);","  } else {","    $st = $pdo->prepare(\"SELECT warehouse_id, COALESCE(SUM(qty),0) qty FROM stock_onhand WHERE item_id=? GROUP BY warehouse_id\");","    $st->execute([$item_id]);","    echo json_encode(['ok'=>true,'item_id'=>$item_id,'by_warehouse'=>$st->fetchAll(PDO::FETCH_ASSOC)]);","  }","}catch(Throwable $e){","  http_response_code(400);","  echo json_encode(['ok'=>false,'error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/issue_view.php": ["<?php","/** PATH: /public_html/stores/issue_view.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_permission('stores.issue.view');","","$pdo = db();","","function best_code_col(PDO $pdo, string $table): ?string {","  $db = $pdo->query(\"SELECT DATABASE()\")->fetchColumn();","  foreach (['code','material_code'] as $c) {","    $q = $pdo->prepare(\"SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=? AND TABLE_NAME=? AND COLUMN_NAME=?\");","    $q->execute([$db,$table,$c]);","    if ((int)$q->fetchColumn()>0) return $c;","  }","  return null;","}","","$id = (int)($_GET['id'] ?? 0);","$hdr = null; $lines=[];","if ($id>0){","  $st = $pdo->prepare(\"SELECT mi.*, w.name AS wh_name, w.code AS wh_code, pr.code AS project_code, pr.name AS project_name","                       FROM material_issues mi","                       LEFT JOIN warehouses w ON w.id = mi.issued_from_warehouse_id","                       LEFT JOIN projects pr ON pr.id = mi.project_id","                       WHERE mi.id=?\");","  $st->execute([$id]); $hdr=$st->fetch(PDO::FETCH_ASSOC);","","  $iCode = best_code_col($pdo,'items') ?: 'id'; // fallback to id label if none","  $uCode = best_code_col($pdo,'uom');","","  $iCodeSel = $iCode ? \"i.`$iCode` AS item_code,\" : \"'' AS item_code,\";","  $uCodeSel = $uCode ? \"u.`$uCode` AS uom_code,\"  : \"'' AS uom_code,\";","","  $sql = \"SELECT mii.*, {$iCodeSel} i.name AS item_name, {$uCodeSel} u.name AS uom_name","          FROM material_issue_items mii","          JOIN items i ON i.id = mii.item_id","          JOIN uom u   ON u.id = mii.uom_id","          WHERE mii.issue_id=? ORDER BY mii.id\";","  $st2 = $pdo->prepare($sql);","  $st2->execute([$id]); $lines=$st2->fetchAll(PDO::FETCH_ASSOC);","}","","$page_title = $hdr ? (\"Issue \".$hdr['issue_no']) : \"Issue\";","require_once __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container py-3\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h1 class=\"h4 mb-0\"><?= htmlspecialchars($page_title) ?></h1>","    <div><a href=\"issues_list.php\" class=\"btn btn-outline-secondary btn-sm\">Back</a></div>","  </div>","","  <?php if(!$hdr): ?>","    <div class=\"alert alert-warning\">Issue not found.</div>","  <?php else: ?>","    <div class=\"row g-2 mb-3\">","      <div class=\"col-md-3\"><div class=\"small text-muted\">Issue No</div><div class=\"fw-semibold\"><?= htmlspecialchars($hdr['issue_no']) ?></div></div>","      <div class=\"col-md-3\"><div class=\"small text-muted\">Date</div><div class=\"fw-semibold\"><?= htmlspecialchars($hdr['issue_date']) ?></div></div>","      <div class=\"col-md-3\"><div class=\"small text-muted\">Warehouse</div><div class=\"fw-semibold\"><?= htmlspecialchars(($hdr['wh_code']??'').' \u2014 '.($hdr['wh_name']??'')) ?></div></div>","      <div class=\"col-md-3\"><div class=\"small text-muted\">Project</div>","        <div class=\"fw-semibold\">","          <?php if ($hdr['project_id']): ?>","            <span class=\"badge bg-info-subtle text-info border\"><?= htmlspecialchars($hdr['project_code']??'') ?></span>","            <?= htmlspecialchars($hdr['project_name']??'') ?>","          <?php else: ?>\u2014<?php endif; ?>","        </div>","      </div>","    </div>","","    <div class=\"table-responsive\">","      <table class=\"table table-sm align-middle\">","        <thead class=\"table-light\">","          <tr>","            <th>Item</th>","            <th class=\"text-center\">UOM</th>","            <th class=\"text-end\">Qty</th>","            <th>Remarks</th>","          </tr>","        </thead>","        <tbody>","          <?php foreach ($lines as $ln): ?>","            <tr>","              <td><?= htmlspecialchars(($ln['item_code']??'').' \u2014 '.($ln['item_name']??'')) ?></td>","              <td class=\"text-center\"><?= htmlspecialchars($ln['uom_code']??$ln['uom_name']??'') ?></td>","              <td class=\"text-end\"><?= number_format((float)$ln['qty'], 3) ?></td>","              <td><?= htmlspecialchars($ln['remarks']??'') ?></td>","            </tr>","          <?php endforeach; ?>","        </tbody>","      </table>","    </div>","  <?php endif; ?>","</div>","<?php require_once __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/qc_hold_form.php": ["<?php","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_permission('stores.qc.manage');","","$pdo = db();","$warehouses = $pdo->query(\"SELECT id, name FROM warehouses ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","$bins  = $pdo->query(\"SELECT id, name, warehouse_id FROM bins ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","$items = $pdo->query(\"SELECT id, CONCAT(code,' - ',name) label FROM items ORDER BY code LIMIT 2000\")->fetchAll(PDO::FETCH_ASSOC);","$uoms  = $pdo->query(\"SELECT id, code FROM uoms ORDER BY code\")->fetchAll(PDO::FETCH_ASSOC);","$csrf = csrf_token();","?>","<!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>QC Hold</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <style>","    body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;margin:16px}","    .card{border:1px solid #ddd;border-radius:8px;padding:16px;margin-bottom:16px}","    .row{display:flex;flex-wrap:wrap;gap:12px;align-items:flex-end}","    .field{display:flex;flex-direction:column;min-width:220px}","    table{width:100%;border-collapse:collapse;font-size:14px}","    th,td{border-bottom:1px solid #eee;padding:8px;text-align:left}","    th{background:#fafafa}","    .btn{display:inline-block;padding:8px 12px;border:1px solid #ccc;border-radius:6px;background:#fff;cursor:pointer;text-decoration:none;color:#111}","    .btn.primary{border-color:#2573ef;background:#2f7df4;color:#fff}","    input,select{padding:6px}","  </style>","</head>","<body>","  <div class=\"card\">","    <h2>QC Hold</h2>","    <form method=\"post\" action=\"qc_hold_post.php\" onsubmit=\"return validateForm()\">","      <input type=\"hidden\" name=\"csrf_token\" value=\"<?=htmlspecialchars($csrf)?>\">","      <div class=\"row\">","        <div class=\"field\">","          <label>Warehouse</label>","          <select name=\"warehouse_id\" id=\"warehouse_id\" required>","            <option value=\"\">-- Select --</option>","            <?php foreach($warehouses as $w): ?>","              <option value=\"<?=$w['id']?>\"><?=htmlspecialchars($w['name'])?></option>","            <?php endforeach; ?>","          </select>","        </div>","        <div class=\"field\">","          <label>From Bin</label>","          <select name=\"from_bin_id\" id=\"from_bin_id\">","            <option value=\"\">-- Any --</option>","            <?php foreach($bins as $b): ?>","              <option data-wh=\"<?=$b['warehouse_id']?>\" value=\"<?=$b['id']?>\"><?=htmlspecialchars($b['name'])?></option>","            <?php endforeach; ?>","          </select>","        </div>","        <div class=\"field\">","          <label>QC Bin (destination)</label>","          <select name=\"qc_bin_id\" id=\"qc_bin_id\" required>","            <option value=\"\">-- Select QC Bin --</option>","            <?php foreach($bins as $b): ?>","              <option data-wh=\"<?=$b['warehouse_id']?>\" value=\"<?=$b['id']?>\"><?=htmlspecialchars($b['name'])?></option>","            <?php endforeach; ?>","          </select>","        </div>","        <div class=\"field\" style=\"flex:1\">","          <label>Reason / Remarks</label>","          <input type=\"text\" name=\"remarks\" placeholder=\"Optional\">","        </div>","      </div>","","      <div class=\"card\">","        <h3>Lines</h3>","        <table id=\"lines\">","          <thead><tr>","            <th style=\"width:35%;\">Item</th><th>UoM</th><th>Qty</th><th>Batch (optional)</th><th>Remarks</th><th></th>","          </tr></thead>","          <tbody></tbody>","        </table>","        <button class=\"btn\" type=\"button\" onclick=\"addLine()\">+ Add line</button>","      </div>","","      <button class=\"btn primary\" type=\"submit\">Hold to QC</button>","    </form>","  </div>","","<script>","const items = <?=json_encode($items)?>;","const uoms  = <?=json_encode($uoms)?>;","","function addLine(){","  const tbody = document.querySelector('#lines tbody');","  const tr = document.createElement('tr');","  tr.innerHTML = `","    <td>","      <select name=\"lines[item_id][]\" required>","        <option value=\"\">-- Select Item --</option>","        ${items.map(it=>`<option value=\"${it.id}\">${escapeHtml(it.label)}</option>`).join('')}","      </select>","    </td>","    <td>","      <select name=\"lines[uom_id][]\" required>","        <option value=\"\">-- UoM --</option>","        ${uoms.map(u=>`<option value=\"${u.id}\">${escapeHtml(u.code)}</option>`).join('')}","      </select>","    </td>","    <td><input type=\"number\" name=\"lines[qty][]\" min=\"0.001\" step=\"0.001\" required></td>","    <td><input type=\"number\" name=\"lines[batch_id][]\" step=\"1\" min=\"1\" placeholder=\"ID\"></td>","    <td><input type=\"text\" name=\"lines[remarks][]\" placeholder=\"Optional\"></td>","    <td><button class=\"btn\" type=\"button\" onclick=\"this.closest('tr').remove()\">Remove</button></td>","  `;","  tbody.appendChild(tr);","}","","function validateForm(){","  const wh = document.getElementById('warehouse_id').value;","  const fromBin = document.getElementById('from_bin_id').value;","  const qcBin = document.getElementById('qc_bin_id').value;","  if (!wh || !qcBin) { alert('Warehouse and QC bin are required'); return false; }","  if (fromBin && qcBin && fromBin === qcBin) { alert('From Bin and QC Bin cannot be same'); return false; }","  return true;","}","","function escapeHtml(str){","  return String(str).replace(/[&<>\\\"'`=\\\\/]/g, s => ({'&':'&amp;','<':'&lt;','>':'&gt;','\\\"':'&quot;',\"'\":'&#39;','/':'&#x2F;','`':'&#x60;','=':'&#x3D;','\\\\':'&#x5C;'}[s]));","}","</script>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/stock_adjust_view.php": ["<?php","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_permission('stocks.adjust.manage');","$pdo = db();","","$id = (int)($_GET['id'] ?? 0);","if ($id <= 0) { http_response_code(404); exit('Not found'); }","","/* Header */","$hdr = $pdo->prepare(\"","  SELECT sa.*, COALESCE(w.name, CONCAT('WH-',sa.warehouse_id)) AS warehouse_name","  FROM stock_adjustments sa","  LEFT JOIN warehouses w ON w.id = sa.warehouse_id","  WHERE sa.id = :id","\");","$hdr->execute([':id'=>$id]);","$h = $hdr->fetch(PDO::FETCH_ASSOC);","if (!$h) { http_response_code(404); exit('Not found'); }","","/* Lines with item & uom labels */","$lines = $pdo->prepare(\"","  SELECT l.*, ","         i.material_code, i.name AS item_name,","         u.code AS uom_code, u.name AS uom_name","  FROM stock_adjustment_items l","  LEFT JOIN items i ON i.id = l.item_id","  LEFT JOIN uom   u ON u.id = l.uom_id","  WHERE l.adj_id = :id","  ORDER BY l.id","\");","$lines->execute([':id'=>$id]);","$ls = $lines->fetchAll(PDO::FETCH_ASSOC);","","/* Movements tied to this adjustment (stock_moves uses ref_entity/ref_id) */","$moves = $pdo->prepare(\"","  SELECT id, txn_date, txn_type, txn_no, item_id, warehouse_id, qty, uom_id, unit_cost","  FROM stock_moves","  WHERE ref_entity = 'stock_adjustments' AND ref_id = :id","  ORDER BY id","\");","$moves->execute([':id'=>$id]);","$mv = $moves->fetchAll(PDO::FETCH_ASSOC);","","/* Ledger mirror (has ref_table/ref_id) */","$ledger = $pdo->prepare(\"","  SELECT id, txn_date, txn_type, txn_no, item_id, warehouse_id, qty, rate","  FROM stock_ledger","  WHERE ref_table = 'stock_adjustments' AND ref_id = :id","  ORDER BY id","\");","$ledger->execute([':id'=>$id]);","$lg = $ledger->fetchAll(PDO::FETCH_ASSOC);","?>","<!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>Adjustment <?=htmlspecialchars($h['adj_no'])?></title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <style>","    body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;margin:16px}","    .card{border:1px solid #ddd;border-radius:8px;padding:16px;margin-bottom:16px}","    table{width:100%;border-collapse:collapse;font-size:14px}","    th,td{border-bottom:1px solid #eee;padding:8px;text-align:left}","    th{background:#fafafa}","    .grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(220px,1fr));gap:12px}","    .muted{opacity:.75}","  </style>","</head>","<body>","","<div class=\"card\">","  <h2>Stock Adjustment \u2014 <?=htmlspecialchars($h['adj_no'])?></h2>","  <div class=\"grid\">","    <div><b>Date:</b> <?=htmlspecialchars($h['adj_date'])?></div>","    <div><b>Mode:</b> <?=htmlspecialchars($h['mode'])?></div>","    <div><b>Warehouse:</b> <?=htmlspecialchars($h['warehouse_name'])?></div>","    <div><b>Status:</b> <?=htmlspecialchars(strtoupper($h['status']))?></div>","    <?php if (!empty($h['reason_id'])): ?>","      <div><b>Reason ID:</b> <?= (int)$h['reason_id'] ?></div>","    <?php endif; ?>","    <?php if (!empty($h['remarks'])): ?>","      <div class=\"muted\"><b>Remarks:</b> <?=htmlspecialchars($h['remarks'])?></div>","    <?php endif; ?>","  </div>","</div>","","<div class=\"card\">","  <h3>Lines</h3>","  <table>","    <thead>","      <tr>","        <th>#</th>","        <th>Item</th>","        <th>UoM</th>","        <th>Qty</th>","        <th>Remarks</th>","      </tr>","    </thead>","    <tbody>","      <?php $i=0; foreach($ls as $r): $i++; ?>","        <tr>","          <td><?=$i?></td>","          <td><?=htmlspecialchars(($r['material_code'] ?? 'ITEM-'.$r['item_id']).' \u2014 '.($r['item_name'] ?? ''))?></td>","          <td><?=htmlspecialchars(($r['uom_code'] ?? 'ID '.$r['uom_id']).' \u2014 '.($r['uom_name'] ?? ''))?></td>","          <td><?=number_format((float)$r['qty'],3)?></td>","          <td><?=htmlspecialchars($r['remarks'] ?? '')?></td>","        </tr>","      <?php endforeach; if (!$ls): ?>","        <tr><td colspan=\"5\" class=\"muted\">No lines found.</td></tr>","      <?php endif; ?>","    </tbody>","  </table>","</div>","","<div class=\"card\">","  <h3>Movements</h3>","  <table>","    <thead>","      <tr>","        <th>#</th>","        <th>Date</th>","        <th>Type</th>","        <th>Item</th>","        <th>Warehouse</th>","        <th>Qty</th>","        <th>UoM</th>","        <th>Rate</th>","      </tr>","    </thead>","    <tbody>","      <?php foreach($mv as $j=>$m): ?>","        <tr>","          <td><?=($j+1)?></td>","          <td><?=htmlspecialchars($m['txn_date'])?></td>","          <td><?=htmlspecialchars($m['txn_type'])?></td>","          <td><?= (int)$m['item_id'] ?></td>","          <td><?= (int)$m['warehouse_id'] ?></td>","          <td><?= number_format((float)$m['qty'],3) ?></td>","          <td><?= (int)$m['uom_id'] ?></td>","          <td><?= number_format((float)$m['unit_cost'],4) ?></td>","        </tr>","      <?php endforeach; if (!$mv): ?>","        <tr><td colspan=\"8\" class=\"muted\">No movements found.</td></tr>","      <?php endif; ?>","    </tbody>","  </table>","</div>","","<div class=\"card\">","  <h3>Ledger</h3>","  <table>","    <thead>","      <tr>","        <th>#</th>","        <th>Date</th>","        <th>Type</th>","        <th>Item</th>","        <th>Warehouse</th>","        <th>Qty</th>","        <th>Rate</th>","      </tr>","    </thead>","    <tbody>","      <?php foreach($lg as $k=>$g): ?>","        <tr>","          <td><?=($k+1)?></td>","          <td><?=htmlspecialchars($g['txn_date'])?></td>","          <td><?=htmlspecialchars($g['txn_type'])?></td>","          <td><?= (int)$g['item_id'] ?></td>","          <td><?= (int)$g['warehouse_id'] ?></td>","          <td><?= number_format((float)$g['qty'],3) ?></td>","          <td><?= number_format((float)$g['rate'],4) ?></td>","        </tr>","      <?php endforeach; if (!$lg): ?>","        <tr><td colspan=\"7\" class=\"muted\">No ledger rows found.</td></tr>","      <?php endif; ?>","    </tbody>","  </table>","</div>","","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/qc_release_post.php": ["<?php","/**"," * QC Release POST"," * - Creates qc_releases header+lines"," * - Creates stock_transfers header (TRN) and posts OUT from qc_bin -> IN to to_bin (same warehouse)"," */","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/NumberingService.php';","require_once __DIR__ . '/../includes/StockMoveWriter.php';","require_once __DIR__ . '/../includes/ValuationService.php';","require_once __DIR__ . '/../includes/StockLedgerAdapter.php';","","header('Content-Type: application/json');","","try {","  require_permission('stores.qc.manage');","","  $raw = file_get_contents('php://input');","  $input = json_decode($raw, true);","  if (!$input) $input = $_POST;","  if (!empty($_POST)) csrf_require_token($_POST['csrf_token'] ?? '');","","  $pdo = db();","  $userId = (int)($_SESSION['user_id'] ?? 0);","  $now = date('Y-m-d H:i:s');","","  $warehouseId = (int)($input['warehouse_id'] ?? 0);","  $qcBinId     = isset($input['qc_bin_id']) ? (int)$input['qc_bin_id'] : null;","  $toBinId     = isset($input['to_bin_id']) ? (int)$input['to_bin_id'] : null;","  $remarks     = trim($input['remarks'] ?? '');","","  $lines = [];","  if (isset($input['lines']['item_id'])) {","      $cnt = count($input['lines']['item_id']);","      for($i=0;$i<$cnt;$i++){","          $lines[] = [","              'item_id'  => (int)$input['lines']['item_id'][$i],","              'uom_id'   => isset($input['lines']['uom_id'][$i]) ? (int)$input['lines']['uom_id'][$i] : null,","              'qty'      => (float)$input['lines']['qty'][$i],","              'batch_id' => isset($input['lines']['batch_id'][$i]) ? (int)$input['lines']['batch_id'][$i] : null,","              'remarks'  => trim($input['lines']['remarks'][$i] ?? '')","          ];","      }","  } else {","      $lines = $input['lines'] ?? [];","  }","","  if ($warehouseId<=0 || !$qcBinId) throw new RuntimeException('Warehouse and QC bin required');","  if (empty($lines)) throw new RuntimeException('At least one line is required');","","  $pdo->beginTransaction();","","  $qcNo = NumberingService::next($pdo, 'QCR');","","  // qc_releases header","  $pdo->prepare(\"INSERT INTO qc_releases (qc_no, warehouse_id, qc_bin_id, to_bin_id, remarks, status, created_by, created_at)","                 VALUES (:no,:w,:qb,:tb,:rm,'POSTED',:uid,NOW(6))\")","      ->execute([':no'=>$qcNo, ':w'=>$warehouseId, ':qb'=>$qcBinId, ':tb'=>$toBinId, ':rm'=>$remarks, ':uid'=>$userId]);","  $qcId = (int)$pdo->lastInsertId();","","  $insLine = $pdo->prepare(\"INSERT INTO qc_release_items (qc_id, line_no, item_id, uom_id, qty, qc_bin_id, to_bin_id, batch_id, remarks)","                            VALUES (:id,:ln,:i,:u,:q,:qb,:tb,:b,:r)\");","","  // Underlying stock_transfer document for TRN","  $pdo->prepare(\"INSERT INTO stock_transfers (trn_no, from_warehouse_id, to_warehouse_id, from_bin_id, to_bin_id, remarks, status, created_by, created_at)","                 VALUES (:no,:w,:w,:qb,:tb,:rm,'POSTED',:uid,NOW(6))\")","      ->execute([':no'=>$qcNo, ':w'=>$warehouseId, ':qb'=>$qcBinId, ':tb'=>$toBinId, ':rm'=>$remarks, ':uid'=>$userId]);","  $trnId = (int)$pdo->lastInsertId();","","  $waQ = $pdo->prepare(\"SELECT avg_cost FROM stock_avg WHERE item_id=:i AND warehouse_id=:w\");","","  $lineNo=0;","  foreach ($lines as $ln) {","    $lineNo++;","    $itemId=(int)$ln['item_id']; $uomId=isset($ln['uom_id'])?(int)$ln['uom_id']:null; $qty=(float)$ln['qty'];","    $batchId=isset($ln['batch_id'])?(int)$ln['batch_id']:null; $r=trim($ln['remarks']??'');","    if ($itemId<=0 || $qty<=0) throw new RuntimeException(\"Invalid line #$lineNo\");","","    $insLine->execute([':id'=>$qcId, ':ln'=>$lineNo, ':i'=>$itemId, ':u'=>$uomId, ':q'=>$qty, ':qb'=>$qcBinId, ':tb'=>$toBinId, ':b'=>$batchId, ':r'=>$r]);","","    $waQ->execute([':i'=>$itemId, ':w'=>$warehouseId]); $rate=(float)$waQ->fetchColumn(); if ($rate<0) $rate=0.0;","","    // OUT from QC bin","    $outPayload=['txn_type'=>'TRN','txn_no'=>$qcNo,'txn_date'=>$now,'project_id'=>null,'item_id'=>$itemId,'uom_id'=>$uomId,","      'warehouse_id'=>$warehouseId,'bin_id'=>$qcBinId,'batch_id'=>$batchId,'qty'=>$qty,'unit_cost'=>$rate,","      'ref_entity'=>'stock_transfers','ref_id'=>$trnId,'created_by'=>$userId];","    StockMoveWriter::postOut($pdo,$outPayload);","    ValuationService::onIssue($pdo,$itemId,$warehouseId,$qty);","    StockLedgerAdapter::mirror($pdo,$outPayload);","","    // IN to target bin","    $inPayload=['txn_type'=>'TRN','txn_no'=>$qcNo,'txn_date'=>$now,'project_id'=>null,'item_id'=>$itemId,'uom_id'=>$uomId,","      'warehouse_id'=>$warehouseId,'bin_id'=>$toBinId,'batch_id'=>$batchId,'qty'=>$qty,'unit_cost'=>$rate,","      'ref_entity'=>'stock_transfers','ref_id'=>$trnId,'created_by'=>$userId];","    StockMoveWriter::postIn($pdo,$inPayload);","    ValuationService::onReceipt($pdo,$itemId,$warehouseId,$qty,$rate);","    StockLedgerAdapter::mirror($pdo,$inPayload);","  }","","  $pdo->commit();","  echo json_encode(['ok'=>true,'release_id'=>$qcId,'qc_no'=>$qcNo]);","","} catch (Throwable $e) {","  if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();","  http_response_code(400);","  echo json_encode(['ok'=>false,'error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/reports/gp_open_returnables.php": ["<?php","/**"," * Open Returnables Report"," * Requires: stores.gatepass.manage (or similar view permission)"," */","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_permission('stores.gatepass.manage');","","$pdo = db();","","$search = trim($_GET['search'] ?? '');","$only_overdue = (int)($_GET['only_overdue'] ?? 0);","$date_from   = trim($_GET['date_from'] ?? '');","$date_to     = trim($_GET['date_to'] ?? '');","$warehouse_id= (int)($_GET['warehouse_id'] ?? 0);","$party_id    = (int)($_GET['party_id'] ?? 0);","$page        = max(1, (int)($_GET['page'] ?? 1));","$per_page    = min(200, max(10, (int)($_GET['per_page'] ?? 50)));","","$where = [\"g.returnable = 1\"];","$params = [];","","if ($date_from !== '') { $where[] = \"g.created_at >= :df\"; $params[':df'] = $date_from . \" 00:00:00\"; }","if ($date_to   !== '') { $where[] = \"g.created_at <= :dt\"; $params[':dt'] = $date_to . \" 23:59:59\"; }","if ($warehouse_id>0)   { $where[] = \"g.warehouse_id = :wh\"; $params[':wh'] = $warehouse_id; }","if ($party_id>0)       { $where[] = \"g.party_id = :py\"; $params[':py'] = $party_id; }","if ($search !== '') {","  $where[] = \"(i.code LIKE :q OR i.name LIKE :q OR g.gp_no LIKE :q)\";","  $params[':q'] = '%' . $search . '%';","}","","$where_sql = 'WHERE ' . implode(' AND ', $where);","","// Count","$sql_count = \"SELECT COUNT(*)","              FROM gatepasses g","              JOIN gatepass_items gi ON gi.gp_id = g.id","              JOIN items i ON i.id = gi.item_id","              LEFT JOIN parties p ON p.id = g.party_id","              $where_sql\";","$st = $pdo->prepare($sql_count);","$st->execute($params);","$total = (int)$st->fetchColumn();","","$offset = ($page - 1) * $per_page;","","$sql = \"SELECT g.gp_no, g.created_at as gp_date, g.expected_return_date, g.warehouse_id, g.party_id,","               p.name AS party_name,","               gi.id as gp_line_id, gi.line_no, gi.item_id, i.code AS item_code, i.name AS item_name,","               gi.qty, gi.returned_qty,","               (gi.qty - gi.returned_qty) AS balance_qty,","               DATEDIFF(CURDATE(), g.expected_return_date) AS overdue_days","        FROM gatepasses g","        JOIN gatepass_items gi ON gi.gp_id = g.id","        JOIN items i ON i.id = gi.item_id","        LEFT JOIN parties p ON p.id = g.party_id","        $where_sql","        HAVING balance_qty > 0 \" . ($only_overdue ? \" AND overdue_days > 0 \" : \"\") . \"","        ORDER BY g.created_at DESC, g.gp_no DESC, gi.line_no ASC","        LIMIT :lim OFFSET :off\";","","$st = $pdo->prepare($sql);","foreach ($params as $k=>$v) $st->bindValue($k,$v);","$st->bindValue(':lim', $per_page, PDO::PARAM_INT);","$st->bindValue(':off', $offset, PDO::PARAM_INT);","$st->execute();","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","// Dropdowns","$warehouses = $pdo->query(\"SELECT id, name FROM warehouses ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","$parties = $pdo->query(\"SELECT id, name FROM parties ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","?>","<!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>Open Returnables</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <style>","    body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;margin:16px}","    .card{border:1px solid #ddd;border-radius:8px;padding:16px;margin-bottom:16px}","    .row{display:flex;flex-wrap:wrap;gap:12px;align-items:flex-end}","    .field{display:flex;flex-direction:column;min-width:180px}","    table{width:100%;border-collapse:collapse;font-size:14px}","    th,td{border-bottom:1px solid #eee;padding:8px;text-align:left}","    th{background:#fafafa}","    .right{text-align:right}","    .muted{color:#666}","    .badge{display:inline-block;padding:2px 6px;border-radius:4px;border:1px solid #ddd;background:#f8f8f8;font-size:12px}","    .btn{display:inline-block;padding:8px 12px;border:1px solid #ccc;border-radius:6px;background:#fff;cursor:pointer;text-decoration:none;color:#111}","    .btn.primary{border-color:#2573ef;background:#2f7df4;color:#fff}","  </style>","</head>","<body>","","<div class=\"card\">","  <h2>Open Returnables</h2>","  <form method=\"get\">","    <div class=\"row\">","      <div class=\"field\"><label>From</label><input type=\"date\" name=\"date_from\" value=\"<?=htmlspecialchars($date_from)?>\"></div>","      <div class=\"field\"><label>To</label><input type=\"date\" name=\"date_to\" value=\"<?=htmlspecialchars($date_to)?>\"></div>","      <div class=\"field\"><label>Warehouse</label>","        <select name=\"warehouse_id\"><option value=\"0\">-- Any --</option>","          <?php foreach($warehouses as $wh): ?><option value=\"<?=$wh['id']?>\" <?=$warehouse_id==$wh['id']?'selected':''?>><?=htmlspecialchars($wh['name'])?></option><?php endforeach; ?>","        </select>","      </div>","      <div class=\"field\"><label>Party</label>","        <select name=\"party_id\"><option value=\"0\">-- Any --</option>","          <?php foreach($parties as $p): ?><option value=\"<?=$p['id']?>\" <?=$party_id==$p['id']?'selected':''?>><?=htmlspecialchars($p['name'])?></option><?php endforeach; ?>","        </select>","      </div>","      <div class=\"field\"><label>Search</label><input type=\"text\" name=\"search\" value=\"<?=htmlspecialchars($search)?>\" placeholder=\"GP No or Item\"></div>","      <div class=\"field\"><label>&nbsp;</label><label><input type=\"checkbox\" name=\"only_overdue\" value=\"1\" <?=$only_overdue?'checked':''?>> Only overdue</label></div>","      <div class=\"field\"><label>&nbsp;</label>","        <button class=\"btn primary\" type=\"submit\">Apply</button> <a class=\"btn\" href=\"?\">Reset</a>","      </div>","    </div>","  </form>","</div>","","<div class=\"card\">","  <div class=\"row\" style=\"justify-content:space-between;\">","    <div><span class=\"badge\">Rows: <?=count($rows)?></span></div>","  </div>","","  <div style=\"overflow:auto;margin-top:8px;\">","    <table>","      <thead>","        <tr>","          <th>GP No</th><th>Date</th><th>Party</th><th>Item</th><th class=\"right\">Issued</th><th class=\"right\">Returned</th><th class=\"right\">Balance</th><th>Expected Return</th><th>Overdue</th>","        </tr>","      </thead>","      <tbody>","        <?php foreach($rows as $r): ?>","          <tr>","            <td><?=htmlspecialchars($r['gp_no'])?></td>","            <td class=\"muted\"><?=htmlspecialchars($r['gp_date'])?></td>","            <td><?=htmlspecialchars($r['party_name'] ?: '-')?></td>","            <td><?=htmlspecialchars($r['item_code'] . ' \u2014 ' . $r['item_name'])?></td>","            <td class=\"right\"><?=number_format((float)$r['qty'],3)?></td>","            <td class=\"right\"><?=number_format((float)$r['returned_qty'],3)?></td>","            <td class=\"right\"><?=number_format((float)$r['balance_qty'],3)?></td>","            <td><?=htmlspecialchars((string)$r['expected_return_date'])?></td>","            <td><?=($r['overdue_days']>0) ? ($r['overdue_days'].' days') : '-'?></td>","          </tr>","        <?php endforeach; if (!count($rows)): ?>","          <tr><td colspan=\"9\" class=\"muted\">No open returnables.</td></tr>","        <?php endif; ?>","      </tbody>","    </table>","  </div>","</div>","","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/reports/consumption_by_project.php": ["<?php","/**"," * Consumption by Project"," * Uses stock_ledger to sum ISS + GP (non-returnable) as consumption"," */","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_permission('stores.ledger.view');","","$pdo = db();","","$date_from   = trim($_GET['date_from'] ?? '');","$date_to     = trim($_GET['date_to'] ?? '');","$project_id  = (int)($_GET['project_id'] ?? 0);","$item_id     = (int)($_GET['item_id'] ?? 0);","$warehouse_id= (int)($_GET['warehouse_id'] ?? 0);","","$params = [];","$where = [];","","if ($date_from !== '') { $where[] = \"l.txn_date >= :df\"; $params[':df'] = $date_from . \" 00:00:00\"; }","if ($date_to   !== '') { $where[] = \"l.txn_date <= :dt\"; $params[':dt'] = $date_to . \" 23:59:59\"; }","if ($project_id> 0)    { $where[] = \"l.project_id = :prj\"; $params[':prj'] = $project_id; }","if ($item_id   > 0)    { $where[] = \"l.item_id = :it\"; $params[':it'] = $item_id; }","if ($warehouse_id>0)   { $where[] = \"l.warehouse_id = :wh\"; $params[':wh'] = $warehouse_id; }","","$where_sql = $where ? ('WHERE ' . implode(' AND ', $where)) : '';","","$sql = \"SELECT p.id AS project_id, COALESCE(p.name,'(No Project)') AS project_name,","               i.id AS item_id, i.code AS item_code, i.name AS item_name,","               w.id AS warehouse_id, w.name AS warehouse_name,","               SUM(CASE WHEN l.txn_type IN ('ISS','GP') THEN -l.qty ELSE 0 END) AS qty_out,","               SUM(CASE WHEN l.txn_type IN ('ISS','GP') THEN -l.amount ELSE 0 END) AS amount_out","        FROM stock_ledger l","        JOIN items i ON i.id = l.item_id","        JOIN warehouses w ON w.id = l.warehouse_id","        LEFT JOIN projects p ON p.id = l.project_id","        $where_sql","        GROUP BY p.id, i.id, w.id","        HAVING ABS(qty_out) > 0.0001","        ORDER BY p.name, i.code, w.name\";","","$st = $pdo->prepare($sql);","$st->execute($params);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","// dropdowns","$projects = $pdo->query(\"SELECT id, name FROM projects ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","$items = $pdo->query(\"SELECT id, CONCAT(code,' - ',name) label FROM items ORDER BY code LIMIT 2000\")->fetchAll(PDO::FETCH_ASSOC);","$warehouses = $pdo->query(\"SELECT id, name FROM warehouses ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","?>","<!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>Consumption by Project</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <style>","    body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;margin:16px}","    .card{border:1px solid #ddd;border-radius:8px;padding:16px;margin-bottom:16px}","    .row{display:flex;flex-wrap:wrap;gap:12px;align-items:flex-end}","    .field{display:flex;flex-direction:column;min-width:180px}","    table{width:100%;border-collapse:collapse;font-size:14px}","    th,td{border-bottom:1px solid #eee;padding:8px;text-align:left}","    th{background:#fafafa}","    .right{text-align:right}","    .muted{color:#666}","    .btn{display:inline-block;padding:8px 12px;border:1px solid #ccc;border-radius:6px;background:#fff;cursor:pointer;text-decoration:none;color:#111}","    .btn.primary{border-color:#2573ef;background:#2f7df4;color:#fff}","  </style>","</head>","<body>","","<div class=\"card\">","  <h2>Consumption by Project</h2>","  <form method=\"get\">","    <div class=\"row\">","      <div class=\"field\"><label>From</label><input type=\"date\" name=\"date_from\" value=\"<?=htmlspecialchars($date_from)?>\"></div>","      <div class=\"field\"><label>To</label><input type=\"date\" name=\"date_to\" value=\"<?=htmlspecialchars($date_to)?>\"></div>","      <div class=\"field\"><label>Project</label>","        <select name=\"project_id\"><option value=\"0\">-- Any --</option>","          <?php foreach($projects as $pr): ?><option value=\"<?=$pr['id']?>\" <?=$project_id==$pr['id']?'selected':''?>><?=htmlspecialchars($pr['name'])?></option><?php endforeach; ?>","        </select>","      </div>","      <div class=\"field\"><label>Item</label>","        <select name=\"item_id\"><option value=\"0\">-- Any --</option>","          <?php foreach($items as $it): ?><option value=\"<?=$it['id']?>\" <?=$item_id==$it['id']?'selected':''?>><?=htmlspecialchars($it['label'])?></option><?php endforeach; ?>","        </select>","      </div>","      <div class=\"field\"><label>Warehouse</label>","        <select name=\"warehouse_id\"><option value=\"0\">-- Any --</option>","          <?php foreach($warehouses as $wh): ?><option value=\"<?=$wh['id']?>\" <?=$warehouse_id==$wh['id']?'selected':''?>><?=htmlspecialchars($wh['name'])?></option><?php endforeach; ?>","        </select>","      </div>","      <div class=\"field\"><label>&nbsp;</label>","        <button class=\"btn primary\" type=\"submit\">Apply</button> <a class=\"btn\" href=\"?\">Reset</a>","      </div>","    </div>","  </form>","</div>","","<div class=\"card\">","  <div class=\"row\" style=\"justify-content:space-between;\">","    <div><span class=\"muted\">Rows: <?=count($rows)?></span></div>","  </div>","","  <div style=\"overflow:auto;margin-top:8px;\">","    <table>","      <thead>","        <tr>","          <th>Project</th><th>Item</th><th>Warehouse</th><th class=\"right\">Qty Consumed</th><th class=\"right\">Amount</th>","        </tr>","      </thead>","      <tbody>","        <?php foreach($rows as $r): ?>","          <tr>","            <td><?=htmlspecialchars($r['project_name'])?></td>","            <td><?=htmlspecialchars($r['item_code'] . ' \u2014 ' . $r['item_name'])?></td>","            <td><?=htmlspecialchars($r['warehouse_name'])?></td>","            <td class=\"right\"><?=number_format((float)$r['qty_out'],3)?></td>","            <td class=\"right\"><?=number_format((float)$r['amount_out'],2)?></td>","          </tr>","        <?php endforeach; if (!count($rows)): ?>","          <tr><td colspan=\"5\" class=\"muted\">No data for selected filters.</td></tr>","        <?php endif; ?>","      </tbody>","    </table>","  </div>","</div>","","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/reports/stock_ledger_report.php": ["<?php","/**"," * Stock Ledger Report (List + Filters)"," * Requirements:"," *  - Permission: stores.ledger.view"," *  - Tables: stock_ledger (new), items, warehouses, projects (optional)"," *  - Includes: db.php, rbac.php, helpers.php"," *"," * Features:"," *  - Filters: date_from, date_to, item_id, warehouse_id, project_id, txn_type, search (item code/name)"," *  - Pagination"," *  - Totals (qty, amount)"," *  - CSV export (optional via ?export=csv)"," */","","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_permission('stores.ledger.view');","","$pdo = db();","","// --- Inputs & defaults ---","$date_from   = trim($_GET['date_from'] ?? '');","$date_to     = trim($_GET['date_to'] ?? '');","$item_id     = (int)($_GET['item_id'] ?? 0);","$warehouse_id= (int)($_GET['warehouse_id'] ?? 0);","$project_id  = (int)($_GET['project_id'] ?? 0);","$txn_type    = trim($_GET['txn_type'] ?? '');","$search      = trim($_GET['search'] ?? '');","$page        = max(1, (int)($_GET['page'] ?? 1));","$per_page    = min(200, max(10, (int)($_GET['per_page'] ?? 50)));","$export_csv  = (isset($_GET['export']) && $_GET['export'] === 'csv');","","$params = [];","$where = [];","","if ($date_from !== '') { $where[] = \"l.txn_date >= :df\"; $params[':df'] = $date_from . \" 00:00:00\"; }","if ($date_to   !== '') { $where[] = \"l.txn_date <= :dt\"; $params[':dt'] = $date_to . \" 23:59:59\"; }","if ($item_id   >   0)  { $where[] = \"l.item_id = :item\"; $params[':item'] = $item_id; }","if ($warehouse_id> 0)  { $where[] = \"l.warehouse_id = :wh\"; $params[':wh'] = $warehouse_id; }","if ($project_id >  0)  { $where[] = \"l.project_id = :prj\"; $params[':prj'] = $project_id; }","if ($txn_type  !== '') { $where[] = \"l.txn_type = :tt\"; $params[':tt'] = $txn_type; }","if ($search    !== '') {","    $where[] = \"(i.code LIKE :q OR i.name LIKE :q)\";","    $params[':q'] = '%' . $search . '%';","}","","$where_sql = $where ? ('WHERE ' . implode(' AND ', $where)) : '';","","// --- Count ---","$sql_count = \"SELECT COUNT(*) AS c FROM stock_ledger l","              JOIN items i ON i.id = l.item_id","              JOIN warehouses w ON w.id = l.warehouse_id","              $where_sql\";","$st = $pdo->prepare($sql_count);","$st->execute($params);","$total = (int)$st->fetchColumn();","","$offset = ($page - 1) * $per_page;","","// --- Query ---","$sql = \"SELECT l.*, i.code AS item_code, i.name AS item_name, w.name AS warehouse_name,","               COALESCE(p.name, '') AS project_name","        FROM stock_ledger l","        JOIN items i ON i.id = l.item_id","        JOIN warehouses w ON w.id = l.warehouse_id","        LEFT JOIN projects p ON p.id = l.project_id","        $where_sql","        ORDER BY l.txn_date DESC, l.id DESC","        LIMIT :lim OFFSET :off\";","","$st = $pdo->prepare($sql);","foreach ($params as $k=>$v) { $st->bindValue($k, $v); }","$st->bindValue(':lim', $per_page, PDO::PARAM_INT);","$st->bindValue(':off', $offset, PDO::PARAM_INT);","$st->execute();","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","// Totals","$sql_tot = \"SELECT COALESCE(SUM(l.qty),0) qty_total, COALESCE(SUM(l.amount),0) amt_total","            FROM stock_ledger l","            JOIN items i ON i.id = l.item_id","            JOIN warehouses w ON w.id = l.warehouse_id","            $where_sql\";","$stt = $pdo->prepare($sql_tot);","$stt->execute($params);","$tot = $stt->fetch(PDO::FETCH_ASSOC);","","// CSV export","if ($export_csv) {","    header('Content-Type: text/csv');","    header('Content-Disposition: attachment; filename=stock_ledger_' . date('Ymd_His') . '.csv');","    $out = fopen('php://output', 'w');","    fputcsv($out, ['Date','Type','Txn No','Item Code','Item Name','Warehouse','Project','Qty','Rate','Amount','UoM']);","    foreach ($rows as $r) {","        fputcsv($out, [","            $r['txn_date'], $r['txn_type'], $r['txn_no'], $r['item_code'], $r['item_name'],","            $r['warehouse_name'], $r['project_name'], $r['qty'], $r['rate'], $r['amount'], $r['uom_id']","        ]);","    }","    fclose($out);","    exit;","}","","// Fetch dropdown data (simple)","$items = $pdo->query(\"SELECT id, CONCAT(code,' - ',name) label FROM items ORDER BY code LIMIT 2000\")->fetchAll(PDO::FETCH_ASSOC);","$warehouses = $pdo->query(\"SELECT id, name FROM warehouses ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","$projects = $pdo->query(\"SELECT id, name FROM projects ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","","// --- Render ---","?>","<!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>Stock Ledger</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <style>","    body{font-family:system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;margin:16px;}","    .card{border:1px solid #ddd;border-radius:8px;padding:16px;margin-bottom:16px;}","    .row{display:flex;flex-wrap:wrap;gap:12px;align-items:flex-end;}","    .field{display:flex;flex-direction:column;min-width:200px;}","    table{width:100%;border-collapse:collapse;font-size:14px;}","    th,td{border-bottom:1px solid #eee;padding:8px;text-align:left;}","    th{background:#fafafa;}","    .right{text-align:right;}","    .muted{color:#666;}","    .btn{display:inline-block;padding:8px 12px;border:1px solid #ccc;border-radius:6px;background:#fff;cursor:pointer;text-decoration:none;color:#111;}","    .btn.primary{border-color:#2573ef;background:#2f7df4;color:#fff;}","    .badge{display:inline-block;padding:2px 6px;border-radius:4px;border:1px solid #ddd;background:#f8f8f8;font-size:12px;}","  </style>","</head>","<body>","","<div class=\"card\">","  <h2>Stock Ledger</h2>","  <form method=\"get\">","    <div class=\"row\">","      <div class=\"field\">","        <label>From</label>","        <input type=\"date\" name=\"date_from\" value=\"<?=htmlspecialchars($date_from)?>\">","      </div>","      <div class=\"field\">","        <label>To</label>","        <input type=\"date\" name=\"date_to\" value=\"<?=htmlspecialchars($date_to)?>\">","      </div>","      <div class=\"field\">","        <label>Item</label>","        <select name=\"item_id\">","          <option value=\"0\">-- Any --</option>","          <?php foreach($items as $it): ?>","          <option value=\"<?=$it['id']?>\" <?=$item_id==$it['id']?'selected':''?>><?=htmlspecialchars($it['label'])?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"field\">","        <label>Warehouse</label>","        <select name=\"warehouse_id\">","          <option value=\"0\">-- Any --</option>","          <?php foreach($warehouses as $wh): ?>","          <option value=\"<?=$wh['id']?>\" <?=$warehouse_id==$wh['id']?'selected':''?>><?=htmlspecialchars($wh['name'])?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"field\">","        <label>Project</label>","        <select name=\"project_id\">","          <option value=\"0\">-- Any --</option>","          <?php foreach($projects as $pr): ?>","          <option value=\"<?=$pr['id']?>\" <?=$project_id==$pr['id']?'selected':''?>><?=htmlspecialchars($pr['name'])?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"field\">","        <label>Txn Type</label>","        <select name=\"txn_type\">","          <option value=\"\">-- Any --</option>","          <?php foreach(['ISS','ADJ','GP','GPR','GRN'] as $tt): ?>","            <option value=\"<?=$tt?>\" <?=$txn_type===$tt?'selected':''?>><?=$tt?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"field\">","        <label>Search (Item)</label>","        <input type=\"text\" name=\"search\" value=\"<?=htmlspecialchars($search)?>\" placeholder=\"Code or Name\">","      </div>","      <div class=\"field\">","        <label>&nbsp;</label>","        <button class=\"btn primary\" type=\"submit\">Apply</button>","        <a class=\"btn\" href=\"?\">Reset</a>","        <a class=\"btn\" href=\"?<?=http_build_query(array_merge($_GET,['export'=>'csv']))?>\">Export CSV</a>","      </div>","    </div>","  </form>","</div>","","<div class=\"card\">","  <div class=\"row\" style=\"justify-content:space-between;\">","    <div><span class=\"badge\">Rows: <?=$total?></span></div>","    <div>","      <span class=\"badge\">Qty total: <?=number_format((float)$tot['qty_total'], 3)?></span>","      <span class=\"badge\">Amount total: <?=number_format((float)$tot['amt_total'], 2)?></span>","    </div>","  </div>","  <div style=\"overflow:auto;margin-top:8px;\">","    <table>","      <thead>","        <tr>","          <th>Date</th>","          <th>Type</th>","          <th>Txn No</th>","          <th>Item</th>","          <th>Warehouse</th>","          <th>Project</th>","          <th class=\"right\">Qty</th>","          <th class=\"right\">Rate</th>","          <th class=\"right\">Amount</th>","          <th>UoM</th>","        </tr>","      </thead>","      <tbody>","        <?php foreach($rows as $r): ?>","        <tr>","          <td class=\"muted\"><?=htmlspecialchars($r['txn_date'])?></td>","          <td><?=htmlspecialchars($r['txn_type'])?></td>","          <td><?=htmlspecialchars($r['txn_no'])?></td>","          <td><?=htmlspecialchars($r['item_code'] . ' \u2014 ' . $r['item_name'])?></td>","          <td><?=htmlspecialchars($r['warehouse_name'])?></td>","          <td><?=htmlspecialchars($r['project_name'])?></td>","          <td class=\"right\"><?=number_format((float)$r['qty'], 3)?></td>","          <td class=\"right\"><?=number_format((float)$r['rate'], 4)?></td>","          <td class=\"right\"><?=number_format((float)$r['amount'], 2)?></td>","          <td><?=htmlspecialchars((string)$r['uom_id'])?></td>","        </tr>","        <?php endforeach; if (!$rows): ?>","        <tr><td colspan=\"10\" class=\"muted\">No rows.</td></tr>","        <?php endif; ?>","      </tbody>","    </table>","  </div>","","  <?php if ($total > $per_page): ?>","  <div class=\"row\" style=\"justify-content:flex-end;margin-top:8px;\">","    <?php","      $pages = max(1, ceil($total / $per_page));","      $base = $_GET; unset($base['page']);","      for($p=1;$p<=$pages;$p++){","        $q = http_build_query(array_merge($base,['page'=>$p]));","        $is = $p==$page;","        echo '<a class=\"btn'.($is?' primary':'').'\" href=\"?'.$q.'\">'.$p.'</a> ';","      }","    ?>","  </div>","  <?php endif; ?>","</div>","","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/_hooks/grn_transform_uom.php": ["","<?php","// Hook example to be called inside GRN post flow BEFORE accounting rate/qty are finalized.","// Usage in grn_post.php:","//   require_once __DIR__ . '/../../includes/coupler/UomRuleEngine.php';","//   $engine = new \\Coupler\\UomRuleEngine($pdo);","//   $calc = $engine->compute($itemCategory, [","//       'rate'=>$rate, 'pcs'=>$pcs, 'weight_kg'=>$weight_kg,","//       'length_m'=>$length, 'width_m'=>$width, 'thickness_m'=>$thickness,","//       'area_m2'=>$area, 'volume_m3'=>$volume","//   ]);","//   $acct_qty = $calc['qty']; $acct_rate = $calc['rate'];"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/requisitions_list.php": ["<?php","/** PATH: /public_html/stores/requisitions_list.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_permission('stores.req.view');","","$pdo = db();","$q = trim($_GET['q'] ?? '');","$status = $_GET['status'] ?? 'requested';","$where = []; $p = [];","if ($q !== '') {","  $where[] = \"(mr.req_no LIKE ? OR pr.name LIKE ?)\";","  $p[] = \"%$q%\"; $p[] = \"%$q%\";","}","if ($status !== '') { $where[] = \"mr.status = ?\"; $p[] = $status; }","$w = $where ? 'WHERE ' . implode(' AND ', $where) : '';","","$sql = \"SELECT mr.*, pr.code AS project_code, pr.name AS project_name","        FROM material_requisitions mr","        LEFT JOIN projects pr ON pr.id = mr.project_id","        $w","        ORDER BY mr.id DESC","        LIMIT 200\";","$stmt = $pdo->prepare($sql);","$stmt->execute($p);","$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);","","$page_title = \"Material Requisitions\";","require_once __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container-fluid py-3\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <h1 class=\"h4 mb-0\"><?= htmlspecialchars($page_title) ?></h1>","    <div>","      <?php if (has_permission('stores.req.manage')): ?>","      <a href=\"requisitions_form.php\" class=\"btn btn-primary btn-sm\">","        <i class=\"bi bi-plus-lg\"></i> New Requisition","      </a>","      <?php endif; ?>","      <a href=\"issues_list.php\" class=\"btn btn-outline-secondary btn-sm\">Issues</a>","    </div>","  </div>","","  <form class=\"row g-2 mb-3\">","    <div class=\"col-auto\">","      <input type=\"text\" name=\"q\" class=\"form-control form-control-sm\" placeholder=\"Search req no / project\" value=\"<?= htmlspecialchars($q) ?>\">","    </div>","    <div class=\"col-auto\">","      <select name=\"status\" class=\"form-select form-select-sm\">","        <?php foreach (['requested'=>'Requested','issued'=>'Issued','cancelled'=>'Cancelled','draft'=>'Draft'] as $k=>$v): ?>","          <option value=\"<?= $k ?>\" <?= $k===$status?'selected':'' ?>>Status: <?= $v ?></option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-auto\">","      <button class=\"btn btn-sm btn-secondary\">Filter</button>","    </div>","  </form>","","  <div class=\"table-responsive\">","    <table class=\"table table-sm align-middle\">","      <thead class=\"table-light\">","        <tr>","          <th>Req No</th>","          <th>Date</th>","          <th>Project</th>","          <th>Requested By</th>","          <th>Status</th>","          <th class=\"text-end\">Actions</th>","        </tr>","      </thead>","      <tbody>","        <?php if (!$rows): ?>","          <tr><td colspan=\"6\" class=\"text-center text-muted py-4\">No requisitions found.</td></tr>","        <?php else: foreach ($rows as $r): ?>","          <tr>","            <td class=\"fw-semibold\"><?= htmlspecialchars($r['req_no']) ?></td>","            <td><?= htmlspecialchars($r['requested_date']) ?></td>","            <td>","              <?php if ($r['project_id']): ?>","                <span class=\"badge bg-info-subtle text-info border\"><?= htmlspecialchars($r['project_code'] ?? '') ?></span>","                <?= htmlspecialchars($r['project_name'] ?? '') ?>","              <?php else: ?>\u2014<?php endif; ?>","            </td>","            <td><?= htmlspecialchars($r['requested_by_type']) ?> #<?= (int)$r['requested_by_id'] ?></td>","            <td>","              <span class=\"badge <?= $r['status']==='requested'?'bg-warning text-dark':($r['status']==='issued'?'bg-success':'bg-secondary') ?>\">","                <?= strtoupper($r['status']) ?>","              </span>","            </td>","            <td class=\"text-end\">","              <?php if ($r['status']==='requested' && has_permission('stores.req.issue')): ?>","                <button class=\"btn btn-sm btn-primary\" data-bs-toggle=\"modal\"","                        data-bs-target=\"#issueModal\" data-req-id=\"<?= (int)$r['id'] ?>\" data-req-no=\"<?= htmlspecialchars($r['req_no']) ?>\">","                  Issue","                </button>","              <?php else: ?>","                <span class=\"text-muted\">\u2014</span>","              <?php endif; ?>","            </td>","          </tr>","        <?php endforeach; endif; ?>","      </tbody>","    </table>","  </div>","</div>","","<!-- Issue Modal -->","<div class=\"modal fade\" id=\"issueModal\" tabindex=\"-1\" aria-hidden=\"true\">","  <div class=\"modal-dialog modal-lg modal-dialog-scrollable\">","    <div class=\"modal-content\">","      <div class=\"modal-header\">","        <h5 class=\"modal-title\">Issue against <span id=\"imReqNo\"></span></h5>","        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>","      </div>","      <div class=\"modal-body\">","        <div class=\"row g-2 mb-2\">","          <div class=\"col-md-4\">","            <label class=\"form-label\">Warehouse</label>","            <select id=\"imWarehouse\" class=\"form-select form-select-sm\">","              <?php","              $wh = $pdo->query(\"SELECT id, code, name FROM warehouses WHERE active=1 ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","              foreach ($wh as $w) {","                echo '<option value=\"'.(int)$w['id'].'\">'.htmlspecialchars($w['code'].' \u2014 '.$w['name']).'</option>';","              }","              ?>","            </select>","          </div>","        </div>","        <div id=\"imLinesWrap\" class=\"table-responsive small\">","          <table class=\"table table-sm align-middle\">","            <thead class=\"table-light\">","              <tr>","                <th>Item</th>","                <th class=\"text-center\">UOM</th>","                <th class=\"text-center\">Req</th>","                <th class=\"text-center\">Issued</th>","                <th class=\"text-center\">To Issue</th>","              </tr>","            </thead>","            <tbody id=\"imLinesBody\">","              <tr><td colspan=\"5\" class=\"text-center text-muted\">Loading\u2026</td></tr>","            </tbody>","          </table>","        </div>","        <div class=\"form-text\">Partial issue allowed. Leave zero to skip a line.</div>","      </div>","      <div class=\"modal-footer\">","        <button class=\"btn btn-secondary btn-sm\" data-bs-dismiss=\"modal\">Close</button>","        <button id=\"imPostBtn\" class=\"btn btn-primary btn-sm\">Post Issue</button>","      </div>","    </div>","  </div>","</div>","","<script>","let imReqId = 0;","","function ensureDebugBox() {","  let box = document.getElementById('issueDebug');","  if (!box) {","    const container = document.querySelector('.container-fluid') || document.body;","    box = document.createElement('div');","    box.id = 'issueDebug';","    box.className = 'alert alert-warning d-none';","    container.insertBefore(box, container.firstChild);","  }","  return box;","}","function showDebug(msg) {","  const box = ensureDebugBox();","  box.textContent = msg;","  box.classList.remove('d-none');","}","","// util","function esc(s){return (s??'').replace(/[&<>\"']/g,m=>({ \"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",\"\\\"\":\"&quot;\",\"'\":\"&#039;\" }[m]));}","async function fetchJSON(url){","  const r = await fetch(url);","  const raw = await r.text();","  const s = raw.indexOf('{'), e = raw.lastIndexOf('}');","  const json = (s!==-1 && e!==-1 && e>s) ? raw.slice(s,e+1) : raw;","  return JSON.parse(json);","}","","// ----- Load modal + lines -----","const issueModal = document.getElementById('issueModal');","issueModal?.addEventListener('show.bs.modal', async ev => {","  const btn = ev.relatedTarget;","  imReqId = parseInt(btn.getAttribute('data-req-id') || '0', 10);","  document.getElementById('imReqNo').textContent = btn.getAttribute('data-req-no') || '';","  await loadIssueLines();   // initial load","});","","// reload on-hand if warehouse changes","document.getElementById('imWarehouse')?.addEventListener('change', ()=>loadIssueLines());","","async function loadIssueLines(){","  const body = document.getElementById('imLinesBody');","  body.innerHTML = '<tr><td colspan=\"6\" class=\"text-center text-muted\">Loading\u2026</td></tr>';","  try {","    const data = await fetchJSON('requisitions_lines_api.php?req_id='+imReqId);","    const wh = parseInt(document.getElementById('imWarehouse').value||'0',10);","    body.innerHTML = '';","    if (!data.ok || !Array.isArray(data.lines) || data.lines.length===0) {","      body.innerHTML = '<tr><td colspan=\"6\" class=\"text-center text-muted\">No lines found</td></tr>';","      return;","    }","    for (const ln of data.lines) {","      const rq = parseFloat(ln.qty_requested || 0);","      const isd = parseFloat(ln.qty_issued || 0);","      const bal = Math.max(rq - isd, 0);","      let onhand = null;","      if (wh>0) {","        try {","          const oh = await fetchJSON('stock_onhand_api.php?item_id='+ln.item_id+'&warehouse_id='+wh);","          onhand = (oh.ok ? parseFloat(oh.onhand || 0) : null);","        } catch(_){}","      }","      const badge = (onhand===null)","        ? '<span class=\"badge bg-secondary\">\u2014</span>'","        : (onhand >= bal","            ? `<span class=\"badge bg-success-subtle text-success border\">On-hand: ${onhand.toFixed(3)}</span>`","            : `<span class=\"badge bg-danger-subtle text-danger border\">On-hand: ${onhand.toFixed(3)}</span>`);","","      body.insertAdjacentHTML('beforeend', `","        <tr data-line='${JSON.stringify(ln).replace(/'/g,\"&#39;\")}'>","          <td>${esc(ln.item_code ?? '')} \u2014 ${esc(ln.item_name ?? '')}<div class=\"small mt-1\">${badge}</div></td>","          <td class=\"text-center\">${esc(ln.uom_code ?? '')}</td>","          <td class=\"text-center\">${rq.toFixed(3)}</td>","          <td class=\"text-center\">${isd.toFixed(3)}</td>","          <td class=\"text-center\" style=\"width:120px\">","            <input type=\"number\" step=\"0.001\" min=\"0\" max=\"${bal.toFixed(3)}\"","                   class=\"form-control form-control-sm imQty\" value=\"${bal.toFixed(3)}\">","          </td>","        </tr>","      `);","    }","  } catch (e) {","    showDebug('Failed to load lines: ' + (e?.message || e));","  }","}","","// ----- Post Issue -----","document.getElementById('imPostBtn')?.addEventListener('click', async () => {","  const btn = document.getElementById('imPostBtn');","  btn.disabled = true; btn.textContent = 'Posting\u2026';","","  try {","    const wh = parseInt(document.getElementById('imWarehouse').value || '0', 10);","    if (!imReqId || imReqId <= 0) { alert('Missing requisition id'); return; }","    if (!wh || wh <= 0) { alert('Please select a warehouse'); return; }","","    const lines = [];","    document.querySelectorAll('#imLinesBody tr').forEach(tr => {","      const ln = JSON.parse((tr.getAttribute('data-line') || '{}').replace(/&#39;/g,\"'\"));","      const qty = parseFloat(tr.querySelector('.imQty')?.value || '0');","      if (qty > 0) {","        lines.push({","          req_item_id: parseInt(ln.id, 10),","          item_id: parseInt(ln.item_id, 10),","          uom_id: parseInt(ln.uom_id, 10),","          qty_to_issue: qty","        });","      }","    });","","    if (lines.length === 0) { alert('Nothing to issue'); return; }","","    const resp = await fetch('_ajax/req_post_issue.php', {","      method: 'POST',","      headers: {'Content-Type': 'application/json'},","      body: JSON.stringify({ req_id: imReqId, warehouse_id: wh, lines })","    });","","    const raw = await resp.text();","    if (!resp.ok) {","      showDebug('Issue POST failed (HTTP '+resp.status+'): ' + raw.slice(0, 1000));","      alert('Posting failed. See debug note at top.');","      return;","    }","    const s = raw.indexOf('{'), e = raw.lastIndexOf('}');","    const json = (s !== -1 && e !== -1 && e > s) ? raw.slice(s, e + 1) : raw;","    const data = JSON.parse(json);","","    if (data.ok) location.reload();","    else { showDebug('API error: ' + (data.error || 'Unknown error')); alert('Issue failed: ' + (data.error || 'Unknown error')); }","  } catch (err) {","    showDebug('JS error: ' + (err?.message || err));","    alert('A script error occurred. See debug note at top.');","  } finally {","    btn.disabled = false; btn.textContent = 'Post Issue';","  }","});","</script>","","","<?php require_once __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/transfer_form.php": ["<?php","/* Stock Transfer \u2013 items.material_code/name + auto-select item uom_id */","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_permission('stores.transfer.manage');","$pdo = db();","","/* Helpers */","function table_exists(PDO $pdo, string $name): bool {","  try { return (bool)$pdo->query(\"SHOW TABLES LIKE \" . $pdo->quote($name))->fetchColumn(); }","  catch (Throwable $e) { return false; }","}","function column_exists(PDO $pdo, string $table, string $col): bool {","  try { return (bool)$pdo->query(\"SHOW COLUMNS FROM `$table` LIKE \" . $pdo->quote($col))->fetchColumn(); }","  catch (Throwable $e) { return false; }","}","","/* Optional bins */","$hasBins = table_exists($pdo, 'bins');","$bins = [];","if ($hasBins) {","  $bins = $pdo->query(\"SELECT id, warehouse_id, COALESCE(name, CONCAT('BIN-',id)) AS name FROM bins ORDER BY 3\")->fetchAll(PDO::FETCH_ASSOC);","}","","/* Warehouses */","$warehouses = $pdo->query(\"SELECT id, COALESCE(name, CONCAT('WH-',id)) AS name FROM warehouses ORDER BY 2\")->fetchAll(PDO::FETCH_ASSOC);","","/* Items \u2013 your schema (material_code, name, uom_id, status) */","$items = $pdo->query(\"","  SELECT i.id, i.material_code, i.name, i.uom_id","  FROM items i","  WHERE i.status = 'active'","  ORDER BY i.material_code, i.name","  LIMIT 2000","\")->fetchAll(PDO::FETCH_ASSOC);","","/* UoM \u2013 prefer singular `uom`, fallback to `uoms` if needed */","$uomTable = table_exists($pdo,'uom') ? 'uom' : (table_exists($pdo,'uoms') ? 'uoms' : null);","$uoms = [];","if ($uomTable) {","  $hasCode = column_exists($pdo, $uomTable, 'code');","  $hasName = column_exists($pdo, $uomTable, 'name');","  $labelExpr = $hasCode ? 'code' : ($hasName ? 'name' : 'CAST(id AS CHAR)');","  $uoms = $pdo->query(\"SELECT id, $labelExpr AS label FROM `$uomTable` WHERE \" . ($uomTable==='uom'?'status=\\'active\\'':'1=1') . \" ORDER BY 2\")->fetchAll(PDO::FETCH_ASSOC);","} else {","  // Backend allows null uom_id; keep going with a generic option","  $uoms = [['id'=>null,'label'=>'EA']];","}","","/* Projects (optional) */","$projects = [];","try { $projects = $pdo->query(\"SELECT id, COALESCE(name, CONCAT('PRJ-',id)) AS name FROM projects ORDER BY 2\")->fetchAll(PDO::FETCH_ASSOC); } catch (Throwable $e) {}","","$csrf = csrf_token();","?>","<!doctype html>","<html>","<head>","  <meta charset=\"utf-8\">","  <title>Stock Transfer</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <style>","    body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;margin:16px}","    .card{border:1px solid #ddd;border-radius:8px;padding:16px;margin-bottom:16px}","    .row{display:flex;flex-wrap:wrap;gap:12px;align-items:flex-end}","    .field{display:flex;flex-direction:column;min-width:220px}","    table{width:100%;border-collapse:collapse;font-size:14px}","    th,td{border-bottom:1px solid #eee;padding:8px;text-align:left}","    th{background:#fafafa}","    .btn{display:inline-block;padding:8px 12px;border:1px solid #ccc;border-radius:6px;background:#fff;cursor:pointer;text-decoration:none;color:#111}","    .btn.primary{border-color:#2573ef;background:#2f7df4;color:#fff}","    input[type=number]{width:120px}","    select,input{padding:6px}","    .notice{padding:8px 12px;background:#fff9e6;border:1px solid #f1d48a;border-radius:6px;margin-bottom:12px}","  </style>","</head>","<body>","","<?php if (!$hasBins): ?>","  <div class=\"notice\">Bins table not found \u2014 bin fields are hidden. Transfers will be by warehouse only.</div>","<?php endif; ?>","","<form method=\"post\" action=\"transfer_post.php\" onsubmit=\"return validateForm()\">","  <input type=\"hidden\" name=\"csrf_token\" value=\"<?=htmlspecialchars($csrf)?>\">","  <div class=\"card\">","    <h2>Stock Transfer</h2>","    <div class=\"row\">","      <div class=\"field\">","        <label>From Warehouse</label>","        <select name=\"from_warehouse_id\" id=\"from_warehouse_id\" required>","          <option value=\"\">-- Select --</option>","          <?php foreach($warehouses as $w): ?>","            <option value=\"<?=$w['id']?>\"><?=htmlspecialchars($w['name'])?></option>","          <?php endforeach; ?>","        </select>","      </div>","","      <?php if ($hasBins): ?>","      <div class=\"field\">","        <label>From Bin (optional)</label>","        <select name=\"from_bin_id\" id=\"from_bin_id\">","          <option value=\"\">-- Any --</option>","          <?php foreach($bins as $b): ?>","            <option data-wh=\"<?=$b['warehouse_id']?>\" value=\"<?=$b['id']?>\"><?=htmlspecialchars($b['name'])?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <?php endif; ?>","","      <div class=\"field\">","        <label>To Warehouse</label>","        <select name=\"to_warehouse_id\" id=\"to_warehouse_id\" required>","          <option value=\"\">-- Select --</option>","          <?php foreach($warehouses as $w): ?>","            <option value=\"<?=$w['id']?>\"><?=htmlspecialchars($w['name'])?></option>","          <?php endforeach; ?>","        </select>","      </div>","","      <?php if ($hasBins): ?>","      <div class=\"field\">","        <label>To Bin (optional)</label>","        <select name=\"to_bin_id\" id=\"to_bin_id\">","          <option value=\"\">-- Any --</option>","          <?php foreach($bins as $b): ?>","            <option data-wh=\"<?=$b['warehouse_id']?>\" value=\"<?=$b['id']?>\"><?=htmlspecialchars($b['name'])?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <?php endif; ?>","","      <?php if (!empty($projects)): ?>","      <div class=\"field\">","        <label>Project (optional)</label>","        <select name=\"project_id\">","          <option value=\"\">-- None --</option>","          <?php foreach($projects as $p): ?>","            <option value=\"<?=$p['id']?>\"><?=htmlspecialchars($p['name'])?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <?php endif; ?>","","      <div class=\"field\" style=\"flex:1;\">","        <label>Remarks</label>","        <input type=\"text\" name=\"remarks\" placeholder=\"Optional remarks\">","      </div>","    </div>","  </div>","","  <div class=\"card\">","    <h3>Lines</h3>","    <table id=\"lines\">","      <thead>","        <tr><th style=\"width:35%;\">Item</th><th>UoM</th><th>Qty</th><th>Batch (optional)</th><th>Remarks</th><th></th></tr>","      </thead>","      <tbody></tbody>","    </table>","    <button class=\"btn\" type=\"button\" onclick=\"addLine()\">+ Add line</button>","  </div>","","  <div class=\"card\">","    <button class=\"btn primary\" type=\"submit\">Post Transfer</button>","  </div>","</form>","","<script>","const items = <?=json_encode(array_map(function($r){","  return ['id'=>(int)$r['id'], 'label'=>$r['material_code'].' - '.$r['name'], 'uom_id'=>(int)$r['uom_id']];","}, $items))?>;","","const uoms = <?=json_encode($uoms)?>;","const hasBins = <?= $hasBins ? 'true' : 'false' ?>;","","// Build a quick lookup: item_id -> default uom_id","const defaultUomByItem = {};","for (const it of items) defaultUomByItem[it.id] = it.uom_id;","","function addLine(){","  const tbody = document.querySelector('#lines tbody');","  const tr = document.createElement('tr');","  tr.innerHTML = `","    <td>","      <select name=\"lines[item_id][]\" class=\"itemSel\" required>","        <option value=\"\">-- Select Item --</option>","        ${items.map(it=>`<option value=\"${it.id}\">${escapeHtml(it.label)}</option>`).join('')}","      </select>","    </td>","    <td>","      <select name=\"lines[uom_id][]\" class=\"uomSel\" ${uoms.length ? 'required' : ''}>","        <option value=\"\">-- UoM --</option>","        ${uoms.map(u=>`<option value=\"${u.id===null?'':u.id}\">${escapeHtml(u.label)}</option>`).join('')}","      </select>","    </td>","    <td><input type=\"number\" name=\"lines[qty][]\" min=\"0.001\" step=\"0.001\" required></td>","    <td><input type=\"number\" name=\"lines[batch_id][]\" step=\"1\" min=\"1\" placeholder=\"ID\"></td>","    <td><input type=\"text\" name=\"lines[remarks][]\" placeholder=\"Optional\"></td>","    <td><button class=\"btn\" type=\"button\" onclick=\"this.closest('tr').remove()\">Remove</button></td>","  `;","  tbody.appendChild(tr);","","  // Auto-select UoM immediately and keep in sync on item change","  const itemSel = tr.querySelector('.itemSel');","  const uomSel  = tr.querySelector('.uomSel');","  const applyDefault = () => {","    const itemId = parseInt(itemSel.value || '0', 10);","    const def = defaultUomByItem[itemId];","    if (!def) return;","    // Set only if that UoM exists in dropdown","    for (const opt of uomSel.options) {","      if (String(opt.value) === String(def)) { uomSel.value = String(def); break; }","    }","  };","  itemSel.addEventListener('change', applyDefault);","  // If the user adds a line and picks an item right away, this will run on change.","}","","function validateForm(){","  const a = document.getElementById('from_warehouse_id').value;","  const b = document.getElementById('to_warehouse_id').value;","  if (a && b && a === b && !hasBins) {","    alert('Source and destination warehouse cannot be the same (no bins available).');","    return false;","  }","  return true;","}","","function escapeHtml(str){","  return String(str).replace(/[&<>\\\"'`=\\\\/]/g, s => ({'&':'&amp;','<':'&lt;','>':'&gt;','\\\"':'&quot;',\"'\":'&#39;','/':'&#x2F;','`':'&#x60;','=':'&#x3D;','\\\\':'&#x5C;'}[s]));","}","</script>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/stores/minmax_report.php": ["<?php","/** PATH: /public_html/stores/minmax_report.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_permission('purchase.advice.view'); // view report","$can_create_advice = function_exists('has_permission') ? has_permission('purchase.advice.manage') : true;","","$pdo = db();","","/* ---------- filters ---------- */","$warehouse_id = (int)($_GET['warehouse_id'] ?? 0);","$q            = trim((string)($_GET['q'] ?? '')); // search item code/name","$show_only_below = isset($_GET['below']) && $_GET['below']=='1';","","$warehouses = $pdo->query(\"SELECT id, code, name FROM warehouses WHERE active=1 ORDER BY name\")","                  ->fetchAll(PDO::FETCH_ASSOC);","","/* ---------- SQL (joins BEFORE WHERE) ---------- */","$sql = \"","  SELECT","    i.id AS item_id,","    i.uom_id,","    i.material_code,","    i.name AS item_name,","","    p.warehouse_id,","    p.min_qty, p.max_qty, p.reorder_point, p.safety_stock, p.policy_mode,","","    COALESCE(soh.qty, 0) AS onhand,","","    /* reserved = specific-to-this-warehouse + global (NULL warehouse) */","    COALESCE(res_wh.qty, 0) + COALESCE(res_glob.qty, 0) AS reserved_qty,","","    /* adaptive cache (optional) */","    ac.avg_daily_90d, ac.avg_daily_14d, ac.spike_ratio, ac.suggested_reorder_point,","","    u.code AS uom_code, u.name AS uom_name","  FROM items_stock_policy p","  JOIN items i ON i.id = p.item_id","  LEFT JOIN uom u ON u.id = i.uom_id","","  /* on-hand per item+warehouse */","  LEFT JOIN (","    SELECT item_id, warehouse_id, SUM(qty) qty","    FROM stock_onhand","    GROUP BY item_id, warehouse_id","  ) soh","    ON soh.item_id = p.item_id AND soh.warehouse_id = p.warehouse_id","","  /* adaptive cache */","  LEFT JOIN policy_adaptive_cache ac","    ON ac.item_id = p.item_id AND ac.warehouse_id = p.warehouse_id","","  /* reservations specific to this warehouse */","  LEFT JOIN (","    SELECT item_id, warehouse_id, SUM(qty) qty","    FROM item_reservations","    WHERE status = 'active'","    GROUP BY item_id, warehouse_id","  ) res_wh","    ON res_wh.item_id = p.item_id AND res_wh.warehouse_id = p.warehouse_id","","  /* global reservations (warehouse_id IS NULL) */","  LEFT JOIN (","    SELECT item_id, SUM(qty) qty","    FROM item_reservations","    WHERE status = 'active' AND warehouse_id IS NULL","    GROUP BY item_id","  ) res_glob","    ON res_glob.item_id = p.item_id","","  WHERE (? = 0 OR p.warehouse_id = ?)","\";","$params = [$warehouse_id, $warehouse_id];","","if ($q !== '') {","  $sql .= \" AND (i.material_code LIKE ? OR i.name LIKE ?) \";","  $params[] = \"%$q%\";","  $params[] = \"%$q%\";","}","","$sql .= \" ORDER BY i.name \";","","/* ---------- run ---------- */","$st = $pdo->prepare($sql);","$st->execute($params);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","/* ---------- compute metrics row-by-row ---------- */","$ADAPT_SPIKE_MIN_RATIO = 1.30;","$data = [];","foreach ($rows as $r) {","  $onhand = (float)$r['onhand'];","  $res    = (float)$r['reserved_qty'];","  $free   = max(0.0, $onhand - $res);","","  $min  = (float)$r['min_qty'];","  $max  = (float)$r['max_qty'];","  $rop  = (float)$r['reorder_point'];","  $sfty = (float)$r['safety_stock'];","  $mode = (string)$r['policy_mode'];","","  $avg90 = (float)($r['avg_daily_90d'] ?? 0);","  $avg14 = (float)($r['avg_daily_14d'] ?? 0);","  $ratio = (float)($r['spike_ratio'] ?? 0);","  $sugROP= (float)($r['suggested_reorder_point'] ?? 0);","","  // base threshold","  $threshold = max($min, $rop, $sfty);","","  // adaptive bump if enabled and spike detected","  $spike = false;","  if ($mode === 'adaptive') {","    $spike = ($ratio >= $ADAPT_SPIKE_MIN_RATIO) || ($avg14 > $avg90 && $avg14 >= 1 && $avg90 == 0);","    if ($spike && $sugROP > $threshold) {","      $threshold = $sugROP;","    }","  }","","  // suggestion uses free (on-hand minus reserved)","  $suggest = ($free < $threshold) ? max(0.0, $max - $onhand) : 0.0;","","  if ($show_only_below && $suggest <= 0.0) {","    continue; // filter to only the rows below threshold","  }","","  $data[] = [","    'item_id'   => (int)$r['item_id'],","    'code'      => (string)$r['material_code'],","    'name'      => (string)$r['item_name'],","    'uom'       => (string)($r['uom_code'] ?? $r['uom_name'] ?? ''),","    'onhand'    => $onhand,","    'reserved'  => $res,","    'free'      => $free,","    'min'       => $min,","    'rop'       => $rop,","    'safety'    => $sfty,","    'max'       => $max,","    'mode'      => $mode,","    'spike'     => $spike,","    'ratio'     => $ratio,","    'thr'       => $threshold,","    'suggest'   => $suggest,","  ];","}","","/* ---------- page ---------- */","$page_title = \"Min/Max Report\";","require_once __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container-fluid py-3\">","","  <div class=\"d-flex justify-content-between align-items-center mb-2\">","    <h1 class=\"h4 mb-0\"><?= htmlspecialchars($page_title) ?></h1>","    <div class=\"d-flex gap-2\">","      <?php if ($can_create_advice): ?>","      <button id=\"btnCreateAdvice\" class=\"btn btn-sm btn-primary\">Create Purchase Advice</button>","      <?php endif; ?>","    </div>","  </div>","","  <form class=\"row g-2 mb-3\">","    <div class=\"col-auto\">","      <select name=\"warehouse_id\" class=\"form-select form-select-sm\">","        <option value=\"0\">All Warehouses</option>","        <?php foreach ($warehouses as $w): ?>","          <option value=\"<?= (int)$w['id'] ?>\" <?= ((int)$w['id'] === $warehouse_id) ? 'selected' : '' ?>>","            <?= htmlspecialchars(($w['code'] ?? '') . ' \u2014 ' . $w['name']) ?>","          </option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-auto\">","      <input class=\"form-control form-control-sm\" name=\"q\" placeholder=\"Search code / name\" value=\"<?= htmlspecialchars($q) ?>\">","    </div>","    <div class=\"col-auto form-check d-flex align-items-center\">","      <input class=\"form-check-input me-1\" type=\"checkbox\" id=\"below\" name=\"below\" value=\"1\" <?= $show_only_below?'checked':'' ?>>","      <label class=\"form-check-label\" for=\"below\">Only below threshold</label>","    </div>","    <div class=\"col-auto\">","      <button class=\"btn btn-sm btn-secondary\">Filter</button>","      <a class=\"btn btn-sm btn-outline-primary\" href=\"?\">Reset</a>","    </div>","  </form>","","  <div class=\"table-responsive\">","    <table class=\"table table-sm align-middle\" id=\"tbl\">","      <thead class=\"table-light\">","      <tr>","        <?php if ($can_create_advice): ?><th style=\"width:28px\"><input type=\"checkbox\" id=\"chkAll\"></th><?php endif; ?>","        <th>Item</th>","        <th class=\"text-center\">UOM</th>","        <th class=\"text-end\">On-hand</th>","        <th class=\"text-end\">Reserved</th>","        <th class=\"text-end\">Free</th>","        <th class=\"text-end\">Min</th>","        <th class=\"text-end\">ROP</th>","        <th class=\"text-end\">Safety</th>","        <th class=\"text-end\">Max</th>","        <th>Mode</th>","        <th class=\"text-end\">Threshold</th>","        <th class=\"text-end\">Suggested</th>","        <th>Notes</th>","      </tr>","      </thead>","      <tbody>","      <?php if (!$data): ?>","        <tr><td colspan=\"<?= $can_create_advice?14:13 ?>\" class=\"text-center text-muted py-4\">No items.</td></tr>","      <?php else: foreach ($data as $r):","        $below = $r['free'] < $r['thr'];","        $rowCls = $below ? 'table-warning' : '';","      ?>","        <tr class=\"<?= $rowCls ?>\">","          <?php if ($can_create_advice): ?>","          <td><input type=\"checkbox\" class=\"rowChk\" <?= $r['suggest']>0 ? '' : 'disabled' ?>","                     data-item='<?= htmlspecialchars(json_encode([","                       'item_id'=>$r['item_id']","                     ], JSON_UNESCAPED_UNICODE)) ?>'></td>","          <?php endif; ?>","          <td class=\"fw-semibold\"><?= htmlspecialchars(($r['code'] ? ($r['code'].' \u2014 ') : '').$r['name']) ?></td>","          <td class=\"text-center\"><?= htmlspecialchars($r['uom']) ?></td>","          <td class=\"text-end\"><?= number_format($r['onhand'], 3) ?></td>","          <td class=\"text-end\"><?= number_format($r['reserved'], 3) ?></td>","          <td class=\"text-end\"><?= number_format($r['free'], 3) ?></td>","          <td class=\"text-end\"><?= number_format($r['min'], 3) ?></td>","          <td class=\"text-end\"><?= number_format($r['rop'], 3) ?></td>","          <td class=\"text-end\"><?= number_format($r['safety'], 3) ?></td>","          <td class=\"text-end\"><?= number_format($r['max'], 3) ?></td>","          <td>","            <?php if ($r['mode']==='adaptive'): ?>","              <span class=\"badge bg-info-subtle text-info border\">adaptive</span>","              <?php if ($r['spike']): ?><span class=\"badge bg-danger-subtle text-danger border ms-1\">spike<?= $r['ratio'] ? ' \u00d7'.number_format($r['ratio'],2) : '' ?></span><?php endif; ?>","            <?php else: ?>","              <span class=\"badge bg-secondary-subtle text-secondary border\">static</span>","            <?php endif; ?>","          </td>","          <td class=\"text-end\"><?= number_format($r['thr'], 3) ?></td>","          <td class=\"text-end fw-semibold\"><?= number_format($r['suggest'], 3) ?></td>","          <td class=\"small text-muted\"><?= $below ? 'Below threshold' : '\u2014' ?></td>","        </tr>","      <?php endforeach; endif; ?>","      </tbody>","    </table>","  </div>","","  <?php if ($can_create_advice): ?>","  <div class=\"mt-3 text-end\">","    <button id=\"btnCreateAdviceBottom\" class=\"btn btn-sm btn-primary\">Create Purchase Advice</button>","  </div>","  <?php endif; ?>","","</div>","","<?php if ($can_create_advice): ?>","<script>","const chkAll = document.getElementById('chkAll');","chkAll?.addEventListener('change', ()=>{","  document.querySelectorAll('.rowChk:not([disabled])').forEach(x=>{ x.checked = chkAll.checked; });","});","","async function createAdvice() {","  const sel = Array.from(document.querySelectorAll('.rowChk:checked'));","  if (sel.length===0) { alert('Select at least one row with suggested qty.'); return; }","","  const item_ids = sel.map(x => JSON.parse(x.dataset.item).item_id);","  const warehouse_id = <?= (int)$warehouse_id ?> || null;","  if (!warehouse_id) { alert('Please filter by a specific warehouse to create advice.'); return; }","","  const btns = [document.getElementById('btnCreateAdvice'), document.getElementById('btnCreateAdviceBottom')].filter(Boolean);","  btns.forEach(b=>{ b.disabled=true; b.textContent='Creating\u2026'; });","","  try{","    const r = await fetch('_ajax/create_purchase_advice.php', {","      method:'POST', headers:{'Content-Type':'application/json'},","      body: JSON.stringify({ warehouse_id, item_ids })","    });","    const raw = await r.text(); const s = raw.indexOf('{'), e = raw.lastIndexOf('}');","    const json = (s!=-1&&e!=-1&&e>s) ? raw.slice(s,e+1) : raw;","    const data = JSON.parse(json);","    if (data.ok) {","      alert('Purchase Advice created: '+data.advice_no);","      location.href = 'purchase_advice_view.php?id='+data.advice_id;","    } else {","      alert('Create failed: '+(data.error||'Unknown'));","    }","  } catch(e) {","    alert('Error: ' + (e?.message||e));","  } finally {","    btns.forEach(b=>{ b.disabled=false; b.textContent='Create Purchase Advice'; });","  }","}","","document.getElementById('btnCreateAdvice')?.addEventListener('click', createAdvice);","document.getElementById('btnCreateAdviceBottom')?.addEventListener('click', createAdvice);","</script>","<?php endif; ?>","","<?php require_once __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/valuation/_ajax/snapshot.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/ValuationService.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('valuation.snapshot'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\ValuationService($pdo);","  $n=$svc->snapshot((string)($in['snap_date']??date('Y-m-d')));","  echo json_encode(['ok'=>true,'data'=>['snapshots'=>$n]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/valuation/_ajax/cc_post.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/CycleCountService.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('stores.cc.post'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\CycleCountService($pdo);","  $res=$svc->post((int)($in['cc_id']??0));","  echo json_encode(['ok'=>true,'data'=>$res]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/valuation/_ajax/rebuild_inputs.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/ValuationService.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('valuation.rebuild'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\ValuationService($pdo);","  $n=$svc->rebuildInputs((string)($in['from']??date('Y-m-01')), (string)($in['to']??date('Y-m-d')));","  echo json_encode(['ok'=>true,'data'=>['inputs_built'=>$n]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/valuation/_ajax/cc_create.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/CycleCountService.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('stores.cc.create'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\CycleCountService($pdo);","  $id=$svc->create((string)($in['cc_date']??date('Y-m-d')),(int)($in['warehouse_id']??0));","  echo json_encode(['ok'=>true,'data'=>['cc_id'=>$id]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/valuation/_ajax/cc_add_line.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/CycleCountService.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('stores.cc.edit'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\CycleCountService($pdo);","  $id=$svc->addLine((int)($in['cc_id']??0),(int)($in['item_id']??0),(float)($in['counted_qty']??0));","  echo json_encode(['ok'=>true,'data'=>['line_id'=>$id]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/valuation/cycle_count_console.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/rbac.php';","require_login(); require_permission('stores.cc.view');","?><!doctype html><html><head><meta charset=\"utf-8\"><title>Cycle Count</title>","<style>body{font-family:system-ui,Segoe UI,Roboto,Arial,sans-serif;margin:20px}label{display:block;margin:6px 0}</style></head><body>","<h1>Cycle Count</h1>","<label>Date <input id=\"d\" type=\"date\"></label>","<label>Warehouse <input id=\"w\"></label>","<button id=\"c\">Create</button> <b id=\"id\"></b>","<label>Item <input id=\"i\" type=\"number\"></label>","<label>Counted Qty <input id=\"q\" type=\"number\" step=\"0.000001\"></label>","<button id=\"a\">Add</button>","<button id=\"p\">Post</button> <span id=\"m\"></span>","<script>","async function api(u,d){const r=await fetch(u,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(d)});const j=await r.json();if(!j.ok)throw new Error(j.error);return j.data;}","c.onclick=async()=>{try{const d=await api('valuation/_ajax/cc_create.php',{cc_date:document.getElementById('d').value,warehouse_id:parseInt(document.getElementById('w').value||0)});id.textContent=d.cc_id;window.cc=d.cc_id;}catch(e){alert(e.message);}}","a.onclick=async()=>{try{const d=await api('valuation/_ajax/cc_add_line.php',{cc_id:window.cc,item_id:parseInt(document.getElementById('i').value||0),counted_qty:parseFloat(document.getElementById('q').value||'0')});m.textContent='Line '+d.line_id;}catch(e){alert(e.message);}}","p.onclick=async()=>{try{const d=await api('valuation/_ajax/cc_post.php',{cc_id:window.cc});m.textContent='Posted variance total '+d.variance_total;}catch(e){alert(e.message);}}","</script></body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/audit/log_view.php": ["<?php","/** PATH: /public_html/audit/log_view.php */","declare(strict_types=1);","","$ROOT = dirname(__DIR__);","require_once $ROOT . '/includes/auth.php';","require_once $ROOT . '/includes/db.php';","","require_login();","if (!has_permission('audit.view')) { http_response_code(403); exit('Forbidden'); }","","$pdo = db();","$id = (int)($_GET['id'] ?? 0);","$st = $pdo->prepare(\"SELECT a.*, u.username, u.name","                     FROM audit_log a LEFT JOIN users u ON u.id = a.actor_id","                     WHERE a.id=?\");","$st->execute([$id]);","$log = $st->fetch(PDO::FETCH_ASSOC);","if (!$log) { http_response_code(404); exit('Not found'); }","","function h($v){ return htmlspecialchars((string)$v); }","function pretty($json) {","  if ($json === null || $json === '') return '<em class=\"text-muted\">\u2014</em>';","  $arr = json_decode((string)$json, true);","  if ($arr === null) return '<code>'.h((string)$json).'</code>';","  return '<pre class=\"mb-0\">'.h(json_encode($arr, JSON_PRETTY_PRINT|JSON_UNESCAPED_UNICODE)).'</pre>';","}","?>","<div class=\"row g-3\">","  <div class=\"col-md-4\">","    <div class=\"card\">","      <div class=\"card-header\"><strong>Meta</strong></div>","      <div class=\"card-body\">","        <div><strong>ID:</strong> <?= (int)$log['id'] ?></div>","        <div><strong>When:</strong> <?= h($log['created_at']) ?></div>","        <div><strong>Actor:</strong> <?= h($log['username'] ?? ('user#'.$log['actor_id'])) ?><?php if(!empty($log['name'])): ?> <small class=\"text-muted\">(<?= h($log['name']) ?>)</small><?php endif; ?></div>","        <div><strong>IP:</strong> <?= h($log['ip_addr'] ?? '') ?></div>","        <div><strong>Entity:</strong> <code><?= h($log['entity_type']) ?></code> #<?= (int)$log['entity_id'] ?></div>","        <div><strong>Action:</strong> <span class=\"badge text-bg-light border\"><?= h($log['action']) ?></span></div>","      </div>","    </div>","  </div>","  <div class=\"col-md-4\">","    <div class=\"card\">","      <div class=\"card-header\"><strong>Before</strong></div>","      <div class=\"card-body\"><?= pretty($log['before_json']) ?></div>","    </div>","  </div>","  <div class=\"col-md-4\">","    <div class=\"card\">","      <div class=\"card-header\"><strong>After</strong></div>","      <div class=\"card-body\"><?= pretty($log['after_json']) ?></div>","    </div>","  </div>","</div>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/audit/log_list.php": ["<?php","/** PATH: /public_html/audit/log_list.php */","declare(strict_types=1);","","/* Robust bootstrap: works from /public_html/audit/* */","$ROOT = dirname(__DIR__);","require_once $ROOT . '/includes/auth.php';","require_once $ROOT . '/includes/db.php';","","require_login();","if (!has_permission('audit.view')) { http_response_code(403); exit('Forbidden'); }","","$pdo = db();","","/* ---- Filters ---- */","$q_entity     = trim((string)($_GET['entity'] ?? ''));   // parties, projects, items, etc.","$q_entity_id  = trim((string)($_GET['entity_id'] ?? '')) !== '' ? (int)$_GET['entity_id'] : null;","$q_action     = trim((string)($_GET['action'] ?? ''));   // created, updated, deleted...","$q_actor_id   = trim((string)($_GET['actor_id'] ?? '')) !== '' ? (int)$_GET['actor_id'] : null;","$q_from       = trim((string)($_GET['from'] ?? ''));     // YYYY-MM-DD","$q_to         = trim((string)($_GET['to'] ?? ''));       // YYYY-MM-DD","","$where = [];","$params = [];","","if ($q_entity !== '') { $where[] = \"a.entity_type = ?\"; $params[] = $q_entity; }","if ($q_entity_id !== null) { $where[] = \"a.entity_id = ?\"; $params[] = $q_entity_id; }","if ($q_action !== '') { $where[] = \"a.action = ?\"; $params[] = $q_action; }","if ($q_actor_id !== null) { $where[] = \"a.actor_id = ?\"; $params[] = $q_actor_id; }","if ($q_from !== '') { $where[] = \"a.created_at >= ?\"; $params[] = $q_from . \" 00:00:00\"; }","if ($q_to   !== '') { $where[] = \"a.created_at <= ?\"; $params[] = $q_to . \" 23:59:59\"; }","","$WHERE_SQL = $where ? ('WHERE ' . implode(' AND ', $where)) : '';","","/* ---- Pagination (simple) ---- */","$page = max(1, (int)($_GET['page'] ?? 1));","$per  = 50;","$off  = ($page - 1) * $per;","","$cntStmt = $pdo->prepare(\"SELECT COUNT(*) FROM audit_log a $WHERE_SQL\");","$cntStmt->execute($params);","$total = (int)$cntStmt->fetchColumn();","$pages = max(1, (int)ceil($total / $per));","","$sql = \"SELECT a.id, a.actor_id, a.entity_type, a.entity_id, a.action, a.ip_addr, a.created_at,","               u.username AS actor_username, u.name AS actor_name","        FROM audit_log a","        LEFT JOIN users u ON u.id = a.actor_id","        $WHERE_SQL","        ORDER BY a.id DESC","        LIMIT $per OFFSET $off\";","$stmt = $pdo->prepare($sql);","$stmt->execute($params);","$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);","","/* ---- UI ---- */","$UI_PATH     = $ROOT . '/ui';","$PAGE_TITLE  = 'Audit Log';","$ACTIVE_MENU = 'system.audit';","","require_once $UI_PATH . '/init.php';","require_once $UI_PATH . '/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 mb-0\">Audit Log</h1>","</div>","","<form method=\"get\" class=\"row g-2 mb-3\">","  <div class=\"col-md-3\">","    <input class=\"form-control\" name=\"entity\" placeholder=\"Entity (e.g. parties)\" value=\"<?= htmlspecialchars($q_entity) ?>\">","  </div>","  <div class=\"col-md-2\">","    <input class=\"form-control\" name=\"entity_id\" placeholder=\"Entity ID\" value=\"<?= htmlspecialchars((string)($q_entity_id ?? '')) ?>\">","  </div>","  <div class=\"col-md-2\">","    <input class=\"form-control\" name=\"action\" placeholder=\"Action (created/updated/...)\" value=\"<?= htmlspecialchars($q_action) ?>\">","  </div>","  <div class=\"col-md-2\">","    <input class=\"form-control\" name=\"actor_id\" placeholder=\"Actor ID\" value=\"<?= htmlspecialchars((string)($q_actor_id ?? '')) ?>\">","  </div>","  <div class=\"col-md-3\">","    <div class=\"d-flex gap-2\">","      <input type=\"date\" class=\"form-control\" name=\"from\" value=\"<?= htmlspecialchars($q_from) ?>\">","      <input type=\"date\" class=\"form-control\" name=\"to\" value=\"<?= htmlspecialchars($q_to) ?>\">","    </div>","  </div>","  <div class=\"col-md-12\">","    <button class=\"btn btn-outline-secondary\">Filter</button>","    <a class=\"btn btn-outline-dark\" href=\"/audit/log_list.php\">Reset</a>","  </div>","</form>","","<div class=\"table-responsive\">","  <table class=\"table table-sm align-middle\">","    <thead class=\"table-light\">","      <tr>","        <th>#</th>","        <th>When</th>","        <th>Actor</th>","        <th>Entity</th>","        <th>Entity ID</th>","        <th>Action</th>","        <th>IP</th>","        <th></th>","      </tr>","    </thead>","    <tbody>","      <?php foreach ($rows as $r): ?>","        <tr>","          <td><?= (int)$r['id'] ?></td>","          <td><small class=\"text-muted\"><?= htmlspecialchars((string)$r['created_at']) ?></small></td>","          <td>","            <?= htmlspecialchars((string)($r['actor_username'] ?? 'user#'.$r['actor_id'])) ?>","            <?php if (!empty($r['actor_name'])): ?>","              <small class=\"text-muted\"> (<?= htmlspecialchars((string)$r['actor_name']) ?>)</small>","            <?php endif; ?>","          </td>","          <td><code><?= htmlspecialchars((string)$r['entity_type']) ?></code></td>","          <td><?= (int)$r['entity_id'] ?></td>","          <td><span class=\"badge text-bg-light border\"><?= htmlspecialchars((string)$r['action']) ?></span></td>","          <td><small class=\"text-muted\"><?= htmlspecialchars((string)($r['ip_addr'] ?? '')) ?></small></td>","          <td><button class=\"btn btn-sm btn-outline-primary\" onclick=\"viewAudit(<?= (int)$r['id'] ?>)\">View</button></td>","        </tr>","      <?php endforeach; ?>","      <?php if (!$rows): ?>","        <tr><td colspan=\"8\" class=\"text-center text-muted py-4\">No logs found.</td></tr>","      <?php endif; ?>","    </tbody>","  </table>","</div>","","<nav aria-label=\"pager\">","  <ul class=\"pagination\">","    <?php for ($i=1; $i<=$pages; $i++): ?>","      <li class=\"page-item <?= $i===$page ? 'active' : '' ?>\">","        <a class=\"page-link\" href=\"?<?= http_build_query(array_merge($_GET, ['page'=>$i])) ?>\"><?= $i ?></a>","      </li>","    <?php endfor; ?>","  </ul>","</nav>","","<!-- Modal -->","<div class=\"modal fade\" id=\"auditModal\" tabindex=\"-1\" aria-hidden=\"true\">","  <div class=\"modal-dialog modal-xl modal-dialog-scrollable\">","    <div class=\"modal-content\">","      <div class=\"modal-header\">","        <h5 class=\"modal-title\">Audit Details</h5>","        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>","      </div>","      <div class=\"modal-body\" id=\"auditBody\">","        <div class=\"text-center text-muted\">Loading...</div>","      </div>","      <div class=\"modal-footer\">","        <button class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>","      </div>","    </div>","  </div>","</div>","","<script>","async function viewAudit(id){","  const res = await fetch('/audit/log_view.php?id=' + encodeURIComponent(id));","  const html = await res.text();","  document.getElementById('auditBody').innerHTML = html;","  const m = new bootstrap.Modal(document.getElementById('auditModal'));","  m.show();","}","</script>","","<?php require_once $UI_PATH . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/dashboard_safe.php": ["<?php","declare(strict_types=1);","","/**"," * Dashboard (SAFE MODE)"," * - Does NOT require auth/ui/helpers \u2014 so it cannot fatal on missing includes"," * - Tries to read counts if /includes/db.php exists; otherwise shows 0"," * - Turn on verbose errors with ?debug=1"," */","","$DEBUG = isset($_GET['debug']) && $_GET['debug'] === '1';","if ($DEBUG) {","  ini_set('display_errors', '1');","  ini_set('display_startup_errors', '1');","  error_reporting(E_ALL);","}","","function try_require_once(string $path): bool {","  if (is_file($path)) { require_once $path; return true; }","  return false;","}","","// Try to get $pdo (optional)","$pdo = null;","if (try_require_once(__DIR__ . '/includes/db.php') && isset($pdo) && $pdo instanceof PDO) {","  // ok","} else {","  $pdo = null; // keep null-safe","}","","// Null-safe counter (never fatal)","function safeCount(?PDO $pdo, string $sql): int {","  if (!$pdo) return 0;","  try { return (int)$pdo->query($sql)->fetchColumn(); }","  catch (Throwable $e) { return 0; }","}","","$counts = [","  'uom'           => safeCount($pdo, \"SELECT COUNT(*) FROM uom\"),","  'categories'    => safeCount($pdo, \"SELECT COUNT(*) FROM material_categories WHERE is_active=1\"),","  'subcategories' => safeCount($pdo, \"SELECT COUNT(*) FROM material_subcategories WHERE is_active=1\"),","  'items'         => safeCount($pdo, \"SELECT COUNT(*) FROM items WHERE is_active=1\"),","  'projects'      => safeCount($pdo, \"SELECT COUNT(*) FROM projects WHERE is_active=1\"),","  'notifications' => safeCount($pdo, \"SELECT COUNT(*) FROM notifications WHERE is_read=0\"),","  'audit'         => safeCount($pdo, \"SELECT COUNT(*) FROM audit_log\"),","];","?>","<!doctype html>","<html lang=\"en\">","<head>","<meta charset=\"utf-8\">","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","<title>Dashboard (Safe) \u2014 EMS Infra ERP</title>","<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","<link href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css\" rel=\"stylesheet\">","<style>","  body{background:#f7f7fb}","  .card .display-6{font-weight:600}","</style>","</head>","<body>","<nav class=\"navbar navbar-expand-lg bg-white border-bottom\">","  <div class=\"container-fluid\">","    <a class=\"navbar-brand fw-semibold\" href=\"#\">EMS Infra ERP</a>","    <div class=\"ms-auto d-flex gap-2\">","      <a class=\"btn btn-outline-primary btn-sm\" href=\"/material/index.php\"><i class=\"bi bi-diagram-3\"></i> Taxonomy</a>","      <a class=\"btn btn-primary btn-sm\" href=\"/items/items_form.php\"><i class=\"bi bi-plus-lg\"></i> New Item</a>","    </div>","  </div>","</nav>","","<main class=\"container-fluid py-3\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <div>","      <h1 class=\"h4 mb-0\">Dashboard (Safe Mode)</h1>","      <div class=\"text-muted small\">No auth/ui includes \u2014 for debugging only</div>","      <?php if ($DEBUG): ?><span class=\"badge text-bg-warning mt-2\">DEBUG ON</span><?php endif; ?>","    </div>","    <div>","      <a class=\"btn btn-outline-secondary btn-sm\" href=\"?debug=1\">Enable Debug</a>","    </div>","  </div>","","  <h2 class=\"h6 text-uppercase text-muted mb-2\">Master Data</h2>","  <div class=\"row g-3\">","    <div class=\"col-12 col-sm-6 col-lg-3\">","      <a href=\"/uom/uom_list.php\" class=\"text-decoration-none\">","        <div class=\"card shadow-sm h-100\"><div class=\"card-body d-flex justify-content-between\">","          <div><div class=\"fw-semibold\">UOM</div><div class=\"display-6\"><?= $counts['uom'] ?></div></div>","          <i class=\"bi bi-rulers fs-1 opacity-50\"></i>","        </div></div>","      </a>","    </div>","","    <div class=\"col-12 col-sm-6 col-lg-3\">","      <a href=\"/material/categories_list.php\" class=\"text-decoration-none\">","        <div class=\"card shadow-sm h-100\"><div class=\"card-body d-flex justify-content-between\">","          <div><div class=\"fw-semibold\">Categories</div><div class=\"display-6\"><?= $counts['categories'] ?></div></div>","          <i class=\"bi bi-collection fs-1 opacity-50\"></i>","        </div></div>","      </a>","    </div>","","    <div class=\"col-12 col-sm-6 col-lg-3\">","      <a href=\"/material/subcategories_list.php\" class=\"text-decoration-none\">","        <div class=\"card shadow-sm h-100\"><div class=\"card-body d-flex justify-content-between\">","          <div><div class=\"fw-semibold\">Subcategories</div><div class=\"display-6\"><?= $counts['subcategories'] ?></div></div>","          <i class=\"bi bi-diagram-3 fs-1 opacity-50\"></i>","        </div></div>","      </a>","    </div>","","    <div class=\"col-12 col-sm-6 col-lg-3\">","      <a href=\"/items/items_list.php\" class=\"text-decoration-none\">","        <div class=\"card shadow-sm h-100\"><div class=\"card-body d-flex justify-content-between\">","          <div><div class=\"fw-semibold\">Items</div><div class=\"display-6\"><?= $counts['items'] ?></div></div>","          <i class=\"bi bi-box-seam fs-1 opacity-50\"></i>","        </div></div>","      </a>","    </div>","  </div>","","  <h2 class=\"h6 text-uppercase text-muted mt-4 mb-2\">Operations</h2>","  <div class=\"row g-3\">","    <div class=\"col-12 col-sm-6 col-lg-3\">","      <a href=\"/projects/projects_list.php\" class=\"text-decoration-none\">","        <div class=\"card shadow-sm h-100\"><div class=\"card-body d-flex justify-content-between\">","          <div><div class=\"fw-semibold\">Projects</div><div class=\"display-6\"><?= $counts['projects'] ?></div></div>","          <i class=\"bi bi-kanban fs-1 opacity-50\"></i>","        </div></div>","      </a>","    </div>","","    <div class=\"col-12 col-sm-6 col-lg-3\">","      <a href=\"/notifications/center.php\" class=\"text-decoration-none\">","        <div class=\"card shadow-sm h-100\"><div class=\"card-body d-flex justify-content-between\">","          <div><div class=\"fw-semibold\">Notifications</div><div class=\"display-6\"><?= $counts['notifications'] ?></div></div>","          <i class=\"bi bi-bell fs-1 opacity-50\"></i>","        </div></div>","      </a>","    </div>","","    <div class=\"col-12 col-sm-6 col-lg-3\">","      <a href=\"/audit_log.php\" class=\"text-decoration-none\">","        <div class=\"card shadow-sm h-100\"><div class=\"card-body d-flex justify-content-between\">","          <div><div class=\"fw-semibold\">Audit Log</div><div class=\"display-6\"><?= $counts['audit'] ?></div></div>","          <i class=\"bi bi-clipboard-data fs-1 opacity-50\"></i>","        </div></div>","      </a>","    </div>","  </div>","","  <h2 class=\"h6 text-uppercase text-muted mt-4 mb-2\">Quick Actions</h2>","  <div class=\"row g-2\">","    <div class=\"col-auto\"><a class=\"btn btn-outline-secondary\" href=\"/material/categories_form.php\"><i class=\"bi bi-plus-circle\"></i> New Category</a></div>","    <div class=\"col-auto\"><a class=\"btn btn-outline-secondary\" href=\"/material/subcategories_form.php\"><i class=\"bi bi-plus-circle\"></i> New Subcategory</a></div>","    <div class=\"col-auto\"><a class=\"btn btn-outline-secondary\" href=\"/uom/uom_form.php\"><i class=\"bi bi-plus-circle\"></i> New UOM</a></div>","    <div class=\"col-auto\"><a class=\"btn btn-primary\" href=\"/items/items_form.php\"><i class=\"bi bi-plus-circle\"></i> New Item</a></div>","  </div>","</main>","","<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/identity/users_list.php": ["<?php","/** PATH: /public_html/identity/users_list.php (finalized replacement) */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('core.user.view');","","// Permission-derived UI flags","$canCreate = has_permission('core.user.manage');   // for New User button","$canEdit   = has_permission('core.user.manage');   // for Edit button","$canRoles  = has_permission('userrole.update');    // for managing roles","","$pdo = db();","","$q = trim($_GET['q'] ?? '');","","// Build query (same logic as your original, simplified here)","$sql = \"SELECT u.id, u.username, u.name, u.email, u.status, u.created_at","        FROM users u","        WHERE (? = '' OR u.name LIKE ? OR u.username LIKE ? OR u.email LIKE ?)","        ORDER BY u.created_at DESC","        LIMIT 500\";","$like = '%' . $q . '%';","$params = [$q, $like, $like, $like];","$stmt = $pdo->prepare($sql);","$stmt->execute($params);","$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);","","include dirname(__DIR__).'/ui/layout_start.php';","?>","<div class=\"container-fluid\">","  <main class=\"px-3 py-3\">","","    <div class=\"d-flex justify-content-between align-items-center mb-3\">","      <h1 class=\"h4 m-0\">Users</h1>","      <div>","        <?php if ($canCreate): ?>","          <a href=\"users_form.php\" class=\"btn btn-primary btn-sm\">New User</a>","        <?php endif; ?>","      </div>","    </div>","","    <form class=\"mb-3\" method=\"get\" action=\"\">","      <div class=\"input-group input-group-sm\" style=\"max-width: 420px;\">","        <input type=\"text\" class=\"form-control\" name=\"q\" value=\"<?= htmlspecialchars($q) ?>\" placeholder=\"Search name, username, email\">","        <button class=\"btn btn-outline-secondary\" type=\"submit\">Search</button>","      </div>","    </form>","","    <div class=\"table-responsive\">","      <table class=\"table table-sm align-middle\">","        <thead class=\"table-light\">","          <tr>","            <th style=\"width: 80px\">#</th>","            <th>Username</th>","            <th>Name</th>","            <th>Email</th>","            <th>Status</th>","            <th>Created</th>","            <th style=\"width: 220px\">Actions</th>","          </tr>","        </thead>","        <tbody>","          <?php foreach ($rows as $row): ?>","            <tr>","              <td><?= (int)$row['id'] ?></td>","              <td><?= htmlspecialchars($row['username']) ?></td>","              <td><?= htmlspecialchars($row['name']) ?></td>","              <td><?= htmlspecialchars($row['email']) ?></td>","              <td><span class=\"badge bg-<?= $row['status']==='active'?'success':'secondary' ?>\"><?= htmlspecialchars($row['status']) ?></span></td>","              <td><?= htmlspecialchars($row['created_at']) ?></td>","              <td>","                <div class=\"btn-group btn-group-sm\" role=\"group\">","                  <?php if ($canEdit): ?>","                    <a href=\"users_form.php?id=<?= (int)$row['id'] ?>\" class=\"btn btn-outline-secondary\">Edit</a>","                  <?php endif; ?>","                  <?php if ($canRoles): ?>","                    <a href=\"user_roles.php?user_id=<?= (int)$row['id'] ?>\" class=\"btn btn-outline-primary\">Roles</a>","                  <?php endif; ?>","                </div>","              </td>","            </tr>","          <?php endforeach; ?>","        </tbody>","      </table>","    </div>","","  </main>","</div>","<?php include dirname(__DIR__).'/ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/identity/users_form.php": ["<?php","/** PATH: /public_html/identity/users_form.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('core.user.manage');","","// Permission-derived UI flags","$canCreate = has_permission('core.user.manage');","$canEdit   = has_permission('core.user.manage');","$canRoles  = has_permission('userrole.update');","","$pdo = db();","","$id = isset($_GET['id']) ? (int)$_GET['id'] : 0;","$editing = $id > 0;","","$user = [","  'employee_id' => null,","  'username'    => '',","  'name'        => '',","  'email'       => '',","  'status'      => 'active',","];","","// --- Prefill from Employee when coming from HR list ---","$fromEmployeeId = isset($_GET['from_employee_id']) ? (int)$_GET['from_employee_id'] : 0;","","if (!$id && $fromEmployeeId > 0) {","  // If a user already exists for this employee, redirect to edit that user","  $st = $pdo->prepare(\"SELECT id FROM users WHERE employee_id=? LIMIT 1\");","  $st->execute([$fromEmployeeId]);","  $existingUid = (int)$st->fetchColumn();","  if ($existingUid) {","    header('Location: /identity/users_form.php?id='.$existingUid.'&from=employee'); exit;","  }","","  // Fetch employee details and prefill","  $st = $pdo->prepare(\"SELECT first_name, last_name, email FROM employees WHERE id=?\");","  $st->execute([$fromEmployeeId]);","  if ($emp = $st->fetch(PDO::FETCH_ASSOC)) {","    $first = trim($emp['first_name'] ?? '');","    $last  = trim($emp['last_name'] ?? '');","    $name  = trim($first.' '.$last);","    $email = trim($emp['email'] ?? '');","","    // Suggest a username: first.last (lowercase, alnum+dot), ensure unique","    $base = strtolower(preg_replace('/[^a-z0-9]+/i','.', trim($first).'.'.trim($last)));","    $base = trim($base, '.');","    if ($base === '') $base = 'user'.mt_rand(100,999);","","    $username = $base;","    $try = 1;","    $chk = $pdo->prepare(\"SELECT COUNT(*) FROM users WHERE username=?\");","    while (true) {","      $chk->execute([$username]);","      if ((int)$chk->fetchColumn() === 0) break;","      $try++;","      $username = $base.$try;","      if ($try > 50) break; // safety","    }","","    // Set into form model","    $user['employee_id'] = $fromEmployeeId;","    $user['username']    = $username;","    $user['name']        = $name ?: $username;","    $user['email']       = $email;","    $user['status']      = 'active';","  }","}","","if ($editing) {","    $stmt = $pdo->prepare(\"SELECT id, employee_id, username, name, email, status FROM users WHERE id = ?\");","    $stmt->execute([$id]);","    $row = $stmt->fetch(PDO::FETCH_ASSOC);","    if (!$row) { http_response_code(404); exit('User not found.'); }","    $user = array_merge($user, $row);","}","","/* ---- Load roles & current assignments ---- */","$roles = $pdo->query(\"SELECT id, code, name FROM roles ORDER BY name ASC\")->fetchAll(PDO::FETCH_ASSOC);","$assignedRoleIds = [];","if ($editing) {","    $st = $pdo->prepare(\"SELECT role_id FROM user_roles WHERE user_id = ?\");","    $st->execute([$id]);","    $assignedRoleIds = array_map('intval', array_column($st->fetchAll(PDO::FETCH_ASSOC), 'role_id'));","}","","$errors = [];","$okMsg  = '';","","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","    // If you have CSRF helper, uncomment:","    // require_once __DIR__ . '/../includes/csrf.php';","    // csrf_validate_or_die();","","    $employee_id = (isset($_POST['employee_id']) && $_POST['employee_id'] !== '') ? (int)$_POST['employee_id'] : null;","    $username = trim((string)($_POST['username'] ?? ''));","    $name     = trim((string)($_POST['name'] ?? ''));","    $email    = trim((string)($_POST['email'] ?? ''));","    $status   = ($_POST['status'] ?? 'inactive') === 'active' ? 'active' : 'inactive';","    $password = (string)($_POST['password'] ?? '');","    $roleIds  = array_map('intval', (array)($_POST['roles'] ?? []));","","    if ($username === '') $errors[] = 'Username is required.';","    if ($name === '')     $errors[] = 'Name is required.';","    if ($email === '')    $errors[] = 'Email is required.';","","    // Unique username/email","    if (!$errors) {","        $sql = \"SELECT id FROM users WHERE (username = ? OR email = ?)\";","        $params = [$username, $email];","        if ($editing) { $sql .= \" AND id <> ?\"; $params[] = $id; }","        $st = $pdo->prepare($sql);","        $st->execute($params);","        if ($st->fetch(PDO::FETCH_ASSOC)) $errors[] = 'Username or Email already exists.';","    }","","    // Unique employee_id (at most one user per employee)","    if (!$errors && $employee_id) {","        $sql = \"SELECT id FROM users WHERE employee_id = ?\";","        $params = [$employee_id];","        if ($editing) { $sql .= \" AND id <> ?\"; $params[] = $id; }","        $st = $pdo->prepare($sql);","        $st->execute($params);","        if ($st->fetch(PDO::FETCH_ASSOC)) $errors[] = 'This Employee is already linked to another user.';","    }","","    if (!$errors) {","        $pdo->beginTransaction();","        try {","            if ($editing) {","                if ($password !== '') {","                    $hash = password_hash($password, PASSWORD_DEFAULT);","                    $st = $pdo->prepare(\"UPDATE users SET employee_id=?, username=?, name=?, email=?, status=?, password=?, updated_at=NOW() WHERE id=?\");","                    $st->execute([$employee_id, $username, $name, $email, $status, $hash, $id]);","                } else {","                    $st = $pdo->prepare(\"UPDATE users SET employee_id=?, username=?, name=?, email=?, status=?, updated_at=NOW() WHERE id=?\");","                    $st->execute([$employee_id, $username, $name, $email, $status, $id]);","                }","","                // Replace roles","                $pdo->prepare(\"DELETE FROM user_roles WHERE user_id = ?\")->execute([$id]);","                if ($roleIds) {","                    $ins = $pdo->prepare(\"INSERT INTO user_roles (user_id, role_id) VALUES (?, ?)\");","                    foreach ($roleIds as $rid) $ins->execute([$id, $rid]);","                }","","                $okMsg = 'User updated.';","            } else {","                if ($password === '') throw new RuntimeException('Password is required for new users.');","                $hash = password_hash($password, PASSWORD_DEFAULT);","                $st = $pdo->prepare(\"INSERT INTO users (employee_id, username, name, email, password, status, created_at, updated_at)","                                     VALUES (?, ?, ?, ?, ?, ?, NOW(), NOW())\");","                $st->execute([$employee_id, $username, $name, $email, $hash, $status]);","                $id = (int)$pdo->lastInsertId();","                $editing = true;","","                if ($roleIds) {","                    $ins = $pdo->prepare(\"INSERT INTO user_roles (user_id, role_id) VALUES (?, ?)\");","                    foreach ($roleIds as $rid) $ins->execute([$id, $rid]);","                }","","                $okMsg = 'User created.';","            }","","            $pdo->commit();","","            // Reload","            $stmt = $pdo->prepare(\"SELECT id, employee_id, username, name, email, status FROM users WHERE id = ?\");","            $stmt->execute([$id]);","            $user = $stmt->fetch(PDO::FETCH_ASSOC) ?: $user;","","            $st = $pdo->prepare(\"SELECT role_id FROM user_roles WHERE user_id = ?\");","            $st->execute([$id]);","            $assignedRoleIds = array_map('intval', array_column($st->fetchAll(PDO::FETCH_ASSOC), 'role_id'));","        } catch (Throwable $e) {","            $pdo->rollBack();","            $errors[] = 'Save failed: ' . $e->getMessage();","        }","    }","}","","/* ---- Use your UI files ---- */","$UI_PATH     = dirname(__DIR__) . '/ui';","$PAGE_TITLE  = $editing ? 'Edit User' : 'Add User';","$ACTIVE_MENU = 'identity.users';","","require_once $UI_PATH . '/init.php';","require_once $UI_PATH . '/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 mb-0\"><?= $editing ? 'Edit User' : 'Add User' ?></h1>","  <div class=\"d-flex gap-2\">","    <?php if (!empty($user['employee_id'])): ?>","      <a class=\"btn btn-outline-dark btn-sm\"","         href=\"/api/iam_provisioning.php?action=preview&employee_id=<?= (int)$user['employee_id'] ?>\"","         target=\"_blank\">Preview Access</a>","      <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" onclick=\"commitProvision(<?= (int)$user['employee_id'] ?>)\">","        Provision / Update Access","      </button>","    <?php endif; ?>","    <a class=\"btn btn-outline-secondary btn-sm\" href=\"/identity/users_list.php\">Back</a>","  </div>","</div>","","<?php if ($errors): ?>","  <div class=\"alert alert-danger\"><ul class=\"mb-0\"><?php foreach ($errors as $e): ?><li><?= htmlspecialchars($e) ?></li><?php endforeach; ?></ul></div>","<?php elseif ($okMsg): ?>","  <div class=\"alert alert-success\"><?= htmlspecialchars($okMsg) ?></div>","<?php endif; ?>","","<?php if (!empty($user['employee_id'])): ?>","  <div class=\"alert alert-info py-2\">","    Linked Employee ID: <strong>#<?= (int)$user['employee_id'] ?></strong>","    <a class=\"ms-2\" href=\"/hr/employees_form.php?id=<?= (int)$user['employee_id'] ?>\" target=\"_blank\">Open Employee</a>","  </div>","<?php endif; ?>","","<form method=\"post\" class=\"row g-3\">","  <!-- <?php // if (function_exists('csrf_field')) csrf_field(); ?> -->","","  <?php if (!empty($user['employee_id'])): ?>","    <input type=\"hidden\" name=\"employee_id\" value=\"<?= (int)$user['employee_id'] ?>\">","  <?php else: ?>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Link Employee (ID)</label>","      <input type=\"number\" name=\"employee_id\" class=\"form-control\" value=\"<?= isset($user['employee_id']) ? (int)$user['employee_id'] : '' ?>\">","      <div class=\"form-text\">Optional \u2014 link to HR employee record.</div>","    </div>","  <?php endif; ?>","","  <div class=\"col-md-6\">","    <label class=\"form-label\">Username</label>","    <input name=\"username\" class=\"form-control\" required value=\"<?= htmlspecialchars((string)$user['username']) ?>\">","  </div>","","  <div class=\"col-md-6\">","    <label class=\"form-label\">Name</label>","    <input name=\"name\" class=\"form-control\" required value=\"<?= htmlspecialchars((string)$user['name']) ?>\">","  </div>","","  <div class=\"col-md-6\">","    <label class=\"form-label\">Email</label>","    <input type=\"email\" name=\"email\" class=\"form-control\" required value=\"<?= htmlspecialchars((string)$user['email']) ?>\">","  </div>","","  <div class=\"col-md-3\">","    <label class=\"form-label\">Status</label>","    <select name=\"status\" class=\"form-select\">","      <option value=\"active\"   <?= $user['status'] === 'active' ? 'selected' : '' ?>>Active</option>","      <option value=\"inactive\" <?= $user['status'] === 'inactive' ? 'selected' : '' ?>>Inactive</option>","    </select>","  </div>","","  <div class=\"col-md-3\">","    <label class=\"form-label\"><?= $editing ? 'New Password (optional)' : 'Password' ?></label>","    <input type=\"password\" name=\"password\" class=\"form-control\" <?= $editing ? '' : 'required' ?>>","  </div>","","  <div class=\"col-12\">","    <label class=\"form-label\">Roles</label>","    <div class=\"border rounded p-3\" style=\"max-height: 360px; overflow:auto;\">","      <?php foreach ($roles as $r):","        $rid = (int)$r['id'];","        $checked = in_array($rid, $assignedRoleIds, true);","      ?>","        <div class=\"form-check\">","          <input class=\"form-check-input\" type=\"checkbox\" name=\"roles[]\" value=\"<?= $rid ?>\" id=\"role<?= $rid ?>\" <?= $checked ? 'checked' : '' ?>>","          <label class=\"form-check-label\" for=\"role<?= $rid ?>\">","            <code><?= htmlspecialchars((string)($r['code'] ?? 'role_'.$rid)) ?></code> \u2014 <?= htmlspecialchars((string)$r['name']) ?>","          </label>","        </div>","      <?php endforeach; ?>","      <?php if (!$roles): ?>","        <div class=\"text-muted\">No roles defined yet. Create roles first.</div>","      <?php endif; ?>","    </div>","  </div>","","  <div class=\"col-12\">","    <button class=\"btn btn-primary\" type=\"submit\"><?= $editing ? 'Save Changes' : 'Create User' ?></button>","  </div>","</form>","","<script>","async function commitProvision(empId) {","  if (!empId) return alert('No linked employee to provision.');","  if (!confirm('Generate/Update access for the linked employee via rules?')) return;","  try {","    const r = await fetch('/api/iam_provisioning.php?action=commit&employee_id=' + empId, { credentials: 'same-origin' });","    const data = await r.json();","    if (data.error) return alert(data.error);","    alert('Done: ' + (data.status || 'ok'));","  } catch (e) {","    alert('Failed: ' + e);","  }","}","</script>","","<?php require_once $UI_PATH . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/identity/roles_form.php": ["<?php","/** PATH: /public_html/identity/roles_form.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('core.role.manage');","","$pdo = db();","","/* ---------- Detect columns so this works with older/newer schemas ---------- */","$roleCols = $pdo->query(\"SHOW COLUMNS FROM roles\")->fetchAll(PDO::FETCH_COLUMN);","$hasCode     = in_array('code', $roleCols, true);","$hasStatus   = in_array('status', $roleCols, true);","$hasDesc     = in_array('description', $roleCols, true);","","$id = isset($_GET['id']) ? (int)$_GET['id'] : 0;","$editing = $id > 0;","","$role = [","  'name'        => '',","  'code'        => $hasCode ? '' : null,","  'status'      => $hasStatus ? 'active' : null,","  'description' => $hasDesc ? '' : null,","];","","if ($editing) {","    $sel = ['id', 'name'];","    if ($hasCode)   $sel[] = 'code';","    if ($hasStatus) $sel[] = 'status';","    if ($hasDesc)   $sel[] = 'description';","","    $sql = \"SELECT \".implode(',', $sel).\" FROM roles WHERE id = ?\";","    $st  = $pdo->prepare($sql);","    $st->execute([$id]);","    $row = $st->fetch(PDO::FETCH_ASSOC);","    if (!$row) { http_response_code(404); exit('Role not found.'); }","    $role = array_merge($role, $row);","}","","/* ---- Load ALL permissions, grouped + sorted by module ---- */","$allPerms = $pdo->query(\"","  SELECT id, code, name, COALESCE(module,'other') AS module","  FROM permissions","  ORDER BY module ASC, name ASC","\")->fetchAll(PDO::FETCH_ASSOC);","","$permsByModule = [];","foreach ($allPerms as $p) {","  $permsByModule[$p['module']][] = $p;","}","","/* ---- Load currently assigned permissions for this role ---- */","$assignedPermIds = [];","if ($editing) {","  $st = $pdo->prepare(\"SELECT permission_id FROM role_permissions WHERE role_id = ?\");","  $st->execute([$id]);","  $assignedPermIds = array_map('intval', $st->fetchAll(PDO::FETCH_COLUMN));","}","","$errors = [];","$okMsg  = '';","","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","    $name   = trim((string)($_POST['name'] ?? ''));","    $code   = $hasCode   ? trim((string)($_POST['code'] ?? '')) : null;","    $status = $hasStatus ? (($_POST['status'] ?? 'inactive') === 'active' ? 'active' : 'inactive') : null;","    $desc   = $hasDesc   ? trim((string)($_POST['description'] ?? '')) : null;","","    $permIds = array_map('intval', (array)($_POST['permissions'] ?? []));","","    if ($name === '') $errors[] = 'Role name is required.';","    if ($hasCode && $code === '') $errors[] = 'Role code is required.';","","    // Uniqueness checks","    if (!$errors) {","      if ($hasCode) {","        $sql = \"SELECT id FROM roles WHERE code = ?\" . ($editing ? \" AND id <> ?\" : \"\");","        $st  = $pdo->prepare($sql);","        $st->execute($editing ? [$code, $id] : [$code]);","        if ($st->fetch()) $errors[] = 'Role code already exists.';","      } else {","        // Fallback uniqueness by name if code does not exist","        $sql = \"SELECT id FROM roles WHERE name = ?\" . ($editing ? \" AND id <> ?\" : \"\");","        $st  = $pdo->prepare($sql);","        $st->execute($editing ? [$name, $id] : [$name]);","        if ($st->fetch()) $errors[] = 'Role name already exists.';","      }","    }","","    if (!$errors) {","      $pdo->beginTransaction();","      try {","        if ($editing) {","          $fields = ['name = ?'];","          $params = [$name];","","          if ($hasCode)   { $fields[] = 'code = ?';        $params[] = $code; }","          if ($hasStatus) { $fields[] = 'status = ?';      $params[] = $status; }","          if ($hasDesc)   { $fields[] = 'description = ?'; $params[] = $desc; }","","          $fields[] = 'updated_at = NOW()';","          $params[] = $id;","","          $sql = \"UPDATE roles SET \".implode(', ', $fields).\" WHERE id = ?\";","          $pdo->prepare($sql)->execute($params);","","          // Replace role-permissions mapping","          $pdo->prepare(\"DELETE FROM role_permissions WHERE role_id = ?\")->execute([$id]);","          if ($permIds) {","            $ins = $pdo->prepare(\"INSERT INTO role_permissions (role_id, permission_id) VALUES (?, ?)\");","            foreach ($permIds as $pid) { $ins->execute([$id, $pid]); }","          }","","          $okMsg = 'Role updated.';","        } else {","          $cols = ['name', 'created_at', 'updated_at'];","          $vals = ['?', 'NOW()', 'NOW()'];","          $pars = [$name];","","          if ($hasCode)   { array_unshift($cols, 'code');        array_unshift($vals, '?'); $pars = array_merge([$code], $pars); }","          if ($hasStatus) { $cols[] = 'status';                  $vals[] = '?';              $pars[] = $status; }","          if ($hasDesc)   { $cols[] = 'description';             $vals[] = '?';              $pars[] = $desc; }","","          $sql = \"INSERT INTO roles (\".implode(',', $cols).\") VALUES (\".implode(',', $vals).\")\";","          $pdo->prepare($sql)->execute($pars);","          $id = (int)$pdo->lastInsertId();","","          if ($permIds) {","            $ins = $pdo->prepare(\"INSERT INTO role_permissions (role_id, permission_id) VALUES (?, ?)\");","            foreach ($permIds as $pid) { $ins->execute([$id, $pid]); }","          }","","          $okMsg = 'Role created.';","          $editing = true;","        }","","        $pdo->commit();","","        // Refresh assigned set for proper re-render","        $st = $pdo->prepare(\"SELECT permission_id FROM role_permissions WHERE role_id = ?\");","        $st->execute([$id]);","        $assignedPermIds = array_map('intval', $st->fetchAll(PDO::FETCH_COLUMN));","","        // Optional redirect to prevent POST resubmit:","        header('Location: roles_form.php?id=' . $id . '&saved=1'); exit;","      } catch (Throwable $e) {","        $pdo->rollBack();","        $errors[] = 'Save failed: ' . $e->getMessage();","      }","    }","}","","/* ---- Layout ---- */","$UI_PATH     = dirname(__DIR__) . '/ui';","$PAGE_TITLE  = $editing ? 'Edit Role' : 'Add Role';","$ACTIVE_MENU = 'identity.roles';","","require_once $UI_PATH . '/init.php';","require_once $UI_PATH . '/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 mb-0\"><?= $editing ? 'Edit Role' : 'Add Role' ?></h1>","  <a class=\"btn btn-outline-secondary btn-sm\" href=\"/identity/roles_list.php\">Back</a>","</div>","","<?php if ($errors): ?>","  <div class=\"alert alert-danger\"><ul class=\"mb-0\"><?php foreach ($errors as $e): ?><li><?= htmlspecialchars($e) ?></li><?php endforeach; ?></ul></div>","<?php elseif (isset($_GET['saved'])): ?>","  <div class=\"alert alert-success\">Saved.</div>","<?php endif; ?>","","<form method=\"post\" class=\"row g-3\">","","  <div class=\"col-md-4\">","    <label class=\"form-label\">Name *</label>","    <input name=\"name\" class=\"form-control\" required value=\"<?= htmlspecialchars((string)$role['name']) ?>\">","  </div>","","  <?php if ($hasCode): ?>","    <div class=\"col-md-4\">","      <label class=\"form-label\">Code *</label>","      <input name=\"code\" class=\"form-control\" required value=\"<?= htmlspecialchars((string)$role['code']) ?>\">","    </div>","  <?php endif; ?>","","  <?php if ($hasStatus): ?>","    <div class=\"col-md-4\">","      <label class=\"form-label\">Status</label>","      <select name=\"status\" class=\"form-select\">","        <option value=\"active\"   <?= $role['status'] === 'active' ? 'selected' : '' ?>>Active</option>","        <option value=\"inactive\" <?= $role['status'] === 'inactive' ? 'selected' : '' ?>>Inactive</option>","      </select>","    </div>","  <?php endif; ?>","","  <?php if ($hasDesc): ?>","    <div class=\"col-12\">","      <label class=\"form-label\">Description</label>","      <textarea name=\"description\" class=\"form-control\" rows=\"2\"><?= htmlspecialchars((string)$role['description']) ?></textarea>","    </div>","  <?php endif; ?>","","  <div class=\"col-12\">","    <div class=\"d-flex justify-content-between align-items-center\">","      <label class=\"form-label mb-0\">Permissions</label>","      <div class=\"input-group input-group-sm\" style=\"width: 320px;\">","        <span class=\"input-group-text\">Filter</span>","        <input class=\"form-control\" id=\"permFilter\" placeholder=\"type to filter...\">","      </div>","    </div>","","    <?php if (!$allPerms): ?>","      <div class=\"text-muted mt-2\">No permissions defined yet.</div>","    <?php else: ?>","      <div class=\"mt-2\">","        <?php foreach ($permsByModule as $module => $items): ?>","          <div class=\"border rounded mb-3 p-2 perm-module\" data-module=\"<?= htmlspecialchars($module) ?>\">","            <div class=\"d-flex justify-content-between align-items-center mb-2\">","              <div class=\"fw-bold small text-uppercase text-muted\"><?= htmlspecialchars($module) ?></div>","              <div class=\"form-check\">","                <input class=\"form-check-input\" type=\"checkbox\" id=\"chkall-<?= htmlspecialchars($module) ?>\"","                       onclick=\"toggleModule(this, '<?= htmlspecialchars($module) ?>')\">","                <label class=\"form-check-label small\" for=\"chkall-<?= htmlspecialchars($module) ?>\">Select all in this module</label>","              </div>","            </div>","            <?php foreach ($items as $p): ","              $pid = (int)$p['id'];","              $checked = in_array($pid, $assignedPermIds, true) ? 'checked' : '';","            ?>","              <div class=\"form-check perm-item\" data-text=\"<?= htmlspecialchars(strtolower($p['code'].' '.$p['name'].' '.$module)) ?>\">","                <input class=\"form-check-input\" type=\"checkbox\" name=\"permissions[]\" value=\"<?= $pid ?>\" id=\"perm<?= $pid ?>\" <?= $checked ?>>","                <label class=\"form-check-label\" for=\"perm<?= $pid ?>\">","                  <code><?= htmlspecialchars($p['code']) ?></code> \u2014 <?= htmlspecialchars($p['name']) ?>","                </label>","              </div>","            <?php endforeach; ?>","          </div>","        <?php endforeach; ?>","      </div>","    <?php endif; ?>","  </div>","","  <div class=\"col-12\">","    <button class=\"btn btn-primary\" type=\"submit\"><?= $editing ? 'Save Changes' : 'Create Role' ?></button>","  </div>","</form>","","<script>","const filterInput = document.getElementById('permFilter');","if (filterInput) {","  filterInput.addEventListener('input', function() {","    const q = this.value.trim().toLowerCase();","    document.querySelectorAll('.perm-item').forEach(el => {","      const t = el.getAttribute('data-text') || '';","      el.style.display = t.includes(q) ? '' : 'none';","    });","  });","}","function toggleModule(box, module){","  document.querySelectorAll('.perm-module[data-module=\"'+module+'\"] input[type=checkbox][name=\"permissions[]\"]').forEach(cb => {","    cb.checked = box.checked;","  });","}","</script>","","<?php require_once $UI_PATH . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/identity/provision_queue.php": ["<?php","/** PATH: /public_html/identity/provision_queue.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('iam.provision.view');","","$UI_PATH     = dirname(__DIR__) . '/ui';","$PAGE_TITLE  = 'Provisioning Approvals';","$ACTIVE_MENU = 'identity.provision_queue';","","include $UI_PATH . '/layout_start.php';","?>","<div class=\"container-fluid\">","  <main class=\"px-3 py-3\">","    <h1 class=\"h4 mb-3\">Provisioning Queue</h1>","","    <div id=\"queue\" class=\"mb-3\"></div>","","    <script>","      async function loadQueue() {","        const r = await fetch('../api/iam_approvals.php?action=list');","        const data = await r.json();","        const el = document.getElementById('queue');","        if (!data.items || !data.items.length) { el.innerHTML = '<div class=\"alert alert-info\">No pending approvals.</div>'; return; }","        let html = '<div class=\"table-responsive\"><table class=\"table table-sm align-middle\">';","        html += '<thead class=\"table-light\"><tr><th>#</th><th>Employee</th><th>Proposed Roles</th><th>Step</th><th>Actions</th></tr></thead><tbody>';","        for (const it of data.items) {","          let roles = [];","          try { roles = JSON.parse(it.proposed_roles || '[]'); } catch(e) {}","          html += `<tr>","            <td>${it.approval_id}</td>","            <td>${it.employee_id}</td>","            <td><code>${roles.join(', ')}</code></td>","            <td>${it.step_no}</td>","            <td>","              <button class=\"btn btn-success btn-sm\" onclick=\"decide(${it.approval_id}, 'approved')\">Approve</button>","              <button class=\"btn btn-outline-danger btn-sm\" onclick=\"decide(${it.approval_id}, 'rejected')\">Reject</button>","            </td>","          </tr>`;","        }","        html += '</tbody></table></div>';","        el.innerHTML = html;","      }","      async function decide(approvalId, decision) {","        const r = await fetch('../api/iam_approvals.php?action=decide', {","          method: 'POST',","          headers: {'Content-Type': 'application/x-www-form-urlencoded'},","          body: `approval_id=${encodeURIComponent(approvalId)}&decision=${encodeURIComponent(decision)}`","        });","        const data = await r.json();","        if (data.error) { alert(data.error); return; }","        loadQueue();","      }","      loadQueue();","    </script>","  </main>","</div>","<?php include $UI_PATH . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/identity/permissions_list.php": ["<?php","/** PATH: /public_html/identity/permissions_list.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('core.permission.view');","","$pdo = db();","$canManage = has_permission('core.permission.manage');","","$q = trim($_GET['q'] ?? '');","","$st = $pdo->prepare(\"","  SELECT id, code, name, COALESCE(module,'other') AS module","  FROM permissions","  WHERE (? = '' OR code LIKE ? OR name LIKE ? OR module LIKE ?)","  ORDER BY module ASC, name ASC","\");","$like = '%'.$q.'%';","$st->execute([$q, $like, $like, $like]);","$perms = $st->fetchAll(PDO::FETCH_ASSOC);","","$byModule = [];","foreach ($perms as $p) { $byModule[$p['module']][] = $p; }","","/* Layout */","$UI_PATH     = dirname(__DIR__) . '/ui';","$PAGE_TITLE  = 'Permissions';","$ACTIVE_MENU = 'identity.permissions';","require_once $UI_PATH . '/init.php';","require_once $UI_PATH . '/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 m-0\">Permissions</h1>","  <div>","    <?php if ($canManage): ?>","      <a href=\"/identity/permissions_edit.php\" class=\"btn btn-primary btn-sm\">New Permission</a>","    <?php endif; ?>","  </div>","</div>","","<form class=\"mb-3\" method=\"get\">","  <div class=\"input-group input-group-sm\" style=\"max-width: 520px;\">","    <input class=\"form-control\" name=\"q\" value=\"<?= htmlspecialchars($q) ?>\" placeholder=\"Search code, name, module\">","    <button class=\"btn btn-outline-secondary\">Search</button>","  </div>","</form>","","<?php if (!$perms): ?>","  <div class=\"text-muted\">No permissions.</div>","<?php else: ?>","  <?php foreach ($byModule as $module => $items): ?>","    <div class=\"border rounded mb-3\">","      <div class=\"bg-light px-2 py-1 fw-bold text-uppercase small\"><?= htmlspecialchars($module) ?></div>","      <div class=\"table-responsive\">","        <table class=\"table table-sm mb-0\">","          <thead>","            <tr><th style=\"width:72px\">#</th><th>Code</th><th>Name</th><th style=\"width:120px\">Actions</th></tr>","          </thead>","          <tbody>","            <?php foreach ($items as $p): ?>","              <tr>","                <td><?= (int)$p['id'] ?></td>","                <td><code><?= htmlspecialchars($p['code']) ?></code></td>","                <td><?= htmlspecialchars($p['name']) ?></td>","                <td>","                  <?php if ($canManage): ?>","                    <a class=\"btn btn-outline-secondary btn-sm\" href=\"/identity/permissions_edit.php?id=<?= (int)$p['id'] ?>\">Edit</a>","                  <?php endif; ?>","                </td>","              </tr>","            <?php endforeach; ?>","          </tbody>","        </table>","      </div>","    </div>","  <?php endforeach; ?>","<?php endif; ?>","","<?php require_once $UI_PATH . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/identity/access_review.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('core.user.view');","","$PAGE_TITLE = 'Access Review';","$LAYOUT_DIR = null;","foreach ([__DIR__ . '/../ui', dirname(__DIR__) . '/ui', $_SERVER['DOCUMENT_ROOT'] . '/ui'] as $dir)","  if (is_dir($dir)) { $LAYOUT_DIR = rtrim($dir, '/'); break; }","if ($LAYOUT_DIR) include $LAYOUT_DIR . '/layout_start.php'; else echo '<!doctype html><html><head><meta charset=\"utf-8\"></head><body><div class=\"container-fluid\">';","","$pdo = db();","$q = trim($_GET['q'] ?? '');","$sql = \"SELECT u.id, u.username, u.name, u.email, GROUP_CONCAT(r.name ORDER BY r.name SEPARATOR ', ') AS roles","        FROM users u","        LEFT JOIN user_roles ur ON ur.user_id = u.id","        LEFT JOIN roles r ON r.id = ur.role_id","        WHERE (? = '' OR u.name LIKE ? OR u.email LIKE ? OR u.username LIKE ?)","        GROUP BY u.id","        ORDER BY u.name\";","$like = '%'.$q.'%';","$st = $pdo->prepare($sql);","$st->execute([$q, $like, $like, $like]);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","if (isset($_GET['export']) && $_GET['export']=='csv') {","  header('Content-Type: text/csv');","  header('Content-Disposition: attachment; filename=\"access_review.csv\"');","  $f = fopen('php://output', 'w');","  fputcsv($f, ['User ID','Username','Name','Email','Roles']);","  foreach ($rows as $r) fputcsv($f, [$r['id'],$r['username'],$r['name'],$r['email'],$r['roles']]);","  exit;","}","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 m-0\">Access Review</h1>","  <div>","    <a href=\"?export=csv&q=<?= urlencode($q) ?>\" class=\"btn btn-outline-secondary btn-sm\">Export CSV</a>","  </div>","</div>","<form class=\"mb-3\" method=\"get\">","  <div class=\"input-group input-group-sm\" style=\"max-width:420px\">","    <input class=\"form-control\" name=\"q\" value=\"<?= htmlspecialchars($q) ?>\" placeholder=\"Search user\">","    <button class=\"btn btn-outline-secondary\">Search</button>","  </div>","</form>","<div class=\"table-responsive\">","  <table class=\"table table-sm\">","    <thead class=\"table-light\"><tr><th>#</th><th>Username</th><th>Name</th><th>Email</th><th>Roles</th></tr></thead>","    <tbody>","      <?php foreach ($rows as $r): ?>","        <tr>","          <td><?= (int)$r['id'] ?></td>","          <td><?= htmlspecialchars($r['username']) ?></td>","          <td><?= htmlspecialchars($r['name']) ?></td>","          <td><?= htmlspecialchars($r['email']) ?></td>","          <td><?= htmlspecialchars($r['roles']) ?></td>","        </tr>","      <?php endforeach; ?>","    </tbody>","  </table>","</div>","<?php","if (!empty($LAYOUT_DIR) && is_file($LAYOUT_DIR . '/layout_end.php')) include $LAYOUT_DIR . '/layout_end.php';","else echo '</div></body></html>';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/identity/permissions_edit.php": ["<?php","/** PATH: /public_html/identity/permissions_edit.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('core.permission.manage');","","$pdo = db();","","$id = isset($_GET['id']) ? (int)$_GET['id'] : 0;","$editing = $id > 0;","","$perm = ['code'=>'','name'=>'','module'=>''];","","if ($editing) {","  $st = $pdo->prepare(\"SELECT id, code, name, module FROM permissions WHERE id=?\");","  $st->execute([$id]);","  $row = $st->fetch(PDO::FETCH_ASSOC);","  if (!$row) { http_response_code(404); exit('Permission not found'); }","  $perm = array_merge($perm, $row);","}","","$errors = [];","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  $code   = trim((string)($_POST['code'] ?? ''));","  $name   = trim((string)($_POST['name'] ?? ''));","  $module = trim((string)($_POST['module'] ?? ''));","","  if ($code==='') $errors[] = 'Code is required.';","  if ($name==='') $errors[] = 'Name is required.';","","  if (!$errors) {","    // Unique code","    $sql = \"SELECT id FROM permissions WHERE code=?\" . ($editing ? \" AND id<>?\" : \"\");","    $st  = $pdo->prepare($sql);","    $st->execute($editing ? [$code, $id] : [$code]);","    if ($st->fetch()) $errors[] = 'Code already exists.';","  }","","  if (!$errors) {","    if ($editing) {","      $st = $pdo->prepare(\"UPDATE permissions SET code=?, name=?, module=?, updated_at=NOW() WHERE id=?\");","      $st->execute([$code, $name, $module ?: null, $id]);","      header('Location: /identity/permissions_list.php?saved=1'); exit;","    } else {","      $st = $pdo->prepare(\"INSERT INTO permissions (code,name,module,created_at,updated_at) VALUES (?,?,?,?,?)\");","      $now = date('Y-m-d H:i:s');","      $st->execute([$code, $name, $module ?: null, $now, $now]);","      header('Location: /identity/permissions_list.php?saved=1'); exit;","    }","  } else {","    $perm['code']=$code; $perm['name']=$name; $perm['module']=$module;","  }","}","","/* Layout */","$UI_PATH     = dirname(__DIR__) . '/ui';","$PAGE_TITLE  = $editing ? 'Edit Permission' : 'Add Permission';","$ACTIVE_MENU = 'identity.permissions';","require_once $UI_PATH . '/init.php';","require_once $UI_PATH . '/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 m-0\"><?= $editing ? 'Edit Permission' : 'Add Permission' ?></h1>","  <a class=\"btn btn-outline-secondary btn-sm\" href=\"/identity/permissions_list.php\">Back</a>","</div>","","<?php if ($errors): ?>","  <div class=\"alert alert-danger\"><ul class=\"mb-0\"><?php foreach ($errors as $e): ?><li><?= htmlspecialchars($e) ?></li><?php endforeach; ?></ul></div>","<?php elseif (isset($_GET['saved'])): ?>","  <div class=\"alert alert-success\">Saved.</div>","<?php endif; ?>","","<form method=\"post\" class=\"row g-3\">","  <div class=\"col-md-4\">","    <label class=\"form-label\">Code *</label>","    <input name=\"code\" class=\"form-control\" required value=\"<?= htmlspecialchars($perm['code']) ?>\">","    <div class=\"form-text\">Example: <code>hr.employee.view</code></div>","  </div>","  <div class=\"col-md-4\">","    <label class=\"form-label\">Name *</label>","    <input name=\"name\" class=\"form-control\" required value=\"<?= htmlspecialchars($perm['name']) ?>\">","  </div>","  <div class=\"col-md-4\">","    <label class=\"form-label\">Module</label>","    <input name=\"module\" class=\"form-control\" value=\"<?= htmlspecialchars((string)$perm['module']) ?>\" placeholder=\"e.g. hr, identity, crm\">","  </div>","","  <div class=\"col-12\">","    <button class=\"btn btn-primary\"><?= $editing ? 'Save Changes' : 'Create Permission' ?></button>","  </div>","</form>","","<?php require_once $UI_PATH . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/identity/roles_list.php": ["<?php","/** PATH: /public_html/identity/roles_list.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('core.role.view');","","$pdo = db();","$canManage = has_permission('core.role.manage');","","$q = trim($_GET['q'] ?? '');","","$roleCols = $pdo->query(\"SHOW COLUMNS FROM roles\")->fetchAll(PDO::FETCH_COLUMN);","$hasCode   = in_array('code', $roleCols, true);","$hasStatus = in_array('status', $roleCols, true);","","$sql = \"SELECT r.id, r.name\".","       ($hasCode ? \", r.code\" : \"\").","       ($hasStatus ? \", r.status\" : \"\").","       \", COUNT(rp.permission_id) AS perm_count","       FROM roles r","       LEFT JOIN role_permissions rp ON rp.role_id = r.id","       WHERE (? = '' OR r.name LIKE ?\".($hasCode ? \" OR r.code LIKE ?\" : \"\").\")","       GROUP BY r.id","       ORDER BY r.name ASC","       LIMIT 500\";","","$params = [$q, '%'.$q.'%'];","if ($hasCode) $params[] = '%'.$q.'%';","","$st = $pdo->prepare($sql);","$st->execute($params);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","/* Layout */","$UI_PATH     = dirname(__DIR__) . '/ui';","$PAGE_TITLE  = 'Roles';","$ACTIVE_MENU = 'identity.roles';","require_once $UI_PATH . '/init.php';","require_once $UI_PATH . '/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h4 m-0\">Roles</h1>","  <div>","    <?php if ($canManage): ?>","      <a href=\"/identity/roles_form.php\" class=\"btn btn-primary btn-sm\">New Role</a>","    <?php endif; ?>","  </div>","</div>","","<form class=\"mb-3\" method=\"get\">","  <div class=\"input-group input-group-sm\" style=\"max-width: 420px;\">","    <input class=\"form-control\" name=\"q\" value=\"<?= htmlspecialchars($q) ?>\" placeholder=\"Search name<?= $hasCode ? ', code' : '' ?>\">","    <button class=\"btn btn-outline-secondary\">Search</button>","  </div>","</form>","","<div class=\"table-responsive\">","  <table class=\"table table-sm align-middle\">","    <thead class=\"table-light\">","      <tr>","        <th style=\"width:72px\">#</th>","        <th>Name</th>","        <?php if ($hasCode): ?><th>Code</th><?php endif; ?>","        <th>Permissions</th>","        <?php if ($hasStatus): ?><th>Status</th><?php endif; ?>","        <th style=\"width:160px\">Actions</th>","      </tr>","    </thead>","    <tbody>","      <?php foreach ($rows as $r): ?>","        <tr>","          <td><?= (int)$r['id'] ?></td>","          <td><?= htmlspecialchars($r['name']) ?></td>","          <?php if ($hasCode): ?><td><code><?= htmlspecialchars($r['code']) ?></code></td><?php endif; ?>","          <td><span class=\"badge bg-secondary\"><?= (int)$r['perm_count'] ?></span></td>","          <?php if ($hasStatus): ?>","            <td><span class=\"badge bg-<?= ($r['status']==='active'?'success':'secondary') ?>\"><?= htmlspecialchars($r['status']) ?></span></td>","          <?php endif; ?>","          <td>","            <?php if ($canManage): ?>","              <a class=\"btn btn-outline-secondary btn-sm\" href=\"/identity/roles_form.php?id=<?= (int)$r['id'] ?>\">Edit</a>","            <?php endif; ?>","          </td>","        </tr>","      <?php endforeach; ?>","      <?php if (!$rows): ?>","        <tr><td colspan=\"<?= 5 + (int)$hasCode + (int)$hasStatus ?>\" class=\"text-muted\">No roles.</td></tr>","      <?php endif; ?>","    </tbody>","  </table>","</div>","","<?php require_once $UI_PATH . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance_alloc/allocations_report_contractor.php": ["<?php","/** PATH: /public_html/maintenance_alloc/allocations_report_contractor.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('maintenance.wo.view');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$from = ($_GET['from'] ?? '') ?: date('Y-m-01');","$to   = ($_GET['to'] ?? '') ?: date('Y-m-t');","","$sql = \"","SELECT p.id AS contractor_id, p.code, p.name,","       COUNT(DISTINCT wo.id) AS wo_count,","       COALESCE(SUM(wo.total_cost),0) AS wo_cost_total,","       COUNT(DISTINCT ma.machine_id) AS machines_used","FROM machine_allocations ma","JOIN parties p ON p.id=ma.contractor_id","JOIN machines m ON m.id=ma.machine_id","JOIN maintenance_work_orders wo","  ON wo.machine_id = ma.machine_id"," AND wo.status='completed'"," AND DATE(wo.closed_at) BETWEEN ? AND ?"," AND (","       /* WO falls within allocation window */","       DATE(wo.closed_at) BETWEEN ma.alloc_date AND COALESCE(ma.return_date, DATE(?))","     )","WHERE ma.status IN ('issued','returned')","GROUP BY p.id, p.code, p.name","ORDER BY wo_cost_total DESC\";","$st = $pdo->prepare($sql);","$st->execute([$from,$to,$to]);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","$PAGE_TITLE = 'Maintenance by Contractor';","$ACTIVE_MENU = 'machines.list';","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h5 mb-0\"><?=$PAGE_TITLE?></h1>","  <form class=\"d-flex gap-2\">","    <input type=\"date\" name=\"from\" class=\"form-control form-control-sm\" value=\"<?=htmlspecialchars($from)?>\">","    <input type=\"date\" name=\"to\"   class=\"form-control form-control-sm\" value=\"<?=htmlspecialchars($to)?>\">","    <button class=\"btn btn-sm btn-outline-primary\">Apply</button>","  </form>","</div>","","<div class=\"table-responsive\">","  <table class=\"table table-sm align-middle\">","    <thead class=\"table-light\">","      <tr>","        <th>Contractor</th><th class=\"text-end\">Machines Used</th>","        <th class=\"text-end\">Completed WOs</th><th class=\"text-end\">Total Maint. Cost (\u20b9)</th>","        <th></th>","      </tr>","    </thead>","    <tbody>","      <?php foreach($rows as $r): ?>","        <tr>","          <td><?=htmlspecialchars($r['code'].' \u2014 '.$r['name'])?></td>","          <td class=\"text-end\"><?= (int)$r['machines_used'] ?></td>","          <td class=\"text-end\"><?= (int)$r['wo_count'] ?></td>","          <td class=\"text-end\"><?= number_format((float)$r['wo_cost_total'],2) ?></td>","          <td class=\"text-end\">","            <a class=\"btn btn-sm btn-light\" href=\"/maintenance_alloc/allocations_trace.php?contractor_id=<?=$r['contractor_id']?>&from=<?=$from?>&to=<?=$to?>\">Trace</a>","          </td>","        </tr>","      <?php endforeach; if(!$rows): ?>","        <tr><td colspan=\"5\" class=\"text-center text-muted py-4\">No data for range.</td></tr>","      <?php endif; ?>","    </tbody>","  </table>","</div>","<?php include __DIR__ . '/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance_alloc/allocations_return.php": ["<?php","/** PATH: /public_html/maintenance_alloc/allocations_return.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","","require_login();","require_permission('machines.manage');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$id=(int)($_GET['id'] ?? 0);","$st=$pdo->prepare(\"SELECT * FROM machine_allocations WHERE id=?\");","$st->execute([$id]);","$A=$st->fetch(PDO::FETCH_ASSOC);","if(!$A || $A['status']!=='issued'){ http_response_code(404); exit('Invalid allocation'); }","","$errors=[]; $ok='';","if($_SERVER['REQUEST_METHOD']==='POST'){","  csrf_require_token();","  $ret_date = ($_POST['return_date'] ?? '') ?: date('Y-m-d');","  $meter    = ($_POST['meter_return'] === '' ? null : (float)$_POST['meter_return']);","  $remarks  = trim((string)($_POST['return_remarks'] ?? '')) ?: null;","","  $pdo->beginTransaction();","  try{","    $pdo->prepare(\"UPDATE machine_allocations","                      SET status='returned', return_date=?, meter_return=?, return_remarks=?, updated_at=NOW()","                    WHERE id=?\")","        ->execute([$ret_date,$meter,$remarks,$id]);","","    $pdo->commit(); $ok='Returned.';","    header(\"Location: /maintenance_alloc/allocations_list.php\");","    exit;","  }catch(Throwable $e){ $pdo->rollBack(); $errors[]='Failed: '.$e->getMessage(); }","}","","$PAGE_TITLE='Return '.$A['alloc_code'];","$ACTIVE_MENU='machines.list';","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h5 mb-0\"><?=$PAGE_TITLE?></h1>","  <a class=\"btn btn-light btn-sm\" href=\"/maintenance_alloc/allocations_list.php\">Back</a>","</div>","","<?php if ($errors): ?><div class=\"alert alert-danger\"><ul class=\"mb-0\"><?php foreach($errors as $e){echo '<li>'.htmlspecialchars($e).'</li>';}?></ul></div><?php endif; ?>","","<form method=\"post\" class=\"row g-3\">","  <?= csrf_hidden_input() ?>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Return Date</label>","    <input type=\"date\" name=\"return_date\" class=\"form-control\" value=\"<?=date('Y-m-d')?>\">","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Meter @ Return</label>","    <input type=\"number\" step=\"0.01\" name=\"meter_return\" class=\"form-control\">","  </div>","  <div class=\"col-md-6\">","    <label class=\"form-label\">Return Remarks</label>","    <input name=\"return_remarks\" class=\"form-control\" maxlength=\"255\">","  </div>","  <div class=\"col-12 text-end\">","    <button class=\"btn btn-success\">Confirm Return</button>","  </div>","</form>","<?php include __DIR__ . '/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance_alloc/allocations_form.php": ["<?php","/** PATH: /public_html/maintenance_alloc/allocations_form.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","","require_login();","require_permission('machines.manage');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$id       = (int)($_GET['id'] ?? 0);","$editing  = $id > 0;","","/**"," * Return the current active allocation (status='issued') for a machine,"," * optionally excluding a specific allocation id (when editing)."," */","function current_active_allocation(PDO $pdo, int $machine_id, ?int $exclude_id = null): ?array {","  if ($machine_id <= 0) return null;","","  if ($exclude_id) {","    $st = $pdo->prepare(","      \"SELECT a.*, p.name AS contractor_name","         FROM machine_allocations a","         LEFT JOIN parties p ON p.id = a.contractor_id","        WHERE a.machine_id = ? AND a.status = 'issued' AND a.id <> ?","        LIMIT 1\"","    );","    $st->execute([$machine_id, $exclude_id]);","  } else {","    $st = $pdo->prepare(","      \"SELECT a.*, p.name AS contractor_name","         FROM machine_allocations a","         LEFT JOIN parties p ON p.id = a.contractor_id","        WHERE a.machine_id = ? AND a.status = 'issued'","        LIMIT 1\"","    );","    $st->execute([$machine_id]);","  }","","  $row = $st->fetch(PDO::FETCH_ASSOC);","  return $row ?: null;","}","","/** Simple code generator (unchanged logic) */","function next_alloc_code(PDO $pdo): string {","  $y = date('Y');","  $lock = \"alloc_code_$y\";","  $pdo->query(\"SELECT GET_LOCK('$lock', 10)\");","  try {","    $st = $pdo->prepare(\"SELECT MAX(CAST(SUBSTRING(alloc_code, 10) AS UNSIGNED)) FROM machine_allocations WHERE alloc_code LIKE ?\");","    $st->execute([\"AL-$y-%\"]);","    $next = ((int)$st->fetchColumn()) + 1;","    return sprintf(\"AL-%s-%04d\", $y, $next);","  } finally {","    $pdo->query(\"SELECT RELEASE_LOCK('$lock')\");","  }","}","","/** Base form model */","$alloc = [","  'alloc_code'       => '',","  'machine_id'       => (int)($_GET['machine_id'] ?? 0),","  'contractor_id'    => 0,","  'alloc_date'       => date('Y-m-d'),","  'expected_return'  => null,","  'meter_issue'      => null,","  'remarks'          => null,","  'status'           => 'issued',","];","","/** Load when editing */","if ($editing) {","  $st = $pdo->prepare(\"SELECT * FROM machine_allocations WHERE id = ?\");","  $st->execute([$id]);","  $row = $st->fetch(PDO::FETCH_ASSOC);","  if ($row) {","    // Preserve existing values; fill any missing with defaults","    $alloc = $row + $alloc;","  }","}","","/** Dropdown data */","$machines = $pdo->query(\"SELECT id, CONCAT(machine_id,' - ',name) label FROM machines ORDER BY machine_id\")","                ->fetchAll(PDO::FETCH_KEY_PAIR);","","$contractors = $pdo->query(\"SELECT id, CONCAT(code,' - ',name) label FROM parties WHERE type='contractor' ORDER BY name\")","                   ->fetchAll(PDO::FETCH_KEY_PAIR);","","/** Handle POST */","$errors = [];","$ok     = '';","","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  csrf_require_token();","","  // Map POST \u2192 model (keep existing logic/fields)","  $alloc['machine_id']        = (int)($_POST['machine_id'] ?? 0);","  $alloc['contractor_id']     = (int)($_POST['contractor_id'] ?? 0);","  $alloc['alloc_date']        = (string)($_POST['alloc_date'] ?? date('Y-m-d'));","  $alloc['expected_return']   = (($_POST['expected_return'] ?? '') === '' ? null : (string)$_POST['expected_return']);","  $alloc['remarks']           = (trim((string)($_POST['remarks'] ?? '')) ?: null);","  $alloc['meter_issue']       = (($_POST['meter_issue'] ?? '') === '' ? null : (float)$_POST['meter_issue']);","","  if (!$alloc['machine_id'])    { $errors[] = 'Machine is required'; }","  if (!$alloc['contractor_id']) { $errors[] = 'Contractor is required'; }","","  // === Conflict check: block double-issue ===","  // Only when creating a NEW allocation. Editing can keep current 'issued' record.","  $machineId = (int)$alloc['machine_id'];","  $existing  = current_active_allocation($pdo, $machineId, $editing ? $id : null);","  if (!$editing && $existing) {","    $errors[] =","      \"Machine is already issued to \" .","      htmlspecialchars($existing['contractor_name'] ?? ('#'.$existing['contractor_id'])) .","      \" since \" . htmlspecialchars($existing['alloc_date'] ?? '?') .","      \". Return it before issuing again.\";","  }","  // === End conflict check ===","","  if (!$errors) {","    $pdo->beginTransaction();","    try {","      if ($editing) {","        $pdo->prepare(","          \"UPDATE machine_allocations","              SET machine_id = ?, contractor_id = ?, alloc_date = ?, expected_return = ?, remarks = ?, meter_issue = ?, updated_at = NOW()","            WHERE id = ?\"","        )->execute([","          $alloc['machine_id'],","          $alloc['contractor_id'],","          $alloc['alloc_date'],","          $alloc['expected_return'],","          $alloc['remarks'],","          $alloc['meter_issue'],","          $id","        ]);","      } else {","        $code = next_alloc_code($pdo);","        $pdo->prepare(","          \"INSERT INTO machine_allocations","             (alloc_code, machine_id, contractor_id, alloc_date, expected_return, remarks, meter_issue, created_by, created_at)","           VALUES","             (?,          ?,          ?,             ?,          ?,                ?,       ?,           ?,          NOW())\"","        )->execute([","          $code,","          $alloc['machine_id'],","          $alloc['contractor_id'],","          $alloc['alloc_date'],","          $alloc['expected_return'],","          $alloc['remarks'],","          $alloc['meter_issue'],","          (int)($_SESSION['user_id'] ?? 0)","        ]);","        $id = (int)$pdo->lastInsertId();","        $editing = true;","","        // Reflect generated code back into model for the view title","        $alloc['alloc_code'] = $code;","      }","","      $pdo->commit();","      $ok = 'Saved.';","    } catch (Throwable $e) {","      $pdo->rollBack();","      $errors[] = 'Save failed: ' . $e->getMessage();","    }","  }","}","","$PAGE_TITLE  = $editing ? (\"Allocation \" . (string)($alloc['alloc_code'] ?? '')) : \"Issue Machine\";","$ACTIVE_MENU = 'machines.list';","","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h5 mb-0\"><?= htmlspecialchars($PAGE_TITLE) ?></h1>","","  <?php","  // Optional UI banner: show current active allocation for selected machine","  if (!empty($alloc['machine_id'])):","    $conf = current_active_allocation($pdo, (int)$alloc['machine_id'], $editing ? $id : null);","    if ($conf): ?>","      <div class=\"alert alert-warning py-2 mb-0\" role=\"alert\" style=\"min-width:320px;\">","        Currently issued to <strong><?= htmlspecialchars($conf['contractor_name'] ?? ('#'.$conf['contractor_id'])) ?></strong>","        since <?= htmlspecialchars((string)($conf['alloc_date'] ?? '?')) ?>.","        A return is required before a new issue.","      </div>","  <?php endif; endif; ?>","","  <div class=\"d-flex gap-2\">","    <a class=\"btn btn-light btn-sm\" href=\"/maintenance_alloc/allocations_list.php\">Back</a>","    <?php if ($editing && ($alloc['status'] === 'issued')): ?>","      <a class=\"btn btn-success btn-sm\" href=\"/maintenance_alloc/allocations_return.php?id=<?= (int)$id ?>\">Return</a>","    <?php endif; ?>","  </div>","</div>","","<?php if (!empty($errors)): ?>","  <div class=\"alert alert-danger\">","    <ul class=\"mb-0\">","      <?php foreach ($errors as $e): ?>","        <li><?= htmlspecialchars((string)$e) ?></li>","      <?php endforeach; ?>","    </ul>","  </div>","<?php elseif (!empty($ok)): ?>","  <div class=\"alert alert-success\"><?= htmlspecialchars($ok) ?></div>","<?php endif; ?>","","<form method=\"post\" class=\"row g-3\">","  <?= csrf_hidden_input() ?>","","  <div class=\"col-md-4\">","    <label class=\"form-label\">Machine</label>","    <select name=\"machine_id\" class=\"form-select\" required>","      <option value=\"\">\u2014 choose \u2014</option>","      <?php foreach ($machines as $mid => $label): ?>","        <option value=\"<?= (int)$mid ?>\" <?= ((int)$alloc['machine_id'] === (int)$mid) ? 'selected' : '' ?>>","          <?= htmlspecialchars((string)$label) ?>","        </option>","      <?php endforeach; ?>","    </select>","  </div>","","  <div class=\"col-md-4\">","    <label class=\"form-label\">Contractor</label>","    <select name=\"contractor_id\" class=\"form-select\" required>","      <option value=\"\">\u2014 choose \u2014</option>","      <?php foreach ($contractors as $cid => $label): ?>","        <option value=\"<?= (int)$cid ?>\" <?= ((int)$alloc['contractor_id'] === (int)$cid) ? 'selected' : '' ?>>","          <?= htmlspecialchars((string)$label) ?>","        </option>","      <?php endforeach; ?>","    </select>","    <div class=\"form-text\">Contractors come from Parties. Add/edit there if missing.</div>","  </div>","","  <div class=\"col-md-2\">","    <label class=\"form-label\">Issue Date</label>","    <input type=\"date\" name=\"alloc_date\" class=\"form-control\" value=\"<?= htmlspecialchars((string)$alloc['alloc_date']) ?>\">","  </div>","","  <div class=\"col-md-2\">","    <label class=\"form-label\">Expected Return</label>","    <input type=\"date\" name=\"expected_return\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($alloc['expected_return'] ?? '')) ?>\">","  </div>","","  <div class=\"col-md-3\">","    <label class=\"form-label\">Meter @ Issue</label>","    <input type=\"number\" step=\"0.01\" name=\"meter_issue\" class=\"form-control\" value=\"<?= htmlspecialchars((string)($alloc['meter_issue'] ?? '')) ?>\">","  </div>","","  <div class=\"col-md-9\">","    <label class=\"form-label\">Remarks</label>","    <input name=\"remarks\" class=\"form-control\" maxlength=\"255\" value=\"<?= htmlspecialchars((string)($alloc['remarks'] ?? '')) ?>\">","  </div>","","  <div class=\"col-12 text-end\">","    <button class=\"btn btn-primary\"><?= $editing ? 'Save' : 'Issue' ?></button>","  </div>","</form>","","<?php include __DIR__ . '/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/maintenance_alloc/allocations_list.php": ["<?php","/** PATH: /public_html/maintenance_alloc/allocations_list.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('machines.manage');","","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","$machine_id  = (int)($_GET['machine_id'] ?? 0);","$contractor  = (int)($_GET['contractor_id'] ?? 0);","$status      = (string)($_GET['status'] ?? '');","$q           = trim((string)($_GET['q'] ?? ''));","","$where = []; $args = [];","if ($machine_id) { $where[] = \"ma.machine_id=?\"; $args[]=$machine_id; }","if ($contractor){ $where[] = \"ma.contractor_id=?\"; $args[]=$contractor; }","if ($status !== '') { $where[] = \"ma.status = CAST(? AS CHAR) COLLATE utf8mb4_general_ci\"; $args[]=$status; }","if ($q!=='') { $where[] = \"ma.alloc_code LIKE CONCAT('%',?,'%')\"; $args[]=$q; }","","$sql = \"SELECT ma.*, m.machine_id AS mcode, m.name AS mname, p.code AS ccode, p.name AS cname","        FROM machine_allocations ma","        JOIN machines m ON m.id=ma.machine_id","        JOIN parties  p ON p.id=ma.contractor_id","        \".($where?\"WHERE \".implode(\" AND \",$where):\"\").\"","        ORDER BY ma.created_at DESC LIMIT 300\";","$st = $pdo->prepare($sql); $st->execute($args); $rows = $st->fetchAll(PDO::FETCH_ASSOC);","","$machines = $pdo->query(\"SELECT id, CONCAT(machine_id,' - ',name) FROM machines ORDER BY machine_id\")","                ->fetchAll(PDO::FETCH_KEY_PAIR);","$contractors = $pdo->query(\"SELECT id, CONCAT(code,' - ',name) FROM parties WHERE type='contractor' ORDER BY name\")","                  ->fetchAll(PDO::FETCH_KEY_PAIR); // reuse Parties contractors. \uea013\uea02","","$PAGE_TITLE='Machine Allocations';","$ACTIVE_MENU='machines.list';","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h1 class=\"h5 mb-0\">Machine Allocations</h1>","  <div class=\"d-flex gap-2\">","    <a href=\"/maintenance_alloc/allocations_form.php\" class=\"btn btn-primary btn-sm\">+ Issue</a>","    <a href=\"/maintenance_alloc/allocations_report_contractor.php\" class=\"btn btn-outline-dark btn-sm\">Report</a>","    <a href=\"/machines/machines_list.php\" class=\"btn btn-outline-dark btn-sm\">Manage Machines</a>","  </div>","</div>","","<form class=\"row g-2 mb-3\">","  <div class=\"col-md-4\">","    <select name=\"machine_id\" class=\"form-select\">","      <option value=\"0\">\u2014 All machines \u2014</option>","      <?php foreach($machines as $id=>$label): ?>","        <option value=\"<?=$id?>\" <?=$machine_id===$id?'selected':''?>><?=htmlspecialchars($label)?></option>","      <?php endforeach; ?>","    </select>","  </div>","  <div class=\"col-md-4\">","    <select name=\"contractor_id\" class=\"form-select\">","      <option value=\"0\">\u2014 All contractors \u2014</option>","      <?php foreach($contractors as $id=>$label): ?>","        <option value=\"<?=$id?>\" <?=$contractor===$id?'selected':''?>><?=htmlspecialchars($label)?></option>","      <?php endforeach; ?>","    </select>","  </div>","  <div class=\"col-md-2\">","    <select name=\"status\" class=\"form-select\">","      <?php foreach(['','issued','returned','lost','scrapped'] as $s): ?>","        <option value=\"<?=$s?>\" <?=$status===$s?'selected':''?>><?=$s===''?'\u2014 Any status \u2014':ucfirst($s)?></option>","      <?php endforeach; ?>","    </select>","  </div>","  <div class=\"col-md-2 d-flex gap-2\">","    <input name=\"q\" class=\"form-control\" placeholder=\"Alloc code\u2026\" value=\"<?=htmlspecialchars($q)?>\">","    <button class=\"btn btn-outline-secondary\">Go</button>","  </div>","</form>","","<div class=\"table-responsive\">","  <table class=\"table table-striped table-hover align-middle\">","    <thead class=\"table-light\">","      <tr>","        <th>Alloc</th><th>Machine</th><th>Contractor</th>","        <th>Issued</th><th>Exp. Return</th><th>Status</th>","        <th class=\"text-end\">Meter</th><th class=\"text-end\">Action</th>","      </tr>","    </thead>","    <tbody>","    <?php foreach($rows as $r): ?>","      <tr>","        <td><code><?=htmlspecialchars($r['alloc_code'])?></code></td>","        <td><?=htmlspecialchars($r['mcode'].' \u2014 '.$r['mname'])?></td>","        <td><?=htmlspecialchars($r['ccode'].' \u2014 '.$r['cname'])?></td>","        <td><?=htmlspecialchars($r['alloc_date'])?></td>","        <td><?=htmlspecialchars((string)$r['expected_return'])?></td>","        <td><span class=\"badge bg-<?= $r['status']==='issued'?'warning text-dark':'secondary'?>\"><?=htmlspecialchars($r['status'])?></span></td>","        <td class=\"text-end\"><?=number_format((float)$r['meter_issue'],2)?> \u2192 <?=number_format((float)$r['meter_return'],2)?></td>","        <td class=\"text-end\">","          <?php if($r['status']==='issued'): ?>","            <a class=\"btn btn-sm btn-outline-success\" href=\"/maintenance_alloc/allocations_return.php?id=<?=$r['id']?>\">Return</a>","          <?php else: ?>","            <a class=\"btn btn-sm btn-outline-secondary\" href=\"/maintenance_alloc/allocations_form.php?id=<?=$r['id']?>\">View</a>","          <?php endif; ?>","        </td>","      </tr>","    <?php endforeach; if(!$rows): ?>","      <tr><td colspan=\"8\" class=\"text-center text-muted py-4\">No allocations.</td></tr>","    <?php endif; ?>","    </tbody>","  </table>","</div>","<?php include __DIR__ . '/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/quote_items/quote_items_list.php": ["<?php","/** PATH: /public_html/quote_items/quote_items_list.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login();","require_permission('quote_items.view');","","$pdo = db();","$q = trim($_GET['q'] ?? '');","","$params = [];","$where = \" WHERE I.deleted_at IS NULL \";","if ($q !== '') {","  $i = 1; $terms = [];","  foreach (['I.code','I.name','I.hsn_sac','I.uom'] as $col) {","    $ph = \":q{$i}\";","    $terms[] = \"{$col} LIKE {$ph}\";","    $params[$ph] = \"%{$q}%\"; $i++;","  }","  $where .= \" AND (\".implode(' OR ', $terms).\") \";","}","","$sql = \"","SELECT I.*","FROM quote_items I","{$where}","ORDER BY I.id DESC","LIMIT 200\";","$st = $pdo->prepare($sql);","$st->execute($params);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","include __DIR__ . '/../ui/layout_start.php';","render_flash();","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h4 mb-0\">Quote Items / Services</h1>","  <div class=\"d-flex gap-2\">","    <form method=\"get\" class=\"d-flex gap-2\">","      <input class=\"form-control\" name=\"q\" value=\"<?= h($q) ?>\" placeholder=\"Search code/name/HSN/UOM\">","      <button class=\"btn btn-outline-secondary\">Search</button>","    </form>","    <?php if (has_permission('quote_items.create')): ?>","      <a href=\"<?= h('quote_items_form.php') ?>\" class=\"btn btn-primary\">+ New</a>","    <?php endif; ?>","  </div>","</div>","","<div class=\"table-responsive\">","  <table class=\"table table-striped align-middle\">","    <thead>","      <tr>","        <th>ID</th><th>Code</th><th>Name</th><th>HSN/SAC</th>","        <th>UOM</th><th>Default Rate</th><th>Default Tax %</th><th>Active</th>","        <th style=\"width:200px\">Actions</th>","      </tr>","    </thead>","    <tbody>","      <?php if (!$rows): ?>","        <tr><td colspan=\"999\" class=\"text-center text-muted py-4\">No quote items found.</td></tr>","      <?php endif; ?>","      <?php foreach ($rows as $r): ?>","        <tr>","          <td><?= (int)$r['id'] ?></td>","          <td><?= h((string)$r['code']) ?></td>","          <td><?= h((string)$r['name']) ?></td>","          <td><?= h((string)$r['hsn_sac']) ?></td>","          <td><?= h((string)$r['uom']) ?></td>","          <td class=\"text-end\"><?= h((string)$r['rate_default']) ?></td>","          <td class=\"text-end\"><?= h((string)$r['tax_pct_default']) ?></td>","          <td><?= ((int)$r['is_active'] ? 'Yes' : 'No') ?></td>","          <td>","            <div class=\"btn-group btn-group-sm\">","              <?php if (has_permission('quote_items.edit')): ?>","                <a class=\"btn btn-outline-secondary\" href=\"<?= h('quote_items_form.php?id='.(int)$r['id']) ?>\">Edit</a>","              <?php endif; ?>","              <?php if (has_permission('quote_items.delete')): ?>","                <form method=\"post\" action=\"<?= h('quote_items_save.php') ?>\" onsubmit=\"return confirm('Delete this item?')\">","                  <?= csrf_field() ?>","                  <input type=\"hidden\" name=\"id\" value=\"<?= (int)$r['id'] ?>\">","                  <input type=\"hidden\" name=\"action\" value=\"delete\">","                  <button class=\"btn btn-outline-danger\">Delete</button>","                </form>","              <?php endif; ?>","            </div>","          </td>","        </tr>","      <?php endforeach; ?>","    </tbody>","  </table>","</div>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/quote_items/quote_items_save.php": ["<?php","/** PATH: /public_html/quote_items/quote_items_save.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/audit.php';","","require_login();","$pdo = db();","","$action = (string)($_POST['action'] ?? '');","$id     = (int)($_POST['id'] ?? 0);","","if ($action === 'delete') {","  verify_csrf_or_die();","  require_permission('quote_items.delete');","  if ($id <= 0) { http_response_code(400); exit('Invalid id'); }","  $pdo->prepare(\"UPDATE quote_items SET deleted_at=NOW() WHERE id=?\")->execute([$id]);","  audit_log($pdo, 'quote_items', 'delete', $id, null);","  set_flash('success', 'Quote item deleted.');","  header('Location: quote_items_list.php'); exit;","}","","verify_csrf_or_die();","$isEdit = $id > 0;","require_permission($isEdit ? 'quote_items.edit' : 'quote_items.create');","","$data = [];","$data['code'] = trim((string)($_POST['code'] ?? ''));","$data['name'] = trim((string)($_POST['name'] ?? ''));","$data['hsn_sac'] = trim((string)($_POST['hsn_sac'] ?? ''));","$data['uom'] = trim((string)($_POST['uom'] ?? 'Nos'));","$data['rate_default'] = (string)($_POST['rate_default'] ?? '0.00');","$data['tax_pct_default'] = (string)($_POST['tax_pct_default'] ?? '0.00');","$data['is_active'] = isset($_POST['is_active']) ? 1 : 0;","","try {","  if (!$isEdit) {","    $sql = \"INSERT INTO quote_items","      (code,name,hsn_sac,uom,rate_default,tax_pct_default,is_active,created_at,deleted_at)","      VALUES","      (:code,:name,:hsn_sac,:uom,:rate_default,:tax_pct_default,:is_active,NOW(),NULL)\";","    $st = $pdo->prepare($sql);","    $st->execute($data);","    $newId = (int)$pdo->lastInsertId();","    audit_log($pdo, 'quote_items', 'create', $newId, $data);","    set_flash('success', 'Quote item created.');","    header('Location: quote_items_form.php?id='.$newId); exit;","  } else {","    $data['id'] = $id;","    $sql = \"UPDATE quote_items SET","      code=:code, name=:name, hsn_sac=:hsn_sac, uom=:uom, rate_default=:rate_default, tax_pct_default=:tax_pct_default, is_active=:is_active","      WHERE id=:id AND deleted_at IS NULL\";","    $st = $pdo->prepare($sql);","    $st->execute($data);","    audit_log($pdo, 'quote_items', 'update', $id, $data);","    set_flash('success', 'Quote item updated.');","    header('Location: quote_items_form.php?id='.$id); exit;","  }","} catch (Throwable $e) {","  set_flash('danger', $e->getMessage());","  header('Location: quote_items_form.php'.($isEdit?('?id='.$id):'')); exit;","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/quote_items/quote_items_form.php": ["<?php","/** PATH: /public_html/quote_items/quote_items_form.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login();","$id = (int)($_GET['id'] ?? 0);","$isEdit = $id > 0;","require_permission($isEdit ? 'quote_items.edit' : 'quote_items.create');","","$pdo = db();","","// Active UOMs from your master","$uoms = $pdo->query(\"SELECT code, name FROM uom WHERE status='active' ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","$uomOptionsHtml = '';","foreach ($uoms as $u) {","  $uomOptionsHtml .= '<option value=\"'.h((string)$u['code']).'\">'.h($u['code'].' - '.$u['name']).'</option>';","}","","$row = [","  'code' => '',","  'name' => '',","  'hsn_sac' => '',","  'uom' => 'Nos',","  'rate_default' => '0.00',","  'tax_pct_default' => '0.00',","  'is_active' => 1,","];","","if ($isEdit) {","  $st = $pdo->prepare(\"SELECT * FROM quote_items WHERE id=? AND deleted_at IS NULL\");","  $st->execute([$id]);","  if ($dbrow = $st->fetch(PDO::FETCH_ASSOC)) $row = array_merge($row, $dbrow);","}","","include __DIR__ . '/../ui/layout_start.php';","render_flash();","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h4 mb-0\"><?= $isEdit ? 'Edit Quote Item' : 'New Quote Item' ?></h1>","  <a href=\"<?= h('quote_items_list.php') ?>\" class=\"btn btn-outline-secondary\">Back</a>","</div>","","<form method=\"post\" action=\"<?= h('quote_items_save.php') ?>\">","  <?= csrf_field() ?>","  <input type=\"hidden\" name=\"id\" value=\"<?= (int)$id ?>\">","","  <div class=\"row g-3\">","    <div class=\"col-md-3\">","      <label class=\"form-label\">Code</label>","      <input class=\"form-control\" name=\"code\" value=\"<?= h((string)$row['code']) ?>\" required>","    </div>","    <div class=\"col-md-6\">","      <label class=\"form-label\">Name</label>","      <input class=\"form-control\" name=\"name\" value=\"<?= h((string)$row['name']) ?>\" required>","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">HSN / SAC</label>","      <input class=\"form-control\" name=\"hsn_sac\" value=\"<?= h((string)$row['hsn_sac']) ?>\">","    </div>","","    <div class=\"col-md-2\">","      <label class=\"form-label\">UOM</label>","      <select class=\"form-select\" name=\"uom\">","        <?php","          $uomSel = (string)$row['uom'];","          $html = $uomOptionsHtml;","          if ($uomSel && !array_filter($uoms, fn($u)=>$u['code']===$uomSel)) {","            echo '<option value=\"'.h($uomSel).'\" selected>'.h($uomSel).'</option>';","            echo $html;","          } else {","            echo str_replace('value=\"'.h($uomSel).'\"', 'value=\"'.h($uomSel).'\" selected', $html);","          }","        ?>","      </select>","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Default Rate</label>","      <input class=\"form-control\" name=\"rate_default\" value=\"<?= h((string)$row['rate_default']) ?>\">","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Default Tax %</label>","      <input class=\"form-control\" name=\"tax_pct_default\" value=\"<?= h((string)$row['tax_pct_default']) ?>\">","    </div>","    <div class=\"col-md-2 form-check mt-4\">","      <input class=\"form-check-input\" type=\"checkbox\" id=\"is_active\" name=\"is_active\" <?= ((int)$row['is_active'] ? 'checked' : '') ?>>","      <label class=\"form-check-label\" for=\"is_active\">Active</label>","    </div>","  </div>","","  <div class=\"mt-3\">","    <button class=\"btn btn-primary\"><?= $isEdit ? 'Update' : 'Create' ?></button>","  </div>","</form>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/diag_env.php": ["<?php","declare(strict_types=1);","ini_set('display_errors','1'); ini_set('display_startup_errors','1'); error_reporting(E_ALL);","","echo \"<pre>\";","echo \"PHP: \" . PHP_VERSION . \"\\n\";","echo \"Document Root: \" . ($_SERVER['DOCUMENT_ROOT'] ?? '-') . \"\\n\";","echo \"Script: \" . __FILE__ . \"\\n\\n\";","","$paths = [","  '/includes/db.php',","  '/includes/auth.php',","  '/includes/rbac.php',","  '/ui/layout_start.php',","  '/ui/layout_end.php',","  '/uom/uom_list.php',","  '/material/index.php',","  '/items/items_list.php',","];","foreach ($paths as $p) {","  $full = __DIR__ . $p;","  echo str_pad($p, 35) . (is_file($full) ? \"OK\" : \"MISSING\") . \"\\n\";","}","","echo \"\\nInclude Path:\\n\" . get_include_path() . \"\\n\";","","$log = '/home/u989675055/logs/php-error.log';","echo \"\\nError log path (from .user.ini): $log\\n\";","echo (is_file($log) ? \"Log exists (tail it via panel/ssh)\" : \"Log not found or no permission\") . \"\\n\";","echo \"</pre>\";"],
"/home/u989675055/domains/emsinfra.co.in/public_html/files_to_json.php": ["<?php","declare(strict_types=1);","/**"," * files_to_json.php"," *"," * Walk a directory tree and write a single JSON file containing:"," *  - A header record with the file path"," *  - Then each line of that file as a separate record (NDJSON by default)"," *"," * Query params (for browser) or CLI args (key=value):"," *   path=/abs/or/relative/path    (default: current dir)"," *   out=/abs/or/relative/out.json (default: ./files_dump.ndjson for ndjson, ./files_dump.json for json)"," *   mode=ndjson|json              (default: ndjson)"," *   hide_dotfiles=1               (default: 0)"," *   follow_symlinks=1             (default: 0)"," *   include_ext=php,js,css,html   (optional, comma-separated; else include all)"," *   exclude_dir=vendor,.git,node_modules (optional, comma-separated)"," *   max_size_mb=5                 (default: 5; per-file cap; 0 = unlimited)"," */","","ini_set('memory_limit', '-1');","set_time_limit(0);","","// --------- args (works in web or CLI) ----------","function argv_kv(): array {","    $kv = [];","    if (PHP_SAPI === 'cli' && isset($_SERVER['argv'])) {","        foreach (array_slice($_SERVER['argv'], 1) as $arg) {","            if (str_contains($arg, '=')) {","                [$k,$v] = explode('=', $arg, 2);","                $kv[$k] = $v;","            }","        }","    }","    return $kv;","}","$args = array_merge($_GET ?? [], argv_kv());","","$root           = (string)($args['path'] ?? getcwd());","$mode           = (string)($args['mode'] ?? 'ndjson'); // ndjson | json","$hideDot        = isset($args['hide_dotfiles']) && in_array((string)$args['hide_dotfiles'], ['1','true','on'], true);","$followLinks    = isset($args['follow_symlinks']) && in_array((string)$args['follow_symlinks'], ['1','true','on'], true);","$includeExt     = isset($args['include_ext']) ? array_filter(array_map('strtolower', array_map('trim', explode(',', (string)$args['include_ext'])))) : [];","$excludeDir     = isset($args['exclude_dir']) ? array_filter(array_map('trim', explode(',', (string)$args['exclude_dir']))) : [];","$maxSizeMB      = isset($args['max_size_mb']) ? (int)$args['max_size_mb'] : 5;","$outDefault     = $mode === 'json' ? 'files_dump.json' : 'files_dump.ndjson';","$outPath        = (string)($args['out'] ?? ($root . DIRECTORY_SEPARATOR . $outDefault));","","// --------- validations ----------","if (!is_dir($root)) {","    http_response_code(400);","    echo \"Invalid path: \" . htmlspecialchars($root);","    exit(1);","}","if (!is_writable(dirname($outPath))) {","    http_response_code(400);","    echo \"Output directory not writable: \" . htmlspecialchars(dirname($outPath));","    exit(1);","}","","// --------- helpers ----------","function is_binary_file(string $path, int $probeBytes = 4096): bool {","    $h = @fopen($path, 'rb');","    if (!$h) return true;","    $buf = @fread($h, $probeBytes);","    @fclose($h);","    if ($buf === false) return true;","    // If it contains NULs or a high ratio of non-text bytes, treat as binary","    if (strpos($buf, \"\\0\") !== false) return true;","    $nonText = 0; $len = strlen($buf);","    for ($i=0; $i<$len; $i++) {","        $ord = ord($buf[$i]);","        if ($ord === 9 || $ord === 10 || $ord === 13) continue; // \\t \\n \\r","        if ($ord >= 32 && $ord <= 126) continue; // printable ASCII","        if ($ord >= 128) { $nonText++; continue; } // UTF-8 bytes count as non-ASCII","    }","    return ($len > 0 && ($nonText / $len) > 0.30);","}","function should_skip_entry(SplFileInfo $fi, bool $hideDot, array $excludeDir): bool {","    $name = $fi->getBasename();","    if ($hideDot && strlen($name) > 0 && $name[0] === '.') return true;","    foreach ($excludeDir as $ex) {","        if ($ex !== '' && str_contains($fi->getPathname(), DIRECTORY_SEPARATOR . $ex . DIRECTORY_SEPARATOR)) {","            return true;","        }","    }","    return false;","}","function ext_ok(string $path, array $includeExt): bool {","    if (!$includeExt) return true;","    $ext = strtolower(pathinfo($path, PATHINFO_EXTENSION));","    return in_array($ext, $includeExt, true);","}","function normalize_line(string $line): string {","    // Strip only trailing CR/LF; keep leading/trailing spaces","    return rtrim($line, \"\\r\\n\");","}","function open_out(string $out): SplFileObject {","    $f = new SplFileObject($out, 'w');","    return $f;","}","function write_ndjson_header(SplFileObject $out, string $filePath, int $sizeBytes): void {","    $rec = [","        'type'      => 'header',","        'file'      => $filePath,","        'size'      => $sizeBytes,","        'modified'  => @date('c', @filemtime($filePath) ?: time()),","    ];","    $out->fwrite(json_encode($rec, JSON_UNESCAPED_SLASHES) . \"\\n\");","}","function write_ndjson_line(SplFileObject $out, string $filePath, int $lineNo, string $text): void {","    $rec = [","        'type'     => 'line',","        'file'     => $filePath,","        'line_no'  => $lineNo,","        'text'     => $text,","    ];","    $out->fwrite(json_encode($rec, JSON_UNESCAPED_SLASHES) . \"\\n\");","}","","// --------- main ----------","$flags = \\FilesystemIterator::SKIP_DOTS;","if ($followLinks) $flags |= \\FilesystemIterator::FOLLOW_SYMLINKS;","","$it = new \\RecursiveIteratorIterator(","    new \\RecursiveDirectoryIterator($root, $flags),","    \\RecursiveIteratorIterator::SELF_FIRST",");","","$fileCount = 0;","$lineCount = 0;","$skipped   = ['binary'=>0, 'too_large'=>0, 'ext'=>0, 'hidden'=>0, 'dir_excluded'=>0];","","$out = open_out($outPath);","","if ($mode === 'json') {","    // Stream a single JSON object: { \"path\": [\"line1\",\"line2\", ...], ... }","    $out->fwrite(\"{\\n\");","    $firstMap = true;","    foreach ($it as $fi) {","        /** @var SplFileInfo $fi */","        if (should_skip_entry($fi, $hideDot, $excludeDir)) {","            if ($fi->isDir()) $skipped['dir_excluded']++;","            else $skipped['hidden']++;","            continue;","        }","        if ($fi->isDir()) continue;","","        $path = $fi->getPathname();","        if (!ext_ok($path, $includeExt)) { $skipped['ext']++; continue; }","","        $size = (int)@$fi->getSize();","        if ($maxSizeMB > 0 && $size > ($maxSizeMB * 1024 * 1024)) { $skipped['too_large']++; continue; }","        if (is_binary_file($path)) { $skipped['binary']++; continue; }","","        $fh = @fopen($path, 'rb');","        if (!$fh) continue;","","        // Write map key","        if (!$firstMap) $out->fwrite(\",\\n\");","        $firstMap = false;","","        // JSON key must be quoted; we also stream lines array","        $out->fwrite(json_encode($path, JSON_UNESCAPED_SLASHES) . \": [\");","","        $firstLine = true; $ln = 0;","        while (($line = fgets($fh)) !== false) {","            $ln++;","            if (!$firstLine) $out->fwrite(\",\");","            $firstLine = false;","            $out->fwrite(json_encode(normalize_line($line), JSON_UNESCAPED_SLASHES));","            $lineCount++;","        }","        @fclose($fh);","        $out->fwrite(\"]\");","","        $fileCount++;","    }","    $out->fwrite(\"\\n}\\n\");","} else {","    // NDJSON: header + line objects","    foreach ($it as $fi) {","        /** @var SplFileInfo $fi */","        if (should_skip_entry($fi, $hideDot, $excludeDir)) {","            if ($fi->isDir()) $skipped['dir_excluded']++;","            else $skipped['hidden']++;","            continue;","        }","        if ($fi->isDir()) continue;","","        $path = $fi->getPathname();","        if (!ext_ok($path, $includeExt)) { $skipped['ext']++; continue; }","","        $size = (int)@$fi->getSize();","        if ($maxSizeMB > 0 && $size > ($maxSizeMB * 1024 * 1024)) { $skipped['too_large']++; continue; }","        if (is_binary_file($path)) { $skipped['binary']++; continue; }","","        write_ndjson_header($out, $path, $size);","","        $fh = @fopen($path, 'rb');","        if (!$fh) continue;","        $ln = 0;","        while (($line = fgets($fh)) !== false) {","            $ln++;","            write_ndjson_line($out, $path, $ln, normalize_line($line));","            $lineCount++;","        }","        @fclose($fh);","","        $fileCount++;","    }","}","","// Final note (stdout or small HTML page if in browser)","$summary = [","    'root'        => $root,","    'out'         => $outPath,","    'mode'        => $mode,","    'files_written' => $fileCount,","    'lines_written' => $lineCount,","    'skipped'       => $skipped,","    'finished_at'   => date('c'),","];","","if (PHP_SAPI === 'cli') {","    fwrite(STDERR, json_encode($summary, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES) . PHP_EOL);","} else {","    header('Content-Type: text/plain; charset=utf-8');","    echo json_encode($summary, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/material/index.php": ["<?php","/** PATH: /public_html/material/index.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","// View permission for material taxonomy landing","require_permission('master.material.category.view');","","$pdo = db();","","// Load active categories","$cats = $pdo->query(\"","  SELECT id, code, name","  FROM material_categories","  WHERE status='active'","  ORDER BY name","\")->fetchAll(PDO::FETCH_ASSOC);","","// Determine selected category","$selectedCatId = null;","if (!empty($cats)) {","    $requested = isset($_GET['cat_id']) ? (int)$_GET['cat_id'] : 0;","    $catIds = array_column($cats, 'id');","    $selectedCatId = $requested && in_array($requested, $catIds, true) ? $requested : (int)$cats[0]['id'];","}","","// Load subcategories for the selected category","$subcats = [];","if ($selectedCatId) {","    $st = $pdo->prepare(\"","        SELECT id, code, name","        FROM material_subcategories","        WHERE status='active' AND category_id=?","        ORDER BY name","    \");","    $st->execute([$selectedCatId]);","    $subcats = $st->fetchAll(PDO::FETCH_ASSOC);","}","","$pageTitle = \"Material Taxonomy\";","include __DIR__ . '/../ui/layout_start.php';","?>","","<div class=\"container-fluid py-3\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <h1 class=\"h4 mb-0\"><?= h($pageTitle) ?></h1>","    <div class=\"btn-group\">","      <?php if (has_permission('master.material.category.manage')): ?>","        <a class=\"btn btn-sm btn-primary\" href=\"categories_list.php\">","          <i class=\"bi bi-collection\"></i> Manage Categories","        </a>","      <?php endif; ?>","      <?php if (has_permission('master.material.subcategory.manage')): ?>","        <a class=\"btn btn-sm btn-outline-primary\" href=\"subcategories_list.php\">","          <i class=\"bi bi-diagram-3\"></i> Manage Subcategories","        </a>","      <?php endif; ?>","      <?php if (has_permission('materials.item.view')): ?>","        <a class=\"btn btn-sm btn-outline-secondary\" href=\"../items/items_list.php\">","          <i class=\"bi bi-box-seam\"></i> Items","        </a>","      <?php endif; ?>","    </div>","  </div>","","  <?php if (empty($cats)): ?>","    <div class=\"alert alert-warning\">","      No material categories found. <?php if (has_permission('master.material.category.manage')): ?>","        <a href=\"categories_form.php\" class=\"alert-link\">Create the first category</a>.","      <?php endif; ?>","    </div>","  <?php else: ?>","    <div class=\"row g-3\">","      <div class=\"col-lg-4\">","        <div class=\"card shadow-sm\">","          <div class=\"card-header\">","            <strong>Categories</strong>","          </div>","          <div class=\"list-group list-group-flush\">","            <?php foreach ($cats as $c): ?>","              <a class=\"list-group-item list-group-item-action <?= $c['id']===$selectedCatId ? 'active' : '' ?>\"","                 href=\"?cat_id=<?= (int)$c['id'] ?>\">","                <div class=\"d-flex justify-content-between align-items-center\">","                  <span><?= h($c['name']) ?></span>","                  <small class=\"<?= $c['id']===$selectedCatId ? 'text-white-50' : 'text-muted' ?>\"><?= h($c['code']) ?></small>","                </div>","              </a>","            <?php endforeach; ?>","          </div>","        </div>","      </div>","","      <div class=\"col-lg-8\">","        <div class=\"card shadow-sm\">","          <div class=\"card-header d-flex justify-content-between align-items-center\">","            <strong>Subcategories</strong>","            <?php if (has_permission('master.material.subcategory.manage') && $selectedCatId): ?>","              <a class=\"btn btn-sm btn-primary\" href=\"subcategories_form.php?category_id=<?= (int)$selectedCatId ?>\">","                <i class=\"bi bi-plus-circle\"></i> New Subcategory","              </a>","            <?php endif; ?>","          </div>","          <div class=\"card-body\">","            <?php if (empty($subcats)): ?>","              <p class=\"text-muted mb-0\">No active subcategories found for this category.</p>","            <?php else: ?>","              <div class=\"row row-cols-1 row-cols-md-2 g-3\">","                <?php foreach ($subcats as $s): ?>","                  <div class=\"col\">","                    <div class=\"border rounded p-3 h-100\">","                      <div class=\"d-flex justify-content-between align-items-start\">","                        <div>","                          <div class=\"fw-semibold\"><?= h($s['name']) ?></div>","                          <div class=\"small text-muted\"><?= h($s['code']) ?></div>","                        </div>","                        <?php if (has_permission('materials.item.view')): ?>","                          <a class=\"btn btn-sm btn-outline-secondary\"","                             href=\"../items/items_list.php?cat_id=<?= (int)$selectedCatId ?>&subcat_id=<?= (int)$s['id'] ?>\">","                            View Items","                          </a>","                        <?php endif; ?>","                      </div>","                    </div>","                  </div>","                <?php endforeach; ?>","              </div>","            <?php endif; ?>","          </div>","        </div>","      </div>","    </div>","  <?php endif; ?>","</div>","","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/material/categories_list.php": ["<?php","require_once __DIR__ . '/../config.php';","require_login();","require_permission('master.material.category.view');","","$pdo = db();","$rows = $pdo->query(\"SELECT id, code, name, prefix, status FROM material_categories ORDER BY name\")->fetchAll();","$canManage = has_permission('master.material.category.manage');","","$page_title = 'Material Categories';","include __DIR__ . '/../ui/layout_start.php';","?>","<!-- Header -->","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <nav aria-label=\"breadcrumb\">","    <ol class=\"breadcrumb mb-0\">","      <li class=\"breadcrumb-item\"><a href=\"/dashboard.php\">Dashboard</a></li>","      <li class=\"breadcrumb-item active\" aria-current=\"page\">Material Categories</li>","    </ol>","  </nav>","  <div>","    <?php if ($canManage): ?>","      <a class=\"btn btn-primary btn-sm\" href=\"categories_form.php\"><i class=\"bi bi-plus-lg me-1\"></i> New</a>","    <?php endif; ?>","  </div>","</div>","","<div class=\"card shadow-sm\">","  <div class=\"card-body p-0\">","    <div class=\"table-responsive\">","      <table class=\"table table-hover table-striped align-middle mb-0\">","        <thead class=\"table-light\">","          <tr>","            <th style=\"width:120px;\">Code</th>","            <th>Name</th>","            <th style=\"width:120px;\">Prefix</th>","            <th style=\"width:120px;\">Status</th>","            <th style=\"width:220px;\" class=\"text-end\">Actions</th>","          </tr>","        </thead>","        <tbody>","        <?php foreach($rows as $r): ?>","          <tr>","            <td><code><?= htmlspecialchars($r['code']) ?></code></td>","            <td class=\"fw-semibold\"><?= htmlspecialchars($r['name']) ?></td>","            <td><code><?= htmlspecialchars($r['prefix']) ?></code></td>","            <td>","              <span class=\"badge <?= $r['status']==='active' ? 'bg-success-subtle text-success-emphasis border' : 'bg-secondary-subtle text-secondary-emphasis border' ?>\">","                <?= ucfirst($r['status']) ?>","              </span>","            </td>","            <td class=\"text-end\">","              <div class=\"btn-group btn-group-sm\">","                <a class=\"btn btn-light\" href=\"subcategories_list.php?category_id=<?= (int)$r['id'] ?>\" title=\"View subcategories\"><i class=\"bi bi-diagram-3\"></i></a>","                <?php if ($canManage): ?>","                  <a class=\"btn btn-light\" href=\"categories_form.php?id=<?= (int)$r['id'] ?>\" title=\"Edit\"><i class=\"bi bi-pencil-square\"></i></a>","                <?php endif; ?>","              </div>","            </td>","          </tr>","        <?php endforeach; if (!$rows): ?>","          <tr><td colspan=\"5\" class=\"text-center text-muted py-4\">No records</td></tr>","        <?php endif; ?>","        </tbody>","      </table>","    </div>","  </div>","</div>","","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/material/items_form.php": ["<?php","/** PATH: /public_html/material/items_form.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_login();","","// Keep all Item create/edit in the canonical module","$qs = $_SERVER['QUERY_STRING'] ?? '';","$target = '../items/items_form.php' . ($qs ? ('?' . $qs) : '');","header('Location: ' . $target);","exit;"],
"/home/u989675055/domains/emsinfra.co.in/public_html/material/subcategories_list.php": ["<?php","require_once __DIR__ . '/../config.php';","require_login();","require_permission('master.material.subcategory.view');","","$pdo = db();","$category_id = (int)($_GET['category_id'] ?? 0);","$cat = null;","","if ($category_id) {","  $st=$pdo->prepare(\"SELECT id, name FROM material_categories WHERE id=?\");","  $st->execute([$category_id]);","  $cat=$st->fetch();","}","","$bind=[]; ","$sql=\"SELECT sc.id, sc.code, sc.name, sc.prefix, sc.status, c.name AS cat_name","      FROM material_subcategories sc JOIN material_categories c ON c.id=sc.category_id\";","if ($category_id) { $sql.=\" WHERE sc.category_id=?\"; $bind[]=$category_id; }","$sql.=\" ORDER BY c.name, sc.name\";","$st=$pdo->prepare($sql); $st->execute($bind); $rows=$st->fetchAll();","$canManage = has_permission('master.material.subcategory.manage');","","$page_title = 'Material Subcategories';","include __DIR__ . '/../ui/layout_start.php';","?>","<!-- Header -->","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <nav aria-label=\"breadcrumb\">","    <ol class=\"breadcrumb mb-0\">","      <li class=\"breadcrumb-item\"><a href=\"/dashboard.php\">Dashboard</a></li>","      <li class=\"breadcrumb-item\"><a href=\"categories_list.php\">Material Categories</a></li>","      <li class=\"breadcrumb-item active\" aria-current=\"page\">Subcategories<?= $cat ? ' \u2014 '.htmlspecialchars($cat['name']) : '' ?></li>","    </ol>","  </nav>","  <div>","    <?php if ($canManage): ?>","      <a class=\"btn btn-primary btn-sm\" href=\"subcategories_form.php<?= $category_id ? '?category_id='.$category_id : '' ?>\">","        <i class=\"bi bi-plus-lg me-1\"></i> New","      </a>","    <?php endif; ?>","  </div>","</div>","","<div class=\"card shadow-sm\">","  <div class=\"card-body p-0\">","    <div class=\"table-responsive\">","      <table class=\"table table-hover table-striped align-middle mb-0\">","        <thead class=\"table-light\">","          <tr>","            <th>Category</th>","            <th style=\"width:120px;\">Code</th>","            <th>Name</th>","            <th style=\"width:120px;\">Prefix</th>","            <th style=\"width:120px;\">Status</th>","            <th style=\"width:160px;\" class=\"text-end\">Actions</th>","          </tr>","        </thead>","        <tbody>","        <?php foreach($rows as $r): ?>","          <tr>","            <td><?= htmlspecialchars($r['cat_name']) ?></td>","            <td><code><?= htmlspecialchars($r['code']) ?></code></td>","            <td class=\"fw-semibold\"><?= htmlspecialchars($r['name']) ?></td>","            <td><code><?= htmlspecialchars($r['prefix']) ?></code></td>","            <td>","              <span class=\"badge <?= $r['status']==='active' ? 'bg-success-subtle text-success-emphasis border':'bg-secondary-subtle text-secondary-emphasis border' ?>\">","                <?= ucfirst($r['status']) ?>","              </span>","            </td>","            <td class=\"text-end\">","              <?php if ($canManage): ?>","                <div class=\"btn-group btn-group-sm\">","                  <a class=\"btn btn-light\" href=\"subcategories_form.php?id=<?= (int)$r['id'] ?>\" title=\"Edit\"><i class=\"bi bi-pencil-square\"></i></a>","                </div>","              <?php endif; ?>","            </td>","          </tr>","        <?php endforeach; if (!$rows): ?>","          <tr><td colspan=\"6\" class=\"text-center text-muted py-4\">No records</td></tr>","        <?php endif; ?>","        </tbody>","      </table>","    </div>","  </div>","</div>","","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/material/subcategories_form.php": ["<?php","require_once __DIR__ . '/../config.php';","require_login();","require_permission('master.material.subcategory.manage');","","$pdo = db();","$id = (int)($_GET['id'] ?? 0);","$category_id = (int)($_GET['category_id'] ?? 0);","$row = null;","","$cats = $pdo->query(\"SELECT id, name FROM material_categories WHERE status='active' ORDER BY name\")->fetchAll();","","if ($id) {","  $st=$pdo->prepare(\"SELECT * FROM material_subcategories WHERE id=?\");","  $st->execute([$id]);","  $row=$st->fetch();","  if (!$row) { http_response_code(404); exit('Not found'); }","  $category_id = (int)$row['category_id'];","}","","if ($_SERVER['REQUEST_METHOD']==='POST') {","  verify_csrf_or_die();","  $category_id = (int)($_POST['category_id'] ?? 0);","  $code   = strtoupper(trim($_POST['code'] ?? ''));","  $name   = trim($_POST['name'] ?? '');","  $prefix = strtoupper(trim($_POST['prefix'] ?? ''));","  $status = $_POST['status'] ?? 'active';","","  if (!$category_id || $code===''||$name===''||$prefix==='') $err='All fields required';","  else {","    try {","      if ($id) {","        $up=$pdo->prepare(\"UPDATE material_subcategories SET category_id=?, code=?, name=?, prefix=?, status=? WHERE id=?\");","        $up->execute([$category_id,$code,$name,$prefix,$status,$id]);","      } else {","        $in=$pdo->prepare(\"INSERT INTO material_subcategories (category_id,code,name,prefix,status) VALUES (?,?,?,?,?)\");","        $in->execute([$category_id,$code,$name,$prefix,$status]);","      }","      header('Location: subcategories_list.php?category_id='.$category_id); exit;","    } catch (Throwable $e) { $err='Duplicate within category?'; }","  }","}","$val = fn($k,$d='') => htmlspecialchars($row[$k] ?? $d, ENT_QUOTES);","","$page_title = ($id?'Edit':'New').' Subcategory';","include __DIR__ . '/../ui/layout_start.php';","?>","<!-- Header -->","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <nav aria-label=\"breadcrumb\">","    <ol class=\"breadcrumb mb-0\">","      <li class=\"breadcrumb-item\"><a href=\"/dashboard.php\">Dashboard</a></li>","      <li class=\"breadcrumb-item\"><a href=\"categories_list.php\">Material Categories</a></li>","      <li class=\"breadcrumb-item\"><a href=\"subcategories_list.php<?= $category_id?'?category_id='.$category_id:'' ?>\">Subcategories</a></li>","      <li class=\"breadcrumb-item active\" aria-current=\"page\"><?= $id?'Edit':'New' ?></li>","    </ol>","  </nav>","  <a class=\"btn btn-light btn-sm\" href=\"subcategories_list.php<?= $category_id?'?category_id='.$category_id:'' ?>\">","    <i class=\"bi bi-arrow-left\"></i> Back","  </a>","</div>","","<div class=\"card shadow-sm\">","  <div class=\"card-body\">","    <?php if (!empty($err)): ?><div class=\"alert alert-danger\"><?= $err ?></div><?php endif; ?>","    <form method=\"post\">","      <?= csrf_field() ?>","      <div class=\"row g-3\">","        <div class=\"col-md-6\">","          <label class=\"form-label\">Category</label>","          <select class=\"form-select\" name=\"category_id\" required>","            <option value=\"\">Choose...</option>","            <?php foreach($cats as $c): ?>","              <option value=\"<?=$c['id']?>\" <?= $category_id===$c['id']?'selected':'' ?>><?= htmlspecialchars($c['name']) ?></option>","            <?php endforeach; ?>","          </select>","        </div>","        <div class=\"col-md-3\">","          <label class=\"form-label\">Code</label>","          <input class=\"form-control\" name=\"code\" value=\"<?= $val('code') ?>\" required>","        </div>","        <div class=\"col-md-3\">","          <label class=\"form-label\">Prefix</label>","          <input class=\"form-control\" name=\"prefix\" value=\"<?= $val('prefix') ?>\" required>","        </div>","        <div class=\"col-md-3\">","          <label class=\"form-label\">Status</label>","          <select class=\"form-select\" name=\"status\">","            <option value=\"active\"   <?= $val('status','active')==='active'?'selected':'' ?>>Active</option>","            <option value=\"inactive\" <?= $val('status','active')==='inactive'?'selected':'' ?>>Inactive</option>","          </select>","        </div>","        <div class=\"col-md-9\">","          <label class=\"form-label\">Name</label>","          <input class=\"form-control\" name=\"name\" value=\"<?= $val('name') ?>\" required>","        </div>","      </div>","","      <div class=\"mt-3 d-flex gap-2\">","        <button class=\"btn btn-primary\"><?= $id?'Update':'Create' ?></button>","        <a class=\"btn btn-outline-secondary\" href=\"subcategories_list.php<?= $category_id?'?category_id='.$category_id:'' ?>\">Cancel</a>","      </div>","    </form>","  </div>","</div>","","<script>","document.addEventListener('input', e=>{","  if (e.target.name==='code'||e.target.name==='prefix') e.target.value=e.target.value.toUpperCase();","});","</script>","","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/material/items_list.php": ["<?php","/** PATH: /public_html/material/items_list.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_login();","","// Single source of truth for Items list under /items/","$qs = $_SERVER['QUERY_STRING'] ?? '';","$target = '../items/items_list.php' . ($qs ? ('?' . $qs) : '');","header('Location: ' . $target, true, 301);","exit;"],
"/home/u989675055/domains/emsinfra.co.in/public_html/material/categories_form.php": ["<?php","require_once __DIR__ . '/../config.php';","require_login();","require_permission('master.material.category.manage');","","$pdo = db();","$id = (int)($_GET['id'] ?? 0);","$row = null;","","if ($id) {","  $st = $pdo->prepare(\"SELECT * FROM material_categories WHERE id=?\");","  $st->execute([$id]);","  $row = $st->fetch();","  if (!$row) { http_response_code(404); exit('Not found'); }","}","","if ($_SERVER['REQUEST_METHOD']==='POST') {","  verify_csrf_or_die();","  $code   = strtoupper(trim($_POST['code'] ?? ''));","  $name   = trim($_POST['name'] ?? '');","  $prefix = strtoupper(trim($_POST['prefix'] ?? ''));","  $status = $_POST['status'] ?? 'active';","  if ($code===''||$name===''||$prefix==='') $err='All fields required';","  else {","    try {","      if ($id) {","        $up=$pdo->prepare(\"UPDATE material_categories SET code=?, name=?, prefix=?, status=? WHERE id=?\");","        $up->execute([$code,$name,$prefix,$status,$id]);","      } else {","        $in=$pdo->prepare(\"INSERT INTO material_categories (code,name,prefix,status) VALUES (?,?,?,?)\");","        $in->execute([$code,$name,$prefix,$status]);","      }","      header('Location: categories_list.php'); exit;","    } catch (Throwable $e) { $err='Duplicate code?'; }","  }","}","$val = fn($k,$d='') => htmlspecialchars($row[$k] ?? $d, ENT_QUOTES);","","$page_title = ($id?'Edit':'New').' Category';","include __DIR__ . '/../ui/layout_start.php';","?>","<!-- Header -->","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <nav aria-label=\"breadcrumb\">","    <ol class=\"breadcrumb mb-0\">","      <li class=\"breadcrumb-item\"><a href=\"/dashboard.php\">Dashboard</a></li>","      <li class=\"breadcrumb-item\"><a href=\"categories_list.php\">Material Categories</a></li>","      <li class=\"breadcrumb-item active\" aria-current=\"page\"><?= $id?'Edit':'New' ?></li>","    </ol>","  </nav>","  <a class=\"btn btn-light btn-sm\" href=\"categories_list.php\"><i class=\"bi bi-arrow-left\"></i> Back</a>","</div>","","<div class=\"card shadow-sm\">","  <div class=\"card-body\">","    <?php if (!empty($err)): ?><div class=\"alert alert-danger\"><?= $err ?></div><?php endif; ?>","    <form method=\"post\">","      <?= csrf_field() ?>","      <div class=\"row g-3\">","        <div class=\"col-md-3\">","          <label class=\"form-label\">Code</label>","          <input class=\"form-control\" name=\"code\" value=\"<?= $val('code') ?>\" required>","        </div>","        <div class=\"col-md-5\">","          <label class=\"form-label\">Name</label>","          <input class=\"form-control\" name=\"name\" value=\"<?= $val('name') ?>\" required>","        </div>","        <div class=\"col-md-2\">","          <label class=\"form-label\">Prefix (2\u20133 letters)</label>","          <input class=\"form-control\" name=\"prefix\" value=\"<?= $val('prefix') ?>\" required>","        </div>","        <div class=\"col-md-2\">","          <label class=\"form-label\">Status</label>","          <select class=\"form-select\" name=\"status\">","            <option value=\"active\"   <?= $val('status','active')==='active'?'selected':'' ?>>Active</option>","            <option value=\"inactive\" <?= $val('status','active')==='inactive'?'selected':'' ?>>Inactive</option>","          </select>","        </div>","      </div>","","      <div class=\"mt-3 d-flex gap-2\">","        <button class=\"btn btn-primary\"><?= $id?'Update':'Create' ?></button>","        <a class=\"btn btn-outline-secondary\" href=\"categories_list.php\">Cancel</a>","      </div>","    </form>","  </div>","</div>","","<script>","document.addEventListener('input', e=>{","  if (e.target.name==='code'||e.target.name==='prefix') e.target.value=e.target.value.toUpperCase();","});","</script>","","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/admin/org_profile_save.php": ["<?php","/** PATH: /public_html/admin/org_profile_save.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/audit.php';","","require_login();","require_permission('admin.org.edit');","verify_csrf_or_die();","","$pdo = db();","","$data = [","  'legal_name' => trim((string)($_POST['legal_name'] ?? '')),","  'gstin' => trim((string)($_POST['gstin'] ?? '')),","  'address_line1' => trim((string)($_POST['address_line1'] ?? '')),","  'address_line2' => trim((string)($_POST['address_line2'] ?? '')),","  'city' => trim((string)($_POST['city'] ?? '')),","  'state' => trim((string)($_POST['state'] ?? '')),","  'state_code' => trim((string)($_POST['state_code'] ?? '')),","  'pincode' => trim((string)($_POST['pincode'] ?? '')),","  'phone' => trim((string)($_POST['phone'] ?? '')),","  'email' => trim((string)($_POST['email'] ?? '')),","  'bank_name' => trim((string)($_POST['bank_name'] ?? '')),","  'bank_branch' => trim((string)($_POST['bank_branch'] ?? '')),","  'bank_ifsc' => trim((string)($_POST['bank_ifsc'] ?? '')),","  'bank_account_no' => trim((string)($_POST['bank_account_no'] ?? '')),","];","","try {","  $pdo->beginTransaction();","  // ensure row exists","  $pdo->exec(\"INSERT IGNORE INTO org_profile (id, legal_name) VALUES (1, 'Your Company Pvt Ltd')\");","  // update row","  $sql = \"UPDATE org_profile SET","    legal_name=:legal_name, gstin=:gstin, address_line1=:address_line1, address_line2=:address_line2,","    city=:city, state=:state, state_code=:state_code, pincode=:pincode,","    phone=:phone, email=:email,","    bank_name=:bank_name, bank_branch=:bank_branch, bank_ifsc=:bank_ifsc, bank_account_no=:bank_account_no","    WHERE id=1\";","  $st = $pdo->prepare($sql);","  $st->execute($data);","","  audit_log($pdo, 'org_profile', 'update', 1, $data);","  $pdo->commit();","","  set_flash('success', 'Company profile saved.');","} catch (Throwable $e) {","  if ($pdo->inTransaction()) $pdo->rollBack();","  set_flash('danger', $e->getMessage());","}","","header('Location: org_profile_form.php');","exit;"],
"/home/u989675055/domains/emsinfra.co.in/public_html/admin/org_profile_form.php": ["<?php","/** PATH: /public_html/admin/org_profile_form.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login();","/** Choose the permission name you prefer; keep it consistent */","require_permission('admin.org.edit');","","$pdo = db();","/** always single row with id=1; create if missing so UI works first time */","$pdo->exec(\"INSERT IGNORE INTO org_profile (id, legal_name) VALUES (1, 'Your Company Pvt Ltd')\");","$row = $pdo->query(\"SELECT * FROM org_profile WHERE id=1\")->fetch(PDO::FETCH_ASSOC) ?: [];","","include __DIR__ . '/../ui/layout_start.php';","render_flash();","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h4 mb-0\">Company Profile</h1>","  <a href=\"<?= h('../dashboard.php') ?>\" class=\"btn btn-outline-secondary\">Back</a>","</div>","","<form method=\"post\" action=\"<?= h('org_profile_save.php') ?>\" class=\"row g-3\">","  <?= csrf_field() ?>","  <div class=\"col-md-6\">","    <label class=\"form-label\">Legal Name</label>","    <input class=\"form-control\" name=\"legal_name\" value=\"<?= h((string)($row['legal_name'] ?? '')) ?>\" required>","  </div>","  <div class=\"col-md-6\">","    <label class=\"form-label\">GSTIN</label>","    <input class=\"form-control\" name=\"gstin\" value=\"<?= h((string)($row['gstin'] ?? '')) ?>\">","  </div>","","  <div class=\"col-md-6\">","    <label class=\"form-label\">Address Line 1</label>","    <input class=\"form-control\" name=\"address_line1\" value=\"<?= h((string)($row['address_line1'] ?? '')) ?>\">","  </div>","  <div class=\"col-md-6\">","    <label class=\"form-label\">Address Line 2</label>","    <input class=\"form-control\" name=\"address_line2\" value=\"<?= h((string)($row['address_line2'] ?? '')) ?>\">","  </div>","","  <div class=\"col-md-4\">","    <label class=\"form-label\">City</label>","    <input class=\"form-control\" name=\"city\" value=\"<?= h((string)($row['city'] ?? '')) ?>\">","  </div>","  <div class=\"col-md-4\">","    <label class=\"form-label\">State</label>","    <input class=\"form-control\" name=\"state\" value=\"<?= h((string)($row['state'] ?? '')) ?>\" placeholder=\"e.g. Maharashtra\">","  </div>","  <div class=\"col-md-2\">","    <label class=\"form-label\">State Code</label>","    <input class=\"form-control\" name=\"state_code\" value=\"<?= h((string)($row['state_code'] ?? '')) ?>\" placeholder=\"e.g. 27\">","  </div>","  <div class=\"col-md-2\">","    <label class=\"form-label\">PIN Code</label>","    <input class=\"form-control\" name=\"pincode\" value=\"<?= h((string)($row['pincode'] ?? '')) ?>\">","  </div>","","  <div class=\"col-md-6\">","    <label class=\"form-label\">Phone</label>","    <input class=\"form-control\" name=\"phone\" value=\"<?= h((string)($row['phone'] ?? '')) ?>\">","  </div>","  <div class=\"col-md-6\">","    <label class=\"form-label\">Email</label>","    <input type=\"email\" class=\"form-control\" name=\"email\" value=\"<?= h((string)($row['email'] ?? '')) ?>\">","  </div>","","  <div class=\"col-12\"><hr></div>","  <div class=\"col-md-6\">","    <label class=\"form-label\">Bank Name</label>","    <input class=\"form-control\" name=\"bank_name\" value=\"<?= h((string)($row['bank_name'] ?? '')) ?>\">","  </div>","  <div class=\"col-md-6\">","    <label class=\"form-label\">Branch</label>","    <input class=\"form-control\" name=\"bank_branch\" value=\"<?= h((string)($row['bank_branch'] ?? '')) ?>\">","  </div>","  <div class=\"col-md-4\">","    <label class=\"form-label\">IFSC</label>","    <input class=\"form-control\" name=\"bank_ifsc\" value=\"<?= h((string)($row['bank_ifsc'] ?? '')) ?>\">","  </div>","  <div class=\"col-md-8\">","    <label class=\"form-label\">Account No.</label>","    <input class=\"form-control\" name=\"bank_account_no\" value=\"<?= h((string)($row['bank_account_no'] ?? '')) ?>\">","  </div>","","  <div class=\"col-12\">","    <button class=\"btn btn-primary\">Save Profile</button>","  </div>","</form>","","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/modules/demo/hello.php": ["<?php","declare(strict_types=1);","$title = \"Items\";","$items = [\"apple\",\"banana\",\"cherry\"];","?>","<!doctype html>","<html lang=\"en\">","<head>","  <meta charset=\"utf-8\">","  <title><?= htmlspecialchars($title) ?></title>","  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","</head>","<body class=\"p-3\">","  <div class=\"container\">","    <h1 class=\"h4\"><?= htmlspecialchars($title) ?></h1>","    <ul>","      <?php foreach ($items as $it): ?>","        <li><?= htmlspecialchars($it) ?></li>","      <?php endforeach; ?>","    </ul>","    <button class=\"btn btn-outline-secondary\">Click me</button>","  </div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/bom/routing_form.php": ["<?php","/** PATH: /public_html/bom/routing_form.php"," * Adds per-op variables management for count-based ops (e.g., drilling)."," * You can add variables like: holes, hole_dia_mm, holes_per_meter, etc."," */","declare(strict_types=1);","","$ROOT = dirname(__DIR__);","require_once $ROOT . '/includes/auth.php';","require_once $ROOT . '/includes/db.php';","require_once $ROOT . '/includes/rbac.php';","require_once $ROOT . '/includes/csrf.php';","require_once $ROOT . '/includes/helpers.php';","require_once $ROOT . '/includes/services/MetricService.php';","","/* ---- Polyfills ---- */","if (!function_exists('e')) { function e($v): string { return htmlspecialchars((string)$v, ENT_QUOTES|ENT_SUBSTITUTE,'UTF-8'); } }","if (!function_exists('redirect')) { function redirect(string $url): void { header('Location: '.$url); exit; } }","if (!function_exists('csrf_hidden_input')) {","  function csrf_hidden_input(): string { $t=function_exists('csrf_token')?csrf_token():''; return '<input type=\"hidden\" name=\"csrf\" value=\"'.e($t).'\">'; }","}","if (!function_exists('csrf_require_token')) {","  function csrf_require_token(): void {","    if (($_SERVER['REQUEST_METHOD'] ?? 'GET') === 'POST') {","      $tok = $_POST['csrf'] ?? '';","      if (function_exists('csrf_token') && $tok !== csrf_token()) { http_response_code(400); echo 'Invalid CSRF token.'; exit; }","    }","  }","}","","require_login();","require_permission('routing.manage');","","$pdo = db();","$UI_PATH     = $ROOT . '/ui';","$PAGE_TITLE  = 'Routing Editor';","$ACTIVE_MENU = 'bom.routing';","","$flash = $_SESSION['flash'] ?? null; unset($_SESSION['flash']);","","// data helpers","function fetch_boms(PDO $pdo): array {","  $sql = \"SELECT b.id, b.bom_no FROM bom b ORDER BY b.id DESC LIMIT 200\";","  return $pdo->query($sql)->fetchAll(PDO::FETCH_ASSOC);","}","function fetch_components(PDO $pdo, int $bom_id): array {","  $st = $pdo->prepare(\"SELECT id, part_id, description, length_mm, width_mm, thickness_mm, qty FROM bom_components WHERE bom_id=:b ORDER BY id ASC\");","  $st->execute([':b'=>$bom_id]);","  return $st->fetchAll(PDO::FETCH_ASSOC);","}","function fetch_processes(PDO $pdo): array {","  return $pdo->query(\"SELECT id, code, name FROM processes ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC);","}","function fetch_work_centers(PDO $pdo): array {","  try { return $pdo->query(\"SELECT id, code, name FROM work_centers WHERE active=1 ORDER BY name\")->fetchAll(PDO::FETCH_ASSOC); }","  catch (Throwable $e) { return []; }","}","function fetch_rules(PDO $pdo): array {","  return $pdo->query(\"SELECT id, operation_code, expr FROM process_qty_rules ORDER BY operation_code, id DESC\")->fetchAll(PDO::FETCH_ASSOC);","}","function fetch_ops(PDO $pdo, int $component_id): array {","  $sql = \"SELECT ro.id, ro.seq_no, ro.process_id, ro.work_center_id, ro.inspection_gate, ro.process_qty_rule_id,","                 pr.code AS process_code, pr.name AS process_name,","                 wc.code AS wc_code, wc.name AS wc_name,","                 rqr.operation_code, rqr.expr, rqr.result_uom_id,","                 u.code AS uom_code","            FROM routing_ops ro","      INNER JOIN processes pr ON pr.id = ro.process_id","       LEFT JOIN work_centers wc ON wc.id = ro.work_center_id","       LEFT JOIN process_qty_rules rqr ON rqr.id = ro.process_qty_rule_id","       LEFT JOIN uom u ON u.id = rqr.result_uom_id","           WHERE ro.bom_component_id = :c","        ORDER BY ro.seq_no ASC, ro.id ASC\";","  $st = $pdo->prepare($sql); $st->execute([':c'=>$component_id]); return $st->fetchAll(PDO::FETCH_ASSOC);","}","function fetch_op_vars(PDO $pdo, int $op_id): array {","  try {","    $st = $pdo->prepare(\"SELECT id, name, value FROM routing_op_vars WHERE routing_op_id=:id ORDER BY name\");","    $st->execute([':id'=>$op_id]);","    return $st->fetchAll(PDO::FETCH_ASSOC);","  } catch (Throwable $e) { return []; }","}","","// actions","$errors = [];","if (($_SERVER['REQUEST_METHOD'] ?? 'GET') === 'POST') {","  csrf_require_token();","  $act = $_POST['action'] ?? '';","  $bom_id = (int)($_POST['bom_id'] ?? 0);","  $component_id = (int)($_POST['component_id'] ?? 0);","","  if ($act === 'add_op') {","    $process_id = (int)($_POST['process_id'] ?? 0);","    $seq_no = (int)($_POST['seq_no'] ?? 0);","    $work_center_id = (int)($_POST['work_center_id'] ?? 0) ?: null;","    $inspection_gate = isset($_POST['inspection_gate']) ? 1 : 0;","    $st = $pdo->prepare(\"INSERT INTO routing_ops (bom_component_id, process_id, seq_no, work_center_id, inspection_gate) VALUES (:c,:p,:s,:w,:g)\");","    $st->execute([':c'=>$component_id, ':p'=>$process_id, ':s'=>$seq_no, ':w'=>$work_center_id, ':g'=>$inspection_gate]);","    $_SESSION['flash'] = ['type'=>'success','msg'=>'Operation added.'];","    redirect('/bom/routing_form.php?bom_id='.$bom_id.'&component_id='.$component_id);","  }","","  if ($act === 'set_rule') {","    $id = (int)($_POST['id'] ?? 0);","    $rule_id = (int)($_POST['rule_id'] ?? 0) ?: null;","    $st = $pdo->prepare(\"UPDATE routing_ops SET process_qty_rule_id=:r WHERE id=:id AND bom_component_id=:c\");","    $st->execute([':r'=>$rule_id, ':id'=>$id, ':c'=>$component_id]);","    $_SESSION['flash'] = ['type'=>'success','msg'=>'Qty rule updated.'];","    redirect('/bom/routing_form.php?bom_id='.$bom_id.'&component_id='.$component_id);","  }","","  if ($act === 'add_var') {","    $id = (int)($_POST['id'] ?? 0);","    $name = trim((string)($_POST['var_name'] ?? ''));","    $value = (float)($_POST['var_value'] ?? 0);","    if ($name && preg_match('/^[A-Za-z_][A-Za-z0-9_]*$/', $name)) {","      try {","        $st = $pdo->prepare(\"INSERT INTO routing_op_vars (routing_op_id, name, value) VALUES (:id,:n,:v)","                             ON DUPLICATE KEY UPDATE value=VALUES(value)\");","        $st->execute([':id'=>$id, ':n'=>$name, ':v'=>$value]);","        $_SESSION['flash'] = ['type'=>'success','msg'=>'Variable saved.'];","      } catch (Throwable $e) {","        $_SESSION['flash'] = ['type'=>'danger','msg'=>'Save failed (routing_op_vars missing?)'];","      }","    } else {","      $_SESSION['flash'] = ['type'=>'warning','msg'=>'Invalid variable name.'];","    }","    redirect('/bom/routing_form.php?bom_id='.$bom_id.'&component_id='.$component_id);","  }","","  if ($act === 'delete_var') {","    $vid = (int)($_POST['vid'] ?? 0);","    try {","      $st = $pdo->prepare(\"DELETE FROM routing_op_vars WHERE id=:vid\");","      $st->execute([':vid'=>$vid]);","      $_SESSION['flash'] = ['type'=>'success','msg'=>'Variable removed.'];","    } catch (Throwable $e) {","      $_SESSION['flash'] = ['type'=>'danger','msg'=>'Delete failed.'];","    }","    redirect('/bom/routing_form.php?bom_id='.$bom_id.'&component_id='.$component_id);","  }","","  if ($act === 'update_seq') {","    $id = (int)($_POST['id'] ?? 0);","    $seq_no = (int)($_POST['seq_no'] ?? 0);","    $sql = \"UPDATE routing_ops SET seq_no=:s WHERE id=:id AND bom_component_id=:c\";","    $st = $pdo->prepare($sql);","    $st->execute([':s'=>$seq_no, ':id'=>$id, ':c'=>$component_id]);","    $_SESSION['flash'] = ['type'=>'success','msg'=>'Sequence updated.'];","    redirect('/bom/routing_form.php?bom_id='.$bom_id.'&component_id='.$component_id);","  }","","  if ($act === 'update_wc') {","    $id = (int)($_POST['id'] ?? 0);","    $work_center_id = (int)($_POST['work_center_id'] ?? 0) ?: null;","    $st = $pdo->prepare(\"UPDATE routing_ops SET work_center_id=:w WHERE id=:id AND bom_component_id=:c\");","    $st->execute([':w'=>$work_center_id, ':id'=>$id, ':c'=>$component_id]);","    $_SESSION['flash'] = ['type'=>'success','msg'=>'Work center updated.'];","    redirect('/bom/routing_form.php?bom_id='.$bom_id.'&component_id='.$component_id);","  }","","  if ($act === 'toggle_gate') {","    $id = (int)($_POST['id'] ?? 0);","    $gate = (int)($_POST['inspection_gate'] ?? 0);","    $st = $pdo->prepare(\"UPDATE routing_ops SET inspection_gate=:g WHERE id=:id AND bom_component_id=:c\");","    $st->execute([':g'=>$gate, ':id'=>$id, ':c'=>$component_id]);","    $_SESSION['flash'] = ['type'=>'success','msg'=>'Inspection gate updated.'];","    redirect('/bom/routing_form.php?bom_id='.$bom_id.'&component_id='.$component_id);","  }","","  if ($act === 'delete_op') {","    $id = (int)($_POST['id'] ?? 0);","    $st = $pdo->prepare(\"DELETE FROM routing_ops WHERE id=:id AND bom_component_id=:c\");","    $st->execute([':id'=>$id, ':c'=>$component_id]);","    $_SESSION['flash'] = ['type'=>'success','msg'=>'Operation deleted.'];","    redirect('/bom/routing_form.php?bom_id='.$bom_id.'&component_id='.$component_id);","  }","}","","// GET state","$bom_id = (int)($_GET['bom_id'] ?? 0);","$component_id = (int)($_GET['component_id'] ?? 0);","$components = $bom_id ? fetch_components($pdo, $bom_id) : [];","$processes  = fetch_processes($pdo);","$work_centers = fetch_work_centers($pdo);","$rules = fetch_rules($pdo);","$ops = $component_id ? fetch_ops($pdo, $component_id) : [];","","require_once $UI_PATH . '/init.php';","require_once $UI_PATH . '/layout_start.php';","?>","<div class=\"container my-3\">","  <h1 class=\"h3\"><?= e($PAGE_TITLE) ?></h1>","","  <?php if (!empty($flash)): ?>","    <div class=\"alert alert-<?= e($flash['type']) ?>\"><?= e($flash['msg']) ?></div>","  <?php endif; ?>","","  <div class=\"card p-3 mb-3\">","    <form method=\"get\" class=\"row g-3\">","      <div class=\"col-md-5\">","        <label class=\"form-label\">BOM</label>","        <select name=\"bom_id\" class=\"form-select\" onchange=\"this.form.submit()\">","          <option value=\"\">\u2014 Select BOM \u2014</option>","          <?php foreach (fetch_boms($pdo) as $b): ?>","            <option value=\"<?= (int)$b['id'] ?>\" <?= $bom_id===(int)$b['id']?'selected':'' ?>><?= e('#'.$b['id'].' '.$b['bom_no']) ?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"col-md-5\">","        <label class=\"form-label\">Component</label>","        <select name=\"component_id\" class=\"form-select\" onchange=\"this.form.submit()\">","          <option value=\"\">\u2014 Pick component \u2014</option>","          <?php foreach ($components as $c): ?>","            <option value=\"<?= (int)$c['id'] ?>\" <?= $component_id===(int)$c['id']?'selected':'' ?>>","              <?= e(($c['part_id'] ?: ('#'.$c['id'])) .' \u2014 '. $c['description']) ?>","            </option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"col-md-2 d-flex align-items-end\">","        <a class=\"btn btn-outline-primary w-100\" href=\"/routing/qty_rules.php\">Qty Rules</a>","      </div>","    </form>","  </div>","","  <?php if ($component_id): ?>","  <div class=\"card p-3 mb-3\">","    <h5 class=\"mb-3\">Add Operation</h5>","    <form method=\"post\" class=\"row g-2 align-items-end\">","      <?= csrf_hidden_input() ?>","      <input type=\"hidden\" name=\"action\" value=\"add_op\">","      <input type=\"hidden\" name=\"bom_id\" value=\"<?= (int)$bom_id ?>\">","      <input type=\"hidden\" name=\"component_id\" value=\"<?= (int)$component_id ?>\">","","      <div class=\"col-md-2\">","        <label class=\"form-label\">Seq</label>","        <input type=\"number\" name=\"seq_no\" class=\"form-control\" min=\"1\" value=\"<?= count($ops) ? (int)end($ops)['seq_no'] + 10 : 10 ?>\">","      </div>","      <div class=\"col-md-4\">","        <label class=\"form-label\">Process</label>","        <select name=\"process_id\" class=\"form-select\" required>","          <option value=\"\">\u2014 Select process \u2014</option>","          <?php foreach ($processes as $p): ?>","            <option value=\"<?= (int)$p['id'] ?>\"><?= e($p['code'].' \u2014 '.$p['name']) ?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"col-md-4\">","        <label class=\"form-label\">Work Center</label>","        <select name=\"work_center_id\" class=\"form-select\" required>","          <option value=\"\">\u2014 Select work center \u2014</option>","          <?php foreach ($work_centers as $wc): ?>","            <option value=\"<?= (int)$wc['id'] ?>\"><?= e($wc['code'].' \u2014 '.$wc['name']) ?></option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"col-md-2 form-check mt-4\">","        <input class=\"form-check-input\" type=\"checkbox\" name=\"inspection_gate\" id=\"gate_add\">","        <label class=\"form-check-label\" for=\"gate_add\">Inspection gate</label>","      </div>","      <div class=\"col-md-12\">","        <button class=\"btn btn-success\">Add</button>","      </div>","    </form>","  </div>","","  <div class=\"table-responsive\">","    <table class=\"table table-sm table-bordered align-middle\">","      <thead><tr>","        <th style=\"width:70px;\">Seq</th>","        <th>Process</th>","        <th style=\"width:220px;\">Work Center</th>","        <th style=\"width:260px;\">Qty Rule</th>","        <th style=\"width:220px;\">Op Vars</th>","        <th style=\"width:140px;\">Preview</th>","        <th style=\"width:210px;\">Actions</th>","      </tr></thead>","      <tbody>","        <?php foreach ($ops as $op): $opVars = fetch_op_vars($pdo, (int)$op['id']); ?>","          <tr>","            <td>","              <form method=\"post\" class=\"d-flex gap-2\">","                <?= csrf_hidden_input() ?>","                <input type=\"hidden\" name=\"action\" value=\"update_seq\">","                <input type=\"hidden\" name=\"bom_id\" value=\"<?= (int)$bom_id ?>\">","                <input type=\"hidden\" name=\"component_id\" value=\"<?= (int)$component_id ?>\">","                <input type=\"hidden\" name=\"id\" value=\"<?= (int)$op['id'] ?>\">","                <input type=\"number\" class=\"form-control form-control-sm\" style=\"width:90px\" name=\"seq_no\" value=\"<?= (int)$op['seq_no'] ?>\">","                <button class=\"btn btn-sm btn-outline-primary\">Save</button>","              </form>","            </td>","","            <td><?= e($op['process_code'].' \u2014 '.$op['process_name']) ?></td>","","            <td>","              <form method=\"post\" class=\"d-flex gap-2\">","                <?= csrf_hidden_input() ?>","                <input type=\"hidden\" name=\"action\" value=\"update_wc\">","                <input type=\"hidden\" name=\"bom_id\" value=\"<?= (int)$bom_id ?>\">","                <input type=\"hidden\" name=\"component_id\" value=\"<?= (int)$component_id ?>\">","                <input type=\"hidden\" name=\"id\" value=\"<?= (int)$op['id'] ?>\">","                <select name=\"work_center_id\" class=\"form-select form-select-sm\">","                  <?php foreach ($work_centers as $wc): ?>","                    <option value=\"<?= (int)$wc['id'] ?>\" <?= ((int)$op['work_center_id']===(int)$wc['id'])?'selected':'' ?>>","                      <?= e($wc['code'].' \u2014 '.$wc['name']) ?>","                    </option>","                  <?php endforeach; ?>","                </select>","                <button class=\"btn btn-sm btn-outline-primary\">Save</button>","              </form>","            </td>","","            <td>","              <form method=\"post\" class=\"d-flex gap-2\">","                <?= csrf_hidden_input() ?>","                <input type=\"hidden\" name=\"action\" value=\"set_rule\">","                <input type=\"hidden\" name=\"bom_id\" value=\"<?= (int)$bom_id ?>\">","                <input type=\"hidden\" name=\"component_id\" value=\"<?= (int)$component_id ?>\">","                <input type=\"hidden\" name=\"id\" value=\"<?= (int)$op['id'] ?>\">","                <select name=\"rule_id\" class=\"form-select form-select-sm\">","                  <option value=\"\">\u2014 None \u2014</option>","                  <?php foreach ($rules as $r): ?>","                    <option value=\"<?= (int)$r['id'] ?>\" <?= ((int)$op['process_qty_rule_id']===(int)$r['id'])?'selected':'' ?>>","                      <?= e($r['operation_code'].': '.$r['expr']) ?>","                    </option>","                  <?php endforeach; ?>","                </select>","                <button class=\"btn btn-sm btn-outline-primary\">Save</button>","              </form>","            </td>","","            <td class=\"small\">","              <form method=\"post\" class=\"d-flex gap-2\">","                <?= csrf_hidden_input() ?>","                <input type=\"hidden\" name=\"action\" value=\"add_var\">","                <input type=\"hidden\" name=\"bom_id\" value=\"<?= (int)$bom_id ?>\">","                <input type=\"hidden\" name=\"component_id\" value=\"<?= (int)$component_id ?>\">","                <input type=\"hidden\" name=\"id\" value=\"<?= (int)$op['id'] ?>\">","                <input class=\"form-control form-control-sm\" name=\"var_name\" placeholder=\"holes\" style=\"width:110px\">","                <input class=\"form-control form-control-sm\" name=\"var_value\" placeholder=\"e.g. 12\" style=\"width:90px\">","                <button class=\"btn btn-sm btn-outline-success\">Add</button>","              </form>","              <?php if ($opVars): ?>","                <div class=\"mt-2 d-flex flex-wrap gap-1\">","                  <?php foreach ($opVars as $v): ?>","                    <form method=\"post\" class=\"d-inline\">","                      <?= csrf_hidden_input() ?>","                      <input type=\"hidden\" name=\"action\" value=\"delete_var\">","                      <input type=\"hidden\" name=\"bom_id\" value=\"<?= (int)$bom_id ?>\">","                      <input type=\"hidden\" name=\"component_id\" value=\"<?= (int)$component_id ?>\">","                      <input type=\"hidden\" name=\"vid\" value=\"<?= (int)$v['id'] ?>\">","                      <span class=\"badge bg-light text-dark border\">","                        <?= e($v['name']) ?> = <?= e($v['value']) ?>","                        <button class=\"btn btn-link btn-sm text-danger p-0 ms-1\">\u00d7</button>","                      </span>","                    </form>","                  <?php endforeach; ?>","                </div>","              <?php endif; ?>","            </td>","","            <td class=\"small\">","              <?php if ($op['expr']): ?>","                <?php","                  try {","                    // Build preview vars: BOM dims + op vars","                    $component = null;","                    if ($component_id) {","                      $stc = $pdo->prepare(\"SELECT * FROM bom_components WHERE id=:id\");","                      $stc->execute([':id'=>$component_id]);","                      $component = $stc->fetch(PDO::FETCH_ASSOC);","                    }","                    $vars = $component ? MetricService::varsForBomComponent($component) : [];","                    $vars = MetricService::mergeOpVars($pdo, (int)$op['id'], $vars);","                    $q = MetricService::evalExpr($op['expr'], $vars);","                    echo e($q).' '.e($op['uom_code'] ?: '');","                  } catch (Throwable $e) {","                    echo '<span class=\"text-danger\">! formula error</span>';","                  }","                ?>","              <?php else: ?>","                <span class=\"text-muted\">\u2014</span>","              <?php endif; ?>","            </td>","","            <td class=\"d-flex gap-2\">","              <a class=\"btn btn-sm btn-outline-success\" href=\"/bom/routing_pwo_actions.php?action=ensure&p=<?= (int)$op['id'] ?>&bom_id=<?= (int)$bom_id ?>&component_id=<?= (int)$component_id ?>&csrf=<?= urlencode(function_exists('csrf_token')?csrf_token():'') ?>\">Ensure PWO</a>","              <form method=\"post\" onsubmit=\"return confirm('Delete this operation?')\" class=\"d-inline\">","                <?= csrf_hidden_input() ?>","                <input type=\"hidden\" name=\"action\" value=\"delete_op\">","                <input type=\"hidden\" name=\"bom_id\" value=\"<?= (int)$bom_id ?>\">","                <input type=\"hidden\" name=\"component_id\" value=\"<?= (int)$component_id ?>\">","                <input type=\"hidden\" name=\"id\" value=\"<?= (int)$op['id'] ?>\">","                <button class=\"btn btn-sm btn-outline-danger\">Delete</button>","              </form>","            </td>","","          </tr>","        <?php endforeach; ?>","        <?php if (!$ops): ?><tr><td colspan=\"7\" class=\"text-muted\">No operations yet.</td></tr><?php endif; ?>","      </tbody>","    </table>","  </div>","  <?php endif; ?>","</div>","<?php require_once $UI_PATH . '/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/bom/_ajax/add_component.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/BomService.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('bom.edit'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\BomService($pdo);","  $id=$svc->addComponent((int)($in['version_id']??0),(int)($in['component_item_id']??0),(float)($in['qty_per_parent']??0),(float)($in['scrap_pct']??0),(bool)($in['is_phantom']??false),(bool)($in['is_remnant_return']??false),(int)($in['line_no']??10),$in['remarks']??null);","  echo json_encode(['ok'=>true,'data'=>['component_id'=>$id]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/bom/_ajax/explode.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/BomService.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('bom.view'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\BomService($pdo);","  $flat=$svc->explode((int)($in['parent_item_id']??0),(float)($in['qty']??1.0),$in['as_of']??null);","  $tree=$svc->tree((int)($in['parent_item_id']??0),(float)($in['qty']??1.0),$in['as_of']??null);","  echo json_encode(['ok'=>true,'data'=>['flat'=>$flat,'tree'=>$tree]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/bom/_ajax/create_version.php": ["","<?php","declare(strict_types=1);","require_once dirname(__DIR__,2).'/includes/auth.php';","require_once dirname(__DIR__,2).'/includes/db.php';","require_once dirname(__DIR__,2).'/includes/rbac.php';","require_once dirname(__DIR__,2).'/includes/coupler/BomService.php';","header('Content-Type: application/json');","try{ require_login(); require_permission('bom.edit'); $pdo=db();","  $in=json_decode(file_get_contents('php://input'),true)?:$_POST;","  $svc=new \\Coupler\\BomService($pdo);","  $id=$svc->createVersion((int)($in['parent_item_id']??0),(string)($in['version_code']??'v1'),$in['effective_from']??null,$in['effective_to']??null,$in['notes']??null);","  echo json_encode(['ok'=>true,'data'=>['version_id'=>$id]]);","}catch(Throwable $e){ http_response_code(400); echo json_encode(['ok'=>false,'error'=>$e->getMessage()]); }"],
"/home/u989675055/domains/emsinfra.co.in/public_html/bom/routing_print.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/bom/routing_print.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","if (function_exists('require_login')) require_login();","if (function_exists('require_permission')) @require_permission('bom.routing.view');","","$pdo = db();","$bom_id = (int)($_GET['bom_id'] ?? 0);","if ($bom_id <= 0) { http_response_code(400); exit('Missing bom_id'); }","","$hdr = $pdo->prepare(\"SELECT bom_no, revision, status, created_at FROM bom WHERE id=?\");","$hdr->execute([$bom_id]);","$h = $hdr->fetch(PDO::FETCH_ASSOC);","if (!$h) { http_response_code(404); exit('BOM not found'); }","","$sql = \"SELECT","          bc.id AS bom_component_id,","          IFNULL(bc.sort_order, 999999) AS comp_sort,","          bc.description AS comp_desc,","          ro.seq_no, p.code AS pcode, p.name AS pname,","          wc.code AS wccode, wc.name AS wcname,","          ro.setup_min, ro.run_min, ro.inspection_gate, ro.notes","        FROM bom_components bc","        LEFT JOIN routing_ops ro ON ro.bom_component_id = bc.id","        LEFT JOIN processes p ON p.id = ro.process_id","        LEFT JOIN work_centers wc ON wc.id = ro.work_center_id","        WHERE bc.bom_id = ?","        ORDER BY comp_sort, bc.id, ro.seq_no\";","$stmt = $pdo->prepare($sql);","$stmt->execute([$bom_id]);","$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);","","$byComp = [];","foreach ($rows as $r) $byComp[$r['bom_component_id']][] = $r;","","?><!doctype html>","<html lang=\"en\">","<head>","<meta charset=\"utf-8\">","<title><?=htmlspecialchars(($h['bom_no'] ?? ('BOM-'.$bom_id)).' \u2014 Routing')?></title>","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","<link href=\"/assets/bootstrap.min.css\" rel=\"stylesheet\">","<style>","  body { padding: 16px; }","  .page-header { display:flex; justify-content:space-between; align-items:center; margin-bottom: 12px; }","  .print-meta { font-size:.9rem; color:#666; }","  @media print { .no-print { display:none!important; } .card { border:0; } .table { font-size: .9rem; } }","</style>","</head>","<body>","  <div class=\"page-header\">","    <div>","      <h1 class=\"h4 mb-0\">Routing \u2014 <?=htmlspecialchars($h['bom_no'])?></h1>","      <div class=\"print-meta\">Status: <?=htmlspecialchars($h['status'])?><?= $h['revision'] ? ' \u00b7 Rev: '.htmlspecialchars($h['revision']) : '' ?> \u00b7 Created: <?=htmlspecialchars($h['created_at'])?></div>","    </div>","    <button class=\"btn btn-sm btn-primary no-print\" onclick=\"window.print()\"><i class=\"bi bi-printer\"></i> Print</button>","  </div>","","  <?php foreach ($byComp as $cid => $rows): ?>","    <div class=\"card mb-3\">","      <div class=\"card-header\"><strong>Component #<?=$cid?></strong> \u2014 <?=htmlspecialchars($rows[0]['comp_desc'] ?? '')?></div>","      <div class=\"table-responsive\">","        <table class=\"table table-striped table-sm align-middle mb-0\">","          <thead class=\"table-light\">","            <tr>","              <th style=\"width:80px;\">Seq</th>","              <th>Process</th>","              <th>Work Center</th>","              <th class=\"text-end\" style=\"width:120px;\">Setup (min)</th>","              <th class=\"text-end\" style=\"width:120px;\">Run (min)</th>","              <th style=\"width:70px;\">IG</th>","              <th>Notes</th>","            </tr>","          </thead>","          <tbody>","          <?php if (!$rows || !$rows[0]['pcode']): ?>","            <tr><td colspan=\"7\" class=\"text-muted text-center py-3\">No steps.</td></tr>","          <?php else: foreach ($rows as $r): ?>","            <tr>","              <td><?=htmlspecialchars((string)$r['seq_no'])?></td>","              <td><?=htmlspecialchars(($r['pcode'] ?? '').' \u2014 '.($r['pname'] ?? ''))?></td>","              <td><?=htmlspecialchars(($r['wccode'] ?? '').' \u2014 '.($r['wcname'] ?? ''))?></td>","              <td class=\"text-end\"><?= $r['setup_min']!==null ? number_format((float)$r['setup_min'],2) : '\u2014' ?></td>","              <td class=\"text-end\"><?= $r['run_min']!==null ? number_format((float)$r['run_min'],2) : '\u2014' ?></td>","              <td class=\"text-center\"><?= (int)$r['inspection_gate'] ? 'Yes' : '\u2014' ?></td>","              <td><?=htmlspecialchars($r['notes'] ?? '')?></td>","            </tr>","          <?php endforeach; endif; ?>","          </tbody>","        </table>","      </div>","    </div>","  <?php endforeach; ?>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/bom/routing_export_csv.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/bom/routing_export_csv.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","if (function_exists('require_login')) require_login();","if (function_exists('require_permission')) @require_permission('bom.routing.view');","","$pdo = db();","$bom_id = (int)($_GET['bom_id'] ?? 0);","if ($bom_id <= 0) { http_response_code(400); exit('Missing bom_id'); }","","// BOM no for filename","$hdr = $pdo->prepare(\"SELECT bom_no FROM bom WHERE id=?\");","$hdr->execute([$bom_id]);","$bom_no = (string)($hdr->fetchColumn() ?: ('BOM-'.$bom_id));","","header('Content-Type: text/csv; charset=utf-8');","header('Content-Disposition: attachment; filename=\"'.preg_replace('/[^A-Za-z0-9_\\-]/','_', $bom_no).'-routing.csv\"');","","$out = fopen('php://output', 'w');","fputcsv($out, ['BOM','ComponentID','Component','Seq','ProcessCode','ProcessName','WorkCenterCode','WorkCenterName','SetupMin','RunMin','InspectionGate','Notes']);","","$sql = \"SELECT","          b.bom_no,","          bc.id AS bom_component_id,","          bc.description AS comp_desc,","          ro.seq_no, p.code AS process_code, p.name AS process_name,","          wc.code AS wc_code, wc.name AS wc_name,","          ro.setup_min, ro.run_min, ro.inspection_gate, ro.notes","        FROM bom_components bc","        JOIN bom b ON b.id = bc.bom_id","        LEFT JOIN routing_ops ro ON ro.bom_component_id = bc.id","        LEFT JOIN processes p ON p.id = ro.process_id","        LEFT JOIN work_centers wc ON wc.id = ro.work_center_id","        WHERE bc.bom_id = ?","        ORDER BY IFNULL(bc.sort_order, 999999), bc.id, ro.seq_no, ro.id\";","$stmt = $pdo->prepare($sql);","$stmt->execute([$bom_id]);","","while ($r = $stmt->fetch(PDO::FETCH_ASSOC)) {","  fputcsv($out, [","    $r['bom_no'],","    $r['bom_component_id'],","    $r['comp_desc'],","    $r['seq_no'],","    $r['process_code'],","    $r['process_name'],","    $r['wc_code'],","    $r['wc_name'],","    $r['setup_min'],","    $r['run_min'],","    (int)$r['inspection_gate'] ? 'Yes' : 'No',","    $r['notes'],","  ]);","}","fclose($out);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/bom/tree_console.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/rbac.php';","require_login(); require_permission('bom.view');","?><!doctype html><html><head><meta charset=\"utf-8\"><title>BOM Tree (Multi-level)</title>","<style>body{font-family:system-ui,Segoe UI,Roboto,Arial,sans-serif;margin:20px}pre{background:#f9fafb;border:1px solid #e5e7eb;border-radius:8px;padding:12px}</style></head><body>","<h1>BOM Tree (Multi-level)</h1>","<label>Parent Item <input id=\"pid\" type=\"number\"></label>","<label>Qty <input id=\"qty\" type=\"number\" step=\"0.000001\" value=\"1\"></label>","<label>As Of <input id=\"asof\" type=\"date\"></label>","<button id=\"go\">Explode</button>","<h3>Flat Requirements</h3><pre id=\"flat\"></pre>","<h3>Tree</h3><pre id=\"tree\"></pre>","<script>","async function call(data){const r=await fetch('bom/_ajax/explode.php',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)});const j=await r.json();if(!j.ok)throw new Error(j.error);return j.data;}","go.onclick=async()=>{try{const d=await call({parent_item_id:parseInt(pid.value||0),qty:parseFloat(qty.value||'1'),as_of:asof.value||null});flat.textContent=JSON.stringify(d.flat,null,2);tree.textContent=JSON.stringify(d.tree,null,2);}catch(e){alert(e.message);}}","</script></body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/bom/routing_pwo_actions.php": ["<?php","/** PATH: /public_html/bom/routing_pwo_actions.php"," * Small handler to ensure a PWO exists for a routing op."," */","declare(strict_types=1);","$ROOT = dirname(__DIR__);","require_once $ROOT . '/includes/auth.php';","require_once $ROOT . '/includes/db.php';","require_once $ROOT . '/includes/rbac.php';","require_once $ROOT . '/includes/csrf.php';","require_once $ROOT . '/includes/helpers.php';","require_once $ROOT . '/includes/services/WorkOrderService.php';","","/* ---- Polyfills ---- */","if (!function_exists('redirect')) { function redirect(string $url): void { header('Location: '.$url); exit; } }","if (!function_exists('csrf_token')) { function csrf_token(): string { return $_GET['csrf'] ?? ''; } } // best-effort","","require_login();","require_permission('workorders.manage');","","$pdo = db();","","$action = $_GET['action'] ?? '';","if ($action === 'ensure') {","    // best-effort CSRF","    if (function_exists('csrf_token')) {","        $tok = $_GET['csrf'] ?? '';","        if ($tok !== csrf_token()) { http_response_code(400); echo \"Invalid CSRF token\"; exit; }","    }","    $routing_op_id = (int)($_GET['p'] ?? 0);","    $bom_id        = (int)($_GET['bom_id'] ?? 0);","    $component_id  = (int)($_GET['component_id'] ?? 0);","","    try {","        $res = WorkOrderService::ensurePwoForRouting($pdo, $routing_op_id, []);","        $_SESSION['flash'] = ['type'=>'success','msg'=>'PWO #'.$res['pwo_id'].' ensured for op.'];","    } catch (Throwable $e) {","        $_SESSION['flash'] = ['type'=>'danger','msg'=>$e->getMessage()];","    }","    redirect('/bom/routing_form.php?bom_id='.$bom_id.'&component_id='.$component_id);","    exit;","}","","http_response_code(400);","echo \"Unknown action\";"],
"/home/u989675055/domains/emsinfra.co.in/public_html/bom/routing_view.php": ["<?php","// /routing_view.php  \u2014 shows routing grouped by component, with Scope, Assembly & FIT\u2011UP badges","require __DIR__ . '/includes/auth.php';","require __DIR__ . '/includes/db.php';","","$bom_id = isset($_GET['bom_id']) ? (int)$_GET['bom_id'] : 0;","if ($bom_id <= 0) { http_response_code(400); echo \"Missing bom_id\"; exit; }","","$st = $pdo->prepare(\"SELECT id, bom_no, status FROM bom WHERE id=?\");","$st->execute([$bom_id]);","$bom = $st->fetch(PDO::FETCH_ASSOC);","if (!$bom) { echo \"BOM not found\"; exit; }","","$sql = \"SELECT ","          bc.id AS comp_id, bc.sr_no, bc.line_code, bc.segment_idx, bc.description,","          bc.length_mm, bc.width_mm, bc.thickness_mm,","          ro.id AS ro_id, ro.seq_no, ro.inspection_gate,","          ro.applies_to, ro.assembly_id, ro.is_merge_op,","          ro.default_plan_prod_qty, ro.default_prod_uom_id,","          ro.default_plan_comm_qty, ro.default_comm_uom_id,","          p.code AS p_code, p.name AS p_name,","          wc.code AS wc_code, wc.name AS wc_name,","          ba.code AS a_code, ba.name AS a_name,","          up.code AS prod_uom, uc.code AS comm_uom","        FROM routing_ops ro","        JOIN bom_components bc ON bc.id = ro.bom_component_id","        JOIN processes p ON p.id = ro.process_id","        JOIN work_centers wc ON wc.id = ro.work_center_id","        LEFT JOIN bom_assemblies ba ON ba.id = ro.assembly_id","        LEFT JOIN uom up ON up.id = ro.default_prod_uom_id","        LEFT JOIN uom uc ON uc.id = ro.default_comm_uom_id","        WHERE bc.bom_id=?","        ORDER BY bc.line_code, bc.segment_idx, bc.sr_no, ro.seq_no, ro.id\";","$ops = $pdo->prepare($sql);","$ops->execute([$bom_id]);","","$byComp = [];","foreach ($ops as $r) $byComp[$r['comp_id']][] = $r;","","// Load component headers","$comps = [];","$st = $pdo->prepare(\"SELECT id, sr_no, line_code, segment_idx, description, length_mm, width_mm, thickness_mm","                     FROM bom_components WHERE bom_id=? ORDER BY line_code, segment_idx, sr_no, id\");","$st->execute([$bom_id]);","foreach ($st as $c) $comps[$c['id']] = $c;","","function h($s){ return htmlspecialchars((string)$s); }","?>","<!doctype html>","<html lang=\"en\">","<head>","  <meta charset=\"utf-8\">","  <title>Routing \u2014 View (BOM <?=h($bom['bom_no'])?>)</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <link href=\"/assets/bootstrap.min.css\" rel=\"stylesheet\">","  <style>.badge-fit{background:#f7c948;color:#332e1f}</style>","</head>","<body class=\"container-fluid py-3\">","  <div class=\"d-flex justify-content-between align-items-center mb-2\">","    <h5 class=\"mb-0\">Routing \u2014 BOM <?=h($bom['bom_no'])?> <small class=\"text-muted\">(<?=h($bom['status'])?>)</small></h5>","    <div class=\"d-flex gap-2\">","      <a class=\"btn btn-sm btn-outline-secondary\" href=\"routing_form.php?bom_id=<?=$bom_id?>\">Edit</a>","      <a class=\"btn btn-sm btn-primary\" href=\"pwo_form.php?bom_id=<?=$bom_id?>\">Generate PWOs</a>","    </div>","  </div>","","  <?php foreach ($comps as $cid => $c): ?>","    <div class=\"card mb-3\">","      <div class=\"card-header\">","        <strong>#<?=$c['sr_no']?> <?=h($c['description'])?></strong>","        <?php if ($c['line_code']): ?><span class=\"badge text-bg-secondary\">Line: <?=h($c['line_code'])?></span><?php endif; ?>","        <?php if ($c['segment_idx']): ?><span class=\"badge text-bg-secondary\">Seg: <?=h($c['segment_idx'])?></span><?php endif; ?>","        <span class=\"ms-2 small text-muted\">(L <?=h($c['length_mm'])?> \u00d7 W <?=h($c['width_mm'])?> \u00d7 T <?=h($c['thickness_mm'])?> mm)</span>","      </div>","      <div class=\"card-body p-0\">","        <div class=\"table-responsive\">","          <table class=\"table table-sm mb-0\">","            <thead class=\"table-light\">","              <tr>","                <th style=\"width:70px;\">Seq</th>","                <th style=\"width:210px;\">Process</th>","                <th style=\"width:210px;\">Work Center</th>","                <th style=\"width:180px;\">Scope</th>","                <th style=\"width:220px;\">Assembly</th>","                <th style=\"width:110px;\">Insp Gate</th>","                <th style=\"width:210px;\">Plan (Prod)</th>","                <th style=\"width:210px;\">Plan (Comm)</th>","              </tr>","            </thead>","            <tbody>","              <?php foreach ($byComp[$cid] ?? [] as $r): ?>","                <tr>","                  <td><?= (int)$r['seq_no'] ?></td>","                  <td><?=h($r['p_code'])?> \u2014 <?=h($r['p_name'])?></td>","                  <td><?=h($r['wc_code'])?> \u2014 <?=h($r['wc_name'])?></td>","                  <td>","                    <?php if (($r['applies_to'] ?? 'component') === 'assembly'): ?>","                      <span class=\"badge text-bg-primary\">Assembly</span>","                    <?php else: ?>","                      <span class=\"badge text-bg-secondary\">Component</span>","                    <?php endif; ?>","                    <?php if (!empty($r['is_merge_op'])): ?>","                      <span class=\"badge badge-fit\">FIT\u2011UP</span>","                    <?php endif; ?>","                  </td>","                  <td>","                    <?php if ($r['applies_to']==='assembly' && $r['a_code']): ?>","                      <?=h($r['a_code'])?> \u2014 <?=h($r['a_name'])?>","                    <?php else: ?>","                      <span class=\"text-muted\">\u2014</span>","                    <?php endif; ?>","                  </td>","                  <td><?= !empty($r['inspection_gate']) ? '<span class=\"badge text-bg-warning\">QC</span>' : '<span class=\"text-muted\">\u2014</span>' ?></td>","                  <td>","                    <?php","                      $v = $r['default_plan_prod_qty']; $u = $r['prod_uom'];","                      echo ($v!==null && $u) ? h($v.' '.$u) : '<span class=\"text-muted\">\u2014</span>';","                    ?>","                  </td>","                  <td>","                    <?php","                      $v = $r['default_plan_comm_qty']; $u = $r['comm_uom'];","                      echo ($v!==null && $u) ? h($v.' '.$u) : '<span class=\"text-muted\">\u2014</span>';","                    ?>","                  </td>","                </tr>","              <?php endforeach; if (empty($byComp[$cid])): ?>","                <tr><td colspan=\"8\" class=\"text-center text-muted py-3\">No steps.</td></tr>","              <?php endif; ?>","            </tbody>","          </table>","        </div>","      </div>","    </div>","  <?php endforeach; ?>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/crm/activities_list.php": ["<?php","/** PATH: /public_html/crm/activities_list.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/csrf.php';","","require_login();","require_permission('crm.activity.view');","","$pdo = db();","","/* filters */","$q       = trim((string)($_GET['q'] ?? ''));","$type    = trim((string)($_GET['type'] ?? ''));","$status  = trim((string)($_GET['status'] ?? ''));","$owner   = (int)($_GET['owner'] ?? 0);","$lead_id = (int)($_GET['lead_id'] ?? 0);","$from    = trim((string)($_GET['from'] ?? ''));","$to      = trim((string)($_GET['to'] ?? ''));","","$where = [\"a.deleted_at IS NULL\"];","$params = [];","","if ($q !== '')        { $where[]=\"(a.subject LIKE :kw OR a.notes LIKE :kw)\"; $params[':kw']=\"%$q%\"; }","if ($type !== '')     { $where[]=\"a.type = :type\";       $params[':type']=$type; }","if ($status !== '')   { $where[]=\"a.status = :status\";   $params[':status']=$status; }","if ($owner > 0)       { $where[]=\"a.owner_id = :owner\";  $params[':owner']=$owner; }","if ($lead_id > 0)     { $where[]=\"a.lead_id = :lead_id\"; $params[':lead_id']=$lead_id; }","if ($from !== '')     { $where[]=\"a.due_at >= :from\";    $params[':from']=$from.' 00:00:00'; }","if ($to !== '')       { $where[]=\"a.due_at <= :to\";      $params[':to']=$to.' 23:59:59'; }","","$sql = \"","SELECT a.id, a.code, a.type, a.subject, a.due_at, a.status, a.priority,","       a.lead_id, a.account_id, a.contact_id, a.owner_id,","       l.code AS lead_code, l.title AS lead_title,","       p.name AS party_name,","       u.name AS owner_name","FROM crm_activities a","LEFT JOIN crm_leads l ON l.id = a.lead_id","LEFT JOIN parties   p ON p.id = a.account_id","LEFT JOIN users     u ON u.id = a.owner_id","WHERE \".implode(' AND ',$where).\"","ORDER BY a.due_at ASC, a.id DESC","LIMIT 500\";","$st = $pdo->prepare($sql);","$st->execute($params);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","$UI_PATH = dirname(__DIR__).'/ui';","$PAGE_TITLE='Activities';","$ACTIVE_MENU='crm.activities';","require_once $UI_PATH.'/init.php';","require_once $UI_PATH.'/layout_start.php';","","function badge_status(string $s): string {","  $map = ['Open'=>'secondary','In Progress'=>'info','Completed'=>'success','Canceled'=>'dark'];","  $cls = $map[$s] ?? 'light';","  return '<span class=\"badge bg-'.$cls.'\">'.h($s).'</span>';","}","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h3 class=\"mb-0\">Activities</h3>","  <div class=\"btn-group\">","    <a class=\"btn btn-sm btn-outline-secondary\" href=\"/crm/crm_leads_list.php\">Leads</a>","    <a class=\"btn btn-sm btn-primary\" href=\"/crm/activities_edit.php\">+ New Activity</a>","  </div>","</div>","","<form class=\"row g-2 mb-3\" method=\"get\">","  <div class=\"col-auto\"><input name=\"q\" class=\"form-control\" placeholder=\"Search subject/notes\" value=\"<?=h($q)?>\"></div>","  <div class=\"col-auto\">","    <select name=\"type\" class=\"form-select\">","      <option value=\"\">All Types</option>","      <?php foreach (['Task','Call','Meeting'] as $t): ?>","        <option value=\"<?=$t?>\" <?=$t===$type?'selected':''?>><?=$t?></option>","      <?php endforeach; ?>","    </select>","  </div>","  <div class=\"col-auto\">","    <select name=\"status\" class=\"form-select\">","      <option value=\"\">All Status</option>","      <?php foreach (['Open','In Progress','Completed','Canceled'] as $s): ?>","        <option value=\"<?=$s?>\" <?=$s===$status?'selected':''?>><?=$s?></option>","      <?php endforeach; ?>","    </select>","  </div>","  <div class=\"col-auto\"><input type=\"number\" name=\"owner\" class=\"form-control\" placeholder=\"Owner ID\" value=\"<?=$owner?:''?>\"></div>","  <div class=\"col-auto\"><input type=\"number\" name=\"lead_id\" class=\"form-control\" placeholder=\"Lead ID\" value=\"<?=$lead_id?:''?>\"></div>","  <div class=\"col-auto\"><input type=\"date\" name=\"from\" class=\"form-control\" value=\"<?=h($from)?>\"></div>","  <div class=\"col-auto\"><input type=\"date\" name=\"to\" class=\"form-control\" value=\"<?=h($to)?>\"></div>","  <div class=\"col-auto\"><button class=\"btn btn-outline-secondary\">Filter</button></div>","</form>","","<table class=\"table table-sm table-striped align-middle\">","  <thead>","    <tr>","      <th>Code</th>","      <th>Type</th>","      <th>Subject</th>","      <th>Due</th>","      <th>Status</th>","      <th>Priority</th>","      <th>Lead</th>","      <th>Client</th>","      <th>Owner</th>","      <th style=\"width:170px\">Actions</th>","    </tr>","  </thead>","  <tbody>","  <?php foreach($rows as $r): ?>","    <tr>","      <td><?=h($r['code'])?></td>","      <td><?=h($r['type'])?></td>","      <td><a href=\"/crm/activities_edit.php?id=<?=$r['id']?>\"><?=h($r['subject'])?></a></td>","      <td><?=h($r['due_at'])?></td>","      <td><?=badge_status($r['status']??'Open')?></td>","      <td><?=h($r['priority'])?></td>","      <td><?=h(trim(($r['lead_code']??'').' '.($r['lead_title']??'')))?></td>","      <td><?=h($r['party_name'] ?? '')?></td>","      <td><?=h($r['owner_name'] ?? '')?></td>","      <td>","        <a class=\"btn btn-sm btn-outline-primary\" href=\"/crm/activities_edit.php?id=<?=$r['id']?>\">Open</a>","        <form action=\"/crm/activities_save.php\" method=\"post\" class=\"d-inline\" onsubmit=\"return confirm('Mark Completed?');\">","          <?=csrf_field()?>","          <input type=\"hidden\" name=\"id\" value=\"<?=$r['id']?>\"><input type=\"hidden\" name=\"quick\" value=\"complete\">","          <button class=\"btn btn-sm btn-success\">Complete</button>","        </form>","        <form action=\"/crm/activities_delete.php\" method=\"post\" class=\"d-inline\" onsubmit=\"return confirm('Delete activity?');\">","          <?=csrf_field()?><input type=\"hidden\" name=\"id\" value=\"<?=$r['id']?>\">","          <button class=\"btn btn-sm btn-outline-danger\">Delete</button>","        </form>","      </td>","    </tr>","  <?php endforeach; ?>","  </tbody>","</table>","","<?php require_once $UI_PATH.'/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/crm/leads_search.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_login();","header('Content-Type: application/json; charset=utf-8');","","$q = trim((string)($_GET['q'] ?? ''));","$limit = max(1, min((int)($_GET['limit'] ?? 20), 50));","if ($q === '') { echo json_encode([]); exit; }","","$pdo = db();","$st = $pdo->prepare(\"","  SELECT l.id, l.code, l.title, l.party_id, l.party_contact_id, l.owner_id,","         p.name AS party_name","  FROM crm_leads l","  LEFT JOIN parties p ON p.id = l.party_id","  WHERE l.deleted_at IS NULL","    AND (l.code LIKE :kw OR l.title LIKE :kw OR p.name LIKE :kw)","  ORDER BY l.id DESC","  LIMIT {$limit}","\");","$st->execute([':kw'=>\"%{$q}%\"]);","echo json_encode($st->fetchAll(PDO::FETCH_ASSOC) ?: [], JSON_UNESCAPED_UNICODE);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/crm/activities_delete.php": ["<?php","/** PATH: /public_html/crm/activities_delete.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login(); csrf_require_token(); require_permission('crm.activity.delete');","","$id = (int)($_POST['id'] ?? 0);","if ($id <= 0) { flash('Invalid id','danger'); redirect('/crm/activities_list.php'); }","","$pdo = db();","$pdo->prepare(\"UPDATE crm_activities SET deleted_at=NOW() WHERE id=:id AND deleted_at IS NULL\")->execute([':id'=>$id]);","flash('Activity deleted','success');","redirect('/crm/activities_list.php');"],
"/home/u989675055/domains/emsinfra.co.in/public_html/crm/dashboard.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login(); require_permission('crm.dashboard.view');","$pdo = db();","","$from  = (string)($_GET['from'] ?? date('Y-m-d', strtotime('-30 days')));","$to    = (string)($_GET['to']   ?? date('Y-m-d'));","$owner = (int)($_GET['owner']  ?? 0);","$params = [':from'=>$from, ':to'=>$to.' 23:59:59'];","if ($owner>0) $params[':owner']=$owner;","","/** Leads by status (your crm_leads has \"status\") */","$leadsBy = $pdo->prepare(\"","  SELECT status AS bucket, COUNT(*) cnt","  FROM crm_leads","  WHERE created_at BETWEEN :from AND :to","  \".($owner>0?\" AND owner_id=:owner \":\"\").\"","  GROUP BY status","\");","$leadsBy->execute($params);","$ls=[]; $leadsTotal=0;","foreach($leadsBy as $r){ $ls[$r['bucket']??'']=(int)$r['cnt']; $leadsTotal+=(int)$r['cnt']; }","","/** Activities: overdue/today/upcoming */","$st=$pdo->prepare(\"","  SELECT","    SUM(CASE WHEN due_at IS NOT NULL AND due_at < NOW() THEN 1 ELSE 0 END) overdue,","    SUM(CASE WHEN due_at IS NOT NULL AND DATE(due_at)=CURRENT_DATE THEN 1 ELSE 0 END) today,","    SUM(CASE WHEN due_at IS NOT NULL AND due_at > NOW() THEN 1 ELSE 0 END) upcoming","  FROM crm_activities","  WHERE created_at BETWEEN :from AND :to","  \".($owner>0?\" AND owner_id=:owner \":\"\")",");","$st->execute($params);","$acts=$st->fetch(PDO::FETCH_ASSOC) ?: ['overdue'=>0,'today'=>0,'upcoming'=>0];","","/** Quotes by status + totals (value) */","$st=$pdo->prepare(\"","  SELECT status, COUNT(*) cnt, SUM(grand_total) amt","  FROM sales_quotes","  WHERE deleted_at IS NULL AND quote_date BETWEEN :from AND :to","  \".($owner>0?\" AND created_by=:owner \":\"\").\"","  GROUP BY status","\");","$st->execute($params);","$quotes=[]; $quotesAmtTotal=0; $quotesCntTotal=0;","foreach($st as $r){","  $k=(string)($r['status']??'');","  $quotes[$k]=['cnt'=>(int)$r['cnt'],'amt'=>(float)($r['amt']??0)];","  $quotesCntTotal+=(int)$r['cnt']; $quotesAmtTotal+=(float)($r['amt']??0);","}","","/** Orders summary (your sales_orders has amount, not subtotal/grand_total) */","$st=$pdo->prepare(\"","  SELECT COUNT(*) so_cnt, COALESCE(SUM(amount),0) so_amt","  FROM sales_orders","  WHERE order_date BETWEEN :from AND :to","  \".($owner>0?\" AND created_by=:owner \":\"\")",");","$st->execute($params);","$so=$st->fetch(PDO::FETCH_ASSOC) ?: ['so_cnt'=>0,'so_amt'=>0];","","$funnel=['leads'=>$leadsTotal,'quotes'=>$quotesCntTotal,'orders'=>(int)$so['so_cnt']];","$conv1=$funnel['leads']>0?round($funnel['quotes']*100/$funnel['leads'],1):0;","$conv2=$funnel['quotes']>0?round($funnel['orders']*100/$funnel['quotes'],1):0;","","/** UI helpers */","function money($n){ return number_format((float)$n,2); }","function with_range(string $base, string $from, string $to, array $extra=[]): string {","  $q = array_merge(['from'=>$from,'to'=>$to], $extra);","  return $base.'?'.http_build_query($q);","}","","$UI_PATH=dirname(__DIR__).'/ui'; $PAGE_TITLE='CRM Dashboard'; $ACTIVE_MENU='crm.dashboard';","require_once $UI_PATH.'/init.php'; require_once $UI_PATH.'/layout_start.php';","?>","<style>","a.card-link { text-decoration:none; color:inherit; display:block }","a.card-link .card { transition: transform .05s ease-in }","a.card-link:hover .card { transform: translateY(-2px) }","</style>","","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h3 class=\"mb-0\">CRM Dashboard</h3>","  <form class=\"d-flex gap-2\" method=\"get\">","    <input type=\"date\" name=\"from\" class=\"form-control\" value=\"<?=h($from)?>\">","    <input type=\"date\" name=\"to\" class=\"form-control\" value=\"<?=h($to)?>\">","    <input type=\"number\" name=\"owner\" class=\"form-control\" placeholder=\"Owner ID\" value=\"<?=$owner?:''?>\">","    <button class=\"btn btn-outline-secondary\">Apply</button>","    <a class=\"btn btn-outline-dark\" href=\"/crm/dashboard.php\">Reset</a>","  </form>","</div>","","<!-- Quick Actions -->","<div class=\"d-flex flex-wrap gap-2 mb-3\">","  <a class=\"btn btn-sm btn-primary\" href=\"/crm_leads/crm_leads_form.php\">+ New Lead</a>","  <a class=\"btn btn-sm btn-primary\" href=\"/crm/activities_edit.php\">+ New Activity</a>","  <a class=\"btn btn-sm btn-primary\" href=\"/sales_quotes/sales_quotes_form.php\">+ New Quote</a>","</div>","","<!-- Go To (Navigation) -->","<div class=\"d-flex flex-wrap gap-2 mb-4\">","  <a class=\"btn btn-outline-secondary\" href=\"<?=h(with_range('/crm_leads/crm_leads_list.php',$from,$to))?>\">Go to Leads</a>","  <a class=\"btn btn-outline-secondary\" href=\"<?=h(with_range('/crm/activities_list.php',$from,$to))?>\">Go to Activities</a>","  <a class=\"btn btn-outline-secondary\" href=\"<?=h(with_range('/sales_quotes/sales_quotes_list.php',$from,$to))?>\">Go to Quotes</a>","  <!-- If you have a Sales Orders list page, keep this; otherwise remove -->","  <a class=\"btn btn-outline-secondary\" href=\"<?=h(with_range('/sales_orders/sales_orders_list.php',$from,$to))?>\">Go to Sales Orders</a>","</div>","","<div class=\"row g-3\">","  <!-- Clickable KPI cards -->","  <div class=\"col-md-3\">","    <a class=\"card-link\" href=\"<?=h(with_range('/crm_leads/crm_leads_list.php',$from,$to))?>\">","      <div class=\"card\"><div class=\"card-body\">","        <div class=\"text-muted\">New Leads</div>","        <div class=\"h3 mb-0\"><?=$leadsTotal?></div>","      </div></div>","    </a>","  </div>","","  <div class=\"col-md-3\">","    <a class=\"card-link\" href=\"<?=h(with_range('/sales_quotes/sales_quotes_list.php',$from,$to))?>\">","      <div class=\"card\"><div class=\"card-body\">","        <div class=\"text-muted\">Quotes (\u20b9)</div>","        <div class=\"h3 mb-0\">\u20b9<?=money($quotesAmtTotal)?></div>","        <div class=\"small text-muted\"><?=$quotesCntTotal?> quotes</div>","      </div></div>","    </a>","  </div>","","  <div class=\"col-md-3\">","    <!-- If no Orders list page, send them to Quotes filtered to Converted -->","    <a class=\"card-link\" href=\"<?=h(with_range('/sales_quotes/sales_quotes_list.php',$from,$to, ['status'=>'Converted']))?>\">","      <div class=\"card\"><div class=\"card-body\">","        <div class=\"text-muted\">Orders (\u20b9)</div>","        <div class=\"h3 mb-0\">\u20b9<?=money($so['so_amt'])?></div>","        <div class=\"small text-muted\"><?=$so['so_cnt']?> orders</div>","      </div></div>","    </a>","  </div>","","  <div class=\"col-md-3\">","    <a class=\"card-link\" href=\"<?=h(with_range('/crm/activities_list.php',$from,$to, ['due'=>'today']))?>\">","      <div class=\"card\"><div class=\"card-body\">","        <div class=\"text-muted\">Follow-ups</div>","        <div class=\"h3 mb-0\"><?=$acts['overdue']?> / <?=$acts['today']?> / <?=$acts['upcoming']?></div>","        <div class=\"small text-muted\">Overdue / Today / Upcoming</div>","      </div></div>","    </a>","  </div>","</div>","","<hr>","","<div class=\"row g-3\">","  <div class=\"col-md-6\">","    <div class=\"card\">","      <div class=\"card-header\">Leads by Status</div>","      <div class=\"card-body p-0\">","        <table class=\"table table-sm mb-0\">","          <thead><tr><th>Status</th><th class=\"text-end\">Count</th><th class=\"text-end\">Open</th></tr></thead>","          <tbody>","          <?php foreach (['New','In Progress','Won','Lost'] as $s): $cnt=(int)($ls[$s] ?? 0); ?>","            <tr>","              <td><a href=\"<?=h(with_range('/crm_leads/crm_leads_list.php',$from,$to, ['status'=>$s]))?>\"><?=h($s)?></a></td>","              <td class=\"text-end\"><?=$cnt?></td>","              <td class=\"text-end\">","                <?php if($cnt>0): ?>","                  <a class=\"small\" href=\"<?=h(with_range('/crm_leads/crm_leads_list.php',$from,$to, ['status'=>$s]))?>\">view</a>","                <?php endif; ?>","              </td>","            </tr>","          <?php endforeach; ?>","          </tbody>","        </table>","      </div>","    </div>","  </div>","","  <div class=\"col-md-6\">","    <div class=\"card\">","      <div class=\"card-header\">Quotes by Status (\u20b9)</div>","      <div class=\"card-body p-0\">","        <table class=\"table table-sm mb-0\">","          <thead><tr><th>Status</th><th class=\"text-end\">Count</th><th class=\"text-end\">Amount</th></tr></thead>","          <tbody>","          <?php ","            $statuses = array_unique(array_merge(","              ['Draft','Pending','Approved','Sent','Accepted','Lost','Converted','Expired','Canceled'],","              array_keys($quotes)","            ));","            foreach ($statuses as $stq):","              $cnt = (int)($quotes[$stq]['cnt'] ?? 0);","              $amt = (float)($quotes[$stq]['amt'] ?? 0);","          ?>","            <tr>","              <td><a href=\"<?=h(with_range('/sales_quotes/sales_quotes_list.php',$from,$to, ['status'=>$stq]))?>\"><?=h($stq)?></a></td>","              <td class=\"text-end\"><?=$cnt?></td>","              <td class=\"text-end\">\u20b9<?=money($amt)?></td>","            </tr>","          <?php endforeach; ?>","          </tbody>","          <tfoot>","            <tr class=\"table-light\"><th>Total</th><th class=\"text-end\"><?=$quotesCntTotal?></th><th class=\"text-end\">\u20b9<?=money($quotesAmtTotal)?></th></tr>","          </tfoot>","        </table>","      </div>","    </div>","  </div>","</div>","","<hr>","","<div class=\"card\">","  <div class=\"card-header\">Funnel</div>","  <div class=\"card-body d-flex align-items-center justify-content-around\">","    <a class=\"card-link\" href=\"<?=h(with_range('/crm_leads/crm_leads_list.php',$from,$to))?>\">","      <div class=\"text-center\"><div class=\"h4 mb-0\"><?=$funnel['leads']?></div><div class=\"text-muted\">Leads</div></div>","    </a>","    <div class=\"display-6\">\u2192</div>","    <a class=\"card-link\" href=\"<?=h(with_range('/sales_quotes/sales_quotes_list.php',$from,$to))?>\">","      <div class=\"text-center\"><div class=\"h4 mb-0\"><?=$funnel['quotes']?></div><div class=\"text-muted\">Quotes</div></div>","    </a>","    <div class=\"display-6\">\u2192</div>","    <!-- Order link goes to Converted quotes if you don\u2019t have an orders list page -->","    <a class=\"card-link\" href=\"<?=h(with_range('/sales_quotes/sales_quotes_list.php',$from,$to, ['status'=>'Converted']))?>\">","      <div class=\"text-center\"><div class=\"h4 mb-0\"><?=$funnel['orders']?></div><div class=\"text-muted\">Orders</div></div>","    </a>","  </div>","</div>","","<?php require_once $UI_PATH.'/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/crm/lead_get.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_login();","header('Content-Type: application/json; charset=utf-8');","","$id = (int)($_GET['id'] ?? 0);","if ($id<=0) { echo json_encode([]); exit; }","","$pdo = db();","$st = $pdo->prepare(\"","  SELECT l.id, l.code, l.title, l.party_id, l.party_contact_id, l.owner_id,","         p.name AS party_name","  FROM crm_leads l","  LEFT JOIN parties p ON p.id = l.party_id","  WHERE l.id=:id","\");","$st->execute([':id'=>$id]);","echo json_encode($st->fetch(PDO::FETCH_ASSOC) ?: [], JSON_UNESCAPED_UNICODE);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/crm/activities_save.php": ["<?php","/** PATH: /public_html/crm/activities_save.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/numbering.php';","","require_login(); csrf_require_token();","","$id = (int)($_POST['id'] ?? 0);","$isEdit = $id > 0;","","/* quick action from list: mark completed */","if (isset($_POST['quick']) && $_POST['quick']==='complete') {","  require_permission('crm.activity.edit');","  $pdo = db();","  $pdo->prepare(\"UPDATE crm_activities SET status='Completed', updated_at=NOW() WHERE id=:id AND deleted_at IS NULL\")","      ->execute([':id'=>$id]);","  flash('Activity marked completed','success');","  redirect('/crm/activities_list.php');","}","","require_permission($isEdit ? 'crm.activity.edit' : 'crm.activity.create');","","$type     = (string)($_POST['type'] ?? 'Task');","$subject  = trim((string)($_POST['subject'] ?? ''));","$due_at   = (string)($_POST['due_at'] ?? '');","$status   = (string)($_POST['status'] ?? 'Open');","$priority = (string)($_POST['priority'] ?? 'Normal');","$account_id = (int)($_POST['account_id'] ?? 0) ?: null;","$contact_id = (int)($_POST['contact_id'] ?? 0) ?: null;","$lead_id    = (int)($_POST['lead_id'] ?? 0) ?: null;","$owner_id   = (int)($_POST['owner_id'] ?? current_user_id());","$notes    = (string)($_POST['notes'] ?? '');","$next_fu  = (string)($_POST['next_followup_at'] ?? '');","","$pdo = db();","$pdo->beginTransaction();","try {","  if ($isEdit) {","    $pdo->prepare(\"UPDATE crm_activities SET","        type=:type, subject=:subject, due_at=:due_at, status=:status, priority=:priority,","        account_id=:account_id, contact_id=:contact_id, lead_id=:lead_id, owner_id=:owner_id,","        notes=:notes, next_followup_at=:next_followup_at, updated_at=NOW()","      WHERE id=:id AND deleted_at IS NULL\")","      ->execute([","        ':type'=>$type, ':subject'=>$subject, ':due_at'=>$due_at, ':status'=>$status, ':priority'=>$priority,","        ':account_id'=>$account_id, ':contact_id'=>$contact_id, ':lead_id'=>$lead_id, ':owner_id'=>$owner_id,","        ':notes'=>$notes, ':next_followup_at'=>($next_fu ?: null), ':id'=>$id","      ]);","  } else {","    $code = next_no('ACT'); // numbering series e.g. ACT-YYYY-####","    $pdo->prepare(\"INSERT INTO crm_activities","      (code,type,subject,due_at,status,priority,account_id,contact_id,lead_id,owner_id,notes,next_followup_at,created_at,updated_at)","      VALUES","      (:code,:type,:subject,:due_at,:status,:priority,:account_id,:contact_id,:lead_id,:owner_id,:notes,:next_followup_at,NOW(),NOW())\")","      ->execute([","        ':code'=>$code, ':type'=>$type, ':subject'=>$subject, ':due_at'=>$due_at, ':status'=>$status, ':priority'=>$priority,","        ':account_id'=>$account_id, ':contact_id'=>$contact_id, ':lead_id'=>$lead_id, ':owner_id'=>$owner_id,","        ':notes'=>$notes, ':next_followup_at'=>($next_fu ?: null)","      ]);","    $id = (int)$pdo->lastInsertId();","  }","  $pdo->commit();","  flash('Activity saved','success');","  redirect('/crm/activities_edit.php?id='.$id);","} catch (Throwable $e) {","  if ($pdo->inTransaction()) $pdo->rollBack();","  flash('Save failed: '.h($e->getMessage()), 'danger');","  redirect($isEdit ? '/crm/activities_edit.php?id='.$id : '/crm/activities_edit.php');","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/crm/activities_edit.php": ["<?php","/** PATH: /public_html/crm/activities_edit.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login();","$id = (int)($_GET['id'] ?? 0);","$isEdit = $id > 0;","require_permission($isEdit ? 'crm.activity.edit' : 'crm.activity.create');","","$pdo = db();","","/* Load activity (if editing) */","$act = [","  'id'=>0,'code'=>'','type'=>'Task','subject'=>'','due_at'=>date('Y-m-d 10:00:00'),","  'status'=>'Open','priority'=>'Normal',","  'lead_id'=>null,'account_id'=>null,'contact_id'=>null,","  'owner_id'=>current_user_id(),'notes'=>'','next_followup_at'=>null","];","if ($isEdit) {","  $st=$pdo->prepare(\"SELECT * FROM crm_activities WHERE id=:id AND deleted_at IS NULL\");","  $st->execute([':id'=>$id]);","  $row=$st->fetch(PDO::FETCH_ASSOC);","  if(!$row){ flash('Activity not found','danger'); redirect('/crm/activities_list.php'); }","  $act = $row;","}","","/* Dropdown data (no AJAX) */","$leads = [];","$ls = $pdo->query(\"","  SELECT l.id, l.code, l.title, l.party_id, l.party_contact_id,","         COALESCE(p.name,'') AS party_name","  FROM crm_leads l","  LEFT JOIN parties p ON p.id = l.party_id","  WHERE l.deleted_at IS NULL","  ORDER BY l.id DESC","  LIMIT 500","\");","if ($ls) $leads = $ls->fetchAll(PDO::FETCH_ASSOC);","","$parties = [];","$ps = $pdo->query(\"","  SELECT id, name, code","  FROM parties","  WHERE deleted_at IS NULL","  ORDER BY name ASC","  LIMIT 500","\");","if ($ps) $parties = $ps->fetchAll(PDO::FETCH_ASSOC);","","$users = [];","$us=$pdo->query(\"SELECT id, name FROM users WHERE status='active' ORDER BY name ASC\");","if ($us) $users = $us->fetchAll(PDO::FETCH_ASSOC);","","/* Helper: current labels */","function lead_label(array $l): string {","  $label = trim(($l['code'] ?? '').' '.($l['title'] ?? ''));","  if (!empty($l['party_name'])) $label .= ' \u2014 '.$l['party_name'];","  return $label;","}","","$UI_PATH = dirname(__DIR__).'/ui';","$PAGE_TITLE = $isEdit ? ('Edit Activity '.$act['code']) : 'New Activity';","$ACTIVE_MENU='crm.activities';","require_once $UI_PATH.'/init.php';","require_once $UI_PATH.'/layout_start.php';","?>","<div class=\"d-flex justify-content-between align-items-center mb-3\">","  <h3 class=\"mb-0\"><?=$PAGE_TITLE?></h3>","  <div class=\"btn-group\">","    <a class=\"btn btn-sm btn-outline-secondary\" href=\"/crm/activities_list.php\">Back to list</a>","    <?php if ($isEdit): ?>","      <form action=\"/crm/activities_save.php\" method=\"post\" class=\"d-inline\">","        <?=csrf_field()?><input type=\"hidden\" name=\"id\" value=\"<?=$act['id']?>\"><input type=\"hidden\" name=\"quick\" value=\"complete\">","        <button class=\"btn btn-sm btn-success\">Mark Completed</button>","      </form>","    <?php endif; ?>","  </div>","</div>","","<form action=\"/crm/activities_save.php\" method=\"post\" autocomplete=\"off\">","  <?=csrf_field()?>","  <input type=\"hidden\" name=\"id\" value=\"<?=$act['id']?>\">","","  <div class=\"row g-3\">","    <div class=\"col-md-2\">","      <label class=\"form-label\">Code</label>","      <input class=\"form-control\" value=\"<?=h($act['code'])?>\" disabled>","    </div>","    <div class=\"col-md-2\">","      <label class=\"form-label\">Type</label>","      <select name=\"type\" class=\"form-select\" required>","        <?php foreach (['Task','Call','Meeting'] as $t): ?>","          <option value=\"<?=$t?>\" <?=$t===$act['type']?'selected':''?>><?=$t?></option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-md-4\">","      <label class=\"form-label\">Subject</label>","      <input name=\"subject\" class=\"form-control\" value=\"<?=h($act['subject'])?>\" required>","    </div>","    <div class=\"col-md-4\">","      <label class=\"form-label\">Due At</label>","      <input name=\"due_at\" type=\"datetime-local\" class=\"form-control\" value=\"<?=h(str_replace(' ','T',(string)$act['due_at']))?>\" required>","    </div>","","    <div class=\"col-md-3\">","      <label class=\"form-label\">Status</label>","      <select name=\"status\" class=\"form-select\" required>","        <?php foreach (['Open','In Progress','Completed','Canceled'] as $s): ?>","          <option value=\"<?=$s?>\" <?=$s===$act['status']?'selected':''?>><?=$s?></option>","        <?php endforeach; ?>","      </select>","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Priority</label>","      <select name=\"priority\" class=\"form-select\" required>","        <?php foreach (['Low','Normal','High','Urgent'] as $p): ?>","          <option value=\"<?=$p?>\" <?=$p===$act['priority']?'selected':''?>><?=$p?></option>","        <?php endforeach; ?>","      </select>","    </div>","","    <!-- Lead dropdown -->","    <div class=\"col-md-6\">","      <label class=\"form-label\">Lead</label>","      <select name=\"lead_id\" id=\"lead_id\" class=\"form-select\">","        <option value=\"\">\u2014 Select Lead \u2014</option>","        <?php foreach ($leads as $l): ?>","          <option","            value=\"<?=$l['id']?>\"","            data-party-id=\"<?=$l['party_id']?>\"","            data-party-name=\"<?=h($l['party_name'])?>\"","            data-contact-id=\"<?=$l['party_contact_id']?>\"","            <?=$act['lead_id']==$l['id']?'selected':''?>","          ><?=h(lead_label($l))?></option>","        <?php endforeach; ?>","      </select>","      <div class=\"form-text\">Picking a lead will auto-fill Client and Contact.</div>","    </div>","","    <!-- Client (Party) dropdown -->","    <div class=\"col-md-6\">","      <label class=\"form-label\">Client (Party)</label>","      <select name=\"account_id\" id=\"party_id\" class=\"form-select\">","        <option value=\"\">\u2014 Select Client \u2014</option>","        <?php foreach ($parties as $p): ?>","          <option value=\"<?=$p['id']?>\" <?=$act['account_id']==$p['id']?'selected':''?>>","            <?=h(($p['code']?($p['code'].' \u2014 '):'').$p['name'])?>","          </option>","        <?php endforeach; ?>","      </select>","    </div>","","    <!-- Contact ID -->","    <div class=\"col-md-3\">","      <label class=\"form-label\">Contact ID</label>","      <input name=\"contact_id\" id=\"contact_id\" type=\"number\" class=\"form-control\" value=\"<?=h((string)$act['contact_id'])?>\">","    </div>","","    <!-- Owner dropdown -->","    <div class=\"col-md-3\">","      <label class=\"form-label\">Owner</label>","      <select name=\"owner_id\" class=\"form-select\" required>","        <?php foreach ($users as $u): ?>","          <option value=\"<?=$u['id']?>\" <?=$act['owner_id']==$u['id']?'selected':''?>><?=h($u['name']).' (#'.$u['id'].')'?></option>","        <?php endforeach; ?>","      </select>","    </div>","","    <div class=\"col-md-12\">","      <label class=\"form-label\">Notes</label>","      <textarea name=\"notes\" class=\"form-control\" rows=\"3\"><?=h((string)$act['notes'])?></textarea>","    </div>","    <div class=\"col-md-4\">","      <label class=\"form-label\">Next Follow-up At</label>","      <input name=\"next_followup_at\" type=\"datetime-local\" class=\"form-control\" value=\"<?=h($act['next_followup_at'] ? str_replace(' ','T',(string)$act['next_followup_at']) : '')?>\">","    </div>","  </div>","","  <div class=\"mt-3 d-flex gap-2\">","    <button class=\"btn btn-primary\"><?=$isEdit?'Update Activity':'Create Activity'?></button>","    <?php if ($isEdit): ?>","      <form action=\"/crm/activities_delete.php\" method=\"post\" onsubmit=\"return confirm('Delete activity?');\">","        <?=csrf_field()?><input type=\"hidden\" name=\"id\" value=\"<?=$act['id']?>\">","        <button class=\"btn btn-outline-danger\">Delete</button>","      </form>","    <?php endif; ?>","  </div>","</form>","","<script>","/* When Lead changes, copy party/contact from the selected option into the fields */","document.getElementById('lead_id').addEventListener('change', function(){","  const opt = this.options[this.selectedIndex];","  const partyId   = opt.getAttribute('data-party-id') || '';","  const contactId = opt.getAttribute('data-contact-id') || '';","","  if (partyId) {","    const partySel = document.getElementById('party_id');","    [...partySel.options].forEach(o => { if (o.value === partyId) o.selected = true; });","  }","  if (contactId) {","    document.getElementById('contact_id').value = contactId;","  }","});","</script>","<?php require_once $UI_PATH.'/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/crm/crm_dashboard.php": ["<?php","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_login();","$pdo = db();","$pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","function fmt(?string $s): string { return htmlspecialchars((string)$s ?? '', ENT_QUOTES, 'UTF-8'); }","function safeCount(PDO $pdo, string $sql, array $params = []): int {","  try { $st = $pdo->prepare($sql); $st->execute($params); return (int)$st->fetchColumn(); }","  catch(Throwable $e){ return 0; }","}","function safeRows(PDO $pdo, string $sql, array $params = [], int $limit = 10): array {","  try { if ($limit>0 && stripos($sql,'limit')===false) $sql .= \" LIMIT \".(int)$limit;","       $st=$pdo->prepare($sql); $st->execute($params); return $st->fetchAll(PDO::FETCH_ASSOC)?:[];","  } catch(Throwable $e){ return []; }","}","","$today = (new DateTime('now'))->format('Y-m-d');","$in7   = (new DateTime('now'))->modify('+7 days')->format('Y-m-d');","","// KPIs","$kpi = [","  'accounts'   => safeCount($pdo, \"SELECT COUNT(*) FROM crm_accounts WHERE deleted_at IS NULL\"),","  'contacts'   => safeCount($pdo, \"SELECT COUNT(*) FROM crm_contacts WHERE deleted_at IS NULL\"),","  'leads_open' => safeCount($pdo, \"SELECT COUNT(*) FROM crm_leads WHERE deleted_at IS NULL AND status IN ('New','In Progress')\"),","  'quotes_dr'  => safeCount($pdo, \"SELECT COUNT(*) FROM sales_quotes WHERE deleted_at IS NULL AND status='Draft'\"),","  'quotes_sn'  => safeCount($pdo, \"SELECT COUNT(*) FROM sales_quotes WHERE deleted_at IS NULL AND status='Sent'\"),","  'orders_wip' => safeCount($pdo, \"SELECT COUNT(*) FROM sales_orders WHERE deleted_at IS NULL AND status IN ('Confirmed','In Progress')\"),","  'acts_due'   => safeCount($pdo, \"SELECT COUNT(*) FROM crm_activities WHERE deleted_at IS NULL AND status IN ('Open','In Progress') AND due_at<=?\", [$in7.' 23:59:59']),","];","","// Lists","$leads  = safeRows($pdo, \"SELECT id, code, title, status, amount, follow_up_on FROM crm_leads WHERE deleted_at IS NULL ORDER BY id DESC\", [], 10);","$quotes = safeRows($pdo, \"SELECT id, code, quote_date, status, grand_total FROM sales_quotes WHERE deleted_at IS NULL ORDER BY id DESC\", [], 10);","$orders = safeRows($pdo, \"SELECT id, code, order_date, status, amount FROM sales_orders WHERE deleted_at IS NULL ORDER BY id DESC\", [], 10);","$acts   = safeRows($pdo, \"SELECT id, code, type, subject, due_at, status FROM crm_activities WHERE deleted_at IS NULL AND status IN ('Open','In Progress') ORDER BY due_at ASC\", [], 12);","","$UI_PATH = __DIR__ . '/../ui';","$PAGE_TITLE = 'CRM Dashboard';","$ACTIVE_MENU = 'crm_dashboard';","if (is_file($UI_PATH.'/init.php')) require_once $UI_PATH.'/init.php';","if (is_file($UI_PATH.'/layout_start.php')) require_once $UI_PATH.'/layout_start.php';","?>","<div class=\"container-fluid py-3\">","  <div class=\"d-flex align-items-center mb-3\">","    <h4 class=\"mb-0\">CRM Dashboard</h4>","    <a class=\"btn btn-outline-secondary btn-sm ms-auto\" href=\"/dashboard.php?tab=crm\">Open as main tab</a>","  </div>","","  <div class=\"row g-3\">","    <div class=\"col-sm-6 col-md-4 col-lg-2\"><div class=\"card shadow-sm\"><div class=\"card-body\"><div class=\"text-muted small\">Accounts</div><div class=\"fs-4 fw-semibold\"><?= (int)$kpi['accounts'] ?></div></div></div></div>","    <div class=\"col-sm-6 col-md-4 col-lg-2\"><div class=\"card shadow-sm\"><div class=\"card-body\"><div class=\"text-muted small\">Contacts</div><div class=\"fs-4 fw-semibold\"><?= (int)$kpi['contacts'] ?></div></div></div></div>","    <div class=\"col-sm-6 col-md-4 col-lg-2\"><div class=\"card shadow-sm\"><div class=\"card-body\"><div class=\"text-muted small\">Leads (Open)</div><div class=\"fs-4 fw-semibold\"><?= (int)$kpi['leads_open'] ?></div></div></div></div>","    <div class=\"col-sm-6 col-md-4 col-lg-2\"><div class=\"card shadow-sm\"><div class=\"card-body\"><div class=\"text-muted small\">Quotes (Draft)</div><div class=\"fs-4 fw-semibold\"><?= (int)$kpi['quotes_dr'] ?></div></div></div></div>","    <div class=\"col-sm-6 col-md-4 col-lg-2\"><div class=\"card shadow-sm\"><div class=\"card-body\"><div class=\"text-muted small\">Quotes (Sent)</div><div class=\"fs-4 fw-semibold\"><?= (int)$kpi['quotes_sn'] ?></div></div></div></div>","    <div class=\"col-sm-6 col-md-4 col-lg-2\"><div class=\"card shadow-sm\"><div class=\"card-body\"><div class=\"text-muted small\">Orders (WIP)</div><div class=\"fs-4 fw-semibold\"><?= (int)$kpi['orders_wip'] ?></div></div></div></div>","  </div>","","  <div class=\"row g-3 mt-1\">","    <div class=\"col-lg-4\">","      <div class=\"card shadow-sm h-100\">","        <div class=\"card-header\"><strong>Recent Leads</strong></div>","        <ul class=\"list-group list-group-flush\">","          <?php if ($leads): foreach ($leads as $r): ?>","            <li class=\"list-group-item d-flex justify-content-between\">","              <span><?= fmt(($r['code'] ?? ('#'.$r['id'])) . ' \u00b7 ' . ($r['title'] ?? '')) ?></span>","              <span class=\"text-muted small\"><?= fmt($r['status'] ?? '') ?></span>","            </li>","          <?php endforeach; else: ?><li class=\"list-group-item text-muted\">No leads</li><?php endif; ?>","        </ul>","        <div class=\"card-footer text-end small\"><a href=\"/crm/leads_list.php\">Open leads \u2192</a></div>","      </div>","    </div>","","    <div class=\"col-lg-4\">","      <div class=\"card shadow-sm h-100\">","        <div class=\"card-header\"><strong>Recent Sales Quotes</strong></div>","        <ul class=\"list-group list-group-flush\">","          <?php if ($quotes): foreach ($quotes as $r): ?>","            <li class=\"list-group-item d-flex justify-content-between\">","              <span><?= fmt($r['code'] ?? ('#'.$r['id'])) ?></span>","              <span class=\"text-muted small\"><?= fmt($r['status'] ?? '') ?></span>","            </li>","          <?php endforeach; else: ?><li class=\"list-group-item text-muted\">No quotes</li><?php endif; ?>","        </ul>","        <div class=\"card-footer text-end small\"><a href=\"/sales_quotes/sales_quotes_list.php\">Open quotes \u2192</a></div>","      </div>","    </div>","","    <div class=\"col-lg-4\">","      <div class=\"card shadow-sm h-100\">","        <div class=\"card-header\"><strong>Upcoming Activities (\u2264 7 days)</strong></div>","        <ul class=\"list-group list-group-flush\">","          <?php if ($acts): foreach ($acts as $r): ?>","            <li class=\"list-group-item d-flex justify-content-between\">","              <span><?= fmt(($r['type'] ?? '').' \u00b7 '.($r['subject'] ?? '')) ?></span>","              <span class=\"text-muted small\"><?= fmt($r['due_at'] ?? '') ?></span>","            </li>","          <?php endforeach; else: ?><li class=\"list-group-item text-muted\">No activities due</li><?php endif; ?>","        </ul>","        <div class=\"card-footer text-end small\"><a href=\"/crm/activities_list.php\">Open activities \u2192</a></div>","      </div>","    </div>","  </div>","</div>","<?php if (is_file($UI_PATH.'/layout_end.php')) require_once $UI_PATH.'/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/crm_leads/crm_leads_form.php": ["<?php","/** PATH: /public_html/crm_leads/crm_leads_form.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login();","","$id = (int)($_GET['id'] ?? 0);","$isEdit = $id > 0;","require_permission($isEdit ? 'crm.lead.edit' : 'crm.lead.create');","","$pdo = db();","","// Defaults","$row = [","  'code' => '',","  'title' => '',","  'status' => 'New',","  'amount' => null,","  'is_hot' => 0,","  'follow_up_on' => null,","  'notes' => '',","  'party_id' => null,","  'party_contact_id' => null,","];","","// Load existing","if ($isEdit) {","  $st = $pdo->prepare(\"SELECT * FROM crm_leads WHERE id = ? LIMIT 1\");","  $st->execute([$id]);","  if ($dbrow = $st->fetch(PDO::FETCH_ASSOC)) {","    $row = array_merge($row, $dbrow);","  }","}","","// Parties (clients)","$sqlClients = \"SELECT id, code, name FROM parties WHERE 1=1\";","$sqlClients .= \" AND (status = 1 OR status IS NULL)\";","$sqlClients .= \" AND (type = 'client' OR type IS NULL)\";","$sqlClients .= \" ORDER BY name ASC\";","$clients = $pdo->query($sqlClients)->fetchAll(PDO::FETCH_ASSOC);","","// Contacts for selected party","$contacts = [];","if (!empty($row['party_id'])) {","  $st = $pdo->prepare(\"SELECT id, name, phone FROM party_contacts WHERE party_id=? ORDER BY is_primary DESC, name ASC\");","  $st->execute([(int)$row['party_id']]);","  $contacts = $st->fetchAll(PDO::FETCH_ASSOC);","}","","include __DIR__ . '/../ui/layout_start.php';","render_flash();","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h4 mb-0\"><?= $isEdit ? 'Edit Lead' : 'New Lead' ?></h1>","  <div class=\"d-flex gap-2\">","    <?php if ($isEdit): ?>","      <!-- One-click handoff to Quotation (prefills party/contact via lead_id) -->","      <a class=\"btn btn-outline-primary\" href=\"<?= h('../sales_quotes/sales_quotes_form.php?lead_id='.$id) ?>\">Create Quote</a>","    <?php endif; ?>","    <a href=\"<?= h('crm_leads_list.php') ?>\" class=\"btn btn-outline-secondary\">Back</a>","  </div>","</div>","","<form method=\"post\" action=\"<?= h('crm_leads_save.php') ?>\" class=\"row g-3\">","  <?= csrf_field() ?>","  <input type=\"hidden\" name=\"id\" value=\"<?= (int)$id ?>\">","","  <div class=\"col-md-3\">","    <label class=\"form-label\">Code</label>","    <input class=\"form-control\" name=\"code\" value=\"<?= h((string)$row['code']) ?>\" placeholder=\"Auto if left blank\">","  </div>","  <div class=\"col-md-6\">","    <label class=\"form-label\">Title</label>","    <input class=\"form-control\" name=\"title\" value=\"<?= h((string)$row['title']) ?>\" required>","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Status</label>","    <select name=\"status\" class=\"form-select\">","      <?php foreach (['New','Qualified','Quoted','Won','Lost'] as $s): ?>","        <option value=\"<?= h($s) ?>\" <?= ((string)$row['status'] === $s ? 'selected' : '') ?>><?= h($s) ?></option>","      <?php endforeach; ?>","    </select>","  </div>","","  <div class=\"col-md-3\">","    <label class=\"form-label\">Amount</label>","    <input type=\"number\" step=\"0.01\" class=\"form-control\" name=\"amount\" value=\"<?= h((string)$row['amount']) ?>\">","  </div>","  <div class=\"col-md-3 form-check mt-4\">","    <input class=\"form-check-input\" type=\"checkbox\" id=\"is_hot\" name=\"is_hot\" <?= ((int)$row['is_hot'] ? 'checked' : '') ?>>","    <label class=\"form-check-label\" for=\"is_hot\">Hot</label>","  </div>","  <div class=\"col-md-3\">","    <label class=\"form-label\">Follow Up On</label>","    <input type=\"date\" class=\"form-control\" name=\"follow_up_on\" value=\"<?= h((string)$row['follow_up_on']) ?>\">","  </div>","","  <div class=\"col-12\">","    <label class=\"form-label\">Notes</label>","    <textarea class=\"form-control\" name=\"notes\" rows=\"3\"><?= h((string)$row['notes']) ?></textarea>","  </div>","","  <!-- Client (Party) dropdown -->","  <div class=\"col-md-6\">","    <label class=\"form-label\">Client (Party)</label>","    <select name=\"party_id\" id=\"party_id\" class=\"form-select\">","      <option value=\"\">-- Select Client --</option>","      <?php foreach ($clients as $c): ?>","        <option value=\"<?= (int)$c['id'] ?>\" <?= ((int)$row['party_id'] === (int)$c['id'] ? 'selected' : '') ?>>","          <?= h($c['name'] . ($c['code'] ? ' ('.$c['code'].')' : '')) ?>","        </option>","      <?php endforeach; ?>","    </select>","  </div>","","  <!-- Contact dropdown (auto-fills after client selection) -->","  <div class=\"col-md-6\">","    <label class=\"form-label\">Contact</label>","    <select name=\"party_contact_id\" id=\"party_contact_id\" class=\"form-select\" <?= $row['party_id'] ? '' : 'disabled' ?>>","      <option value=\"\">-- Select Contact --</option>","      <?php foreach ($contacts as $c): ?>","        <option value=\"<?= (int)$c['id'] ?>\" <?= ((int)$row['party_contact_id'] === (int)$c['id'] ? 'selected' : '') ?>>","          <?= h($c['name'] . ($c['phone'] ? ' \u00b7 '.$c['phone'] : '')) ?>","        </option>","      <?php endforeach; ?>","    </select>","  </div>","","  <div class=\"col-12 d-flex gap-2 justify-content-end\">","    <button class=\"btn btn-primary\"><?= $isEdit ? 'Update' : 'Create' ?></button>","    <a class=\"btn btn-outline-secondary\" href=\"<?= h('crm_leads_list.php') ?>\">Cancel</a>","  </div>","</form>","","<?php include __DIR__ . '/../ui/layout_end.php'; ?>","","<script>","document.getElementById('party_id')?.addEventListener('change', async function(){","  const pid = this.value;","  const sel = document.getElementById('party_contact_id');","  sel.innerHTML = '<option value=\"\">-- Select Contact --</option>';","  if (!pid) { sel.disabled = true; return; }","  sel.disabled = false;","  try {","    const res = await fetch('../common/party_contacts.php?party_id='+encodeURIComponent(pid));","    const js = await res.json();","    if (js.ok) {","      sel.innerHTML = '<option value=\"\">-- Select Contact --</option>';","      js.items.forEach(it => {","        const opt = document.createElement('option');","        opt.value = it.id;","        opt.textContent = it.name + (it.phone ? ' \u00b7 ' + it.phone : '');","        sel.appendChild(opt);","      });","    }","  } catch(e){ console.error(e); }","});","</script>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/crm_leads/convert_to_order.php": ["<?php","/** PATH: /public_html/crm_leads/convert_to_order.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/audit.php';","require_once __DIR__ . '/../includes/numbering.php';","","require_login();","require_permission('crm.lead.edit');","require_permission('sales.order.create');","","$pdo = db();","","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  verify_csrf_or_die();","  $leadId = (int)($_POST['lead_id'] ?? 0);","  if ($leadId <= 0) { set_flash('danger','Invalid lead id'); header('Location: crm_leads_list.php'); exit; }","","  $st = $pdo->prepare(\"SELECT * FROM crm_leads WHERE id=? AND (deleted_at IS NULL) LIMIT 1\");","  $st->execute([$leadId]);","  $lead = $st->fetch(PDO::FETCH_ASSOC);","  if (!$lead) { set_flash('danger','Lead not found'); header('Location: crm_leads_list.php'); exit; }","","  if (empty($lead['party_id'])) {","    set_flash('danger','Please select a Party on the Lead before conversion.');","    header('Location: crm_leads_form.php?id='.$leadId); exit;","  }","","  $order = [","    'code'        => next_no('SO'),","    'lead_id'     => $leadId,","    'account_id'  => (int)$lead['party_id'],","    'contact_id'  => !empty($lead['party_contact_id']) ? (int)$lead['party_contact_id'] : null,","    'status'      => 'Draft',","    'order_date'  => date('Y-m-d'),","    'amount'      => $lead['amount'] ?? null,","    'notes'       => 'Converted from Lead #'.$leadId,","  ];","  $ins = $pdo->prepare(\"INSERT INTO sales_orders","    (`code`,`lead_id`,`account_id`,`contact_id`,`status`,`order_date`,`amount`,`notes`)","    VALUES (:code,:lead_id,:account_id,:contact_id,:status,:order_date,:amount,:notes)\");","  $ins->execute($order);","  $oid = (int)$pdo->lastInsertId();","  audit_log($pdo, 'sales_orders', 'create', $oid, $order);","","  set_flash('success', 'Converted to Sales Order '.$order['code'].' (Party reused).');","  header('Location: ../sales_orders/sales_orders_form.php?id='.$oid); exit;","}","","require_once __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h5 mb-0\">Convert Lead to Sales Order</h1>","  <a href=\"<?= h('crm_leads_list.php') ?>\" class=\"btn btn-outline-secondary\">Back</a>","</div>","<form method=\"post\">","  <?= csrf_field() ?>","  <input type=\"hidden\" name=\"lead_id\" value=\"<?= (int)($_GET['lead_id'] ?? 0) ?>\">","  <p>This will create a Sales Order and reuse the same Party & Contact selected in the Lead. Continue?</p>","  <button class=\"btn btn-primary\">Convert</button>","</form>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/crm_leads/crm_leads_list.php": ["<?php","/** PATH: /public_html/crm_leads/crm_leads_list.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login();","require_permission('crm.lead.view');","","$pdo = db();","$q = trim($_GET['q'] ?? '');","","// columns to render","$displayCols = ['id','code','title','status','amount','is_hot','follow_up_on','party_name','contact_name'];","","// SEARCH (unique placeholders)","$params = [];","$where = \" WHERE L.deleted_at IS NULL \";","if ($q !== '') {","  $terms = [];","  $i = 1;","  foreach (['L.code','L.title','L.status','P.name','C.name'] as $col) {","    $ph = \":q{$i}\";","    $terms[] = \"{$col} LIKE {$ph}\";","    $params[$ph] = \"%{$q}%\";","    $i++;","  }","  $where .= \" AND (\" . implode(' OR ', $terms) . \") \";","}","","$sql = \"","SELECT","  L.*,","  P.name AS party_name,","  C.name AS contact_name","FROM crm_leads L","LEFT JOIN parties P ON P.id = L.party_id AND P.deleted_at IS NULL","LEFT JOIN party_contacts C ON C.id = L.party_contact_id AND C.deleted_at IS NULL","{$where}","ORDER BY L.id DESC","LIMIT 200\";","","$stmt = $pdo->prepare($sql);","$stmt->execute($params);","$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);","","include __DIR__ . '/../ui/layout_start.php';","render_flash();","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h4 mb-0\">CRM Leads</h1>","  <div class=\"d-flex gap-2\">","    <form method=\"get\" class=\"d-flex gap-2\">","      <input class=\"form-control\" name=\"q\" value=\"<?= h($q) ?>\" placeholder=\"Search code/title/status/party/contact\">","      <button class=\"btn btn-outline-secondary\">Search</button>","    </form>","    <?php if (has_permission('crm.lead.create')): ?>","      <a href=\"<?= h('crm_leads_form.php') ?>\" class=\"btn btn-primary\">+ New</a>","    <?php endif; ?>","  </div>","</div>","","<div class=\"table-responsive\">","  <table class=\"table table-striped align-middle\">","    <thead>","      <tr>","        <?php foreach ($displayCols as $c): ?>","          <th><?= h(ucwords(str_replace('_',' ', $c))) ?></th>","        <?php endforeach; ?>","        <th style=\"width:220px\">Actions</th>","      </tr>","    </thead>","    <tbody>","      <?php if (!$rows): ?>","        <tr><td colspan=\"999\" class=\"text-center text-muted py-4\">No records found.</td></tr>","      <?php endif; ?>","      <?php foreach ($rows as $r): ?>","        <tr>","          <?php foreach ($displayCols as $c): ?>","            <td><?= h((string)($r[$c] ?? '')) ?></td>","          <?php endforeach; ?>","          <td>","            <div class=\"btn-group btn-group-sm\">","              <?php if (has_permission('crm.lead.edit')): ?>","                <a class=\"btn btn-outline-secondary\" href=\"<?= h('crm_leads_form.php?id='.(int)$r['id']) ?>\">Edit</a>","              <?php endif; ?>","              <?php if (has_permission('sales.order.create')): ?>","                <a class=\"btn btn-outline-primary\" href=\"<?= h('convert_to_order.php?lead_id='.(int)$r['id']) ?>\">Convert \u2192 Order</a>","              <?php endif; ?>","              <?php if (has_permission('crm.lead.delete')): ?>","                <form method=\"post\" action=\"<?= h('crm_leads_save.php') ?>\" onsubmit=\"return confirm('Delete this lead?')\">","                  <?= csrf_field() ?>","                  <input type=\"hidden\" name=\"id\" value=\"<?= (int)$r['id'] ?>\">","                  <input type=\"hidden\" name=\"action\" value=\"delete\">","                  <button class=\"btn btn-outline-danger\">Delete</button>","                </form>","              <?php endif; ?>","            </div>","          </td>","        </tr>","      <?php endforeach; ?>","    </tbody>","  </table>","</div>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/crm_leads/crm_leads_save.php": ["<?php","/** PATH: /public_html/crm_leads/crm_leads_save.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/audit.php';","require_once __DIR__ . '/../includes/numbering.php';","","require_login();","verify_csrf_or_die();","","$pdo = db();","","$id = (int)($_POST['id'] ?? 0);","$isEdit = $id > 0;","require_permission($isEdit ? 'crm.lead.edit' : 'crm.lead.create');","","// Collect","$data = [];","$codeIn = trim((string)($_POST['code'] ?? ''));","$data['code'] = ($codeIn === '') ? null : $codeIn;  // allow NULL (prevents duplicate '' problem)","$data['title'] = trim((string)($_POST['title'] ?? ''));","$data['status'] = trim((string)($_POST['status'] ?? 'New'));","$data['amount'] = ($_POST['amount'] === '' ? null : (string)$_POST['amount']);","$data['is_hot'] = isset($_POST['is_hot']) ? 1 : 0;","$data['follow_up_on'] = (($_POST['follow_up_on'] ?? '') === '' ? null : (string)$_POST['follow_up_on']);","$data['notes'] = trim((string)($_POST['notes'] ?? ''));","$data['party_id'] = (($_POST['party_id'] ?? '') === '' ? null : (int)$_POST['party_id']);","$data['party_contact_id'] = (($_POST['party_contact_id'] ?? '') === '' ? null : (int)$_POST['party_contact_id']);","","try {","  if (!$isEdit) {","    // Ensure a unique code if not provided","    if ($data['code'] === null) {","      $data['code'] = next_no('LEAD'); // e.g., LEAD-2025-0001","    }","    $sql = \"INSERT INTO crm_leads","      (code, title, status, amount, is_hot, follow_up_on, notes, party_id, party_contact_id, created_at)","      VALUES","      (:code, :title, :status, :amount, :is_hot, :follow_up_on, :notes, :party_id, :party_contact_id, NOW())\";","    $st = $pdo->prepare($sql);","    $st->execute($data);","    $newId = (int)$pdo->lastInsertId();","    audit_log($pdo, 'crm_leads', 'create', $newId, $data);","    set_flash('success', 'Lead created.');","    header('Location: crm_leads_form.php?id='.$newId); exit;","","  } else {","    // For updates: if code was cleared in UI, regenerate a new one","    if ($data['code'] === null) {","      // Load current code; if it was already present, keep it, else generate","      $cur = $pdo->prepare(\"SELECT code FROM crm_leads WHERE id=?\");","      $cur->execute([$id]);","      $curCode = (string)($cur->fetchColumn() ?: '');","      if ($curCode === '') {","        $data['code'] = next_no('LEAD');","      } else {","        $data['code'] = $curCode; // keep existing non-empty code","      }","    }","    $data['id'] = $id;","    $sql = \"UPDATE crm_leads SET","      code=:code, title=:title, status=:status, amount=:amount, is_hot=:is_hot,","      follow_up_on=:follow_up_on, notes=:notes, party_id=:party_id, party_contact_id=:party_contact_id","      WHERE id=:id\";","    $st = $pdo->prepare($sql);","    $st->execute($data);","    audit_log($pdo, 'crm_leads', 'update', $id, $data);","    set_flash('success', 'Lead updated.');","    header('Location: crm_leads_form.php?id='.$id); exit;","  }","} catch (Throwable $e) {","  set_flash('danger', $e->getMessage());","  header('Location: crm_leads_form.php'.($isEdit?('?id='.$id):'')); exit;","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/notifications/mark_read.php": ["<?php","/** PATH: /public_html/notifications/mark_read.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","","require_login();","$pdo = db();","","$id = (int)($_POST['id'] ?? 0);","if ($id > 0) {","  $st = $pdo->prepare(\"UPDATE notifications SET is_read=1 WHERE id=? AND user_id=?\");","  $st->execute([$id, current_user_id()]);","}","header('Content-Type: application/json');","echo json_encode(['ok'=>true]);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/projects/project_contacts.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_permission('project.project.manage');","","$pdo = db();","$partyId = (int)($_GET['party_id'] ?? 0);","if ($partyId <= 0) { header('Content-Type: application/json'); echo '[]'; exit; }","","$st = $pdo->prepare(\"SELECT id, name, phone, email FROM party_contacts WHERE party_id = ? ORDER BY name\");","$st->execute([$partyId]);","$rows = $st->fetchAll(PDO::FETCH_ASSOC) ?: [];","","header('Content-Type: application/json');","echo json_encode($rows);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/projects/project_next_code.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_permission('project.project.manage');","","$pdo = db();","","function format_project_code(int $year, int $seq): string {","  return sprintf('PA-%04d-%04d', $year, $seq); // PA-2025-0001","}","","$mode = strtolower(trim($_GET['mode'] ?? 'peek'));","$year = (int)date('Y');","","header('Content-Type: application/json');","","if ($mode === 'peek') {","  // Just show next number without incrementing","  $stmt = $pdo->prepare(\"SELECT seq FROM project_sequences WHERE year = ?\");","  $stmt->execute([$year]);","  $row = $stmt->fetch(PDO::FETCH_ASSOC);","  $seq = $row ? ((int)$row['seq'] + 1) : 1;","  echo json_encode(['ok' => true, 'code' => format_project_code($year, $seq), 'reserved' => false]);","  exit;","}","","if ($mode === 'allocate') {","  // Reserve/allocate the next code (use POST if you expose this)","  if ($_SERVER['REQUEST_METHOD'] !== 'POST') {","    http_response_code(405);","    echo json_encode(['ok' => false, 'error' => 'use POST for allocate']);","    exit;","  }","","  $pdo->beginTransaction();","  try {","    $s = $pdo->prepare(\"SELECT seq FROM project_sequences WHERE year = ? FOR UPDATE\");","    $s->execute([$year]);","    $row = $s->fetch(PDO::FETCH_ASSOC);","","    if (!$row) {","      $pdo->prepare(\"INSERT INTO project_sequences(year, seq) VALUES(?, 0)\")->execute([$year]);","      $seq = 0;","    } else {","      $seq = (int)$row['seq'];","    }","","    $seq++;","    $pdo->prepare(\"UPDATE project_sequences SET seq = ? WHERE year = ?\")->execute([$seq, $year]);","","    $code = format_project_code($year, $seq);","    $pdo->commit();","","    echo json_encode(['ok' => true, 'code' => $code, 'reserved' => true]);","  } catch (Throwable $e) {","    $pdo->rollBack();","    http_response_code(500);","    echo json_encode(['ok' => false, 'error' => 'allocate_failed']);","  }","  exit;","}","","http_response_code(400);","echo json_encode(['ok' => false, 'error' => 'invalid_mode']);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/projects/projects_list.php": ["<?php","/** PATH: /public_html/projects/projects_list.php */","declare(strict_types=1);","","// 1) Auth FIRST so user_has_permission()/require_permission() exist","require_once __DIR__ . '/../includes/auth.php';","// 2) DB next","require_once __DIR__ . '/../includes/db.php';","","// Guard this page","require_permission('project.project.view');","","$pdo = db();","","/* ---------------------------","   Filters & safe parameters","----------------------------*/","$q       = trim($_GET['q'] ?? '');","$status  = trim($_GET['status'] ?? ''); // planned|active|on-hold|closed","$limit   = (int)($_GET['limit'] ?? 200);","$limit   = ($limit > 0 && $limit <= 500) ? $limit : 200;","","$whereSql = [];","$params   = [];","","// Search filter (collate columns to baseline to avoid cross-table mismatch)","if ($q !== '') {","    $like = '%' . $q . '%';","    $whereSql[] = \"(pr.code COLLATE utf8mb4_general_ci LIKE ?","                 OR pr.name COLLATE utf8mb4_general_ci LIKE ?","                 OR p.name  COLLATE utf8mb4_general_ci LIKE ?)\";","    $params[] = $like; $params[] = $like; $params[] = $like;","}","","// Status filter","$validStatuses = ['planned','active','on-hold','closed'];","if ($status !== '' && in_array($status, $validStatuses, true)) {","    $whereSql[] = \"pr.status = ?\";","    $params[] = $status;","}","","$whereClause = $whereSql ? ('WHERE ' . implode(' AND ', $whereSql)) : '';","","/* ---------------------------","   Query","----------------------------*/","$sql = \"","  SELECT pr.id, pr.code, pr.name, pr.status, pr.start_date, pr.end_date,","         p.name AS client_name, pt.name AS type_name, pr.site_city, pr.site_state","  FROM projects pr","  LEFT JOIN parties p ON p.id = pr.client_party_id","  LEFT JOIN project_types pt ON pt.id = pr.type_id","  $whereClause","  ORDER BY pr.id DESC","  LIMIT $limit","\";","","$st   = $pdo->prepare($sql);","$st->execute($params);","$rows = $st->fetchAll(PDO::FETCH_ASSOC);","","// Only include layout after auth/db/logic are loaded","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container py-4\">","  <div class=\"d-flex flex-wrap gap-2 justify-content-between align-items-center mb-3\">","    <h2 class=\"mb-0\">Projects</h2>","    <div class=\"d-flex gap-2\">","      <form class=\"d-flex gap-2\" method=\"get\">","        <input class=\"form-control\" name=\"q\" placeholder=\"Search code/name/client\" value=\"<?= htmlspecialchars($q) ?>\">","        <select class=\"form-select\" name=\"status\">","          <option value=\"\">All Status</option>","          <?php foreach (['planned','active','on-hold','closed'] as $st): ?>","            <option value=\"<?= $st ?>\" <?= $status === $st ? 'selected' : '' ?>><?= ucfirst($st) ?></option>","          <?php endforeach; ?>","        </select>","        <select class=\"form-select\" name=\"limit\" title=\"Rows\">","          <?php foreach ([50,100,200,300,500] as $opt): ?>","            <option value=\"<?= $opt ?>\" <?= $limit===$opt ? 'selected' : '' ?>><?= $opt ?></option>","          <?php endforeach; ?>","        </select>","        <button class=\"btn btn-outline-primary\" type=\"submit\">Filter</button>","      </form>","      <?php if (user_has_permission('project.project.manage')): ?>","        <a class=\"btn btn-primary\" href=\"projects_form.php\">+ New</a>","      <?php endif; ?>","    </div>","  </div>","","  <div class=\"table-responsive\">","    <table class=\"table table-striped table-hover align-middle\">","      <thead>","        <tr>","          <th style=\"min-width:120px;\">Code</th>","          <th style=\"min-width:200px;\">Name</th>","          <th>Client</th>","          <th>Type</th>","          <th>Status</th>","          <th>Start</th>","          <th>End</th>","          <th>Site</th>","          <th style=\"width:80px;\"></th>","        </tr>","      </thead>","      <tbody>","      <?php if (!$rows): ?>","        <tr><td colspan=\"9\" class=\"text-muted\">No projects found.</td></tr>","      <?php else: ?>","        <?php foreach ($rows as $r): ?>","          <tr>","            <td><?= htmlspecialchars($r['code']) ?></td>","            <td><?= htmlspecialchars($r['name']) ?></td>","            <td><?= htmlspecialchars($r['client_name'] ?? '') ?></td>","            <td><?= htmlspecialchars($r['type_name'] ?? '') ?></td>","            <td><span class=\"badge bg-secondary\"><?= htmlspecialchars($r['status']) ?></span></td>","            <td><?= htmlspecialchars((string)$r['start_date']) ?></td>","            <td><?= htmlspecialchars((string)$r['end_date']) ?></td>","            <td><?= htmlspecialchars(trim((string)($r['site_city'] ?? '') . ', ' . (string)($r['site_state'] ?? ''), ' ,')) ?></td>","            <td class=\"text-end\">","              <a class=\"btn btn-sm btn-outline-primary\" href=\"projects_form.php?id=<?= (int)$r['id'] ?>\">Edit</a>","            </td>","          </tr>","        <?php endforeach; ?>","      <?php endif; ?>","      </tbody>","    </table>","  </div>","</div>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/projects/projects_form.php": ["<?php","/** PATH: /public_html/projects/projects_form.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/audit.php'; // if present; safe if missing via function_exists checks","require_permission('project.project.manage');","","$pdo = db();","","/* -----------------------------","   Helpers for project code","------------------------------*/","function format_project_code(int $year, int $seq): string {","  return sprintf('PA-%04d-%04d', $year, $seq);","}","","/**"," * Allocate the next project code (atomic). Called ONLY on INSERT."," */","function allocate_project_code(PDO $pdo): string {","  $year = (int)date('Y');","  $pdo->beginTransaction();","  try {","    $st = $pdo->prepare(\"SELECT seq FROM project_sequences WHERE year = ? FOR UPDATE\");","    $st->execute([$year]);","    $row = $st->fetch(PDO::FETCH_ASSOC);","","    $seq = $row ? (int)$row['seq'] : 0;","    if (!$row) {","      $pdo->prepare(\"INSERT INTO project_sequences(year, seq) VALUES(?, 0)\")->execute([$year]);","    }","","    $seq++;","    $pdo->prepare(\"UPDATE project_sequences SET seq = ? WHERE year = ?\")->execute([$seq, $year]);","    $code = format_project_code($year, $seq);","    $pdo->commit();","    return $code;","  } catch (Throwable $e) {","    $pdo->rollBack();","    throw $e;","  }","}","","/* -----------------------------","   Load dropdown data","------------------------------*/","$types = $pdo->query(\"SELECT id, name FROM project_types WHERE status='active' ORDER BY name\")","             ->fetchAll(PDO::FETCH_ASSOC);","","$clients = $pdo->query(\"SELECT id, CONCAT(code,' - ',name) label FROM parties ORDER BY name\")","               ->fetchAll(PDO::FETCH_ASSOC);","","/* -----------------------------","   Model load","------------------------------*/","$id = (int)($_GET['id'] ?? 0);","","$project = [","  'code'=>'','name'=>'','client_party_id'=>null,'type_id'=>null,'status'=>'planned',","  'start_date'=>null,'end_date'=>null,","  'site_address_line1'=>null,'site_address_line2'=>null,'site_city'=>null,'site_state'=>null,'site_pincode'=>null,","  'site_contact_id'=>null,'site_contact_name'=>null,'site_contact_phone'=>null,'site_contact_email'=>null","];","","if ($id) {","  $st = $pdo->prepare(\"SELECT * FROM projects WHERE id=?\");","  $st->execute([$id]);","  if ($row = $st->fetch(PDO::FETCH_ASSOC)) $project = array_merge($project, $row);","}","","/* -----------------------------","   Handle POST (save)","------------------------------*/","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  // Collect fields (ignore client-provided code on CREATE to avoid reserving via client)","  $data = [","    'name' => trim($_POST['name'] ?? ''),","    'client_party_id' => (int)($_POST['client_party_id'] ?? 0) ?: null,","    'type_id' => (int)($_POST['type_id'] ?? 0) ?: null,","    'status' => $_POST['status'] ?? 'planned',","    'start_date' => $_POST['start_date'] ?: null,","    'end_date' => $_POST['end_date'] ?: null,","    'site_address_line1' => trim($_POST['site_address_line1'] ?? ''),","    'site_address_line2' => trim($_POST['site_address_line2'] ?? ''),","    'site_city' => trim($_POST['site_city'] ?? ''),","    'site_state' => trim($_POST['site_state'] ?? ''),","    'site_pincode' => trim($_POST['site_pincode'] ?? ''),","    'site_contact_id' => (int)($_POST['site_contact_id'] ?? 0) ?: null,","    'site_contact_name' => trim($_POST['site_contact_name'] ?? ''),","    'site_contact_phone' => trim($_POST['site_contact_phone'] ?? ''),","    'site_contact_email' => trim($_POST['site_contact_email'] ?? ''),","  ];","","  if ($id) {","    // UPDATE: keep existing code as-is","    $before = $project;","    $sql = \"UPDATE projects SET","            name=?, client_party_id=?, type_id=?, status=?, start_date=?, end_date=?,","            site_address_line1=?, site_address_line2=?, site_city=?, site_state=?, site_pincode=?,","            site_contact_id=?, site_contact_name=?, site_contact_phone=?, site_contact_email=?","            WHERE id=?\";","    $pdo->prepare($sql)->execute([","      $data['name'],$data['client_party_id'],$data['type_id'],$data['status'],$data['start_date'],$data['end_date'],","      $data['site_address_line1'],$data['site_address_line2'],$data['site_city'],$data['site_state'],$data['site_pincode'],","      $data['site_contact_id'],$data['site_contact_name'],$data['site_contact_phone'],$data['site_contact_email'],","      $id","    ]);","    if (function_exists('logAuditAction')) {","      logAuditAction('project', $id, 'update', current_user_id(), $before, $data);","    }","  } else {","    // INSERT: allocate code now (single increment on actual save)","    $code = allocate_project_code($pdo);","","    $sql = \"INSERT INTO projects","            (code,name,client_party_id,type_id,status,start_date,end_date,","             site_address_line1,site_address_line2,site_city,site_state,site_pincode,","             site_contact_id,site_contact_name,site_contact_phone,site_contact_email)","            VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\";","    $pdo->prepare($sql)->execute([","      $code,$data['name'],$data['client_party_id'],$data['type_id'],$data['status'],$data['start_date'],$data['end_date'],","      $data['site_address_line1'],$data['site_address_line2'],$data['site_city'],$data['site_state'],$data['site_pincode'],","      $data['site_contact_id'],$data['site_contact_name'],$data['site_contact_phone'],$data['site_contact_email']","    ]);","    $id = (int)$pdo->lastInsertId();","","    if (function_exists('logAuditAction')) {","      $after = $data; $after['code'] = $code;","      logAuditAction('project', $id, 'create', current_user_id(), null, $after);","    }","  }","","  // Redirect before any output","  header(\"Location: projects_form.php?id=\".$id);","  exit;","}","","/* -----------------------------","   Peek next code for new record","------------------------------*/","$peek_code = '';","if (!$id) {","  try {","    $y = (int)date('Y');","    $st = $pdo->prepare(\"SELECT seq FROM project_sequences WHERE year=?\");","    $st->execute([$y]);","    $row = $st->fetch(PDO::FETCH_ASSOC);","    $nextSeq = $row ? ((int)$row['seq'] + 1) : 1;","    $peek_code = format_project_code($y, $nextSeq);","  } catch (Throwable $e) {","    $peek_code = ''; // silent; UI can fetch via JS too","  }","}","","/* -----------------------------","   Render layout","------------------------------*/","include __DIR__ . '/../ui/layout_start.php';","?>","<div class=\"container py-4\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h2 class=\"mb-0\"><?= $id ? \"Edit Project\" : \"New Project\" ?></h2>","    <a href=\"projects_list.php\" class=\"btn btn-outline-secondary\">Back</a>","  </div>","","  <form method=\"post\" id=\"projectForm\">","    <div class=\"row\">","      <div class=\"col-md-4 mb-3\">","        <label class=\"form-label\">Project Code</label>","        <div class=\"input-group\">","          <input type=\"text\" id=\"code\" class=\"form-control\" value=\"<?= htmlspecialchars($id ? (string)$project['code'] : (string)$peek_code) ?>\" readonly>","          <?php if (!$id): ?>","            <button type=\"button\" id=\"regenCode\" class=\"btn btn-outline-secondary\">\u21bb</button>","          <?php endif; ?>","        </div>","        <div class=\"form-text\">Code is suggested and allocated only when you save.</div>","      </div>","      <div class=\"col-md-8 mb-3\">","        <label class=\"form-label\">Project Name</label>","        <input type=\"text\" name=\"name\" class=\"form-control\" value=\"<?= htmlspecialchars($project['name']) ?>\" required>","      </div>","    </div>","","    <div class=\"row\">","      <div class=\"col-md-6 mb-3\">","        <label class=\"form-label\">Client (Party)</label>","        <select name=\"client_party_id\" id=\"client_party_id\" class=\"form-select\">","          <option value=\"\">\u2014 Select \u2014</option>","          <?php foreach ($clients as $c): ?>","            <option value=\"<?= (int)$c['id'] ?>\" <?= ((int)$project['client_party_id']===(int)$c['id'])?'selected':'' ?>>","              <?= htmlspecialchars($c['label']) ?>","            </option>","          <?php endforeach; ?>","        </select>","      </div>","      <div class=\"col-md-6 mb-3\">","        <label class=\"form-label\">Project Type</label>","        <select name=\"type_id\" class=\"form-select\">","          <option value=\"\">\u2014 Select \u2014</option>","          <?php foreach ($types as $t): ?>","            <option value=\"<?= (int)$t['id'] ?>\" <?= ((int)$project['type_id']===(int)$t['id'])?'selected':'' ?>>","              <?= htmlspecialchars($t['name']) ?>","            </option>","          <?php endforeach; ?>","        </select>","      </div>","    </div>","","    <div class=\"row\">","      <div class=\"col-md-3 mb-3\">","        <label class=\"form-label\">Start Date</label>","        <input type=\"date\" name=\"start_date\" class=\"form-control\" value=\"<?= $project['start_date'] ?>\">","      </div>","      <div class=\"col-md-3 mb-3\">","        <label class=\"form-label\">End Date</label>","        <input type=\"date\" name=\"end_date\" class=\"form-control\" value=\"<?= $project['end_date'] ?>\">","      </div>","      <div class=\"col-md-6 mb-3\">","        <label class=\"form-label\">Status</label>","        <select name=\"status\" class=\"form-select\">","          <?php foreach (['planned','active','on-hold','closed'] as $st): ?>","            <option value=\"<?= $st ?>\" <?= $st===$project['status']?'selected':'' ?>><?= ucfirst($st) ?></option>","          <?php endforeach; ?>","        </select>","      </div>","    </div>","","    <h5 class=\"mt-3\">Site Address</h5>","    <div class=\"row\">","      <div class=\"col-md-6 mb-3\"><input class=\"form-control\" name=\"site_address_line1\" placeholder=\"Address line 1\" value=\"<?= htmlspecialchars((string)$project['site_address_line1']) ?>\"></div>","      <div class=\"col-md-6 mb-3\"><input class=\"form-control\" name=\"site_address_line2\" placeholder=\"Address line 2\" value=\"<?= htmlspecialchars((string)$project['site_address_line2']) ?>\"></div>","      <div class=\"col-md-4 mb-3\"><input class=\"form-control\" name=\"site_city\" placeholder=\"City\" value=\"<?= htmlspecialchars((string)$project['site_city']) ?>\"></div>","      <div class=\"col-md-4 mb-3\"><input class=\"form-control\" name=\"site_state\" placeholder=\"State\" value=\"<?= htmlspecialchars((string)$project['site_state']) ?>\"></div>","      <div class=\"col-md-4 mb-3\"><input class=\"form-control\" name=\"site_pincode\" placeholder=\"PIN Code\" value=\"<?= htmlspecialchars((string)$project['site_pincode']) ?>\"></div>","    </div>","","    <h5 class=\"mt-3\">Site Contact</h5>","    <div class=\"row\">","      <div class=\"col-md-6 mb-3\">","        <label class=\"form-label\">Pick from Client Contacts</label>","        <select name=\"site_contact_id\" id=\"site_contact_id\" class=\"form-select\">","          <option value=\"\">\u2014 None \u2014</option>","        </select>","        <div class=\"form-text\">Change client to refresh contacts</div>","      </div>","      <div class=\"col-md-6 mb-3\">","        <div class=\"form-check mt-4\">","          <input class=\"form-check-input\" type=\"checkbox\" id=\"useManualContact\" <?= ($project['site_contact_name']||$project['site_contact_phone']||$project['site_contact_email'])?'checked':'' ?>>","          <label class=\"form-check-label\" for=\"useManualContact\">Enter contact details manually</label>","        </div>","      </div>","    </div>","    <div id=\"manualContact\" class=\"row <?= ($project['site_contact_name']||$project['site_contact_phone']||$project['site_contact_email'])?'':'d-none' ?>\">","      <div class=\"col-md-4 mb-3\"><input class=\"form-control\" name=\"site_contact_name\"  placeholder=\"Contact name\"  value=\"<?= htmlspecialchars((string)$project['site_contact_name']) ?>\"></div>","      <div class=\"col-md-4 mb-3\"><input class=\"form-control\" name=\"site_contact_phone\" placeholder=\"Phone\"         value=\"<?= htmlspecialchars((string)$project['site_contact_phone']) ?>\"></div>","      <div class=\"col-md-4 mb-3\"><input class=\"form-control\" name=\"site_contact_email\" type=\"email\" placeholder=\"Email\" value=\"<?= htmlspecialchars((string)$project['site_contact_email']) ?>\"></div>","    </div>","","    <div class=\"d-flex gap-2\">","      <button class=\"btn btn-success\" type=\"submit\">Save</button>","      <a href=\"projects_list.php\" class=\"btn btn-secondary\">Cancel</a>","    </div>","  </form>","</div>","","<script>","document.addEventListener('DOMContentLoaded', () => {","  const isEdit    = <?= $id ? 'true' : 'false' ?>;","  const codeEl    = document.getElementById('code');","  const regenBtn  = document.getElementById('regenCode');","  const clientSel = document.getElementById('client_party_id');","  const contactSel= document.getElementById('site_contact_id');","  const manualChk = document.getElementById('useManualContact');","  const manualBox = document.getElementById('manualContact');","","  function peekCode() {","    fetch('project_next_code.php?mode=peek')","      .then(r=>r.json()).then(j=>{","        if (j && j.ok && codeEl) codeEl.value = j.code;","      });","  }","","  function loadContacts(partyId) {","    contactSel.innerHTML = '<option value=\"\">\u2014 None \u2014</option>';","    if (!partyId) return;","    fetch('project_contacts.php?party_id=' + encodeURIComponent(partyId))","      .then(r=>r.json())","      .then(rows => {","        rows.forEach(r => {","          const opt = document.createElement('option');","          opt.value = r.id;","          opt.textContent = r.name + (r.phone ? (' \u2014 ' + r.phone) : '');","          contactSel.appendChild(opt);","        });","      });","  }","","  if (!isEdit) { peekCode(); }","  regenBtn && regenBtn.addEventListener('click', peekCode);","  clientSel && clientSel.addEventListener('change', ()=>loadContacts(clientSel.value));","  manualChk && manualChk.addEventListener('change', ()=> {","    manualBox.classList.toggle('d-none', !manualChk.checked);","  });","","  <?php if ($id && $project['client_party_id']): ?>","    loadContacts(<?= (int)$project['client_party_id'] ?>);","  <?php endif; ?>","});","</script>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/uom/uom_conversions_delete.php": ["<?php","require_once __DIR__ . '/../config.php';","require_login();","require_permission('master.uom.conversion.manage');","","$id = (int)($_GET['id'] ?? 0);","if ($id > 0) {","  db()->prepare(\"DELETE FROM uom_conversions WHERE id=?\")->execute([$id]);","}","header('Location: uom_conversions_list.php'); exit;"],
"/home/u989675055/domains/emsinfra.co.in/public_html/uom/uom_conversions_form.php": ["<?php","require_once __DIR__ . '/../config.php';","require_login();","require_permission('master.uom.conversion.manage');","","$pdo = db();","$id = isset($_GET['id']) ? (int)$_GET['id'] : 0;","$row = null;","","if ($id > 0) {","  $stmt = $pdo->prepare(\"","    SELECT uc.*, fu.code AS from_code, tu.code AS to_code","    FROM uom_conversions uc","    JOIN uom fu ON fu.id = uc.from_uom_id","    JOIN uom tu ON tu.id = uc.to_uom_id","    WHERE uc.id=?\");","  $stmt->execute([$id]);","  $row = $stmt->fetch() ?: null;","}","","$uoms = $pdo->query(\"SELECT id, code FROM uom WHERE status='active' ORDER BY code\")->fetchAll();","","if ($_SERVER['REQUEST_METHOD']==='POST') {","  verify_csrf_or_die();","  $from_id = (int)($_POST['from_id'] ?? 0);","  $to_id   = (int)($_POST['to_id'] ?? 0);","  $factor  = (float)($_POST['factor'] ?? 0);","  $add_inv = isset($_POST['make_inverse']);","","  if ($from_id<=0 || $to_id<=0 || $factor<=0 || $from_id===$to_id) {","    $err = 'Please select different UOMs and a positive factor.';","  } else {","    try {","      if ($id>0) {","        $upd = $pdo->prepare(\"UPDATE uom_conversions SET from_uom_id=?, to_uom_id=?, factor=?, offset_val=0 WHERE id=?\");","        $upd->execute([$from_id,$to_id,$factor,$id]);","      } else {","        $ins = $pdo->prepare(\"INSERT INTO uom_conversions (from_uom_id,to_uom_id,factor,offset_val) VALUES (?,?,?,0)\");","        $ins->execute([$from_id,$to_id,$factor]);","      }","      if ($add_inv) {","        $inv = $pdo->prepare(\"INSERT INTO uom_conversions (from_uom_id,to_uom_id,factor,offset_val)","                              VALUES (?,?,?,0)","                              ON DUPLICATE KEY UPDATE factor=VALUES(factor), offset_val=0\");","        $inv->execute([$to_id, $from_id, 1.0/$factor]);","      }","      header('Location: uom_conversions_list.php'); exit;","    } catch (Throwable $e) {","      $err = 'Duplicate pair or DB error.';","    }","  }","}","?>","<!doctype html><html lang=\"en\"><head>","<meta charset=\"utf-8\"><title><?php echo $id?'Edit':'Add';?> Conversion</title>","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","<link href=\"/styles.css\" rel=\"stylesheet\">","</head><body>","<div class=\"container py-4\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <nav aria-label=\"breadcrumb\">","      <ol class=\"breadcrumb mb-0\">","        <li class=\"breadcrumb-item\"><a href=\"uom_list.php\">UOM</a></li>","        <li class=\"breadcrumb-item\"><a href=\"uom_conversions_list.php\">Conversions</a></li>","        <li class=\"breadcrumb-item active\" aria-current=\"page\"><?php echo $id?'Edit':'Add'; ?></li>","      </ol>","    </nav>","    <a class=\"btn btn-light btn-sm\" href=\"uom_conversions_list.php\"><i class=\"bi bi-arrow-left\"></i> Back</a>","  </div>","","  <div class=\"row justify-content-center\">","    <div class=\"col-lg-6\">","      <div class=\"card shadow-sm rounded-4\">","        <div class=\"card-body\">","          <h5 class=\"mb-3\"><?php echo $id?'Edit':'Add';?> Conversion</h5>","          <?php if (!empty($err)): ?><div class=\"alert alert-danger\"><?php echo htmlspecialchars($err);?></div><?php endif; ?>","","          <form method=\"post\">","            <?php echo csrf_field(); ?>","            <div class=\"row g-3\">","              <div class=\"col-md-5\">","                <label class=\"form-label\">From</label>","                <select class=\"form-select\" name=\"from_id\" required>","                  <option value=\"\">Choose...</option>","                  <?php foreach ($uoms as $u): ?>","                    <option value=\"<?php echo (int)$u['id']; ?>\" <?php echo ($row && $row['from_uom_id']==$u['id'])?'selected':''; ?>>","                      <?php echo htmlspecialchars($u['code']); ?>","                    </option>","                  <?php endforeach; ?>","                </select>","              </div>","              <div class=\"col-md-2 d-flex align-items-end justify-content-center\">","                <span class=\"fw-bold fs-5\">\u2192</span>","              </div>","              <div class=\"col-md-5\">","                <label class=\"form-label\">To</label>","                <select class=\"form-select\" name=\"to_id\" required>","                  <option value=\"\">Choose...</option>","                  <?php foreach ($uoms as $u): ?>","                    <option value=\"<?php echo (int)$u['id']; ?>\" <?php echo ($row && $row['to_uom_id']==$u['id'])?'selected':''; ?>>","                      <?php echo htmlspecialchars($u['code']); ?>","                    </option>","                  <?php endforeach; ?>","                </select>","              </div>","            </div>","","            <div class=\"mt-3\">","              <label class=\"form-label\">Factor</label>","              <input class=\"form-control\" type=\"number\" step=\"0.0000000001\" min=\"0\" name=\"factor\"","                     value=\"<?php echo $row? htmlspecialchars((string)$row['factor']):''; ?>\" required>","              <div class=\"form-text\">qty_to = qty_from \u00d7 factor</div>","            </div>","","            <div class=\"form-check mt-3\">","              <input class=\"form-check-input\" type=\"checkbox\" name=\"make_inverse\" id=\"inv\" checked>","              <label class=\"form-check-label\" for=\"inv\">Automatically create/update inverse</label>","            </div>","","            <div class=\"d-flex gap-2 mt-3\">","              <button class=\"btn btn-primary\"><?php echo $id?'Update':'Create';?></button>","              <a class=\"btn btn-outline-secondary\" href=\"uom_conversions_list.php\">Cancel</a>","            </div>","          </form>","","        </div>","      </div>","    </div>","  </div>","</div>","<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>","</body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/uom/uom_form.php": ["<?php","require_once __DIR__ . '/../config.php';","require_login();","require_permission('master.uom.manage');","","$pdo = db();","$id  = isset($_GET['id']) ? (int)$_GET['id'] : 0;","$row = null;","","if ($id > 0) {","  $stmt = $pdo->prepare(\"SELECT * FROM uom WHERE id=?\");","  $stmt->execute([$id]);","  $row = $stmt->fetch();","  if (!$row) { http_response_code(404); exit('UOM not found'); }","}","","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","  verify_csrf_or_die();","  $code   = strtoupper(trim($_POST['code'] ?? ''));","  $name   = trim($_POST['name'] ?? '');","  $type   = $_POST['type'] ?? 'qty';","  $status = $_POST['status'] ?? 'active';","","  if ($code === '' || $name === '') {","    $err = 'Code and Name are required.';","  } else {","    try {","      if ($id > 0) {","        $stmt = $pdo->prepare(\"UPDATE uom SET code=?, name=?, type=?, status=? WHERE id=?\");","        $stmt->execute([$code, $name, $type, $status, $id]);","      } else {","        $stmt = $pdo->prepare(\"INSERT INTO uom (code,name,type,status) VALUES (?,?,?,?)\");","        $stmt->execute([$code, $name, $type, $status]);","        $id = (int)$pdo->lastInsertId();","      }","      header('Location: uom_list.php'); exit;","    } catch (Throwable $e) {","      $err = 'Error saving UOM. (Maybe duplicate code?)';","    }","  }","}","$val = fn($k,$d='') => htmlspecialchars($row[$k] ?? $d, ENT_QUOTES);","?>","<!doctype html>","<html lang=\"en\">","<head>","  <meta charset=\"utf-8\">","  <title><?php echo $id?'Edit':'New';?> UOM \u2014 EMS Infra ERP</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","  <link href=\"/styles.css\" rel=\"stylesheet\">","</head>","<body>","<div class=\"container py-4\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <nav aria-label=\"breadcrumb\">","      <ol class=\"breadcrumb mb-0\">","        <li class=\"breadcrumb-item\"><a href=\"uom_list.php\">UOM</a></li>","        <li class=\"breadcrumb-item active\" aria-current=\"page\"><?php echo $id ? 'Edit' : 'New'; ?></li>","      </ol>","    </nav>","    <a class=\"btn btn-light btn-sm\" href=\"uom_list.php\"><i class=\"bi bi-arrow-left\"></i> Back</a>","  </div>","","  <div class=\"row justify-content-center\">","    <div class=\"col-lg-6\">","      <div class=\"card shadow-sm rounded-4\">","        <div class=\"card-body\">","          <h5 class=\"mb-3\"><?php echo $id?'Edit':'New';?> UOM</h5>","          <?php if (!empty($err)): ?>","            <div class=\"alert alert-danger\"><?php echo htmlspecialchars($err);?></div>","          <?php endif; ?>","","          <form method=\"post\">","            <?php echo csrf_field(); ?>","            <div class=\"mb-3\">","              <label class=\"form-label\">Code</label>","              <input class=\"form-control\" name=\"code\" maxlength=\"16\" required value=\"<?php echo $val('code');?>\">","              <div class=\"form-text\">e.g., KG, M, NOS (auto-uppercased)</div>","            </div>","            <div class=\"mb-3\">","              <label class=\"form-label\">Name</label>","              <input class=\"form-control\" name=\"name\" maxlength=\"64\" required value=\"<?php echo $val('name');?>\">","            </div>","            <div class=\"mb-3\">","              <label class=\"form-label\">Type</label>","              <?php $typeSel = $row['type'] ?? 'qty'; ?>","              <select class=\"form-select\" name=\"type\">","                <?php foreach (['qty','length','area','volume','weight','time','other'] as $t): ?>","                  <option value=\"<?php echo $t; ?>\" <?php echo $typeSel===$t?'selected':''; ?>>","                    <?php echo ucfirst($t); ?>","                  </option>","                <?php endforeach; ?>","              </select>","            </div>","            <div class=\"mb-3\">","              <label class=\"form-label\">Status</label>","              <?php $statusSel = $row['status'] ?? 'active'; ?>","              <select class=\"form-select\" name=\"status\">","                <option value=\"active\"  <?php echo $statusSel==='active'?'selected':''; ?>>Active</option>","                <option value=\"inactive\"<?php echo $statusSel==='inactive'?'selected':''; ?>>Inactive</option>","              </select>","            </div>","            <div class=\"d-flex gap-2\">","              <button class=\"btn btn-primary\"><?php echo $id?'Update':'Create';?></button>","              <a class=\"btn btn-outline-secondary\" href=\"uom_list.php\">Cancel</a>","            </div>","          </form>","","        </div>","      </div>","    </div>","  </div>","</div>","<script>","  document.addEventListener('input', e => {","    if (e.target.name === 'code') e.target.value = e.target.value.toUpperCase();","  });","</script>","<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/uom/uom_conversions_list.php": ["<?php","require_once __DIR__ . '/../config.php';","require_login();","require_permission('master.uom.conversion.view');","","$pdo = db();","$q = trim($_GET['q'] ?? '');","","$sql = \"","SELECT uc.id, fu.code AS from_code, tu.code AS to_code, uc.factor","FROM uom_conversions uc","JOIN uom fu ON fu.id = uc.from_uom_id","JOIN uom tu ON tu.id = uc.to_uom_id","\";","$bind = [];","if ($q !== '') {","  $sql .= \" WHERE fu.code LIKE ? OR tu.code LIKE ?\";","  $bind = [\"%$q%\",\"%$q%\"];","}","$sql .= \" ORDER BY fu.code, tu.code\";","","$stmt = $pdo->prepare($sql);","$stmt->execute($bind);","$rows = $stmt->fetchAll();","$canManage = has_permission('master.uom.conversion.manage');","?>","<!doctype html><html lang=\"en\"><head>","<meta charset=\"utf-8\"><title>UOM Conversions</title>","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","<link href=\"/styles.css\" rel=\"stylesheet\">","</head><body>","<div class=\"container py-4\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <nav aria-label=\"breadcrumb\">","      <ol class=\"breadcrumb mb-0\">","        <li class=\"breadcrumb-item\"><a href=\"uom_list.php\">UOM</a></li>","        <li class=\"breadcrumb-item active\" aria-current=\"page\">Conversions</li>","      </ol>","    </nav>","    <div class=\"d-flex gap-2\">","      <form class=\"d-flex\" method=\"get\">","        <input class=\"form-control form-control-sm\" name=\"q\" placeholder=\"Search code\" value=\"<?php echo htmlspecialchars($q);?>\">","      </form>","      <?php if ($canManage): ?>","        <a class=\"btn btn-sm btn-primary\" href=\"uom_conversions_form.php\"><i class=\"bi bi-plus-lg\"></i> Add</a>","      <?php endif; ?>","    </div>","  </div>","","  <div class=\"card shadow-sm\">","    <div class=\"card-body p-0\">","      <div class=\"table-responsive\">","        <table class=\"table table-hover align-middle mb-0\">","          <thead class=\"table-light\">","            <tr><th>From</th><th>To</th><th>Factor</th><th class=\"text-end\" style=\"width:160px;\">Actions</th></tr>","          </thead>","          <tbody>","            <?php foreach ($rows as $r): ?>","              <tr>","                <td><code><?php echo htmlspecialchars($r['from_code']);?></code></td>","                <td><code><?php echo htmlspecialchars($r['to_code']);?></code></td>","                <td><?php echo rtrim(rtrim(number_format((float)$r['factor'], 10, '.', ''), '0'), '.'); ?></td>","                <td class=\"text-end\">","                  <?php if ($canManage): ?>","                    <div class=\"btn-group btn-group-sm\">","                      <a class=\"btn btn-outline-secondary\" href=\"uom_conversions_form.php?id=<?php echo (int)$r['id'];?>\" title=\"Edit\"><i class=\"bi bi-pencil-square\"></i></a>","                      <a class=\"btn btn-outline-danger\" href=\"uom_conversions_delete.php?id=<?php echo (int)$r['id'];?>\"","                         onclick=\"return confirm('Delete this conversion?');\" title=\"Delete\"><i class=\"bi bi-trash\"></i></a>","                    </div>","                  <?php endif; ?>","                </td>","              </tr>","            <?php endforeach; if (!$rows): ?>","              <tr><td colspan=\"4\" class=\"text-center text-muted py-4\">No records.</td></tr>","            <?php endif; ?>","          </tbody>","        </table>","      </div>","    </div>","  </div>","","  <div class=\"mt-3\">","    <a class=\"btn btn-light\" href=\"uom_list.php\"><i class=\"bi bi-arrow-left\"></i> Back to UOM</a>","  </div>","</div>","<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>","</body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/uom/uom_delete.php": ["<?php","require_once __DIR__ . '/../config.php';","require_login();","require_permission('master.uom.manage');","","$id = isset($_GET['id']) ? (int)$_GET['id'] : 0;","if ($id <= 0) { header('Location: uom_list.php'); exit; }","","try {","  $stmt = db()->prepare(\"DELETE FROM uom WHERE id=?\");","  $stmt->execute([$id]);","} catch (Throwable $e) {","  // You can switch to soft delete if needed:","  // db()->prepare(\"UPDATE uom SET status='inactive' WHERE id=?\")->execute([$id]);","}","header('Location: uom_list.php'); exit;"],
"/home/u989675055/domains/emsinfra.co.in/public_html/uom/uom_list.php": ["<?php","require_once __DIR__ . '/../config.php';","require_login();","require_permission('master.uom.view');","","$pdo = db();","$q   = trim($_GET['q'] ?? '');","$sql = \"SELECT id, code, name, type, status FROM uom\";","$bind = [];","if ($q !== '') {","  $sql .= \" WHERE code LIKE ? OR name LIKE ?\";","  $bind = [\"%$q%\", \"%$q%\"];","}","$sql .= \" ORDER BY code ASC\";","$stmt = $pdo->prepare($sql);","$stmt->execute($bind);","$rows = $stmt->fetchAll();","$canManage = has_permission('master.uom.manage');","?>","<!doctype html>","<html lang=\"en\">","<head>","  <meta charset=\"utf-8\">","  <title>UOM \u2014 EMS Infra ERP</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css\" rel=\"stylesheet\">","  <link href=\"/styles.css\" rel=\"stylesheet\">","</head>","<body>","<nav class=\"navbar navbar-expand-lg bg-body-tertiary border-bottom\">","  <div class=\"container-fluid\">","    <a class=\"navbar-brand\" href=\"<?php echo app_url('dashboard.php');?>\">EMS Infra ERP</a>","    <div class=\"d-flex align-items-center gap-2\">","      <a class=\"btn btn-sm btn-outline-secondary\" href=\"<?php echo app_url('dashboard.php');?>\"><i class=\"bi bi-speedometer2\"></i> Dashboard</a>","      <a class=\"btn btn-sm btn-outline-primary\" href=\"uom_conversions_list.php\"><i class=\"bi bi-shuffle\"></i> Conversions</a>","      <?php if ($canManage): ?>","        <a class=\"btn btn-sm btn-primary\" href=\"uom_form.php\"><i class=\"bi bi-plus-circle\"></i> New UOM</a>","      <?php endif; ?>","      <a class=\"btn btn-outline-secondary btn-sm\" href=\"<?php echo app_url('logout.php');?>\"><i class=\"bi bi-box-arrow-right\"></i> Logout</a>","    </div>","  </div>","</nav>","","<div class=\"container py-4\">","  <div class=\"d-flex justify-content-between align-items-center mb-3\">","    <h5 class=\"mb-0\">Units of Measure</h5>","    <form class=\"d-flex\" method=\"get\" action=\"\">","      <input class=\"form-control form-control-sm me-2\" name=\"q\" placeholder=\"Search code or name\" value=\"<?php echo htmlspecialchars($q);?>\">","      <button class=\"btn btn-sm btn-outline-primary\"><i class=\"bi bi-search\"></i></button>","    </form>","  </div>","","  <div class=\"card shadow-sm\">","    <div class=\"card-body p-0\">","      <div class=\"table-responsive\">","        <table class=\"table align-middle table-hover mb-0\">","          <thead class=\"table-light\">","            <tr>","              <th style=\"width:100px;\">Code</th>","              <th>Name</th>","              <th style=\"width:120px;\">Type</th>","              <th style=\"width:110px;\">Status</th>","              <th style=\"width:150px;\" class=\"text-end\">Actions</th>","            </tr>","          </thead>","          <tbody>","            <?php foreach ($rows as $r): ?>","              <tr>","                <td><code><?php echo htmlspecialchars($r['code']);?></code></td>","                <td><?php echo htmlspecialchars($r['name']);?></td>","                <td><span class=\"badge text-bg-secondary\"><?php echo htmlspecialchars($r['type']);?></span></td>","                <td>","                  <span class=\"badge <?php echo $r['status']==='active'?'text-bg-success':'text-bg-secondary';?>\">","                    <?php echo htmlspecialchars(ucfirst($r['status']));?>","                  </span>","                </td>","                <td class=\"text-end\">","                  <div class=\"btn-group btn-group-sm\" role=\"group\">","                    <a class=\"btn btn-outline-secondary\" href=\"uom_form.php?id=<?php echo (int)$r['id'];?>\"","                       title=\"Edit\"><i class=\"bi bi-pencil-square\"></i></a>","                    <?php if ($canManage): ?>","                      <a class=\"btn btn-outline-danger\" href=\"uom_delete.php?id=<?php echo (int)$r['id'];?>\"","                         onclick=\"return confirm('Delete this UOM?');\" title=\"Delete\"><i class=\"bi bi-trash\"></i></a>","                    <?php endif; ?>","                  </div>","                </td>","              </tr>","            <?php endforeach; if (!$rows): ?>","              <tr><td colspan=\"5\" class=\"text-center text-muted py-4\">No records.</td></tr>","            <?php endif; ?>","          </tbody>","        </table>","      </div>","    </div>","  </div>","</div>","<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/db.php": ["<?php","/** PATH: /public_html/includes/db.php"," * PURPOSE: Central db() using ROOT /config.php first, then /includes/config.php"," * SAFE: Idempotent (won\u2019t redeclare db()) even if included multiple times."," */","declare(strict_types=1);","","// Locate config in project root first, then /includes (fallback)","$rootCfg = dirname(__DIR__) . '/config.php';","$incCfg  = __DIR__ . '/config.php';","","if (is_file($rootCfg)) {","  require_once $rootCfg;","} elseif (is_file($incCfg)) {","  require_once $incCfg;","} else {","  header('Content-Type: text/plain; charset=utf-8');","  http_response_code(500);","  echo \"CONFIG MISSING: put config.php in project root (preferred) or /includes.\\n\";","  exit;","}","","// Define db() only once, even if this file gets included twice","if (!function_exists('db')) {","  function db(): \\PDO {","    static $pdo = null;","    if ($pdo instanceof \\PDO) return $pdo;","","    foreach (['DB_HOST','DB_NAME','DB_USER','DB_PASS'] as $c) {","      if (!defined($c)) {","        header('Content-Type: text/plain; charset=utf-8');","        http_response_code(500);","        echo \"DB config constant missing: {$c}\\n\";","        exit;","      }","    }","","    $dsn = 'mysql:host=' . DB_HOST . ';dbname=' . DB_NAME . ';charset=utf8mb4';","    $pdo = new \\PDO($dsn, DB_USER, DB_PASS, [","      \\PDO::ATTR_ERRMODE            => \\PDO::ERRMODE_EXCEPTION,","      \\PDO::ATTR_DEFAULT_FETCH_MODE => \\PDO::FETCH_ASSOC,","      \\PDO::ATTR_EMULATE_PREPARES   => false,","    ]);","","    // Ensure session collation","    $pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","    $pdo->exec(\"SET collation_connection = 'utf8mb4_general_ci'\");","","    return $pdo;","  }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/StockLedgerAdapter.php": ["<?php","// includes/StockLedgerAdapter.php","require_once __DIR__ . '/db.php';","","class StockLedgerAdapter","{","    public static function mirror(PDO $pdo, array $payload): void","    {","        if (!$payload) return;","","        $txnDate     = $payload['txn_date'] ?? date('Y-m-d H:i:s');","        $txnType     = $payload['txn_type'] ?? 'NA';","        $txnNo       = $payload['txn_no'] ?? '';","        $itemId      = (int)($payload['item_id'] ?? 0);","        $warehouseId = (int)($payload['warehouse_id'] ?? 0);","        $projectId   = isset($payload['project_id']) ? (int)$payload['project_id'] : null;","        $binId       = isset($payload['bin_id']) ? (int)$payload['bin_id'] : null;","        $batchId     = isset($payload['batch_id']) ? (int)$payload['batch_id'] : null;","        $qty         = (float)($payload['qty'] ?? 0);","        $unitCost    = isset($payload['unit_cost']) ? (float)$payload['unit_cost'] : 0.0;","        $uomId       = isset($payload['uom_id']) ? (int)$payload['uom_id'] : null;","","        // accept either ref_table or ref_entity for compatibility","        $refTable    = $payload['ref_table'] ?? ($payload['ref_entity'] ?? null);","        $refId       = isset($payload['ref_id']) ? (int)$payload['ref_id'] : null;","        $createdBy   = isset($payload['created_by']) ? (int)$payload['created_by'] : null;","","        if ($qty == 0 || $itemId <= 0 || $warehouseId <= 0) {","            return;","        }","","        // For OUT types, prefer WA rate from stock_avg if available","        $rate = $unitCost;","        if (in_array(($payload['txn_type'] ?? ''), ['ADJ','GP','ISS'], true)) {","            $q = $pdo->prepare('SELECT avg_cost FROM stock_avg WHERE item_id = :i AND warehouse_id = :w');","            $q->execute([':i' => $itemId, ':w' => $warehouseId]);","            $r = $q->fetch(PDO::FETCH_ASSOC);","            if ($r && isset($r['avg_cost']) && (float)$r['avg_cost'] > 0) {","                $rate = (float)$r['avg_cost'];","            }","        }","","        $stmt = $pdo->prepare('INSERT INTO stock_ledger","            (txn_date, txn_type, txn_no, item_id, warehouse_id, project_id, bin_id, batch_id,","             qty, rate, uom_id, ref_table, ref_id, created_by, created_at)","            VALUES","            (:txn_date, :txn_type, :txn_no, :item_id, :warehouse_id, :project_id, :bin_id, :batch_id,","             :qty, :rate, :uom_id, :ref_table, :ref_id, :created_by, NOW(6))');","","        $stmt->execute([","            ':txn_date'     => $txnDate,","            ':txn_type'     => $txnType,","            ':txn_no'       => $txnNo,","            ':item_id'      => $itemId,","            ':warehouse_id' => $warehouseId,","            ':project_id'   => $projectId,","            ':bin_id'       => $binId,","            ':batch_id'     => $batchId,","            ':qty'          => $qty,","            ':rate'         => $rate,","            ':uom_id'       => $uomId,","            ':ref_table'    => $refTable,","            ':ref_id'       => $refId,","            ':created_by'   => $createdBy,","        ]);","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/rbac.php": ["<?php","/** PATH: /public_html/includes/rbac.php"," * PURPOSE: Permission checks using permissions.code"," */","declare(strict_types=1);","if (session_status() === PHP_SESSION_NONE) session_start();","","if (!function_exists('has_permission')) {","  function has_permission(string $permCode): bool {","    $u = current_user();","    if (!$u) return false;","","    // Super Admin shortcut: role_id = 1","    if (!empty($u['role_ids']) && in_array(1, $u['role_ids'], true)) return true;","","    if (!isset($_SESSION['permission_codes']) || !is_array($_SESSION['permission_codes'])) {","      $pdo = db();","      $stmt = $pdo->prepare(\"","        SELECT DISTINCT p.code","        FROM user_roles ur","        JOIN role_permissions rp ON rp.role_id = ur.role_id","        JOIN permissions      p  ON p.id = rp.permission_id","        WHERE ur.user_id = ?","      \");","      $stmt->execute([$u['id']]);","      $_SESSION['permission_codes'] = array_column($stmt->fetchAll(PDO::FETCH_ASSOC), 'code');","    }","    return in_array($permCode, $_SESSION['permission_codes'], true);","  }","}","","if (!function_exists('require_permission')) {","  function require_permission(string $permCode): void {","    if (!has_permission($permCode)) {","      http_response_code(403);","      header('Content-Type: text/plain; charset=utf-8');","      echo \"403 Forbidden - missing permission: {$permCode}\\n\";","      exit;","    }","  }","}","","if (!function_exists('rbac_refresh')) {","  function rbac_refresh(): void { unset($_SESSION['permission_codes']); }","}","","// --- RBAC compatibility shim ---","// Some modules call rbac_can($perm), others use has_permission()/user_can().","// Define rbac_can() only if it doesn't already exist.","if (!function_exists('rbac_can')) {","  function rbac_can(string $perm): bool {","    if (function_exists('has_permission')) {","      return has_permission($perm);","    }","    if (function_exists('user_can')) {","      return user_can($perm);","    }","    // Fallback: if no checker exists, allow (or set to false if you prefer fail-closed)","    return true;","  }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/mailer.php": ["<?php","/** Simple mailer: SMTP if configured, else mail() */","function send_mail(string $to, string $subject, string $html, string $text='') {","  // Configure in a .php you don't commit (or .env if you have a loader)","  $smtp_host = getenv('EMS_SMTP_HOST') ?: '';   // e.g., smtp.yourhost.com","  $smtp_port = (int)(getenv('EMS_SMTP_PORT') ?: 587);","  $smtp_user = getenv('EMS_SMTP_USER') ?: '';","  $smtp_pass = getenv('EMS_SMTP_PASS') ?: '';","  $from      = getenv('EMS_MAIL_FROM') ?: 'no-reply@yourdomain.tld';","  $fromName  = getenv('EMS_MAIL_NAME') ?: 'EMS ERP';","","  if ($smtp_host && $smtp_user && $smtp_pass) {","    // Lightweight SMTP without composer: use PHP's fsockopen if PHPMailer not available.","    // If your host allows PHPMailer, prefer that (vendor/autoload.php).","    $headers = \"From: {$fromName} <{$from}>\\r\\n\".","               \"MIME-Version: 1.0\\r\\n\".","               \"Content-Type: text/html; charset=UTF-8\\r\\n\";","    // Many shared hosts require authenticated SMTP libraries; if not available, use mail() as fallback:","    return mail($to, '=?UTF-8?B?'.base64_encode($subject).'?=', $html, $headers);","  } else {","    $headers = \"From: {$fromName} <{$from}>\\r\\n\".","               \"MIME-Version: 1.0\\r\\n\".","               \"Content-Type: text/html; charset=UTF-8\\r\\n\";","    return mail($to, '=?UTF-8?B?'.base64_encode($subject).'?=', $html, $headers);","  }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/csrf.php": ["<?php","/** PATH: /public_html/includes/csrf.php */","declare(strict_types=1);","","/* ---------- Session helper ---------- */","function _csrf_ensure_session(): void {","    if (session_status() === PHP_SESSION_NONE) {","        session_start();","    }","}","","/* ---------- Token generator (single source of truth) ---------- */","if (!function_exists('csrf_token')) {","    function csrf_token(): string {","        _csrf_ensure_session();","        if (empty($_SESSION['csrf_token'])) {","            $_SESSION['csrf_token'] = bin2hex(random_bytes(32));","        }","        return $_SESSION['csrf_token'];","    }","}","","/* ---------- Hidden input helpers (both names supported) ---------- */","if (!function_exists('csrf_field')) {","    // Standard name: csrf_token","    function csrf_field(): string {","        return '<input type=\"hidden\" name=\"csrf_token\" value=\"' . htmlspecialchars(csrf_token(), ENT_QUOTES, 'UTF-8') . '\">';","    }","}","","if (!function_exists('csrf_hidden_input')) {","    // Legacy/alt helper; emits the same token but with legacy name \"_csrf\"","    function csrf_hidden_input(): string {","        return \"<input type='hidden' name='_csrf' value='\" . htmlspecialchars(csrf_token(), ENT_QUOTES, 'UTF-8') . \"'>\";","    }","}","","/* ---------- Validator that accepts either field name ---------- */","if (!function_exists('csrf_require_token')) {","    function csrf_require_token(): void {","        _csrf_ensure_session();","","        if (($_SERVER['REQUEST_METHOD'] ?? 'GET') !== 'POST') {","            return; // Only enforce on POST","        }","","        // Accept either \"csrf_token\" (preferred) or \"_csrf\" (legacy)","        $sent = (string)($_POST['csrf_token'] ?? $_POST['_csrf'] ?? '');","","        $ok = $sent !== '' && hash_equals(csrf_token(), $sent);","        if (!$ok) {","            http_response_code(403);","            header('Content-Type: text/plain; charset=utf-8');","            exit(\"Invalid CSRF token\");","        }","    }","}","","/* ---------- Optional: explicit verifier with 419 status (if used elsewhere) ---------- */","if (!function_exists('verify_csrf_or_die')) {","    function verify_csrf_or_die(): void {","        _csrf_ensure_session();","        if (($_SERVER['REQUEST_METHOD'] ?? 'GET') !== 'POST') return;","        $sent = (string)($_POST['csrf_token'] ?? $_POST['_csrf'] ?? '');","        $ok = $sent !== '' && hash_equals(csrf_token(), $sent);","        if (!$ok) {","            http_response_code(419);","            header('Content-Type: text/plain; charset=utf-8');","            exit(\"CSRF token mismatch. Please reload the page and try again.\");","        }","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/helpers.php": ["<?php","declare(strict_types=1);","if (!function_exists('h')) {","  function h(?string $v): string { return htmlspecialchars((string)$v, ENT_QUOTES, 'UTF-8'); }","}","if (!function_exists('set_flash')) {","  function set_flash(string $type, string $msg): void {","    if (session_status() !== PHP_SESSION_ACTIVE) session_start();","    $_SESSION['flash'][] = ['type' => $type, 'msg' => $msg];","  }","}","if (!function_exists('render_flash')) {","  function render_flash(): void {","    if (session_status() !== PHP_SESSION_ACTIVE) session_start();","    if (empty($_SESSION['flash'])) return;","    foreach ($_SESSION['flash'] as $f) {","      $type = $f['type'] ?? 'info'; $msg = $f['msg'] ?? '';","      echo '<div class=\"alert alert-' . h($type) . ' alert-dismissible fade show\" role=\"alert\">'","         . h($msg)","         . '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>'","         . '</div>';","    }","    unset($_SESSION['flash']);","  }","}","// --- Flash message helper (shim) ---","if (!function_exists('flash')) {","    /**","     * Set or get flash messages.","     * flash($msg, $type)   \u2192 store message","     * flash()              \u2192 fetch & clear all messages","     */","    function flash(string $msg=null, string $type='info') {","        if (session_status() !== PHP_SESSION_ACTIVE) {","            session_start();","        }","        if ($msg !== null) {","            $_SESSION['flash'][] = ['msg'=>$msg,'type'=>$type];","            return;","        }","        $out = $_SESSION['flash'] ?? [];","        unset($_SESSION['flash']);","        return $out;","    }","}","/** PATH: /public_html/includes/helpers.php */","","","/**"," * Escape for HTML output (XSS safe)."," */","if (!function_exists('h')) {","    function h(?string $str): string {","        return htmlspecialchars((string)$str, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8');","    }","}","","/**"," * Flash messages (store in session)."," */","if (!function_exists('flash')) {","    function flash(string $msg=null, string $type='info') {","        if (session_status() !== PHP_SESSION_ACTIVE) {","            session_start();","        }","        if ($msg !== null) {","            $_SESSION['flash'][] = ['msg'=>$msg,'type'=>$type];","            return;","        }","        $out = $_SESSION['flash'] ?? [];","        unset($_SESSION['flash']);","        return $out;","    }","}","","/**"," * Redirect to another URL and stop execution."," */","if (!function_exists('redirect')) {","    function redirect(string $url): void {","        if (!headers_sent()) {","            header(\"Location: \".$url, true, 302);","        }","        exit;","    }","}","","/**"," * Convenience for current user id (if you already store in session)."," */","if (!function_exists('current_user_id')) {","    function current_user_id(): ?int {","        if (session_status() !== PHP_SESSION_ACTIVE) {","            session_start();","        }","        return isset($_SESSION['user_id']) ? (int)$_SESSION['user_id'] : null;","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/process_qty.php": ["<?php","// /includes/process_qty.php","// Safe process-qty evaluator + helper that reads your rules and component dims.","// Requires: $pdo from /includes/db.php","declare(strict_types=1);","","/**"," * Very small safe evaluator:"," * - Replaces variable names (a\u2013z, 0\u20139, _) with numeric values you pass"," * - Supports + - * / and parentheses"," * - No eval(), no functions"," */","function pq_eval(string $expr, array $vars): float {","  $replaced = preg_replace_callback('/[A-Za-z_][A-Za-z0-9_]*/', function($m) use ($vars) {","    $k = $m[0];","    if (!array_key_exists($k, $vars)) throw new RuntimeException(\"Missing var: $k\");","    $v = $vars[$k];","    if (!is_numeric($v)) throw new RuntimeException(\"Non-numeric var: $k\");","    return (string)(0 + $v);","  }, $expr);","","  $tokens = preg_split('/(?<=[+\\-*\\/\\(\\)])|(?=[+\\-*\\/\\(\\)])/', $replaced, -1, PREG_SPLIT_NO_EMPTY);","  $prec = ['+' => 1, '-' => 1, '*' => 2, '/' => 2];","","  $out = []; $ops = [];","  foreach ($tokens as $t) {","    if (is_numeric($t)) { $out[] = (float)$t; continue; }","    if ($t === '(') { $ops[] = $t; continue; }","    if ($t === ')') {","      while ($ops && end($ops) !== '(') $out[] = array_pop($ops);","      if (!$ops || array_pop($ops) !== '(') throw new RuntimeException(\"Mismatched parentheses\");","      continue;","    }","    if (isset($prec[$t])) {","      while ($ops && isset($prec[end($ops)]) && $prec[end($ops)] >= $prec[$t]) $out[] = array_pop($ops);","      $ops[] = $t; continue;","    }","    throw new RuntimeException(\"Bad token: $t\");","  }","  while ($ops) {","    $op = array_pop($ops);","    if ($op === '(') throw new RuntimeException(\"Mismatched parentheses\");","    $out[] = $op;","  }","  $st = [];","  foreach ($out as $tok) {","    if (!is_string($tok)) { $st[] = $tok; continue; }","    $b = array_pop($st); $a = array_pop($st);","    $st[] = match($tok) {","      '+' => $a + $b,","      '-' => $a - $b,","      '*' => $a * $b,","      '/' => ($b == 0 ? 0.0 : $a / $b),","      default => throw new RuntimeException(\"Bad op\")","    };","  }","  if (count($st) !== 1) throw new RuntimeException(\"Eval error\");","  return (float)$st[0];","}","","/**"," * Compute process-qty for an existing routing_op id."," * Uses: processes.code => process_qty_rules.operation_code"," * Pulls dims from bom_components (length_mm, width_mm, thickness_mm) when available."," * Returns: [qty(float), uom_id(int), inputs(array)] or null if no rule."," */","function pq_compute_for_op(PDO $pdo, int $routing_op_id): ?array {","  $sql = \"SELECT ro.id, ro.bom_component_id, ro.process_id, p.code AS process_code,","                 bc.length_mm, bc.width_mm, bc.thickness_mm","          FROM routing_ops ro","          JOIN processes p ON p.id=ro.process_id","          LEFT JOIN bom_components bc ON bc.id=ro.bom_component_id","          WHERE ro.id=?\";","  $st = $pdo->prepare($sql); $st->execute([$routing_op_id]);","  $row = $st->fetch(PDO::FETCH_ASSOC);","  if (!$row) return null;","","  // Find matching rule by process code","  $q = $pdo->prepare(\"SELECT id, expr, result_uom_id, required_vars_json","                      FROM process_qty_rules WHERE operation_code=? LIMIT 1\");","  $q->execute([$row['process_code']]);","  $rule = $q->fetch(PDO::FETCH_ASSOC);","  if (!$rule) return null;","","  $req = json_decode($rule['required_vars_json'] ?? '[]', true) ?: [];","  $vars = [];","  foreach ($req as $k) {","    $vars[$k] = match($k) {","      'length_mm'    => (float)($row['length_mm'] ?? 0),","      'width_mm'     => (float)($row['width_mm'] ?? 0),","      'thickness_mm' => (float)($row['thickness_mm'] ?? 0),","      default        => 0.0","    };","  }","  $qty = pq_eval($rule['expr'], $vars);","  return [$qty, (int)$rule['result_uom_id'], $vars];","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/lib_iam_provisioning.php": ["<?php","/** PATH: /public_html/includes/lib_iam_provisioning.php */","declare(strict_types=1);","","require_once __DIR__ . '/db.php';","require_once __DIR__ . '/rbac.php';","","/** Evaluate rules for an employee and return preview data. */","function iam_preview_for_employee(PDO $pdo, int $employeeId): array {","    $empStmt = $pdo->prepare(\"SELECT e.*, d.name AS dept_name","                              FROM employees e","                              LEFT JOIN departments d ON d.id = e.dept_id","                              WHERE e.id = ?\");","    $empStmt->execute([$employeeId]);","    $employee = $empStmt->fetch(PDO::FETCH_ASSOC);","    if (!$employee) { throw new RuntimeException('employee not found'); }","","    $rules = $pdo->query(\"SELECT * FROM iam_rule WHERE enabled = 1 ORDER BY priority ASC, id ASC\")->fetchAll(PDO::FETCH_ASSOC);","","    $matchedRules = [];","    $profiles = [];","    $roles = [];","    $requiresApproval = false;","    $flowCode = null;","","    foreach ($rules as $r) {","        if (iam_rule_matches($r, $employee)) {","            $matchedRules[] = $r['code'];","            $gr = json_decode($r['grants_json'] ?? '{}', true);","            foreach (($gr['profiles'] ?? []) as $pcode) { $profiles[] = $pcode; }","            foreach (($gr['roles'] ?? []) as $rcode)    { $roles[] = $rcode; }","            if ((int)$r['requires_approval'] === 1) {","                $requiresApproval = true;","                if (!$flowCode && !empty($r['approval_flow_code'])) $flowCode = $r['approval_flow_code'];","            }","        }","    }","","    return [","        'employee'          => $employee,","        'matched_rules'     => array_values(array_unique($matchedRules)),","        'profiles'          => array_values(array_unique($profiles)),","        'roles'             => array_values(array_unique($roles)),  // role codes","        'requires_approval' => $requiresApproval,","        'flow_code'         => $flowCode ?: 'std-manager-appowner',","    ];","}","","/** Simple condition evaluator supporting eq,in,gte,lte arrays of clauses */","function iam_rule_matches(array $rule, array $emp): bool {","    $cond = json_decode($rule['condition_json'] ?? '[]', true);","    if (!$cond || !is_array($cond)) return false;","    $ok = true;","    foreach ($cond as $op => $clauses) {","        if (!is_array($clauses)) continue;","        foreach ($clauses as $clause) {","            $field = $clause['field'] ?? null;","            $value = $clause['value'] ?? null;","            $empVal = $emp[$field] ?? null;","            switch ($op) {","                case 'eq':  $ok = $ok && ($empVal == $value); break;","                case 'in':  $ok = $ok && (is_array($value) && in_array($empVal, $value, true)); break;","                case 'gte': $ok = $ok && (is_numeric($empVal) && (float)$empVal >= (float)$value); break;","                case 'lte': $ok = $ok && (is_numeric($empVal) && (float)$empVal <= (float)$value); break;","                default: /* ignore */ break;","            }","            if (!$ok) return false;","        }","    }","    return $ok;","}","","/** Ensure user exists for employee and assign roles by role codes; returns user_id */","function iam_apply_roles_for_employee(PDO $pdo, int $employeeId, array $roleCodes): int {","    $u = $pdo->prepare(\"SELECT id FROM users WHERE employee_id=? LIMIT 1\");","    $u->execute([$employeeId]);","    $uid = $u->fetchColumn();","","    if (!$uid) {","        $emp = $pdo->prepare(\"SELECT * FROM employees WHERE id=?\");","        $emp->execute([$employeeId]);","        $employee = $emp->fetch(PDO::FETCH_ASSOC);","        if (!$employee) throw new RuntimeException('employee not found');","","        $username = strtolower(preg_replace('/[^a-z0-9]+/i','', ($employee['first_name'] ?? 'user').'.'.($employee['last_name'] ?? '')));","        $name     = trim(($employee['first_name'] ?? '').' '.($employee['last_name'] ?? ''));","        $email    = $employee['email'] ?? ($username.'@example.local');","        $pwd      = password_hash(bin2hex(random_bytes(6)), PASSWORD_BCRYPT);","","        $ins = $pdo->prepare(\"INSERT INTO users (employee_id, username, name, email, password, status, created_at, updated_at)","                              VALUES (?, ?, ?, ?, ?, 'active', NOW(), NOW())\");","        $ins->execute([$employeeId, $username, $name, $email, $pwd]);","        $uid = (int)$pdo->lastInsertId();","    }","","    if ($roleCodes) {","        $in = str_repeat('?,', count($roleCodes)-1) . '?';","        $st = $pdo->prepare(\"SELECT id FROM roles WHERE code IN ($in)\");","        $st->execute($roleCodes);","        $roleIds = $st->fetchAll(PDO::FETCH_COLUMN);","        $ins = $pdo->prepare(\"INSERT IGNORE INTO user_roles (user_id, role_id) VALUES (?, ?)\");","        foreach ($roleIds as $rid) $ins->execute([(int)$uid, (int)$rid]);","    }","","    return (int)$uid;","}","","/** Create provision_request + (if needed) approval tasks; auto-apply if no approval required. */","function iam_commit_provision(PDO $pdo, int $employeeId, int $requestedBy): array {","    $preview   = iam_preview_for_employee($pdo, $employeeId);","    $roleCodes = $preview['roles'];","    $profiles  = $preview['profiles'];","    $requires  = $preview['requires_approval'];","    $flowCode  = $preview['flow_code'];","","    $st = $pdo->prepare(\"INSERT INTO provision_request (employee_id, requested_by, status, proposed_profiles, proposed_roles, flow_code, current_step, created_at, updated_at)","                         VALUES (?, ?, ?, ?, ?, ?, ?, NOW(), NOW())\");","    $status = $requires ? 'pending_approval' : 'approved';","    $currentStep = $requires ? 1 : null;","    $st->execute([$employeeId, $requestedBy, $status, json_encode($profiles), json_encode($roleCodes), $flowCode, $currentStep]);","    $prId = (int)$pdo->lastInsertId();","","    if ($requires) {","        // Step 1 = manager_of(employee)","        $emp = $pdo->prepare(\"SELECT manager_employee_id FROM employees WHERE id=?\");","        $emp->execute([$employeeId]);","        $mgrEmpId = (int)$emp->fetchColumn();","        if ($mgrEmpId) {","            $u = $pdo->prepare(\"SELECT id FROM users WHERE employee_id=?\");","            $u->execute([$mgrEmpId]);","            $approverUserId = (int)$u->fetchColumn();","            if ($approverUserId) {","                $pdo->prepare(\"INSERT INTO provision_approval (provision_request_id, step_no, approver_user_id)","                               VALUES (?, 1, ?)\")","                    ->execute([$prId, $approverUserId]);","            }","        }","        return ['status'=>'pending_approval', 'provision_request_id'=>$prId];","    }","","    iam_apply_roles_for_employee($pdo, $employeeId, $roleCodes);","    return ['status'=>'approved', 'provision_request_id'=>$prId];","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/audit.php": ["<?php","/** PATH: /public_html/includes/audit.php */","declare(strict_types=1);","","if (!function_exists('audit_log_add')) {","    function audit_log_add(","        PDO $pdo,","        int $actorId,","        string $entity,","        int $entityId,","        string $action,","        array|string|null $before = null,","        array|string|null $after  = null","    ): void {","        $stmt = $pdo->prepare(","            \"INSERT INTO audit_log (actor_id, entity_type, entity_id, action, before_json, after_json, ip_addr, created_at)","             VALUES (?, ?, ?, ?, ?, ?, ?, NOW())\"","        );","        $ip = $_SERVER['REMOTE_ADDR'] ?? null;","        $bj = is_array($before) ? json_encode($before, JSON_UNESCAPED_UNICODE) : ($before ?? null);","        $aj = is_array($after)  ? json_encode($after,  JSON_UNESCAPED_UNICODE) : ($after  ?? null);","        $stmt->execute([$actorId, $entity, $entityId, $action, $bj, $aj, $ip]);","    }","}","","if (!function_exists('audit_log')) {","    function audit_log(","        PDO $pdo,","        string $entity,","        string $action,","        ?int $row_id = null,","        array|string|null $payload = null","    ): void {","        $actorId = (int)($_SESSION['user_id'] ?? 0);","        try {","            audit_log_add($pdo, $actorId, $entity, (int)($row_id ?? 0), $action, null, $payload);","        } catch (Throwable $e) {","            error_log(sprintf(","                '[AUDIT_SHIM_FAIL] user=%d entity=%s action=%s row_id=%s err=%s',","                $actorId, $entity, $action, var_export($row_id, true), $e->getMessage()","            ));","        }","    }","}","// intentionally no closing \"?>\""],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/org.php": ["<?php","/** PATH: /public_html/includes/org.php */","declare(strict_types=1);","","require_once __DIR__ . '/db.php';","","function org_profile(): array {","  static $cache = null;","  if ($cache !== null) return $cache;","  $pdo = db();","  $row = $pdo->query(\"SELECT * FROM org_profile WHERE id=1\")->fetch(PDO::FETCH_ASSOC) ?: [];","  // sane defaults if row missing","  $row += [","    'legal_name' => 'Your Company Pvt Ltd',","    'address_line1' => '', 'address_line2' => '', 'city' => '',","    'state' => '', 'state_code' => '', 'pincode' => '',","    'gstin' => '', 'phone' => '', 'email' => '',","  ];","  return $cache = $row;","}","","/**"," * Decide GST split based on place-of-supply vs org state."," * @return array{mode:string, cgst:float, sgst:float, igst:float}"," */","function gst_split(float $totalTaxAmount, string $placeState): array {","  $org = org_profile();","  $isIntra = (strcasecmp(trim($placeState), trim((string)$org['state'])) === 0);","  if ($isIntra) {","    $half = round($totalTaxAmount / 2, 2);","    return ['mode' => 'intra', 'cgst' => $half, 'sgst' => $half, 'igst' => 0.00];","    // If you need per-line exactness, compute at line level instead.","  } else {","    return ['mode' => 'inter', 'cgst' => 0.00, 'sgst' => 0.00, 'igst' => round($totalTaxAmount, 2)];","  }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/Availability.php": ["<?php","// includes/Availability.php","// Computes on-hand and available (on-hand minus reservations), using your existing tables.","// - Signs GRN/GPR as IN, ISS/GP as OUT.","// - Signs TRN by looking at stock_transfers header (from_warehouse_id/to_warehouse_id).","// - ADJ is signed via stock_adjustments.mode when present.","","require_once __DIR__ . '/db.php';","","class Availability","{","    public static function onhand(PDO $pdo, int $itemId, int $warehouseId): float","    {","        $sql = \"","            SELECT COALESCE(SUM(","                CASE","                    WHEN m.txn_type IN ('GRN','GPR') THEN  m.qty","                    WHEN m.txn_type IN ('ISS','GP')  THEN -m.qty","                    WHEN m.txn_type =  'TRN' THEN","                         CASE","                           WHEN st.id IS NOT NULL AND st.from_warehouse_id = m.warehouse_id THEN -m.qty","                           WHEN st.id IS NOT NULL AND st.to_warehouse_id   = m.warehouse_id THEN  m.qty","                           ELSE 0","                         END","                    WHEN m.txn_type =  'ADJ' THEN","                         CASE sa.mode WHEN 'IN' THEN m.qty WHEN 'OUT' THEN -m.qty ELSE 0 END","                    ELSE 0","                END","            ), 0) AS onhand","            FROM stock_moves m","            LEFT JOIN stock_transfers st","              ON (m.ref_entity='stock_transfers' AND st.id=m.ref_id)","            LEFT JOIN stock_adjustments sa","              ON (m.ref_entity='stock_adjustments' AND sa.id=m.ref_id)","            WHERE m.item_id = :i AND m.warehouse_id = :w","        \";","        $st = $pdo->prepare($sql);","        $st->execute([':i'=>$itemId, ':w'=>$warehouseId]);","        return (float)$st->fetchColumn();","    }","","    public static function reserved(PDO $pdo, int $itemId, int $warehouseId): float","    {","        $sql = \"SELECT COALESCE(SUM(qty),0) FROM item_reservations WHERE item_id=:i AND warehouse_id=:w\";","        $st = $pdo->prepare($sql);","        $st->execute([':i'=>$itemId, ':w'=>$warehouseId]);","        return (float)$st->fetchColumn();","    }","","    public static function available(PDO $pdo, int $itemId, int $warehouseId): float","    {","        return self::onhand($pdo, $itemId, $warehouseId) - self::reserved($pdo, $itemId, $warehouseId);","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/mailer_helper.php": ["<?php","declare(strict_types=1);","require_once __DIR__ . '/db.php';","","function app_mail_send(string $toEmail, string $toName, string $subject, string $htmlBody): bool {","  $pdo = db();","  $cfg = $pdo->query(\"SELECT * FROM mailer_settings WHERE id=1\")->fetch(PDO::FETCH_ASSOC) ?: [];","  $fromEmail = $cfg['from_email'] ?? null;","  $fromName  = $cfg['from_name']  ?? 'ERP';","","  if (($cfg['driver'] ?? 'mail') === 'smtp' && class_exists('PHPMailer\\\\PHPMailer\\\\PHPMailer')) {","    $mail = new PHPMailer\\PHPMailer\\PHPMailer(true);","    try {","      $mail->isSMTP();","      $mail->Host = (string)($cfg['smtp_host'] ?? '');","      $mail->Port = (int)($cfg['smtp_port'] ?? 587);","      $sec = (string)($cfg['smtp_secure'] ?? '');","      if ($sec==='tls' || $sec==='ssl') $mail->SMTPSecure = $sec;","      $mail->SMTPAuth = !empty($cfg['smtp_user']);","      if ($mail->SMTPAuth) { $mail->Username = (string)$cfg['smtp_user']; $mail->Password = (string)$cfg['smtp_pass']; }","      $mail->setFrom($fromEmail ?: 'no-reply@example.com', $fromName);","      if (!empty($cfg['reply_to_email'])) $mail->addReplyTo($cfg['reply_to_email'], $cfg['reply_to_name'] ?? '');","      $mail->addAddress($toEmail, $toName);","      $mail->isHTML(true); $mail->Subject = $subject; $mail->Body = $htmlBody;","      return $mail->send();","    } catch (\\Throwable $e) {","      // fall back to mail()","    }","  }","  $headers = \"MIME-Version: 1.0\\r\\nContent-type:text/html;charset=UTF-8\\r\\n\";","  if ($fromEmail) $headers .= \"From: {$fromEmail}\\r\\n\";","  return @mail($toEmail, $subject, $htmlBody, $headers);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/bootstrap.php": ["<?php","declare(strict_types=1);","","if (session_status() !== PHP_SESSION_ACTIVE) session_start();","","require_once __DIR__ . '/config.php';","require_once __DIR__ . '/errors.php';","require_once __DIR__ . '/helpers.php';","require_once __DIR__ . '/db.php';","require_once __DIR__ . '/rbac.php';","require_once __DIR__ . '/csrf.php';","","// Set sane defaults","date_default_timezone_set('Asia/Kolkata');","mb_internal_encoding('UTF-8');","","// Strict PDO errors as exceptions (done inside db.php)"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/auth.php": ["<?php","/** PATH: /public_html/includes/auth.php */","declare(strict_types=1);","","if (session_status() !== PHP_SESSION_ACTIVE) session_start();","","require_once __DIR__ . '/db.php';","require_once __DIR__ . '/rbac.php';","","/** -----------------------------"," * Minimal session-based auth API"," * ----------------------------- */","function current_user(): ?array { return $_SESSION['user'] ?? null; }","","function is_logged_in(): bool { return current_user() !== null; }","","function require_login(): void {","  if (!is_logged_in()) {","    // Keep your existing app_url() usage as-is","    header('Location: ' . app_url('login.php'));","    exit;","  }","}","","/**"," * Log the user in and harden the session."," * - Preserves your behavior"," * - Also sets $_SESSION['user_id'] if available"," * - Clears any cached permissions (both styles)"," */","function login_user(array $user): void {","  // never store hashes in session","  if (array_key_exists('password', $user)) {","    unset($user['password']);","  }","","  // set both shapes so all modules work","  if (isset($user['id'])) {","    $_SESSION['user_id'] = (int)$user['id'];","  }","  $_SESSION['user'] = $user;","","  // clear any cached permission sets (both caches used across code)","  unset($_SESSION['permissions'], $_SESSION['permission_codes']);","","  // rotate session id","  $_SESSION['regenerated_at'] = time();","  session_regenerate_id(true);","}","","/** Current user ID helper (kept exactly as you had it, with both session shapes) */","function current_user_id(): ?int {","  if (isset($_SESSION['user_id'])) return (int)$_SESSION['user_id'];","  if (isset($_SESSION['user']) && is_array($_SESSION['user']) && isset($_SESSION['user']['id'])) {","    return (int)$_SESSION['user']['id'];","  }","  return null;","}","","/**"," * Compatibility shim: user_has_permission()"," * - Delegates to your rbac.php -> has_permission() when available"," * - Else falls back to session-cached arrays (no DB calls; no load_permissions())"," * - Leaves RBAC logic untouched"," */","if (!function_exists('user_has_permission')) {","  function user_has_permission(string $code): bool {","    if (function_exists('has_permission')) {","      return has_permission($code); // use your RBAC's logic & cache (incl. super admin shortcut)","    }","    // Fallback to cached arrays if sidebar/layouts rely on them","    $perms = $_SESSION['permission_codes'] ?? $_SESSION['permissions'] ?? [];","    return is_array($perms) && in_array($code, $perms, true);","  }","}","","/**"," * Logout: clear session + cached permissions (kept behavior, just also clears both caches)"," */","function logout_user(): void {","  // clear caches","  unset($_SESSION['permissions'], $_SESSION['permission_codes']);","","  $_SESSION = [];","  if (ini_get('session.use_cookies')) {","    $p = session_get_cookie_params();","    setcookie(session_name(), '', time()-42000, $p['path'], $p['domain'] ?? '', (bool)$p['secure'], (bool)$p['httponly']);","  }","  session_destroy();","}","","/**"," * Optional compatibility: define require_permission only if RBAC didn't."," * Delegates to user_has_permission() to avoid changing your rbac logic."," */","if (!function_exists('require_permission')) {","  function require_permission(string $code): void {","    require_login();","    if (!user_has_permission($code)) {","      http_response_code(403);","      header('Content-Type: text/plain; charset=utf-8');","      echo \"403 Forbidden - missing permission: {$code}\\n\";","      exit;","    }","  }","}","","/** Optional helper: refresh permission caches (use after role/permission changes) */","if (!function_exists('rbac_refresh')) {","  function rbac_refresh(): void {","    unset($_SESSION['permissions'], $_SESSION['permission_codes']);","  }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/MeasurementEngine.php": ["","<?php","declare(strict_types=1);","","namespace Coupler;","use RuntimeException;","","final class MeasurementEngine","{","    public function __construct(private RuleRepo $repo) {}","","    /** @param array $inputs e.g. ['L_mm'=>3000,'W_mm'=>1500,'Thk_mm'=>12,'Qty'=>2,'wt_per_m'=>23.4] */","    public function compute(string $category, array $inputs): array","    {","        $rule = $this->repo->getActiveRuleSet($category, 'measurement');","        if (!$rule) throw new RuntimeException(\"No active measurement rule for $category\");","        $expr = $rule['expression'] ?? '';","        $params = $rule['params_json'] ?? [];","        $ctx = array_merge($params, $inputs);","        $vars = Expression::evaluate($expr, $ctx);","        if (!array_key_exists('acc_qty', $vars)) {","            throw new RuntimeException(\"Rule for $category did not set acc_qty\");","        }","        return ['acc_qty' => (float)$vars['acc_qty'], 'debug' => $vars];","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/AllocatorGuard.php": ["","<?php","declare(strict_types=1);","namespace Coupler;","","final class AllocatorGuard","{","    /** Ensure lot owner matches the intended consumer (job/customer) policy. */","    public static function canIssue(array $lotRow, ?int $jobCustomerId, string $policy='strict'): bool","    {","        $ownerType = $lotRow['owner_type'] ?? 'company';","        $ownerId   = isset($lotRow['owner_id']) ? (int)$lotRow['owner_id'] : null;","","        if ($ownerType === 'company') {","            return true; // company material can go to any job","        }","        if ($ownerType === 'customer') {","            if ($policy === 'strict') {","                return $jobCustomerId !== null && $ownerId === (int)$jobCustomerId;","            }","            // 'warn' policy: allow but flag","            return true;","        }","        if ($ownerType === 'vendor_foc') {","            // treat as company once received","            return true;","        }","        return false;","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/Ownership.php": ["","<?php","declare(strict_types=1);","namespace Coupler;","","final class Ownership","{","    public const COMPANY   = 'company';","    public const CUSTOMER  = 'customer';","    public const VENDOR_FOC= 'vendor_foc';","","    /** Validate GRN owner selection and map to doc_type. */","    public static function mapGrnOwner(array $payload): array","    {","        $mode = $payload['owner_mode'] ?? 'company'; // ui: company|customer|vendor_foc","        $out = [","            'owner_type' => $mode,","            'owner_id'   => null,","            'doc_type'   => 'PO-GRN',","            'foc_policy' => null,","        ];","","        if ($mode === self::COMPANY) {","            $out['doc_type'] = 'PO-GRN';","        } elseif ($mode === self::CUSTOMER) {","            $out['doc_type'] = 'PARTY-IN';","            $out['owner_id'] = isset($payload['customer_id']) ? (int)$payload['customer_id'] : null;","            if (empty($out['owner_id'])) throw new \\RuntimeException(\"Customer is required for PARTY-IN\");","        } elseif ($mode === self::VENDOR_FOC) {","            $out['doc_type'] = 'FOC-IN';","            $pol = $payload['foc_policy'] ?? 'zero'; // zero|fair_value|standard","            if (!in_array($pol, ['zero','fair_value','standard'], true)) $pol = 'zero';","            $out['foc_policy'] = $pol;","        } else {","            throw new \\RuntimeException(\"Invalid owner mode\");","        }","        return $out;","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/DprBridge.php": ["","<?php","declare(strict_types=1);","namespace Coupler;","use PDO; use RuntimeException;","","final class DprBridge","{","    public function __construct(private PDO $pdo) {}","","    /** Create DPR entries from a GRN line (call during GRN post for certain categories) */","    public function fromGrn(array $grnLine, string $itemCategory, ?int $jobId=null): ?int {","        $map = $this->getMap($itemCategory);","        if(!$map) return null; // no mapping -> skip","        $qty = (float)($grnLine['qty_base'] ?? 0);","        $unit = $map['unit'];","        $act  = $map['activity'];","        $st=$this->pdo->prepare(\"INSERT INTO dpr_entries (dpr_date,job_id,activity,item_id,qty,unit,source_table,source_id,notes) VALUES (?,?,?,?,?,?,?,?,?)\");","        $st->execute([date('Y-m-d'), $jobId, $act, (int)$grnLine['item_id'], $qty, $unit, 'grn_lines', (int)$grnLine['id'], 'Auto from GRN']);","        return (int)$this->pdo->lastInsertId();","    }","","    public function getMap(string $cat): ?array {","        $st=$this->pdo->prepare(\"SELECT * FROM dpr_activity_map WHERE item_category=?\");","        $st->execute([$cat]); $r=$st->fetch(PDO::FETCH_ASSOC);","        return $r?:null;","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/BomService.php": ["","<?php","declare(strict_types=1);","namespace Coupler;","use PDO; use RuntimeException;","","final class BomService","{","    public function __construct(private PDO $pdo) {}","","    public function createVersion(int $parentItemId, string $versionCode, ?string $effFrom=null, ?string $effTo=null, ?string $notes=null): int {","        if ($parentItemId<=0 || $versionCode==='') throw new RuntimeException(\"parent_item_id & version_code required\");","        $st=$this->pdo->prepare(\"INSERT INTO bom_versions (parent_item_id,version_code,effective_from,effective_to,notes) VALUES (?,?,?,?,?)\");","        $st->execute([$parentItemId,$versionCode,$effFrom,$effTo,$notes]);","        return (int)$this->pdo->lastInsertId();","    }","","    public function addComponent(int $versionId, int $componentItemId, float $qtyPerParent, float $scrapPct=0.0, bool $isPhantom=false, bool $isRemnant=false, int $lineNo=10, ?string $remarks=null): int {","        if ($versionId<=0 || $componentItemId<=0 || $qtyPerParent<=0) throw new RuntimeException(\"version_id, component_item_id, qty_per_parent required\");","        $st=$this->pdo->prepare(\"INSERT INTO bom_components (version_id,line_no,component_item_id,qty_per_parent,scrap_pct,is_phantom,is_remnant_return,remarks) VALUES (?,?,?,?,?,?,?,?)\");","        $st->execute([$versionId,$lineNo,$componentItemId,$qtyPerParent,$scrapPct,$isPhantom?1:0,$isRemnant?1:0,$remarks]);","        return (int)$this->pdo->lastInsertId();","    }","","    /** Explode to a flat list aggregated by leaf item. Handles scrap% and phantom sub-assemblies. */","    public function explode(int $parentItemId, float $parentQty, ?string $asOfDate=null): array {","        if ($parentQty<=0) throw new RuntimeException(\"parent qty must be > 0\");","        $seen = []; $flat = [];","        $this->explodeInner($parentItemId, $parentQty, $asOfDate, $seen, $flat, 0, []);","        // aggregate same items","        $agg=[];","        foreach($flat as $row){","            $k = (string)$row['item_id'];","            if(!isset($agg[$k])) $agg[$k] = ['item_id'=>$row['item_id'],'qty'=>0.0];","            $agg[$k]['qty'] += $row['qty'];","        }","        // round","        foreach($agg as &$a){ $a['qty'] = round($a['qty'], 6); }","        return array_values($agg);","    }","","    /** Return a nested tree for UI */","    public function tree(int $parentItemId, float $parentQty=1.0, ?string $asOfDate=null): array {","        $seen=[]; return $this->node($parentItemId, $parentQty, $asOfDate, $seen, 0);","    }","","    // ------------------- internals -------------------","    private function node(int $itemId, float $qty, ?string $asOfDate, array &$seen, int $depth): array {","        if(isset($seen[$itemId])) throw new RuntimeException(\"Cycle detected at item \".$itemId);","        $seen[$itemId]=true;","        $comps = $this->componentsFor($itemId, $asOfDate);","        $children = [];","        foreach($comps as $c){","            $req = $qty * (float)$c['qty_per_parent'] * (1.0 + ((float)$c['scrap_pct'] / 100.0));","            if ((int)$c['is_phantom'] === 1) {","                $children[] = $this->node((int)$c['component_item_id'], $req, $asOfDate, $seen, $depth+1);","            } else {","                $children[] = ['item_id'=>(int)$c['component_item_id'],'qty'=>round($req,6),'children'=>[],'depth'=>$depth+1,'is_leaf'=>true,'is_remnant'=>(int)$c['is_remnant_return']===1];","            }","        }","        unset($seen[$itemId]);","        return ['item_id'=>$itemId,'qty'=>round($qty,6),'children'=>$children,'depth'=>$depth,'is_leaf'=>empty($children)];","    }","","    private function explodeInner(int $itemId, float $qty, ?string $asOfDate, array &$seen, array &$flat, int $depth, array $path): void {","        if(isset($seen[$itemId])) throw new RuntimeException(\"Cycle detected at item \".$itemId);","        $seen[$itemId]=true;","        $comps = $this->componentsFor($itemId, $asOfDate);","        if (!$comps) {","            $flat[] = ['item_id'=>$itemId,'qty'=>$qty,'path'=>$path];","            unset($seen[$itemId]); return;","        }","        foreach($comps as $c){","            $req = $qty * (float)$c['qty_per_parent'] * (1.0 + ((float)$c['scrap_pct'] / 100.0));","            $newPath = array_merge($path, [ ['parent'=>$itemId,'comp'=>(int)$c['component_item_id']] ]);","            if ((int)$c['is_phantom'] === 1) {","                $this->explodeInner((int)$c['component_item_id'], $req, $asOfDate, $seen, $flat, $depth+1, $newPath);","            } else {","                // leaf","                $flat[] = ['item_id'=>(int)$c['component_item_id'],'qty'=>$req,'path'=>$newPath];","            }","        }","        unset($seen[$itemId]);","    }","","    /** returns rows of bom_components for active version of item as-of date */","    private function componentsFor(int $parentItemId, ?string $asOfDate): array {","        $date = $asOfDate ?: date('Y-m-d');","        $st=$this->pdo->prepare(\"","          SELECT bc.* FROM bom_components bc","          JOIN bom_versions bv ON bv.id = bc.version_id","          WHERE bv.parent_item_id=? AND bv.is_active=1","            AND (bv.effective_from IS NULL OR bv.effective_from<=?)","            AND (bv.effective_to   IS NULL OR bv.effective_to  >=?)","          ORDER BY bc.line_no, bc.id","        \");","        $st->execute([$parentItemId,$date,$date]);","        return $st->fetchAll(PDO::FETCH_ASSOC) ?: [];","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/LotService.php": ["<?php","declare(strict_types=1);","namespace Coupler;","use PDO; use RuntimeException;","","final class LotService {","  public function __construct(private PDO $pdo) {}","","  public function createLotAndPieces(int $itemId, int $warehouseId, string $ownerType='company', ?int $ownerId=null, float $qtyBase=0.0, array $meta=[]): array {","    $this->pdo->beginTransaction();","    try {","      $stmt = $this->pdo->prepare(\"INSERT INTO stock_lots (item_id, warehouse_id, owner_type, owner_id, parent_lot_id, heat_no, plate_no, received_grn_line_id, qty_base, status, meta)","                                   VALUES (:item_id,:wh,:owner_type,:owner_id,NULL,:heat,:plate,:grn,:qty,'free',:meta)\");","      $stmt->execute([ ':item_id'=>$itemId, ':wh'=>$warehouseId, ':owner_type'=>$ownerType, ':owner_id'=>$ownerId, ':heat'=>$meta['heat_no']??null, ':plate'=>$meta['plate_no']??null, ':grn'=>$meta['grn_line_id']??null, ':qty'=>$qtyBase, ':meta'=>json_encode($meta, JSON_UNESCAPED_UNICODE) ]);","      $lotId = (int)$this->pdo->lastInsertId();","","      $pieceIds=[]; $pcs=max(1,(int)($meta['pcs']??1)); $shape=$meta['shape']??'rect'; $dims=$meta['dims']??[];","      $qtyPerPiece = $pcs>0 ? round($qtyBase/$pcs,6):$qtyBase;","      $ins=$this->pdo->prepare(\"INSERT INTO lot_pieces (lot_id, piece_code, shape, dims, qty_base, status) VALUES (:lot,:code,:shape,:dims,:qty,'free')\");","      for($i=1;$i<=$pcs;$i++){","        $code = ($meta['plate_no'] ?? ('L'.$lotId)).'-'.str_pad((string)$i,2,'0',STR_PAD_LEFT);","        $ins->execute([':lot'=>$lotId, ':code'=>$code, ':shape'=>$shape, ':dims'=>json_encode($dims, JSON_UNESCAPED_UNICODE), ':qty'=>$qtyPerPiece]);","        $pieceIds[]=(int)$this->pdo->lastInsertId();","      }","      $this->pdo->commit();","      return ['lot_id'=>$lotId,'piece_ids'=>$pieceIds];","    } catch(\\Throwable $e){ $this->pdo->rollBack(); throw $e; }","  }","","  public function splitPiece(int $pieceId, array $remnants, float $consumedKg): array {","    $p=$this->fetchPiece($pieceId); if(!$p) throw new RuntimeException(\"Piece not found\");","    $lotId=(int)$p['lot_id']; $parentQty=(float)$p['qty_base'];","    $totalRemnant=0.0; foreach($remnants as $r){ $totalRemnant += (float)($r['qty_base']??0); }","    $newParent = round($parentQty - $consumedKg - $totalRemnant, 6);","    if($newParent < -0.01) throw new RuntimeException(\"Split exceeds available qty\");","    $this->pdo->beginTransaction();","    try{","      $upd=$this->pdo->prepare(\"UPDATE lot_pieces SET qty_base=:q, status=CASE WHEN :q<=0 THEN 'consumed' ELSE status END WHERE id=:id\");","      $upd->execute([':q'=>$newParent, ':id'=>$pieceId]);","      $childIds=[]; $ins=$this->pdo->prepare(\"INSERT INTO lot_pieces (lot_id, piece_code, shape, dims, qty_base, status) VALUES (:lot,:code,:shape,:dims,:qty,'free')\");","      $idx=1;","      foreach($remnants as $r){","        $ins->execute([':lot'=>$lotId, ':code'=>\"R{$pieceId}-\".str_pad((string)$idx,2,'0',STR_PAD_LEFT), ':shape'=>$r['shape']??'rect', ':dims'=>json_encode($r['dims']??[], JSON_UNESCAPED_UNICODE), ':qty'=>round((float)($r['qty_base']??0),6)]);","        $childIds[]=(int)$this->pdo->lastInsertId(); $idx++;","      }","      $this->pdo->commit();","      return ['child_piece_ids'=>$childIds,'parent_remaining'=>$newParent];","    } catch(\\Throwable $e){ $this->pdo->rollBack(); throw $e; }","  }","","  public function reducePieceQty(int $pieceId, float $qtyKg): array {","    $p=$this->fetchPiece($pieceId); if(!$p) throw new RuntimeException(\"Piece not found\");","    $remain = round((float)$p['qty_base'] - $qtyKg, 6);","    if($remain < -0.01) throw new RuntimeException(\"Issue exceeds piece qty\");","    $st=$this->pdo->prepare(\"UPDATE lot_pieces SET qty_base=:q, status=CASE WHEN :q<=0 THEN 'consumed' ELSE status END WHERE id=:id\");","    $st->execute([':q'=>$remain, ':id'=>$pieceId]);","    return ['remaining'=>$remain];","  }","","  public function markScrap(int $pieceId, float $qtyKg): array {","    $p=$this->fetchPiece($pieceId); if(!$p) throw new RuntimeException(\"Piece not found\");","    $remain = round((float)$p['qty_base'] - $qtyKg, 6);","    if($remain < -0.01) throw new RuntimeException(\"Scrap exceeds piece qty\");","    $st=$this->pdo->prepare(\"UPDATE lot_pieces SET qty_base=:q, status=CASE WHEN :q<=0 THEN 'scrap' ELSE status END WHERE id=:id\");","    $st->execute([':q'=>$remain, ':id'=>$pieceId]);","    return ['remaining'=>$remain];","  }","","  private function fetchPiece(int $id): ?array {","    $st=$this->pdo->prepare(\"SELECT * FROM lot_pieces WHERE id=:id\"); $st->execute([':id'=>$id]);","    $row=$st->fetch(PDO::FETCH_ASSOC); return $row?:null;","  }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/ThreeWayMatch.php": ["","<?php","declare(strict_types=1);","namespace Coupler;","use PDO; use RuntimeException;","","final class ThreeWayMatch","{","    public function __construct(private PDO $pdo) {}","","    /** Match AP invoice lines to PO/GRN with tolerances; computes PPV/QTV and marks status. */","    public function matchInvoice(int $invoiceId): array","    {","        $inv = $this->getInv($invoiceId, true);","        if ($inv['status']!=='draft' && $inv['status']!=='exception') throw new RuntimeException(\"Only draft/exception invoices can be matched\");","","        $tol = $this->getTolerance();","        $lines = $this->getLines($invoiceId);","        if (!$lines) throw new RuntimeException(\"No invoice lines\");","","        $exceptions = 0; $ok = 0; $tolCount = 0;","        foreach ($lines as $ln) {","            // Pull PO/GRN references","            $poPrice = $this->poPrice((int)$ln['po_line_id']);","            $grnQty  = $this->grnQty((int)$ln['grn_line_id']);","            $invQty  = (float)$ln['qty'];","            $invRate = (float)$ln['unit_price'];","","            // Compute variances","            $ppv = $poPrice !== null ? round(($invRate - $poPrice) * $invQty, 2) : 0.0;","            $qtv = $grnQty !== null ? round(($invQty - $grnQty) * ($poPrice ?? $invRate), 2) : 0.0;","","            // Decide status","            $priceVarPct = ($poPrice && $poPrice!=0) ? abs(($invRate - $poPrice)/$poPrice)*100 : 0;","            $qtyVarPct   = ($grnQty && $grnQty!=0) ? abs(($invQty - $grnQty)/$grnQty)*100 : 0;","","            $status = 'ok';","            if ($priceVarPct > (float)$tol['price_pct'] || $qtyVarPct > (float)$tol['qty_pct'] || abs($ppv)+abs($qtv) > (float)$tol['amount_abs']) {","                $status = 'exception';","                $exceptions++;","            } elseif ($priceVarPct>0 || $qtyVarPct>0 || abs($ppv)+abs($qtv)>0) {","                $status = 'tolerance';","                $tolCount++;","            } else {","                $ok++;","            }","","            // Update line","            $up=$this->pdo->prepare(\"UPDATE ap_invoice_lines SET matched_status=?, ppv=?, qtv=? WHERE id=?\");","            $up->execute([$status, $ppv, $qtv, (int)$ln['id']]);","        }","","        $newStatus = $exceptions>0 ? 'exception' : ($tolCount>0 ? 'matched' : 'matched');","        $this->pdo->prepare(\"UPDATE ap_invoices SET status=? WHERE id=?\")->execute([$newStatus, $invoiceId]);","        return ['ok'=>$ok,'tolerance'=>$tolCount,'exception'=>$exceptions,'status'=>$newStatus];","    }","","    /** Post AP invoice to GL: Dr GR/IR (clearing) up to GRN, PPV to variance, balance to AP. */","    public function postInvoice(int $invoiceId): array","    {","        $inv = $this->getInv($invoiceId, true);","        if ($inv['status']!=='matched') throw new RuntimeException(\"Invoice must be matched before posting\");","","        $lines = $this->getLines($invoiceId);","        $sum = 0.0; $ppv = 0.0; $qtv = 0.0;","        foreach ($lines as $ln) {","            $sum += (float)$ln['amount'];","            $ppv += (float)$ln['ppv'];","            $qtv += (float)$ln['qtv'];","        }","        // GL enqueue","        $this->enqueueGL('AP_INVOICE_POSTED', [","            'dr' => '220500-GRN-Clearing',   // GR/IR","            'cr' => '210000-Trade Payables',","            'amount' => round($sum,2),","            'refs' => ['invoice_id'=>$invoiceId]","        ]);","        if (abs($ppv) > 0.005) {","            $this->enqueueGL('PPV_POSTED', [","                'dr' => $ppv>0 ? '140100-RM Inventory' : '720500-Purchase Price Variance',","                'cr' => $ppv>0 ? '720500-Purchase Price Variance' : '140100-RM Inventory',","                'amount' => round(abs($ppv),2),","                'refs' => ['invoice_id'=>$invoiceId]","            ]);","        }","        if (abs($qtv) > 0.005) {","            $this->enqueueGL('QTV_POSTED', [","                'dr' => $qtv>0 ? '220500-GRN-Clearing' : '710920-GRN Quantity Variance',","                'cr' => $qtv>0 ? '710920-GRN Quantity Variance' : '220500-GRN-Clearing',","                'amount' => round(abs($qtv),2),","                'refs' => ['invoice_id'=>$invoiceId]","            ]);","        }","        $this->pdo->prepare(\"UPDATE ap_invoices SET status='posted', posted_at=NOW() WHERE id=?\")->execute([$invoiceId]);","        return ['posted'=>true,'amount'=>round($sum,2),'ppv'=>round($ppv,2),'qtv'=>round($qtv,2)];","    }","","    // ---------------- helpers ----------------","    private function getInv(int $id, bool $lock=false): array {","        $sql=\"SELECT * FROM ap_invoices WHERE id=?\"; if($lock) $sql.=\" FOR UPDATE\";","        $st=$this->pdo->prepare($sql); $st->execute([$id]);","        $r=$st->fetch(PDO::FETCH_ASSOC); if(!$r) throw new RuntimeException(\"Invoice not found\"); return $r;","    }","    private function getLines(int $invId): array {","        $st=$this->pdo->prepare(\"SELECT * FROM ap_invoice_lines WHERE invoice_id=?\");","        $st->execute([$invId]); return $st->fetchAll(PDO::FETCH_ASSOC) ?: [];","    }","    private function getTolerance(): array {","        $st=$this->pdo->query(\"SELECT * FROM threeway_tolerances ORDER BY id DESC LIMIT 1\");","        return $st->fetch(PDO::FETCH_ASSOC) ?: ['price_pct'=>1.0,'qty_pct'=>1.0,'amount_abs'=>0.0];","    }","    private function poPrice(?int $poLineId): ?float {","        if(!$poLineId) return null;","        $st=$this->pdo->prepare(\"SELECT unit_price FROM po_lines WHERE id=?\"); // adapt to your schema","        if(!$st->execute([$poLineId])) return null;","        $r=$st->fetch(PDO::FETCH_ASSOC);","        return $r ? (float)$r['unit_price'] : null;","    }","    private function grnQty(?int $grnLineId): ?float {","        if(!$grnLineId) return null;","        $st=$this->pdo->prepare(\"SELECT qty_base FROM grn_lines WHERE id=?\"); // adapt if different","        if(!$st->execute([$grnLineId])) return null;","        $r=$st->fetch(PDO::FETCH_ASSOC);","        return $r ? (float)$r['qty_base'] : null;","    }","    private function enqueueGL(string $event, array $payload): void {","        $st=$this->pdo->prepare(\"INSERT INTO gl_interface_outbox (event_type,payload_json) VALUES (?,?)\");","        $st->execute([$event, json_encode($payload, JSON_UNESCAPED_UNICODE)]);","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/GrirCloser.php": ["","<?php","declare(strict_types=1);","namespace Coupler;","use PDO; use RuntimeException;","","final class GrirCloser","{","    public function __construct(private PDO $pdo) {}","","    public function suggest(string $olderThanDate): array {","        // Use view v_grir_aging (Phase 5). Pick rows with open_value != 0 and grn_date <= olderThanDate.","        $st=$this->pdo->prepare(\"SELECT * FROM v_grir_aging WHERE open_value <> 0 AND grn_date <= ? ORDER BY age_days DESC LIMIT 1000\");","        $st->execute([$olderThanDate]); return $st->fetchAll(PDO::FETCH_ASSOC) ?: [];","    }","","    public function createHeader(?string $notes=null): int {","        $st=$this->pdo->prepare(\"INSERT INTO grir_closure_hdr (close_date,notes) VALUES (?,?)\");","        $st->execute([date('Y-m-d'), $notes]); return (int)$this->pdo->lastInsertId();","    }","","    public function addLine(int $hdrId, int $grnLineId, float $openValue, float $closeValue, string $reason='writeoff', ?string $notes=null): int {","        $hdr=$this->hdr($hdrId,true); if($hdr['status']!=='draft') throw new RuntimeException(\"Only draft closure editable\");","        $st=$this->pdo->prepare(\"INSERT INTO grir_closure_lines (header_id,grn_line_id,open_value,close_value,reason,notes) VALUES (?,?,?,?,?,?)\");","        $st->execute([$hdrId,$grnLineId,$openValue,$closeValue,$reason,$notes]);","        return (int)$this->pdo->lastInsertId();","    }","","    public function post(int $hdrId): array {","        $hdr=$this->hdr($hdrId,true); if($hdr['status']!=='draft') throw new RuntimeException(\"Already posted/void\");","        $lines=$this->lines($hdrId); if(!$lines) throw new RuntimeException(\"No lines\");","        $this->pdo->beginTransaction();","        try{","            $sum=0.0;","            foreach($lines as $ln){","                $diff = (float)$ln['close_value'];","                $sum += $diff;","                // GL: clear GR/IR with write-off to variance or expense","                $this->enqueueGL('GRIR_CLOSED',[","                    'dr' => $diff>0 ? '220500-GRN-Clearing' : '710930-GRIR Write-off',","                    'cr' => $diff>0 ? '710930-GRIR Write-off' : '220500-GRN-Clearing',","                    'amount' => round(abs($diff),2),","                    'refs' => ['closure_id'=>$hdrId,'grn_line_id'=>(int)$ln['grn_line_id']]","                ]);","            }","            $this->pdo->prepare(\"UPDATE grir_closure_hdr SET status='posted' WHERE id=?\")->execute([$hdrId]);","            $this->pdo->commit();","            return ['posted'=>true,'amount'=>round($sum,2),'lines'=>count($lines)];","        } catch(\\Throwable $e){ $this->pdo->rollBack(); throw $e; }","    }","","    private function hdr(int $id,bool $lock=false): array{ $sql=\"SELECT * FROM grir_closure_hdr WHERE id=?\"; if($lock)$sql.=\" FOR UPDATE\"; $st=$this->pdo->prepare($sql); $st->execute([$id]); $r=$st->fetch(PDO::FETCH_ASSOC); if(!$r) throw new RuntimeException(\"Closure not found\"); return $r; }","    private function lines(int $id): array{ $st=$this->pdo->prepare(\"SELECT * FROM grir_closure_lines WHERE header_id=?\"); $st->execute([$id]); return $st->fetchAll(PDO::FETCH_ASSOC)?:[]; }","    private function enqueueGL(string $event, array $payload): void{ $st=$this->pdo->prepare(\"INSERT INTO gl_interface_outbox (event_type,payload_json) VALUES (?,?)\"); $st->execute([$event,json_encode($payload,JSON_UNESCAPED_UNICODE)]); }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/ValuationService.php": ["","<?php","declare(strict_types=1);","namespace Coupler;","use PDO; use RuntimeException;","","final class ValuationService","{","    public function __construct(private PDO $pdo) {}","","    public function rebuildInputs(string $fromDate, string $toDate): int {","        $this->pdo->prepare(\"DELETE FROM inv_cost_inputs WHERE event_date BETWEEN ? AND ?\")->execute([$fromDate,$toDate]);","        $n=0;","        $st=$this->pdo->prepare(\"","            SELECT gi.id AS grn_item_id, gi.item_id, gi.warehouse_id,","                   gi.qty_accepted AS qty, gi.unit_price AS rate, g.grn_date","            FROM grn_items gi","            JOIN grn g ON g.id=gi.grn_id","            WHERE g.status='posted' AND g.grn_date BETWEEN ? AND ?","        \");","        $st->execute([$fromDate,$toDate]);","        while($r=$st->fetch(PDO::FETCH_ASSOC)){","            $qty=(float)$r['qty']; $rate=(float)$r['rate']; $amt=round($qty*$rate,2);","            $ins=$this->pdo->prepare(\"INSERT INTO inv_cost_inputs (event_date,item_id,warehouse_id,qty,rate,amount,source,source_id) VALUES (?,?,?,?,?,?,?,?)\");","            $ins->execute([$r['grn_date'],(int)$r['item_id'],(int)$r['warehouse_id'],$qty,$rate,$amt,'GRN',(int)$r['grn_item_id']]);","            $n++;","        }","        return $n;","    }","","    public function snapshot(string $snapDate): int {","        $this->pdo->beginTransaction();","        try{","            $st=$this->pdo->prepare(\"","                SELECT item_id, warehouse_id,","                       SUM(amount) / NULLIF(SUM(qty),0) AS wavg_rate","                FROM inv_cost_inputs","                WHERE event_date <= ?","                GROUP BY item_id, warehouse_id","            \");","            $st->execute([$snapDate]);","            $ins = $this->pdo->prepare(\"REPLACE INTO inv_valuation_snapshots (snap_date,item_id,warehouse_id,qty_onhand,wavg_rate,amount) VALUES (?,?,?,?,?,?)\");","            $count=0;","            while($r=$st->fetch(PDO::FETCH_ASSOC)){","                $qty_onhand = $this->onhand((int)$r['item_id'], (int)$r['warehouse_id']);","                $rate = (float)$r['wavg_rate']; $amt = round($qty_onhand * $rate, 2);","                $ins->execute([$snapDate,(int)$r['item_id'],(int)$r['warehouse_id'],$qty_onhand,$rate,$amt]);","                $count++;","            }","            $this->pdo->commit();","            return $count;","        } catch(\\Throwable $e){ $this->pdo->rollBack(); throw $e; }","    }","","    private function onhand(int $item, int $wh): float {","        $st=$this->pdo->prepare(\"SELECT qty FROM stock_onhand WHERE item_id=? AND warehouse_id=?\");","        $st->execute([$item,$wh]); $r=$st->fetch(PDO::FETCH_ASSOC);","        return $r ? (float)$r['qty'] : 0.0;","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/IssueService.php": ["","<?php","declare(strict_types=1);","namespace Coupler;","use PDO; use RuntimeException;","","final class IssueService","{","    public function __construct(private PDO $pdo) {}","","    public function create(string $date, ?int $cc=null, ?int $job=null, ?string $notes=null): int {","        $st=$this->pdo->prepare(\"INSERT INTO issue_headers (issue_date,cost_center_id,job_id,notes) VALUES (?,?,?,?)\");","        $st->execute([$date,$cc,$job,$notes]);","        return (int)$this->pdo->lastInsertId();","    }","    public function addLine(int $hdrId, array $in): int {","        $hdr = $this->getHdr($hdrId,true); if($hdr['status']!=='draft') throw new RuntimeException(\"Only draft issues editable\");","        $item=(int)($in['item_id']??0); $wh=(int)($in['warehouse_id']??0); $qty=(float)($in['qty_base']??0);","        if($item<=0||$wh<=0||$qty<=0) throw new RuntimeException(\"item_id, warehouse_id, qty_base required\");","        $lot = $in['lot_id'] ?? null; $piece=$in['piece_id'] ?? null;","        $heat=$in['heat_no'] ?? null; $plate=$in['plate_no'] ?? null;","        $st=$this->pdo->prepare(\"INSERT INTO issue_lines (header_id,item_id,warehouse_id,lot_id,piece_id,qty_base,uom,heat_no,plate_no) VALUES (?,?,?,?,?,?,?,?,?)\");","        $st->execute([$hdrId,$item,$wh,$lot,$piece,$qty,$in['uom']??null,$heat,$plate]);","        return (int)$this->pdo->lastInsertId();","    }","    public function post(int $hdrId): array {","        $hdr=$this->getHdr($hdrId,true); if($hdr['status']!=='draft') throw new RuntimeException(\"Already posted/void\");","        $lines=$this->getLines($hdrId); if(!$lines) throw new RuntimeException(\"No lines\");","        $this->pdo->beginTransaction();","        try{","            $total=0.0;","            foreach($lines as $ln){","                $qty=(float)$ln['qty_base']; $item=(int)$ln['item_id']; $wh=(int)$ln['warehouse_id'];","                // reduce company onhand","                $upd=$this->pdo->prepare(\"UPDATE stock_onhand SET qty=GREATEST(qty-?,0) WHERE item_id=? AND warehouse_id=? AND owner_type='company' AND owner_id IS NULL\");","                $upd->execute([$qty,$item,$wh]);","                $total += $qty;","                // (Optional) mark piece/lot status if fully consumed","            }","            // GL: Dr WIP/Expense, Cr Inventory","            $this->enqueueGL('ISSUE_POSTED',[","                'dr'=>'510100-Consumption / WIP',","                'cr'=>'140100-RM Inventory',","                'qty_total'=>round($total,6),","                'refs'=>['issue_id'=>$hdrId,'job_id'=>$hdr['job_id'],'cost_center_id'=>$hdr['cost_center_id']]","            ]);","            $this->pdo->prepare(\"UPDATE issue_headers SET status='posted' WHERE id=?\")->execute([$hdrId]);","            $this->pdo->commit();","            return ['posted'=>true,'lines'=>count($lines),'qty_total'=>round($total,6)];","        } catch(\\Throwable $e){ $this->pdo->rollBack(); throw $e; }","    }","    private function getHdr(int $id,bool $lock=false): array { $sql=\"SELECT * FROM issue_headers WHERE id=?\"; if($lock) $sql.=\" FOR UPDATE\"; $st=$this->pdo->prepare($sql); $st->execute([$id]); $r=$st->fetch(PDO::FETCH_ASSOC); if(!$r) throw new RuntimeException(\"Issue not found\"); return $r; }","    private function getLines(int $id): array { $st=$this->pdo->prepare(\"SELECT * FROM issue_lines WHERE header_id=?\"); $st->execute([$id]); return $st->fetchAll(PDO::FETCH_ASSOC)?:[]; }","    private function enqueueGL(string $event, array $payload): void { $st=$this->pdo->prepare(\"INSERT INTO gl_interface_outbox (event_type,payload_json) VALUES (?,?)\"); $st->execute([$event,json_encode($payload,JSON_UNESCAPED_UNICODE)]); }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/UomRuleEngine.php": ["","<?php","declare(strict_types=1);","namespace Coupler;","use PDO; use RuntimeException;","","/**"," * UomRuleEngine: computes accounting qty/rate for GRN based on item category and inputs."," * Inputs should include: rate, pcs, weight_kg, length_m, width_m, thickness_m, area_m2, volume_m3."," */","final class UomRuleEngine","{","    public function __construct(private PDO $pdo) {}","","    public function compute(string $itemCategory, array $inputs): array {","        $rule = $this->getRuleForCategory($itemCategory);","        if (!$rule) return ['qty'=> (float)($inputs['weight_kg'] ?? $inputs['pcs'] ?? 0), 'rate'=> (float)($inputs['rate'] ?? 0), 'method'=>'fallback'];","        $method = $rule['method'];","        $params = json_decode((string)($rule['params_json'] ?? '{}'), true) ?: [];","        $rate = (float)($inputs['rate'] ?? 0);","        $qty = 0.0;","","        $pcs   = (float)($inputs['pcs'] ?? 0);","        $wkg   = (float)($inputs['weight_kg'] ?? 0);","        $len   = (float)($inputs['length_m'] ?? 0);","        $wid   = (float)($inputs['width_m'] ?? 0);","        $thk   = (float)($inputs['thickness_m'] ?? 0);","        $area  = (float)($inputs['area_m2'] ?? ($len*$wid));","        $vol   = (float)($inputs['volume_m3'] ?? ($area*$thk));","","        switch ($method) {","            case 'by_weight': $qty = $wkg; break;","            case 'by_pcs':    $qty = $pcs; break;","            case 'by_area':   $qty = $area; break;","            case 'by_volume': $qty = $vol; break;","            case 'custom_multiplier':","                // params: {\"factors\":[\"weight_kg\",\"length_m\",\"width_m\"], \"scale\": 1.0}","                $factors = (array)($params['factors'] ?? []);","                $prod = 1.0;","                foreach ($factors as $f) {","                    $v = (float)($inputs[$f] ?? 0);","                    if ($v==0) { $prod = 0; break; }","                    $prod *= $v;","                }","                $qty = $prod * (float)($params['scale'] ?? 1.0);","                break;","            default: $qty = $wkg ?: $pcs; break;","        }","        return ['qty'=> round($qty, 6), 'rate'=> round($rate, 6), 'method'=>$method, 'rule_id'=>(int)$rule['id']];","    }","","    public function getRuleForCategory(string $cat): ?array {","        $st=$this->pdo->prepare(\"SELECT r.* FROM item_category_rules icr JOIN uom_rules r ON r.id=icr.rule_id WHERE icr.item_category=? AND r.status='active'\");","        $st->execute([$cat]);","        $row=$st->fetch(PDO::FETCH_ASSOC);","        return $row ?: null;","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/RuleRepo.php": ["","<?php","declare(strict_types=1);","","namespace Coupler;","use PDO;","","final class RuleRepo","{","    public function __construct(private PDO $pdo) {}","","    /** Return one active rule row (as array) for a category+type */","    public function getActiveRuleSet(string $category, string $type): ?array","    {","        $sql = \"SELECT cr.*","                FROM coupler_rule_sets rs","                JOIN coupler_rules cr ON cr.rule_set_id = rs.id AND cr.type = :type AND cr.is_active = 1","                WHERE rs.category = :cat AND rs.status='active'","                ORDER BY rs.version_no DESC, cr.id DESC LIMIT 1\";","        $st = $this->pdo->prepare($sql);","        $st->execute([':cat'=>$category, ':type'=>$type]);","        $row = $st->fetch(PDO::FETCH_ASSOC);","        if (!$row) return null;","        if (!empty($row['params_json']) && is_string($row['params_json'])) {","            $row['params_json'] = json_decode($row['params_json'], true) ?: [];","        }","        return $row;","    }","","    public function getGLMap(string $category, array $match): ?array","    {","        $sql = \"SELECT cr.params_json","                FROM coupler_rule_sets rs","                JOIN coupler_rules cr ON cr.rule_set_id = rs.id AND cr.type='gl_map' AND cr.is_active=1","                WHERE rs.category = :cat AND rs.status='active'","                ORDER BY rs.version_no DESC, cr.id DESC\";","        $st = $this->pdo->prepare($sql);","        $st->execute([':cat'=>$category]);","        while ($row = $st->fetch(PDO::FETCH_ASSOC)) {","            $params = json_decode($row['params_json'] ?? \"{}\", true) ?: [];","            $ok = true;","            foreach ($match as $k=>$v) {","                if (!array_key_exists($k, $params) || strval($params[$k]) !== strval($v)) { $ok=false; break; }","            }","            if ($ok) return $params;","        }","        return null;","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/Expression.php": ["","<?php","declare(strict_types=1);","","namespace Coupler;","","final class Expression","{","    /** Evaluate a tiny DSL of assignment lines and return symbol table.","     *  Allowed: + - * / ( ) , variables [a-zA-Z_][a-zA-Z0-9_]*, numbers, and functions: round, floor, ceil, min, max.","     *  Example:","     *    area_m2 = (L_mm/1000) * (W_mm/1000);","     *    acc_qty = round(area_m2 * (Thk_mm/1000) * density, 3);","     */","    public static function evaluate(string $script, array $ctx): array","    {","        $symbols = $ctx;","        $lines = preg_split('/[;\\n\\r]+/', $script, -1, PREG_SPLIT_NO_EMPTY);","        foreach ($lines as $line) {","            $line = trim($line);","            if ($line === '') continue;","            if (!preg_match('/^([a-zA-Z_][a-zA-Z0-9_]*)\\s*=\\s*(.+)$/', $line, $m)) {","                throw new \\RuntimeException(\"Invalid line: $line\");","            }","            $var = $m[1];","            $expr = $m[2];","            $val = self::evalExpr($expr, $symbols);","            $symbols[$var] = $val;","        }","        return $symbols;","    }","","    private static function evalExpr(string $expr, array $vars): float","    {","        // Tokenize","        $tokens = [];","        $i = 0; $len = strlen($expr);","        while ($i < $len) {","            $ch = $expr[$i];","            if (ctype_space($ch)) { $i++; continue; }","            if (ctype_alpha($ch) || $ch === '_') {","                $j = $i+1;","                while ($j < $len && (ctype_alnum($expr[$j]) || $expr[$j] === '_')) $j++;","                $tokens[] = ['type'=>'id', 'val'=>substr($expr, $i, $j-$i)];","                $i = $j; continue;","            }","            if (ctype_digit($ch) or $ch=='.') {","                $j = $i+1;","                while ($j < $len && (ctype_digit($expr[$j]) || $expr[$j]=='.')) $j++;","                $tokens[] = ['type'=>'num', 'val'=>floatval(substr($expr, $i, $j-$i))];","                $i = $j; continue;","            }","            if ($ch in ['+','-','*','/','(',')',',']) {","                $tokens[] = ['type'=>$ch, 'val'=>$ch];","                $i++; continue;","            }","            throw new \\RuntimeException(\"Bad character in expression: \".$ch);","        }","","        // Shunting-yard to RPN","        $prec = ['+'=>1,'-'=>1,'*'=>2,'/'=>2];","        $out = []; $ops = [];","        for ($k=0; $k<count($tokens); $k++) {","            $t = $tokens[$k];","            if ($t['type']==='num') $out[] = $t;","            elseif ($t['type']==='id') {","                // Could be function or variable","                $next = $tokens[$k+1]['type'] ?? null;","                if ($next==='(') { $ops[] = $t; } // function marker","                else {","                    $name = $t['val'];","                    $val = $vars[$name] ?? 0.0;","                    $out[] = ['type'=>'num','val'=>floatval($val)];","                }","            }","            elseif ($t['type']==='(') $ops[] = $t;","            elseif ($t['type']===')') {","                while (!empty($ops) && end($ops)['type']!=='(') $out[] = array_pop($ops);","                if (empty($ops)) throw new \\RuntimeException(\"Mismatched parenthesis\");","                array_pop($ops); // pop '('","                // If function on stack, pop it to output","                if (!empty($ops) && end($ops)['type']==='id') $out[] = array_pop($ops);","            }","            elseif (isset($prec[$t['type']])) {","                while (!empty($ops) && isset($prec[end($ops)['type']]) && $prec[end($ops)['type']] >= $prec[$t['type']]) {","                    $out[] = array_pop($ops);","                }","                $ops[] = $t;","            }","            elseif ($t['type']===',') {","                while (!empty($ops) && end($ops)['type']!=='(') $out[] = array_pop($ops);","            }","        }","        while (!empty($ops)) {","            $op = array_pop($ops);","            if ($op['type']==='(') throw new \\RuntimeException(\"Mismatched parenthesis\");","            $out[] = $op;","        }","","        // Evaluate RPN","        $stack = [];","        foreach ($out as $t) {","            if ($t['type']==='num') { $stack[] = $t['val']; continue; }","            $op = $t['type'];","            if ($op==='+' or $op==='-' or $op==='*' or $op==='/') {","                if (count($stack) < 2) throw new \\RuntimeException(\"Arity error\");","                $b = array_pop($stack); $a = array_pop($stack);","                switch ($op) {","                    case '+': $stack[] = $a + $b; break;","                    case '-': $stack[] = $a - $b; break;","                    case '*': $stack[] = $a * $b; break;","                    case '/': $stack[] = $b==0.0 ? 0.0 : $a / $b; break;","                }","                continue;","            }","            if ($op==='id') {","                // functions","                $fname = $t['val'];","                if ($fname==='round') {","                    $dec = 0; $x = array_pop($stack); ","                    if (!empty($stack)) { $dec = intval(array_pop($stack)); }","                    $stack[] = round($x, $dec);","                } elseif ($fname==='floor') {","                    $x = array_pop($stack); $stack[] = floor($x);","                } elseif ($fname==='ceil') {","                    $x = array_pop($stack); $stack[] = ceil($x);","                } elseif ($fname==='min') {","                    $b = array_pop($stack); $a = array_pop($stack); $stack[] = min($a,$b);","                } elseif ($fname==='max') {","                    $b = array_pop($stack); $a = array_pop($stack); $stack[] = max($a,$b);","                } else {","                    throw new \\RuntimeException(\"Unknown function: \".$fname);","                }","                continue;","            }","            throw new \\RuntimeException(\"Unknown token in RPN\");","        }","        if (count($stack)!=1) throw new \\RuntimeException(\"Evaluation error\");","        return floatval($stack[0]);","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/CouplerGL.php": ["","<?php","declare(strict_types=1);","namespace Coupler;","use PDO;","","final class CouplerGL","{","    public function __construct(private PDO $pdo, private RuleRepo $repo) {}","","    /** Queue GL interface lines into outbox based on category & context */","    public function queueGLEntries(string $category, array $ctx): void","    {","        // $ctx: doc_type, owner_type, acct_qty, acct_rate, refs..., policy?, skip?","        $map = $this->repo->getGLMap($category, [","            'doc_type'   => $ctx['doc_type']   ?? 'PO-GRN',","            'owner_type' => $ctx['owner_type'] ?? 'company',","            'policy'     => $ctx['foc_policy'] ?? null","        ]);","        if (!$map) return;","        if (!empty($map['skip'])) return;","","        $rate = isset($ctx['gl_rate']) ? (float)$ctx['gl_rate'] : (float)($ctx['acct_rate'] ?? 0);","        $amount = round((float)($ctx['acct_qty'] ?? 0) * $rate, 2);","","        $payload = [","            'dr' => $map['dr'] ?? '140100-RM',","            'cr' => $map['cr'] ?? '220500-GRN-Clearing',","            'amount' => $amount,","            'refs' => $ctx['refs'] ?? [],","            'doc_type' => $ctx['doc_type'] ?? '',","            'owner_type' => $ctx['owner_type'] ?? ''","        ];","","        $sql = \"INSERT INTO gl_interface_outbox (event_type, payload_json) VALUES (:t, :p)\";","        $st = $this->pdo->prepare($sql);","        $st->execute([","            ':t' => 'GRN_POSTED',","            ':p' => json_encode($payload, JSON_UNESCAPED_UNICODE)","        ]);","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/SettlementService.php": ["<?php","declare(strict_types=1);","","namespace Coupler;","use PDO;","use RuntimeException;","","final class SettlementService","{","    public function __construct(private PDO $pdo) {}","","    public function createHeader(int $customerId, string $mode, string $kind, string $bucket, ?string $notes): int","    {","        if ($customerId <= 0) throw new RuntimeException(\"customer_id required\");","        $mode   = in_array($mode, ['credit_note','purchase_ap','foc'], true) ? $mode : 'credit_note';","        $kind   = in_array($kind, ['remnant','scrap','mixed'], true) ? $kind : 'remnant';","        $bucket = in_array($bucket, ['RM','SCRAP'], true) ? $bucket : 'RM';","","        $st = $this->pdo->prepare(","            \"INSERT INTO settlement_headers (customer_id, mode, kind, bucket, notes) VALUES (?,?,?,?,?)\"","        );","        $st->execute([$customerId, $mode, $kind, $bucket, $notes]);","        return (int)$this->pdo->lastInsertId();","    }","","    /** Add a FULL piece. For partial qty, split the piece first (Phase 1.5). */","    public function addPiece(int $headerId, int $pieceId, float $rate): array","    {","        if ($headerId<=0 || $pieceId<=0 || $rate<=0) throw new RuntimeException(\"settlement_id, piece_id, rate required\");","","        $hdr = $this->getHeader($headerId, true);","        if ($hdr['status'] !== 'draft') throw new RuntimeException(\"Only draft settlements can be edited\");","","        $p   = $this->fetchPiece($pieceId);      if (!$p)  throw new RuntimeException(\"Piece not found\");","        $lot = $this->fetchLot((int)$p['lot_id']); if (!$lot) throw new RuntimeException(\"Lot not found\");","","        if (($lot['owner_type'] ?? 'company') !== 'customer')                      throw new RuntimeException(\"Piece is not party-owned\");","        if ((int)$lot['owner_id'] !== (int)$hdr['customer_id'])                    throw new RuntimeException(\"Piece belongs to a different customer\");","","        $qty = (float)$p['qty_base'];","        if ($qty <= 0) throw new RuntimeException(\"Piece has zero qty\");","","        $amount = round($qty * $rate, 2);","","        $st = $this->pdo->prepare(","            \"INSERT INTO settlement_lines (header_id, item_id, warehouse_id, lot_id, piece_id, qty_base, rate, amount, heat_no, plate_no)","             VALUES (?,?,?,?,?,?,?,?,?,?)\"","        );","        $st->execute([","            $headerId, (int)$lot['item_id'], (int)$lot['warehouse_id'], (int)$lot['id'], $pieceId,","            $qty, $rate, $amount, $lot['heat_no'] ?? null, $lot['plate_no'] ?? null","        ]);","","        $st = $this->pdo->prepare(\"UPDATE settlement_headers SET total_qty_base=total_qty_base+?, total_amount=total_amount+? WHERE id=?\");","        $st->execute([$qty, $amount, $headerId]);","","        return ['qty_base'=>$qty, 'amount'=>$amount];","    }","","    public function post(int $headerId): array","    {","        $hdr = $this->getHeader($headerId, true);","        if ($hdr['status'] !== 'draft') throw new RuntimeException(\"Settlement already posted/void\");","","        $lines = $this->getLines($headerId);","        if (!$lines) throw new RuntimeException(\"No lines to post\");","","        $this->pdo->beginTransaction();","        try {","            foreach ($lines as $ln) {","                $pieceId = (int)$ln['piece_id'];","                $qty     = (float)$ln['qty_base'];","","                // Re-validate current ownership","                $p   = $this->fetchPiece($pieceId);","                $lot = $this->fetchLot((int)$p['lot_id']);","                if (($lot['owner_type'] ?? 'company') !== 'customer' || (int)$lot['owner_id'] !== (int)$hdr['customer_id']) {","                    throw new RuntimeException(\"Ownership changed for piece {$pieceId}. Refresh and retry.\");","                }","","                // Create new company-owned lot and move the piece there (preserve heat/plate/meta)","                $insLot = $this->pdo->prepare(","                    \"INSERT INTO stock_lots (item_id, warehouse_id, owner_type, owner_id, parent_lot_id, heat_no, plate_no, received_grn_line_id, qty_base, status, meta)","                     VALUES (?,?,?,?,?,?,?,?,?,'free', (SELECT meta FROM stock_lots WHERE id=?))\"","                );","                $insLot->execute([","                    (int)$lot['item_id'], (int)$lot['warehouse_id'], 'company', null, (int)$lot['id'],","                    $lot['heat_no'] ?? null, $lot['plate_no'] ?? null, $lot['received_grn_line_id'] ?? null, $qty, (int)$lot['id']","                ]);","                $newLotId = (int)$this->pdo->lastInsertId();","","                // Reassign piece to new, company-owned lot","                $updPiece = $this->pdo->prepare(\"UPDATE lot_pieces SET lot_id=? WHERE id=?\");","                $updPiece->execute([$newLotId, $pieceId]);","","                // Adjust on-hand quantities: customer -> company","                // Reduce customer balance safely","                $sel = $this->pdo->prepare(\"SELECT qty FROM stock_onhand WHERE item_id=? AND warehouse_id=? AND owner_type='customer' AND owner_id=?\");","                $sel->execute([(int)$lot['item_id'], (int)$lot['warehouse_id'], (int)$hdr['customer_id']]);","                $row = $sel->fetch(PDO::FETCH_ASSOC);","                if ($row) {","                    $upd = $this->pdo->prepare(","                        \"UPDATE stock_onhand SET qty = GREATEST(qty - ?, 0) WHERE item_id=? AND warehouse_id=? AND owner_type='customer' AND owner_id=?\"","                    );","                    $upd->execute([$qty, (int)$lot['item_id'], (int)$lot['warehouse_id'], (int)$hdr['customer_id']]);","                }","","                // Increase company balance","                $sel2 = $this->pdo->prepare(\"SELECT qty FROM stock_onhand WHERE item_id=? AND warehouse_id=? AND owner_type='company' AND owner_id IS NULL\");","                $sel2->execute([(int)$lot['item_id'], (int)$lot['warehouse_id']]);","                if ($sel2->fetch(PDO::FETCH_ASSOC)) {","                    $upd2 = $this->pdo->prepare(\"UPDATE stock_onhand SET qty = qty + ? WHERE item_id=? AND warehouse_id=? AND owner_type='company' AND owner_id IS NULL\");","                    $upd2->execute([$qty, (int)$lot['item_id'], (int)$lot['warehouse_id']]);","                } else {","                    $ins = $this->pdo->prepare(\"INSERT INTO stock_onhand (item_id, warehouse_id, qty, owner_type, owner_id) VALUES (?,?,?,'company',NULL)\");","                    $ins->execute([(int)$lot['item_id'], (int)$lot['warehouse_id'], $qty]);","                }","","                // Ownership history","                $insH = $this->pdo->prepare(","                    \"INSERT INTO ownership_history (piece_id, from_owner_type, from_owner_id, to_owner_type, to_owner_id, reason, ref_table, ref_id)","                     VALUES (?,?,?,?,?,'settlement','settlement_headers',?)\"","                );","                $insH->execute([$pieceId, 'customer', (int)$hdr['customer_id'], 'company', null, $headerId]);","            }","","            // One aggregated GL entry per settlement","            $dr = ($hdr['bucket'] === 'SCRAP') ? '140500-Scrap Inventory' : '140100-RM Inventory';","            $amount = round((float)$hdr['total_amount'], 2);","","            if ($hdr['mode'] === 'credit_note') {","                $cr = '110000-Accounts Receivable';","                $this->enqueueGL('SETTLEMENT_POSTED', [","                    'dr'=>$dr, 'cr'=>$cr, 'amount'=>$amount,","                    'refs'=>['settlement_id'=>$headerId, 'customer_id'=>(int)$hdr['customer_id']]","                ]);","                $this->enqueueAR((int)$hdr['customer_id'], 'CREDIT_NOTE', $amount, ['settlement_id'=>$headerId]);","","            } elseif ($hdr['mode'] === 'purchase_ap') {","                $cr = '210000-Trade Payables';","                $this->enqueueGL('SETTLEMENT_POSTED', [","                    'dr'=>$dr, 'cr'=>$cr, 'amount'=>$amount,","                    'refs'=>['settlement_id'=>$headerId, 'customer_id'=>(int)$hdr['customer_id']]","                ]);","                // Bridge can map customer\u2192vendor if needed","                $this->enqueueAP((int)$hdr['customer_id'], 'PURCHASE_INVOICE', $amount, ['settlement_id'=>$headerId]);","","            } else { // foc","                $cr = '710900-Other Income (In-kind)';","                $this->enqueueGL('SETTLEMENT_POSTED', [","                    'dr'=>$dr, 'cr'=>$cr, 'amount'=>$amount,","                    'refs'=>['settlement_id'=>$headerId, 'customer_id'=>(int)$hdr['customer_id']]","                ]);","            }","","            $st = $this->pdo->prepare(\"UPDATE settlement_headers SET status='posted', posted_at=NOW() WHERE id=?\");","            $st->execute([$headerId]);","","            $this->pdo->commit();","            return ['posted'=>true, 'amount'=>$amount];","        } catch (\\Throwable $e) {","            $this->pdo->rollBack();","            throw $e;","        }","    }","","    // ----------------- helpers -----------------","    private function getHeader(int $id, bool $lock=false): array","    {","        $sql = \"SELECT * FROM settlement_headers WHERE id=?\";","        if ($lock) $sql .= \" FOR UPDATE\";","        $st = $this->pdo->prepare($sql);","        $st->execute([$id]);","        $row = $st->fetch(PDO::FETCH_ASSOC);","        if (!$row) throw new RuntimeException(\"Settlement not found\");","        return $row;","    }","","    private function getLines(int $hdrId): array","    {","        $st = $this->pdo->prepare(\"SELECT * FROM settlement_lines WHERE header_id=?\");","        $st->execute([$hdrId]);","        return $st->fetchAll(PDO::FETCH_ASSOC);","    }","","    private function fetchPiece(int $id): ?array","    {","        $st = $this->pdo->prepare(\"SELECT * FROM lot_pieces WHERE id=?\");","        $st->execute([$id]);","        $r = $st->fetch(PDO::FETCH_ASSOC);","        return $r ?: null;","    }","","    private function fetchLot(int $id): ?array","    {","        $st = $this->pdo->prepare(\"SELECT * FROM stock_lots WHERE id=?\");","        $st->execute([$id]);","        $r = $st->fetch(PDO::FETCH_ASSOC);","        return $r ?: null;","    }","","    private function enqueueGL(string $event, array $payload): void","    {","        $st = $this->pdo->prepare(\"INSERT INTO gl_interface_outbox (event_type, payload_json) VALUES (?,?)\");","        $st->execute([$event, json_encode($payload, JSON_UNESCAPED_UNICODE)]);","    }","","    private function enqueueAR(int $customerId, string $docType, float $amount, array $payload): void","    {","        $st = $this->pdo->prepare(\"INSERT INTO ar_interface_outbox (customer_id, doc_type, amount, payload_json) VALUES (?,?,?,?)\");","        $st->execute([$customerId, $docType, $amount, json_encode($payload, JSON_UNESCAPED_UNICODE)]);","    }","","    private function enqueueAP(int $vendorId, string $docType, float $amount, array $payload): void","    {","        $st = $this->pdo->prepare(\"INSERT INTO ap_interface_outbox (vendor_id, doc_type, amount, payload_json) VALUES (?,?,?,?)\");","        $st->execute([$vendorId, $docType, $amount, json_encode($payload, JSON_UNESCAPED_UNICODE)]);","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/QaLinkService.php": ["","<?php","declare(strict_types=1);","namespace Coupler;","use PDO; use RuntimeException;","","final class QaLinkService","{","    public function __construct(private PDO $pdo) {}","","    public function link(int $attachmentId, string $docType='heat_cert', ?int $lotId=null, ?int $grnLineId=null, ?int $itemId=null, ?string $notes=null): int {","        if ($attachmentId<=0) throw new RuntimeException(\"attachment_id required\");","        $st=$this->pdo->prepare(\"INSERT INTO qa_doc_links (attachment_id, doc_type, lot_id, grn_line_id, item_id, notes) VALUES (?,?,?,?,?,?)\");","        $st->execute([$attachmentId, $docType, $lotId, $grnLineId, $itemId, $notes]);","        return (int)$this->pdo->lastInsertId();","    }","","    public function unlink(int $linkId): bool {","        $st=$this->pdo->prepare(\"DELETE FROM qa_doc_links WHERE id=?\");","        return $st->execute([$linkId]);","    }","","    public function list(?int $lotId=null, ?int $grnLineId=null, ?int $attachmentId=null): array {","        $sql=\"SELECT * FROM qa_doc_links WHERE 1=1\"; $p=[];","        if($lotId){ $sql.=\" AND lot_id=?\"; $p[]=$lotId; }","        if($grnLineId){ $sql.=\" AND grn_line_id=?\"; $p[]=$grnLineId; }","        if($attachmentId){ $sql.=\" AND attachment_id=?\"; $p[]=$attachmentId; }","        $sql.=\" ORDER BY id DESC LIMIT 500\";","        $st=$this->pdo->prepare($sql); $st->execute($p);","        return $st->fetchAll(PDO::FETCH_ASSOC)?:[];","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/LandedCostService.php": ["","<?php","declare(strict_types=1);","namespace Coupler;","use PDO; use RuntimeException;","","final class LandedCostService","{","    public function __construct(private PDO $pdo) {}","","    public function createHeader(string $method='by_weight', ?int $supplierId=null, string $currency='INR', float $fx=1.0, ?string $notes=null): int {","        $method = in_array($method, ['by_weight','by_value','by_qty','by_volume'], true) ? $method : 'by_weight';","        $st=$this->pdo->prepare(\"INSERT INTO lc_headers (supplier_id,currency,fx_rate,method,notes) VALUES (?,?,?,?,?)\");","        $st->execute([$supplierId, $currency, $fx, $method, $notes]);","        return (int)$this->pdo->lastInsertId();","    }","","    public function addGRNLine(int $lcId, array $grnLine): int {","        $hdr = $this->getHeader($lcId);","        if ($hdr['status']!=='draft') throw new RuntimeException(\"Only draft LC can be edited\");","        $qty = (float)($grnLine['qty_base'] ?? 0);","        $val = (float)($grnLine['value_base'] ?? 0);","        $itemId = (int)($grnLine['item_id'] ?? 0);","        $wh = (int)($grnLine['warehouse_id'] ?? 0);","        if ($qty<=0 || $itemId<=0 || $wh<=0) throw new RuntimeException(\"item_id, warehouse_id, qty_base required\");","        $wkg = isset($grnLine['weight_kg']) ? (float)$grnLine['weight_kg'] : $qty;","        $cbm = isset($grnLine['volume_cbm']) ? (float)$grnLine['volume_cbm'] : null;","","        $st=$this->pdo->prepare(\"INSERT INTO lc_grn_lines (header_id, grn_id, grn_line_id, item_id, warehouse_id, qty_base, value_base, weight_kg, volume_cbm, meta)","                                 VALUES (?,?,?,?,?,?,?,?,?,?)\");","        $st->execute([$lcId, $grnLine['grn_id'] ?? null, $grnLine['grn_line_id'] ?? null, $itemId, $wh, $qty, $val, $wkg, $cbm, json_encode($grnLine, JSON_UNESCAPED_UNICODE)]);","        return (int)$this->pdo->lastInsertId();","    }","","    public function addCharge(int $lcId, string $code, float $amount, ?int $vendorId=null, string $currency='INR', float $fx=1.0, ?string $desc=null): int {","        $hdr = $this->getHeader($lcId);","        if ($hdr['status']!=='draft') throw new RuntimeException(\"Only draft LC can be edited\");","        $code = $code ?: 'other';","        $st=$this->pdo->prepare(\"INSERT INTO lc_charges (header_id,charge_code,amount,currency,fx_rate,vendor_id,description) VALUES (?,?,?,?,?,?,?)\");","        $st->execute([$lcId,$code,$amount,$currency,$fx,$vendorId,$desc]);","        $this->pdo->prepare(\"UPDATE lc_headers SET total_charges=COALESCE(total_charges,0)+? WHERE id=?\")->execute([$amount*$fx,$lcId]);","        return (int)$this->pdo->lastInsertId();","    }","","    public function allocate(int $lcId): array {","        $hdr = $this->getHeader($lcId, true);","        $charges = (float)$hdr['total_charges'];","        if ($charges<=0) throw new RuntimeException(\"No charges to allocate\");","        $lines = $this->fetchLines($lcId);","        if (!$lines) throw new RuntimeException(\"No GRN lines linked\");","","        // Compute basis sum","        $basisSum = 0.0;","        foreach ($lines as $ln) {","            $basisSum += $this->basisValue($hdr['method'], $ln);","        }","        if ($basisSum <= 0) throw new RuntimeException(\"Allocation basis is zero\");","","        $allocated = [];","        $this->pdo->beginTransaction();","        try {","            foreach ($lines as $ln) {","                $b = $this->basisValue($hdr['method'], $ln);","                $share = $charges * ($b / $basisSum);","                $perKg = $ln['qty_base'] > 0 ? $share / (float)$ln['qty_base'] : 0.0;","                $upd = $this->pdo->prepare(\"UPDATE lc_grn_lines SET allocated_cost=?, allocation_per_kg=? WHERE id=?\");","                $upd->execute([round($share,2), round($perKg,6), (int)$ln['id']]);","                $allocated[] = ['lc_grn_line_id'=>(int)$ln['id'], 'allocated'=>round($share,2), 'per_kg'=>round($perKg,6)];","            }","            $this->pdo->prepare(\"UPDATE lc_headers SET status='allocated' WHERE id=?\")->execute([$lcId]);","            $this->pdo->commit();","        } catch (\\Throwable $e) { $this->pdo->rollBack(); throw $e; }","","        return ['allocated'=>$allocated,'total'=>round($charges,2)];","    }","","    public function post(int $lcId): array {","        $hdr = $this->getHeader($lcId, true);","        if ($hdr['status']!=='allocated') throw new RuntimeException(\"Allocate before posting\");","        $lines = $this->fetchLines($lcId);","        if (!$lines) throw new RuntimeException(\"No GRN lines linked\");","","        // Option A: write cost_adjustments per item/warehouse; optionally per-lot if meta has lot_id","        $total = 0.0;","        $this->pdo->beginTransaction();","        try {","            foreach ($lines as $ln) {","                $perKg = (float)$ln['allocation_per_kg'];","                $qty   = (float)$ln['qty_base'];","                $adj   = round($perKg * $qty, 2);","                $total += $adj;","                $lotId = null;","                $meta = json_decode((string)$ln['meta'], true);","                if (isset($meta['lot_id'])) $lotId = (int)$meta['lot_id'];","","                $ins = $this->pdo->prepare(\"INSERT INTO cost_adjustments (lot_id,item_id,warehouse_id,basis,qty_base,adj_per_kg,total_adjustment,ref_table,ref_id)","                                            VALUES (?,?,?,?,?,?,?,?,?)\");","                $ins->execute([$lotId,(int)$ln['item_id'],(int)$ln['warehouse_id'],'LC',$qty,$perKg,$adj,'lc_headers',$lcId]);","            }","            // Queue GL: Dr Inventory, Cr Accrued LC (or Freight Payable)","            $this->enqueueGL('LC_POSTED', [","                'dr'=>'140100-RM Inventory',","                'cr'=>'221000-Landed Cost Clearing',","                'amount'=>round($total,2),","                'refs'=>['lc_id'=>$lcId]","            ]);","            $this->pdo->prepare(\"UPDATE lc_headers SET status='posted', posted_at=NOW() WHERE id=?\")->execute([$lcId]);","            $this->pdo->commit();","        } catch (\\Throwable $e) { $this->pdo->rollBack(); throw $e; }","        return ['posted'=>true,'amount'=>round($total,2)];","    }","","    private function basisValue(string $method, array $ln): float {","        return match($method){","            'by_value'  => (float)$ln['value_base'],","            'by_qty'    => (float)$ln['qty_base'],","            'by_volume' => (float)($ln['volume_cbm'] ?? 0),","            default     => (float)($ln['weight_kg'] ?? $ln['qty_base'])","        };","    }","","    private function getHeader(int $id, bool $lock=false): array {","        $sql=\"SELECT * FROM lc_headers WHERE id=?\"; if($lock) $sql.=\" FOR UPDATE\";","        $st=$this->pdo->prepare($sql); $st->execute([$id]);","        $row=$st->fetch(PDO::FETCH_ASSOC); if(!$row) throw new RuntimeException(\"LC not found\");","        return $row;","    }","","    private function fetchLines(int $lcId): array {","        $st=$this->pdo->prepare(\"SELECT * FROM lc_grn_lines WHERE header_id=?\");","        $st->execute([$lcId]); return $st->fetchAll(PDO::FETCH_ASSOC) ?: [];","    }","","    private function enqueueGL(string $event, array $payload): void {","        $st=$this->pdo->prepare(\"INSERT INTO gl_interface_outbox (event_type,payload_json) VALUES (?,?)\");","        $st->execute([$event, json_encode($payload, JSON_UNESCAPED_UNICODE)]);","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/CycleCountService.php": ["","<?php","declare(strict_types=1);","namespace Coupler;","use PDO; use RuntimeException;","","final class CycleCountService","{","    public function __construct(private PDO $pdo) {}","","    public function create(string $date, int $warehouseId, ?string $notes=null): int {","        $st=$this->pdo->prepare(\"INSERT INTO cc_headers (cc_date,warehouse_id,notes) VALUES (?,?,?)\");","        $st->execute([$date,$warehouseId,$notes]); return (int)$this->pdo->lastInsertId();","    }","    public function addLine(int $hdrId, int $itemId, float $counted): int {","        $hdr=$this->hdr($hdrId,true); if($hdr['status']!=='draft') throw new RuntimeException(\"Only draft\");","        $sys = $this->onhand($itemId, (int)$hdr['warehouse_id']);","        $var = round($counted - $sys, 6);","        $st=$this->pdo->prepare(\"INSERT INTO cc_lines (header_id,item_id,system_qty,counted_qty,variance) VALUES (?,?,?,?,?)\");","        $st->execute([$hdrId,$itemId,$sys,$counted,$var]); return (int)$this->pdo->lastInsertId();","    }","    public function post(int $hdrId): array {","        $hdr=$this->hdr($hdrId,true); if($hdr['status']!=='draft') throw new RuntimeException(\"Already posted/void\");","        $lines=$this->lines($hdrId); if(!$lines) throw new RuntimeException(\"No lines\");","        $this->pdo->beginTransaction();","        try{","            $sum=0.0;","            foreach($lines as $ln){","                $delta=(float)$ln['variance']; if(abs($delta)<1e-9) continue;","                $this->applyOnhand((int)$ln['item_id'], (int)$hdr['warehouse_id'], $delta);","                $sum += $delta;","            }","            $this->enqueueGL('CYCLECOUNT_POSTED',[","                'dr'=>$sum>0?'140100-RM Inventory':'710910-Inventory Shrinkage',","                'cr'=>$sum>0?'710910-Inventory Shrinkage':'140100-RM Inventory',","                'qty_total'=>round(abs($sum),6),","                'refs'=>['cc_id'=>$hdrId,'warehouse_id'=>(int)$hdr['warehouse_id']]","            ]);","            $this->pdo->prepare(\"UPDATE cc_headers SET status='posted' WHERE id=?\")->execute([$hdrId]);","            $this->pdo->commit();","            return ['posted'=>True,'lines'=>count($lines),'variance_total'=>round($sum,6)];","        } catch(\\Throwable $e){ $this->pdo->rollBack(); throw $e; }","    }","","    private function hdr(int $id,bool $lock=false): array{ $sql=\"SELECT * FROM cc_headers WHERE id=?\"; if($lock)$sql.=\" FOR UPDATE\"; $st=$this->pdo->prepare($sql);$st->execute([$id]); $r=$st->fetch(PDO::FETCH_ASSOC); if(!$r) throw new RuntimeException(\"not found\"); return $r; }","    private function lines(int $id): array{ $st=$this->pdo->prepare(\"SELECT * FROM cc_lines WHERE header_id=?\"); $st->execute([$id]); return $st->fetchAll(PDO::FETCH_ASSOC)?:[]; }","    private function onhand(int $item,int $wh): float{ $st=$this->pdo->prepare(\"SELECT qty FROM stock_onhand WHERE item_id=? AND warehouse_id=? AND owner_type='company' AND (owner_id IS NULL OR owner_id=0)\"); $st->execute([$item,$wh]); $r=$st->fetch(PDO::FETCH_ASSOC); return $r?(float)$r['qty']:0.0; }","    private function applyOnhand(int $item,int $wh,float $delta): void{","        $sel=$this->pdo->prepare(\"SELECT qty FROM stock_onhand WHERE item_id=? AND warehouse_id=? AND owner_type='company' AND owner_id IS NULL\"); $sel->execute([$item,$wh]);","        if($sel->fetch()) $this->pdo->prepare(\"UPDATE stock_onhand SET qty=qty+? WHERE item_id=? AND warehouse_id=? AND owner_type='company' AND owner_id IS NULL\")->execute([$delta,$item,$wh]);","        else $this->pdo->prepare(\"INSERT INTO stock_onhand (item_id,warehouse_id,qty,owner_type,owner_id) VALUES (?,?,?,'company',NULL)\")->execute([$item,$wh,$delta]);","    }","    private function enqueueGL(string $event, array $payload): void{ $st=$this->pdo->prepare(\"INSERT INTO gl_interface_outbox (event_type,payload_json) VALUES (?,?)\"); $st->execute([$event,json_encode($payload,JSON_UNESCAPED_UNICODE)]); }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/coupler/ScrapRemnantService.php": ["","<?php","declare(strict_types=1);","namespace Coupler;","use PDO; use RuntimeException;","","final class ScrapRemnantService","{","    public function __construct(private PDO $pdo) {}","","    public function markRemnant(int $pieceId, float $qty, string $reason): int {","        $p=$this->piece($pieceId); if(!$p) throw new RuntimeException(\"piece not found\");","        $st=$this->pdo->prepare(\"INSERT INTO remnant_actions (piece_id,action,qty_base,reason) VALUES (?,?,?,?)\");","        $st->execute([$pieceId,'mark_remnant',$qty,$reason]);","        // optional: update piece meta/status","        return (int)$this->pdo->lastInsertId();","    }","","    public function convertToScrap(int $pieceId, float $qty, int $scrapItemId, int $warehouseId, string $reason): array {","        $p=$this->piece($pieceId); if(!$p) throw new RuntimeException(\"piece not found\");","        $this->pdo->beginTransaction();","        try{","            $this->pdo->prepare(\"INSERT INTO remnant_actions (piece_id,action,qty_base,reason) VALUES (?,?,?,?)\")->execute([$pieceId,'convert_to_scrap',$qty,$reason]);","            // Increase scrap onhand (company)","            $sel=$this->pdo->prepare(\"SELECT qty FROM stock_onhand WHERE item_id=? AND warehouse_id=? AND owner_type='company' AND owner_id IS NULL\");","            $sel->execute([$scrapItemId,$warehouseId]);","            if($sel->fetch()) $this->pdo->prepare(\"UPDATE stock_onhand SET qty=qty+? WHERE item_id=? AND warehouse_id=? AND owner_type='company' AND owner_id IS NULL\")->execute([$qty,$scrapItemId,$warehouseId]);","            else $this->pdo->prepare(\"INSERT INTO stock_onhand (item_id,warehouse_id,qty,owner_type,owner_id) VALUES (?,?,?,'company',NULL)\")->execute([$scrapItemId,$warehouseId,$qty]);","            $this->pdo->prepare(\"INSERT INTO scrap_receipts (item_id,warehouse_id,qty_base,source,source_id,notes) VALUES (?,?,?,?,?,?)\")->execute([$scrapItemId,$warehouseId,$qty,'remnant',$pieceId,$reason]);","            // GL","            $this->enqueueGL('SCRAP_RECEIPT',['dr'=>'140500-Scrap Inventory','cr'=>'510100-Consumption / WIP','qty'=>$qty,'refs'=>['piece_id'=>$pieceId]]);","            $this->pdo->commit();","            return ['ok'=>true,'qty'=>$qty];","        } catch(\\Throwable $e){ $this->pdo->rollBack(); throw $e; }","    }","","    private function piece(int $id): ?array { $st=$this->pdo->prepare(\"SELECT * FROM lot_pieces WHERE id=?\"); $st->execute([$id]); $r=$st->fetch(PDO::FETCH_ASSOC); return $r?:null; }","    private function enqueueGL(string $event, array $payload): void { $st=$this->pdo->prepare(\"INSERT INTO gl_interface_outbox (event_type,payload_json) VALUES (?,?)\"); $st->execute([$event,json_encode($payload,JSON_UNESCAPED_UNICODE)]); }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/services/MaterialCodeService.php": ["<?php","declare(strict_types=1);","","final class MaterialCodeService","{","    public function __construct(private PDO $pdo) {}","","    public function generate(","        int $categoryId,","        ?int $subcategoryId,","        ?float $T = null,","        ?float $W = null,","        ?float $L = null","    ): string {","        // 1) Load prefixes","        $cat = $this->fetchOne(\"SELECT id, prefix FROM material_categories WHERE id=? AND status='active'\", [$categoryId]);","        if (!$cat) { throw new RuntimeException(\"Invalid category\"); }","        $catPrefix = (string)$cat['prefix'];","","        $subPrefix = '';","        if ($subcategoryId) {","            $sub = $this->fetchOne(\"SELECT id, prefix FROM material_subcategories WHERE id=? AND category_id=?\", [$subcategoryId, $categoryId]);","            if (!$sub) { throw new RuntimeException(\"Invalid subcategory\"); }","            $subPrefix = (string)$sub['prefix'];","        }","","        // 2) Resolve pattern: SUBCAT:{id} > CAT:{id} > DEFAULT","        $pattern = $this->fetchPattern($subcategoryId, $categoryId) ?? '{CAT}-{SUB}-{YYYY}-{SEQ4}';","","        // 3) Next sequence (yearly, scoped to CAT-SUB-YYYY)","        $year = (int)date('Y');","        $seqKey = trim($catPrefix . '-' . $subPrefix, '-'); // e.g., PL-FLG or PL","        if ($seqKey === '') { $seqKey = $catPrefix ?: 'GEN'; }","        $nextSeq = $this->nextSeq($seqKey, $year); // increments in DB","        // Normalize dimensions (strip trailing .00 etc.)","        $fmt = fn($v) => $v === null ? '' : rtrim(rtrim(number_format((float)$v, 2, '.', ''), '0'), '.');","","        // 4) Render tokens","        $rep = [","            '{CAT}'  => $catPrefix,","            '{SUB}'  => $subPrefix,","            '{YYYY}' => (string)$year,","            '{YY}'   => substr((string)$year, -2),","            '{T}'    => $fmt($T),","            '{W}'    => $fmt($W),","            '{L}'    => $fmt($L),","        ];","        // Support {SEQ2}..{SEQ6}","        for ($n = 2; $n <= 6; $n++) {","            $rep['{SEQ' . $n . '}'] = str_pad((string)$nextSeq, $n, '0', STR_PAD_LEFT);","        }","","        $code = strtr($pattern, $rep);","        // collapse duplicate dashes if SUB/D dims empty; trim","        $code = preg_replace('/-{2,}/', '-', $code);","        return trim($code, '-');","    }","","    private function fetchPattern(?int $subcategoryId, int $categoryId): ?string {","        // Prefer pattern_key = \"SUBCAT:{id}\"","        if ($subcategoryId) {","            $p = $this->fetchOne(\"SELECT pattern FROM code_patterns WHERE active=1 AND pattern_key=?\", ['SUBCAT:' . (int)$subcategoryId]);","            if ($p) return (string)$p['pattern'];","        }","        // Then \"CAT:{id}\"","        $p = $this->fetchOne(\"SELECT pattern FROM code_patterns WHERE active=1 AND pattern_key=?\", ['CAT:' . (int)$categoryId]);","        if ($p) return (string)$p['pattern'];","        // Then DEFAULT","        $p = $this->fetchOne(\"SELECT pattern FROM code_patterns WHERE active=1 AND pattern_key='DEFAULT'\");","        return $p ? (string)$p['pattern'] : null;","    }","","    private function nextSeq(string $seqKey, int $year): int {","        $this->pdo->beginTransaction();","        try {","            // Try select-for-update the existing row","            $sel = $this->pdo->prepare(\"SELECT id, next_value FROM sequences WHERE seq_key=? AND year=? FOR UPDATE\");","            $sel->execute([$seqKey, $year]);","            $row = $sel->fetch(PDO::FETCH_ASSOC);","","            if ($row) {","                $next = (int)$row['next_value'];","                $upd = $this->pdo->prepare(\"UPDATE sequences SET next_value = next_value + 1 WHERE id=?\");","                $upd->execute([(int)$row['id']]);","            } else {","                // Insert new sequence row starting at 2, return 1","                $ins = $this->pdo->prepare(\"INSERT INTO sequences (seq_key, year, next_value) VALUES (?,?,2)\");","                $ins->execute([$seqKey, $year]);","                $next = 1;","            }","            $this->pdo->commit();","            return $next;","        } catch (\\Throwable $e) {","            $this->pdo->rollBack();","            throw $e;","        }","    }","","    private function fetchOne(string $sql, array $params = []): ?array {","        $st = $this->pdo->prepare($sql);","        $st->execute($params);","        $r = $st->fetch(PDO::FETCH_ASSOC);","        return $r ?: null;","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/services/WorkOrderService.php": ["<?php","/** PATH: /public_html/includes/services/WorkOrderService.php"," * Uses MetricService to auto-compute planned qty from process_qty_rule if linked."," */","declare(strict_types=1);","","if (!function_exists('db')) {","  require_once __DIR__ . '/../db.php';","}","require_once __DIR__ . '/MetricService.php';","","final class WorkOrderService","{","    public static function ensurePwoForRouting(PDO $pdo, int $routing_op_id, array $overrides = []): array","    {","        $pdo->beginTransaction();","        try {","            $ro = self::fetchRoutingOp($pdo, $routing_op_id);","            if (!$ro) throw new RuntimeException(\"Routing op not found: {$routing_op_id}\");","","            $existing = self::findExistingOpenPwo($pdo, $routing_op_id);","            if ($existing) { $pdo->commit(); return ['pwo_id'=>(int)$existing['id'],'created'=>false]; }","","            $proc = self::fetchProcess($pdo, (int)$ro['process_id']);","","            $assign_type  = $overrides['assign_type']  ?? ($ro['default_assign_type'] ?? 'company');","            $contractor_id= ($assign_type === 'contractor')","                ? (int)($overrides['contractor_id'] ?? ($ro['default_contractor_id'] ?? 0)) ?: null","                : null;","","            $work_center_id = (int)($overrides['work_center_id'] ?? ($ro['work_center_id'] ?? 0)) ?: null;","","            // --- derive planned qty via rule if available ---","            $computed = MetricService::computeForRoutingOp($pdo, $routing_op_id);","            $planned_prod_qty = isset($overrides['planned_prod_qty']) ? (float)$overrides['planned_prod_qty']","                                 : ($computed ? (float)$computed['qty'] : (isset($ro['default_plan_prod_qty']) ? (float)$ro['default_plan_prod_qty'] : 0));","","            $planned_comm_qty = isset($overrides['planned_comm_qty']) ? (float)$overrides['planned_comm_qty']","                                 : (isset($ro['default_plan_comm_qty']) ? (float)$ro['default_plan_comm_qty'] : null);","","            // UOMs: prefer rule->result_uom, else process defaults","            $prod_uom_id = (int)($overrides['prod_uom_id'] ?? ($computed['uom_id'] ?? ($proc['prod_uom_id'] ?? 0))) ?: null;","            $comm_uom_id = (int)($overrides['comm_uom_id'] ?? ($proc['output_uom_id'] ?? 0)) ?: null;","","            $plan_start_date = $overrides['plan_start_date'] ?? null;","            $plan_end_date   = $overrides['plan_end_date']   ?? null;","","            // legacy columns","            $planned_qty = $planned_prod_qty;","            $uom_id      = $prod_uom_id;","","            $sql = \"INSERT INTO process_work_orders","                       (routing_op_id, bom_component_id, process_id, work_center_id,","                        planned_qty, planned_prod_qty, uom_id, prod_uom_id,","                        planned_comm_qty, comm_uom_id,","                        plan_start_date, plan_end_date,","                        assign_type, contractor_id, status, assembly_id, created_at)","                    VALUES","                       (:routing_op_id, :bom_component_id, :process_id, :work_center_id,","                        :planned_qty, :planned_prod_qty, :uom_id, :prod_uom_id,","                        :planned_comm_qty, :comm_uom_id,","                        :plan_start_date, :plan_end_date,","                        :assign_type, :contractor_id, 'planned', :assembly_id, NOW())\";","            $stmt = $pdo->prepare($sql);","            $stmt->execute([","                ':routing_op_id'     => $routing_op_id,","                ':bom_component_id'  => (int)$ro['bom_component_id'],","                ':process_id'        => (int)$ro['process_id'],","                ':work_center_id'    => $work_center_id,","                ':planned_qty'       => $planned_qty,","                ':planned_prod_qty'  => $planned_prod_qty,","                ':uom_id'            => $uom_id,","                ':prod_uom_id'       => $prod_uom_id,","                ':planned_comm_qty'  => $planned_comm_qty,","                ':comm_uom_id'       => $comm_uom_id,","                ':plan_start_date'   => $plan_start_date,","                ':plan_end_date'     => $plan_end_date,","                ':assign_type'       => $assign_type,","                ':contractor_id'     => $contractor_id,","                ':assembly_id'       => $ro['assembly_id'] ?? null,","            ]);","","            $pwo_id = (int)$pdo->lastInsertId();","            $pdo->commit();","            return ['pwo_id' => $pwo_id, 'created' => true];","        } catch (Throwable $e) {","            if ($pdo->inTransaction()) $pdo->rollBack();","            throw $e;","        }","    }","","    public static function bulkGenerateForBom(PDO $pdo, int $bom_id, ?int $component_id, array $overrides = []): array","    {","        $ops = self::fetchRoutingOpsForScope($pdo, $bom_id, $component_id);","        $results = ['created' => 0, 'skipped' => 0, 'items' => []];","        foreach ($ops as $op) {","            try {","                $r = self::ensurePwoForRouting($pdo, (int)$op['id'], $overrides);","                $results['items'][] = ['routing_op_id' => (int)$op['id'], 'pwo_id' => (int)$r['pwo_id'], 'created' => $r['created']];","                if ($r['created']) $results['created']++; else $results['skipped']++;","            } catch (Throwable $e) {","                $results['items'][] = ['routing_op_id' => (int)$op['id'], 'error' => $e->getMessage()];","            }","        }","        return $results;","    }","","    private static function fetchRoutingOp(PDO $pdo, int $id): ?array","    {","        $sql = \"SELECT ro.* FROM routing_ops ro WHERE ro.id=:id\";","        $st = $pdo->prepare($sql);","        $st->execute([':id'=>$id]);","        $row = $st->fetch(PDO::FETCH_ASSOC);","        return $row ?: null;","    }","","    private static function findExistingOpenPwo(PDO $pdo, int $routing_op_id): ?array","    {","        $sql = \"SELECT id, status","                  FROM process_work_orders","                 WHERE routing_op_id = :rid","                   AND status NOT IN ('closed','completed')","                 ORDER BY id DESC LIMIT 1\";","        $st = $pdo->prepare($sql);","        $st->execute([':rid'=>$routing_op_id]);","        $row = $st->fetch(PDO::FETCH_ASSOC);","        return $row ?: null;","    }","","    private static function fetchProcess(PDO $pdo, int $process_id): array","    {","        $st = $pdo->prepare(\"SELECT id, prod_uom_id, output_uom_id FROM processes WHERE id=:id\");","        $st->execute([':id'=>$process_id]);","        $row = $st->fetch(PDO::FETCH_ASSOC);","        if (!$row) throw new RuntimeException(\"Process not found: {$process_id}\");","        return $row;","    }","","    private static function fetchRoutingOpsForScope(PDO $pdo, int $bom_id, ?int $component_id): array","    {","        if ($component_id) {","            $sql = \"SELECT ro.id","                      FROM routing_ops ro","                      JOIN bom_components bc ON bc.id = ro.bom_component_id","                     WHERE bc.bom_id = :bom AND bc.id = :comp","                     ORDER BY ro.seq_no ASC\";","            $st = $pdo->prepare($sql);","            $st->execute([':bom'=>$bom_id, ':comp'=>$component_id]);","            return $st->fetchAll(PDO::FETCH_ASSOC);","        } else {","            $sql = \"SELECT ro.id","                      FROM routing_ops ro","                      JOIN bom_components bc ON bc.id = ro.bom_component_id","                     WHERE bc.bom_id = :bom","                     ORDER BY ro.bom_component_id, ro.seq_no ASC\";","            $st = $pdo->prepare($sql);","            $st->execute([':bom'=>$bom_id]);","            return $st->fetchAll(PDO::FETCH_ASSOC);","        }","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/services/ValuationService.php": ["<?php","/** PATH: /public_html/includes/services/ValuationService.php */","declare(strict_types=1);","","if (!function_exists('require_base')) {","  function require_base(string $rel): void { require_once __DIR__ . '/../' . ltrim($rel, '/'); }","}","require_base('db.php');","","final class ValuationService","{","    public static function getAvg(PDO $pdo, int $item_id, int $warehouse_id): array","    {","        $stmt = $pdo->prepare(\"SELECT avg_cost, qty_basis FROM stock_avg WHERE item_id=? AND warehouse_id=?\");","        $stmt->execute([$item_id, $warehouse_id]);","        $row = $stmt->fetch(PDO::FETCH_ASSOC);","        if (!$row) return ['avg_cost' => 0.0, 'qty_basis' => 0.0];","        return ['avg_cost' => (float)$row['avg_cost'], 'qty_basis' => (float)$row['qty_basis']];","    }","","    /** Update moving average when positive stock comes in */","    public static function onPositiveReceipt(PDO $pdo, int $item_id, int $warehouse_id, float $qty_in, float $unit_cost): void","    {","        if ($qty_in <= 0) return;","","        // current basis","        $cur = self::getAvg($pdo, $item_id, $warehouse_id);","        $prev_qty = $cur['qty_basis'];","        $prev_avg = $cur['avg_cost'];","","        // new average","        $new_qty = $prev_qty + $qty_in;","        $new_avg = ($prev_qty * $prev_avg + $qty_in * $unit_cost) / max(0.000001, $new_qty);","","        // upsert","        $pdo->prepare(\"","          INSERT INTO stock_avg (item_id, warehouse_id, avg_cost, qty_basis)","          VALUES (?, ?, ?, ?)","          ON DUPLICATE KEY UPDATE avg_cost=VALUES(avg_cost), qty_basis=VALUES(qty_basis)","        \")->execute([$item_id, $warehouse_id, $new_avg, $new_qty]);","    }","","    /** Decrease basis on issue (does not change avg cost; avg stays until next receipt) */","    public static function onIssue(PDO $pdo, int $item_id, int $warehouse_id, float $qty_out): void","    {","        if ($qty_out <= 0) return;","        $cur = self::getAvg($pdo, $item_id, $warehouse_id);","        $new_qty = max(0.0, $cur['qty_basis'] - $qty_out);","        $pdo->prepare(\"","          INSERT INTO stock_avg (item_id, warehouse_id, avg_cost, qty_basis)","          VALUES (?, ?, ?, ?)","          ON DUPLICATE KEY UPDATE qty_basis=VALUES(qty_basis)","        \")->execute([$item_id, $warehouse_id, $cur['avg_cost'], $new_qty]);","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/services/ItemCodeService.php": ["<?php","declare(strict_types=1);","","/**"," * Material code generator with tokenized patterns."," * Priority of pattern:"," *  - subcategory: \"SUB_{id}\" if exists"," *  - category:    \"CAT_{id}\" if exists"," *  - 'DEFAULT' pattern"," *"," * Tokens supported:"," * {CAT} {SUB} {YYYY} {YY} {T} {W} {L} {SEQ2..SEQ6}"," */","final class ItemCodeService {","","  public static function generate(array $input): string {","    // Expected in $input:","    // category_id (int), subcategory_id (int|null), uom_id (int),","    // thickness_mm (float|null), width_mm (float|null), length_mm (float|null)","    $pdo = db();","","    // Fetch category/subcategory prefixes","    $cat = self::fetchOne($pdo, \"SELECT id, prefix FROM material_categories WHERE id=? AND status='active' LIMIT 1\", [$input['category_id']]);","    if (!$cat) throw new RuntimeException(\"Invalid category\");","","    $sub = null;","    if (!empty($input['subcategory_id'])) {","      $sub = self::fetchOne($pdo, \"SELECT id, prefix FROM material_subcategories WHERE id=? AND status='active' LIMIT 1\", [$input['subcategory_id']]);","    }","","    $catPrefix = $cat['prefix'];","    $subPrefix = $sub['prefix'] ?? 'GEN';","","    // Choose pattern (SUB > CAT > DEFAULT)","    $patternRow = self::fetchOne($pdo, \"SELECT pattern FROM code_patterns WHERE pattern_key=? AND active=1 LIMIT 1\", [\"SUB_\" . ($sub['id'] ?? 0)]);","    if (!$patternRow) {","      $patternRow = self::fetchOne($pdo, \"SELECT pattern FROM code_patterns WHERE pattern_key=? AND active=1 LIMIT 1\", [\"CAT_\" . $cat['id']]);","    }","    if (!$patternRow) {","      $patternRow = self::fetchOne($pdo, \"SELECT pattern FROM code_patterns WHERE pattern_key='DEFAULT' AND active=1 LIMIT 1\");","    }","    $pattern = $patternRow['pattern'] ?? '{CAT}-{SUB}-{YYYY}-{SEQ4}';","","    // Year parts","    $yyyy = (int)date('Y');","    $yy   = (int)date('y');","","    // Dimension tokens (strip trailing .00)","    $fmt = function($n) {","      if ($n === null) return '';","      $s = rtrim(rtrim(number_format((float)$n, 2, '.', ''), '0'), '.');","      return $s === '' ? '0' : $s;","    };","    $T = $fmt($input['thickness_mm'] ?? null);","    $W = $fmt($input['width_mm'] ?? null);","    $L = $fmt($input['length_mm'] ?? null);","","    // First, replace non-seq tokens","    $code = strtr($pattern, [","      '{CAT}'  => $catPrefix,","      '{SUB}'  => $subPrefix,","      '{YYYY}' => (string)$yyyy,","      '{YY}'   => str_pad((string)$yy, 2, '0', STR_PAD_LEFT),","      '{T}'    => $T,","      '{W}'    => $W,","      '{L}'    => $L,","    ]);","","    // Sequence: detect {SEQn}","    if (!preg_match('/\\{SEQ([2-6])\\}/', $code, $m)) {","      // fallback to 4-digit","      $code .= '-{SEQ4}';","      $m = [0, '4'];","    }","    $seqDigits = (int)$m[1];","","    // Build seq key \u2013 keeps sequences per CAT-SUB-YYYY by default","    // Feel free to change to $code without {SEQ*} for more granularity.","    $seqKey = \"{$catPrefix}-{$subPrefix}-{$yyyy}\";","    $next = self::nextSeq($pdo, $seqKey, $yyyy);","","    $seqStr = str_pad((string)$next, $seqDigits, '0', STR_PAD_LEFT);","    $code = preg_replace('/\\{SEQ[2-6]\\}/', $seqStr, $code);","","    // Ensure uniqueness; retry bump if collision (rare)","    $tries = 0;","    while ($tries < 3) {","      $exists = self::fetchOne($pdo, \"SELECT id FROM items WHERE material_code=? LIMIT 1\", [$code]);","      if (!$exists) break;","      $next    = self::nextSeq($pdo, $seqKey, $yyyy); // reserve next","      $seqStr  = str_pad((string)$next, $seqDigits, '0', STR_PAD_LEFT);","      $code    = preg_replace('/\\d{'. $seqDigits .'}/', $seqStr, $code, 1);","      $tries++;","    }","","    return $code;","  }","","  private static function fetchOne(PDO $pdo, string $sql, array $bind = []): ?array {","    $st = $pdo->prepare($sql); $st->execute($bind);","    $r = $st->fetch(PDO::FETCH_ASSOC);","    return $r ?: null;","  }","","  private static function nextSeq(PDO $pdo, string $seqKey, ?int $year): int {","    $pdo->beginTransaction();","    try {","      $sel = $pdo->prepare(\"SELECT id, next_value FROM sequences WHERE seq_key=? AND (year<=>?) LIMIT 1\");","      $sel->execute([$seqKey, $year]);","      $row = $sel->fetch(PDO::FETCH_ASSOC);","","      if ($row) {","        $next = (int)$row['next_value'];","        $upd = $pdo->prepare(\"UPDATE sequences SET next_value = next_value + 1 WHERE id=?\");","        $upd->execute([$row['id']]);","      } else {","        $next = 1;","        $ins = $pdo->prepare(\"INSERT INTO sequences (seq_key, year, next_value) VALUES (?,?,2)\");","        $ins->execute([$seqKey, $year]);","      }","","      $pdo->commit();","      return $next;","    } catch (\\Throwable $e) {","      if ($pdo->inTransaction()) $pdo->rollBack();","      throw $e;","    }","  }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/services/NumberingService.php": ["<?php","/** PATH: /public_html/includes/services/NumberingService.php */","declare(strict_types=1);","","if (!function_exists('require_base')) {","  function require_base(string $rel): void {","    require_once __DIR__ . '/../' . ltrim($rel, '/');","  }","}","require_base('db.php');","","/**"," * Backward-compatible numbering service:"," * 1) Known codes in MAP -> per-document tables (current behavior)"," * 2) Otherwise -> generic table number_sequences(series, year, seq)"," */","final class NumberingService","{","    private const MAP = [","        'REQ'   => ['table' => 'req_sequences',       'prefix' => 'MR'],","        'ISSUE' => ['table' => 'issue_sequences',     'prefix' => 'MI'],","        'GRN'   => ['table' => 'grn_sequences',       'prefix' => 'GRN'],","        'RTV'   => ['table' => 'rtv_sequences',       'prefix' => 'RTV'],","        'TRF'   => ['table' => 'transfer_sequences',  'prefix' => 'TRF'],","        'ADJ'   => ['table' => 'adjust_sequences',    'prefix' => 'ADJ'],","        'PR'    => ['table' => 'pr_sequences',        'prefix' => 'PR'],","        'IND'   => ['table' => 'indent_sequences',    'prefix' => 'IND'],","        'PA'    => ['table' => 'pa_sequences',        'prefix' => 'PA'],","        'GP'    => ['table' => 'gp_sequences',        'prefix' => 'GP'],","        'GPR'   => ['table' => 'gpr_sequences',       'prefix' => 'GPR'],","    ];","","    public static function next(PDO $pdo, string $code): string","    {","        $code = strtoupper(trim($code));","        $year = (int)date('Y');","","        if (isset(self::MAP[$code])) {","            $meta   = self::MAP[$code];","            return self::nextFromPerDocTable($pdo, $meta['table'], $meta['prefix'], $year);","        }","        return self::nextFromGenericTable($pdo, $code, $year);","    }","","    private static function nextFromPerDocTable(PDO $pdo, string $table, string $prefix, int $year): string","    {","        $ownTx = !$pdo->inTransaction();","        if ($ownTx) { $pdo->beginTransaction(); }","","        try {","            $stmt = $pdo->prepare(\"SELECT seq FROM {$table} WHERE year = ? FOR UPDATE\");","            $stmt->execute([$year]);","            $row = $stmt->fetch(PDO::FETCH_ASSOC);","","            if ($row) {","                $seq = (int)$row['seq'] + 1;","                $pdo->prepare(\"UPDATE {$table} SET seq=? WHERE year=?\")->execute([$seq, $year]);","            } else {","                $seq = 1;","                $pdo->prepare(\"INSERT INTO {$table}(year, seq) VALUES(?, ?)\")->execute([$year, $seq]);","            }","            if ($ownTx) { $pdo->commit(); }","        } catch (Throwable $e) {","            if ($ownTx && $pdo->inTransaction()) { $pdo->rollBack(); }","            throw $e;","        }","        return sprintf('%s-%04d-%04d', $prefix, $year, $seq);","    }","","    private static function nextFromGenericTable(PDO $pdo, string $series, int $year): string","    {","        self::ensureGenericTable($pdo);","","        $ownTx = !$pdo->inTransaction();","        if ($ownTx) { $pdo->beginTransaction(); }","","        try {","            $sel = $pdo->prepare(\"SELECT seq FROM number_sequences WHERE series = ? AND year = ? FOR UPDATE\");","            $sel->execute([$series, $year]);","            $row = $sel->fetch(PDO::FETCH_ASSOC);","","            if ($row) {","                $seq = (int)$row['seq'] + 1;","                $pdo->prepare(\"UPDATE number_sequences SET seq=? WHERE series=? AND year=?\")","                    ->execute([$seq, $series, $year]);","            } else {","                $seq = 1;","                $pdo->prepare(\"INSERT INTO number_sequences(series, year, seq) VALUES(?, ?, ?)\")","                    ->execute([$series, $year, $seq]);","            }","            if ($ownTx) { $pdo->commit(); }","        } catch (Throwable $e) {","            if ($ownTx && $pdo->inTransaction()) { $pdo->rollBack(); }","            throw $e;","        }","","        return sprintf('%s-%04d-%04d', $series, $year, $seq);","    }","","    private static function ensureGenericTable(PDO $pdo): void","    {","        $pdo->exec(\"","            CREATE TABLE IF NOT EXISTS number_sequences (","              series VARCHAR(16) NOT NULL,","              year   INT NOT NULL,","              seq    INT NOT NULL,","              PRIMARY KEY (series, year)","            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;","        \");","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/services/MetricService.php": ["<?php","/** PATH: /public_html/includes/services/MetricService.php"," * Adds per-operation variables (routing_op_vars) for count-based operations like drilling."," * These vars are merged with the standard BOM dimension variables."," */","declare(strict_types=1);","","final class MetricService","{","    /** Standard variables from bom_components */","    public static function varsForBomComponent(array $bc): array","    {","        $Lmm = (float)($bc['length_mm'] ?? 0);","        $Wmm = (float)($bc['width_mm'] ?? 0);","        $Tmm = (float)($bc['thickness_mm'] ?? 0);","        $Dmm = (float)($bc['diameter_mm'] ?? 0);","        $Hmm = (float)($bc['height_mm'] ?? 0);","        $Qty = (float)($bc['qty'] ?? 1);","        $density_kg_m3 = isset($bc['material_density_kg_m3']) ? (float)$bc['material_density_kg_m3'] : ((float)($bc['density_gcc'] ?? 7.85) * 1000.0);","","        $vars = [","            // mm inputs","            'L_mm' => $Lmm,","            'W_mm' => $Wmm,","            'T_mm' => $Tmm,","            'D_mm' => $Dmm,","            'H_mm' => $Hmm,","            'qty'  => $Qty,","            'density_kg_m3' => $density_kg_m3,","","            // meters convenience","            'L' => $Lmm / 1000.0,","            'W' => $Wmm / 1000.0,","            'T' => $Tmm / 1000.0,","            'D' => $Dmm / 1000.0,","            'H' => $Hmm / 1000.0,","","            // common synonyms","            'Thk' => $Tmm / 1000.0,","            'THK' => $Tmm / 1000.0,","            't'   => $Tmm / 1000.0,","            'thk' => $Tmm / 1000.0,","            'THK_mm' => $Tmm,","            'thk_mm' => $Tmm,","","            // areas (rectangular assumptions)","            'area_top_m2' => ($Lmm * $Wmm) / 1e6,","            'area_side_m2' => ($Lmm * $Tmm) / 1e6,","            'area_front_m2' => ($Wmm * $Tmm) / 1e6,","        ];","","        // surface area approximations (plate/cuboid)","        $vars['area_rect_m2'] = 2.0 * ($vars['area_top_m2'] + $vars['area_side_m2'] + $vars['area_front_m2']);","","        // cylindrical helpers","        $pi = 3.141592653589793;","        $radius_m = ($Dmm / 1000.0) / 2.0;","        $vars['circumference_m'] = 2.0 * $pi * $radius_m;","        $vars['cyl_area_m2'] = 2.0 * $pi * $radius_m * ($Lmm/1000.0); // side area only","","        // volume estimates","        $vars['vol_rect_m3'] = ($Lmm/1000.0) * ($Wmm/1000.0) * ($Tmm/1000.0);","        $vars['vol_cyl_m3']  = $pi * $radius_m * $radius_m * ($Lmm/1000.0);","","        // weight estimates","        $vars['weight_rect_kg'] = $vars['vol_rect_m3'] * $density_kg_m3 * $Qty;","        $vars['weight_cyl_kg']  = $vars['vol_cyl_m3']  * $density_kg_m3 * $Qty;","","        return $vars;","    }","","    /** Merge in variables defined per routing operation */","    public static function mergeOpVars(PDO $pdo, int $routing_op_id, array $vars): array","    {","        try {","            $st = $pdo->prepare(\"SELECT name, value FROM routing_op_vars WHERE routing_op_id=:id\");","            $st->execute([':id'=>$routing_op_id]);","            while ($row = $st->fetch(PDO::FETCH_ASSOC)) {","                $name = (string)$row['name'];","                if ($name !== '' && preg_match('/^[A-Za-z_][A-Za-z0-9_]*$/', $name)) {","                    $vars[$name] = (float)$row['value'];","                }","            }","        } catch (Throwable $e) {","            // table might not exist yet; ignore","        }","        return $vars;","    }","","    /** Fetch UOM id by code (e.g., 'm','m2','kg','nos','ea') */","    public static function uomIdByCode(PDO $pdo, string $code): ?int","    {","        static $cache = [];","        if (isset($cache[$code])) return $cache[$code];","        $st = $pdo->prepare(\"SELECT id FROM uom WHERE code=:c\");","        $st->execute([':c'=>$code]);","        $row = $st->fetch(PDO::FETCH_ASSOC);","        if (!$row) return null;","        $cache[$code] = (int)$row['id'];","        return $cache[$code];","    }","","    /** Safely evaluate a math expression with variables */","    public static function evalExpr(string $expr, array $vars): float","    {","        $expr_sub = preg_replace_callback('/\\b([A-Za-z_][A-Za-z0-9_]*)\\b/', function($m) use ($vars) {","            $k = $m[1];","            if (array_key_exists($k, $vars)) {","                $v = (float)$vars[$k];","                return rtrim(rtrim(number_format($v, 12, '.', ''), '0'), '.');","            }","            $allowed = ['abs','round','ceil','floor','min','max','pow','pi'];","            if (in_array($k, $allowed, true)) return $k;","            throw new RuntimeException(\"Unknown identifier in formula: {$k}\");","        }, $expr);","","        if (preg_match('/[^0-9\\.\\,\\+\\-\\*\\/\\%\\(\\)\\sA-Za-z_]/', $expr_sub)) {","            throw new RuntimeException(\"Invalid characters in formula.\");","        }","        foreach (['//','/*','*/','--','`','\"',\"'\",\"$\",\"=\",\";\"] as $bad) {","            if (strpos($expr_sub, $bad) !== false) throw new RuntimeException(\"Unsafe token detected in formula.\");","        }","        $result = 0.0;","        try {","            if (strpos($expr_sub, 'pi') !== false && !defined('M_PI')) { $pi = 3.141592653589793; }","            $result = eval('return ('.$expr_sub.');');","        } catch (Throwable $e) {","            throw new RuntimeException(\"Error evaluating formula.\");","        }","        return (float)$result;","    }","","    /** Compute quantity for a routing op using its attached process_qty_rule (with merged op vars) */","    public static function computeForRoutingOp(PDO $pdo, int $routing_op_id): ?array","    {","        $sql = \"SELECT ro.id, ro.process_id, ro.bom_component_id, ro.process_qty_rule_id,","                       bc.*,","                       rqr.expr, rqr.result_uom_id","                  FROM routing_ops ro","            INNER JOIN bom_components bc ON bc.id = ro.bom_component_id","             LEFT JOIN process_qty_rules rqr ON rqr.id = ro.process_qty_rule_id","                 WHERE ro.id = :id\";","        $st = $pdo->prepare($sql);","        $st->execute([':id'=>$routing_op_id]);","        $row = $st->fetch(PDO::FETCH_ASSOC);","        if (!$row) return null;","        if (!$row['expr']) return null;","","        $vars = self::varsForBomComponent($row);","        $vars = self::mergeOpVars($pdo, (int)$row['id'], $vars);","","        $qty = self::evalExpr((string)$row['expr'], $vars);","        $uom_id = (int)$row['result_uom_id'] ?: null;","        return ['qty' => $qty, 'uom_id' => $uom_id];","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/services/PartyCodeService.php": ["<?php","declare(strict_types=1);","","class PartyCodeService","{","    /** @var PDO */","    private $db;","","    public function __construct(PDO $db) {","        $this->db = $db;","    }","","    private function prefixFor(string $type): string {","        try {","            $stmt = $this->db->prepare(\"SELECT code_prefix FROM party_type_meta WHERE type=?\");","            $stmt->execute([$type]);","            $row = $stmt->fetch(PDO::FETCH_ASSOC);","            if (!empty($row['code_prefix'])) return $row['code_prefix'];","        } catch (\\Throwable $e) { /* fallback below */ }","","        switch ($type) {","            case 'client': return 'CL';","            case 'supplier': return 'SP';","            case 'contractor': return 'CT';","            default: return 'OT';","        }","    }","","    public function nextCode(string $type): string {","        $scope = \"party:$type\";","        $this->db->beginTransaction();","        try {","            // Ensure row exists for this scope","            $this->db->prepare(","                \"INSERT INTO party_sequences (scope, current_value) VALUES (?, 0)","                 ON DUPLICATE KEY UPDATE current_value = current_value\"","            )->execute([$scope]);","","            // Atomically increment and fetch new value","            $this->db->prepare(","                \"UPDATE party_sequences","                   SET current_value = LAST_INSERT_ID(current_value + 1)","                 WHERE scope = ?\"","            )->execute([$scope]);","","            $n = (int)$this->db->lastInsertId();","            $prefix = $this->prefixFor($type);","            $code = sprintf('%s-%04d', $prefix, $n);","","            $this->db->commit();","            return $code;","        } catch (\\Throwable $e) {","            $this->db->rollBack();","            throw $e;","        }","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/services/PartiesService.php": ["<?php","final class PartiesService {","    public function __construct(private PDO $db, private PartyCodeService $codeSvc) {}","","    public function fetchAll(string $q = null, ?string $type = null, ?int $status = null): array {","        $sql = \"SELECT * FROM parties WHERE 1=1\";","        $args = [];","        if ($q) { $sql .= \" AND (name LIKE ? OR legal_name LIKE ? OR gst_number LIKE ? OR pan_number LIKE ?)\"; $args = array_merge($args, [\"%$q%\",\"%$q%\",\"%$q%\",\"%$q%\"]); }","        if ($type) { $sql .= \" AND type=?\"; $args[] = $type; }","        if ($status !== null) { $sql .= \" AND status=?\"; $args[] = $status; }","        $sql .= \" ORDER BY name\";","        $stmt = $this->db->prepare($sql); $stmt->execute($args);","        return $stmt->fetchAll(PDO::FETCH_ASSOC);","    }","","    public function fetchOne(int $id): ?array {","        $stmt = $this->db->prepare(\"SELECT * FROM parties WHERE id=?\");","        $stmt->execute([$id]);","        $party = $stmt->fetch(PDO::FETCH_ASSOC) ?: null;","        if ($party) {","            $party['contacts'] = $this->getContacts($id);","            $party['banks'] = $this->getBanks($id);","            $party['commercials'] = $this->getCommercials($id);","        }","        return $party;","    }","","    public function save(array $data): int {","        // Normalizations","        $data['gst_number'] = isset($data['gst_number']) ? strtoupper(trim($data['gst_number'])) : null;","        $data['pan_number'] = isset($data['pan_number']) ? strtoupper(trim($data['pan_number'])) : null;","        $data['status'] = isset($data['status']) ? (int)$data['status'] : 1;","","        if (!empty($data['id'])) {","            $sql = \"UPDATE parties SET code=?, name=?, legal_name=?, type=?, contact_name=?, email=?, phone=?, gst_number=?, gst_state_code=?, gst_registration_type=?, gst_status=?, gst_last_verified_at=?, gst_raw_json=?, pan_number=?, cin_number=?, msme_udyam=?, address_line1=?, address_line2=?, city=?, state=?, country=?, pincode=?, status=? WHERE id=?\";","            $this->db->prepare($sql)->execute([","                $data['code'], $data['name'], $data['legal_name'], $data['type'], $data['contact_name'],","                $data['email'], $data['phone'], $data['gst_number'], $data['gst_state_code'], $data['gst_registration_type'],","                $data['gst_status'], $data['gst_last_verified_at'], $data['gst_raw_json'] ?? null,","                $data['pan_number'], $data['cin_number'], $data['msme_udyam'],","                $data['address_line1'], $data['address_line2'], $data['city'], $data['state'], $data['country'], $data['pincode'],","                $data['status'], $data['id']","            ]);","            return (int)$data['id'];","        } else {","            if (empty($data['code'])) {","                $data['code'] = $this->codeSvc->nextCode($data['type']);","            }","            $sql = \"INSERT INTO parties (code, name, legal_name, type, contact_name, email, phone, gst_number, gst_state_code, gst_registration_type, gst_status, gst_last_verified_at, gst_raw_json, pan_number, cin_number, msme_udyam, address_line1, address_line2, city, state, country, pincode, status)","                    VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\";","            $this->db->prepare($sql)->execute([","                $data['code'], $data['name'], $data['legal_name'], $data['type'], $data['contact_name'],","                $data['email'], $data['phone'], $data['gst_number'], $data['gst_state_code'], $data['gst_registration_type'],","                $data['gst_status'], $data['gst_last_verified_at'], $data['gst_raw_json'] ?? null,","                $data['pan_number'], $data['cin_number'], $data['msme_udyam'],","                $data['address_line1'], $data['address_line2'], $data['city'], $data['state'], $data['country'], $data['pincode'],","                $data['status']","            ]);","            return (int)$this->db->lastInsertId();","        }","    }","","    # ---- Contacts ----","    public function getContacts(int $partyId): array {","        $stmt = $this->db->prepare(\"SELECT * FROM party_contacts WHERE party_id=? ORDER BY is_primary DESC, id ASC\");","        $stmt->execute([$partyId]);","        return $stmt->fetchAll(PDO::FETCH_ASSOC);","    }","    public function upsertContact(int $partyId, array $c): int {","        if (!empty($c['id'])) {","            $sql = \"UPDATE party_contacts SET name=?, email=?, phone=?, role_title=?, is_primary=? WHERE id=? AND party_id=?\";","            $this->db->prepare($sql)->execute([$c['name'],$c['email'],$c['phone'],$c['role_title'],(int)$c['is_primary'],$c['id'],$partyId]);","            return (int)$c['id'];","        }","        $sql = \"INSERT INTO party_contacts (party_id,name,email,phone,role_title,is_primary) VALUES (?,?,?,?,?,?)\";","        $this->db->prepare($sql)->execute([$partyId,$c['name'],$c['email'],$c['phone'],$c['role_title'],(int)$c['is_primary']]);","        return (int)$this->db->lastInsertId();","    }","    public function deleteContact(int $partyId, int $id): void {","        $this->db->prepare(\"DELETE FROM party_contacts WHERE id=? AND party_id=?\")->execute([$id,$partyId]);","    }","","    # ---- Banks ----","    public function getBanks(int $partyId): array {","        $stmt = $this->db->prepare(\"SELECT * FROM party_bank_accounts WHERE party_id=? ORDER BY is_primary DESC, id ASC\");","        $stmt->execute([$partyId]);","        return $stmt->fetchAll(PDO::FETCH_ASSOC);","    }","    public function upsertBank(int $partyId, array $b): int {","        if (!empty($b['is_primary'])) {","            $this->db->prepare(\"UPDATE party_bank_accounts SET is_primary=0 WHERE party_id=?\")->execute([$partyId]);","        }","        if (!empty($b['id'])) {","            $sql = \"UPDATE party_bank_accounts SET beneficiary_name=?, bank_name=?, branch=?, account_number=?, ifsc=?, account_type=?, is_primary=? WHERE id=? AND party_id=?\";","            $this->db->prepare($sql)->execute([$b['beneficiary_name'],$b['bank_name'],$b['branch'],$b['account_number'],$b['ifsc'],$b['account_type'],(int)$b['is_primary'],$b['id'],$partyId]);","            return (int)$b['id'];","        }","        $sql = \"INSERT INTO party_bank_accounts (party_id,beneficiary_name,bank_name,branch,account_number,ifsc,account_type,is_primary) VALUES (?,?,?,?,?,?,?,?)\";","        $this->db->prepare($sql)->execute([$partyId,$b['beneficiary_name'],$b['bank_name'],$b['branch'],$b['account_number'],$b['ifsc'],$b['account_type'],(int)$b['is_primary']]);","        return (int)$this->db->lastInsertId();","    }","    public function deleteBank(int $partyId, int $id): void {","        $this->db->prepare(\"DELETE FROM party_bank_accounts WHERE id=? AND party_id=?\")->execute([$id,$partyId]);","    }","","    # ---- Commercials ----","    public function getCommercials(int $partyId): array {","        $stmt = $this->db->prepare(\"SELECT * FROM party_commercials WHERE party_id=?\");","        $stmt->execute([$partyId]);","        return $stmt->fetch(PDO::FETCH_ASSOC) ?: [","            'party_id' => $partyId,","            'payment_terms_days' => 30,","            'credit_limit' => 0,","            'tds_section' => null,","            'tds_rate' => null,","            'tcs_applicable' => 0,","            'e_invoice_required' => 0,","            'reverse_charge_applicable' => 0,","            'default_place_of_supply' => null,","        ];","    }","    public function upsertCommercials(int $partyId, array $c): void {","        $sql = \"INSERT INTO party_commercials (party_id,payment_terms_days,credit_limit,tds_section,tds_rate,tcs_applicable,e_invoice_required,reverse_charge_applicable,default_place_of_supply)","                VALUES (?,?,?,?,?,?,?,?,?)","                ON DUPLICATE KEY UPDATE payment_terms_days=VALUES(payment_terms_days), credit_limit=VALUES(credit_limit), tds_section=VALUES(tds_section), tds_rate=VALUES(tds_rate), tcs_applicable=VALUES(tcs_applicable), e_invoice_required=VALUES(e_invoice_required), reverse_charge_applicable=VALUES(reverse_charge_applicable), default_place_of_supply=VALUES(default_place_of_supply)\";","        $this->db->prepare($sql)->execute([","            $partyId,","            (int)($c['payment_terms_days'] ?? 30),","            (float)($c['credit_limit'] ?? 0),","            $c['tds_section'] ?? null,","            $c['tds_rate'] ?? null,","            !empty($c['tcs_applicable']) ? 1 : 0,","            !empty($c['e_invoice_required']) ? 1 : 0,","            !empty($c['reverse_charge_applicable']) ? 1 : 0,","            $c['default_place_of_supply'] ?? null,","        ]);","    }","}","?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/services/Accounts/PostingService.php": ["<?php","/** PATH: /public_html/includes/services/Accounts/PostingService.php"," * PHP 8.4 | Bootstrap 5 UI elsewhere | Kernel untouched"," * ------------------------------------------------------"," * What this provides:"," * - createVoucher($hdr, $lines): Generic balanced journal posting to GL."," * - postAPBill($bill, $lines): Convenience posting for AP Bills (DR Inventory/Expense + DR Input GST + CR Vendor) + GST staging."," * - postStoreIssue($issue, $issueLines): Convenience posting for Store Issues (DR WIP/Project + CR Inventory)."," *"," * COA codes used (seeded in SQL you ran):"," *   1010 Cash-in-hand"," *   1310 Inventory - Raw Material"," *   1410 WIP - Projects"," *   2010 Accounts Payable - Trade"," *   2210 GST Input CGST"," *   2220 GST Input SGST"," *   2230 GST Input IGST"," *   5010 COGS / Material Consumption"," */","","declare(strict_types=1);","","namespace Accounts;","","use PDO;","","require_once __DIR__ . '/../../db.php';              // uses global db(): PDO","// audit_log is optional; only called if function exists.","if (is_file(__DIR__ . '/../../audit.php')) { require_once __DIR__ . '/../../audit.php'; }","","// If GST staging helper is present, we'll use it inside postAPBill()","$__taxSvcPath = __DIR__ . '/TaxStagingService.php';","if (is_file($__taxSvcPath)) require_once $__taxSvcPath;","","class PostingException extends \\RuntimeException {}","","final class PostingService","{","    /** Allocate next voucher no as TYPE-YYYY-SEQ4 */","    private static function nextVoucherNo(PDO $pdo, string $voucherType, \\DateTimeInterface $date): string","    {","        $yr = (int)$date->format('Y');","        $pdo->beginTransaction();","        try {","            $sel = $pdo->prepare(\"SELECT seq FROM account_sequences WHERE seq_year=? AND voucher_type=? FOR UPDATE\");","            $sel->execute([$yr, $voucherType]);","            $row = $sel->fetch(PDO::FETCH_ASSOC);","            if ($row) {","                $seq = (int)$row['seq'] + 1;","                $upd = $pdo->prepare(\"UPDATE account_sequences SET seq=? WHERE seq_year=? AND voucher_type=?\");","                $upd->execute([$seq, $yr, $voucherType]);","            } else {","                $seq = 1;","                $ins = $pdo->prepare(\"INSERT INTO account_sequences (seq_year, voucher_type, seq) VALUES (?,?,?)\");","                $ins->execute([$yr, $voucherType, $seq]);","            }","            $pdo->commit();","            return sprintf('%s-%04d-%04d', $voucherType, $yr, $seq);","        } catch (\\Throwable $e) {","            if ($pdo->inTransaction()) $pdo->rollBack();","            throw new PostingException('Sequence allocation failed: ' . $e->getMessage(), 0, $e);","        }","    }","","    /** Find account id by id or code; throws if not found */","    private static function resolveAccountId(PDO $pdo, array $line): int","    {","        if (!empty($line['account_id'])) {","            return (int)$line['account_id'];","        }","        if (!empty($line['account_code'])) {","            $q = $pdo->prepare(\"SELECT id FROM accounts_chart WHERE code=? AND active=1\");","            $q->execute([$line['account_code']]);","            $id = $q->fetchColumn();","            if ($id) return (int)$id;","            throw new PostingException('Unknown account_code: ' . $line['account_code']);","        }","        throw new PostingException('Each line must include account_id or account_code');","    }","","    /** Ensure DR=CR and both > 0 */","    private static function validateBalanced(array $lines): array","    {","        $dr = 0.0; $cr = 0.0;","        foreach ($lines as $ln) {","            $dr += (float)($ln['debit'] ?? 0);","            $cr += (float)($ln['credit'] ?? 0);","        }","        $dr = round($dr, 2); $cr = round($cr, 2);","        if ($dr <= 0 || $cr <= 0 || abs($dr - $cr) > 0.009) {","            throw new PostingException(\"Unbalanced entry. DR={$dr} CR={$cr}\");","        }","        return [$dr, $cr];","    }","","    /**","     * Public API: Generic voucher post","     * $hdr keys: voucher_type (JV|CPV|CRV|CNV|APB|ARV), voucher_date (Y-m-d), ref_doc_type, ref_doc_id, narration, posted_by","     * $lines[]:  account_code|account_id, debit, credit, cost_center_id?, project_id?, party_id?, line_memo?","     * Returns journal id (int)","     */","    public static function createVoucher(array $hdr, array $lines): int","    {","        $pdo = \\db();","        $pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","        $vt = strtoupper(trim((string)($hdr['voucher_type'] ?? '')));","        if (!in_array($vt, ['JV','CPV','CRV','CNV','APB','ARV'], true)) {","            throw new PostingException('Invalid voucher_type');","        }","        $vdStr = (string)($hdr['voucher_date'] ?? date('Y-m-d'));","        $vd = new \\DateTimeImmutable($vdStr);","","        if (empty($lines)) throw new PostingException('At least one line is required');","","        self::validateBalanced($lines);","        $voucherNo = self::nextVoucherNo($pdo, $vt, $vd);","","        $pdo->beginTransaction();","        try {","            $insH = $pdo->prepare(","                \"INSERT INTO journals (voucher_no,voucher_type,voucher_date,ref_doc_type,ref_doc_id,narration,posted_by,status)","                 VALUES (?,?,?,?,?,?,?, 'posted')\"","            );","            $insH->execute([","                $voucherNo,","                $vt,","                $vd->format('Y-m-d'),","                $hdr['ref_doc_type'] ?? null,","                $hdr['ref_doc_id']   ?? null,","                $hdr['narration']    ?? null,","                $hdr['posted_by']    ?? null","            ]);","            $jid = (int)$pdo->lastInsertId();","","            $insL = $pdo->prepare(","                \"INSERT INTO journal_lines (journal_id,line_no,account_id,debit,credit,cost_center_id,project_id,party_id,line_memo)","                 VALUES (?,?,?,?,?,?,?,?,?)\"","            );","","            $lnNo = 1;","            foreach ($lines as $ln) {","                $accId = self::resolveAccountId($pdo, $ln);","                $insL->execute([","                    $jid,","                    $lnNo++,","                    $accId,","                    round((float)($ln['debit'] ?? 0), 2),","                    round((float)($ln['credit'] ?? 0), 2),","                    $ln['cost_center_id'] ?? null,","                    $ln['project_id']     ?? null,","                    $ln['party_id']       ?? null,","                    $ln['line_memo']      ?? null","                ]);","            }","","            if (function_exists('audit_log')) {","                @audit_log((int)($hdr['posted_by'] ?? 0), 'journals', $jid, 'created', null, json_encode(['voucher_no' => $voucherNo], JSON_UNESCAPED_SLASHES));","            }","","            $pdo->commit();","            return $jid;","        } catch (\\Throwable $e) {","            if ($pdo->inTransaction()) $pdo->rollBack();","            throw new PostingException('Voucher post failed: ' . $e->getMessage(), 0, $e);","        }","    }","","    /** Helper: simple two-line JV */","    public static function createSimpleJV(string $dateYmd, string $drAccountCode, float $amount, string $crAccountCode, array $meta = []): int","    {","        $hdr = [","            'voucher_type' => 'JV',","            'voucher_date' => $dateYmd,","            'ref_doc_type' => $meta['ref_doc_type'] ?? null,","            'ref_doc_id'   => $meta['ref_doc_id']   ?? null,","            'narration'    => $meta['narration']    ?? null,","            'posted_by'    => (int)($meta['posted_by'] ?? 0),","        ];","        $lines = [","            ['account_code' => $drAccountCode, 'debit' => round($amount,2), 'credit' => 0.00, 'project_id' => $meta['project_id'] ?? null, 'party_id' => $meta['party_id'] ?? null],","            ['account_code' => $crAccountCode, 'debit' => 0.00, 'credit' => round($amount,2), 'project_id' => $meta['project_id'] ?? null, 'party_id' => $meta['party_id'] ?? null],","        ];","        return self::createVoucher($hdr, $lines);","    }","","    /**","     * Convenience: Post an AP Bill","     * $bill: ['id','bill_no','bill_date','vendor_party_id','vendor_gstin?','pos_state?','project_id?','posted_by?']","     * $lines[]: ['id','taxable_value','cgst','sgst','igst','gst_rate','hsn?','qty?','uom_id?','is_service?']","     * Chooses 1310 (Inventory) for material; 5010 (COGS/Expense) if is_service flag is true.","     * Returns journal id.","     */","    public static function postAPBill(array $bill, array $lines): int","    {","        $hdr = [","            'voucher_type' => 'APB',","            'voucher_date' => (string)($bill['bill_date'] ?? date('Y-m-d')),","            'ref_doc_type' => 'AP_BILL',","            'ref_doc_id'   => (int)$bill['id'],","            'narration'    => 'AP Bill #' . ($bill['bill_no'] ?? (string)$bill['id']),","            'posted_by'    => (int)($bill['posted_by'] ?? 0),","        ];","","        $sumTaxableGoods = 0.0;","        $sumTaxableSvc   = 0.0;","        $sumCGST = 0.0; $sumSGST = 0.0; $sumIGST = 0.0;","","        foreach ($lines as $ln) {","            $taxable = (float)($ln['taxable_value'] ?? 0);","            $sumCGST += (float)($ln['cgst'] ?? 0);","            $sumSGST += (float)($ln['sgst'] ?? 0);","            $sumIGST += (float)($ln['igst'] ?? 0);","","            if (!empty($ln['is_service'])) $sumTaxableSvc   += $taxable;","            else                            $sumTaxableGoods += $taxable;","","            // Stage GST if TaxStagingService exists","            if (class_exists(__NAMESPACE__ . '\\\\TaxStagingService')) {","                TaxStagingService::stage([","                    'doc_type'      => 'AP_BILL',","                    'doc_id'        => (int)$bill['id'],","                    'line_id'       => $ln['id'] ?? null,","                    'party_id'      => $bill['vendor_party_id'] ?? null,","                    'gstin'         => $bill['vendor_gstin']   ?? null,","                    'hsn'           => $ln['hsn'] ?? null,","                    'pos_state'     => $bill['pos_state'] ?? null,","                    'supply_type'   => ((float)($ln['igst'] ?? 0) > 0) ? 'inter' : 'intra',","                    'taxable_value' => $taxable,","                    'cgst'          => (float)($ln['cgst'] ?? 0),","                    'sgst'          => (float)($ln['sgst'] ?? 0),","                    'igst'          => (float)($ln['igst'] ?? 0),","                    'gst_rate'      => (float)($ln['gst_rate'] ?? 0),","                    'quantity'      => $ln['qty'] ?? null,","                    'uom_id'        => $ln['uom_id'] ?? null,","                    'doc_date'      => (string)($bill['bill_date'] ?? date('Y-m-d')),","                    'is_itc_eligible'=> 1,","                    'itc_bucket'    => 'Available'","                ]);","            }","        }","","        $jl = [];","        if ($sumTaxableGoods > 0) {","            $jl[] = ['account_code'=>'1310','debit'=>round($sumTaxableGoods,2),'credit'=>0.00,'project_id'=>$bill['project_id'] ?? null,'party_id'=>$bill['vendor_party_id'] ?? null,'line_memo'=>'AP Bill taxable (materials)'];","        }","        if ($sumTaxableSvc > 0) {","            $jl[] = ['account_code'=>'5010','debit'=>round($sumTaxableSvc,2),'credit'=>0.00,'project_id'=>$bill['project_id'] ?? null,'party_id'=>$bill['vendor_party_id'] ?? null,'line_memo'=>'AP Bill taxable (services)'];","        }","        if ($sumCGST > 0) $jl[] = ['account_code'=>'2210','debit'=>round($sumCGST,2),'credit'=>0.00,'party_id'=>$bill['vendor_party_id'] ?? null,'line_memo'=>'Input CGST'];","        if ($sumSGST > 0) $jl[] = ['account_code'=>'2220','debit'=>round($sumSGST,2),'credit'=>0.00,'party_id'=>$bill['vendor_party_id'] ?? null,'line_memo'=>'Input SGST'];","        if ($sumIGST > 0) $jl[] = ['account_code'=>'2230','debit'=>round($sumIGST,2),'credit'=>0.00,'party_id'=>$bill['vendor_party_id'] ?? null,'line_memo'=>'Input IGST'];","","        $total = 0.0;","        foreach ($jl as $l) $total += (float)$l['debit'];","        $jl[] = ['account_code'=>'2010','debit'=>0.00,'credit'=>round($total,2),'party_id'=>$bill['vendor_party_id'] ?? null,'line_memo'=>'AP Bill total payable'];","","        return self::createVoucher($hdr, $jl);","    }","","    /**","     * Convenience: Post Store Issue","     * $issue: ['id','issue_no','issue_date','project_id?','posted_by?']","     * $issueLines[]: ['value_amount' => numeric] (already valued by Stores using your valuation method)","     * Uses: DR 1410 WIP - Projects, CR 1310 Inventory - Raw Material","     */","    public static function postStoreIssue(array $issue, array $issueLines): int","    {","        $sum = 0.0;","        foreach ($issueLines as $ln) {","            $sum += (float)($ln['value_amount'] ?? 0);","        }","        $sum = round($sum, 2);","        if ($sum <= 0) throw new PostingException('Store Issue value is zero; nothing to post');","","        $hdr = [","            'voucher_type' => 'JV',","            'voucher_date' => (string)($issue['issue_date'] ?? date('Y-m-d')),","            'ref_doc_type' => 'STORE_ISSUE',","            'ref_doc_id'   => (int)$issue['id'],","            'narration'    => 'Material Issue #' . ($issue['issue_no'] ?? (string)$issue['id']),","            'posted_by'    => (int)($issue['posted_by'] ?? 0),","        ];","","        $lines = [","            ['account_code'=>'1410','debit'=>$sum,'credit'=>0.00,'project_id'=>$issue['project_id'] ?? null,'line_memo'=>'Issue to project'],","            ['account_code'=>'1310','debit'=>0.00,'credit'=>$sum,'project_id'=>$issue['project_id'] ?? null,'line_memo'=>'Inventory out'],","        ];","","        return self::createVoucher($hdr, $lines);","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/services/Accounts/TaxStagingService.php": ["<?php","/** PATH: /public_html/includes/services/Accounts/TaxStagingService.php"," * GST/TDS staging helper used by PostingService::postAPBill() and anywhere else."," */","declare(strict_types=1);","","namespace Accounts;","","use PDO;","","require_once __DIR__ . '/../../db.php';","","final class TaxStagingService","{","    /**","     * Upsert a tax transaction row for GST/TDS reporting.","     * Required: doc_type (AP_BILL|AR_INV|AP_CDN|AR_CDN|CASH_EXP), doc_id, doc_date","     * Optional: line_id, party_id, gstin, hsn, pos_state, supply_type (intra|inter),","     *           taxable_value, cgst, sgst, igst, gst_rate, quantity, uom_id,","     *           is_itc_eligible (1|0), itc_bucket ('Available'|'Ineligible'|'Deferred'), section_tds","     */","    public static function stage(array $data): void","    {","        $pdo = \\db();","        $pdo->exec(\"SET NAMES utf8mb4 COLLATE utf8mb4_general_ci\");","","        foreach (['doc_type','doc_id','doc_date'] as $k) {","            if (!isset($data[$k])) throw new \\InvalidArgumentException(\"Missing $k\");","        }","","        // If exists => update; else insert","        $sel = $pdo->prepare(\"SELECT id FROM tax_transactions WHERE doc_type=? AND doc_id=? AND (line_id <=> ?)\");","        $sel->execute([$data['doc_type'], (int)$data['doc_id'], $data['line_id'] ?? null]);","        $id = $sel->fetchColumn();","","        $fields = [","            'party_id','gstin','hsn','pos_state','supply_type','taxable_value','cgst','sgst','igst',","            'gst_rate','quantity','uom_id','doc_date','is_itc_eligible','itc_bucket','section_tds'","        ];","","        if ($id) {","            $sets = implode(',', array_map(fn($f)=>\"$f=:$f\", $fields));","            $sql  = \"UPDATE tax_transactions SET $sets WHERE id=:id\";","            $st   = $pdo->prepare($sql);","            foreach ($fields as $f) $st->bindValue(\":$f\", $data[$f] ?? null);","            $st->bindValue(':id', (int)$id, PDO::PARAM_INT);","            $st->execute();","        } else {","            $cols = 'doc_type,doc_id,line_id,' . implode(',', $fields);","            $vals = ':doc_type,:doc_id,:line_id,' . implode(',', array_map(fn($f)=>\":$f\", $fields));","            $sql  = \"INSERT INTO tax_transactions ($cols) VALUES ($vals)\";","            $st   = $pdo->prepare($sql);","            $st->bindValue(':doc_type', $data['doc_type']);","            $st->bindValue(':doc_id',   (int)$data['doc_id'], PDO::PARAM_INT);","            $st->bindValue(':line_id',  $data['line_id'] ?? null);","            foreach ($fields as $f) $st->bindValue(\":$f\", $data[$f] ?? null);","            $st->execute();","        }","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/services/UnitConverter.php": ["<?php","declare(strict_types=1);","","if (!function_exists('uom_convert')) {","","  /**","   * Convert quantity between UOM codes (e.g., 'MM' -> 'M', 'KG' -> 'TON').","   * Supports multi-hop paths (MM -> M -> KM) by graph search.","   * Returns float value; throws on no path found.","   *","   * NOTE: We keep conversions linear (factor only, offset=0). Offset is ignored here.","   */","  function uom_convert(float $qty, string $fromCode, string $toCode): float {","    if ($fromCode === $toCode) return $qty;","","    $pdo = db();","","    // Map codes -> ids","    $mapStmt = $pdo->prepare(\"SELECT id, code FROM uom WHERE code IN (?, ?) AND status='active'\");","    $mapStmt->execute([strtoupper($fromCode), strtoupper($toCode)]);","    $ids = [];","    while ($r = $mapStmt->fetch()) { $ids[$r['code']] = (int)$r['id']; }","","    if (!isset($ids[strtoupper($fromCode)]) || !isset($ids[strtoupper($toCode)])) {","      throw new RuntimeException(\"Unknown or inactive UOM code(s): $fromCode or $toCode\");","    }","","    $fromId = $ids[strtoupper($fromCode)];","    $toId   = $ids[strtoupper($toCode)];","","    // Build adjacency (only once per request; you can cache in $_SESSION if needed)","    $edges = [];","    $stmt = $pdo->query(\"SELECT from_uom_id, to_uom_id, factor FROM uom_conversions\");","    while ($c = $stmt->fetch()) {","      $f = (int)$c['from_uom_id']; $t = (int)$c['to_uom_id']; $fac = (float)$c['factor'];","      $edges[$f][] = [$t, $fac];","    }","","    // BFS over graph to find a path; track cumulative factor","    $queue = [ [$fromId, 1.0] ];","    $visited = [$fromId => 1.0];","    $parent  = []; // for optional debugging","","    while ($queue) {","      [$node, $cumFactor] = array_shift($queue);","      if ($node === $toId) {","        // done","        return $qty * $cumFactor;","      }","      foreach ($edges[$node] ?? [] as [$next, $fac]) {","        $newFac = $cumFactor * $fac;","        if (!isset($visited[$next])) {","          $visited[$next] = $newFac;","          $parent[$next]  = $node;","          $queue[] = [$next, $newFac];","        }","      }","    }","","    throw new RuntimeException(\"No conversion path from $fromCode to $toCode\");","  }","","  /**","   * Helper: add or replace a conversion; optionally add inverse.","   */","  function uom_add_conversion(string $fromCode, string $toCode, float $factor, bool $makeInverse=true): void {","    $pdo = db();","    $pdo->beginTransaction();","    try {","      $get = $pdo->prepare(\"SELECT id FROM uom WHERE code=? AND status='active' LIMIT 1\");","      $get->execute([strtoupper($fromCode)]); $fromId = (int)($get->fetch()['id'] ?? 0);","      $get->execute([strtoupper($toCode)]);   $toId   = (int)($get->fetch()['id'] ?? 0);","      if (!$fromId || !$toId) throw new RuntimeException(\"Unknown UOM codes\");","","      $up = $pdo->prepare(\"INSERT INTO uom_conversions (from_uom_id,to_uom_id,factor,offset_val)","                           VALUES (?,?,?,0)","                           ON DUPLICATE KEY UPDATE factor=VALUES(factor), offset_val=0\");","      $up->execute([$fromId, $toId, $factor]);","","      if ($makeInverse && $factor > 0) {","        $up->execute([$toId, $fromId, 1.0/$factor]);","      }","      $pdo->commit();","    } catch (\\Throwable $e) {","      if ($pdo->inTransaction()) $pdo->rollBack();","      throw $e;","    }","  }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/services/GstLookupService.php": ["<?php","final class GstLookupService {","    public function __construct(private PDO $db) {}","","    public function validateGstin(string $gstin): bool {","        $gstin = strtoupper(trim($gstin));","        if (strlen($gstin) !== 15) return false;","        if (!preg_match('/^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$/', $gstin)) return false;","        return true; // TODO: checksum if needed","    }","","    /**","     * Future: call official API/provider; for now just return a dummy map.","     */","    public function fetchAndEnrich(string $gstin): array {","        if (!$this->validateGstin($gstin)) {","            throw new InvalidArgumentException('Invalid GSTIN format');","        }","        // TODO: integrate real API and map fields","        return [","            'legal_name' => null,","            'trade_name' => null,","            'gst_state_code' => substr($gstin, 0, 2),","            'gst_registration_type' => null,","            'gst_status' => null,","            'gst_last_verified_at' => date('Y-m-d H:i:s'),","            'gst_raw_json' => null,","        ];","    }","}","?>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/services/StockMoveWriter.php": ["<?php","/** PATH: /public_html/includes/services/StockMoveWriter.php */","declare(strict_types=1);","","/**"," * Transaction-free stock writer."," * Assumes the caller (API endpoint) has already started/committed/rolled back the PDO transaction."," * Requires tables: stock_moves, stock_onhand (with UNIQUE uq_onhand(item_id,warehouse_id,bin_id,batch_id))."," */","final class StockMoveWriter","{","    /**","     * Post an IN movement (positive qty).","     * Expected keys in $m: txn_type, txn_no, txn_date (Y-m-d), project_id|null, item_id, uom_id,","     * warehouse_id, bin_id|null, batch_id|null, qty (>0), unit_cost (>=0), ref_entity, ref_id, created_by.","     */","    public static function postIn(PDO $pdo, array $m): void","    {","        self::assertRequired($m, ['txn_type','txn_no','txn_date','item_id','uom_id','warehouse_id','qty','ref_entity','ref_id']);","        $qty = (float)$m['qty'];","        if ($qty <= 0) throw new RuntimeException('postIn qty must be > 0');","","        $unit_cost = isset($m['unit_cost']) ? (float)$m['unit_cost'] : 0.0;","","        // 1) Insert move (positive qty)","        $insMove = $pdo->prepare(\"","            INSERT INTO stock_moves","            (txn_type, txn_no, txn_date, project_id, item_id, uom_id, warehouse_id, bin_id, batch_id, qty, unit_cost, ref_entity, ref_id, created_by)","            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","        \");","        $insMove->execute([","            (string)$m['txn_type'], (string)$m['txn_no'], (string)$m['txn_date'],","            $m['project_id'] ?? null,","            (int)$m['item_id'], (int)$m['uom_id'], (int)$m['warehouse_id'],","            $m['bin_id'] ?? null, $m['batch_id'] ?? null,","            $qty, $unit_cost,","            (string)$m['ref_entity'], (int)$m['ref_id'],","            $m['created_by'] ?? null","        ]);","","        // 2) Upsert on-hand","        $upsert = $pdo->prepare(\"","            INSERT INTO stock_onhand (item_id, warehouse_id, bin_id, batch_id, qty)","            VALUES (?, ?, ?, ?, ?)","            ON DUPLICATE KEY UPDATE qty = qty + VALUES(qty), updated_at = CURRENT_TIMESTAMP","        \");","        $upsert->execute([(int)$m['item_id'], (int)$m['warehouse_id'], $m['bin_id'] ?? null, $m['batch_id'] ?? null, $qty]);","    }","","    /**","     * Post an OUT movement (negative qty).","     * Same keys as postIn. Qty must be > 0; we write negative in ledger and subtract in onhand.","     */","    public static function postOut(PDO $pdo, array $m): void","    {","        self::assertRequired($m, ['txn_type','txn_no','txn_date','item_id','uom_id','warehouse_id','qty','ref_entity','ref_id']);","        $qty = (float)$m['qty'];","        if ($qty <= 0) throw new RuntimeException('postOut qty must be > 0');","","        // 1) Insert move (negative qty)","        $insMove = $pdo->prepare(\"","            INSERT INTO stock_moves","            (txn_type, txn_no, txn_date, project_id, item_id, uom_id, warehouse_id, bin_id, batch_id, qty, unit_cost, ref_entity, ref_id, created_by)","            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 0, ?, ?, ?)","        \");","        $insMove->execute([","            (string)$m['txn_type'], (string)$m['txn_no'], (string)$m['txn_date'],","            $m['project_id'] ?? null,","            (int)$m['item_id'], (int)$m['uom_id'], (int)$m['warehouse_id'],","            $m['bin_id'] ?? null, $m['batch_id'] ?? null,","            -$qty,                                  // ledger as negative","            (string)$m['ref_entity'], (int)$m['ref_id'],","            $m['created_by'] ?? null","        ]);","","        // 2) Upsert on-hand (subtract)","        $upsert = $pdo->prepare(\"","            INSERT INTO stock_onhand (item_id, warehouse_id, bin_id, batch_id, qty)","            VALUES (?, ?, ?, ?, ?)","            ON DUPLICATE KEY UPDATE qty = qty + VALUES(qty), updated_at = CURRENT_TIMESTAMP","        \");","        $upsert->execute([(int)$m['item_id'], (int)$m['warehouse_id'], $m['bin_id'] ?? null, $m['batch_id'] ?? null, -$qty]);","    }","","    private static function assertRequired(array $m, array $keys): void","    {","        foreach ($keys as $k) {","            if (!array_key_exists($k, $m)) {","                throw new InvalidArgumentException(\"Missing key: {$k}\");","            }","        }","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/numbering.php": ["<?php","/** PATH: /public_html/includes/numbering.php */","declare(strict_types=1);","","require_once __DIR__ . '/db.php';","","function next_no(string $series): string {","    $series = strtoupper(trim($series));","    $pdo = db();","    $year = (int)date('Y');","","    // 1) Preferred: numbering_series(series, last_no, year)","    try {","        $pdo->exec(\"CREATE TABLE IF NOT EXISTS numbering_series (","          series VARCHAR(32) PRIMARY KEY,","          last_no INT UNSIGNED NOT NULL DEFAULT 0,","          year INT NOT NULL DEFAULT (YEAR(CURDATE())),","          updated_at TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP","        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\");","","        $pdo->beginTransaction();","        $sel = $pdo->prepare(\"SELECT last_no, year FROM numbering_series WHERE series=:s FOR UPDATE\");","        $sel->execute([':s'=>$series]);","        $row = $sel->fetch(PDO::FETCH_ASSOC);","","        if (!$row) {","            $ins = $pdo->prepare(\"INSERT INTO numbering_series(series,last_no,year) VALUES(:s,0,:y)\");","            $ins->execute([':s'=>$series, ':y'=>$year]);","            $last = 0; $rowYear = $year;","        } else {","            $last = (int)$row['last_no']; $rowYear = (int)$row['year'];","        }","","        if ($rowYear !== $year) { $last = 0; }","        $next = $last + 1;","","        $upd = $pdo->prepare(\"UPDATE numbering_series SET last_no=:n, year=:y WHERE series=:s\");","        $upd->execute([':n'=>$next, ':y'=>$year, ':s'=>$series]);","        $pdo->commit();","","        $prefix = $series . '-' . $year . '-';","        return sprintf('%s%04d', $prefix, $next);","    } catch (Throwable $e) {","        if ($pdo->inTransaction()) $pdo->rollBack();","        // fallthrough to legacy","    }","","    // 2) Legacy fallback: quote_sequences(y, seq) \u2192 used only for QO","    if ($series === 'QO') {","        try {","            $pdo->exec(\"CREATE TABLE IF NOT EXISTS quote_sequences (","              id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,","              y INT NOT NULL,","              seq INT NOT NULL,","              UNIQUE KEY uq_y (y)","            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\");","","            $pdo->beginTransaction();","            $s = $pdo->prepare(\"SELECT seq FROM quote_sequences WHERE y=:y FOR UPDATE\");","            $s->execute([':y'=>$year]);","            $seq = $s->fetchColumn();","            if ($seq === false) {","                $pdo->prepare(\"INSERT INTO quote_sequences(y, seq) VALUES(:y, 1)\")->execute([':y'=>$year]);","                $seq = 1;","            } else {","                $seq = (int)$seq + 1;","                $pdo->prepare(\"UPDATE quote_sequences SET seq=:s WHERE y=:y\")->execute([':s'=>$seq, ':y'=>$year]);","            }","            $pdo->commit();","            return sprintf('QO-%d-%04d', $year, $seq);","        } catch (Throwable $e) {","            if ($pdo->inTransaction()) $pdo->rollBack();","        }","    }","","    // 3) Absolute fallback","    return sprintf('%s-%d-%04d', $series, $year, random_int(1, 9999));","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/NumberingService.php": ["<?php","/** PATH: /public_html/includes/NumberingService.php */","declare(strict_types=1);","require_once __DIR__ . '/services/NumberingService.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/policy.php": ["<?php","// includes/policy.php","require_once __DIR__ . '/db.php';","","class Policy {","    // Global fallback: set to true to block everywhere unless overridden","    public static function blockNegativeStockGlobal(): bool {","        return false; // change to true when you want hard block globally","    }","","    public static function blockNegativeStockForWarehouse(PDO $pdo, int $warehouseId): bool {","        $q = $pdo->prepare(\"SELECT block_negative_stock FROM warehouse_policy WHERE warehouse_id = :w\");","        $q->execute([':w' => $warehouseId]);","        $row = $q->fetch(PDO::FETCH_ASSOC);","        return $row ? (bool)$row['block_negative_stock'] : self::blockNegativeStockGlobal();","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/machines_helpers.php": ["<?php","declare(strict_types=1);","","/**"," * Current holder (contractor) if machine is issued."," * Returns: ['alloc_id','alloc_code','contractor_id','contractor_code','contractor_name','alloc_date','expected_return']"," */","function machine_current_holder(PDO $pdo, int $machine_id): ?array {","  $sql = \"SELECT ma.id AS alloc_id, ma.alloc_code, ma.contractor_id,","                 p.code AS contractor_code, p.name AS contractor_name,","                 ma.alloc_date, ma.expected_return","          FROM machine_allocations ma","          JOIN parties p ON p.id = ma.contractor_id","          WHERE ma.machine_id = ? AND ma.status = 'issued'","          ORDER BY ma.alloc_date DESC LIMIT 1\";","  $st = $pdo->prepare($sql); $st->execute([$machine_id]);","  $row = $st->fetch(PDO::FETCH_ASSOC);","  return $row ?: null;","}","","/** Common badge HTML (Bootstrap 5) */","function machine_holder_badge(?array $holder): string {","  if (!$holder) return '<span class=\"badge bg-success\">Available</span>';","  $txt = htmlspecialchars($holder['contractor_code'].' \u2014 '.$holder['contractor_name']);","  $date= htmlspecialchars((string)$holder['alloc_date']);","  return '<span class=\"badge bg-warning text-dark\" title=\"Issued on '.$date.'\">Held by '.$txt.'</span>';","}","","/** Small helper to render an Issue/Return button set */","function machine_issue_return_buttons(int $machine_id, ?array $holder): string {","  if ($holder) {","    return '<a class=\"btn btn-success btn-sm\" href=\"/maintenance_alloc/allocations_return.php?id='.$holder['alloc_id'].'\">Return</a>';","  }","  return '<a class=\"btn btn-success btn-sm\" href=\"/maintenance_alloc/allocations_form.php?machine_id='.$machine_id.'\">Issue</a>';","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/tax.php": ["<?php","declare(strict_types=1);","","/**"," * Compute GST split based on org vs site/party state codes."," * @param string $orgState  e.g. 'GJ' (state code)"," * @param string $txnState  e.g. 'GJ' for intra, other for inter"," * @param float  $taxRate   e.g. 18.0"," * @param float  $taxBase   taxable amount for the line"," * @return array [cgst, sgst, igst]"," */","function gst_split(string $orgState, string $txnState, float $taxRate, float $taxBase): array {","    $rate = max(0.0, $taxRate);","    $base = max(0.0, $taxBase);","    if ($orgState === '' || $txnState === '') return [0.0,0.0,0.0];","    if (strtoupper($orgState) === strtoupper($txnState)) {","        $half = round(($base * $rate / 100) / 2, 2);","        return [$half, $half, 0.0];","    } else {","        $igst = round($base * $rate / 100, 2);","        return [0.0, 0.0, $igst];","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/notify.php": ["<?php","/** PATH: /public_html/includes/notify.php */","declare(strict_types=1);","","/** Direct inbox write (synchronous) */","function notify_inbox(PDO $pdo, array $userIds, string $title, ?string $body = null): void {","  if (!$userIds) return;","  $ins = $pdo->prepare(\"INSERT INTO notifications (user_id, title, body, is_read, created_at) VALUES (?, ?, ?, 0, NOW())\");","  foreach ($userIds as $uid) $ins->execute([(int)$uid, $title, $body]);","}","","/** Enqueue async job (for batches/email/SMS later) */","function queue_notify(PDO $pdo, array $userIds, string $title, ?string $body = null, ?string $notBefore = null): void {","  $payload = json_encode(['user_ids'=>$userIds, 'title'=>$title, 'body'=>$body], JSON_UNESCAPED_UNICODE);","  $st = $pdo->prepare(\"INSERT INTO notification_queue (job_type, payload_json, not_before_at, status, created_at)","                       VALUES ('notify', ?, ?, 'queued', NOW())\");","  $st->execute([$payload, $notBefore]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/includes/StockMoveWriter.php": ["<?php","// includes/StockMoveWriter.php (updated to subtract reservations for availability)","require_once __DIR__ . '/policy.php';","require_once __DIR__ . '/db.php';","require_once __DIR__ . '/Availability.php';","","class StockMoveWriter","{","    private static function normalize(array $payload): array","    {","        $txnDateInput = $payload['txn_date'] ?? date('Y-m-d');","        $txnDate = date('Y-m-d', strtotime($txnDateInput));","        return [","            'txn_type'     => (string)($payload['txn_type'] ?? ''),","            'txn_no'       => (string)($payload['txn_no'] ?? ''),","            'txn_date'     => $txnDate,","            'project_id'   => isset($payload['project_id']) ? (int)$payload['project_id'] : null,","            'item_id'      => (int)($payload['item_id'] ?? 0),","            'uom_id'       => isset($payload['uom_id']) ? (int)$payload['uom_id'] : null,","            'warehouse_id' => (int)($payload['warehouse_id'] ?? 0),","            'bin_id'       => isset($payload['bin_id']) ? (int)$payload['bin_id'] : null,","            'batch_id'     => isset($payload['batch_id']) ? (int)$payload['batch_id'] : null,","            'qty'          => (float)($payload['qty'] ?? 0),","            'unit_cost'    => (float)($payload['unit_cost'] ?? 0.0),","            'ref_entity'   => (string)($payload['ref_entity'] ?? ($payload['ref_table'] ?? '')),","            'ref_id'       => isset($payload['ref_id']) ? (int)$payload['ref_id'] : null,","            'created_by'   => isset($payload['created_by']) ? (int)$payload['created_by'] : null,","        ];","    }","","    private static function insert(PDO $pdo, array $row): void","    {","        if ($row['item_id'] <= 0 || $row['warehouse_id'] <= 0 || $row['qty'] <= 0) {","            throw new RuntimeException('Invalid stock move payload (item_id/warehouse_id/qty).');","        }","        if ($row['txn_type'] === '' || $row['txn_no'] === '') {","            throw new RuntimeException('Invalid stock move payload (txn_type/txn_no).');","        }","","        $sql = \"INSERT INTO stock_moves","                (txn_type, txn_no, txn_date, project_id, item_id, uom_id, warehouse_id, bin_id, batch_id,","                 qty, unit_cost, ref_entity, ref_id, created_by)","                VALUES","                (:txn_type, :txn_no, :txn_date, :project_id, :item_id, :uom_id, :warehouse_id, :bin_id, :batch_id,","                 :qty, :unit_cost, :ref_entity, :ref_id, :created_by)\";","        $st = $pdo->prepare($sql);","        $st->execute([","            ':txn_type'=>$row['txn_type'], ':txn_no'=>$row['txn_no'], ':txn_date'=>$row['txn_date'],","            ':project_id'=>$row['project_id'], ':item_id'=>$row['item_id'], ':uom_id'=>$row['uom_id'],","            ':warehouse_id'=>$row['warehouse_id'], ':bin_id'=>$row['bin_id'], ':batch_id'=>$row['batch_id'],","            ':qty'=>$row['qty'], ':unit_cost'=>$row['unit_cost'], ':ref_entity'=>$row['ref_entity'] ?: null,","            ':ref_id'=>$row['ref_id'], ':created_by'=>$row['created_by'],","        ]);","    }","","    public static function postIn(PDO $pdo, array $payload): void","    {","        $row = self::normalize($payload);","        if ($row['qty'] <= 0) throw new RuntimeException('IN movement requires qty > 0.');","        self::insert($pdo, $row);","    }","","    public static function postOut(PDO $pdo, array $payload): void","    {","        $row = self::normalize($payload);","        if ($row['qty'] <= 0) throw new RuntimeException('OUT movement requires qty > 0.');","","        if (class_exists('Policy') && Policy::blockNegativeStockForWarehouse($pdo, (int)$row['warehouse_id'])) {","            $available = Availability::available($pdo, (int)$row['item_id'], (int)$row['warehouse_id']);","            if ($available + 1e-9 < (float)$row['qty']) {","                throw new RuntimeException('NEG_STOCK_BLOCKED: Not enough available stock at this warehouse.');","            }","        }","        self::insert($pdo, $row);","    }","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/dashboard/kpi.php": ["<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","require_login(); require_permission('kpi.view');","$pdo=db();","$grn=$pdo->query(\"SELECT * FROM v_kpi_grn_30d\")->fetchAll(PDO::FETCH_ASSOC);","$ap =$pdo->query(\"SELECT * FROM v_kpi_ap_30d\")->fetchAll(PDO::FETCH_ASSOC);","$oh =$pdo->query(\"SELECT SUM(amount) AS onhand_value FROM v_kpi_onhand_value\")->fetch(PDO::FETCH_ASSOC);","?><!doctype html><html><head><meta charset=\"utf-8\"><title>KPI Dashboard</title>","<style>body{font-family:system-ui,Segoe UI,Roboto,Arial,sans-serif;margin:20px}table{border-collapse:collapse;width:100%}th,td{border:1px solid #e5e7eb;padding:6px}</style></head><body>","<h1>KPI Dashboard</h1>","<h3>Last 30d GRN Value (daily)</h3>","<table><thead><tr><th>Date</th><th>Value</th></tr></thead><tbody>","<?php foreach($grn as $r): ?><tr><td><?= htmlspecialchars($r['d']) ?></td><td><?= number_format((float)$r['grn_value'],2) ?></td></tr><?php endforeach; ?>","</tbody></table>","<h3>Last 30d AP Invoice Value (daily)</h3>","<table><thead><tr><th>Date</th><th>Value</th></tr></thead><tbody>","<?php foreach($ap as $r): ?><tr><td><?= htmlspecialchars($r['d']) ?></td><td><?= number_format((float)$r['ap_value'],2) ?></td></tr><?php endforeach; ?>","</tbody></table>","<h3>Current On-hand Inventory Value</h3>","<p><b><?= number_format((float)($oh['onhand_value'] ?? 0),2) ?></b></p>","</body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/api/iam_provisioning.php": ["<?php","/** PATH: /public_html/api/iam_provisioning.php */","declare(strict_types=1);","header('Content-Type: application/json');","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/lib_iam_provisioning.php';","","require_login();","require_permission('core.user.manage');","","$pdo = db();","$action = $_GET['action'] ?? 'preview';","$employeeId = isset($_REQUEST['employee_id']) ? (int)$_REQUEST['employee_id'] : 0;","if ($employeeId <= 0) { http_response_code(400); echo json_encode(['error'=>'employee_id is required']); exit; }","","try {","  if ($action === 'preview') {","    $data = iam_preview_for_employee($pdo, $employeeId);","    if ($data['roles']) {","      $in = str_repeat('?,', count($data['roles'])-1) . '?';","      $st = $pdo->prepare(\"SELECT id, code FROM roles WHERE code IN ($in)\");","      $st->execute($data['roles']);","      $data['role_id_map'] = $st->fetchAll(PDO::FETCH_KEY_PAIR); // id=>code","    }","    echo json_encode($data); exit;","  }","","  if ($action === 'commit') {","    $requestedBy = (int)(current_user()['id'] ?? 0);","    $res = iam_commit_provision($pdo, $employeeId, $requestedBy);","    echo json_encode(['ok'=>true] + $res); exit;","  }","","  http_response_code(400);","  echo json_encode(['error'=>'unknown action']);","} catch (Throwable $e) {","  http_response_code(500);","  echo json_encode(['error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/api/machine_types_by_category.php": ["<?php","declare(strict_types=1);","/** PATH: /public_html/api/machine_types_by_category.php */","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","","require_login();","require_permission('machines.view');","","$cid = (int)($_GET['category_id'] ?? 0);","$pdo = db();","","// Detect the short code column on machine_types","$col = $pdo->query(\"SHOW COLUMNS FROM machine_types LIKE 'machine_code'\")->fetch() ? 'machine_code' : 'code';","","$stmt = $pdo->prepare(\"SELECT id, CONCAT($col,' - ',name) AS label FROM machine_types WHERE category_id=? ORDER BY $col\");","$stmt->execute([$cid]);","","header('Content-Type: application/json');","echo json_encode(array_map(fn($r)=>['id'=>(int)$r['id'],'label'=>$r['label']], $stmt->fetchAll(PDO::FETCH_ASSOC)));"],
"/home/u989675055/domains/emsinfra.co.in/public_html/api/release_stock.php": ["<?php","// api/release_stock.php","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","","header('Content-Type: application/json');","try {","    require_permission('stores.reservation.manage');","","    $raw = file_get_contents('php://input');","    $input = json_decode($raw, true);","    if (!$input) $input = $_POST;","","    $resId = isset($input['id']) ? (int)$input['id'] : 0;","    $refEntity = trim($input['ref_entity'] ?? '');","    $refId = isset($input['ref_id']) ? (int)$input['ref_id'] : 0;","","    $pdo = db();","    if ($resId > 0) {","        $st = $pdo->prepare(\"DELETE FROM item_reservations WHERE id=:id\");","        $st->execute([':id'=>$resId]);","    } elseif ($refEntity !== '' && $refId > 0) {","        $st = $pdo->prepare(\"DELETE FROM item_reservations WHERE ref_entity=:re AND ref_id=:rid\");","        $st->execute([':re'=>$refEntity, ':rid'=>$refId]);","    } else {","        throw new RuntimeException('Provide id OR (ref_entity, ref_id)');","    }","","    echo json_encode(['ok'=>true]);","} catch (Throwable $e) {","    http_response_code(400);","    echo json_encode(['ok'=>false, 'error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/api/hr_validate.php": ["<?php","/** PATH: /public_html/api/hr_validate.php */","declare(strict_types=1);","header('Content-Type: application/json');","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","require_permission('hr.employee.manage');","","$pdo = db();","$field = $_GET['field'] ?? '';","$value = trim($_GET['value'] ?? '');","$id    = (int)($_GET['id'] ?? 0);","","if (!in_array($field, ['aadhaar','pan','email','code'], true) || $value==='') {","  http_response_code(400); echo json_encode(['error'=>'bad request']); exit;","}","$sql = \"SELECT id FROM employees WHERE $field = ?\". ($id ? \" AND id <> ?\" : \"\") .\" LIMIT 1\";","$st = $pdo->prepare($sql);","$st->execute($id ? [$value, $id] : [$value]);","$exists = (bool)$st->fetchColumn();","echo json_encode(['ok'=>true, 'exists'=>$exists]);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/api/process_qty_preview.php": ["<?php","// /api/process_qty_preview.php","require __DIR__ . '/../includes/auth.php';","require __DIR__ . '/../includes/db.php';","require __DIR__ . '/../includes/process_qty.php';","","header('Content-Type: application/json');","$opId = (int)($_GET['routing_op_id'] ?? 0);","if (!$opId) { http_response_code(400); echo json_encode(['error'=>'routing_op_id required']); exit; }","","try {","  $res = pq_compute_for_op($pdo, $opId);","  if (!$res) { echo json_encode(['hasRule'=>false]); exit; }","  [$qty, $uom_id, $inputs] = $res;","  $u = $pdo->prepare(\"SELECT code FROM uom WHERE id=?\"); $u->execute([$uom_id]);","  $uom_code = $u->fetchColumn() ?: '';","  echo json_encode(['hasRule'=>true, 'qty'=>$qty, 'uom'=>$uom_code, 'inputs'=>$inputs]);","} catch (Throwable $e) {","  http_response_code(500);","  echo json_encode(['error'=>'calc-failed', 'msg'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/api/reserve_stock.php": ["<?php","// api/reserve_stock.php","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/Availability.php';","","header('Content-Type: application/json');","try {","    require_permission('stores.reservation.manage');","","    $raw = file_get_contents('php://input');","    $input = json_decode($raw, true);","    if (!$input) $input = $_POST;","","    $itemId = (int)($input['item_id'] ?? 0);","    $warehouseId = (int)($input['warehouse_id'] ?? 0);","    $qty = (float)($input['qty'] ?? 0);","    $refEntity = trim($input['ref_entity'] ?? '');","    $refId = isset($input['ref_id']) ? (int)$input['ref_id'] : null;","","    if ($itemId<=0 || $warehouseId<=0 || $qty<=0) throw new RuntimeException('item_id, warehouse_id, qty required');","    if ($refEntity==='') throw new RuntimeException('ref_entity required');","","    $pdo = db();","    $pdo->beginTransaction();","","    $available = Availability::available($pdo, $itemId, $warehouseId);","    if ($available + 1e-9 < $qty) throw new RuntimeException('INSUFFICIENT_AVAILABLE: not enough stock to reserve');","","    $st = $pdo->prepare(\"INSERT INTO item_reservations (item_id, warehouse_id, qty, ref_entity, ref_id, created_at)","                         VALUES (:i,:w,:q,:re,:rid, NOW(6))\");","    $st->execute([':i'=>$itemId, ':w'=>$warehouseId, ':q'=>$qty, ':re'=>$refEntity, ':rid'=>$refId]);","","    $id = (int)$pdo->lastInsertId();","    $pdo->commit();","    echo json_encode(['ok'=>true, 'reservation_id'=>$id]);","} catch (Throwable $e) {","    if (!empty($pdo) && $pdo->inTransaction()) $pdo->rollBack();","    http_response_code(400);","    echo json_encode(['ok'=>false, 'error'=>$e->getMessage()]);","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/api/iam_approvals.php": ["<?php","/** PATH: /public_html/api/iam_approvals.php */","declare(strict_types=1);","header('Content-Type: application/json');","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","","$pdo = db();","$action = $_GET['action'] ?? 'list';","","if ($action === 'list') {","  require_permission('iam.provision.view');","  $uid = (int)(current_user()['id'] ?? 0);","","  $sql = \"SELECT pa.id AS approval_id, pr.id AS provision_request_id, pr.employee_id, pr.proposed_roles, pr.proposed_profiles,","                 pa.step_no, pa.decision, pr.status, pr.created_at","          FROM provision_approval pa","          JOIN provision_request pr ON pr.id = pa.provision_request_id","          WHERE pa.approver_user_id = ? AND pa.decision = 'pending'","          ORDER BY pr.created_at ASC\";","  $st = $pdo->prepare($sql);","  $st->execute([$uid]);","  echo json_encode(['items' => $st->fetchAll(PDO::FETCH_ASSOC)]);","  exit;","}","","if ($action === 'decide') {","  require_permission('iam.provision.approve');","","  $approvalId = (int)($_POST['approval_id'] ?? $_GET['approval_id'] ?? 0);","  $decision   = $_POST['decision'] ?? $_GET['decision'] ?? '';","  $notes      = trim($_POST['notes'] ?? $_GET['notes'] ?? '');","","  if (!$approvalId || !in_array($decision, ['approved','rejected'], true)) {","    http_response_code(400); echo json_encode(['error'=>'approval_id and decision required']); exit;","  }","","  $pdo->beginTransaction();","  $st = $pdo->prepare(\"SELECT pa.*, pr.status, pr.current_step, pr.proposed_roles, pr.employee_id","                       FROM provision_approval pa","                       JOIN provision_request pr ON pr.id = pa.provision_request_id","                       WHERE pa.id = ? FOR UPDATE\");","  $st->execute([$approvalId]);","  $row = $st->fetch(PDO::FETCH_ASSOC);","  if (!$row || $row['decision'] !== 'pending') { $pdo->rollBack(); http_response_code(404); echo json_encode(['error'=>'not found']); exit; }","","  $uid = (int)(current_user()['id'] ?? 0);","  if ((int)$row['approver_user_id'] !== $uid) { $pdo->rollBack(); http_response_code(403); echo json_encode(['error'=>'not your task']); exit; }","","  $pdo->prepare(\"UPDATE provision_approval SET decision=?, notes=?, decided_at=NOW() WHERE id=?\")","      ->execute([$decision, $notes ?: null, $approvalId]);","","  if ($decision === 'rejected') {","    $pdo->prepare(\"UPDATE provision_request SET status='rejected', updated_at=NOW() WHERE id=?\")->execute([$row['provision_request_id']]);","    $pdo->commit(); echo json_encode(['ok'=>true,'status'=>'rejected']); exit;","  }","","  // Is there another pending step?","  $next = $pdo->prepare(\"SELECT pa.* FROM provision_approval pa WHERE pa.provision_request_id=? AND pa.decision='pending' ORDER BY pa.step_no ASC LIMIT 1\");","  $next->execute([$row['provision_request_id']]);","  $n = $next->fetch(PDO::FETCH_ASSOC);","  if ($n) {","    $pdo->prepare(\"UPDATE provision_request SET current_step=?, updated_at=NOW() WHERE id=?\")->execute([$n['step_no'], $row['provision_request_id']]);","    $pdo->commit(); echo json_encode(['ok'=>true,'status'=>'pending_approval','next_step'=>$n['step_no']]); exit;","  }","","  // Final approval \u2192 apply roles","  $pdo->prepare(\"UPDATE provision_request SET status='approved', updated_at=NOW() WHERE id=?\")->execute([$row['provision_request_id']]);","","  // Apply roles by codes \u2192 ensure user","  $roleCodes = json_decode($row['proposed_roles'] ?? '[]', true) ?: [];","  $u = $pdo->prepare(\"SELECT id FROM users WHERE employee_id=? LIMIT 1\");","  $u->execute([(int)$row['employee_id']]);","  $uidCreated = $u->fetchColumn();","  if (!$uidCreated) {","    $emp = $pdo->prepare(\"SELECT * FROM employees WHERE id=?\");","    $emp->execute([(int)$row['employee_id']]);","    $employee = $emp->fetch(PDO::FETCH_ASSOC);","    $username = strtolower(preg_replace('/[^a-z0-9]+/i','', ($employee['first_name'] ?? 'user').'.'.($employee['last_name'] ?? '')));","    $name = trim(($employee['first_name'] ?? '').' '.($employee['last_name'] ?? ''));","    $email = $employee['email'] ?? ( $username.'@example.local' );","    $pwd = password_hash(bin2hex(random_bytes(6)), PASSWORD_BCRYPT);","    $ins = $pdo->prepare(\"INSERT INTO users (employee_id, username, name, email, password, status, created_at, updated_at)","                           VALUES (?, ?, ?, ?, ?, 'active', NOW(), NOW())\");","    $ins->execute([(int)$row['employee_id'], $username, $name, $email, $pwd]);","    $uidCreated = (int)$pdo->lastInsertId();","  }","  if ($roleCodes) {","    $in = str_repeat('?,', count($roleCodes)-1) . '?';","    $st = $pdo->prepare(\"SELECT id FROM roles WHERE code IN ($in)\");","    $st->execute($roleCodes);","    $roleIds = $st->fetchAll(PDO::FETCH_COLUMN);","    $ins = $pdo->prepare(\"INSERT IGNORE INTO user_roles (user_id, role_id) VALUES (?, ?)\");","    foreach ($roleIds as $rid) { $ins->execute([$uidCreated, (int)$rid]); }","  }","  $pdo->commit(); echo json_encode(['ok'=>true,'status'=>'approved']); exit;","}","","http_response_code(400);","echo json_encode(['error'=>'unknown action']);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/api/employee_doc.php": ["<?php","/** PATH: /public_html/api/employee_docs.php */","declare(strict_types=1);","header('Content-Type: application/json');","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","","require_login();","$pdo = db();","","$action = $_GET['action'] ?? 'list';","$employeeId = (int)($_REQUEST['employee_id'] ?? 0);","if ($employeeId <= 0) { http_response_code(400); echo json_encode(['error'=>'employee_id required']); exit; }","","// AuthZ: viewers can list, managers can upload/delete","$canView = has_permission('hr.employee.view');","$canManage = has_permission('hr.employee.manage');","if (!$canView) { http_response_code(403); echo json_encode(['error'=>'forbidden']); exit; }","","if ($action === 'list') {","  $st = $pdo->prepare(\"SELECT id, doc_type, file_path, original_name, mime_type, created_at FROM employee_documents WHERE employee_id=? ORDER BY created_at DESC\");","  $st->execute([$employeeId]);","  echo json_encode(['items'=>$st->fetchAll(PDO::FETCH_ASSOC)]); exit;","}","","if ($action === 'upload') {","  if (!$canManage) { http_response_code(403); echo json_encode(['error'=>'forbidden']); exit; }","  if (empty($_FILES['file']['name']) || !is_uploaded_file($_FILES['file']['tmp_name'])) {","    http_response_code(400); echo json_encode(['error'=>'file missing']); exit;","  }","  $docType = $_POST['doc_type'] ?? 'other';","  $allowedTypes = ['aadhaar','pan','passbook','offer_letter','joining_form','other'];","  if (!in_array($docType, $allowedTypes, true)) $docType = 'other';","","  $mime = mime_content_type($_FILES['file']['tmp_name']);","  $size = (int)$_FILES['file']['size'];","  if ($size > 5*1024*1024) { http_response_code(400); echo json_encode(['error'=>'max 5MB']); exit; }","","  // Accept common image/PDF/zip","  $ext = 'bin';","  $map = [","    'application/pdf'=>'pdf', 'image/jpeg'=>'jpg', 'image/png'=>'png', 'image/webp'=>'webp',","    'application/zip'=>'zip', 'application/x-zip-compressed'=>'zip'","  ];","  if (isset($map[$mime])) $ext = $map[$mime];","","  $root = rtrim($_SERVER['DOCUMENT_ROOT'], '/');","  $dir = $root . '/uploads/employees/' . $employeeId . '/docs';","  if (!is_dir($dir)) mkdir($dir, 0775, true);","","  $safeBase = preg_replace('/[^a-zA-Z0-9_\\-\\.]/','_', $_FILES['file']['name']);","  $fname = date('Ymd_His') . '_' . $docType . '_' . $safeBase;","  $path = $dir . '/' . $fname;","  if (!move_uploaded_file($_FILES['file']['tmp_name'], $path)) {","    http_response_code(500); echo json_encode(['error'=>'save failed']); exit;","  }","  $rel = '/uploads/employees/' . $employeeId . '/docs/' . $fname;","","  $st = $pdo->prepare(\"INSERT INTO employee_documents (employee_id, doc_type, file_path, original_name, mime_type, created_at)","                       VALUES (?, ?, ?, ?, ?, NOW())\");","  $st->execute([$employeeId, $docType, $rel, $_FILES['file']['name'], $mime]);","","  echo json_encode(['ok'=>true, 'file'=>$rel]); exit;","}","","if ($action === 'delete') {","  if (!$canManage) { http_response_code(403); echo json_encode(['error'=>'forbidden']); exit; }","  $id = (int)($_POST['id'] ?? $_GET['id'] ?? 0);","  if (!$id) { http_response_code(400); echo json_encode(['error'=>'id required']); exit; }","","  $st = $pdo->prepare(\"SELECT file_path FROM employee_documents WHERE id=? AND employee_id=?\");","  $st->execute([$id, $employeeId]);","  $row = $st->fetch(PDO::FETCH_ASSOC);","  if (!$row) { http_response_code(404); echo json_encode(['error'=>'not found']); exit; }","","  $pdo->prepare(\"DELETE FROM employee_documents WHERE id=?\")->execute([$id]);","  $file = rtrim($_SERVER['DOCUMENT_ROOT'], '/') . $row['file_path'];","  if (is_file($file)) @unlink($file);","  echo json_encode(['ok'=>true]); exit;","}","","http_response_code(400);","echo json_encode(['error'=>'unknown action']);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/.user.ini": ["display_errors = Off","log_errors = On","error_log = \"/home/u989675055/logs/php-error.log\"","session.cookie_httponly = 1","session.cookie_samesite = Lax"],
"/home/u989675055/domains/emsinfra.co.in/public_html/tools/diff_viewer.php": ["<?php","/**"," * PATH: /public_html/tools/diff_viewer.php"," * Unified Diff Viewer (PHP 8.4 + Bootstrap 5)"," * Security: requires dev.diff.view, reuses central CSRF, path whitelist = /public_html"," */","","declare(strict_types=1);","if (session_status() === PHP_SESSION_NONE) session_start();","date_default_timezone_set('Asia/Kolkata');","","const BASE_DIR = __DIR__ . '/..'; // /public_html","","// Safe esc","if (!function_exists('h')) { function h(string $v): string { return htmlspecialchars($v, ENT_QUOTES|ENT_SUBSTITUTE,'UTF-8'); } }","","$errors = []; $notice = null; $diffText = '';","","try {","  require_once __DIR__ . '/../includes/auth.php';","  require_once __DIR__ . '/../includes/db.php';","  require_once __DIR__ . '/../includes/rbac.php';","  require_once __DIR__ . '/../includes/csrf.php';","  require_login();","  require_permission('dev.diff.view');","} catch (Throwable $e) { $errors[] = \"Bootstrap failed: \".$e->getMessage(); }","","function ensure_inside(string $path, string $base=BASE_DIR): void {","  $rb = rtrim(str_replace('\\\\','/', realpath($base) ?: $base),'/').'/';","  $rp = str_replace('\\\\','/', realpath($path) ?: $path);","  if (!str_starts_with($rp, $rb)) throw new RuntimeException('Path escapes base.');","}","","function read_lines(string $p): array {","  if (!is_file($p) || !is_readable($p)) throw new RuntimeException('File missing/unreadable: '.$p);","  return preg_split(\"~\\r\\n|\\n|\\r~\", (string)file_get_contents($p));","}","","/** Minimal Myers-style LCS diff to unified format */","function unified_diff(array $a, array $b, int $context = 3): string {","  // LCS table","  $m = count($a); $n = count($b);","  $lcs = array_fill(0,$m+1,array_fill(0,$n+1,0));","  for($i=$m-1;$i>=0;$i--) for($j=$n-1;$j>=0;$j--) $lcs[$i][$j]=($a[$i]===$b[$j])? $lcs[$i+1][$j+1]+1 : max($lcs[$i+1][$j],$lcs[$i][$j+1]);","  // Backtrack","  $ops = [];","  $i=0; $j=0;","  while($i<$m && $j<$n){","    if($a[$i]===$b[$j]){ $ops[]=['=',$a[$i]]; $i++; $j++; }","    elseif($lcs[$i+1][$j] >= $lcs[$i][$j+1]){ $ops[]=['-',$a[$i]]; $i++; }","    else{ $ops[]=['+',$b[$j]]; $j++; }","  }","  while($i<$m){ $ops[]=['-',$a[$i++]]; }","  while($j<$n){ $ops[]=['+',$b[$j++]]; }","","  // Build hunks","  $hunks = []; $hunk=[]; $aLn=1; $bLn=1; $aStart=1; $bStart=1; $aCount=0; $bCount=0; $in=false; $ctx=0;","  $flush = function() use (&$hunks,&$hunk,&$aStart,&$bStart,&$aCount,&$bCount,&$in){ if($in){ $hunks[]=[\"@$@$ -$aStart,$aCount +$bStart,$bCount @@\",$hunk]; } $hunk=[]; $in=false; $aCount=$bCount=0; };","  foreach($ops as [$tag,$line]){","    if($tag==='='){","      if($in){","        if($ctx<$context){ $hunk[]=[' ',$line]; $aCount++; $bCount++; $aLn++; $bLn++; $ctx++; }","        else { $flush(); $ctx=0; $aStart=$aLn; $bStart=$bLn; }","      } else {","        $ctx = min($ctx+1,$context);","      }","      $aLn++; $bLn++;","    } else {","      if(!$in){ $in=true; $ctx=0; $aStart=$aLn; $bStart=$bLn; }","      if($tag==='-'){ $hunk[]=['-',$line]; $aCount++; $aLn++; $ctx=0; }","      else { $hunk[]=['+',$line]; $bCount++; $bLn++; $ctx=0; }","    }","  }","  $flush();","","  // Format","  $out = [];","  foreach($hunks as [$hdr,$lines]){","    $out[] = $hdr;","    foreach($lines as [$t,$l]){","      $out[] = $t . $l;","    }","  }","  return implode(\"\\n\",$out);","}","","$pathA = trim($_POST['path_a'] ?? '');","$pathB = trim($_POST['path_b'] ?? '');","$action = $_POST['action'] ?? '';","","try{","  if ($action==='diff') {","    require_csrf();","    if ($pathA==='' || $pathB==='') throw new RuntimeException('Select both files.');","    $absA = BASE_DIR . '/' . ltrim($pathA,'/');","    $absB = BASE_DIR . '/' . ltrim($pathB,'/');","    ensure_inside($absA); ensure_inside($absB);","    $a = read_lines($absA);","    $b = read_lines($absB);","    $diffText = unified_diff($a,$b,3);","    if ($diffText==='') $diffText = \"(No differences)\";","  }","} catch(Throwable $e){ $errors[] = $e->getMessage(); }","","$csrf = csrf_token();","?>","<!doctype html>","<html lang=\"en\">","<head>","  <meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <title>Unified Diff Viewer</title>","  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","  <style>.mono{font-family:ui-monospace,Menlo,Consolas,monospace}.code{white-space:pre;overflow:auto}.add{background:#e6ffed}.del{background:#ffeef0}</style>","</head>","<body class=\"p-3\">","<div class=\"container-lg\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <h1 class=\"h4 mb-0\">Unified Diff Viewer</h1><span class=\"badge bg-secondary\">PHP 8.4</span>","  </div>","  <?php if($errors): ?><div class=\"alert alert-danger\"><ul class=\"mb-0\"><?php foreach($errors as $er) echo '<li>'.h($er).'</li>'; ?></ul></div><?php endif; ?>","  <form method=\"post\" class=\"row g-3 mb-3\">","    <input type=\"hidden\" name=\"csrf_token\" value=\"<?= h($csrf) ?>\">","    <div class=\"col-lg-6\">","      <label class=\"form-label\">File A (relative to /public_html)</label>","      <input class=\"form-control\" name=\"path_a\" placeholder=\"e.g. modules/items/items_list.php\" value=\"<?= h($pathA) ?>\">","    </div>","    <div class=\"col-lg-6\">","      <label class=\"form-label\">File B (relative to /public_html)</label>","      <input class=\"form-control\" name=\"path_b\" placeholder=\"e.g. modules/items/items_list.php.bak\" value=\"<?= h($pathB) ?>\">","    </div>","    <div class=\"col-12\">","      <button class=\"btn btn-primary\" name=\"action\" value=\"diff\">Show Diff</button>","    </div>","  </form>","  <?php if($diffText!==''): ?>","    <div class=\"card\">","      <div class=\"card-header\">Unified Diff</div>","      <div class=\"card-body mono code\">","        <?php","          foreach (explode(\"\\n\",$diffText) as $ln){","            $cls=''; if(str_starts_with($ln,'+')) $cls='add'; elseif(str_starts_with($ln,'-')) $cls='del';","            echo '<div class=\"'.$cls.'\">'.h($ln).'</div>';","          }","        ?>","      </div>","    </div>","  <?php endif; ?>","</div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/tools/trace_page.php": ["<?php","// PATH: /public_html/tools/_trace_page.php","header('Content-Type: text/plain; charset=utf-8');","@ini_set('display_errors','1'); @ini_set('display_startup_errors','1'); error_reporting(E_ALL);","function step($n,$msg){ echo \"[$n] $msg\\n\"; @ob_flush(); @flush(); }","","step(0,'start');","require_once __DIR__ . '/../includes/db.php'; step(1,'db.php loaded');","try { $pdo = db(); $pdo->query('SELECT 1'); step(2,'db() OK'); } catch (Throwable $e) { echo \"[2X] DB FAIL: \".$e->getMessage().\"\\n\"; exit; }","require_once __DIR__ . '/../includes/rbac.php'; step(3,'rbac.php loaded');","","$target = $_GET['file'] ?? '';","if (!$target) { echo \"Use ?file=identity/users_list.php\\n\"; exit; }","$full = realpath(__DIR__.'/../'.$target);","if (!$full || !is_file($full)) { echo \"Target not found: $target\\n\"; exit; }","","step(6,'include '.$target);","include $full;","step(7,'included OK');"],
"/home/u989675055/domains/emsinfra.co.in/public_html/tools/diag_pw_check.php": ["<?php","// PATH: /public_html/tools/_diag_pw_check.php","header('Content-Type: text/plain; charset=utf-8');","require_once __DIR__.'/../includes/db.php';","$u=$_GET['u']??''; $pw=$_GET['pw']??'';","if(!$u||!$pw){ echo \"Need ?u=admin&pw=Admin@123\\n\"; exit; }","$pdo=db();","$st=$pdo->prepare(\"SELECT username,password,status FROM users WHERE username=? OR email=? LIMIT 1\");","$st->execute([$u,$u]);","$row=$st->fetch(PDO::FETCH_ASSOC);","if(!$row){ echo \"User not found\\n\"; exit; }","echo \"status={$row['status']}\\n\";","echo password_verify($pw,$row['password']) ? \"PASS\\n\" : \"FAIL\\n\";"],
"/home/u989675055/domains/emsinfra.co.in/public_html/tools/block_replace.php": ["<?php","/**"," * PATH: /public_html/tools/block_replace.php"," * Block Replace Tool (PHP 8.4 + Bootstrap 5)"," *"," * Features:"," * - Select a file (relative to /public_html)."," * - Paste \"Search Block\" and \"Replace Block\" (multi-line)."," * - Options: first/all matches, case sensitive, regex/plain, normalize line endings."," * - Dry-run: show matches + unified diff."," * - Apply: atomic write + backup to /public_html/_backups/<file>.<Ymd_His>.bak"," *"," * Security:"," * - Requires login + permission: dev.files.patch"," * - Uses central CSRF (/includes/csrf.php) with fallback validator"," * - Whitelists path to /public_html"," */","","declare(strict_types=1);","if (session_status() === PHP_SESSION_NONE) session_start();","date_default_timezone_set('Asia/Kolkata');","","const BASE_DIR   = __DIR__ . '/..';       // /public_html","const BACKUP_DIR = BASE_DIR . '/_backups';// /public_html/_backups","","// Safe esc that tolerates null/ints/floats","if (!function_exists('h')) {","  function h(string|int|float|null $v): string {","    return htmlspecialchars((string)$v, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8');","  }","}","","$errors = []; $notice = null; $diffText = ''; $resultPreview = null; $matches = 0; $fileSize = 0;","","try {","  require_once __DIR__ . '/../includes/auth.php';","  require_once __DIR__ . '/../includes/db.php';","  require_once __DIR__ . '/../includes/rbac.php';","  // CSRF (central) optional include","  @require_once __DIR__ . '/../includes/csrf.php';","","  require_login();","  require_permission('dev.files.patch');","","  @mkdir(BACKUP_DIR, 0775, true);","} catch (Throwable $e) {","  $errors[] = \"Bootstrap failed: \".$e->getMessage();","}","","// ---- helpers ----","function require_csrf_local(): void {","  if (function_exists('require_csrf')) { require_csrf(); return; }","  $posted = $_POST['csrf_token'] ?? '';","  $session = function_exists('csrf_token') ? csrf_token() : ($_SESSION['csrf_token'] ?? ($_SESSION['csrf_token']=bin2hex(random_bytes(32))));","  if (!is_string($posted) || !hash_equals((string)$session, (string)$posted)) {","    http_response_code(400); exit('CSRF token mismatch.');","  }","}","","function csrf_value(): string {","  return function_exists('csrf_token')","    ? (string)csrf_token()","    : (string)($_SESSION['csrf_token'] ?? ($_SESSION['csrf_token']=bin2hex(random_bytes(32))));","}","","function ensure_inside(string $path, string $base = BASE_DIR): void {","  $rb = rtrim(str_replace('\\\\','/', realpath($base) ?: $base), '/') . '/';","  $rp = str_replace('\\\\','/', realpath($path) ?: $path);","  if (!str_starts_with($rp, $rb)) throw new RuntimeException('Path escapes base.');","}","","function list_files_flat(string $base = BASE_DIR): array {","  // shallow-ish listing (two levels) to help users, but you can paste any relative path","  $out = [];","  $it = new RecursiveIteratorIterator(","    new RecursiveDirectoryIterator($base, FilesystemIterator::SKIP_DOTS),","    RecursiveIteratorIterator::SELF_FIRST","  );","  $max = 1000;","  foreach ($it as $f) {","    if (count($out) >= $max) break;","    if ($f->isFile()) {","      $rel = substr(str_replace('\\\\','/',$f->getPathname()), strlen(str_replace('\\\\','/',$base)) + 1);","      // skip system dirs","      if (preg_match('~^(includes/|_backups/|uploads/)~', $rel)) { /* allow includes? keep it visible but safe */ }","      $out[] = $rel;","    }","  }","  sort($out, SORT_STRING);","  return $out;","}","","// Simple unified diff for preview","function unified_diff(string $a, string $b, int $context = 3): string {","  $aLines = preg_split(\"~\\r\\n|\\n|\\r~\", $a);","  $bLines = preg_split(\"~\\r\\n|\\n|\\r~\", $b);","  $m = count($aLines); $n = count($bLines);","  $lcs = array_fill(0,$m+1,array_fill(0,$n+1,0));","  for($i=$m-1;$i>=0;$i--) for($j=$n-1;$j>=0;$j--) {","    $lcs[$i][$j] = ($aLines[$i] === $bLines[$j]) ? $lcs[$i+1][$j+1] + 1 : max($lcs[$i+1][$j], $lcs[$i][$j+1]);","  }","  $ops = []; $i=0; $j=0;","  while($i<$m && $j<$n){","    if($aLines[$i] === $bLines[$j]){ $ops[]=['=',$aLines[$i]]; $i++; $j++; }","    elseif($lcs[$i+1][$j] >= $lcs[$i][$j+1]){ $ops[]=['-',$aLines[$i]]; $i++; }","    else { $ops[]=['+',$bLines[$j]]; $j++; }","  }","  while($i<$m){ $ops[]=['-',$aLines[$i++]]; }","  while($j<$n){ $ops[]=['+',$bLines[$j++]]; }","","  // build hunks","  $out = [];","  $aLn=1; $bLn=1;","  $buffer=[]; $aStart=1; $bStart=1; $in=false; $ctx=0;","  $flush=function() use(&$out,&$buffer,&$aStart,&$bStart){","    if(!$buffer) return;","    $aCount=0; $bCount=0;","    foreach($buffer as [$t]){ if($t!='+') $aCount++; if($t!=='-') $bCount++; }","    $out[] = \"@@ -{$aStart},{$aCount} +{$bStart},{$bCount} @@\";","    foreach($buffer as [$t,$l]){ $out[] = $t.$l; }","    $buffer=[]; ","  };","  foreach($ops as [$t,$l]){","    if($t==='='){","      if($in){","        if($ctx<3){ $buffer[]=[' ',$l]; $ctx++; }","        else { $flush(); $in=false; }","      }","      $aLn++; $bLn++;","    } else {","      if(!$in){ $in=true; $ctx=0; $aStart=$aLn; $bStart=$bLn; }","      $buffer[]=[$t,$l];","      if($t==='-') $aLn++; else $bLn++;","      $ctx=0;","    }","  }","  $flush();","  return implode(\"\\n\", $out);","}","","// ---- Controller ----","$action    = $_POST['action'] ?? '';","$relPath   = trim((string)($_POST['rel_path'] ?? '')); // relative to /public_html","$searchRaw = (string)($_POST['search_block'] ?? '');","$replaceRaw= (string)($_POST['replace_block'] ?? '');","$scope     = ($_POST['scope'] ?? 'first') === 'all' ? 'all' : 'first';","$isRegex   = isset($_POST['is_regex']);","$caseSens  = isset($_POST['case_sensitive']);","$normEOL   = isset($_POST['normalize_eol']);","","try {","  if ($action !== '') { require_csrf_local(); }","","  if ($action === 'dryrun' || $action === 'apply') {","    if ($relPath === '') throw new RuntimeException('Please provide file path.');","    $abs = BASE_DIR . '/' . ltrim($relPath, '/');","    ensure_inside($abs);","    if (!is_file($abs) || !is_readable($abs)) throw new RuntimeException('File not found or not readable.');","    $original = (string)file_get_contents($abs);","    $fileSize = filesize($abs) ?: 0;","","    // normalize EOLs if requested","    $src = $original;","    if ($normEOL) {","      $src = str_replace([\"\\r\\n\",\"\\r\"], \"\\n\", $src);","      $search = str_replace([\"\\r\\n\",\"\\r\"], \"\\n\", $searchRaw);","      $replace = str_replace([\"\\r\\n\",\"\\r\"], \"\\n\", $replaceRaw);","    } else {","      $search = $searchRaw;","      $replace = $replaceRaw;","    }","","    if ($search === '') throw new RuntimeException('Search Block is empty.');","","    if ($isRegex) {","      // delimit with ~ and escape delimiter in search?","      $pattern = '~' . $search . '~' . ($caseSens ? '' : 'i') . 's';","      if (@preg_match($pattern, '') === false) {","        throw new RuntimeException('Invalid regex pattern.');","      }","      if ($scope === 'first') {","        $replaced = preg_replace($pattern, $replace, $src, 1, $matches);","      } else {","        $replaced = preg_replace($pattern, $replace, $src, -1, $matches);","      }","    } else {","      // plain text block replace","      $haystack = $src;","      $needle   = $search;","      if (!$caseSens) {","        // case-insensitive: manual loop","        $offset=0; $replaced=''; $matches=0; ","        $lenN = strlen($needle); ","        $lenH = strlen($haystack);","        while ($offset < $lenH) {","          $pos = stripos($haystack, $needle, $offset);","          if ($pos === false) { $replaced .= substr($haystack, $offset); break; }","          $replaced .= substr($haystack, $offset, $pos - $offset) . $replace;","          $matches++;","          $offset = $pos + $lenN;","          if ($scope === 'first') { $replaced .= substr($haystack, $offset); break; }","        }","        if ($matches === 0) $replaced = $haystack;","      } else {","        if ($scope === 'first') {","          $pos = strpos($haystack, $needle);","          if ($pos !== false) {","            $replaced = substr($haystack, 0, $pos) . $replace . substr($haystack, $pos + strlen($needle));","            $matches = 1;","          } else {","            $replaced = $haystack;","            $matches = 0;","          }","        } else {","          $matches = substr_count($haystack, $needle);","          $replaced = ($matches>0) ? str_replace($needle, $replace, $haystack) : $haystack;","        }","      }","    }","","    // show result","    $resultPreview = [","      'path'    => $relPath,","      'matches' => $matches,","      'changed' => ($src !== $replaced),","      'size_before' => strlen($original),","      'size_after'  => strlen($replaced),","    ];","    $diffText = unified_diff($src, $replaced);","","    if ($action === 'apply') {","      if ($matches === 0) {","        throw new RuntimeException('No matches found. Nothing to replace. (Tip: try toggling case sensitivity or regex mode.)');","      }","      // atomic write + backup of original on disk content (not normalized preview)","      $backupName = BACKUP_DIR . '/' . str_replace(['/','\\\\'], '_', $relPath) . '.' . date('Ymd_His') . '.bak';","      if (!is_dir(BACKUP_DIR)) @mkdir(BACKUP_DIR, 0775, true);","      if (file_put_contents($backupName, $original) === false) throw new RuntimeException('Backup failed.');","      $tmp = tempnam(dirname($abs), 'patch_');","      if ($tmp === false) throw new RuntimeException('Temp file error.');","      // write with original EOL policy: if normalized, we keep replaced as-is (LF). If you want original style, add conversion here.","      file_put_contents($tmp, $replaced);","      @chmod($tmp, 0664);","      if (!rename($tmp, $abs)) { @unlink($tmp); throw new RuntimeException('Failed to write target file.'); }","      $notice = \"Patched successfully. Backup: \" . basename($backupName);","    }","  }","} catch (Throwable $e) {","  $errors[] = $e->getMessage();","}","","$csrf = csrf_value();","$filesList = [];","try { $filesList = list_files_flat(); } catch(Throwable $e){ /* ignore */ }","?>","<!doctype html>","<html lang=\"en\">","<head>","  <meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <title>Block Replace Tool</title>","  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","  <style>","    .mono{font-family:ui-monospace,Menlo,Consolas,monospace}","    .code{white-space:pre;overflow:auto}","    .add{background:#e6ffed}","    .del{background:#ffeef0}","  </style>","</head>","<body class=\"p-3\">","<div class=\"container-lg\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <h1 class=\"h4 mb-0\">Block Replace Tool</h1>","    <span class=\"badge bg-secondary\">PHP 8.4</span>","  </div>","","  <?php if ($notice): ?><div class=\"alert alert-success\"><?= h($notice) ?></div><?php endif; ?>","  <?php if ($errors): ?>","    <div class=\"alert alert-danger\"><ul class=\"mb-0\"><?php foreach ($errors as $er) echo '<li>'.h($er).'</li>'; ?></ul></div>","  <?php endif; ?>","","  <form method=\"post\" class=\"row g-3 mb-3\">","    <input type=\"hidden\" name=\"csrf_token\" value=\"<?= h($csrf) ?>\">","","    <div class=\"col-12\">","      <label class=\"form-label\">File (relative to /public_html)</label>","      <div class=\"input-group\">","        <input class=\"form-control\" name=\"rel_path\" value=\"<?= h($relPath) ?>\" placeholder=\"e.g. modules/items/items_list.php\">","        <button class=\"btn btn-outline-secondary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#filehelp\">Browse\u2026</button>","      </div>","      <div class=\"collapse mt-2\" id=\"filehelp\" style=\"max-height:260px;overflow:auto;\">","        <div class=\"list-group\">","          <?php foreach ($filesList as $f): ?>","            <button class=\"list-group-item list-group-item-action\" type=\"button\" onclick=\"document.querySelector('input[name=rel_path]').value='<?= h($f) ?>';\">","              <?= h($f) ?>","            </button>","          <?php endforeach; ?>","          <?php if (!$filesList): ?><div class=\"list-group-item text-muted\">No files listed (you can still type the path).</div><?php endif; ?>","        </div>","      </div>","    </div>","","    <div class=\"col-lg-6\">","      <label class=\"form-label\">Search Block</label>","      <textarea name=\"search_block\" class=\"form-control mono\" rows=\"10\" placeholder=\"Paste the exact block to find (or regex if enabled)\"><?= h($searchRaw) ?></textarea>","    </div>","    <div class=\"col-lg-6\">","      <label class=\"form-label\">Replace With</label>","      <textarea name=\"replace_block\" class=\"form-control mono\" rows=\"10\" placeholder=\"Paste the replacement block\"><?= h($replaceRaw) ?></textarea>","    </div>","","    <div class=\"col-12 d-flex flex-wrap gap-3\">","      <div class=\"form-check\">","        <input class=\"form-check-input\" type=\"checkbox\" name=\"is_regex\" id=\"optRegex\" <?= $isRegex?'checked':'' ?>>","        <label class=\"form-check-label\" for=\"optRegex\">Use regex (PCRE /s <?= $caseSens ? '' : '+ i' ?>)</label>","      </div>","      <div class=\"form-check\">","        <input class=\"form-check-input\" type=\"checkbox\" name=\"case_sensitive\" id=\"optCase\" <?= $caseSens?'checked':'' ?>>","        <label class=\"form-check-label\" for=\"optCase\">Case sensitive</label>","      </div>","      <div class=\"form-check\">","        <input class=\"form-check-input\" type=\"checkbox\" name=\"normalize_eol\" id=\"optEOL\" <?= $normEOL?'checked':'' ?>>","        <label class=\"form-check-label\" for=\"optEOL\">Normalize line endings (CRLF/CR \u2192 LF)</label>","      </div>","      <div>","        <select class=\"form-select\" name=\"scope\">","          <option value=\"first\" <?= $scope==='first'?'selected':'' ?>>Replace first match</option>","          <option value=\"all\"   <?= $scope==='all'?'selected':''   ?>>Replace all matches</option>","        </select>","      </div>","    </div>","","    <div class=\"col-12 d-flex gap-2\">","      <button class=\"btn btn-outline-secondary\" name=\"action\" value=\"dryrun\">Dry-run (Preview)</button>","      <button class=\"btn btn-primary\" name=\"action\" value=\"apply\" onclick=\"return confirm('Apply changes to file? A backup will be created.')\">Apply</button>","    </div>","  </form>","","  <?php if ($resultPreview): ?>","    <div class=\"card mb-3\">","      <div class=\"card-header\"><strong>Result</strong></div>","      <div class=\"card-body\">","        <div><strong>File:</strong> <span class=\"mono\"><?= h($resultPreview['path']) ?></span></div>","        <div><strong>Matches:</strong> <?= (int)$resultPreview['matches'] ?></div>","        <div><strong>Changed:</strong> <?= $resultPreview['changed'] ? 'Yes' : 'No' ?></div>","        <div><strong>Size:</strong> <?= (int)$resultPreview['size_before'] ?> \u2192 <?= (int)$resultPreview['size_after'] ?> bytes</div>","      </div>","    </div>","    <div class=\"card\">","      <div class=\"card-header\">Unified Diff (preview)</div>","      <div class=\"card-body mono code\">","        <?php","          if ($diffText==='') echo '<div class=\"text-muted\">No differences</div>';","          else {","            foreach (explode(\"\\n\",$diffText) as $ln){","              $cls = str_starts_with($ln,'+') ? 'add' : (str_starts_with($ln,'-') ? 'del' : '');","              echo '<div class=\"'.$cls.'\">'.h($ln).'</div>';","            }","          }","        ?>","      </div>","    </div>","  <?php endif; ?>","</div>","<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/tools/schema_export.php": ["<?php","declare(strict_types=1);","/** QUICK SCHEMA EXPORTER: exports CREATE statements only (no data) */","require_once __DIR__ . '/../includes/db.php'; // adjust if needed","","$ROOT = dirname(__DIR__, 1); // /public_html/dev","$PUB  = dirname($ROOT);      // /public_html","$OUT  = $PUB . '/dev/share';","@mkdir($OUT, 0775, true);","","$pdo = db();","$tables = $pdo->query(\"SHOW FULL TABLES WHERE Table_type='BASE TABLE'\")->fetchAll(PDO::FETCH_NUM);","$views  = $pdo->query(\"SHOW FULL TABLES WHERE Table_type='VIEW'\")->fetchAll(PDO::FETCH_NUM);","$fname  = $OUT . '/schema_' . date('Ymd_His') . '.sql';","","$fh = fopen($fname, 'w');","fwrite($fh, \"-- Schema export \".date('c').\"\\nSET FOREIGN_KEY_CHECKS=0;\\n\\n\");","","foreach ($tables as $t) {","  $name = $t[0];","  $row = $pdo->query(\"SHOW CREATE TABLE `{$name}`\")->fetch(PDO::FETCH_ASSOC);","  fwrite($fh, \"DROP TABLE IF EXISTS `{$name}`;\\n\".$row['Create Table'].\";\\n\\n\");","}","foreach ($views as $v) {","  $name = $v[0];","  $row = $pdo->query(\"SHOW CREATE VIEW `{$name}`\")->fetch(PDO::FETCH_ASSOC);","  fwrite($fh, \"DROP VIEW IF EXISTS `{$name}`;\\n\".$row['Create View'].\";\\n\\n\");","}","","fwrite($fh, \"SET FOREIGN_KEY_CHECKS=1;\\n\");","fclose($fh);","","header('Content-Type: text/plain');","echo \"Wrote: /dev/share/\".basename($fname).\"\\n\";"],
"/home/u989675055/domains/emsinfra.co.in/public_html/tools/schema_probe.php": ["<?php","// Quick schema probe: prints JSON of columns for the tables we need","$tables = [","  'crm_leads','crm_activities','parties','contacts','users',","  'sales_quotes','sales_quote_items','sales_orders','sales_order_items',","  'sales_quote_revisions','sales_quote_sents','quote_items',","  'numbering_series','quote_sequences'","];","$pdo = new PDO('mysql:host=localhost;dbname=u989675055_emsinfracoin;charset=utf8mb4','u989675055_emsinfrain','Emsinfra@9898',[","  PDO::ATTR_ERRMODE=>PDO::ERRMODE_EXCEPTION,","  PDO::ATTR_DEFAULT_FETCH_MODE=>PDO::FETCH_ASSOC,","]);","$out=[];","foreach ($tables as $t) {","  try {","    $cols = $pdo->query(\"SHOW COLUMNS FROM `$t`\")->fetchAll();","    $out[$t] = array_map(fn($c)=>$c['Field'].' '.$c['Type'], $cols);","  } catch (Throwable $e) {","    $out[$t] = 'NOT FOUND';","  }","}","header('Content-Type: application/json'); echo json_encode($out, JSON_PRETTY_PRINT);"],
"/home/u989675055/domains/emsinfra.co.in/public_html/tools/export_code.php": ["<?php","/** PATH: /public_html/dev/tools/export_code.php"," * PURPOSE: Create a small zip bundle of code files (default: php/inc/phtml) for external review."," * OUTPUT : Writes zip into /public_html/dev/share/ and prints a link + summary."," * USAGE  :"," *   - /dev/tools/export_code.php"," *   - /dev/tools/export_code.php?since=2025-10-01&max_mb=10"," *   - /dev/tools/export_code.php?include=crm,purchase&max_mb=8"," *   - /dev/tools/export_code.php?exts=php,inc,phtml,css,js&max_mb=12"," *   - /dev/tools/export_code.php?key=YOURSECRET   (if $RUN_KEY is set)"," */","","declare(strict_types=1);","ini_set('memory_limit', '512M');","@set_time_limit(180);","","header('Content-Type: text/plain; charset=utf-8');","","/* ---- Security knob (optional) ----"," * Set a secret here to require ?key=... to run the exporter."," * Leave empty (\"\") to disable the requirement."," */","$RUN_KEY = ''; // e.g. 'ems-2025-secret'; then call with ?key=ems-2025-secret","if ($RUN_KEY !== '') {","  $k = (string)($_GET['key'] ?? '');","  if (!hash_equals($RUN_KEY, $k)) { http_response_code(403); exit(\"Forbidden\\n\"); }","}","","/* ---- Paths ---- */","$TOOLS = __DIR__;                   // /public_html/dev/tools","$DEV   = dirname($TOOLS);           // /public_html/dev","$PUB   = dirname($DEV);             // /public_html","$OUT   = $PUB . '/dev/share';       // output folder (public, but PHP disabled via .htaccess)","if (!is_dir($OUT) && !@mkdir($OUT, 0775, true)) {","  http_response_code(500); exit(\"Cannot create output dir: $OUT\\n\");","}","","/* ---- Params ---- */","$exts     = array_filter(array_map('strtolower', array_map('trim', explode(',', (string)($_GET['exts'] ?? 'php,inc,phtml')))));","$include  = array_filter(array_map(fn($s)=>trim($s,'/ '), explode(',', (string)($_GET['include'] ?? '')))); // path prefixes under public_html","$exclude  = array_filter(array_map(fn($s)=>trim($s,'/ '), explode(',', (string)($_GET['exclude'] ?? 'vendor,uploads,storage,cache,logs,node_modules,.git,dev/share,dev/_backups,.well-known'))));","$sinceStr = (string)($_GET['since'] ?? ''); // YYYY-MM-DD or epoch","$maxMB    = max(1, (int)($_GET['max_mb'] ?? 10)); // default 10MB budget (approx by uncompressed size)","$name     = preg_replace('/[^A-Za-z0-9_.-]/', '_', (string)($_GET['name'] ?? ''));","","$sinceTs = 0;","if ($sinceStr !== '') {","  if (preg_match('/^\\d{10}$/', $sinceStr)) {","    $sinceTs = (int)$sinceStr;","  } else {","    $ts = strtotime($sinceStr);","    if ($ts !== false) $sinceTs = $ts;","  }","}","","if (empty($exts)) { $exts = ['php','inc','phtml']; }","","$maxBytes = $maxMB * 1024 * 1024;","","/* ---- Helpers ---- */","function path_rel(string $abs, string $root): string {","  return ltrim(str_replace($root, '', $abs), '/');","}","function starts_with(string $hay, string $needle): bool {","  return strncmp($hay, $needle, strlen($needle)) === 0;","}","function is_allowed_ext(string $file, array $exts): bool {","  $ext = strtolower(pathinfo($file, PATHINFO_EXTENSION));","  return in_array($ext, $exts, true);","}","function excluded(string $rel, array $ex): bool {","  foreach ($ex as $e) {","    $e = rtrim($e, '/');","    if ($e === '') continue;","    if (starts_with($rel, $e.'/') || $rel === $e) return true;","  }","  return false;","}","function included_by_prefix(string $rel, array $incs): bool {","  if (!$incs) return true; // no include filter = include everything","  foreach ($incs as $i) {","    $i = rtrim($i, '/');","    if ($i === '') continue;","    if (starts_with($rel, $i.'/') || $rel === $i) return true;","  }","  return false;","}","","/* ---- Collect candidates ---- */","$rii = new RecursiveIteratorIterator(","  new RecursiveDirectoryIterator($PUB, FilesystemIterator::SKIP_DOTS)",");","","$files = []; // [ [rel, full, size, mtime], ... ]","foreach ($rii as $sf) {","  /** @var SplFileInfo $sf */","  if ($sf->isDir() || $sf->isLink()) continue;","  $full = $sf->getPathname();","  $rel  = path_rel($full, $PUB);","","  if (excluded($rel, $exclude)) continue;","  if (!included_by_prefix($rel, $include)) continue;","  if (!is_allowed_ext($rel, $exts)) continue;","  if ($sinceTs > 0 && $sf->getMTime() < $sinceTs) continue;","","  $files[] = [$rel, $full, $sf->getSize(), $sf->getMTime()];","}","","/* Sort newest-first so the budget captures recent work */","usort($files, fn($a,$b) => $b[3] <=> $a[3]);","","/* ---- Prepare bundle ---- */","if (!class_exists(ZipArchive::class)) {","  http_response_code(500);","  echo \"ZipArchive PHP extension not available on this host.\\n\";","  echo \"Please enable it in PHP settings or tell me to provide a tar.gz fallback.\\n\";","  exit;","}","","$stamp = date('Ymd_His');","$bundleName = $name !== '' ? $name : \"codebundle_{$stamp}\";","$zipPath = \"{$OUT}/{$bundleName}.zip\";","","$zip = new ZipArchive();","if ($zip->open($zipPath, ZipArchive::CREATE|ZipArchive::OVERWRITE) !== true) {","  http_response_code(500); exit(\"Failed to open zip for writing: $zipPath\\n\");","}","","/* Add files until we hit the budget (approx by uncompressed size) */","$added = 0;","$bytes = 0;","$list  = [];","","foreach ($files as [$rel,$full,$size,$mtime]) {","  if ($bytes + $size > $maxBytes && $added > 0) {","    // stop once we filled the budget (keep at least one file)","    continue;","  }","  if (!$zip->addFile($full, $rel)) {","    // skip on failure","    continue;","  }","  // Best effort compression","  $zip->setCompressionName($rel, ZipArchive::CM_DEFLATE);","  $zip->setCompressionIndex($zip->locateName($rel), ZipArchive::CM_DEFLATE);","","  $added++;","  $bytes += $size;","  $list[] = [","    'path' => $rel,","    'size' => $size,","    'mtime'=> date('c', $mtime)","  ];","}","","/* Add a manifest inside the zip */","$manifest = [","  'generated_at' => date('c'),","  'root'         => '/public_html',","  'filters'      => [","    'exts'    => $exts,","    'include' => $include,","    'exclude' => $exclude,","    'since'   => $sinceTs ? date('c', $sinceTs) : null,","    'budget_mb' => $maxMB","  ],","  'counts'       => [","    'candidates' => count($files),","    'added'      => $added,","  ],","  'files'        => $list,","];","$zip->addFromString('manifest.json', json_encode($manifest, JSON_PRETTY_PRINT|JSON_UNESCAPED_SLASHES));","$zip->close();","","/* ---- Output summary ---- */","$url = str_replace($PUB, '', $zipPath); // /dev/share/...","$kb  = number_format($bytes/1024, 1);","echo \"Bundle created: {$url}\\n\";","echo \"Approx raw size included: {$kb} KB across {$added} files (from \".count($files).\" candidates)\\n\";","echo \"Filters: exts=\".implode(',', $exts).\"; include=\".implode(',', $include).\"; exclude=\".implode(',', $exclude).\"; since=\".($sinceTs?$manifest['filters']['since']:'(none)').\"; budget={$maxMB}MB\\n\";","echo \"Share this link with your reviewer:\\n\";","echo $url . \"\\n\";"],
"/home/u989675055/domains/emsinfra.co.in/public_html/tools/smart_block_runner.php": ["<?php","/**"," * PATH: /public_html/tools/smart_block_runner.php"," * PURPOSE: Safe bulk patch runner (dry-run + execute) for files and SQL."," *"," * Features:"," * - Paste \"Instruction Block\" \u2192 Dry-run \u2192 Execute"," * - File updates with backups and scoped writes"," * - Optional SQL section runs in a single DB transaction"," * - CSRF + RBAC enforced; audit logging optional"," *"," * Permissions:"," * - View/Run patches:   dev.files.smartpatch"," * - Run SQL (optional): dev.sql.run"," *"," * Kernel alignment:"," * - CSRF: verify_csrf_or_die(), csrf_field() (fallbacks included)"," * - RBAC: has_permission(), require_permission()"," * - DB:   db()"," * - Helpers: h(), set_flash(), render_flash()"," * - Audit: audit_log(PDO $pdo, string $entity, string $action, ?int $rowId, $payload)"," */","","declare(strict_types=1);","if (session_status() === PHP_SESSION_NONE) session_start();","","date_default_timezone_set('Asia/Kolkata');","","define('BASE_DIR', realpath(__DIR__ . '/..'));        // /public_html","define('BACKUP_DIR', BASE_DIR . '/_backups');         // backups folder","define('APP_NAME',  'Smart Block Runner');","","// ---------- includes ----------","require_once BASE_DIR . '/includes/auth.php';","require_once BASE_DIR . '/includes/db.php';","require_once BASE_DIR . '/includes/rbac.php';","require_once BASE_DIR . '/includes/csrf.php';","require_once BASE_DIR . '/includes/helpers.php';","require_once BASE_DIR . '/includes/audit.php';","","// ---------- RBAC gate ----------","require_login();","require_permission('dev.files.smartpatch');","","// ---------- helpers ----------","function e(string $v): string { return htmlspecialchars($v, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8'); }","","// CSRF helpers (prefer kernel, keep safe fallback)","function csrf_value(): string {","  if (function_exists('csrf_token')) return (string)csrf_token();","  return $_SESSION['csrf_token'] ??= bin2hex(random_bytes(32));","}","function csrf_field_local(): string {","  if (function_exists('csrf_field')) return (string)csrf_field();","  return '<input type=\"hidden\" name=\"csrf_token\" value=\"'.e(csrf_value()).'\">';","}","function require_csrf_local(): void {","  if (function_exists('verify_csrf_or_die')) { verify_csrf_or_die(); return; }","  $posted  = (string)($_POST['csrf_token'] ?? '');","  $session = csrf_value();","  if ($posted === '' || !hash_equals($session, $posted)) { http_response_code(400); exit('CSRF token mismatch'); }","}","","function ensure_inside(string $target, string $base): void {","  $realBase = realpath($base) ?: $base;","  $realT = realpath($target);","  if ($realT === false) $realT = $target;","  $realBase = rtrim(str_replace('\\\\','/',$realBase),'/') . '/';","  $realT = str_replace('\\\\','/', $realT);","  if (!str_starts_with($realT, $realBase)) {","    throw new RuntimeException('Resolved path escapes allowed base: ' . $target);","  }","}","","// -------- Allowed path prefixes (belt & suspenders) --------","$ALLOWED_PREFIXES = [","  realpath(BASE_DIR) ?: BASE_DIR,","  realpath(BASE_DIR.'/includes') ?: BASE_DIR.'/includes',","  realpath(BASE_DIR.'/ui') ?: BASE_DIR.'/ui',","  realpath(BASE_DIR.'/modules') ?: BASE_DIR.'/modules',","  realpath(BASE_DIR.'/tools') ?: BASE_DIR.'/tools',","];","function is_allowed_path(string $p) : bool {","  $p = str_replace('\\\\','/', realpath($p) ?: $p);","  foreach ($GLOBALS['ALLOWED_PREFIXES'] as $root) {","    $root = rtrim(str_replace('\\\\','/', $root), '/').'/';","    if (str_starts_with($p, $root)) return true;","  }","  return false;","}","","// ---------- storage ----------","@mkdir(BACKUP_DIR, 0775, true);","","// ---------- DB: ensure patch log ----------","function ensure_patch_log(PDO $pdo): void {","  $pdo->exec(\"","    CREATE TABLE IF NOT EXISTS `_patch_log` (","      `id` int unsigned NOT NULL AUTO_INCREMENT,","      `run_at` timestamp NOT NULL DEFAULT current_timestamp(),","      `user_id` int unsigned DEFAULT NULL,","      `user_name` varchar(191) DEFAULT NULL,","      `title` varchar(191) DEFAULT NULL,","      `files_changed` int unsigned NOT NULL DEFAULT 0,","      `sql_executed` tinyint(1) NOT NULL DEFAULT 0,","      `notes` text DEFAULT NULL,","      PRIMARY KEY (`id`)","    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;","  \");","}","","// ---------- parsing ----------","/**"," * Instruction Block format:"," *"," * TITLE: <short title>            (optional)"," * DEFAULTS: REGEX: yes|no         (optional, default: no)"," * FILE_GLOB: public_html/*/*.php  (required)"," * SEARCH: <<<"," *   ...pattern or literal..."," * >>>"," * REPLACE: <<<"," *   ...replacement..."," * >>>"," * SQL: <<<"," *   -- optional; requires dev.sql.run"," *   UPDATE ..."," *   ;"," * >>>"," *"," * Notes:"," * - When DEFAULTS: REGEX: yes \u2192 SEARCH is treated as regex (PCRE, with 's' modifier)."," * - When REGEX: no \u2192 literal search/replace."," * - Multiple FILE_GLOB lines allowed (one per line)."," */","function parse_block(string $raw): array {","  $out = [","    'title'    => '',","    'regex'    => false,","    'globs'    => [],","    'search'   => '',","    'replace'  => '',","    'sql'      => '',","  ];","  $raw = str_replace(\"\\r\\n\", \"\\n\", trim($raw));","","  // Title","  if (preg_match('~^TITLE:\\s*(.+)$~mi', $raw, $m)) $out['title'] = trim($m[1]);","","  // Defaults: REGEX","  if (preg_match('~^DEFAULTS:\\s*(.+)$~mi', $raw, $m)) {","    if (preg_match('~REGEX\\s*:\\s*(yes|true|1)~i', $m[1])) $out['regex'] = true;","  }","","  // FILE_GLOB (allow multiple)","  if (preg_match_all('~^FILE_GLOB:\\s*(.+)$~mi', $raw, $m)) {","    foreach ($m[1] as $g) {","      $g = trim($g);","      if ($g !== '') $out['globs'][] = $g;","    }","  }","","  // Block extract helper","  $grab = function(string $label) use ($raw): string {","    if (preg_match('~^'.$label.':\\s*<<<\\n(.*?)\\n>>>~ms', $raw, $m)) return (string)$m[1];","    return '';","  };","","  $out['search']  = $grab('SEARCH');","  $out['replace'] = $grab('REPLACE');","  $out['sql']     = $grab('SQL');","","  return $out;","}","","// ---------- diff (simple) ----------","function simple_diff_preview(string $old, string $new, int $context = 2): string {","  if ($old === $new) return \"No changes.\\n\";","  $a = explode(\"\\n\", $old);","  $b = explode(\"\\n\", $new);","  $out = [];","  $max = max(count($a), count($b));","  $changes = 0;","  for ($i=0, $ai=0, $bi=0; $i<$max; $i++, $ai++, $bi++) {","    $al = $a[$ai] ?? null;","    $bl = $b[$bi] ?? null;","    if ($al === $bl) continue;","    $changes++;","    // show small window","    $start = max(0, $ai - $context);","    $end   = min(count($a), $ai + $context + 1);","    $out[] = \"@@ -\".($ai+1).\" @@\";","    for ($j=$start; $j<$end; $j++) {","      $out[] = \"\u2212 \" . ($a[$j] ?? '');","    }","    $start = max(0, $bi - $context);","    $end   = min(count($b), $bi + $context + 1);","    for ($j=$start; $j<$end; $j++) {","      $out[] = \"+ \" . ($b[$j] ?? '');","    }","    if ($changes > 20) { $out[] = \"... (truncated)\"; break; }","  }","  return implode(\"\\n\", $out) . \"\\n\";","}","","// ---------- file operations ----------","function backup_file(string $path): string {","  ensure_inside($path, BASE_DIR);","  $rel = ltrim(str_replace(realpath(BASE_DIR),'', realpath($path) ?: $path), '/\\\\');","  $stamp = date('Ymd_His');","  $dir = BACKUP_DIR . '/' . dirname($rel);","  @mkdir($dir, 0775, true);","  $dest = BACKUP_DIR . '/' . $rel . '.' . $stamp . '.bak';","  @mkdir(dirname($dest), 0775, true);","  if (!copy($path, $dest)) throw new RuntimeException(\"Backup failed: $path\");","  return $dest;","}","","// ---------- SQL runner ----------","function run_sql_block(PDO $pdo, string $sqlRaw): int {","  if (trim($sqlRaw) === '') return 0;","  require_permission('dev.sql.run');","","  // Split on ; end of line, tolerate whitespace","  $stmts = array_filter(array_map('trim', preg_split('~;\\s*\\n~', $sqlRaw) ?: []));","  if (!$stmts) return 0;","","  $pdo->beginTransaction();","  try {","    $count = 0;","    foreach ($stmts as $s) {","      if ($s === '') continue;","      $pdo->exec($s);","      $count++;","    }","    $pdo->commit();","    return $count;","  } catch (Throwable $e) {","    $pdo->rollBack();","    throw $e;","  }","}","","// ---------- controller ----------","$tab   = $_GET['tab'] ?? 'run';","$action = $_POST['action'] ?? '';","$rawBlock = (string)($_POST['block'] ?? '');","$dryResult = [];","$execResult = [];","$restoreMsg = null;","","// Handle Restore","if ($tab === 'restore' && $action === 'restore') {","  require_csrf_local();","  $bfile = (string)($_POST['backup_file'] ?? '');","  if ($bfile === '' || !is_file($bfile)) {","    set_flash('danger', 'Backup file not found.');","  } else {","    // Map backup path back to live path","    $live = str_replace(BACKUP_DIR, BASE_DIR, preg_replace('~\\.\\d{8}_\\d{6}\\.bak$~', '', $bfile));","    if (!is_allowed_path($live)) {","      set_flash('danger', 'Restore target outside allowed trees.');","    } else {","      ensure_inside($live, BASE_DIR);","      @mkdir(dirname($live), 0775, true);","      if (!copy($bfile, $live)) {","        set_flash('danger', 'Restore failed.');","      } else {","        audit_log(db(), 'smart_patch', 'restore', null, ['src'=>$bfile, 'dst'=>$live]);","        set_flash('success', 'Restored: ' . e($live));","      }","    }","  }","  header('Location: ?tab=restore'); exit;","}","","// Handle Dry-run / Execute","if (in_array($action, ['dryrun','execute'], true)) {","  require_csrf_local();","","  $parsed = parse_block($rawBlock);","  $title  = $parsed['title'] ?: 'Untitled Patch';","  $regex  = (bool)$parsed['regex'];","  $globs  = $parsed['globs'];","  $search = $parsed['search'];","  $replace= $parsed['replace'];","  $sqlRaw = $parsed['sql'];","","  if (!$globs) set_flash('danger', 'FILE_GLOB is required.');","  if ($search === '' && $sqlRaw === '') set_flash('danger', 'Nothing to do. Provide SEARCH/REPLACE and/or SQL.');","  if (!empty($_SESSION['flash'])) { header('Location: ?tab=run'); exit; }","","  // Expand & filter files","  $files = [];","  foreach ($globs as $g) {","    $matches = glob(BASE_DIR . '/' . ltrim($g, '/'), GLOB_NOSORT) ?: [];","    foreach ($matches as $m) {","      if (is_file($m) && is_allowed_path($m)) $files[] = $m;","    }","  }","  $files = array_values(array_unique($files));","","  $totalChanges = 0;","  $previews = [];","","  foreach ($files as $path) {","    $old = file_get_contents($path);","    if ($old === false) { $previews[] = ['path'=>$path, 'error'=>'Read failed']; continue; }","","    if ($search !== '') {","      if ($regex) {","        $count = 0;","        // DOTALL + UTF8 + ungreedy safe default","        $new = preg_replace('~'.$search.'~us', $replace, $old, -1, $count);","      } else {","        $count = substr_count($old, $search);","        $new = ($count > 0) ? str_replace($search, $replace, $old) : $old;","      }","    } else {","      $count = 0;","      $new = $old;","    }","","    if ($count > 0) {","      $totalChanges += $count;","      $diff = simple_diff_preview($old, $new);","      $previews[] = ['path'=>$path, 'count'=>$count, 'diff'=>$diff, 'new'=>$new];","    } else {","      $previews[] = ['path'=>$path, 'count'=>0];","    }","  }","","  if ($action === 'dryrun') {","    $dryResult = [","      'title' => $title,","      'regex' => $regex,","      'files' => $previews,","      'total_changes' => $totalChanges,","      'sql_present' => trim($sqlRaw) !== '',","    ];","  } else {","    // execute: write files with backups + run SQL","    $pdo = db();","    ensure_patch_log($pdo);","","    $changedFiles = 0;","    $written = [];","    foreach ($previews as $p) {","      if (($p['count'] ?? 0) > 0) {","        $path = $p['path'];","        ensure_inside($path, BASE_DIR);","        // backup","        $bak = backup_file($path);","        // write atomically","        $tmp = tempnam(dirname($path), 'sbr_');","        file_put_contents($tmp, $p['new']);","        @chmod($tmp, 0664);","        if (!rename($tmp, $path)) { @unlink($tmp); throw new RuntimeException(\"Write failed: $path\"); }","        $written[] = ['path'=>$path, 'backup'=>$bak, 'count'=>$p['count']];","        $changedFiles++;","      }","    }","","    $sqlRan = 0;","    if (trim($sqlRaw) !== '') {","      // May throw if no permission","      $sqlRan = run_sql_block($pdo, $sqlRaw);","    }","","    // Log","    $user = current_user();","    $st = $pdo->prepare(\"INSERT INTO `_patch_log`","      (`run_at`,`user_id`,`user_name`,`title`,`files_changed`,`sql_executed`,`notes`)","      VALUES (NOW(), :uid, :uname, :title, :fc, :sx, :notes)\");","    $st->execute([","      ':uid'   => (int)($user['id'] ?? 0),","      ':uname' => (string)($user['name'] ?? ''),","      ':title' => $title,","      ':fc'    => $changedFiles,","      ':sx'    => $sqlRan > 0 ? 1 : 0,","      ':notes' => $changedFiles . ' files; SQL stmts: ' . $sqlRan,","    ]);","","    // Optional global audit","    try { audit_log($pdo, 'smart_patch', 'run', (int)$pdo->lastInsertId(), ['title'=>$title,'files'=>$changedFiles,'sql'=>$sqlRan]); } catch (Throwable $e) {}","","    set_flash('success', \"Executed: {$changedFiles} file(s) updated; SQL statements: {$sqlRan}\");","    $execResult = ['written'=>$written, 'sql'=>$sqlRan];","  }","}","","// ---------- restore list ----------","$backupList = [];","if ($tab === 'restore') {","  $it = new RecursiveIteratorIterator(","    new RecursiveDirectoryIterator(BACKUP_DIR, FilesystemIterator::SKIP_DOTS),","    RecursiveIteratorIterator::SELF_FIRST","  );","  foreach ($it as $f) {","    if ($f->isFile() && str_ends_with($f->getFilename(), '.bak')) {","      $backupList[] = $f->getPathname();","    }","  }","  rsort($backupList);","}","","// ---------- view ----------","?>","<!doctype html>","<html lang=\"en\">","<head>","  <meta charset=\"utf-8\">","  <title><?= e(APP_NAME) ?></title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","  <style>","    body{padding:20px}","    .mono{font-family:ui-monospace,Menlo,Consolas,monospace;font-size:13px}","    .diff{white-space:pre-wrap}","    .path{font-family:ui-monospace,Menlo,Consolas,monospace}","  </style>","</head>","<body>","<div class=\"container-lg\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <h1 class=\"h4 mb-0\"><?= e(APP_NAME) ?></h1>","    <div class=\"btn-group\">","      <a class=\"btn btn-outline-secondary <?= $tab==='run'?'active':'' ?>\" href=\"?tab=run\">Run</a>","      <a class=\"btn btn-outline-secondary <?= $tab==='restore'?'active':'' ?>\" href=\"?tab=restore\">Restore</a>","    </div>","  </div>","","  <?php render_flash(); ?>","","  <?php if ($tab === 'run'): ?>","    <form method=\"post\" class=\"mb-3\">","      <?= csrf_field_local() ?>","      <label class=\"form-label\">Instruction Block</label>","      <textarea name=\"block\" class=\"form-control mono\" rows=\"18\" placeholder=\"TITLE: My Patch","DEFAULTS: REGEX: no","FILE_GLOB: public_html/*/*_list.php","SEARCH: <<<",":q",">>>","REPLACE: <<<",":q1",">>>","SQL: <<<","-- optional","-- UPDATE table SET ...",";",">>>\"><?= e($rawBlock) ?></textarea>","      <div class=\"mt-3 d-flex gap-2\">","        <button class=\"btn btn-outline-primary\" name=\"action\" value=\"dryrun\">Dry-run</button>","        <button class=\"btn btn-primary\" name=\"action\" value=\"execute\"","          onclick=\"return confirm('Execute changes? Backups will be created automatically.')\">Execute</button>","      </div>","    </form>","","    <?php if ($dryResult): ?>","      <div class=\"card mb-3\">","        <div class=\"card-header\">Dry-run Summary</div>","        <div class=\"card-body\">","          <div><strong>Title:</strong> <?= e($dryResult['title']) ?></div>","          <div><strong>Regex Mode:</strong> <?= $dryResult['regex'] ? 'Yes' : 'No' ?></div>","          <div><strong>Total replacements:</strong> <?= (int)$dryResult['total_changes'] ?></div>","          <div><strong>SQL present:</strong> <?= $dryResult['sql_present'] ? 'Yes' : 'No' ?></div>","        </div>","      </div>","","      <?php foreach ($dryResult['files'] as $f): ?>","        <div class=\"card mb-3\">","          <div class=\"card-header\">","            <span class=\"path\"><?= e(str_replace(BASE_DIR.'/','', $f['path'] ?? '')) ?></span>","            <?php if (($f['count'] ?? 0) > 0): ?>","              <span class=\"badge bg-success ms-2\"><?= (int)$f['count'] ?> change(s)</span>","            <?php else: ?>","              <span class=\"badge bg-secondary ms-2\">no changes</span>","            <?php endif; ?>","          </div>","          <?php if (!empty($f['error'])): ?>","            <div class=\"card-body text-danger\"><?= e($f['error']) ?></div>","          <?php elseif (($f['count'] ?? 0) > 0): ?>","            <div class=\"card-body mono diff\"><?= e($f['diff']) ?></div>","          <?php endif; ?>","        </div>","      <?php endforeach; ?>","    <?php endif; ?>","","    <?php if ($execResult): ?>","      <div class=\"card mb-3\">","        <div class=\"card-header\">Execution Result</div>","        <div class=\"card-body\">","          <div><strong>Files updated:</strong> <?= count($execResult['written'] ?? []) ?></div>","          <div><strong>SQL statements executed:</strong> <?= (int)($execResult['sql'] ?? 0) ?></div>","        </div>","        <?php if (!empty($execResult['written'])): ?>","          <ul class=\"list-group list-group-flush\">","            <?php foreach ($execResult['written'] as $w): ?>","              <li class=\"list-group-item\">","                <div class=\"small text-muted\">Backup: <?= e(str_replace(BASE_DIR.'/','', $w['backup'])) ?></div>","                <div class=\"path\"><?= e(str_replace(BASE_DIR.'/','', $w['path'])) ?></div>","                <span class=\"badge bg-success\"><?= (int)$w['count'] ?> change(s)</span>","              </li>","            <?php endforeach; ?>","          </ul>","        <?php endif; ?>","      </div>","    <?php endif; ?>","","  <?php elseif ($tab === 'restore'): ?>","    <div class=\"card\">","      <div class=\"card-header\">Backups</div>","      <div class=\"card-body\">","        <?php if (!$backupList): ?>","          <div class=\"text-muted\">No backups found in <code><?= e(str_replace(BASE_DIR.'/','', BACKUP_DIR)) ?></code>.</div>","        <?php else: ?>","          <form method=\"post\" class=\"row g-2\">","            <?= csrf_field_local() ?>","            <input type=\"hidden\" name=\"action\" value=\"restore\">","            <div class=\"col-12\">","              <label class=\"form-label\">Choose Backup File</label>","              <select name=\"backup_file\" class=\"form-select mono\" size=\"12\">","                <?php foreach ($backupList as $f): ?>","                  <option value=\"<?= e($f) ?>\"><?= e(str_replace(BASE_DIR.'/','', $f)) ?></option>","                <?php endforeach; ?>","              </select>","              <div class=\"form-text\">Latest first. Selecting a backup restores it to its original live path.</div>","            </div>","            <div class=\"col-12\">","              <button class=\"btn btn-warning\" onclick=\"return confirm('Restore selected backup to live path?')\">Restore Selected</button>","            </div>","          </form>","        <?php endif; ?>","      </div>","    </div>","  <?php endif; ?>","","</div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/tools/migrations_runner.php": ["<?php","/**"," * PATH: /public_html/tools/migrations_runner.php"," * PHP 8.4 + Bootstrap 5"," *"," * - Uses central CSRF helpers from /includes/csrf.php"," * - Standard includes order: auth.php, db.php, rbac.php, csrf.php"," * - Requires permission: core.migrations.run"," * - Applies /public_html/migrations/*.sql in order; tracks in `_migrations`"," */","","declare(strict_types=1);","if (session_status() === PHP_SESSION_NONE) session_start();","date_default_timezone_set('Asia/Kolkata');","","// escape helper (guard)","if (!function_exists('h')) {","  function h(string $v): string { return htmlspecialchars($v, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8'); }","}","","$errors = []; $notice = null; $log = []; $files = [];","","try {","  require_once __DIR__ . '/../includes/auth.php';","  require_once __DIR__ . '/../includes/db.php';","  require_once __DIR__ . '/../includes/rbac.php';","  require_once __DIR__ . '/../includes/csrf.php'; // \ud83d\udd25 reuse central CSRF","","  require_login();","  require_permission('core.migrations.run');","","  $pdo = db();","  $pdo->exec(\"CREATE TABLE IF NOT EXISTS `_migrations` (","      `id` int unsigned NOT NULL AUTO_INCREMENT,","      `filename` varchar(255) NOT NULL,","      `checksum` varchar(64) NOT NULL,","      `applied_at` datetime NOT NULL,","      PRIMARY KEY (`id`),","      UNIQUE KEY `filename` (`filename`)","  ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");","","  $dirPath = __DIR__ . '/../migrations';","  if (!is_dir($dirPath)) @mkdir($dirPath, 0775, true);","  $dir = realpath($dirPath);","  if (!$dir || !is_dir($dir)) throw new RuntimeException('Migrations folder not found at /public_html/migrations');","","  $files = array_values(array_filter(scandir($dir) ?: [], fn($f)=>preg_match('~\\.sql$~i', $f)));","  sort($files, SORT_STRING);","","  if (($_POST['action'] ?? '') === 'run') {","    require_csrf();","","    foreach ($files as $f) {","      $path = $dir . '/' . $f;","      $sql = file_get_contents($path);","      if ($sql === false) throw new RuntimeException('Failed to read ' . $f);","      $checksum = hash('sha256', $sql);","","      $st = $pdo->prepare(\"SELECT checksum FROM `_migrations` WHERE filename = ?\");","      $st->execute([$f]);","      $existing = $st->fetchColumn();","      if ($existing) {","        if ($existing !== $checksum) {","          $log[] = \"SKIP {$f} (already applied, checksum changed! manual review needed)\";","        } else {","          $log[] = \"SKIP {$f} (already applied)\";","        }","        continue;","      }","","      $pdo->beginTransaction();","      try {","        $pdo->exec($sql);","        $ins = $pdo->prepare(\"INSERT INTO `_migrations` (filename, checksum, applied_at) VALUES (?, ?, NOW())\");","        $ins->execute([$f, $checksum]);","        $pdo->commit();","        $log[] = \"APPLIED {$f}\";","      } catch (Throwable $e) {","        $pdo->rollBack();","        throw new RuntimeException(\"Failed on {$f}: \" . $e->getMessage());","      }","    }","    $notice = 'Migrations run complete.';","  }","} catch (Throwable $e) {","  $errors[] = $e->getMessage();","}","?>","<!doctype html>","<html lang=\"en\">","<head>","  <meta charset=\"utf-8\">","  <title>Migrations Runner</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","  <style>.mono{font-family:ui-monospace,Menlo,Consolas,monospace}</style>","</head>","<body class=\"p-3\">","<div class=\"container-lg\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <h1 class=\"h4 mb-0\">SQL Migrations Runner</h1>","    <span class=\"badge bg-secondary\">PHP 8.4</span>","  </div>","","  <?php if ($notice): ?><div class=\"alert alert-success\"><?= h($notice) ?></div><?php endif; ?>","  <?php if ($errors): ?>","    <div class=\"alert alert-danger\"><ul class=\"mb-0\"><?php foreach ($errors as $er) echo '<li>'.h($er).'</li>'; ?></ul></div>","  <?php endif; ?>","","  <div class=\"card mb-3\">","    <div class=\"card-body\">","      <p>Looks for <code>/public_html/migrations/*.sql</code> and applies them in order, tracking progress in <code>_migrations</code>.</p>","      <form method=\"post\">","        <input type=\"hidden\" name=\"csrf_token\" value=\"<?= h(csrf_token()) ?>\">","        <button class=\"btn btn-primary\" name=\"action\" value=\"run\">Run Migrations</button>","      </form>","    </div>","  </div>","","  <h2 class=\"h6\">Detected files</h2>","  <?php if (!empty($files)): ?>","    <ul class=\"mono\"><?php foreach ($files as $f) echo '<li>'.h($f).'</li>'; ?></ul>","  <?php else: ?>","    <div class=\"text-muted\">No .sql files found. Create the folder <code>/public_html/migrations</code> and add scripts.</div>","  <?php endif; ?>","","  <?php if (!empty($log)): ?>","    <hr class=\"my-4\">","    <h2 class=\"h6\">Run Log</h2>","    <pre class=\"bg-light p-3 mono\" style=\"white-space:pre-wrap;\"><?= h(implode(\"\\n\", $log)) ?></pre>","  <?php endif; ?>","</div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/tools/workflow_configurator.php": ["<?php","/**"," * PATH: /public_html/tools/workflow_configurator.php"," * Workflow Configurator (PHP 8.4 + Bootstrap 5)"," * - Manage workflows and ordered approval steps per entity"," * - Auto-creates tables if missing"," * Security: requires workflow.manage + central CSRF"," */","","declare(strict_types=1);","if (session_status() === PHP_SESSION_NONE) session_start();","date_default_timezone_set('Asia/Kolkata');","","// Safe esc that tolerates null/ints","if (!function_exists('h')) {","  function h(string|int|float|null $v): string {","    return htmlspecialchars((string)$v, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8');","  }","}","","$errors = []; $notice = null; $pdo = null;","","try {","  require_once __DIR__ . '/../includes/auth.php';","  require_once __DIR__ . '/../includes/db.php';","  require_once __DIR__ . '/../includes/rbac.php';","  require_once __DIR__ . '/../includes/csrf.php'; // central CSRF","","  require_login();","  require_permission('workflow.manage');","","  $pdo = db();","","  // schema (idempotent)","  $pdo->exec(\"","    CREATE TABLE IF NOT EXISTS workflows (","      id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,","      entity VARCHAR(100) NOT NULL,","      name VARCHAR(150) NOT NULL,","      is_active TINYINT(1) NOT NULL DEFAULT 1,","      UNIQUE KEY (entity, name)","    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;","  \");","  $pdo->exec(\"","    CREATE TABLE IF NOT EXISTS workflow_steps (","      id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,","      workflow_id INT UNSIGNED NOT NULL,","      step_order INT UNSIGNED NOT NULL,","      role_code VARCHAR(100) NOT NULL,","      min_approvers INT UNSIGNED NOT NULL DEFAULT 1,","      CONSTRAINT fk_wf_steps_wf FOREIGN KEY (workflow_id) REFERENCES workflows(id) ON DELETE CASCADE,","      UNIQUE KEY (workflow_id, step_order)","    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;","  \");","} catch (Throwable $e) {","  $errors[] = \"Bootstrap failed: \" . $e->getMessage();","}","","// ---- CSRF compatibility wrapper ----","/**"," * Some stacks define csrf_token() only. If require_csrf() doesn't exist,"," * we validate against the POSTed token manually."," */","function wf_require_csrf(): void {","  if (function_exists('require_csrf')) {","    require_csrf();","    return;","  }","  $posted = $_POST['csrf_token'] ?? '';","  // Prefer central token if available","  $sessionToken = function_exists('csrf_token') ? csrf_token() : ($_SESSION['csrf_token'] ?? '');","  if (!is_string($posted) || !is_string($sessionToken) || $posted === '' || $sessionToken === '' || !hash_equals((string)$sessionToken, (string)$posted)) {","    http_response_code(400);","    exit('CSRF token mismatch.');","  }","}","","// ---- Controller ----","$action = $_POST['action'] ?? '';","$csrf = function_exists('csrf_token') ? csrf_token() : ($_SESSION['csrf_token'] ?? ($_SESSION['csrf_token'] = bin2hex(random_bytes(32))));","","try {","  if ($action !== '') {","    wf_require_csrf();","  }","","  if ($action === 'create_wf') {","    $entity = trim((string)($_POST['entity'] ?? ''));","    $name   = trim((string)($_POST['name'] ?? ''));","    if ($entity === '' || $name === '') throw new RuntimeException('Entity and Name are required.');","    $st = $pdo->prepare(\"INSERT INTO workflows (entity, name, is_active) VALUES (?, ?, 1)\");","    $st->execute([$entity, $name]);","    $notice = 'Workflow created.';","  }","","  if ($action === 'toggle') {","    $id = (int)($_POST['id'] ?? 0);","    $pdo->prepare(\"UPDATE workflows SET is_active = 1 - is_active WHERE id = ?\")->execute([$id]);","  }","","  if ($action === 'add_step') {","    $wf   = (int)($_POST['workflow_id'] ?? 0);","    $role = trim((string)($_POST['role_code'] ?? ''));","    $min  = (int)($_POST['min_approvers'] ?? 1);","    if ($wf <= 0 || $role === '') throw new RuntimeException('Workflow and Role are required.');","    $next = (int)$pdo->query(\"SELECT COALESCE(MAX(step_order),0)+1 FROM workflow_steps WHERE workflow_id={$wf}\")->fetchColumn();","    $st = $pdo->prepare(\"INSERT INTO workflow_steps (workflow_id, step_order, role_code, min_approvers) VALUES (?, ?, ?, ?)\");","    $st->execute([$wf, $next, $role, max(1, $min)]);","  }","","  if ($action === 'del_step') {","    $sid = (int)($_POST['step_id'] ?? 0);","    $pdo->prepare(\"DELETE FROM workflow_steps WHERE id = ?\")->execute([$sid]);","  }","","  if ($action === 'reorder') {","    $sid = (int)($_POST['step_id'] ?? 0);","    $dir = $_POST['dir'] ?? 'up';","    $st = $pdo->prepare(\"SELECT workflow_id, step_order FROM workflow_steps WHERE id = ?\");","    $st->execute([$sid]);","    $row = $st->fetch(PDO::FETCH_ASSOC);","    if ($row) {","      $wf  = (int)$row['workflow_id'];","      $ord = (int)$row['step_order'];","      $swapOrd = $dir === 'up' ? $ord - 1 : $ord + 1;","      if ($swapOrd >= 1) {","        $st2 = $pdo->prepare(\"SELECT id FROM workflow_steps WHERE workflow_id = ? AND step_order = ?\");","        $st2->execute([$wf, $swapOrd]);","        $swap = $st2->fetch(PDO::FETCH_ASSOC);","        if ($swap) {","          $pdo->beginTransaction();","          try {","            $pdo->prepare(\"UPDATE workflow_steps SET step_order = 999999 WHERE id = ?\")->execute([$sid]);","            $pdo->prepare(\"UPDATE workflow_steps SET step_order = ? WHERE id = ?\")->execute([$ord, (int)$swap['id']]);","            $pdo->prepare(\"UPDATE workflow_steps SET step_order = ? WHERE id = ?\")->execute([$swapOrd, $sid]);","            $pdo->commit();","          } catch (Throwable $e) {","            $pdo->rollBack();","            throw $e;","          }","        }","      }","    }","  }","} catch (Throwable $e) {","  $errors[] = $e->getMessage();","}","","// ---- Query for view ----","$workflows = [];","$wfId = (int)($_GET['wf'] ?? ($_POST['workflow_id'] ?? 0));","$steps = [];","try {","  if ($pdo instanceof PDO) {","    $workflows = $pdo->query(\"SELECT * FROM workflows ORDER BY entity, name\")->fetchAll(PDO::FETCH_ASSOC) ?: [];","    if ($wfId > 0) {","      $st = $pdo->prepare(\"SELECT * FROM workflow_steps WHERE workflow_id = ? ORDER BY step_order\");","      $st->execute([$wfId]);","      $steps = $st->fetchAll(PDO::FETCH_ASSOC) ?: [];","    }","  }","} catch (Throwable $e) {","  $errors[] = $e->getMessage();","}","?>","<!doctype html>","<html lang=\"en\">","<head>","  <meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <title>Workflow Configurator</title>","  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","</head>","<body class=\"p-3\">","<div class=\"container-lg\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <h1 class=\"h4 mb-0\">Workflow Configurator</h1>","    <span class=\"badge bg-secondary\">PHP 8.4</span>","  </div>","","  <?php if ($notice): ?><div class=\"alert alert-success\"><?= h($notice) ?></div><?php endif; ?>","  <?php if ($errors): ?>","    <div class=\"alert alert-danger\"><ul class=\"mb-0\"><?php foreach ($errors as $er) echo '<li>'.h($er).'</li>'; ?></ul></div>","  <?php endif; ?>","","  <div class=\"card mb-3\">","    <div class=\"card-header\"><strong>Create Workflow</strong></div>","    <div class=\"card-body\">","      <form method=\"post\" class=\"row g-2\">","        <input type=\"hidden\" name=\"csrf_token\" value=\"<?= h($csrf) ?>\">","        <div class=\"col-md-4\"><input class=\"form-control\" name=\"entity\" placeholder=\"entity (e.g. indent, inquiry)\"></div>","        <div class=\"col-md-5\"><input class=\"form-control\" name=\"name\" placeholder=\"name (e.g. Standard Approval)\"></div>","        <div class=\"col-md-3\"><button class=\"btn btn-primary\" name=\"action\" value=\"create_wf\">Create</button></div>","      </form>","    </div>","  </div>","","  <div class=\"row g-3\">","    <div class=\"col-lg-5\">","      <div class=\"card\">","        <div class=\"card-header\"><strong>Workflows</strong></div>","        <div class=\"list-group list-group-flush\">","          <?php foreach ($workflows as $w): ?>","            <a class=\"list-group-item list-group-item-action <?= $wfId === (int)$w['id'] ? 'active' : '' ?>\" href=\"?wf=<?= (int)$w['id'] ?>\">","              <div class=\"d-flex justify-content-between\">","                <div><strong><?= h($w['entity'] ?? '') ?></strong> \u2014 <?= h($w['name'] ?? '') ?></div>","                <form method=\"post\" class=\"ms-2\">","                  <input type=\"hidden\" name=\"csrf_token\" value=\"<?= h($csrf) ?>\">","                  <input type=\"hidden\" name=\"id\" value=\"<?= (int)$w['id'] ?>\">","                  <button class=\"btn btn-sm <?= ($w['is_active'] ?? 0) ? 'btn-success' : 'btn-outline-secondary' ?>\" name=\"action\" value=\"toggle\">","                    <?= ($w['is_active'] ?? 0) ? 'Active' : 'Inactive' ?>","                  </button>","                </form>","              </div>","            </a>","          <?php endforeach; ?>","          <?php if (!$workflows): ?><div class=\"list-group-item text-muted\">No workflows yet.</div><?php endif; ?>","        </div>","      </div>","    </div>","","    <div class=\"col-lg-7\">","      <div class=\"card\">","        <div class=\"card-header\"><strong>Steps</strong></div>","        <div class=\"card-body\">","          <?php if ($wfId > 0): ?>","            <form method=\"post\" class=\"row g-2 mb-3\">","              <input type=\"hidden\" name=\"csrf_token\" value=\"<?= h($csrf) ?>\">","              <input type=\"hidden\" name=\"workflow_id\" value=\"<?= (int)$wfId ?>\">","              <div class=\"col-md-6\"><input class=\"form-control\" name=\"role_code\" placeholder=\"role code (e.g. HOD, PURCHASE, DIR)\"></div>","              <div class=\"col-md-3\"><input type=\"number\" class=\"form-control\" name=\"min_approvers\" value=\"1\" min=\"1\"></div>","              <div class=\"col-md-3\"><button class=\"btn btn-primary\" name=\"action\" value=\"add_step\">Add Step</button></div>","            </form>","","            <div class=\"table-responsive\">","              <table class=\"table table-sm table-striped align-middle\">","                <thead><tr><th>#</th><th>Role</th><th>Min Approvers</th><th>Actions</th></tr></thead>","                <tbody>","                  <?php foreach ($steps as $s): ?>","                    <tr>","                      <td><?= (int)($s['step_order'] ?? 0) ?></td>","                      <td><?= h($s['role_code'] ?? '') ?></td>","                      <td><?= (int)($s['min_approvers'] ?? 1) ?></td>","                      <td class=\"d-flex gap-1\">","                        <form method=\"post\">","                          <input type=\"hidden\" name=\"csrf_token\" value=\"<?= h($csrf) ?>\">","                          <input type=\"hidden\" name=\"step_id\" value=\"<?= (int)$s['id'] ?>\">","                          <input type=\"hidden\" name=\"dir\" value=\"up\">","                          <button class=\"btn btn-outline-secondary btn-sm\" name=\"action\" value=\"reorder\">\u2191</button>","                        </form>","                        <form method=\"post\">","                          <input type=\"hidden\" name=\"csrf_token\" value=\"<?= h($csrf) ?>\">","                          <input type=\"hidden\" name=\"step_id\" value=\"<?= (int)$s['id'] ?>\">","                          <input type=\"hidden\" name=\"dir\" value=\"down\">","                          <button class=\"btn btn-outline-secondary btn-sm\" name=\"action\" value=\"reorder\">\u2193</button>","                        </form>","                        <form method=\"post\" onsubmit=\"return confirm('Delete this step?')\">","                          <input type=\"hidden\" name=\"csrf_token\" value=\"<?= h($csrf) ?>\">","                          <input type=\"hidden\" name=\"step_id\" value=\"<?= (int)$s['id'] ?>\">","                          <button class=\"btn btn-outline-danger btn-sm\" name=\"action\" value=\"del_step\">Delete</button>","                        </form>","                      </td>","                    </tr>","                  <?php endforeach; ?>","                  <?php if (!$steps): ?><tr><td colspan=\"4\" class=\"text-muted\">No steps yet.</td></tr><?php endif; ?>","                </tbody>","              </table>","            </div>","          <?php else: ?>","            <div class=\"text-muted\">Select a workflow from the left to manage steps.</div>","          <?php endif; ?>","        </div>","      </div>","    </div>","  </div>","</div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/tools/verify_config.php": ["<?php","/** PATH: /public_html/tools/_verify_config.php */","header('Content-Type: text/plain; charset=utf-8');","","$cfg = __DIR__ .'/../config.php'; ","if (!is_file($cfg)) { echo \"includes/config.php MISSING\\n\"; exit; }","","$txt = file_get_contents($cfg);","echo \"has_short_open_tag? \", (strpos($txt, '<?php') === false && strpos($txt, '<?') !== false ? \"YES (BAD)\\n\" : \"no\\n\");","","require_once $cfg;","","$need = ['DB_HOST','DB_NAME','DB_USER','DB_PASS'];","foreach ($need as $c) {","  echo $c, ': ', defined($c) ? 'OK' : 'MISSING', \"\\n\";","}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/tools/seed_permissions.php": ["<?php","/**"," * PATH: /public_html/tools/seed_permissions.php"," * MODULE: rbac"," * PURPOSE: Seed baseline permissions, Admin role, and admin user"," * REQUIRES: /includes/db.php"," * RUN: open once in browser or CLI; safe to re-run"," */","","declare(strict_types=1);","","// --- Make this page 100% standalone, no layout/JS ---","if (php_sapi_name() !== 'cli') {","    header('Content-Type: text/plain; charset=utf-8');","    header('X-Content-Type-Options: nosniff');","}","@ini_set('display_errors', '1');","@ini_set('display_startup_errors', '1');","error_reporting(E_ALL);","while (ob_get_level()) { @ob_end_clean(); } // kill any buffering early","","// require ONLY db(), nothing from UI","require_once __DIR__ . '/../includes/db.php';","","echo \"Seeding permissions...\\n\";","","try {","    $pdo = db();","    $pdo->beginTransaction();","","    // --- define permissions (code => module); name mirrors code ---","    $perms = [","        // identity","        'users.read'         => 'users',","        'users.create'       => 'users',","        'users.update'       => 'users',","        'users.delete'       => 'users',","","        'roles.read'         => 'roles',","        'roles.update'       => 'roles',","","        'permissions.read'   => 'permissions',","        'permissions.update' => 'permissions',","","        // org","        'departments.read'   => 'departments',","        'departments.create' => 'departments',","        'departments.update' => 'departments',","        'departments.delete' => 'departments',","","        'locations.read'     => 'locations',","        'locations.create'   => 'locations',","        'locations.update'   => 'locations',","        'locations.delete'   => 'locations',","","        // foundations you already have","        'uom.manage'                 => 'uom',","        'material.taxonomy.manage'   => 'material',","        'items.read'                 => 'items',","        'items.create'               => 'items',","        'items.update'               => 'items',","        'items.delete'               => 'items',","        'parties.read'               => 'parties',","        'parties.create'             => 'parties',","        'parties.update'             => 'parties',","        'parties.delete'             => 'parties',","    ];","","    // Ensure columns exist (patch older schemas): permissions.key/name -> code/module/name","    // Safe on MariaDB: ignore errors if already applied.","    try { $pdo->exec(\"ALTER TABLE permissions CHANGE `key` `code` VARCHAR(150) NOT NULL\"); } catch (Throwable $e) {}","    try { $pdo->exec(\"ALTER TABLE permissions ADD COLUMN `module` VARCHAR(80) NOT NULL DEFAULT 'misc' AFTER `code`\"); } catch (Throwable $e) {}","    try { $pdo->exec(\"ALTER TABLE permissions MODIFY `name` VARCHAR(191) NOT NULL DEFAULT ''\"); } catch (Throwable $e) {}","    try { $pdo->exec(\"CREATE UNIQUE INDEX uq_permissions_code ON permissions(code)\"); } catch (Throwable $e) {}","    try { $pdo->exec(\"CREATE INDEX idx_perm_module ON permissions(module)\"); } catch (Throwable $e) {}","","    // Insert permissions idempotently","    $ins = $pdo->prepare(\"INSERT IGNORE INTO permissions(code, module, name) VALUES(?,?,?)\");","    $added = 0;","    foreach ($perms as $code => $module) {","        $ins->execute([$code, $module, $code]);","        $added += (int)$ins->rowCount();","    }","    echo \"Permissions added: $added\\n\";","","    // Ensure Admin role","    $pdo->exec(\"INSERT IGNORE INTO roles(name, active) VALUES('Admin', 1)\");","    echo \"Admin role ensured.\\n\";","","    // Grant all perms to Admin","    $pdo->exec(\"","        INSERT IGNORE INTO role_permissions(role_id, permission_id)","        SELECT r.id, p.id","        FROM roles r","        JOIN permissions p","        WHERE r.name='Admin'","    \");","    echo \"Admin granted all permissions.\\n\";","","    // Ensure admin user + map to Admin","    $hash = password_hash('Admin@123', PASSWORD_DEFAULT); // change later","    $pdo->exec(\"","        INSERT IGNORE INTO users(username, name, email, password, status)","        VALUES('admin','System Admin','admin@example.com', \".$pdo->quote($hash).\", 'active')","    \");","    $pdo->exec(\"","        INSERT IGNORE INTO user_roles(user_id, role_id)","        SELECT u.id, r.id","        FROM users u, roles r","        WHERE u.username='admin' AND r.name='Admin'","    \");","    echo \"Admin user ensured (username: admin / default password: Admin@123).\\n\";","","    $pdo->commit();","    echo \"DONE.\\n\";","} catch (Throwable $e) {","    if (isset($pdo) && $pdo->inTransaction()) { $pdo->rollBack(); }","    http_response_code(500);","    echo \"ERROR: \".$e->getMessage().\"\\n\";","}","","// Stop here so no layout/JS is appended by accident.","exit;"],
"/home/u989675055/domains/emsinfra.co.in/public_html/tools/code_pattern_manager.php": ["<?php","/**"," * PATH: /public_html/tools/code_pattern_manager.php"," * Code Pattern Manager (PHP 8.4 + Bootstrap 5)"," *"," * - Define templates like {CAT}-{SUB}-{YYYY}-{SEQ4}"," * - Preview with variables (JSON), or Generate (increments stored counter)"," * - reset_scope: 'year' (default) or 'none'"," *"," * Security:"," * - Requires login + permission: codepatterns.manage"," * - Uses central CSRF: /includes/csrf.php"," */","","declare(strict_types=1);","if (session_status() === PHP_SESSION_NONE) session_start();","date_default_timezone_set('Asia/Kolkata');","","/** Safe escape: tolerate null/ints/floats */","if (!function_exists('h')) {","  function h(string|int|float|null $v): string {","    return htmlspecialchars((string)$v, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8');","  }","}","","$errors=[]; $notice=null; $preview=''; $pdo=null;","","try{","  require_once __DIR__ . '/../includes/auth.php';","  require_once __DIR__ . '/../includes/db.php';","  require_once __DIR__ . '/../includes/rbac.php';","  require_once __DIR__ . '/../includes/csrf.php';","","  require_login();","  require_permission('codepatterns.manage');","","  $pdo = db();","","  // Schema (idempotent, allows existing installs)","  $pdo->exec(\"","    CREATE TABLE IF NOT EXISTS code_patterns (","      pattern_key VARCHAR(100) PRIMARY KEY,","      template VARCHAR(255) NOT NULL,","      reset_scope ENUM('year','none') NOT NULL DEFAULT 'year'","    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;","  \");","  $pdo->exec(\"","    CREATE TABLE IF NOT EXISTS code_counters (","      id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,","      pattern_key VARCHAR(100) NOT NULL,","      scope_key VARCHAR(32) NOT NULL,","      seq_value INT UNSIGNED NOT NULL DEFAULT 0,","      UNIQUE KEY(pattern_key, scope_key),","      CONSTRAINT fk_cc_pat FOREIGN KEY(pattern_key) REFERENCES code_patterns(pattern_key) ON DELETE CASCADE","    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;","  \");","} catch(Throwable $e){","  $errors[]=\"Bootstrap failed: \".$e->getMessage();","}","","/** Resolve non-sequence tokens + custom vars */","function resolve_template(string $tpl, array $vars): string {","  $now = new DateTimeImmutable('now');","  $repl = [","    '{YYYY}' => $now->format('Y'),","    '{YY}'   => $now->format('y'),","    '{MM}'   => $now->format('m'),","    '{DD}'   => $now->format('d'),","  ];","  foreach ($vars as $k=>$v) {","    $repl['{'.strtoupper((string)$k).'}'] = strtoupper((string)$v);","  }","  return strtr($tpl, $repl); // leaves {SEQn} for later","}","function seq_pad(int $num, int $digits): string {","  return str_pad((string)$num, $digits, '0', STR_PAD_LEFT);","}","function scope_key(string $resetScope): string {","  return $resetScope === 'none' ? 'global' : (new DateTimeImmutable('now'))->format('Y');","}","","$action = $_POST['action'] ?? '';","$csrf = function_exists('csrf_token') ? csrf_token() : '';","","try {","  if ($action !== '') {","    if (function_exists('require_csrf')) require_csrf();","  }","","  if ($action === 'add') {","    $key  = trim((string)($_POST['pattern_key'] ?? ''));","    $tpl  = trim((string)($_POST['template'] ?? ''));","    $scopeSel = ($_POST['reset_scope'] ?? 'year');","    $scope = $scopeSel === 'none' ? 'none' : 'year';","    if ($key === '' || $tpl === '') throw new RuntimeException('Key and Template are required.');","    $st = $pdo->prepare(\"REPLACE INTO code_patterns(pattern_key, template, reset_scope) VALUES(?,?,?)\");","    $st->execute([$key, $tpl, $scope]);","    $notice = 'Pattern saved.';","  }","","  if ($action === 'preview') {","    $tpl  = trim((string)($_POST['template'] ?? ''));","    $varsJson = trim((string)($_POST['vars'] ?? '{}'));","    $vars = json_decode($varsJson, true);","    if (!is_array($vars)) $vars = [];","    $resolved = resolve_template($tpl, $vars);","    // Replace {SEQn} with 1 (no DB increment)","    $preview = preg_replace_callback('~\\{SEQ(\\d)\\}~', fn($m)=>seq_pad(1, (int)$m[1]), $resolved) ?? '';","  }","","  if ($action === 'generate') {","    $key  = trim((string)($_POST['pattern_key'] ?? ''));","    $varsJson = trim((string)($_POST['vars'] ?? '{}'));","    $vars = json_decode($varsJson, true);","    if (!is_array($vars)) $vars = [];","","    $st = $pdo->prepare(\"SELECT template, reset_scope FROM code_patterns WHERE pattern_key=?\");","    $st->execute([$key]);","    $pat = $st->fetch(PDO::FETCH_ASSOC);","    if (!$pat) throw new RuntimeException('Pattern not found for key: ' . $key);","","    $tpl   = (string)($pat['template'] ?? '');","    $reset = (string)($pat['reset_scope'] ?? 'year');","","    $resolved = resolve_template($tpl, $vars);","    $scope = scope_key($reset);","","    $pdo->beginTransaction();","    try {","      $st = $pdo->prepare(\"SELECT seq_value FROM code_counters WHERE pattern_key=? AND scope_key=? FOR UPDATE\");","      $st->execute([$key, $scope]);","      $cur = $st->fetch(PDO::FETCH_ASSOC);","      $seq = $cur ? (int)$cur['seq_value'] + 1 : 1;","","      // Fill {SEQn}","      $code = preg_replace_callback('~\\{SEQ(\\d)\\}~', fn($m)=>seq_pad($seq, (int)$m[1]), $resolved);","      if ($code === null) throw new RuntimeException('Failed to render code.');","","      if ($cur) {","        $u = $pdo->prepare(\"UPDATE code_counters SET seq_value=? WHERE pattern_key=? AND scope_key=?\");","        $u->execute([$seq, $key, $scope]);","      } else {","        $i = $pdo->prepare(\"INSERT INTO code_counters(pattern_key, scope_key, seq_value) VALUES(?,?,?)\");","        $i->execute([$key, $scope, $seq]);","      }","","      $pdo->commit();","      $preview = (string)$code;","      $notice = 'Generated successfully.';","    } catch (Throwable $e) {","      $pdo->rollBack();","      throw $e;","    }","  }","} catch (Throwable $e) {","  $errors[] = $e->getMessage();","}","","// Load patterns (safe even if none)","$patterns = [];","try {","  if ($pdo instanceof PDO) {","    $patterns = $pdo->query(\"SELECT pattern_key, template, reset_scope FROM code_patterns ORDER BY pattern_key\")","                    ->fetchAll(PDO::FETCH_ASSOC) ?: [];","  }","} catch (Throwable $e) {","  $errors[] = $e->getMessage();","}","?>","<!doctype html>","<html lang=\"en\">","<head>","  <meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <title>Code Pattern Manager</title>","  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","  <style>.mono{font-family:ui-monospace,Menlo,Consolas,monospace}</style>","</head>","<body class=\"p-3\">","<div class=\"container-lg\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <h1 class=\"h4 mb-0\">Code Pattern Manager</h1>","    <span class=\"badge bg-secondary\">PHP 8.4</span>","  </div>","","  <?php if ($notice): ?><div class=\"alert alert-success\"><?= h($notice) ?></div><?php endif; ?>","  <?php if ($errors): ?>","    <div class=\"alert alert-danger\"><ul class=\"mb-0\"><?php foreach ($errors as $er) echo '<li>'.h($er).'</li>'; ?></ul></div>","  <?php endif; ?>","","  <!-- Create / Update Pattern -->","  <div class=\"card mb-3\">","    <div class=\"card-header\"><strong>Create / Update Pattern</strong></div>","    <div class=\"card-body\">","      <form method=\"post\" class=\"row g-2\">","        <input type=\"hidden\" name=\"csrf_token\" value=\"<?= h($csrf) ?>\">","        <div class=\"col-md-3\">","          <label class=\"form-label\">Pattern Key</label>","          <input class=\"form-control\" name=\"pattern_key\" placeholder=\"e.g. IND, INQ, PO\">","        </div>","        <div class=\"col-md-6\">","          <label class=\"form-label\">Template</label>","          <input class=\"form-control mono\" name=\"template\" placeholder=\"{CAT}-{SUB}-{YYYY}-{SEQ4}\">","        </div>","        <div class=\"col-md-2\">","          <label class=\"form-label\">Reset Scope</label>","          <select name=\"reset_scope\" class=\"form-select\">","            <option value=\"year\">Yearly</option>","            <option value=\"none\">Never</option>","          </select>","        </div>","        <div class=\"col-md-1 d-flex align-items-end\">","          <button class=\"btn btn-primary w-100\" name=\"action\" value=\"add\">Save</button>","        </div>","      </form>","      <div class=\"form-text\">Tokens: {YYYY} {YY} {MM} {DD} {SEQn} (n=2..9) + custom vars like {CAT} {SUB} from JSON.</div>","    </div>","  </div>","","  <div class=\"row g-3\">","    <!-- Patterns list -->","    <div class=\"col-lg-6\">","      <div class=\"card\">","        <div class=\"card-header\"><strong>Patterns</strong></div>","        <div class=\"table-responsive\">","          <table class=\"table table-sm table-striped align-middle\">","            <thead><tr><th>Key</th><th>Template</th><th>Reset</th></tr></thead>","            <tbody>","              <?php foreach ($patterns as $p): ?>","                <tr>","                  <td class=\"mono\"><?= h($p['pattern_key'] ?? '') ?></td>","                  <td class=\"mono\"><?= h($p['template'] ?? '') ?></td>","                  <td><?= h($p['reset_scope'] ?? '') ?></td>","                </tr>","              <?php endforeach; ?>","              <?php if (!$patterns): ?>","                <tr><td colspan=\"3\" class=\"text-muted\">No patterns yet.</td></tr>","              <?php endif; ?>","            </tbody>","          </table>","        </div>","      </div>","    </div>","","    <!-- Preview / Generate -->","    <div class=\"col-lg-6\">","      <div class=\"card\">","        <div class=\"card-header\"><strong>Preview / Generate</strong></div>","        <div class=\"card-body\">","          <form method=\"post\" class=\"row g-2\">","            <input type=\"hidden\" name=\"csrf_token\" value=\"<?= h($csrf) ?>\">","            <div class=\"col-12\">","              <label class=\"form-label\">Variables (JSON)</label>","              <textarea class=\"form-control mono\" name=\"vars\" rows=\"4\" placeholder='{\"CAT\":\"IND\",\"SUB\":\"HQ\"}'>{\"CAT\":\"IND\",\"SUB\":\"HQ\"}</textarea>","            </div>","            <div class=\"col-12\">","              <label class=\"form-label\">Quick Preview (Template)</label>","              <input class=\"form-control mono\" name=\"template\" placeholder=\"{CAT}-{SUB}-{YYYY}-{SEQ4}\">","            </div>","            <div class=\"col-12 d-flex gap-2\">","              <button class=\"btn btn-outline-secondary\" name=\"action\" value=\"preview\">Preview Template</button>","            </div>","          </form>","          <hr>","          <form method=\"post\" class=\"row g-2\">","            <input type=\"hidden\" name=\"csrf_token\" value=\"<?= h($csrf) ?>\">","            <div class=\"col-6\">","              <label class=\"form-label\">Pattern Key</label>","              <input class=\"form-control\" name=\"pattern_key\" placeholder=\"e.g. IND\">","            </div>","            <div class=\"col-6\">","              <label class=\"form-label\">Variables (JSON)</label>","              <input class=\"form-control mono\" name=\"vars\" value='{\"CAT\":\"IND\",\"SUB\":\"HQ\"}'>","            </div>","            <div class=\"col-12\">","              <button class=\"btn btn-primary\" name=\"action\" value=\"generate\">Generate Next Code</button>","            </div>","          </form>","        </div>","        <?php if ($preview !== ''): ?>","          <div class=\"card-footer\">","            <div><strong>Result:</strong> <span class=\"mono\"><?= h($preview) ?></span></div>","          </div>","        <?php endif; ?>","      </div>","    </div>","  </div>","</div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/tools/post_probe.php": ["<?php","// PATH: /public_html/tools/_post_probe.php","declare(strict_types=1);","header('Content-Type: text/plain; charset=utf-8');","","if (session_status() === PHP_SESSION_NONE) session_start();","","// Load CSRF so token names match","require_once __DIR__ . '/../includes/csrf.php';","","echo \"[1] method=\" . ($_SERVER['REQUEST_METHOD'] ?? '') . \"\\n\";","echo \"[2] has_csrf_field=\" . (isset($_POST['csrf_token']) ? 'yes' : 'no') . \"\\n\";","echo \"[3] session_id=\" . session_id() . \"\\n\";","","// check CSRF (don\u2019t die silently)","try {","  verify_csrf_or_die();","  echo \"[4] csrf=OK\\n\";","} catch (Throwable $e) {","  echo \"[4X] csrf=FAIL (\" . $e->getMessage() . \")\\n\";","  exit;","}","","echo \"[5] username=\" . ($_POST['username'] ?? '') . \"\\n\";","echo \"[6] done\\n\";"],
"/home/u989675055/domains/emsinfra.co.in/public_html/tools/scaffold.php": ["<?php","/**"," * PATH: /public_html/tools/scaffold.php"," * PHP 8.4 + Bootstrap 5"," * CRUD Scaffolder for EMS Infra ERP"," *"," * - Includes: auth.php, db.php, rbac.php, csrf.php, helpers.php, numbering.php, audit.php"," * - Requires permission: dev.scaffold.run"," * - Generates /public_html/<slug>/{slug}_list.php, _form.php, _save.php"," * - Update: list pages build search with UNIQUE placeholders (:q1, :q2, \u2026) to avoid HY093."," */","","declare(strict_types=1);","if (session_status() === PHP_SESSION_NONE) session_start();","","const OUTPUT_BASE = __DIR__ . '/..';","date_default_timezone_set('Asia/Kolkata');","","// ---------- includes ----------","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/numbering.php';","require_once __DIR__ . '/../includes/audit.php';","","require_login();","require_permission('dev.scaffold.run');","","// ---------- helpers ----------","function e(string $v): string { return htmlspecialchars($v, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8'); }","","function read_columns(PDO $pdo, string $dbName, string $table): array {","  $sql = \"SELECT COLUMN_NAME, DATA_TYPE, COLUMN_TYPE, IS_NULLABLE, COLUMN_DEFAULT, COLUMN_KEY, EXTRA","          FROM INFORMATION_SCHEMA.COLUMNS","          WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ?","          ORDER BY ORDINAL_POSITION\";","  $st = $pdo->prepare($sql);","  $st->execute([$dbName, $table]);","  return $st->fetchAll(PDO::FETCH_ASSOC);","}","function detect_pk(array $cols): string {","  foreach ($cols as $c) if (strtoupper((string)$c['COLUMN_KEY']) === 'PRI') return (string)$c['COLUMN_NAME'];","  return 'id';","}","function is_system_col(string $c): bool {","  $c = strtolower($c);","  return in_array($c, ['id','created_at','updated_at','deleted_at'], true);","}","function has_soft_delete(array $cols): bool {","  foreach ($cols as $c) if (strtolower((string)$c['COLUMN_NAME']) === 'deleted_at') return true;","  return false;","}","function input_kind(array $col): string {","  $type = strtolower((string)$col['COLUMN_TYPE']);","  $data = strtolower((string)$col['DATA_TYPE']);","  if (str_starts_with($data, 'enum') || str_starts_with($type, 'enum(')) return 'enum';","  if ($data === 'tinyint' && preg_match('~tinyint\\(1\\)~i', $type)) return 'checkbox';","  if (preg_match('~(int|decimal|numeric|float|double)~', $data)) return 'number';","  if ($data === 'date') return 'date';","  if (in_array($data, ['datetime','timestamp'])) return 'datetime-local';","  if (in_array($data, ['text','mediumtext','longtext'])) return 'textarea';","  return 'text';","}","function enum_options(string $columnType): array {","  if (!preg_match(\"~^enum\\\\((.*)\\\\)$~i\", $columnType, $m)) return [];","  $parts = preg_split(\"~,(?=(?:[^']*'[^']*')*[^']*$)~\", $m[1]);","  $opts = [];","  foreach ($parts as $p) {","    $p = trim($p);","    if (str_starts_with($p, \"'\") && str_ends_with($p, \"'\")) $opts[] = stripcslashes(substr($p, 1, -1));","  }","  return $opts;","}","function ensure_inside(string $target, string $base): void {","  $realBase = realpath($base) ?: $base;","  $realT = realpath($target);","  if ($realT === false) $realT = $target;","  $realBase = rtrim(str_replace('\\\\','/',$realBase),'/') . '/';","  $realT = str_replace('\\\\','/',$realT);","  if (!str_starts_with($realT, $realBase)) throw new RuntimeException('Resolved path escapes output base.');","}","","// ---------- page state ----------","$errors = [];","$notice = null; $generated = [];","","$module_slug     = trim($_POST['module_slug'] ?? '');","$table_name      = trim($_POST['table_name'] ?? '');","$perm_base       = trim($_POST['perm_base'] ?? '');","$entity_title    = trim($_POST['entity_title'] ?? '');","$series_for_code = trim($_POST['series_for_code'] ?? ''); // optional auto-code series","$action          = $_POST['action'] ?? '';","","try {","  $pdo = db();","  $dbName = (string)$pdo->query('SELECT DATABASE()')->fetchColumn();","","  if ($action === 'generate') {","    verify_csrf_or_die();","    if ($module_slug === '' || $table_name === '' || $perm_base === '') {","      throw new RuntimeException('Module Slug, Table Name, and Permission Base are required.');","    }","    if ($entity_title === '') $entity_title = ucwords(str_replace(['_','-'], ' ', $module_slug));","","    $cols = read_columns($pdo, $dbName, $table_name);","    if (!$cols) throw new RuntimeException(\"Table `{$table_name}` not found or not readable.\");","    $pk   = detect_pk($cols);","    $soft = has_soft_delete($cols);","","    $slug = basename($module_slug);","    $outDir = realpath(OUTPUT_BASE) . '/' . $slug;","    if (!is_dir($outDir) && !mkdir($outDir, 0775, true)) throw new RuntimeException('Failed to create output directory: ' . $outDir);","    ensure_inside($outDir, OUTPUT_BASE);","","    // ----------- choose display & search columns -----------","    $preferred = [];","    foreach ($cols as $c) {","      $n = strtolower((string)$c['COLUMN_NAME']); $t = strtolower((string)$c['DATA_TYPE']);","      if (in_array($n, [$pk,'created_at','updated_at','deleted_at'], true)) continue;","      if (str_contains($n,'name') || str_contains($n,'code') || in_array($t,['varchar','char','text'])) $preferred[] = $c['COLUMN_NAME'];","    }","    $others = [];","    foreach ($cols as $c) {","      $n = strtolower((string)$c['COLUMN_NAME']);","      if (in_array($n, [$pk,'created_at','updated_at','deleted_at'], true)) continue;","      if (!in_array($c['COLUMN_NAME'], $preferred, true)) $others[] = $c['COLUMN_NAME'];","    }","    $displayCols = array_slice(array_merge($preferred,$others), 0, 6);","    if (!in_array($pk, $displayCols, true)) array_unshift($displayCols, $pk);","","    $searchable = [];","    foreach ($cols as $c) {","      $n = strtolower((string)$c['COLUMN_NAME']); $t = strtolower((string)$c['DATA_TYPE']);","      if (in_array($t,['varchar','char','text','mediumtext','longtext']) || str_contains($n,'name') || str_contains($n,'code')) $searchable[] = $c['COLUMN_NAME'];","    }","    if (!$searchable) $searchable = [$pk];","","    // ----------- LIST PAGE (HY093-proof) -----------","    $softWhere = $soft ? \" AND `deleted_at` IS NULL \" : \"\";","","    $displayColsPhp = var_export($displayCols, true);","    $searchablePhp  = var_export($searchable, true);","","    $listPhp = <<<PHP","<?php","/** PATH: /public_html/{$slug}/{$slug}_list.php */","declare(strict_types=1);","","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login();","require_permission('{$perm_base}.view');","","\\$pdo = db();","\\$q = trim(\\$_GET['q'] ?? '');","","\\$displayCols = {$displayColsPhp};","\\$searchable  = {$searchablePhp};","","\\$softWhere = \"{$softWhere}\";","","// Build WHERE with unique placeholders (q1, q2, ...)","\\$params = [];","\\$where = \" WHERE 1=1\" . \\$softWhere;","if (\\$q !== '') {","  \\$terms = [];","  \\$i = 1;","  foreach (\\$searchable as \\$col) {","    \\$ph = \":q\" . \\$i++;","    \\$terms[] = \"`{\\$col}` LIKE {\\$ph}\";","    \\$params[\\$ph] = \"%\" . \\$q . \"%\";","  }","  if (\\$terms) {","    \\$where .= \" AND (\" . implode(' OR ', \\$terms) . \")\";","  }","}","","\\$sql = \"SELECT * FROM `{$table_name}`\" . \\$where . \" ORDER BY `{$pk}` DESC LIMIT 200\";","\\$stmt = \\$pdo->prepare(\\$sql);","\\$stmt->execute(\\$params);","\\$rows = \\$stmt->fetchAll(PDO::FETCH_ASSOC);","","include __DIR__ . '/../ui/layout_start.php';","render_flash();","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h4 mb-0\">{$entity_title}</h1>","  <div>","    <?php if (has_permission('{$perm_base}.create')): ?>","      <a href=\"<?= h('{$slug}_form.php') ?>\" class=\"btn btn-primary\">+ New</a>","    <?php endif; ?>","  </div>","</div>","","<form class=\"row g-2 mb-3\" method=\"get\">","  <div class=\"col-auto\"><input class=\"form-control\" name=\"q\" value=\"<?= h(\\$q) ?>\" placeholder=\"Search...\"></div>","  <div class=\"col-auto\"><button class=\"btn btn-outline-secondary\">Search</button></div>","</form>","","<div class=\"table-responsive\">","<table class=\"table table-striped align-middle\">","  <thead>","    <tr>","      <?php foreach (\\$displayCols as \\$c): ?>","        <th><?= h(\\$c) ?></th>","      <?php endforeach; ?>","      <th style=\"width:200px\">Actions</th>","    </tr>","  </thead>","  <tbody>","    <?php if (!\\$rows): ?>","      <tr><td colspan=\"999\" class=\"text-center text-muted py-4\">No records found.</td></tr>","    <?php endif; ?>","    <?php foreach (\\$rows as \\$r): ?>","      <tr>","        <?php foreach (\\$displayCols as \\$c): ?>","          <td><?= h((string)(\\$r[\\$c] ?? '')) ?></td>","        <?php endforeach; ?>","        <td>","          <div class=\"btn-group btn-group-sm\">","            <?php if (has_permission('{$perm_base}.edit')): ?>","              <a class=\"btn btn-outline-secondary\" href=\"<?= h('{$slug}_form.php?id='.(int)\\$r['{$pk}']) ?>\">Edit</a>","            <?php endif; ?>","            <?php if (has_permission('{$perm_base}.delete')): ?>","              <form method=\"post\" action=\"<?= h('{$slug}_save.php') ?>\" onsubmit=\"return confirm('Delete this record?')\">","                <?= csrf_field() ?>","                <input type=\"hidden\" name=\"id\" value=\"<?= (int)\\$r['{$pk}'] ?>\">","                <input type=\"hidden\" name=\"action\" value=\"delete\">","                <button class=\"btn btn-outline-danger\">Delete</button>","              </form>","            <?php endif; ?>","          </div>","        </td>","      </tr>","    <?php endforeach; ?>","  </tbody>","</table>","</div>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>","PHP;","","    // ----------- FORM PAGE -----------","    $formCols = array_values(array_filter($cols, fn($c)=>!is_system_col((string)$c['COLUMN_NAME'])));","    $fieldsHtml = '';","    foreach ($formCols as $c) {","      $name = (string)$c['COLUMN_NAME']; $ctype = (string)$c['COLUMN_TYPE'];","      $kind = input_kind($c); $label = ucwords(str_replace('_',' ', $name));","","      if ($kind === 'textarea') {","        $fieldsHtml .= <<<HTML","","  <div class=\"col-12\">","    <label class=\"form-label\">{$label}</label>","    <textarea name=\"{$name}\" rows=\"3\" class=\"form-control\"><?= h((string)(\\$row['{$name}'] ?? '')) ?></textarea>","  </div>","HTML;","      } elseif ($kind === 'enum') {","        $opts = enum_options($ctype);","        $optsHtml = '';","        foreach ($opts as $opt) {","          $optEsc = e($opt);","          $optsHtml .= \"<option value=\\\"{$optEsc}\\\" <?= ((string)(\\$row['{$name}'] ?? '') === '{$optEsc}') ? 'selected' : '' ?>>{$optEsc}</option>\";","        }","        $fieldsHtml .= <<<HTML","","  <div class=\"col-md-4\">","    <label class=\"form-label\">{$label}</label>","    <select name=\"{$name}\" class=\"form-select\">","      <option value=\"\">-- Select --</option>","      {$optsHtml}","    </select>","  </div>","HTML;","      } elseif ($kind === 'checkbox') {","        $fieldsHtml .= <<<HTML","","  <div class=\"col-md-3 form-check mt-4\">","    <input class=\"form-check-input\" type=\"checkbox\" id=\"chk_{$name}\" name=\"{$name}\" <?= ((int)(\\$row['{$name}'] ?? 0) ? 'checked' : '') ?>>","    <label class=\"form-check-label\" for=\"chk_{$name}\">{$label}</label>","  </div>","HTML;","      } else {","        $typeAttr = $kind === 'text' ? 'text' : $kind;","        $fieldsHtml .= <<<HTML","","  <div class=\"col-md-4\">","    <label class=\"form-label\">{$label}</label>","    <input type=\"{$typeAttr}\" class=\"form-control\" name=\"{$name}\" value=\"<?= h((string)(\\$row['{$name}'] ?? '')) ?>\">","  </div>","HTML;","      }","    }","","    $formPhp = <<<PHP","<?php","/** PATH: /public_html/{$slug}/{$slug}_form.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","","require_login();","","\\$id = (int)(\\$_GET['id'] ?? 0);","\\$isEdit = \\$id > 0;","require_permission(\\$isEdit ? '{$perm_base}.edit' : '{$perm_base}.create');","","\\$pdo = db();","\\$row = [];","if (\\$isEdit) {","  \\$st = \\$pdo->prepare(\"SELECT * FROM `{$table_name}` WHERE `{$pk}` = ?\");","  \\$st->execute([\\$id]);","  \\$row = \\$st->fetch(PDO::FETCH_ASSOC) ?: [];","}","","include __DIR__ . '/../ui/layout_start.php';","render_flash();","?>","<div class=\"d-flex align-items-center justify-content-between mb-3\">","  <h1 class=\"h4 mb-0\"><?= \\$isEdit ? 'Edit' : 'New' ?> {$entity_title}</h1>","  <a href=\"<?= h('{$slug}_list.php') ?>\" class=\"btn btn-outline-secondary\">Back</a>","</div>","","<form method=\"post\" action=\"<?= h('{$slug}_save.php') ?>\" class=\"row g-3\">","  <?= csrf_field() ?>","  <input type=\"hidden\" name=\"id\" value=\"<?= (int)\\$id ?>\">","{$fieldsHtml}","  <div class=\"col-12\">","    <button class=\"btn btn-primary\"><?= \\$isEdit ? 'Update' : 'Create' ?></button>","  </div>","</form>","<?php include __DIR__ . '/../ui/layout_end.php'; ?>","PHP;","","    // ----------- SAVE CONTROLLER -----------","    $postCollect = '';","    $insertCols = []; $insertVals = []; $updateSets = [];","    foreach ($formCols as $c) {","      $name = (string)$c['COLUMN_NAME'];","      $kind = input_kind($c);","","      if ($kind === 'checkbox') {","        $postCollect .= \"  \\$data['{$name}'] = isset(\\$_POST['{$name}']) ? 1 : 0;\\n\";","      } elseif ($kind === 'number') {","        $postCollect .= \"  \\$data['{$name}'] = (\\$_POST['{$name}'] ?? '') === '' ? null : \\$_POST['{$name}'];\\n\";","      } elseif (in_array($kind, ['date','datetime-local'], true)) {","        $postCollect .= \"  \\$data['{$name}'] = (\\$_POST['{$name}'] ?? '') ?: null;\\n\";","      } else {","        $postCollect .= \"  \\$data['{$name}'] = trim((string)(\\$_POST['{$name}'] ?? ''));\\n\";","      }","","      $insertCols[] = \"`{$name}`\";","      $insertVals[] = \":{$name}\";","      if ($name !== $pk) $updateSets[] = \"`{$name}` = :{$name}\";","    }","","    $insertColsSql = implode(', ', $insertCols);","    $insertValsSql = implode(', ', $insertVals);","    $updateSetsSql = implode(', ', $updateSets);","    $softDeleteSql = $soft","      ? \"UPDATE `{$table_name}` SET `deleted_at` = NOW() WHERE `{$pk}` = :id AND `deleted_at` IS NULL\"","      : \"DELETE FROM `{$table_name}` WHERE `{$pk}` = :id\";","","    $autoCodeLogic = '';","    if ($series_for_code !== '') {","      $hasCode = false;","      foreach ($cols as $cc) { if (strtolower($cc['COLUMN_NAME'])==='code') { $hasCode = true; break; } }","      if ($hasCode) {","        $seriesEsc = e($series_for_code);","        $autoCodeLogic = <<<PHP","  // Auto-generate code if empty","  if (array_key_exists('code', \\$data) && \\$data['code'] === '') {","    \\$data['code'] = next_no('{$seriesEsc}');","  }","PHP;","      }","    }","","    $savePhp = <<<PHP","<?php","/** PATH: /public_html/{$slug}/{$slug}_save.php */","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../includes/helpers.php';","require_once __DIR__ . '/../includes/audit.php';","require_once __DIR__ . '/../includes/numbering.php';","","require_login();","verify_csrf_or_die();","","\\$pdo = db();","","\\$action = (string)(\\$_POST['action'] ?? '');","\\$id = (int)(\\$_POST['id'] ?? 0);","","if (\\$action === 'delete') {","  require_permission('{$perm_base}.delete');","  if (\\$id <= 0) { http_response_code(400); exit('Invalid id'); }","  \\$st = \\$pdo->prepare(\"{$softDeleteSql}\");","  \\$st->execute([':id'=>\\$id]);","  audit_log(\\$pdo, '{$slug}', 'delete', \\$id, null);","  set_flash('success', 'Deleted successfully.');","  header('Location: {$slug}_list.php'); exit;","}","","// create or update","\\$isEdit = \\$id > 0;","require_permission(\\$isEdit ? '{$perm_base}.edit' : '{$perm_base}.create');","","\\$data = [];","{$postCollect}","{$autoCodeLogic}","","try {","  if (!\\$isEdit) {","    \\$sql = \"INSERT INTO `{$table_name}` ({$insertColsSql}) VALUES ({$insertValsSql})\";","    \\$st = \\$pdo->prepare(\\$sql);","    \\$st->execute(\\$data);","    \\$newId = (int)\\$pdo->lastInsertId();","    audit_log(\\$pdo, '{$slug}', 'create', \\$newId, \\$data);","    set_flash('success', 'Created successfully.');","    header('Location: {$slug}_list.php'); exit;","  } else {","    \\$sql = \"UPDATE `{$table_name}` SET {$updateSetsSql} WHERE `{$pk}` = :id\";","    \\$data['id'] = \\$id;","    \\$st = \\$pdo->prepare(\\$sql);","    \\$st->execute(\\$data);","    audit_log(\\$pdo, '{$slug}', 'update', \\$id, \\$data);","    set_flash('success', 'Updated successfully.');","    header('Location: {$slug}_list.php'); exit;","  }","} catch (Throwable \\$e) {","  set_flash('danger', \\$e->getMessage());","  header('Location: {$slug}_form.php' . (\\$isEdit ? ('?id='.(int)\\$id) : ''));","  exit;","}","PHP;","","    // ----------- write files -----------","    $files = [","      \"{$outDir}/{$slug}_list.php\" => $listPhp,","      \"{$outDir}/{$slug}_form.php\" => $formPhp,","      \"{$outDir}/{$slug}_save.php\" => $savePhp,","    ];","    foreach ($files as $path=>$code) {","      ensure_inside($path, OUTPUT_BASE);","      $tmp = tempnam(dirname($path), 'scf_');","      if ($tmp === false) throw new RuntimeException('Temp file error.');","      file_put_contents($tmp, $code);","      @chmod($tmp, 0664);","      if (!rename($tmp, $path)) { @unlink($tmp); throw new RuntimeException('Failed to write: ' . $path); }","      $generated[$path] = $code;","    }","","    $notice = \"Generated in /public_html/{$slug}/ (soft delete: \" . ($soft ? 'ON' : 'OFF') . \", auto-code: \" . ($series_for_code ? ('ON ['.$series_for_code.']') : 'OFF') . \")\";","  }","} catch (Throwable $e) {","  $errors[] = $e->getMessage();","}","","// ---------- view ----------","?>","<!doctype html>","<html lang=\"en\">","<head>","  <meta charset=\"utf-8\">","  <title>CRUD Scaffolder</title>","  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">","  <style>body{padding:20px}.mono{font-family:ui-monospace,Menlo,Consolas,monospace}</style>","</head>","<body>","<div class=\"container-lg\">","  <div class=\"d-flex align-items-center justify-content-between mb-3\">","    <h1 class=\"h4 mb-0\">CRUD Scaffolder</h1>","    <span class=\"badge bg-secondary\">PHP 8.4</span>","  </div>","","  <?php if ($notice): ?><div class=\"alert alert-success\"><?= e($notice) ?></div><?php endif; ?>","  <?php if ($errors): ?>","    <div class=\"alert alert-danger\"><ul class=\"mb-0\"><?php foreach ($errors as $er) echo '<li>'.e($er).'</li>'; ?></ul></div>","  <?php endif; ?>","","  <form method=\"post\" class=\"row g-3\">","    <?= csrf_field() ?>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Module Slug (folder)</label>","      <input class=\"form-control\" name=\"module_slug\" placeholder=\"e.g. crm_leads\" value=\"<?= e($module_slug) ?>\">","      <div class=\"form-text\">Files in /public_html/&lt;slug&gt;/</div>","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">DB Table Name</label>","      <input class=\"form-control\" name=\"table_name\" placeholder=\"e.g. crm_leads\" value=\"<?= e($table_name) ?>\">","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Permission Base</label>","      <input class=\"form-control\" name=\"perm_base\" placeholder=\"e.g. crm.lead\" value=\"<?= e($perm_base) ?>\">","      <div class=\"form-text\">Enforces .view / .create / .edit / .delete</div>","    </div>","    <div class=\"col-md-3\">","      <label class=\"form-label\">Auto-Code Series (optional)</label>","      <input class=\"form-control\" name=\"series_for_code\" placeholder=\"e.g. CRM-LEAD\" value=\"<?= e($series_for_code) ?>\">","      <div class=\"form-text\">Uses next_no(series) if the table has a <code>code</code> column.</div>","    </div>","    <div class=\"col-12\">","      <button class=\"btn btn-primary\" name=\"action\" value=\"generate\">Generate Files</button>","    </div>","  </form>","","  <?php if (!empty($generated)): ?>","    <hr class=\"my-4\">","    <h2 class=\"h5\">Generated</h2>","    <?php foreach ($generated as $p => $c): ?>","      <details class=\"mb-3\">","        <summary class=\"mono\"><?= e($p) ?></summary>","        <pre class=\"mono bg-light p-3\" style=\"white-space:pre-wrap;\"><?= e($c) ?></pre>","      </details>","    <?php endforeach; ?>","  <?php endif; ?>","</div>","</body>","</html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/dev/_cache_file_index.json": ["{\"ts\":\"2025-09-30T09:18:26+05:30\",\"tree\":{\"includes\":{\"_type\":\"dir\",\"children\":{\"db.php\":{\"_type\":\"file\"},\"rbac.php\":{\"_type\":\"file\"},\"csrf.php\":{\"_type\":\"file\"},\"helpers.php\":{\"_type\":\"file\"},\"audit.php\":{\"_type\":\"file\"},\"mailer_helper.php\":{\"_type\":\"file\"},\"auth.php\":{\"_type\":\"file\"},\"services\":{\"_type\":\"dir\",\"children\":{\"MaterialCodeService.php\":{\"_type\":\"file\"},\"WorkOrderService.php\":{\"_type\":\"file\"},\"ValuationService.php\":{\"_type\":\"file\"},\"ItemCodeService.php\":{\"_type\":\"file\"},\"NumberingService.php\":{\"_type\":\"file\"},\"PartyCodeService.php\":{\"_type\":\"file\"},\"PartiesService.php\":{\"_type\":\"file\"},\"Accounts\":{\"_type\":\"dir\",\"children\":{\"PostingService.php\":{\"_type\":\"file\"},\"TaxStagingService.php\":{\"_type\":\"file\"}}},\"UnitConverter.php\":{\"_type\":\"file\"},\"GstLookupService.php\":{\"_type\":\"file\"},\"StockMoveWriter.php\":{\"_type\":\"file\"}}},\"numbering.php\":{\"_type\":\"file\"},\"machines_helpers.php\":{\"_type\":\"file\"},\"notify.php\":{\"_type\":\"file\"}}},\"accounts\":{\"_type\":\"dir\",\"children\":{\"journals_list.php\":{\"_type\":\"file\"},\"trial_balance.php\":{\"_type\":\"file\"},\"diag_posting.php\":{\"_type\":\"file\"},\"ledger.php\":{\"_type\":\"file\"},\"diag_apbill.php\":{\"_type\":\"file\"}}},\"assets\":{\"_type\":\"dir\",\"children\":{\"logo.jpg\":{\"_type\":\"file\"}}},\"attachments\":{\"_type\":\"dir\",\"children\":{\"panel.php\":{\"_type\":\"file\"},\"delete.php\":{\"_type\":\"file\"},\"upload.php\":{\"_type\":\"file\"}}},\"audit\":{\"_type\":\"dir\",\"children\":{\"log_view.php\":{\"_type\":\"file\"},\"log_list.php\":{\"_type\":\"file\"}}},\"bom\":{\"_type\":\"dir\",\"children\":{\"routing_form.php\":{\"_type\":\"file\"},\"routing_print.php\":{\"_type\":\"file\"},\"routing_export_csv.php\":{\"_type\":\"file\"},\"routing_view.php\":{\"_type\":\"file\"}}},\"classes\":{\"_type\":\"dir\",\"children\":{\"ItemCodeGenerator.php\":{\"_type\":\"file\"}}},\"common\":{\"_type\":\"dir\",\"children\":{\"party_get.php\":{\"_type\":\"file\"},\"party_search.php\":{\"_type\":\"file\"},\"party_contacts.php\":{\"_type\":\"file\"}}},\"dpr\":{\"_type\":\"dir\",\"children\":{\"dpr_entry.php\":{\"_type\":\"file\"}}},\"identity\":{\"_type\":\"dir\",\"children\":{\"users_list.php\":{\"_type\":\"file\"},\"users_form.php\":{\"_type\":\"file\"},\"roles_form.php\":{\"_type\":\"file\"},\"permissions_list.php\":{\"_type\":\"file\"},\"permissions_edit.php\":{\"_type\":\"file\"},\"roles_list.php\":{\"_type\":\"file\"}}},\"items\":{\"_type\":\"dir\",\"children\":{\"items_delete.php\":{\"_type\":\"file\"},\"items_form.php\":{\"_type\":\"file\"},\"items_restore.php\":{\"_type\":\"file\"},\"items_list.php\":{\"_type\":\"file\"}}},\"jobs\":{\"_type\":\"dir\",\"children\":{\"run_queue.php\":{\"_type\":\"file\"}}},\"machines\":{\"_type\":\"dir\",\"children\":{\"types_list.php\":{\"_type\":\"file\"},\"machine_next_code.php\":{\"_type\":\"file\"},\"types_by_category.php\":{\"_type\":\"file\"},\"categories_list.php\":{\"_type\":\"file\"},\"machines_form.php\":{\"_type\":\"file\"},\"machines_view.php\":{\"_type\":\"file\"},\"machines_list.php\":{\"_type\":\"file\"},\"categories_form.php\":{\"_type\":\"file\"},\"types_form.php\":{\"_type\":\"file\"}}},\"maintenance\":{\"_type\":\"dir\",\"children\":{\"wo_complete.php\":{\"_type\":\"file\"},\"wo_task_toggle.php\":{\"_type\":\"file\"},\"wo_form.php\":{\"_type\":\"file\"},\"x_machine_type.php\":{\"_type\":\"file\"},\"programs_form.php\":{\"_type\":\"file\"},\"intervals_form.php\":{\"_type\":\"file\"},\"wo_list.php\":{\"_type\":\"file\"},\"programs_list.php\":{\"_type\":\"file\"},\"intervals_list.php\":{\"_type\":\"file\"},\"intervals_generate.php\":{\"_type\":\"file\"},\"schedule.php\":{\"_type\":\"file\"},\"breakdown_view.php\":{\"_type\":\"file\"},\"interval_quick_complete.php\":{\"_type\":\"file\"},\"reports\":{\"_type\":\"dir\",\"children\":{\"contractor_costs.php\":{\"_type\":\"file\"}}},\"x_templates_for_type.php\":{\"_type\":\"file\"},\"wo_view.php\":{\"_type\":\"file\"},\"wo_task_add.php\":{\"_type\":\"file\"}}},\"maintenance_alloc\":{\"_type\":\"dir\",\"children\":{\"allocations_report_contractor.php\":{\"_type\":\"file\"},\"allocations_return.php\":{\"_type\":\"file\"},\"allocations_form.php\":{\"_type\":\"file\"},\"allocations_list.php\":{\"_type\":\"file\"}}},\"material\":{\"_type\":\"dir\",\"children\":{\"index.php\":{\"_type\":\"file\"},\"categories_list.php\":{\"_type\":\"file\"},\"items_form.php\":{\"_type\":\"file\"},\"subcategories_list.php\":{\"_type\":\"file\"},\"subcategories_form.php\":{\"_type\":\"file\"},\"items_list.php\":{\"_type\":\"file\"},\"categories_form.php\":{\"_type\":\"file\"}}},\"migrations\":{\"_type\":\"dir\",\"children\":[]},\"org\":{\"_type\":\"dir\",\"children\":{\"locations_form.php\":{\"_type\":\"file\"},\"departments_list.php\":{\"_type\":\"file\"},\"departments_form.php\":{\"_type\":\"file\"},\"locations_list.php\":{\"_type\":\"file\"}}},\"parties\":{\"_type\":\"dir\",\"children\":{\"party_gst_lookup.php\":{\"_type\":\"file\"},\"parties_form.php\":{\"_type\":\"file\"},\"party_next_code.php\":{\"_type\":\"file\"},\"parties_list.php\":{\"_type\":\"file\"}}},\"processes\":{\"_type\":\"dir\",\"children\":{\"processes_list.php\":{\"_type\":\"file\"},\"processes_form.php\":{\"_type\":\"file\"}}},\"projects\":{\"_type\":\"dir\",\"children\":{\"project_contacts.php\":{\"_type\":\"file\"},\"project_next_code.php\":{\"_type\":\"file\"},\"projects_list.php\":{\"_type\":\"file\"},\"projects_form.php\":{\"_type\":\"file\"}}},\"purchase\":{\"_type\":\"dir\",\"children\":{\"indent_print.php\":{\"_type\":\"file\"},\"compare_select_l1.php\":{\"_type\":\"file\"},\"po_list.php\":{\"_type\":\"file\"},\"inquiries_list.php\":{\"_type\":\"file\"},\"po_pdf.php\":{\"_type\":\"file\"},\"quotes_compare.php\":{\"_type\":\"file\"},\"po_attach_download.php\":{\"_type\":\"file\"},\"quotes_lock.php\":{\"_type\":\"file\"},\"item_makes.php\":{\"_type\":\"file\"},\"bom_list.php\":{\"_type\":\"file\"},\"inquiry_seq.php\":{\"_type\":\"file\"},\"inquiry_quotes_form.php\":{\"_type\":\"file\"},\"inquiry_close.php\":{\"_type\":\"file\"},\"inquiry_issue.php\":{\"_type\":\"file\"},\"inquiry_print.php\":{\"_type\":\"file\"},\"indent_next_no.php\":{\"_type\":\"file\"},\"items_options.php\":{\"_type\":\"file\"},\"po_attach_delete.php\":{\"_type\":\"file\"},\"inquiry_indent_picker.php\":{\"_type\":\"file\"},\"po_from_rfq.php\":{\"_type\":\"file\"},\"quotes_list.php\":{\"_type\":\"file\"},\"rfq_build.php\":{\"_type\":\"file\"},\"inquiry_quote_seed.php\":{\"_type\":\"file\"},\"bom_items_options.php\":{\"_type\":\"file\"},\"indents_form.php\":{\"_type\":\"file\"},\"rfq_form.php\":{\"_type\":\"file\"},\"inquiry_build.php\":{\"_type\":\"file\"},\"po_from_selection.php\":{\"_type\":\"file\"},\"po_item_sizes_api.php\":{\"_type\":\"file\"},\"po_seq.php\":{\"_type\":\"file\"},\"inquiry_quotes_delete.php\":{\"_type\":\"file\"},\"inquiry_import_indent.php\":{\"_type\":\"file\"},\"req_wizard.php\":{\"_type\":\"file\"},\"quotes_form.php\":{\"_type\":\"file\"},\"po_form.php\":{\"_type\":\"file\"},\"rfq_list.php\":{\"_type\":\"file\"},\"rm_indent_form.php\":{\"_type\":\"file\"},\"plate_plan_form.php\":{\"_type\":\"file\"},\"quote_seq.php\":{\"_type\":\"file\"},\"indents_list.php\":{\"_type\":\"file\"},\"inquiries_form.php\":{\"_type\":\"file\"},\"inquiry_quotes_list.php\":{\"_type\":\"file\"},\"po_attach_upload.php\":{\"_type\":\"file\"},\"po_print.php\":{\"_type\":\"file\"},\"bom_form.php\":{\"_type\":\"file\"},\"rm_indents_list.php\":{\"_type\":\"file\"},\"items_search.php\":{\"_type\":\"file\"}}},\"sales_orders\":{\"_type\":\"dir\",\"children\":{\"create_project.php\":{\"_type\":\"file\"}}},\"settings\":{\"_type\":\"dir\",\"children\":{\"mailer_form.php\":{\"_type\":\"file\"}}},\"stores\":{\"_type\":\"dir\",\"children\":{\"gatepass_print.php\":{\"_type\":\"file\"},\"stock_adjust_form.php\":{\"_type\":\"file\"},\"gatepass_form.php\":{\"_type\":\"file\"},\"requisitions_lines_api.php\":{\"_type\":\"file\"},\"gatepass_list.php\":{\"_type\":\"file\"},\"requisitions_form.php\":{\"_type\":\"file\"},\"purchase_advice_list.php\":{\"_type\":\"file\"},\"issues_list.php\":{\"_type\":\"file\"},\"gatepass_return_form.php\":{\"_type\":\"file\"},\"grn_form.php\":{\"_type\":\"file\"},\"_ajax\":{\"_type\":\"dir\",\"children\":{\"grn_post.php\":{\"_type\":\"file\"},\"pa_to_indent.php\":{\"_type\":\"file\"},\"pa_to_pr.php\":{\"_type\":\"file\"},\"stock_adjust_post.php\":{\"_type\":\"file\"},\"gp_return_post.php\":{\"_type\":\"file\"},\"gp_create_post.php\":{\"_type\":\"file\"},\"_jobs\":{\"_type\":\"dir\",\"children\":{\"policy_adaptive_refresh.php\":{\"_type\":\"file\"}}},\"purchase_advice_approve.php\":{\"_type\":\"file\"},\"req_post_issue.php\":{\"_type\":\"file\"},\"create_purchase_advice.php\":{\"_type\":\"file\"},\"req_create.php\":{\"_type\":\"file\"}}},\"stock_adjust_list.php\":{\"_type\":\"file\"},\"purchase_advice_view.php\":{\"_type\":\"file\"},\"stock_onhand_api.php\":{\"_type\":\"file\"},\"issue_view.php\":{\"_type\":\"file\"},\"requisitions_list.php\":{\"_type\":\"file\"},\"minmax_report.php\":{\"_type\":\"file\"}}},\"tools\":{\"_type\":\"dir\",\"children\":{\"diff_viewer.php\":{\"_type\":\"file\"},\"trace_page.php\":{\"_type\":\"file\"},\"diag_pw_check.php\":{\"_type\":\"file\"},\"block_replace.php\":{\"_type\":\"file\"},\"smart_block_runner.php\":{\"_type\":\"file\"},\"migrations_runner.php\":{\"_type\":\"file\"},\"workflow_configurator.php\":{\"_type\":\"file\"},\"verify_config.php\":{\"_type\":\"file\"},\"seed_permissions.php\":{\"_type\":\"file\"},\"code_pattern_manager.php\":{\"_type\":\"file\"},\"post_probe.php\":{\"_type\":\"file\"},\"scaffold.php\":{\"_type\":\"file\"}}},\"ui\":{\"_type\":\"dir\",\"children\":{\"partials\":{\"_type\":\"dir\",\"children\":{\"notifications_bell.php\":{\"_type\":\"file\"}}},\"layout_end.php\":{\"_type\":\"file\"},\"sidebar.php\":{\"_type\":\"file\"},\"init.php\":{\"_type\":\"file\"},\"components.php\":{\"_type\":\"file\"},\"layout_start.php\":{\"_type\":\"file\"}}},\"uom\":{\"_type\":\"dir\",\"children\":{\"uom_conversions_delete.php\":{\"_type\":\"file\"},\"uom_conversions_form.php\":{\"_type\":\"file\"},\"uom_form.php\":{\"_type\":\"file\"},\"uom_conversions_list.php\":{\"_type\":\"file\"},\"uom_delete.php\":{\"_type\":\"file\"},\"uom_list.php\":{\"_type\":\"file\"}}},\"workcenters\":{\"_type\":\"dir\",\"children\":{\"workcenters_list.php\":{\"_type\":\"file\"},\"capabilities_form.php\":{\"_type\":\"file\"},\"capabilities_delete.php\":{\"_type\":\"file\"},\"workcenters_form.php\":{\"_type\":\"file\"}}},\"workorders\":{\"_type\":\"dir\",\"children\":{\"pwo_list.php\":{\"_type\":\"file\"},\"pwo_delete.php\":{\"_type\":\"file\"},\"pwo_form.php\":{\"_type\":\"file\"},\"pwo_edit.php\":{\"_type\":\"file\"}}},\"modules\":{\"_type\":\"dir\",\"children\":{\"demo\":{\"_type\":\"dir\",\"children\":{\"hello.php\":{\"_type\":\"file\"}}}}},\"crm_leads\":{\"_type\":\"dir\",\"children\":{\"crm_leads_form.php\":{\"_type\":\"file\"},\"convert_to_order.php\":{\"_type\":\"file\"},\"crm_leads_list.php\":{\"_type\":\"file\"},\"crm_leads_save.php\":{\"_type\":\"file\"}}}}}"],
"/home/u989675055/domains/emsinfra.co.in/public_html/dev/code_dropper.php": ["<?php","// /dev/code_dropper.php","// Smart DEV-ONLY file dropper with auto folder map, cached index, tree UI, load + overwrite","// RBAC fallback: if rbac_can() is missing, enforce a DEV PIN gate.","// Uses independent dev CSRF token to avoid app-level mismatches.","","declare(strict_types=1);","","// ---- EARLY SESSION & DEV CSRF ----------------------------------------------","if (!isset($_SESSION)) { session_start(); }","if (empty($_SESSION['_dev_csrf'])) { $_SESSION['_dev_csrf'] = bin2hex(random_bytes(32)); }","function dev_csrf_token(): string { return $_SESSION['_dev_csrf']; }","function dev_csrf_validate(?string $t): bool {","    return is_string($t) && isset($_SESSION['_dev_csrf']) && hash_equals($_SESSION['_dev_csrf'], $t);","}","","// ---- CONFIG -----------------------------------------------------------------","$SHOW_RESTRICTED_BADGE = false;     // show \"Restricted\" badge beside title","$SHOW_DIAGNOSTICS      = true;      // show the diagnostics card","$DEV_PIN               = '9876';    // <<< CHANGE THIS. Used when rbac_can() is missing.","$DEV_IP_ALLOWLIST      = [];        // e.g. ['1.2.3.4'] to restrict by IP; leave [] to allow all","$APP_ROOT              = realpath(__DIR__ . '/..');","","// Whitelisted top-level directories relative to APP_ROOT","$ALLOWED_DIRS = [","    'includes',","    'accounts',","    'assets',","    'attachments',","    'audit',","    'bom',","    'classes',","    'common',","    'dpr',","    'identity',","    'items',","    'jobs',","    'machines',","    'maintenance',","    'maintenance_alloc',","    'material',","    'migrations',","    'org',","    'parties',","    'processes',","    'projects',","    'purchase',","    'sales_orders',","    'settings',","    'stores',","    'tools',","    'ui',","    'uom',","    'workcenters',","    'workorders',","    'modules',","    'jobs',","    'public',","    'crm_leads',","    'crm',","","];","","// Ignore patterns during scan","$IGNORE_DIRS = ['.git', '.idea', '.vscode', 'node_modules', 'vendor', 'backups', 'storage', 'cache', 'logs', '.DS_Store'];","$IGNORE_FILES_SUFFIX = ['.tmp', '.swp', '.lock', '.log'];","","// Cache file for the file index","$CACHE_DIR  = __DIR__;","$CACHE_FILE = $CACHE_DIR . '/_cache_file_index.json';","","// ---- Includes & UI shell ----------------------------------------------------","@require_once __DIR__ . '/../includes/auth.php';","@require_once __DIR__ . '/../includes/db.php';","@require_once __DIR__ . '/../includes/rbac.php';","@require_once __DIR__ . '/../includes/csrf.php';","require_once __DIR__ . '/../ui/layout_start.php'; // Bootstrap 5 shell","","// ---- ENV/SECURITY GUARDS ----------------------------------------------------","$env        = getenv('APP_ENV') ?: '';","$isProd     = $env && strtolower((string)$env) === 'production';","$clientIp   = $_SERVER['REMOTE_ADDR'] ?? '';","","// Hard-disable in production","if ($isProd) {","    http_response_code(403);","    echo '<div class=\"container py-4\"><div class=\"alert alert-danger\">Disabled in production (APP_ENV=production).</div></div>';","    require_once __DIR__ . '/../ui/layout_end.php';","    exit;","}","","// Optional IP allowlist","if (!empty($DEV_IP_ALLOWLIST) && !in_array($clientIp, $DEV_IP_ALLOWLIST, true)) {","    http_response_code(403);","    echo '<div class=\"container py-4\"><div class=\"alert alert-danger\">Your IP is not on the DEV allowlist.</div></div>';","    require_once __DIR__ . '/../ui/layout_end.php';","    exit;","}","","// RBAC or DEV PIN gate","$rbacAvailable = function_exists('rbac_can');","$hasRbac       = $rbacAvailable && rbac_can('core.dev.file.write');","$pinUnlocked   = !empty($_SESSION['_dev_pin_ok']) && $_SESSION['_dev_pin_ok'] === true;","","if (!$rbacAvailable) {","    // Use PIN flow","    if (($_POST['_action'] ?? '') === 'dev_pin_login') {","        if (dev_csrf_validate($_POST['_dev_csrf'] ?? '') && isset($_POST['pin'])) {","            if (hash_equals($DEV_PIN, (string)$_POST['pin'])) {","                $_SESSION['_dev_pin_ok'] = true;","                $pinUnlocked = true;","            } else {","                echo '<div class=\"container py-3\"><div class=\"alert alert-danger\">Invalid PIN.</div></div>';","            }","        }","    }","    if (!$pinUnlocked) {","        // Show PIN form and stop","        ?>","        <div class=\"container py-5\" style=\"max-width:520px;\">","          <div class=\"card shadow-sm\">","            <div class=\"card-body\">","              <h1 class=\"h5 mb-3\">Code Dropper \u2013 DEV PIN</h1>","              <form method=\"post\">","                <input type=\"hidden\" name=\"_dev_csrf\" value=\"<?= htmlspecialchars(dev_csrf_token()) ?>\">","                <input type=\"hidden\" name=\"_action\" value=\"dev_pin_login\">","                <div class=\"mb-3\">","                  <label class=\"form-label\">Enter DEV PIN</label>","                  <input type=\"password\" name=\"pin\" class=\"form-control\" required>","                </div>","                <button class=\"btn btn-primary\" type=\"submit\">Unlock</button>","              </form>","              <div class=\"form-text mt-2\">RBAC not detected; using PIN gate. Set <code>$DEV_PIN</code> in this file.</div>","            </div>","          </div>","        </div>","        <?php","        require_once __DIR__ . '/../ui/layout_end.php';","        exit;","    }","} else {","    // RBAC present; enforce permission","    if (!$hasRbac) {","        http_response_code(403);","        echo '<div class=\"container py-4\"><div class=\"alert alert-danger\">Forbidden: missing permission <code>core.dev.file.write</code>.</div></div>';","        require_once __DIR__ . '/../ui/layout_end.php';","        exit;","    }","}","","// ---- Diagnostics ------------------------------------------------------------","$diag = [","    'app_env'     => $env,","    'rbac_state'  => $rbacAvailable ? ($hasRbac ? 'yes' : 'no') : 'rbac_can() missing',","    'user'        => (function_exists('auth_user') ? (auth_user()['username'] ?? 'unknown') : 'unknown'),","    'app_root'    => $APP_ROOT ?: '(unresolved)',","    'cache_file'  => $CACHE_FILE,","    'ip'          => $clientIp,","    'write_test'  => 'not-run',","    'last_error'  => '',","];","","// APP_ROOT check","if ($APP_ROOT === false) {","    http_response_code(500);","    echo '<div class=\"alert alert-danger\">APP_ROOT resolution failed.</div>';","    require_once __DIR__ . '/../ui/layout_end.php';","    exit;","}","","// Basic write test (in /dev)","try {","    $testFile = __DIR__ . '/_write_test.txt';","    if (@file_put_contents($testFile, 'ok ' . date('c')) !== false) {","        $diag['write_test'] = 'ok (' . basename($testFile) . ' created)';","        @unlink($testFile);","    } else {","        $diag['write_test'] = 'failed';","        $diag['last_error'] = error_get_last()['message'] ?? '';","    }","} catch (Throwable $t) {","    $diag['write_test'] = 'exception: ' . $t->getMessage();","}","","// ---- Utils ------------------------------------------------------------------","function starts_with(string $haystack, string $needle): bool {","    return strncmp($haystack, $needle, strlen($needle)) === 0;","}","function ensure_dir(string $dir): void {","    if (!is_dir($dir)) {","        if (!mkdir($dir, 0775, true) && !is_dir($dir)) {","            throw new RuntimeException(\"Failed to create directory: $dir\");","        }","    }","}","function is_allowed_path(string $relPath, array $allowedTop): bool {","    $firstSeg = explode('/', $relPath, 2)[0];","    return in_array($firstSeg, $allowedTop, true);","}","function should_ignore_name(string $name, array $ignoreDirs): bool {","    return in_array($name, $ignoreDirs, true);","}","function has_ignored_suffix(string $name, array $suffixes): bool {","    foreach ($suffixes as $suf) {","        if ($suf !== '' && str_ends_with($name, $suf)) return true;","    }","    return false;","}","","// ---- Scanner & Cache --------------------------------------------------------","function build_tree(string $APP_ROOT, array $ALLOWED_DIRS, array $IGNORE_DIRS, array $IGNORE_FILES_SUFFIX, int $maxFiles = 50000): array {","    $tree = [];","    $count = 0;","    foreach ($ALLOWED_DIRS as $top) {","        $abs = $APP_ROOT . DIRECTORY_SEPARATOR . $top;","        if (!is_dir($abs)) continue;","        $tree[$top] = ['_type' => 'dir', 'children' => []];","","        $rii = new RecursiveIteratorIterator(","            new RecursiveDirectoryIterator($abs, FilesystemIterator::SKIP_DOTS),","            RecursiveIteratorIterator::SELF_FIRST","        );","","        foreach ($rii as $fi) {","            $name = $fi->getFilename();","","            if ($fi->isDir()) {","                if (should_ignore_name($name, $IGNORE_DIRS)) continue;","            } else {","                if (has_ignored_suffix($name, $IGNORE_FILES_SUFFIX)) continue;","            }","","            $absPath = $fi->getPathname();","            $relPath = ltrim(str_replace('\\\\', '/', substr($absPath, strlen($APP_ROOT))), '/');","            if (!is_allowed_path($relPath, $ALLOWED_DIRS)) continue;","","            $parts = explode('/', $relPath);","            $node =& $tree;","            foreach ($parts as $i => $part) {","                if ($i === count($parts)-1) {","                    if ($fi->isDir()) {","                        if (!isset($node[$part])) $node[$part] = ['_type' => 'dir', 'children' => []];","                    } else {","                        $node[$part] = ['_type' => 'file'];","                        $count++;","                        if ($count >= $maxFiles) {","                            unset($node);","                            break 3;","                        }","                    }","                } else {","                    if (!isset($node[$part])) $node[$part] = ['_type' => 'dir', 'children' => []];","                    $children =& $node[$part]['children'];","                    unset($node);","                    $node =& $children;","                }","            }","            unset($node);","        }","    }","    return $tree;","}","","function flatten_files(array $tree, string $prefix = ''): array {","    $out = [];","    foreach ($tree as $name => $data) {","        if (!is_array($data) || !isset($data['_type'])) continue;","        if ($data['_type'] === 'file') {","            $out[] = ltrim($prefix . $name, '/');","        } elseif ($data['_type'] === 'dir') {","            $childPrefix = $prefix . $name . '/';","            if (isset($data['children']) && is_array($data['children'])) {","                $out = array_merge($out, flatten_files($data['children'], $childPrefix));","            }","        }","    }","    return $out;","}","","function load_cached_index(string $cacheFile): ?array {","    if (!is_file($cacheFile)) return null;","    $raw = @file_get_contents($cacheFile);","    if ($raw === false) return null;","    $arr = json_decode($raw, true);","    return (is_array($arr) && isset($arr['tree'], $arr['ts'])) ? $arr : null;","}","function save_cached_index(string $cacheFile, array $tree): bool {","    $payload = ['ts' => date('c'), 'tree' => $tree];","    return (bool)@file_put_contents($cacheFile, json_encode($payload, JSON_UNESCAPED_SLASHES));","}","","// ---- Actions ----------------------------------------------------------------","$messages = [];","$errors = [];","$loadedCode = '';","$postedPath = '';","","$action = $_POST['_action'] ?? 'init';","$needsRescan = false;","","if ($_SERVER['REQUEST_METHOD'] === 'POST') {","    $csrf = $_POST['_dev_csrf'] ?? '';","    if (!dev_csrf_validate($csrf)) {","        $errors[] = 'Invalid CSRF token.';","    } else {","        $relPath = trim((string)($_POST['path'] ?? ''));","        $postedPath = $relPath;","","        if ($action === 'rescan') {","            $needsRescan = true;","","        } elseif ($action === 'load') {","            if ($relPath === '') $errors[] = 'Path is required.';","            if (str_contains($relPath, '..') || str_starts_with($relPath, '/') || preg_match('#^[A-Za-z]:\\\\\\\\#', $relPath)) {","                $errors[] = 'Path must be relative (no \"..\" or absolute).';","            }","            if (!is_allowed_path($relPath, $ALLOWED_DIRS)) {","                $errors[] = 'Top-level directory is not allowed.';","            }","            $dest = $APP_ROOT . DIRECTORY_SEPARATOR . $relPath;","            if (!$errors) {","                if (!file_exists($dest)) {","                    $errors[] = 'File not found to load.';","                } else {","                    $real = realpath($dest);","                    if ($real === false || !starts_with($real, $APP_ROOT)) {","                        $errors[] = 'Resolved path escapes APP_ROOT.';","                    } else {","                        $loaded = @file_get_contents($real);","                        if ($loaded === false) {","                            $errors[] = 'Failed to read file.';","                        } else {","                            $loadedCode = $loaded;","                            $messages[] = 'Loaded file into editor.';","                        }","                    }","                }","            }","","        } elseif ($action === 'write') {","            $code    = (string)($_POST['code'] ?? '');","            $overwrite = isset($_POST['overwrite']);","            $makeDirs  = isset($_POST['makedirs']);","","            if ($relPath === '') $errors[] = 'Path is required.';","            if ($code === '')    $errors[] = 'Code/content is required.';","            if (str_contains($relPath, '..') || str_starts_with($relPath, '/') || preg_match('#^[A-Za-z]:\\\\\\\\#', $relPath)) {","                $errors[] = 'Path must be relative (no \"..\" or absolute).';","            }","            if (!is_allowed_path($relPath, $ALLOWED_DIRS)) {","                $errors[] = 'Top-level directory is not allowed.';","            }","","            $dest = $APP_ROOT . DIRECTORY_SEPARATOR . $relPath;","","            $destRealParent = realpath(dirname($dest)) ?: dirname($dest);","            if (is_dir($destRealParent)) {","                $realParent = realpath($destRealParent);","                if ($realParent === false || !starts_with($realParent, $APP_ROOT)) {","                    $errors[] = 'Resolved parent directory escapes APP_ROOT.';","                }","            }","            if (!$errors && !is_dir(dirname($dest))) {","                if ($makeDirs) {","                    try { ensure_dir(dirname($dest)); } catch (Throwable $t) { $errors[] = $t->getMessage(); }","                } else {","                    $errors[] = 'Parent directory does not exist. Tick \"Create missing folders\".';","                }","            }","            if (!$errors && file_exists($dest) && !$overwrite) {","                $errors[] = 'File exists. Tick \"Overwrite if exists\" to replace.';","            }","","            if (!$errors) {","                // Backup existing","                $backupPath = null;","                if (file_exists($dest)) {","                    $stamp = date('Ymd_His');","                    $backupDir = $APP_ROOT . '/backups/' . $stamp;","                    $backupLeaf = str_replace(['/', '\\\\'], '.', $relPath);","                    try {","                        ensure_dir($backupDir);","                        $backupPath = $backupDir . '/' . $backupLeaf;","                        if (!copy($dest, $backupPath)) {","                            $errors[] = 'Failed to create backup of existing file.';","                        }","                    } catch (Throwable $t) {","                        $errors[] = 'Backup error: ' . $t->getMessage();","                    }","                }","            }","","            if (!$errors) {","                $tmp = $dest . '.tmp-' . bin2hex(random_bytes(6));","                $bytes = file_put_contents($tmp, $code, LOCK_EX);","                if ($bytes === false) {","                    $errors[] = 'Failed to write temporary file.';","                } else {","                    if (file_exists($dest)) {","                        $perms = fileperms($dest) & 0777;","                        @chmod($tmp, $perms ?: 0664);","                    } else {","                        @chmod($tmp, 0664);","                    }","                    if (!@rename($tmp, $dest)) {","                        @unlink($tmp);","                        $errors[] = 'Failed to move file into place.';","                    } else {","                        $messages[] = 'File written: <code>' . htmlspecialchars($relPath) . '</code>';","                        if (isset($backupPath)) {","                            $messages[] = 'Backup: <code>' . htmlspecialchars(str_replace($APP_ROOT . '/', '', $backupPath)) . '</code>';","                        }","                        // lightweight audit","                        try {","                            $logDir = $APP_ROOT . '/backups/_write_logs';","                            ensure_dir($logDir);","                            $who = function_exists('auth_user') ? (auth_user()['username'] ?? 'unknown') : 'unknown';","                            $entry = json_encode([","                                'ts' => date('c'),","                                'user' => $who,","                                'path' => $relPath,","                                'overwrite' => $overwrite,","                                'size' => strlen($code),","                                'ip' => $_SERVER['REMOTE_ADDR'] ?? null,","                                'ua' => $_SERVER['HTTP_USER_AGENT'] ?? null,","                            ], JSON_UNESCAPED_SLASHES);","                            file_put_contents($logDir . '/' . date('Ymd') . '.log', $entry . PHP_EOL, FILE_APPEND | LOCK_EX);","                        } catch (Throwable $t) { /* ignore */ }","                    }","                }","            }","        }","    }","}","","// Load or build index","$indexPayload = load_cached_index($CACHE_FILE);","if (($action === 'init' && $indexPayload === null) || ($action === 'rescan')) {","    try {","        $tree = build_tree($APP_ROOT, $ALLOWED_DIRS, $IGNORE_DIRS, $IGNORE_FILES_SUFFIX);","        save_cached_index($CACHE_FILE, $tree);","        $indexPayload = ['ts' => date('c'), 'tree' => $tree];","        $messages[] = ($action === 'rescan') ? 'Folder map rebuilt.' : 'Folder map created.';","    } catch (Throwable $t) {","        $errors[] = 'Scan error: ' . $t->getMessage();","        $indexPayload = ['ts' => date('c'), 'tree' => []];","    }","}","$TREE = $indexPayload['tree'] ?? [];","$INDEX_TS = $indexPayload['ts'] ?? '';","$ALL_FILES = flatten_files($TREE);","","// ---- Page -------------------------------------------------------------------","?>","<div class=\"container-fluid py-3\">","  <div class=\"d-flex align-items-center mb-3\">","    <h1 class=\"h5 mb-0\">Code Dropper</h1>","    <?php if ($SHOW_RESTRICTED_BADGE): ?>","      <span class=\"badge bg-danger ms-2\">Restricted</span>","    <?php endif; ?>","    <form method=\"post\" class=\"ms-auto d-flex gap-2 align-items-center\">","      <input type=\"hidden\" name=\"_dev_csrf\" value=\"<?= htmlspecialchars(dev_csrf_token()) ?>\">","      <input type=\"hidden\" name=\"_action\" value=\"rescan\">","      <span class=\"text-muted small me-2\">Indexed: <?= htmlspecialchars($INDEX_TS) ?> | Files: <?= number_format(count($ALL_FILES)) ?></span>","      <button class=\"btn btn-sm btn-outline-secondary\" type=\"submit\" title=\"Rescan folders\">Rescan</button>","    </form>","  </div>","","  <?php if ($SHOW_DIAGNOSTICS): ?>","    <div class=\"card mb-3 shadow-sm\">","      <div class=\"card-body\">","        <div class=\"d-flex align-items-center justify-content-between\">","          <h6 class=\"mb-0\">Diagnostics</h6>","        </div>","        <div class=\"row small mt-2\">","          <div class=\"col-md-3\">User: <code><?= htmlspecialchars($diag['user']) ?></code></div>","          <div class=\"col-md-3\">RBAC: <code><?= htmlspecialchars($diag['rbac_state']) ?></code></div>","          <div class=\"col-md-3\">APP_ENV: <code><?= htmlspecialchars($diag['app_env']) ?></code></div>","          <div class=\"col-md-3\">Write test: <code><?= htmlspecialchars($diag['write_test']) ?></code></div>","        </div>","        <div class=\"row small mt-1\">","          <div class=\"col-md-6\">APP_ROOT: <code><?= htmlspecialchars($diag['app_root']) ?></code></div>","          <div class=\"col-md-6\">Cache file: <code><?= htmlspecialchars(str_replace($APP_ROOT . '/', '', $diag['cache_file'])) ?></code></div>","        </div>","        <div class=\"row small mt-1\">","          <div class=\"col-md-6\">Client IP: <code><?= htmlspecialchars($diag['ip']) ?></code></div>","        </div>","      </div>","    </div>","  <?php endif; ?>","","  <?php foreach (($messages ?? []) as $m): ?>","    <div class=\"alert alert-success py-2 my-2\"><?= $m ?></div>","  <?php endforeach; ?>","  <?php foreach (($errors ?? []) as $e): ?>","    <div class=\"alert alert-danger py-2 my-2\"><?= htmlspecialchars($e) ?></div>","  <?php endforeach; ?>","","  <div class=\"row g-3\">","    <div class=\"col-lg-4\">","      <div class=\"card shadow-sm h-100\">","        <div class=\"card-body\">","          <div class=\"d-flex align-items-center mb-2\">","            <h2 class=\"h6 mb-0\">Folders & Files</h2>","          </div>","          <input type=\"text\" id=\"treeFilter\" class=\"form-control form-control-sm mb-2\" placeholder=\"Filter files/folders\u2026\">","          <div id=\"tree\" class=\"border rounded\" style=\"max-height: 65vh; overflow:auto; padding: .5rem;\">","            <?php","              function render_tree(array $node, string $prefix = ''): void {","                  echo '<ul class=\"list-unstyled ms-2 mb-0\">';","                  foreach ($node as $name => $data) {","                      if (!is_array($data) || !isset($data['_type'])) continue;","                      if ($data['_type'] === 'dir') {","                          $id = htmlspecialchars($prefix . $name);","                          echo '<li class=\"mb-1\">';","                          echo '<div class=\"tree-dir d-flex align-items-center\" data-name=\"' . $id . '\" style=\"cursor:pointer;\">';","                          echo '<span class=\"me-1\">\ud83d\udcc1</span><span class=\"dir-name\">' . htmlspecialchars($name) . '</span>';","                          echo '</div>';","                          if (isset($data['children']) && is_array($data['children']) && !empty($data['children'])) {","                              echo '<div class=\"tree-children ms-3 mt-1\">';","                              render_tree($data['children'], $prefix . $name . '/');","                              echo '</div>';","                          }","                          echo '</li>';","                      } elseif ($data['_type'] === 'file') {","                          $full = htmlspecialchars($prefix . $name);","                          echo '<li class=\"tree-file py-1\" data-path=\"' . $full . '\" style=\"cursor:pointer;\">';","                          echo '\ud83d\udcc4 <span class=\"file-name\">' . htmlspecialchars($name) . '</span>';","                          echo '</li>';","                      }","                  }","                  echo '</ul>';","              }","              render_tree($TREE);","            ?>","          </div>","          <datalist id=\"pathlist\">","            <?php foreach ($ALL_FILES as $p): ?>","              <option value=\"<?= htmlspecialchars($p) ?>\"></option>","            <?php endforeach; ?>","          </datalist>","        </div>","      </div>","    </div>","","    <div class=\"col-lg-8\">","      <div class=\"card shadow-sm\">","        <div class=\"card-body\">","          <form method=\"post\" id=\"dropperForm\">","            <input type=\"hidden\" name=\"_dev_csrf\" value=\"<?= htmlspecialchars(dev_csrf_token()) ?>\">","            <input type=\"hidden\" name=\"_action\" id=\"actionField\" value=\"write\">","","            <div class=\"mb-2\">","              <label class=\"form-label fw-semibold\">Path</label>","              <div class=\"d-flex gap-2\">","                <input type=\"text\" name=\"path\" id=\"pathInput\" class=\"form-control\" list=\"pathlist\" placeholder=\"Select from tree or type\u2026\" value=\"<?= htmlspecialchars($postedPath) ?>\" required>","                <button type=\"button\" class=\"btn btn-outline-secondary\" id=\"loadButton\" title=\"Load existing file contents\">Load</button>","              </div>","              <div class=\"form-text\">Whitelisted: <?= htmlspecialchars(implode(', ', $ALLOWED_DIRS)) ?>.</div>","            </div>","","            <div class=\"mb-3\">","              <label class=\"form-label fw-semibold\">File Contents</label>","              <textarea name=\"code\" id=\"codeArea\" class=\"form-control\" rows=\"20\" spellcheck=\"false\" style=\"font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;\" required><?= htmlspecialchars($loadedCode) ?></textarea>","            </div>","","            <div class=\"form-check mb-2\">","              <input class=\"form-check-input\" type=\"checkbox\" id=\"overwrite\" name=\"overwrite\">","              <label class=\"form-check-label\" for=\"overwrite\">Overwrite if file exists (backup will be created)</label>","            </div>","","            <div class=\"form-check mb-3\">","              <input class=\"form-check-input\" type=\"checkbox\" id=\"makedirs\" name=\"makedirs\" checked>","              <label class=\"form-check-label\" for=\"makedirs\">Create missing folders</label>","            </div>","","            <div class=\"d-flex gap-2\">","              <button class=\"btn btn-primary\" type=\"submit\">Write File</button>","              <a class=\"btn btn-outline-secondary\" href=\"/ui/sidebar.php\">Cancel</a>","            </div>","          </form>","        </div>","      </div>","","      <div class=\"mt-2 small text-muted\">","        Safety: relative paths only; traversal blocked; writes confined to whitelisted folders; backups under","        <code>/backups/&lt;timestamp&gt;/</code>; audit logs in <code>/backups/_write_logs/</code>. Production locked via <code>APP_ENV=production</code>.","      </div>","    </div>","  </div>","</div>","","<script>","(function(){","  const tree = document.getElementById('tree');","  const filter = document.getElementById('treeFilter');","  const pathInput = document.getElementById('pathInput');","  const actionField = document.getElementById('actionField');","  const form = document.getElementById('dropperForm');","  const loadBtn = document.getElementById('loadButton');","","  // Collapse/expand folders + click file to auto-load","  if (tree) {","    tree.addEventListener('click', function(e){","      const dir = e.target.closest('.tree-dir');","      const file = e.target.closest('.tree-file');","      if (dir) {","        const container = dir.nextElementSibling;","        if (container && container.classList.contains('tree-children')) {","          container.style.display = (container.style.display === 'none') ? '' : 'none';","        }","      } else if (file) {","        const p = file.getAttribute('data-path');","        if (p) {","          pathInput.value = p;","          actionField.value = 'load';","          form.submit();","        }","      }","    });","  }","","  // Filter tree","  if (filter && tree) {","    filter.addEventListener('input', function(){","      const q = this.value.toLowerCase().trim();","      const items = tree.querySelectorAll('.tree-dir, .tree-file');","      items.forEach(el => {","        const text = el.textContent.toLowerCase();","        const row = el.classList.contains('tree-dir') ? el.parentElement : el;","        row.style.display = text.includes(q) ? '' : 'none';","      });","    });","  }","","  if (loadBtn) {","    loadBtn.addEventListener('click', function(){","      actionField.value = 'load';","      form.submit();","    });","  }","})();","</script>","","<?php require_once __DIR__ . '/../ui/layout_end.php';"],
"/home/u989675055/domains/emsinfra.co.in/public_html/logout.php": ["<?php","require_once __DIR__ . '/config.php';","logout_user();","header('Location: login.php'); exit;"],
"/home/u989675055/domains/emsinfra.co.in/public_html/config/uom_rules.php": ["","<?php","declare(strict_types=1);","require_once __DIR__ . '/../includes/auth.php';","require_once __DIR__ . '/../includes/db.php';","require_once __DIR__ . '/../includes/rbac.php';","require_login(); require_permission('config.uom_rules');","$pdo=db();","if($_SERVER['REQUEST_METHOD']==='POST'){","  $in = $_POST;","  if(isset($in['create_rule'])){","    $st=$pdo->prepare(\"INSERT INTO uom_rules (name,method,params_json) VALUES (?,?,?)\");","    $st->execute([$in['name'], $in['method'], $in['params_json'] ?: '{}']);","  }","  if(isset($in['map_cat'])){","    $st=$pdo->prepare(\"INSERT INTO item_category_rules (item_category,rule_id) VALUES (?,?) ON DUPLICATE KEY UPDATE rule_id=VALUES(rule_id)\");","    $st->execute([$in['item_category'], (int)$in['rule_id']]);","  }","  header('Location: ./uom_rules.php'); exit;","}","$rules=$pdo->query(\"SELECT * FROM uom_rules ORDER BY id DESC\")->fetchAll(PDO::FETCH_ASSOC);","?><!doctype html><html><head><meta charset=\"utf-8\"><title>UOM Rules</title>","<style>body{font-family:system-ui,Segoe UI,Roboto,Arial,sans-serif;margin:20px}table{border-collapse:collapse;width:100%}th,td{border:1px solid #e5e7eb;padding:6px}</style></head><body>","<h1>UOM Rules</h1>","<form method=\"post\">","  <h3>Create Rule</h3>","  <label>Name <input name=\"name\" required></label>","  <label>Method","    <select name=\"method\">","      <option>by_weight</option><option>by_pcs</option><option>by_area</option><option>by_volume</option><option>custom_multiplier</option>","    </select>","  </label>","  <label>Params JSON <textarea name=\"params_json\" rows=\"3\" cols=\"80\" placeholder='{\"factors\":[\"weight_kg\"],\"scale\":1.0}'></textarea></label>","  <button name=\"create_rule\" value=\"1\">Create</button>","</form>","<hr>","<form method=\"post\">","  <h3>Map Item Category \u2192 Rule</h3>","  <label>Item Category <input name=\"item_category\" required placeholder=\"plate, structure, consumable, ...\"></label>","  <label>Rule","    <select name=\"rule_id\">","      <?php foreach($rules as $r): ?><option value=\"<?= (int)$r['id'] ?>\"><?= htmlspecialchars($r['name']) ?> (#<?= (int)$r['id'] ?>)</option><?php endforeach; ?>","    </select>","  </label>","  <button name=\"map_cat\" value=\"1\">Save Mapping</button>","</form>","<hr>","<h3>Existing Rules</h3>","<table><thead><tr><th>ID</th><th>Name</th><th>Method</th><th>Params</th><th>Status</th></tr></thead><tbody>","<?php foreach($rules as $r): ?><tr>","<td><?= (int)$r['id'] ?></td><td><?= htmlspecialchars($r['name']) ?></td><td><?= htmlspecialchars($r['method']) ?></td>","<td><pre style=\"white-space:pre-wrap\"><?= htmlspecialchars($r['params_json']) ?></pre></td>","<td><?= htmlspecialchars($r['status']) ?></td>","</tr><?php endforeach; ?></tbody></table>","</body></html>"],
"/home/u989675055/domains/emsinfra.co.in/public_html/config/masterdata_console.php": ["","<?php","declare(strict_types=1);","require_once __DIR__.'/../includes/auth.php';","require_once __DIR__.'/../includes/db.php';","require_once __DIR__.'/../includes/rbac.php';","require_login(); require_permission('config.masterdata');","$pdo=db();","if($_SERVER['REQUEST_METHOD']==='POST'){","  if(isset($_POST['add_cat'])){","    $st=$pdo->prepare(\"INSERT INTO item_categories (code,name,density_kg_per_m3,notes) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE name=VALUES(name), density_kg_per_m3=VALUES(density_kg_per_m3), notes=VALUES(notes)\");","    $st->execute([$_POST['code'],$_POST['name'],$_POST['density']?:null,$_POST['notes']?:null]);","  }","  if(isset($_POST['add_sec'])){","    $st=$pdo->prepare(\"INSERT INTO section_density (section_code,kg_per_m) VALUES (?,?) ON DUPLICATE KEY UPDATE kg_per_m=VALUES(kg_per_m)\");","    $st->execute([$_POST['section_code'],$_POST['kg_per_m']]);","  }","  header('Location: ./masterdata_console.php'); exit;","}","$cats=$pdo->query(\"SELECT * FROM item_categories ORDER BY code\")->fetchAll(PDO::FETCH_ASSOC);","$secs=$pdo->query(\"SELECT * FROM section_density ORDER BY section_code\")->fetchAll(PDO::FETCH_ASSOC);","?><!doctype html><html><head><meta charset=\"utf-8\"><title>Master Data Tidy</title>","<style>body{font-family:system-ui,Segoe UI,Roboto,Arial,sans-serif;margin:20px}table{border-collapse:collapse;width:100%}th,td{border:1px solid #e5e7eb;padding:6px}</style></head><body>","<h1>Master Data Tidy</h1>","<h3>Item Categories</h3>","<form method=\"post\">","  <input type=\"hidden\" name=\"add_cat\" value=\"1\">","  <label>Code <input name=\"code\" required></label>","  <label>Name <input name=\"name\" required></label>","  <label>Density (kg/m\u00b3) <input name=\"density\" type=\"number\" step=\"0.000001\"></label>","  <label>Notes <input name=\"notes\"></label>","  <button>Save</button>","</form>","<table><thead><tr><th>Code</th><th>Name</th><th>Density</th><th>Notes</th></tr></thead><tbody>","<?php foreach($cats as $c): ?><tr><td><?= htmlspecialchars($c['code']) ?></td><td><?= htmlspecialchars($c['name']) ?></td><td><?= htmlspecialchars((string)$c['density_kg_per_m3']) ?></td><td><?= htmlspecialchars((string)$c['notes']) ?></td></tr><?php endforeach; ?>","</tbody></table>","<hr>","<h3>Section Density (kg/m)</h3>","<form method=\"post\">","  <input type=\"hidden\" name=\"add_sec\" value=\"1\">","  <label>Section Code <input name=\"section_code\" required placeholder=\"ISMB100\"></label>","  <label>kg/m <input name=\"kg_per_m\" type=\"number\" step=\"0.000001\" required></label>","  <button>Save</button>","</form>","<table><thead><tr><th>Section</th><th>kg/m</th></tr></thead><tbody>","<?php foreach($secs as $s): ?><tr><td><?= htmlspecialchars($s['section_code']) ?></td><td><?= htmlspecialchars((string)$s['kg_per_m']) ?></td></tr><?php endforeach; ?>","</tbody></table>","</body></html>"]
}
